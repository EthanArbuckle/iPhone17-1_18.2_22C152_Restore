id BAPrivateAllKeys()
{
  void *v0;
  void v2[3];
  uint64_t vars8;

  v2[0] = @"analyticsID";
  v2[1] = @"userPrivateSeed";
  v2[2] = @"contentPrivateSeed";
  v0 = +[NSArray arrayWithObjects:v2 count:3];

  return v0;
}

id BALog()
{
  if (qword_327CC8[0] != -1) {
    dispatch_once(qword_327CC8, &stru_2F6A28);
  }
  v0 = (void *)qword_327CC0;

  return v0;
}

void sub_2EF8(id a1)
{
  qword_327CC0 = (uint64_t)os_log_create("com.apple.iBooks", "BookAnalytics");

  _objc_release_x1();
}

void sub_30F0(uint64_t a1)
{
  v2 = dispatch_group_create();
  v3 = +[NSMutableDictionary dictionaryWithCapacity:3];
  dispatch_group_enter(v2);
  v4 = +[BDSSecureManager sharedManager];
  v5 = [v4 userDataManager];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_33DC;
  v26[3] = &unk_2F6A50;
  id v6 = v3;
  id v27 = v6;
  v7 = v2;
  v28 = v7;
  [v5 userDatumForKey:@"analyticsID" completion:v26];

  dispatch_group_enter(v7);
  v8 = +[BDSSecureManager sharedManager];
  v9 = [v8 userDataManager];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_3500;
  v23[3] = &unk_2F6A50;
  id v10 = v6;
  id v24 = v10;
  v11 = v7;
  v25 = v11;
  [v9 userDatumForKey:@"contentPrivateSeed" completion:v23];

  dispatch_group_enter(v11);
  v12 = +[BDSSecureManager sharedManager];
  v13 = [v12 userDataManager];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_3624;
  v20[3] = &unk_2F6A50;
  id v14 = v10;
  id v21 = v14;
  v22 = v11;
  v15 = v11;
  [v13 userDatumForKey:@"userPrivateSeed" completion:v20];

  v16 = [*(id *)(a1 + 32) workQueue];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_3748;
  v18[3] = &unk_2F6A78;
  v18[4] = *(void *)(a1 + 32);
  id v19 = v14;
  id v17 = v14;
  dispatch_group_notify(v15, v16, v18);
}

void sub_33DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = BALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = [v5 value];
    int v10 = 138412546;
    v11 = v8;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BAPrivateDataSource - analyticsID Changed to: %@, error:%@", (uint8_t *)&v10, 0x16u);
  }
  v9 = [v5 value];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:@"analyticsID"];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_3500(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = BALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = [v5 value];
    int v10 = 138412546;
    v11 = v8;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BAPrivateDataSource - privateContentSeed Changed to: %@, error:%@", (uint8_t *)&v10, 0x16u);
  }
  v9 = [v5 value];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:@"contentPrivateSeed"];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_3624(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = BALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = [v5 value];
    int v10 = 138412546;
    v11 = v8;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BAPrivateDataSource - privateUserSeed Changed to: %@, error:%@", (uint8_t *)&v10, 0x16u);
  }
  v9 = [v5 value];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:@"userPrivateSeed"];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_3748(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 privateDataChanged:*(void *)(a1 + 40)];
}

void sub_3850(uint64_t a1)
{
  id v2 = dispatch_group_create();
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  BAPrivateAllKeys();
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v4 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v22;
    do
    {
      v7 = 0;
      do
      {
        if (*(void *)v22 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void *)(*((void *)&v21 + 1) + 8 * (void)v7);
        dispatch_group_enter(v2);
        v9 = *(void **)(a1 + 32);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_3A8C;
        v17[3] = &unk_2F6AC8;
        id v18 = v3;
        uint64_t v19 = v8;
        v20 = v2;
        [v9 fetchPrivateDataForKey:v8 completion:v17];

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v5);
  }

  int v10 = [*(id *)(a1 + 32) workQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_3AD0;
  block[3] = &unk_2F6AF0;
  id v11 = *(id *)(a1 + 40);
  id v15 = v3;
  id v16 = v11;
  id v12 = v3;
  dispatch_group_notify(v2, v10, block);
}

void sub_3A8C(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setObject:a2 forKeyedSubscript:*(void *)(a1 + 40)];
  id v3 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v3);
}

void sub_3AD0(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void))v2 + 2))(v2, *(void *)(a1 + 32));
    id v2 = v3;
  }
}

void sub_3C14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = BALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v9 = [v5 value];
    *(_DWORD *)buf = 138412802;
    uint64_t v30 = v8;
    __int16 v31 = 2112;
    v32 = v9;
    __int16 v33 = 2112;
    id v34 = v6;
  }
  uint64_t v10 = [v5 value];
  if (v10
    && (id v11 = (void *)v10,
        [v5 value],
        id v12 = objc_claimAutoreleasedReturnValue(),
        id v13 = [v12 length],
        v12,
        v11,
        v13))
  {
    id v14 = [v5 value];
    id v15 = objc_retainBlock(*(id *)(a1 + 40));
    id v16 = v15;
    if (v15) {
      (*((void (**)(id, id, id))v15 + 2))(v15, v14, v6);
    }
  }
  else
  {
    id v17 = +[NSUUID UUID];
    id v18 = [v17 UUIDString];

    if (([*(id *)(a1 + 32) isEqualToString:@"userPrivateSeed"] & 1) != 0
      || [*(id *)(a1 + 32) isEqualToString:@"contentPrivateSeed"])
    {
      uint64_t v19 = BAGenerateSeed();

      id v18 = (void *)v19;
    }
    v20 = BALog();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      uint64_t v30 = v21;
      __int16 v31 = 2112;
      v32 = v18;
    }

    long long v22 = +[BDSSecureManager sharedManager];
    long long v23 = [v22 userDataManager];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_3EFC;
    v26[3] = &unk_2F6B40;
    uint64_t v24 = *(void *)(a1 + 32);
    id v25 = *(id *)(a1 + 40);
    id v27 = v18;
    id v28 = v25;
    id v14 = v18;
    [v23 setUserDataValue:v14 forKey:v24 completion:v26];

    id v16 = v28;
  }
}

void sub_3EFC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, id))v3 + 2))(v3, *(void *)(a1 + 32), v5);
  }
}

void sub_4270(uint64_t a1)
{
  dispatch_group_t v2 = dispatch_group_create();
  id v3 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_438C;
  v8[3] = &unk_2F6BB8;
  dispatch_group_t v9 = v2;
  id v4 = v2;
  [v3 enumerateKeysAndObjectsUsingBlock:v8];
  id v5 = [*(id *)(a1 + 40) workQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_450C;
  v6[3] = &unk_2F6BE0;
  id v7 = *(id *)(a1 + 48);
  dispatch_group_notify(v4, v5, v6);
}

void sub_438C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = BALog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    id v13 = v5;
    __int16 v14 = 2112;
    id v15 = v6;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "syncPrivateData: key: %@ value: %@", buf, 0x16u);
  }

  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  uint64_t v8 = +[BDSSecureManager sharedManager];
  dispatch_group_t v9 = [v8 userDataManager];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_4504;
  v10[3] = &unk_2F6B90;
  id v11 = *(id *)(a1 + 32);
  [v9 setUserDataValue:v6 forKey:v5 completion:v10];
}

void sub_4504(uint64_t a1)
{
}

void sub_450C(uint64_t a1)
{
  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    dispatch_group_t v2 = v1;
    v1[2]();
    v1 = v2;
  }
}

void sub_4690(uint64_t a1)
{
  dispatch_group_t v2 = objc_opt_new();
  id v3 = [v2 publisherFromStartTime:0.0];

  id v4 = [v3 last];

  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x2020000000;
  char v12 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_47D0;
  v8[3] = &unk_2F6C70;
  void v8[4] = &v9;
  id v5 = [v4 sinkWithCompletion:&stru_2F6C48 receiveInput:v8];
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, void))v6 + 2))(v6, *((unsigned __int8 *)v10 + 24));
  }

  _Block_object_dispose(&v9, 8);
}

void sub_47B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_47D0(uint64_t a1, void *a2)
{
  id v3 = [a2 eventBody];
  if (v3) {
    LOBYTE(v3) = [v3 isStarting];
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (_BYTE)v3;

  return _objc_release_x1();
}

id BAObfuscateID(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 dataUsingEncoding:4];
  id v5 = (void *)v4;
  id v6 = 0;
  if (v3 && v4)
  {
    id v7 = +[NSNull null];
    if ([v3 isEqual:v7])
    {

LABEL_6:
      id v6 = 0;
      goto LABEL_8;
    }
    uint64_t v8 = +[NSNull null];
    unsigned __int8 v9 = [v5 isEqual:v8];

    if (v9) {
      goto LABEL_6;
    }
    memset(&v15, 0, sizeof(v15));
    id v10 = v5;
    CCHmacInit(&v15, 2u, objc_msgSend(v10, "bytes", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0),
      (size_t)[v10 length]);
    uint64_t v11 = (const char *)[v3 UTF8String];
    size_t v12 = strlen(v11);
    CCHmacUpdate(&v15, v11, v12);
    memset(macOut, 0, sizeof(macOut));
    CCHmacFinal(&v15, macOut);
    id v13 = +[NSData dataWithBytes:macOut length:32];
    id v6 = [v13 base64EncodedStringWithOptions:0];
  }
LABEL_8:

  return v6;
}

id BAGenerateSeed()
{
  if (SecRandomCopyBytes(kSecRandomDefault, 0x200uLL, bytes))
  {
    id v0 = 0;
  }
  else
  {
    v1 = +[NSData dataWithBytes:bytes length:512];
    dispatch_group_t v2 = [v1 base64EncodedDataWithOptions:0];
    id v0 = [objc_alloc((Class)NSString) initWithData:v2 encoding:4];
  }

  return v0;
}

uint64_t BARoundIntegerToSignificantFigures(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (a1 >> 63) | 1;
  uint64_t v3 = 1;
  if (a2 >= 1)
  {
    do
    {
      v3 *= 10;
      --a2;
    }
    while (a2);
  }
  uint64_t v4 = v2 * a1;
  if (v2 * a1 >= v3)
  {
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = v4;
      v4 /= 10;
      v6 *= 10;
    }
    while (v4 >= v3);
    BOOL v5 = v7 - 10 * v4 > 4;
  }
  else
  {
    BOOL v5 = 0;
    uint64_t v6 = 1;
  }
  return v6 * v2 * (v5 + v4);
}

uint64_t sub_4B74(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_315508, &enum case for SessionGroup.default(_:));
}

uint64_t static BrowseCollectionScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315500, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_315508, a1);
}

uint64_t sub_4BD4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_4C0C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_315528, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t sub_4C34(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  sub_7CA8(v6, a3);
  uint64_t v7 = sub_4BD4(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  unsigned __int8 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

uint64_t static BrowseCollectionScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315520, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_315528, a1);
}

uint64_t sub_4CF8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_4BD4(v7, a3);
  unsigned __int8 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t BrowseCollectionScreenViewEvent.collectionSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_315DD8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_4E04(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t BrowseCollectionScreenViewEvent.collectionSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_315DD8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ScrubData.startPosition.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrowseCollectionScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrowseCollectionScreenViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_315E90);
}

uint64_t BrowseCollectionScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrowseCollectionScreenViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrowseCollectionScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrowseCollectionScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrowseCollectionScreenViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrowseCollectionScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for BrowseCollectionScreenViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  unsigned __int8 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t BrowseCollectionScreenViewEvent.Model.collectionSummaryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t BrowseCollectionScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrowseCollectionScreenViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_315F40);
}

uint64_t sub_5338(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseCollectionScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseCollectionScreenViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrowseCollectionScreenViewEvent.Model.init(collectionSummaryData:eventData:timedData:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for BrowseCollectionScreenViewEvent.Model(0);
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  id v10 = (char *)a4 + *(int *)(v7 + 24);
  uint64_t v11 = sub_27D7F0();
  size_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

BOOL sub_54C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_54DC()
{
  Swift::UInt v1 = *v0;
  sub_27E400();
  sub_27E410(v1);
  return sub_27E420();
}

void sub_5524()
{
  sub_27E410(*v0);
}

Swift::Int sub_5550()
{
  Swift::UInt v1 = *v0;
  sub_27E400();
  sub_27E410(v1);
  return sub_27E420();
}

unint64_t sub_5594()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_55FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_7B3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_5624()
{
  return 0;
}

void sub_5630(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_563C(uint64_t a1)
{
  unint64_t v2 = sub_5944();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_5678(uint64_t a1)
{
  unint64_t v2 = sub_5944();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BrowseCollectionScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_315DF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_5944();
  sub_27E440();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_5998();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for BrowseCollectionScreenViewEvent.Model(0);
    v10[6] = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v10[5] = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_5900(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_5944()
{
  unint64_t result = qword_315DF8;
  if (!qword_315DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315DF8);
  }
  return result;
}

unint64_t sub_5998()
{
  unint64_t result = qword_315E00;
  if (!qword_315E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315E00);
  }
  return result;
}

uint64_t BrowseCollectionScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_27D7F0();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_4E04(&qword_315E18);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseCollectionScreenViewEvent.Model(0);
  __chkstk_darwin();
  size_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  __int16 v31 = a1;
  sub_5900(a1, v13);
  sub_5944();
  uint64_t v30 = v9;
  uint64_t v14 = v32;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v31);
  }
  uint64_t v32 = v10;
  CCHmacContext v15 = v12;
  long long v23 = v4;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  char v35 = 0;
  sub_5EE4();
  uint64_t v18 = v29;
  sub_27E260();
  *(void *)CCHmacContext v15 = v36;
  char v34 = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v15[*(int *)(v32 + 20)], v7, v5);
  char v33 = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v19 = v23;
  uint64_t v20 = v26;
  uint64_t v22 = 0;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v18);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v15[*(int *)(v32 + 24)], v19, v20);
  sub_5F80((uint64_t)v15, v25);
  sub_5E94((uint64_t)v31);
  return sub_5FE4((uint64_t)v15);
}

uint64_t sub_5E94(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_5EE4()
{
  unint64_t result = qword_315E20;
  if (!qword_315E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315E20);
  }
  return result;
}

uint64_t sub_5F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCollectionScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5FE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseCollectionScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6040@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseCollectionScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_6058(void *a1)
{
  return BrowseCollectionScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_6070@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315500, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_315508, a1);
}

uint64_t sub_60AC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315520, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_315528, a1);
}

uint64_t sub_60E4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_4BD4(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_618C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseCollectionScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_315DD8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6964);
}

uint64_t sub_6964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for BrowseCollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6AD0);
}

uint64_t sub_6AD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_315DD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_6C34()
{
  sub_6D38();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_6D38()
{
  if (!qword_315EA0)
  {
    sub_5EE4();
    sub_5998();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_315EA0);
    }
  }
}

void sub_6DA0()
{
  if (!qword_315EA8)
  {
    sub_27D7C0();
    sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_315EA8);
    }
  }
}

void sub_6E6C()
{
  if (!qword_315EB0)
  {
    sub_27D7F0();
    sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_315EB0);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseCollectionScreenViewEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_27D7C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_27D7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for BrowseCollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for BrowseCollectionScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *assignWithCopy for BrowseCollectionScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

void *initializeWithTake for BrowseCollectionScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *assignWithTake for BrowseCollectionScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseCollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_74CC);
}

uint64_t sub_74CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for BrowseCollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_760C);
}

void *sub_760C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_7738()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for SCNetworkReachability(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_7838(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for BrowseCollectionScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseCollectionScreenViewEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseCollectionScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x79ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_7A14(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_7A1C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BrowseCollectionScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for BrowseCollectionScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_7A38()
{
  unint64_t result = qword_315F90;
  if (!qword_315F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315F90);
  }
  return result;
}

unint64_t sub_7A90()
{
  unint64_t result = qword_315F98;
  if (!qword_315F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315F98);
  }
  return result;
}

unint64_t sub_7AE8()
{
  unint64_t result = qword_315FA0;
  if (!qword_315FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FA0);
  }
  return result;
}

uint64_t sub_7B3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000002ADB40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t *sub_7CA8(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t MediaData.mediaID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaData.mediaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t BrickData.positionInSection.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t BrickData.positionInSection.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*MediaData.mediaType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

BookAnalytics::SingleCollectionData __swiftcall SingleCollectionData.init(collectionID:collectionItemCount:)(Swift::String collectionID, Swift::Int32 collectionItemCount)
{
  *(Swift::String *)uint64_t v2 = collectionID;
  *(_DWORD *)(v2 + 16) = collectionItemCount;
  result.collectionID = collectionID;
  result.collectionItemCount = collectionItemCount;
  return result;
}

BOOL static SingleCollectionData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  int v3 = *(_DWORD *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_27E370();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

BOOL sub_7E10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_7E28()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_7E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_8820(a1, a2);
  *a3 = result;
  return result;
}

void sub_7E98(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_7EA4(uint64_t a1)
{
  unint64_t v2 = sub_8090();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7EE0(uint64_t a1)
{
  unint64_t v2 = sub_8090();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionIDData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_315FA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_8090();
  sub_27E440();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_27E2F0();
  if (!v7)
  {
    char v11 = 1;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_8090()
{
  unint64_t result = qword_315FB0;
  if (!qword_315FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FB0);
  }
  return result;
}

uint64_t CollectionIDData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_315FB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_8090();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  int v12 = sub_27E270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_82C8()
{
  unint64_t result = qword_315FC0;
  if (!qword_315FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FC0);
  }
  return result;
}

unint64_t sub_8320()
{
  unint64_t result = qword_315FC8;
  if (!qword_315FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FC8);
  }
  return result;
}

uint64_t sub_8378()
{
  return sub_27D340();
}

uint64_t sub_8390()
{
  return sub_27D350();
}

uint64_t sub_83A8()
{
  return sub_27D330();
}

uint64_t sub_83C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionIDData.init(from:)(a1, a2);
}

uint64_t sub_83D8(void *a1)
{
  return CollectionIDData.encode(to:)(a1);
}

uint64_t destroy for CollectionIDData()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13BookAnalytics16CollectionIDDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CollectionIDData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for CollectionIDData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CollectionIDData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionIDData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionIDData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionIDData()
{
  return &type metadata for CollectionIDData;
}

uint64_t getEnumTagSinglePayload for CollectionIDData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CollectionIDData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x86D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_86FC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CollectionIDData.CodingKeys()
{
  return &type metadata for CollectionIDData.CodingKeys;
}

unint64_t sub_871C()
{
  unint64_t result = qword_315FD0;
  if (!qword_315FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FD0);
  }
  return result;
}

unint64_t sub_8774()
{
  unint64_t result = qword_315FD8;
  if (!qword_315FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FD8);
  }
  return result;
}

unint64_t sub_87CC()
{
  unint64_t result = qword_315FE0;
  if (!qword_315FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_315FE0);
  }
  return result;
}

uint64_t sub_8820(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002ADD70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_8928(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_315FE8, &enum case for SessionGroup.default(_:));
}

uint64_t static ThemeCustomizeViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315540, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_315FE8, a1);
}

uint64_t sub_8988(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_316000, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ThemeCustomizeViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315548, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316000, a1);
}

uint64_t ThemesAndSettingViewEvent.themesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316018);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ThemesAndSettingViewEvent.themesData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316018);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ThemeCustomizeViewEvent.textData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemeCustomizeViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3160D0);
}

uint64_t ThemeCustomizeViewEvent.textData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizeViewEvent.textData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizeViewEvent.layoutOptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316028);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizeViewEvent.layoutOptionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316028);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizeViewEvent.layoutOptionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizeViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizeViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizeViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizeViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizeViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizeViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizeViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ThemeCustomizeViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t ThemesAndSettingViewEvent.Model.themesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ThemeCustomizeViewEvent.Model.textData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 40);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

__n128 ThemeCustomizeViewEvent.Model.layoutOptionData.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 76);
  unsigned __int16 v3 = *(_WORD *)(v1 + 84);
  __n128 result = *(__n128 *)(v1 + 60);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u16[4] = v3;
  return result;
}

uint64_t ThemeCustomizeViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemeCustomizeViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_316188);
}

uint64_t ThemeCustomizeViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizeViewEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizeViewEvent.Model.init(themesData:textData:layoutOptionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  char v14 = *((unsigned char *)a2 + 16);
  uint64_t v15 = *(void *)(a3 + 16);
  __int16 v16 = *(_WORD *)(a3 + 24);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(void *)(a6 + 16) = v9;
  *(void *)(a6 + 24) = v10;
  *(unsigned char *)(a6 + 32) = v11;
  *(void *)(a6 + 40) = v12;
  *(void *)(a6 + 48) = v13;
  *(unsigned char *)(a6 + 56) = v14;
  *(_OWORD *)(a6 + 60) = *(_OWORD *)a3;
  *(void *)(a6 + 76) = v15;
  *(_WORD *)(a6 + 84) = v16;
  uint64_t v17 = type metadata accessor for ThemeCustomizeViewEvent.Model(0);
  uint64_t v18 = a6 + *(int *)(v17 + 28);
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a4, v19);
  uint64_t v20 = a6 + *(int *)(v17 + 32);
  uint64_t v21 = sub_27D7F0();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);

  return v22(v20, a5, v21);
}

uint64_t sub_9450()
{
  uint64_t result = 0x614473656D656874;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6174614474786574;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_9500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C1AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_9528(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_9534(uint64_t a1)
{
  unint64_t v2 = sub_98A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9570(uint64_t a1)
{
  unint64_t v2 = sub_98A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ThemeCustomizeViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_316030);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_98A0();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  long long v19 = *v3;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  char v22 = v11;
  char v18 = 0;
  sub_98F4();
  sub_27E330();
  if (!v2)
  {
    uint64_t v12 = *((void *)v3 + 6);
    char v13 = *((unsigned char *)v3 + 56);
    *(void *)&long long v19 = *((void *)v3 + 5);
    *((void *)&v19 + 1) = v12;
    LOBYTE(v20) = v13;
    char v18 = 1;
    sub_9948();
    sub_27E330();
    uint64_t v14 = *(void *)((char *)v3 + 76);
    __int16 v15 = *((_WORD *)v3 + 42);
    long long v19 = *(long long *)((char *)v3 + 60);
    uint64_t v20 = v14;
    LOWORD(v21) = v15;
    char v18 = 2;
    sub_999C();
    sub_27E2C0();
    type metadata accessor for ThemeCustomizeViewEvent.Model(0);
    LOBYTE(v19) = 3;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v19) = 4;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_98A0()
{
  unint64_t result = qword_316038;
  if (!qword_316038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316038);
  }
  return result;
}

unint64_t sub_98F4()
{
  unint64_t result = qword_316040;
  if (!qword_316040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316040);
  }
  return result;
}

unint64_t sub_9948()
{
  unint64_t result = qword_316048;
  if (!qword_316048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316048);
  }
  return result;
}

unint64_t sub_999C()
{
  unint64_t result = qword_316050;
  if (!qword_316050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316050);
  }
  return result;
}

uint64_t ThemeCustomizeViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = sub_27D7F0();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4E04(&qword_316058);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ThemeCustomizeViewEvent.Model(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  v41 = a1;
  sub_5900(a1, v13);
  sub_98A0();
  v40 = v9;
  uint64_t v14 = v42;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v41);
  }
  v42 = v7;
  char v33 = v4;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  char v47 = 0;
  sub_9FA4();
  sub_27E260();
  uint64_t v18 = v44;
  uint64_t v19 = v45;
  char v20 = v46;
  *(_OWORD *)uint64_t v15 = v43;
  *(void *)(v15 + 16) = v18;
  *(void *)(v15 + 24) = v19;
  *(unsigned char *)(v15 + 32) = v20;
  char v47 = 1;
  sub_9FF8();
  sub_27E260();
  uint64_t v21 = v16;
  uint64_t v22 = *((void *)&v43 + 1);
  char v23 = v44;
  *(void *)(v15 + 40) = v43;
  *(void *)(v15 + 48) = v22;
  *(unsigned char *)(v15 + 56) = v23;
  char v47 = 2;
  sub_A04C();
  sub_27E1F0();
  v32[1] = 0;
  uint64_t v24 = v44;
  __int16 v25 = v45;
  *(_OWORD *)(v15 + 60) = v43;
  *(void *)(v15 + 76) = v24;
  *(_WORD *)(v15 + 84) = v25;
  LOBYTE(v43) = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v26 = v42;
  uint64_t v27 = v5;
  sub_27E260();
  uint64_t v28 = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v10 + 28), v26, v27);
  LOBYTE(v43) = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v29 = v33;
  uint64_t v30 = v36;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v40, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v15 + *(int *)(v28 + 32), v29, v30);
  sub_A0A0(v15, v35);
  sub_5E94((uint64_t)v41);
  return sub_A104(v15);
}

unint64_t sub_9FA4()
{
  unint64_t result = qword_316060;
  if (!qword_316060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316060);
  }
  return result;
}

unint64_t sub_9FF8()
{
  unint64_t result = qword_316068;
  if (!qword_316068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316068);
  }
  return result;
}

unint64_t sub_A04C()
{
  unint64_t result = qword_316070;
  if (!qword_316070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316070);
  }
  return result;
}

uint64_t sub_A0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThemeCustomizeViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A104(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ThemeCustomizeViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A160@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ThemeCustomizeViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_A178(void *a1)
{
  return ThemeCustomizeViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_A190@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315540, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_315FE8, a1);
}

uint64_t sub_A1C8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315548, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316000, a1);
}

uint64_t sub_A200@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ThemeCustomizeViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316018);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316020);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316028);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ThemeCustomizeViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ADFC);
}

uint64_t sub_ADFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316020);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316028);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for ThemeCustomizeViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B008);
}

uint64_t sub_B008(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316018);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316020);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316028);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_B20C()
{
  sub_B430(319, &qword_3160E0, (void (*)(void))sub_9FA4, (void (*)(void))sub_98F4);
  if (v0 <= 0x3F)
  {
    sub_B430(319, &qword_3160E8, (void (*)(void))sub_9FF8, (void (*)(void))sub_9948);
    if (v1 <= 0x3F)
    {
      sub_B430(319, (unint64_t *)&unk_3160F0, (void (*)(void))sub_A04C, (void (*)(void))sub_999C);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_B430(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    long long v10 = *(_OWORD *)((char *)a2 + 60);
    *(_OWORD *)(a1 + 70) = *(_OWORD *)((char *)a2 + 70);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v21 = a1 + v11;
    uint64_t v12 = (uint64_t)a2 + v11;
    *(_OWORD *)(a1 + 60) = v10;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v21, v12, v13);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v8 = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 60) = v8;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  *(_OWORD *)(a1 + 60) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BBBC);
}

uint64_t sub_BBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ThemeCustomizeViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BCFC);
}

uint64_t sub_BCFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_BE28()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ThemeCustomizeViewEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ThemeCustomizeViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC06CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeCustomizeViewEvent.Model.CodingKeys()
{
  return &type metadata for ThemeCustomizeViewEvent.Model.CodingKeys;
}

unint64_t sub_C0A8()
{
  unint64_t result = qword_3161D0;
  if (!qword_3161D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161D0);
  }
  return result;
}

unint64_t sub_C100()
{
  unint64_t result = qword_3161D8;
  if (!qword_3161D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161D8);
  }
  return result;
}

unint64_t sub_C158()
{
  unint64_t result = qword_3161E0;
  if (!qword_3161E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161E0);
  }
  return result;
}

uint64_t sub_C1AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614473656D656874 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614474786574 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADD90 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::ICloudDriveStatus_optional __swiftcall ICloudDriveStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F6D78;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t DoNotDisturbStatus.rawValue.getter()
{
  uint64_t v1 = 28271;
  if (*v0 != 1) {
    uint64_t v1 = 6710895;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_C48C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2F754(*a1, *a2);
}

unint64_t sub_C49C()
{
  unint64_t result = qword_3161E8;
  if (!qword_3161E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161E8);
  }
  return result;
}

Swift::Int sub_C4F0()
{
  return sub_27E420();
}

uint64_t sub_C580()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_C5FC()
{
  return sub_27E420();
}

BookAnalytics::ICloudDriveStatus_optional sub_C688(Swift::String *a1)
{
  return ICloudDriveStatus.init(rawValue:)(*a1);
}

void sub_C694(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 28271;
  if (v2 != 1)
  {
    uint64_t v5 = 6710895;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_C6E0()
{
  return sub_27DED0();
}

uint64_t sub_C740()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ICloudDriveStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICloudDriveStatus()
{
  return &type metadata for ICloudDriveStatus;
}

unint64_t sub_C894()
{
  unint64_t result = qword_3161F0;
  if (!qword_3161F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161F0);
  }
  return result;
}

BookAnalytics::Location_optional __swiftcall Location.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F6DE0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t Location.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6553656369766564;
      break;
    case 2:
      unint64_t result = 0x656D6F636C6577;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C9E0(unsigned __int8 *a1, char *a2)
{
  return sub_2CD40(*a1, *a2);
}

unint64_t sub_C9F0()
{
  unint64_t result = qword_3161F8;
  if (!qword_3161F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3161F8);
  }
  return result;
}

Swift::Int sub_CA44()
{
  return sub_20B584();
}

uint64_t sub_CA4C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_CB1C()
{
  return sub_25D834();
}

BookAnalytics::Location_optional sub_CB24(Swift::String *a1)
{
  return Location.init(rawValue:)(*a1);
}

void sub_CB30(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE0073676E697474;
      uint64_t v3 = 0x6553656369766564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656D6F636C6577;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000000002AC9F0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_CBD8()
{
  return sub_27DED0();
}

uint64_t sub_CC38()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for Location(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Location(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCDE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Location()
{
  return &type metadata for Location;
}

unint64_t sub_CE1C()
{
  unint64_t result = qword_316200;
  if (!qword_316200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316200);
  }
  return result;
}

uint64_t AppAnalyticsData.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = result;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

void *AppAnalyticsData.wrappedValue.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_D328(v3, v4);
  sub_D328(v3, v4);
  sub_D0D8(v3, v4, &v10);
  sub_D334(v3, v4);
  swift_bridgeObjectRelease();
  sub_D334(v3, v4);
  uint64_t v5 = v10;
  if (!*(void *)(v10 + 16))
  {
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain_n();
  unint64_t v6 = sub_DB90(v2, v1);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return (void *)v8;
}

uint64_t sub_CFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_CFD4@<X0>(void *a1@<X8>)
{
  sub_E444();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_D024@<X0>(void *a1@<X8>)
{
  sub_E444();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_D074()
{
  return sub_27DB10();
}

uint64_t sub_D0D8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_27DAF0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
    return sub_D328(a1, 1);
  }
  else
  {
    sub_D328(a1, 0);
    os_log_type_t v10 = sub_27DFB0();
    uint64_t v11 = sub_27DB50();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v16[1] = a3;
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[2] = sub_12D450(0x6361745361746144, 0xE90000000000006BLL, &v17);
      sub_27E050();
      _os_log_impl(&dword_0, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_27DAE0();
    swift_getAtKeyPath();
    sub_D334(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_D328(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_D334(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_D340(uint64_t a1, char a2)
{
  uint64_t v4 = sub_27DAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_27DFB0();
    uint64_t v9 = sub_27DB50();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_12D450(0xD000000000000027, 0x80000000002ADE10, &v14);
      sub_27E050();
      _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_27DAE0();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_D548(uint64_t a1, char a2)
{
  uint64_t v4 = sub_27DAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_27DFB0();
    uint64_t v9 = sub_27DB50();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_12D450(0xD00000000000001BLL, 0x80000000002ADDB0, &v14);
      sub_27E050();
      _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_27DAE0();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_D754(void *a1, char a2)
{
  uint64_t v4 = sub_27DAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v12 = a1;
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_27DFB0();
    uint64_t v9 = sub_27DB50();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_12D450(0xD000000000000013, 0x80000000002ADDF0, &v15);
      sub_27E050();
      _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_27DAE0();
    swift_getAtKeyPath();
    sub_E120(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return (uint64_t)a1;
}

uint64_t sub_D968@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_27DAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E050(v2, (uint64_t)v16);
  if (v17 == 1) {
    return sub_E0B8((uint64_t)v16, a1);
  }
  os_log_type_t v9 = sub_27DFB0();
  os_log_type_t v10 = sub_27DB50();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v14[1] = a1;
    uint64_t v15 = v13;
    *(_DWORD *)id v12 = 136315138;
    v14[2] = sub_12D450(0xD000000000000017, 0x80000000002ADDD0, &v15);
    sub_27E050();
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_27DAE0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_DB90(uint64_t a1, uint64_t a2)
{
  sub_27E400();
  swift_bridgeObjectRetain();
  sub_27DDF0();
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_27E420();

  return sub_E1E8(a1, a2, v4);
}

uint64_t initializeBufferWithCopyOfBuffer for ThemesData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AppAnalyticsData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_D334(v2, v3);
}

uint64_t initializeWithCopy for AppAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_D328(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for AppAnalyticsData(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_D328(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_D334(v5, v6);
  return a1;
}

__n128 initializeWithTake for AppAnalyticsData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_D334(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppAnalyticsData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppAnalyticsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppAnalyticsData()
{
  return &type metadata for AppAnalyticsData;
}

uint64_t getEnumTagSinglePayload for ContextAssetInfoAnalytics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4)
  {
    unsigned int v2 = a2 + 12;
    if (a2 + 12 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 12;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 12;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0xDF08);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 12;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 0xC;
  unsigned int v9 = v7 - 12;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ContextAssetInfoAnalytics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 12;
  if (a3 + 12 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v7 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0xDFF0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

uint64_t sub_E018(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0xC) {
    return v1 - 11;
  }
  else {
    return 0;
  }
}

unsigned char *sub_E02C(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 11;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextAssetInfoAnalytics()
{
  return &type metadata for ContextAssetInfoAnalytics;
}

uint64_t sub_E050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_E120(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

unint64_t sub_E12C(uint64_t a1, uint64_t a2)
{
  sub_27E400();
  sub_27DDF0();
  Swift::Int v4 = sub_27E420();

  return sub_E1E8(a1, a2, v4);
}

unint64_t sub_E1A4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_27E0B0(*(void *)(v2 + 40));

  return sub_E2CC(a1, v4);
}

unint64_t sub_E1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    os_log_type_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_27E370() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_27E370() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_E2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_E394(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_27E0C0();
      sub_E3F0((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_E394(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_E3F0(uint64_t a1)
{
  return a1;
}

unint64_t sub_E444()
{
  unint64_t result = qword_316218;
  if (!qword_316218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316218);
  }
  return result;
}

BookAnalytics::ExposureType_optional __swiftcall ExposureType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F6E60;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ExposureType.rawValue.getter()
{
  unint64_t v1 = 0x6573616863727570;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_E554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2E308(*a1, *a2);
}

unint64_t sub_E564()
{
  unint64_t result = qword_316220;
  if (!qword_316220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316220);
  }
  return result;
}

Swift::Int sub_E5B8()
{
  return sub_27E420();
}

uint64_t sub_E660()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_E6F4()
{
  return sub_27E420();
}

BookAnalytics::ExposureType_optional sub_E798(Swift::String *a1)
{
  return ExposureType.init(rawValue:)(*a1);
}

void sub_E7A4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x6573616863727570;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v4 = 0x80000000002ACA10;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_E808()
{
  return sub_27DED0();
}

uint64_t sub_E868()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ExposureType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExposureType()
{
  return &type metadata for ExposureType;
}

unint64_t sub_E9BC()
{
  unint64_t result = qword_316228;
  if (!qword_316228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316228);
  }
  return result;
}

void DealsData.dealType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *DealsData.dealType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void ViewData.viewAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *ViewData.viewAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ViewData.viewAction.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void ViewData.viewLocation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *ViewData.viewLocation.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*ViewData.viewLocation.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

BookAnalytics::ViewData __swiftcall ViewData.init(viewType:viewAction:viewLocation:)(BookAnalytics::ViewType viewType, BookAnalytics::ViewAction viewAction, BookAnalytics::ViewLocation viewLocation)
{
  char v4 = *(unsigned char *)viewAction;
  char v5 = *(unsigned char *)viewLocation;
  unsigned char *v3 = *(unsigned char *)viewType;
  v3[1] = v4;
  v3[2] = v5;
  result.viewType = viewType;
  return result;
}

uint64_t sub_EAB8()
{
  uint64_t v1 = 0x6974634177656976;
  if (*v0 != 1) {
    uint64_t v1 = 0x61636F4C77656976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6570795477656976;
  }
}

uint64_t sub_EB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F730(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_EB48(uint64_t a1)
{
  unint64_t v2 = sub_F108();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EB84(uint64_t a1)
{
  unint64_t v2 = sub_F108();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ViewData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_316230);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v13 = v1[2];
  int v14 = v9;
  sub_5900(a1, a1[3]);
  sub_F108();
  sub_27E440();
  char v20 = v8;
  char v19 = 0;
  sub_F15C();
  sub_27E330();
  if (!v2)
  {
    char v10 = v13;
    char v18 = v14;
    char v17 = 1;
    sub_F1B0();
    sub_27E330();
    char v16 = v10;
    char v15 = 2;
    sub_F204();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ViewData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316258);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_F108();
  sub_27E430();
  if (!v2)
  {
    char v18 = 0;
    sub_F258();
    sub_27E260();
    char v9 = v19;
    char v16 = 1;
    sub_F2AC();
    sub_27E260();
    char v11 = v17;
    char v14 = 2;
    sub_F300();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v15;
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_EFB0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ViewData.init(from:)(a1, a2);
}

uint64_t sub_EFC8(void *a1)
{
  return ViewData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8ViewDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, char *a2)
{
  unsigned __int8 v2 = a1[1];
  int v3 = a1[2];
  char v4 = a2[1];
  int v5 = a2[2];
  if (sub_2BF64(*a1, *a2) & 1) != 0 && (sub_2C120(v2, v4))
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v7 = 0x434F546D6F7266;
    if (v3 != 1)
    {
      uint64_t v7 = 0x646165526D6F7266;
      unint64_t v6 = 0xEB00000000676E69;
    }
    if (v3) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0x6E776F6E6B6E75;
    }
    if (v3) {
      unint64_t v9 = v6;
    }
    else {
      unint64_t v9 = 0xE700000000000000;
    }
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x434F546D6F7266;
    if (v5 != 1)
    {
      uint64_t v11 = 0x646165526D6F7266;
      unint64_t v10 = 0xEB00000000676E69;
    }
    if (v5) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0x6E776F6E6B6E75;
    }
    if (v5) {
      unint64_t v13 = v10;
    }
    else {
      unint64_t v13 = 0xE700000000000000;
    }
    if (v8 == v12 && v9 == v13) {
      char v14 = 1;
    }
    else {
      char v14 = sub_27E370();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_F108()
{
  unint64_t result = qword_316238;
  if (!qword_316238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316238);
  }
  return result;
}

unint64_t sub_F15C()
{
  unint64_t result = qword_316240;
  if (!qword_316240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316240);
  }
  return result;
}

unint64_t sub_F1B0()
{
  unint64_t result = qword_316248;
  if (!qword_316248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316248);
  }
  return result;
}

unint64_t sub_F204()
{
  unint64_t result = qword_316250;
  if (!qword_316250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316250);
  }
  return result;
}

unint64_t sub_F258()
{
  unint64_t result = qword_316260;
  if (!qword_316260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316260);
  }
  return result;
}

unint64_t sub_F2AC()
{
  unint64_t result = qword_316268;
  if (!qword_316268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316268);
  }
  return result;
}

unint64_t sub_F300()
{
  unint64_t result = qword_316270;
  if (!qword_316270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316270);
  }
  return result;
}

unint64_t sub_F358()
{
  unint64_t result = qword_316278;
  if (!qword_316278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316278);
  }
  return result;
}

unint64_t sub_F3B0()
{
  unint64_t result = qword_316280;
  if (!qword_316280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316280);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ViewData(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ViewData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  BOOL v5 = v4 >= 3;
  int v6 = v4 - 3;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554178) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFD) {
    int v3 = 0;
  }
  if (a2 > 0xFD)
  {
    *(_WORD *)unint64_t result = a2 - 254;
    *(unsigned char *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = a2 + 2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewData()
{
  return &type metadata for ViewData;
}

unsigned char *storeEnumTagSinglePayload for ViewData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewData.CodingKeys()
{
  return &type metadata for ViewData.CodingKeys;
}

unint64_t sub_F62C()
{
  unint64_t result = qword_316288;
  if (!qword_316288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316288);
  }
  return result;
}

unint64_t sub_F684()
{
  unint64_t result = qword_316290;
  if (!qword_316290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316290);
  }
  return result;
}

unint64_t sub_F6DC()
{
  unint64_t result = qword_316298;
  if (!qword_316298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316298);
  }
  return result;
}

uint64_t sub_F730(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570795477656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974634177656976 && a2 == 0xEA00000000006E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61636F4C77656976 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t MediaData.mediaType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaData.mediaType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

void RoomData.roomType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *RoomData.roomType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*MediaData.mediaDuration.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomData.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RoomData.roomName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ClickData.index.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall RoomData.init(roomID:roomParentSection:roomType:roomName:)(BookAnalytics::RoomData *__return_ptr retstr, Swift::String roomID, Swift::String roomParentSection, BookAnalytics::RoomType roomType, Swift::String_optional roomName)
{
  BookAnalytics::RoomType v5 = *(unsigned char *)roomType;
  retstr->roomID = roomID;
  retstr->roomParentSection = roomParentSection;
  retstr->roomType = v5;
  retstr->roomName = roomName;
}

unint64_t sub_F9F0()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x55746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x54746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x49746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_FA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_107A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_FAC4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_FAD0(uint64_t a1)
{
  unint64_t v2 = sub_10190();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_FB0C(uint64_t a1)
{
  unint64_t v2 = sub_10190();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WantListRemovalItemData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3162A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v7;
  int v13 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  v12[0] = *(void *)(v1 + 48);
  v12[1] = v8;
  sub_5900(a1, a1[3]);
  sub_10190();
  sub_27E440();
  char v21 = 0;
  uint64_t v9 = v16;
  sub_27E2F0();
  if (!v9)
  {
    char v10 = v13;
    char v20 = 1;
    sub_27E2F0();
    char v19 = v10;
    char v18 = 2;
    sub_101E4();
    sub_27E330();
    char v17 = 3;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WantListRemovalItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3162B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_10190();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v26 = 2;
  sub_10238();
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  sub_27E260();
  HIDWORD(v21) = v27;
  char v25 = 3;
  uint64_t v15 = sub_27E220();
  uint64_t v18 = v17;
  uint64_t v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v23;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 32) = BYTE4(v21);
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v18;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10034@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WantListRemovalItemData.init(from:)(a1, a2);
}

uint64_t sub_1004C(void *a1)
{
  return WantListRemovalItemData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics23WantListRemovalItemDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
    {
      if (sub_2DAE4(v4, v9))
      {
        if (v5 == v10 && v6 == v11)
        {
          return 1;
        }
        else
        {
          return sub_27E370();
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_10190()
{
  unint64_t result = qword_3162A8;
  if (!qword_3162A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162A8);
  }
  return result;
}

unint64_t sub_101E4()
{
  unint64_t result = qword_3162B0;
  if (!qword_3162B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162B0);
  }
  return result;
}

unint64_t sub_10238()
{
  unint64_t result = qword_3162C0;
  if (!qword_3162C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162C0);
  }
  return result;
}

unint64_t sub_10290()
{
  unint64_t result = qword_3162C8;
  if (!qword_3162C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162C8);
  }
  return result;
}

unint64_t sub_102E8()
{
  unint64_t result = qword_3162D0;
  if (!qword_3162D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162D0);
  }
  return result;
}

uint64_t destroy for WantListRemovalItemData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WantListRemovalItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WantListRemovalItemData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WantListRemovalItemData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WantListRemovalItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WantListRemovalItemData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WantListRemovalItemData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListRemovalItemData()
{
  return &type metadata for WantListRemovalItemData;
}

unsigned char *storeEnumTagSinglePayload for WantListRemovalItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListRemovalItemData.CodingKeys()
{
  return &type metadata for WantListRemovalItemData.CodingKeys;
}

unint64_t sub_106A0()
{
  unint64_t result = qword_3162D8;
  if (!qword_3162D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162D8);
  }
  return result;
}

unint64_t sub_106F8()
{
  unint64_t result = qword_3162E0;
  if (!qword_3162E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162E0);
  }
  return result;
}

unint64_t sub_10750()
{
  unint64_t result = qword_3162E8;
  if (!qword_3162E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3162E8);
  }
  return result;
}

uint64_t sub_107A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_109A4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3162F0, &enum case for SessionGroup.default(_:));
}

uint64_t static SeriesContextualSheetEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315550, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3162F0, a1);
}

uint64_t sub_10A04(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_316308, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SeriesContextualSheetEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315558, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316308, a1);
}

uint64_t SeriesContextualSheetEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316320);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SeriesContextualSheetEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316320);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SeriesContextualSheetEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesContextualSheetEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3163A8);
}

uint64_t SeriesContextualSheetEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesContextualSheetEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesContextualSheetEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesContextualSheetEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesContextualSheetEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesContextualSheetEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SeriesContextualSheetEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SeriesContextualSheetEvent.Model.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  __int16 v4 = *(_WORD *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 26);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 26) = v5;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t SeriesContextualSheetEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesContextualSheetEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_316448);
}

uint64_t SeriesContextualSheetEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesContextualSheetEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesContextualSheetEvent.Model.init(seriesData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  __int16 v9 = *(_WORD *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 26);
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v8;
  *(_WORD *)(a4 + 24) = v9;
  *(unsigned char *)(a4 + 26) = v10;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  uint64_t v11 = type metadata accessor for SeriesContextualSheetEvent.Model(0);
  uint64_t v12 = a4 + *(int *)(v11 + 20);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  uint64_t v14 = a4 + *(int *)(v11 + 24);
  uint64_t v15 = sub_27D7F0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);

  return v16(v14, a3, v15);
}

uint64_t sub_11144()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144736569726573;
  }
}

uint64_t sub_111AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_133AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_111D4(uint64_t a1)
{
  unint64_t v2 = sub_114C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11210(uint64_t a1)
{
  unint64_t v2 = sub_114C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesContextualSheetEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_316328);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_114C0();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v10 = v3[2];
  __int16 v11 = *((_WORD *)v3 + 12);
  char v12 = *((unsigned char *)v3 + 26);
  uint64_t v15 = *v3;
  char v16 = v9;
  uint64_t v17 = v10;
  __int16 v18 = v11;
  char v19 = v12;
  long long v20 = *((_OWORD *)v3 + 2);
  v14[15] = 0;
  sub_11514();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for SeriesContextualSheetEvent.Model(0);
    LOBYTE(v15) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v15) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_114C0()
{
  unint64_t result = qword_316330;
  if (!qword_316330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316330);
  }
  return result;
}

unint64_t sub_11514()
{
  unint64_t result = qword_316338;
  if (!qword_316338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316338);
  }
  return result;
}

uint64_t SeriesContextualSheetEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_27D7F0();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4E04(&qword_316340);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SeriesContextualSheetEvent.Model(0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v35 = a1;
  sub_5900(a1, v14);
  sub_114C0();
  uint64_t v34 = v10;
  uint64_t v15 = v36;
  sub_27E430();
  if (v15) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v36 = v11;
  uint64_t v16 = v32;
  uint64_t v17 = (uint64_t)v13;
  unsigned __int8 v27 = v4;
  char v43 = 0;
  sub_11A3C();
  uint64_t v18 = v33;
  sub_27E260();
  char v19 = v38;
  uint64_t v20 = v39;
  __int16 v21 = v40;
  char v22 = v41;
  *(void *)uint64_t v17 = v37;
  *(unsigned char *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v20;
  *(_WORD *)(v17 + 24) = v21;
  *(unsigned char *)(v17 + 26) = v22;
  *(_OWORD *)(v17 + 32) = v42;
  LOBYTE(v37) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v17 + *(int *)(v36 + 20), v7, v5);
  LOBYTE(v37) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v23 = v27;
  uint64_t v24 = v30;
  char v25 = v34;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v17 + *(int *)(v36 + 24), v23, v24);
  sub_11A90(v17, v29);
  sub_5E94((uint64_t)v35);
  return sub_11AF4(v17);
}

unint64_t sub_11A3C()
{
  unint64_t result = qword_316348;
  if (!qword_316348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316348);
  }
  return result;
}

uint64_t sub_11A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesContextualSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_11AF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesContextualSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_11B50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesContextualSheetEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_11B68(void *a1)
{
  return SeriesContextualSheetEvent.Model.encode(to:)(a1);
}

uint64_t sub_11B80@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315550, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3162F0, a1);
}

uint64_t sub_11BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315558, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316308, a1);
}

uint64_t sub_11BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesContextualSheetEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316320);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_123C8);
}

uint64_t sub_123C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SeriesContextualSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12534);
}

uint64_t sub_12534(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316320);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_12698()
{
  sub_1279C();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1279C()
{
  if (!qword_3163B8)
  {
    sub_11A3C();
    sub_11514();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3163B8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v11 = sub_27D7C0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v10 = sub_27D7C0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for SeriesContextualSheetEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12E54);
}

uint64_t sub_12E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SeriesContextualSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12FA0);
}

uint64_t sub_12FA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 40) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_130CC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesContextualSheetEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1326CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesContextualSheetEvent.Model.CodingKeys()
{
  return &type metadata for SeriesContextualSheetEvent.Model.CodingKeys;
}

unint64_t sub_132A8()
{
  unint64_t result = qword_316488;
  if (!qword_316488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316488);
  }
  return result;
}

unint64_t sub_13300()
{
  unint64_t result = qword_316490;
  if (!qword_316490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316490);
  }
  return result;
}

unint64_t sub_13358()
{
  unint64_t result = qword_316498;
  if (!qword_316498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316498);
  }
  return result;
}

uint64_t sub_133AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144736569726573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_13528(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3164A0, &enum case for SessionGroup.default(_:));
}

uint64_t static WelcomeActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315560, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3164A0, a1);
}

uint64_t sub_13588(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3164B8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WelcomeActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315568, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3164B8, a1);
}

uint64_t WelcomeActionEvent.welcomeScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3164D0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t WelcomeActionEvent.welcomeScreenData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3164D0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t WelcomeActionEvent.welcomeActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3164D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WelcomeActionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_316570);
}

uint64_t WelcomeActionEvent.welcomeActionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3164D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WelcomeActionEvent.welcomeActionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WelcomeActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WelcomeActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WelcomeActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WelcomeActionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WelcomeActionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WelcomeActionEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WelcomeActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WelcomeActionEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

void WelcomeScreenViewEvent.Model.welcomeScreenData.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 4);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(_DWORD *)(a1 + 4) = v2;
}

void RemoveFromWantListEvent.Model.wantListRemovalTypeData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t WelcomeActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WelcomeActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_316618);
}

uint64_t WelcomeActionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeActionEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WelcomeActionEvent.Model.init(welcomeScreenData:welcomeActionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v8 = *(_DWORD *)(a1 + 4);
  char v9 = *a2;
  *(unsigned char *)a5 = *(unsigned char *)a1;
  *(_DWORD *)(a5 + 4) = v8;
  *(unsigned char *)(a5 + 8) = v9;
  uint64_t v10 = type metadata accessor for WelcomeActionEvent.Model(0);
  uint64_t v11 = a5 + *(int *)(v10 + 24);
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  uint64_t v13 = a5 + *(int *)(v10 + 28);
  uint64_t v14 = sub_27D7F0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);

  return v15(v13, a4, v14);
}

uint64_t sub_13E24()
{
  uint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 2:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_4;
    case 3:
      uint64_t v2 = 0x4464656D6974;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_13EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_163B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13ED8(uint64_t a1)
{
  unint64_t v2 = sub_141E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13F14(uint64_t a1)
{
  unint64_t v2 = sub_141E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WelcomeActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3164E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_141E4();
  sub_27E440();
  int v9 = *(_DWORD *)(v3 + 4);
  v11[8] = *(unsigned char *)v3;
  int v12 = v9;
  v11[7] = 0;
  sub_14238();
  sub_27E330();
  if (!v2)
  {
    v11[6] = *(unsigned char *)(v3 + 8);
    v11[5] = 1;
    sub_1428C();
    sub_27E330();
    type metadata accessor for WelcomeActionEvent.Model(0);
    v11[4] = 2;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v11[3] = 3;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_141E4()
{
  unint64_t result = qword_3164E8;
  if (!qword_3164E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3164E8);
  }
  return result;
}

unint64_t sub_14238()
{
  unint64_t result = qword_3164F0;
  if (!qword_3164F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3164F0);
  }
  return result;
}

unint64_t sub_1428C()
{
  unint64_t result = qword_3164F8;
  if (!qword_3164F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3164F8);
  }
  return result;
}

uint64_t WelcomeActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = sub_27D7F0();
  uint64_t v17 = *(void *)(v19 - 8);
  __chkstk_darwin();
  char v22 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(sub_27D7C0() - 8);
  __chkstk_darwin();
  uint64_t v24 = sub_4E04(&qword_316500);
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WelcomeActionEvent.Model(0);
  __chkstk_darwin();
  int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_141E4();
  uint64_t v23 = v5;
  int v9 = v25;
  sub_27E430();
  if (v9) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v11 = v21;
  uint64_t v10 = v22;
  char v30 = 0;
  sub_14770();
  sub_27E260();
  int v12 = v32;
  char *v8 = v31;
  *((_DWORD *)v8 + 1) = v12;
  char v28 = 1;
  sub_147C4();
  sub_27E260();
  v8[8] = v29;
  char v27 = 2;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  uint64_t v13 = v6;
  uint64_t v14 = *(void (**)(void))(v20 + 32);
  char v25 = &v8[*(int *)(v6 + 24)];
  v14();
  char v26 = 3;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v15 = v19;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v24);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v8[*(int *)(v13 + 28)], v10, v15);
  sub_14818((uint64_t)v8, v18);
  sub_5E94((uint64_t)a1);
  return sub_1487C((uint64_t)v8);
}

unint64_t sub_14770()
{
  unint64_t result = qword_316508;
  if (!qword_316508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316508);
  }
  return result;
}

unint64_t sub_147C4()
{
  unint64_t result = qword_316510;
  if (!qword_316510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316510);
  }
  return result;
}

uint64_t sub_14818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WelcomeActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1487C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WelcomeActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_148D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WelcomeActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_148F0(void *a1)
{
  return WelcomeActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_14908@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315560, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3164A0, a1);
}

uint64_t sub_14940@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315568, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3164B8, a1);
}

uint64_t sub_14978@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE8);
  int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for WelcomeActionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3164D0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3164D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for WelcomeActionEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for WelcomeActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for WelcomeActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for WelcomeActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for WelcomeActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3164D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15358);
}

uint64_t sub_15358(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3164D8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for WelcomeActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15514);
}

uint64_t sub_15514(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3164D0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3164D8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_156C8()
{
  sub_15878(319, (unint64_t *)&qword_316580, (void (*)(void))sub_14770, (void (*)(void))sub_14238);
  if (v0 <= 0x3F)
  {
    sub_15878(319, (unint64_t *)&unk_316588, (void (*)(void))sub_147C4, (void (*)(void))sub_1428C);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F)
      {
        sub_6E6C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_15878(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for WelcomeActionEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

uint64_t destroy for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15E6C);
}

uint64_t sub_15E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for WelcomeActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15FA4);
}

uint64_t sub_15FA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 8) = a2 + 2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_160CC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WelcomeActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeActionEvent.Model.CodingKeys()
{
  return &type metadata for WelcomeActionEvent.Model.CodingKeys;
}

unint64_t sub_162B0()
{
  unint64_t result = qword_316658;
  if (!qword_316658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316658);
  }
  return result;
}

unint64_t sub_16308()
{
  unint64_t result = qword_316660;
  if (!qword_316660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316660);
  }
  return result;
}

unint64_t sub_16360()
{
  unint64_t result = qword_316668;
  if (!qword_316668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316668);
  }
  return result;
}

uint64_t sub_163B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADE60 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADE80 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::TabData __swiftcall TabData.init(tabType:)(BookAnalytics::TabData tabType)
{
  unsigned char *v1 = *(unsigned char *)tabType.tabType;
  return tabType;
}

uint64_t sub_16584()
{
  return 1;
}

Swift::Int sub_1658C()
{
  return sub_27E420();
}

void sub_165D0()
{
}

Swift::Int sub_165F8()
{
  return sub_27E420();
}

unint64_t sub_16638()
{
  return 0xD000000000000014;
}

uint64_t sub_16654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16FDC(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_16680(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1668C(uint64_t a1)
{
  unint64_t v2 = sub_16AF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_166C8(uint64_t a1)
{
  unint64_t v2 = sub_16AF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GetStartedActionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316670);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_16AF4();
  sub_27E440();
  char v10 = v7;
  sub_16B48();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GetStartedActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316688);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_16AF4();
  sub_27E430();
  if (!v2)
  {
    sub_16B9C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_169B4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GetStartedActionData.init(from:)(a1, a2);
}

uint64_t sub_169CC(void *a1)
{
  return GetStartedActionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics20GetStartedActionDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = 0x65756E69746E6F63;
  if (v2 != 1)
  {
    uint64_t v4 = 0x616E614D61746164;
    unint64_t v3 = 0xEA00000000006567;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  unint64_t v7 = 0xE800000000000000;
  uint64_t v8 = 0x65756E69746E6F63;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x616E614D61746164;
    unint64_t v7 = 0xEA00000000006567;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_16AF4()
{
  unint64_t result = qword_316678;
  if (!qword_316678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316678);
  }
  return result;
}

unint64_t sub_16B48()
{
  unint64_t result = qword_316680;
  if (!qword_316680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316680);
  }
  return result;
}

unint64_t sub_16B9C()
{
  unint64_t result = qword_316690;
  if (!qword_316690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316690);
  }
  return result;
}

unint64_t sub_16BF4()
{
  unint64_t result = qword_316698;
  if (!qword_316698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316698);
  }
  return result;
}

unint64_t sub_16C4C()
{
  unint64_t result = qword_3166A0;
  if (!qword_3166A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GetStartedActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetStartedActionData()
{
  return &type metadata for GetStartedActionData;
}

uint64_t getEnumTagSinglePayload for GetStartedActionData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for GetStartedActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x16E94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_16EBC()
{
  return 0;
}

ValueMetadata *type metadata accessor for GetStartedActionData.CodingKeys()
{
  return &type metadata for GetStartedActionData.CodingKeys;
}

unint64_t sub_16ED8()
{
  unint64_t result = qword_3166A8;
  if (!qword_3166A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166A8);
  }
  return result;
}

unint64_t sub_16F30()
{
  unint64_t result = qword_3166B0;
  if (!qword_3166B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166B0);
  }
  return result;
}

unint64_t sub_16F88()
{
  unint64_t result = qword_3166B8;
  if (!qword_3166B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166B8);
  }
  return result;
}

uint64_t sub_16FDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002ADEA0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BookAnalytics::ModelType_optional __swiftcall ModelType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  char v3 = v1;
  v4._rawValue = &off_2F6EC8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ModelType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C61626F6C67;
      break;
    case 2:
      uint64_t result = 0x6E656D6D6F636572;
      break;
    case 3:
      uint64_t result = 0x736C616F67;
      break;
    case 4:
      uint64_t result = 0x62756C636B6F6F62;
      break;
    case 5:
      uint64_t result = 0x43676E6964616572;
      break;
    case 6:
      uint64_t result = 0x6F72446563697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static NotificationOptInTypeData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_2B5C4(*a1, *a2);
}

unint64_t sub_171C8()
{
  unint64_t result = qword_3166C0;
  if (!qword_3166C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166C0);
  }
  return result;
}

Swift::Int sub_1721C()
{
  return sub_25DB60();
}

uint64_t sub_17228()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_17354()
{
  return sub_25DB60();
}

BookAnalytics::ModelType_optional sub_1735C(Swift::String *a1)
{
  return ModelType.init(rawValue:)(*a1);
}

void sub_17368(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6C61626F6C67;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E656D6D6F636572;
      a1[1] = 0xEF736E6F69746164;
      break;
    case 3:
      *a1 = 0x736C616F67;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x62756C636B6F6F62;
      a1[1] = 0xE800000000000000;
      break;
    case 5:
      *a1 = 0x43676E6964616572;
      a1[1] = 0xEF676E696863616FLL;
      break;
    case 6:
      *a1 = 0x6F72446563697270;
      a1[1] = 0xE900000000000070;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_17478()
{
  return sub_27DED0();
}

uint64_t sub_174D8()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for ViewAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17684);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelType()
{
  return &type metadata for ModelType;
}

unint64_t sub_176BC()
{
  unint64_t result = qword_3166C8;
  if (!qword_3166C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166C8);
  }
  return result;
}

BookAnalytics::ScrollViewStatus_optional __swiftcall ScrollViewStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F6F90;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t sub_17770()
{
  unint64_t result = qword_3166D0;
  if (!qword_3166D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166D0);
  }
  return result;
}

BookAnalytics::ScrollViewStatus_optional sub_177C4(Swift::String *a1)
{
  return ScrollViewStatus.init(rawValue:)(*a1);
}

uint64_t sub_177D0()
{
  return sub_27DED0();
}

uint64_t sub_17830()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ScrollViewStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1794CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewStatus()
{
  return &type metadata for ScrollViewStatus;
}

unint64_t sub_17984()
{
  unint64_t result = qword_3166D8;
  if (!qword_3166D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166D8);
  }
  return result;
}

BookAnalytics::ReaderType_optional __swiftcall ReaderType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F6FF8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t ReaderType.rawValue.getter()
{
  unint64_t result = 0x655279646E657274;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6552736569726573;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x52636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_17B0C(unsigned __int8 *a1, char *a2)
{
  return sub_319BC(*a1, *a2);
}

unint64_t sub_17B1C()
{
  unint64_t result = qword_3166E0;
  if (!qword_3166E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166E0);
  }
  return result;
}

Swift::Int sub_17B70()
{
  return sub_20B66C();
}

uint64_t sub_17B78()
{
  return sub_27C744();
}

Swift::Int sub_17B80()
{
  return sub_25C1B0();
}

BookAnalytics::ReaderType_optional sub_17B88(Swift::String *a1)
{
  return ReaderType.init(rawValue:)(*a1);
}

unint64_t sub_17B94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ReaderType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_17BBC()
{
  return sub_27DED0();
}

uint64_t sub_17C1C()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for ReaderType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReaderType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderType()
{
  return &type metadata for ReaderType;
}

unint64_t sub_17E00()
{
  unint64_t result = qword_3166E8;
  if (!qword_3166E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166E8);
  }
  return result;
}

uint64_t sub_17E54()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_17E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_185E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_17EC4(uint64_t a1)
{
  unint64_t v2 = sub_180B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_17F00(uint64_t a1)
{
  unint64_t v2 = sub_180B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SingleCollectionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3166F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_180B0();
  sub_27E440();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_27E2F0();
  if (!v7)
  {
    char v11 = 1;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_180B0()
{
  unint64_t result = qword_3166F8;
  if (!qword_3166F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3166F8);
  }
  return result;
}

uint64_t SingleCollectionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316700);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_180B0();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  int v12 = sub_27E270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_182E8()
{
  unint64_t result = qword_316708;
  if (!qword_316708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316708);
  }
  return result;
}

unint64_t sub_18340()
{
  unint64_t result = qword_316710;
  if (!qword_316710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316710);
  }
  return result;
}

uint64_t sub_18394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleCollectionData.init(from:)(a1, a2);
}

uint64_t sub_183AC(void *a1)
{
  return SingleCollectionData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SingleCollectionData()
{
  return &type metadata for SingleCollectionData;
}

unsigned char *storeEnumTagSinglePayload for SingleCollectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x184A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleCollectionData.CodingKeys()
{
  return &type metadata for SingleCollectionData.CodingKeys;
}

unint64_t sub_184DC()
{
  unint64_t result = qword_316718;
  if (!qword_316718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316718);
  }
  return result;
}

unint64_t sub_18534()
{
  unint64_t result = qword_316720;
  if (!qword_316720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316720);
  }
  return result;
}

unint64_t sub_1858C()
{
  unint64_t result = qword_316728;
  if (!qword_316728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316728);
  }
  return result;
}

uint64_t sub_185E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002ADEC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::CellularRadioAccessTechnology_optional __swiftcall CellularRadioAccessTechnology.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F70A8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 16;
  if (v5 < 0x10) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t CellularRadioAccessTechnology.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1936879719;
      break;
    case 2:
      uint64_t result = 1701274725;
      break;
    case 3:
      uint64_t result = 0x616D646377;
      break;
    case 4:
      uint64_t result = 0x6170647368;
      break;
    case 5:
      uint64_t result = 0x6170757368;
      break;
    case 6:
      uint64_t result = 0x7831616D6463;
      break;
    case 7:
    case 8:
    case 9:
      uint64_t result = 0x6F647665616D6463;
      break;
    case 0xA:
      uint64_t result = 0x6470726865;
      break;
    case 0xB:
      uint64_t result = 6648940;
      break;
    case 0xC:
      uint64_t result = 1768319351;
      break;
    case 0xD:
      uint64_t result = 0x6863616552746F6ELL;
      break;
    case 0xE:
      uint64_t result = 0x61736E726ELL;
      break;
    case 0xF:
      uint64_t result = 29294;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_188E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2DF84(*a1, *a2);
}

unint64_t sub_188F0()
{
  unint64_t result = qword_316730;
  if (!qword_316730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316730);
  }
  return result;
}

Swift::Int sub_18944()
{
  return sub_27E420();
}

uint64_t sub_189AC()
{
  CellularRadioAccessTechnology.rawValue.getter();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_18A10()
{
  return sub_27E420();
}

BookAnalytics::CellularRadioAccessTechnology_optional sub_18A74(Swift::String *a1)
{
  return CellularRadioAccessTechnology.init(rawValue:)(*a1);
}

uint64_t sub_18A80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CellularRadioAccessTechnology.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18AA8()
{
  return sub_27DED0();
}

uint64_t sub_18B08()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for CellularRadioAccessTechnology(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CellularRadioAccessTechnology(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularRadioAccessTechnology()
{
  return &type metadata for CellularRadioAccessTechnology;
}

unint64_t sub_18CEC()
{
  unint64_t result = qword_316738;
  if (!qword_316738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316738);
  }
  return result;
}

uint64_t sub_18D40(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_316740, &enum case for SessionGroup.default(_:));
}

uint64_t static AudioSkipEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315570, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316740, a1);
}

uint64_t sub_18DA0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_316758, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AudioSkipEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315578, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316758, a1);
}

uint64_t PlayEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316770);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PlayEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316770);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AudioSkipEvent.skipData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316778);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioSkipEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_316858);
}

uint64_t AudioSkipEvent.skipData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316778);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.skipData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.listeningActionSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSkipEvent.listeningActionSourceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.listeningActionSourceData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.bitRateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSkipEvent.bitRateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.bitRateData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSkipEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.errorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSkipEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSkipEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSkipEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSkipEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioSkipEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = enum case for EventProperty.optional<A>(_:);
  uint64_t v15 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v2, v17);
}

uint64_t PlayEvent.Model.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  __int16 v8 = *(_WORD *)(v1 + 56);
  int v9 = *(_DWORD *)(v1 + 60);
  char v10 = *(unsigned char *)(v1 + 64);
  int v11 = *(_DWORD *)(v1 + 68);
  char v12 = *(unsigned char *)(v1 + 72);
  char v13 = *(unsigned char *)(v1 + 77);
  uint64_t v15 = *(void *)(v1 + 80);
  uint64_t v14 = *(void *)(v1 + 88);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 68) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(v1 + 73);
  *(unsigned char *)(a1 + 77) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioSkipEvent.Model.skipData.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 104);
  char v3 = *(unsigned char *)(v1 + 108);
  __int16 v4 = *(_WORD *)(v1 + 109);
  uint64_t v6 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  char v7 = *(unsigned char *)(v1 + 128);
  *(void *)a1 = *(void *)(v1 + 96);
  *(_DWORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 12) = v3;
  *(_WORD *)(a1 + 13) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v7;
  return swift_bridgeObjectRetain();
}

void AudioSkipEvent.Model.listeningActionSourceData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 129);
}

void AudioSkipEvent.Model.bitRateData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  int v3 = *(_DWORD *)(v1 + 140);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 132);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
}

uint64_t AudioSkipEvent.Model.errorData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[19];
  uint64_t v3 = v1[20];
  uint64_t v4 = v1[21];
  *a1 = v1[18];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[22];
  uint64_t v3 = v1[23];
  uint64_t v4 = v1[24];
  uint64_t v5 = v1[25];
  uint64_t v6 = v1[26];
  uint64_t v7 = v1[27];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_19A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AudioSkipEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSkipEvent.Model(0) + 40);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioSkipEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_316928);
}

uint64_t AudioSkipEvent.Model.init(contentData:skipData:listeningActionSourceData:bitRateData:errorData:seriesData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, int *a4@<X3>, long long *a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  long long v11 = *(_OWORD *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  __int16 v14 = *(_WORD *)(a1 + 56);
  int v15 = *(_DWORD *)(a1 + 60);
  char v16 = *(unsigned char *)(a1 + 64);
  int v17 = *(_DWORD *)(a1 + 68);
  char v18 = *(unsigned char *)(a1 + 72);
  char v19 = *(unsigned char *)(a1 + 77);
  int v20 = *(_DWORD *)(a2 + 8);
  char v21 = *(unsigned char *)(a2 + 12);
  __int16 v22 = *(_WORD *)(a2 + 13);
  char v23 = *(unsigned char *)(a2 + 32);
  __int16 v24 = *a3;
  int v25 = *a4;
  char v26 = *((unsigned char *)a4 + 4);
  int v27 = a4[2];
  long long v28 = *a5;
  uint64_t v30 = *((void *)a5 + 2);
  uint64_t v29 = *((void *)a5 + 3);
  *(void *)a8 = *(void *)a1;
  *(void *)(a8 + 8) = v9;
  *(unsigned char *)(a8 + 16) = v10;
  *(_OWORD *)(a8 + 24) = v11;
  *(void *)(a8 + 40) = v12;
  *(void *)(a8 + 48) = v13;
  *(_WORD *)(a8 + 56) = v14;
  *(_DWORD *)(a8 + 60) = v15;
  *(unsigned char *)(a8 + 64) = v16;
  *(_DWORD *)(a8 + 68) = v17;
  *(unsigned char *)(a8 + 72) = v18;
  *(_DWORD *)(a8 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a8 + 77) = v19;
  *(_OWORD *)(a8 + 80) = *(_OWORD *)(a1 + 80);
  *(void *)(a8 + 96) = *(void *)a2;
  *(_DWORD *)(a8 + 104) = v20;
  *(unsigned char *)(a8 + 108) = v21;
  *(_WORD *)(a8 + 109) = v22;
  *(_OWORD *)(a8 + 112) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a8 + 128) = v23;
  *(_WORD *)(a8 + 129) = v24;
  *(_DWORD *)(a8 + 132) = v25;
  *(unsigned char *)(a8 + 136) = v26;
  *(_DWORD *)(a8 + 140) = v27;
  *(_OWORD *)(a8 + 144) = v28;
  *(void *)(a8 + 160) = v30;
  *(void *)(a8 + 168) = v29;
  long long v31 = a6[1];
  *(_OWORD *)(a8 + 176) = *a6;
  *(_OWORD *)(a8 + 192) = v31;
  *(_OWORD *)(a8 + 208) = a6[2];
  uint64_t v32 = a8 + *(int *)(type metadata accessor for AudioSkipEvent.Model(0) + 40);
  uint64_t v33 = sub_27D7C0();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);

  return v34(v32, a7, v33);
}

uint64_t sub_19C40(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6174614470696B73;
      break;
    case 2:
      uint64_t result = 0xD000000000000019;
      break;
    case 3:
      uint64_t result = 0x4465746152746962;
      break;
    case 4:
      uint64_t v3 = 0x44726F727265;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x6144736569726573;
      break;
    case 6:
      uint64_t v3 = 0x44746E657665;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19D30()
{
  return sub_19C40(*v0);
}

uint64_t sub_19D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D538(a1, a2);
  *a3 = result;
  return result;
}

void sub_19D60(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_19D6C(uint64_t a1)
{
  unint64_t v2 = sub_1A180();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19DA8(uint64_t a1)
{
  unint64_t v2 = sub_1A180();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioSkipEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_316798);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A180();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v33 = *(void *)v4;
  *((void *)&v33 + 1) = v10;
  v34[0] = v11;
  *(_OWORD *)&v34[8] = v12;
  *(void *)&v34[24] = v13;
  uint64_t v35 = v14;
  __int16 v36 = v15;
  int v37 = v16;
  char v38 = v17;
  int v39 = v18;
  char v40 = v19;
  int v41 = *(_DWORD *)(v4 + 73);
  char v42 = v20;
  long long v43 = *(_OWORD *)(v4 + 80);
  char v32 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 104);
    char v22 = *(unsigned char *)(v4 + 108);
    __int16 v23 = *(_WORD *)(v4 + 109);
    char v24 = *(unsigned char *)(v4 + 128);
    *(void *)&long long v33 = *(void *)(v4 + 96);
    DWORD2(v33) = v21;
    BYTE12(v33) = v22;
    *(_WORD *)((char *)&v33 + 13) = v23;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)(v4 + 112);
    v34[16] = v24;
    char v32 = 1;
    sub_1A228();
    sub_27E330();
    LOWORD(v33) = *(_WORD *)(v4 + 129);
    char v32 = 2;
    sub_1A27C();
    sub_27E330();
    char v25 = *(unsigned char *)(v4 + 136);
    int v26 = *(_DWORD *)(v4 + 140);
    LODWORD(v33) = *(_DWORD *)(v4 + 132);
    BYTE4(v33) = v25;
    DWORD2(v33) = v26;
    char v32 = 3;
    sub_1A2D0();
    sub_27E330();
    uint64_t v27 = *(void *)(v4 + 160);
    uint64_t v28 = *(void *)(v4 + 168);
    long long v33 = *(_OWORD *)(v4 + 144);
    *(void *)uint64_t v34 = v27;
    *(void *)&v34[8] = v28;
    char v32 = 4;
    sub_1A324();
    sub_27E330();
    long long v29 = *(_OWORD *)(v4 + 192);
    long long v33 = *(_OWORD *)(v4 + 176);
    *(_OWORD *)uint64_t v34 = v29;
    *(_OWORD *)&v34[16] = *(_OWORD *)(v4 + 208);
    char v32 = 5;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for AudioSkipEvent.Model(0);
    LOBYTE(v33) = 6;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A180()
{
  unint64_t result = qword_3167A0;
  if (!qword_3167A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167A0);
  }
  return result;
}

unint64_t sub_1A1D4()
{
  unint64_t result = qword_3167A8;
  if (!qword_3167A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167A8);
  }
  return result;
}

unint64_t sub_1A228()
{
  unint64_t result = qword_3167B0;
  if (!qword_3167B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167B0);
  }
  return result;
}

unint64_t sub_1A27C()
{
  unint64_t result = qword_3167B8;
  if (!qword_3167B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167B8);
  }
  return result;
}

unint64_t sub_1A2D0()
{
  unint64_t result = qword_3167C0;
  if (!qword_3167C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167C0);
  }
  return result;
}

unint64_t sub_1A324()
{
  unint64_t result = qword_3167C8;
  if (!qword_3167C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167C8);
  }
  return result;
}

uint64_t AudioSkipEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v41 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_4E04(&qword_3167D0);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AudioSkipEvent.Model(0);
  __chkstk_darwin();
  char v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v46 = a1;
  sub_5900(a1, v12);
  sub_1A180();
  uint64_t v45 = v8;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v46);
  }
  uint64_t v39 = v9;
  char v40 = v6;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v42;
  uint64_t v14 = v43;
  char v58 = 0;
  sub_1A98C();
  uint64_t v16 = v44;
  sub_27E260();
  uint64_t v17 = *((void *)&v47 + 1);
  char v18 = v48[0];
  long long v19 = *(_OWORD *)&v48[8];
  uint64_t v20 = *(void *)&v48[24];
  uint64_t v21 = v49;
  __int16 v22 = v50;
  int v23 = v51;
  char v24 = v52;
  int v25 = v53;
  char v26 = v54;
  char v27 = v56;
  *(void *)uint64_t v13 = v47;
  *(void *)(v13 + 8) = v17;
  *(unsigned char *)(v13 + 16) = v18;
  *(_OWORD *)(v13 + 24) = v19;
  *(void *)(v13 + 40) = v20;
  *(void *)(v13 + 48) = v21;
  *(_WORD *)(v13 + 56) = v22;
  *(_DWORD *)(v13 + 60) = v23;
  *(unsigned char *)(v13 + 64) = v24;
  *(_DWORD *)(v13 + 68) = v25;
  *(unsigned char *)(v13 + 72) = v26;
  *(_DWORD *)(v13 + 73) = v55;
  *(unsigned char *)(v13 + 77) = v27;
  *(_OWORD *)(v13 + 80) = v57;
  char v58 = 1;
  sub_1A9E0();
  sub_27E260();
  int v28 = DWORD2(v47);
  char v29 = BYTE12(v47);
  __int16 v30 = *(_WORD *)((char *)&v47 + 13);
  char v31 = v48[16];
  *(void *)(v13 + 96) = v47;
  *(_DWORD *)(v13 + 104) = v28;
  *(unsigned char *)(v13 + 108) = v29;
  *(_WORD *)(v13 + 109) = v30;
  *(_OWORD *)(v13 + 112) = *(_OWORD *)v48;
  *(unsigned char *)(v13 + 128) = v31;
  char v58 = 2;
  sub_1AA34();
  sub_27E260();
  *(_WORD *)(v13 + 129) = v47;
  char v58 = 3;
  sub_1AA88();
  sub_27E260();
  char v32 = BYTE4(v47);
  int v33 = DWORD2(v47);
  *(_DWORD *)(v13 + 132) = v47;
  *(unsigned char *)(v13 + 136) = v32;
  *(_DWORD *)(v13 + 140) = v33;
  char v58 = 4;
  sub_1AADC();
  sub_27E260();
  long long v34 = *(_OWORD *)v48;
  *(_OWORD *)(v13 + 144) = v47;
  *(_OWORD *)(v13 + 160) = v34;
  char v58 = 5;
  sub_11A3C();
  sub_27E1F0();
  v38[1] = 0;
  long long v35 = *(_OWORD *)v48;
  *(_OWORD *)(v13 + 176) = v47;
  *(_OWORD *)(v13 + 192) = v35;
  *(_OWORD *)(v13 + 208) = *(_OWORD *)&v48[16];
  LOBYTE(v47) = 6;
  sub_1AB30(&qword_315E28);
  __int16 v36 = v40;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v13 + *(int *)(v39 + 40), v36, v4);
  sub_1AB74(v13, v14);
  sub_5E94((uint64_t)v46);
  return sub_1ABD8(v13);
}

uint64_t sub_1A978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A98C()
{
  unint64_t result = qword_3167D8;
  if (!qword_3167D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167D8);
  }
  return result;
}

unint64_t sub_1A9E0()
{
  unint64_t result = qword_3167E0;
  if (!qword_3167E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167E0);
  }
  return result;
}

unint64_t sub_1AA34()
{
  unint64_t result = qword_3167E8;
  if (!qword_3167E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167E8);
  }
  return result;
}

unint64_t sub_1AA88()
{
  unint64_t result = qword_3167F0;
  if (!qword_3167F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167F0);
  }
  return result;
}

unint64_t sub_1AADC()
{
  unint64_t result = qword_3167F8;
  if (!qword_3167F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3167F8);
  }
  return result;
}

uint64_t sub_1AB30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_27D7C0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioSkipEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioSkipEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AC34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioSkipEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1AC4C(void *a1)
{
  return AudioSkipEvent.Model.encode(to:)(a1);
}

uint64_t sub_1AC64@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315570, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316740, a1);
}

uint64_t sub_1AC9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315578, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316758, a1);
}

uint64_t sub_1ACD4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = enum case for EventProperty.optional<A>(_:);
  uint64_t v16 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  long long v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioSkipEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316778);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316780);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316788);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316790);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    __int16 v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for AudioSkipEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for AudioSkipEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for AudioSkipEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for AudioSkipEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for AudioSkipEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioSkipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BCE0);
}

uint64_t sub_1BCE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316778);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  uint64_t v15 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for AudioSkipEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BF8C);
}

uint64_t sub_1BF8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316778);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  uint64_t v18 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v21 = sub_4E04(&qword_315DE0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_1C230()
{
  sub_1C574(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1C574(319, &qword_316870, (void (*)(void))sub_1A9E0, (void (*)(void))sub_1A228);
    if (v1 <= 0x3F)
    {
      sub_1C574(319, &qword_316878, (void (*)(void))sub_1AA34, (void (*)(void))sub_1A27C);
      if (v2 <= 0x3F)
      {
        sub_1C574(319, &qword_316880, (void (*)(void))sub_1AA88, (void (*)(void))sub_1A2D0);
        if (v3 <= 0x3F)
        {
          sub_1C574(319, (unint64_t *)&unk_316888, (void (*)(void))sub_1AADC, (void (*)(void))sub_1A324);
          if (v4 <= 0x3F)
          {
            sub_1C574(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
            if (v5 <= 0x3F)
            {
              sub_6DA0();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1C574(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AudioSkipEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = a2[12];
    int v12 = *((_DWORD *)a2 + 26);
    *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
    *(_DWORD *)(a1 + 104) = v12;
    *(unsigned char *)(a1 + 109) = *((unsigned char *)a2 + 109);
    *(unsigned char *)(a1 + 110) = *((unsigned char *)a2 + 110);
    uint64_t v13 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v13;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(_WORD *)(a1 + 129) = *(_WORD *)((char *)a2 + 129);
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    *(void *)(a1 + 132) = *(uint64_t *)((char *)a2 + 132);
    uint64_t v14 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v14;
    uint64_t v15 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v15;
    uint64_t v16 = a2[27];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      long long v17 = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 192) = v17;
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
    }
    else
    {
      *(void *)(a1 + 176) = a2[22];
      *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
      *(void *)(a1 + 192) = a2[24];
      *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
      *(_WORD *)(a1 + 201) = *(_WORD *)((char *)a2 + 201);
      *(void *)(a1 + 208) = a2[26];
      *(void *)(a1 + 216) = v16;
      swift_bridgeObjectRetain();
    }
    uint64_t v19 = *(int *)(a3 + 40);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for AudioSkipEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 216) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  int v11 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(void *)(a1 + 132) = *(void *)(a2 + 132);
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v16;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  }
  else
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v15;
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  int v8 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  int v9 = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = v9;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (long long *)(a1 + 176);
  int v11 = (long long *)(a2 + 176);
  uint64_t v12 = *(void *)(a2 + 216);
  if (*(void *)(a1 + 216) == 1)
  {
    if (v12 == 1)
    {
      long long v13 = *v11;
      long long v14 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v14;
      *uint64_t v10 = v13;
    }
    else
    {
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
      *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
    }
  }
  else if (v12 == 1)
  {
    sub_1CDD8(a1 + 176);
    long long v16 = *(_OWORD *)(a2 + 192);
    long long v15 = *(_OWORD *)(a2 + 208);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 192) = v16;
    *(_OWORD *)(a1 + 208) = v15;
  }
  else
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
    *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_1CDD8(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  *(void *)(a1 + 132) = *(void *)(a2 + 132);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  long long v9 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v9;
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_WORD *)(a1 + 109) = *(_WORD *)(a2 + 109);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 216) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 216);
    if (v13 != 1)
    {
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 176);
  }
  long long v14 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v14;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
LABEL_6:
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D0F8);
}

uint64_t sub_1D0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AudioSkipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D1BC);
}

uint64_t sub_1D1BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D264()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioSkipEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D3F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSkipEvent.Model.CodingKeys()
{
  return &type metadata for AudioSkipEvent.Model.CodingKeys;
}

unint64_t sub_1D434()
{
  unint64_t result = qword_316978;
  if (!qword_316978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316978);
  }
  return result;
}

unint64_t sub_1D48C()
{
  unint64_t result = qword_316980;
  if (!qword_316980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316980);
  }
  return result;
}

unint64_t sub_1D4E4()
{
  unint64_t result = qword_316988;
  if (!qword_316988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316988);
  }
  return result;
}

uint64_t sub_1D538(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614470696B73 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002ADEE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4465746152746962 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t MediaData.mediaDuration.getter()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t MediaData.mediaDuration.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  return result;
}

void __swiftcall MediaData.init(mediaID:mediaType:mediaDuration:)(BookAnalytics::MediaData *__return_ptr retstr, Swift::String mediaID, Swift::String mediaType, Swift::Int32 mediaDuration)
{
  retstr->mediaID = mediaID;
  retstr->mediaType = mediaType;
  retstr->mediaDuration = mediaDuration;
}

uint64_t sub_1D884()
{
  uint64_t v1 = 0x707954616964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x727544616964656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449616964656DLL;
  }
}

uint64_t sub_1D8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E39C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D918(uint64_t a1)
{
  unint64_t v2 = sub_1DE90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D954(uint64_t a1)
{
  unint64_t v2 = sub_1DE90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MediaData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316990);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  int v11 = *(_DWORD *)(v1 + 32);
  sub_5900(a1, a1[3]);
  sub_1DE90();
  sub_27E440();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v13 = 1;
    sub_27E2F0();
    char v12 = 2;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MediaData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3169A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DE90();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v22 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  char v21 = 2;
  swift_bridgeObjectRetain();
  uint64_t v19 = v14;
  LODWORD(v14) = sub_27E270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v19;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v15;
  *(_DWORD *)(a2 + 32) = v14;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DDB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaData.init(from:)(a1, a2);
}

uint64_t sub_1DDD0(void *a1)
{
  return MediaData.encode(to:)(a1);
}

BOOL _s13BookAnalytics9MediaDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(_DWORD *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_27E370(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    char v12 = sub_27E370();
    BOOL result = 0;
    if (v12) {
      return v4 == v7;
    }
  }
  return result;
}

unint64_t sub_1DE90()
{
  unint64_t result = qword_316998;
  if (!qword_316998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316998);
  }
  return result;
}

unint64_t sub_1DEE8()
{
  unint64_t result = qword_3169A8;
  if (!qword_3169A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3169A8);
  }
  return result;
}

unint64_t sub_1DF40()
{
  unint64_t result = qword_3169B0;
  if (!qword_3169B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3169B0);
  }
  return result;
}

uint64_t destroy for ThemesData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for MediaData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData()
{
  return &type metadata for MediaData;
}

unsigned char *storeEnumTagSinglePayload for MediaData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E25CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData.CodingKeys()
{
  return &type metadata for MediaData.CodingKeys;
}

unint64_t sub_1E298()
{
  unint64_t result = qword_3169B8;
  if (!qword_3169B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3169B8);
  }
  return result;
}

unint64_t sub_1E2F0()
{
  unint64_t result = qword_3169C0;
  if (!qword_3169C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3169C0);
  }
  return result;
}

unint64_t sub_1E348()
{
  unint64_t result = qword_3169C8;
  if (!qword_3169C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3169C8);
  }
  return result;
}

uint64_t sub_1E39C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727544616964656DLL && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1E524(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3169D0, &enum case for SessionGroup.default(_:));
}

uint64_t static MediaEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315580, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3169D0, a1);
}

uint64_t sub_1E584(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3169E8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static MediaEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315588, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3169E8, a1);
}

uint64_t MediaEngageEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316A00);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t MediaEngageEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316A00);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t MediaEngageEvent.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_316AE8);
}

uint64_t MediaEngageEvent.mediaEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaEngagementData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaEngageEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v8, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316A20);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v8, v17);
}

uint64_t MediaEngageEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int v5 = *(_DWORD *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v7 = *(void *)(v1 + 104);
  char v8 = *(unsigned char *)(v1 + 112);
  char v9 = *(unsigned char *)(v1 + 113);
  char v10 = *(unsigned char *)(v1 + 114);
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v12 = *(void *)(v1 + 128);
  *(void *)a1 = *(void *)(v1 + 40);
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 73) = v9;
  *(unsigned char *)(a1 + 74) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.sectionData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[17];
  uint64_t v3 = v1[18];
  uint64_t v4 = v1[19];
  uint64_t v5 = v1[20];
  uint64_t v6 = v1[21];
  uint64_t v7 = v1[22];
  uint64_t v8 = v1[23];
  uint64_t v9 = v1[24];
  uint64_t v10 = v1[25];
  uint64_t v11 = v1[26];
  uint64_t v12 = v1[27];
  uint64_t v13 = v1[28];
  uint64_t v14 = v1[29];
  uint64_t v15 = v1[30];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  return sub_1F200(v2, v3, v4);
}

uint64_t sub_1F200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.pageData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[31];
  uint64_t v3 = v1[32];
  uint64_t v4 = v1[33];
  uint64_t v5 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1F298(v2, v3, v4, v5);
}

uint64_t sub_1F298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageEvent.Model(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_316BB8);
}

uint64_t MediaEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 36);

  return sub_1F3B8(v3, a1);
}

uint64_t sub_1F3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *MediaEngageEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MediaEngageEvent.Model(0);
  sub_1F78C(v1 + *(int *)(v3 + 40), (uint64_t)v5, &qword_316A30);
  sub_1F78C((uint64_t)v5, a1, &qword_316A30);
  return sub_1F484(v5);
}

uint64_t *sub_1F484(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1F4E8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(mediaData:mediaEngagementData:sectionData:pageData:eventData:timedData:linkData:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  int v11 = *((_DWORD *)a1 + 8);
  long long v36 = *a2;
  long long v37 = *a1;
  long long v34 = a2[2];
  long long v35 = a2[1];
  uint64_t v12 = *((void *)a2 + 8);
  char v13 = *((unsigned char *)a2 + 72);
  char v14 = *((unsigned char *)a2 + 73);
  char v15 = *((unsigned char *)a2 + 74);
  uint64_t v16 = *((void *)a2 + 10);
  uint64_t v17 = *((void *)a2 + 11);
  long long v32 = *a3;
  long long v33 = a2[3];
  long long v30 = a3[2];
  long long v31 = a3[1];
  long long v28 = a3[4];
  long long v29 = a3[3];
  long long v27 = a3[5];
  uint64_t v25 = *((void *)a3 + 13);
  uint64_t v26 = *((void *)a3 + 12);
  long long v24 = *a4;
  uint64_t v22 = *((void *)a4 + 3);
  uint64_t v23 = *((void *)a4 + 2);
  sub_1F78C(a7, (uint64_t)v40, &qword_316A30);
  *(_OWORD *)a8 = v37;
  *(void *)(a8 + 16) = v9;
  *(void *)(a8 + 24) = v10;
  *(_DWORD *)(a8 + 32) = v11;
  *(_OWORD *)(a8 + 40) = v36;
  *(_OWORD *)(a8 + 56) = v35;
  *(_OWORD *)(a8 + 72) = v34;
  *(_OWORD *)(a8 + 88) = v33;
  *(void *)(a8 + 104) = v12;
  *(unsigned char *)(a8 + 112) = v13;
  *(unsigned char *)(a8 + 113) = v14;
  *(unsigned char *)(a8 + 114) = v15;
  *(void *)(a8 + 120) = v16;
  *(void *)(a8 + 128) = v17;
  *(_OWORD *)(a8 + 136) = v32;
  *(_OWORD *)(a8 + 152) = v31;
  *(_OWORD *)(a8 + 168) = v30;
  *(_OWORD *)(a8 + 184) = v29;
  *(_OWORD *)(a8 + 200) = v28;
  *(_OWORD *)(a8 + 216) = v27;
  *(void *)(a8 + 232) = v26;
  *(void *)(a8 + 240) = v25;
  *(_OWORD *)(a8 + 248) = v24;
  *(void *)(a8 + 264) = v23;
  *(void *)(a8 + 272) = v22;
  uint64_t v18 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  uint64_t v19 = a8 + v18[8];
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a5, v20);
  sub_1F78C(a6, a8 + v18[9], &qword_316A28);
  return sub_1F78C((uint64_t)v40, a8 + v18[10], &qword_316A30);
}

uint64_t sub_1F78C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_4E04(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1F7F0(char a1)
{
  unint64_t result = 0x746144616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x6174614465676170;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    case 5:
      unint64_t result = 0x74614464656D6974;
      break;
    case 6:
      unint64_t result = 0x617461446B6E696CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1F8E0()
{
  return sub_1F7F0(*v0);
}

uint64_t sub_1F8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24308(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F910(uint64_t a1)
{
  unint64_t v2 = sub_1FDB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F94C(uint64_t a1)
{
  unint64_t v2 = sub_1FDB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MediaEngageEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_316A38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1FDB0();
  sub_27E440();
  uint64_t v8 = *((void *)v2 + 2);
  uint64_t v9 = *((void *)v2 + 3);
  int v10 = *((_DWORD *)v2 + 8);
  long long v29 = *v2;
  *(void *)&long long v30 = v8;
  *((void *)&v30 + 1) = v9;
  LODWORD(v31) = v10;
  v28[0] = 0;
  sub_1DF40();
  uint64_t v11 = v37;
  sub_27E330();
  if (!v11)
  {
    uint64_t v12 = *((void *)v2 + 6);
    long long v13 = *(long long *)((char *)v2 + 72);
    long long v14 = *(long long *)((char *)v2 + 88);
    uint64_t v15 = *((void *)v2 + 13);
    char v16 = *((unsigned char *)v2 + 112);
    char v17 = *((unsigned char *)v2 + 113);
    char v18 = *((unsigned char *)v2 + 114);
    uint64_t v19 = *((void *)v2 + 15);
    uint64_t v20 = *((void *)v2 + 16);
    *(void *)&long long v29 = *((void *)v2 + 5);
    *((void *)&v29 + 1) = v12;
    long long v30 = *(long long *)((char *)v2 + 56);
    long long v31 = v13;
    long long v32 = v14;
    *(void *)&long long v33 = v15;
    BYTE8(v33) = v16;
    BYTE9(v33) = v17;
    BYTE10(v33) = v18;
    *(void *)&long long v34 = v19;
    *((void *)&v34 + 1) = v20;
    v28[0] = 1;
    sub_1FE04();
    sub_27E330();
    long long v21 = *(long long *)((char *)v2 + 152);
    long long v29 = *(long long *)((char *)v2 + 136);
    long long v30 = v21;
    long long v22 = *(long long *)((char *)v2 + 184);
    long long v31 = *(long long *)((char *)v2 + 168);
    long long v32 = v22;
    long long v23 = *(long long *)((char *)v2 + 216);
    long long v33 = *(long long *)((char *)v2 + 200);
    long long v34 = v23;
    long long v35 = *(long long *)((char *)v2 + 232);
    v28[0] = 2;
    sub_1FE58();
    sub_27E2C0();
    long long v24 = *(long long *)((char *)v2 + 264);
    long long v29 = *(long long *)((char *)v2 + 248);
    long long v30 = v24;
    v28[0] = 3;
    sub_1FEAC();
    sub_27E2C0();
    uint64_t v25 = type metadata accessor for MediaEngageEvent.Model(0);
    LOBYTE(v29) = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    char v36 = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E2C0();
    sub_1F78C((uint64_t)v2 + *(int *)(v25 + 40), (uint64_t)&v29, &qword_316A30);
    sub_1F78C((uint64_t)&v29, (uint64_t)v28, &qword_316A30);
    v27[7] = 6;
    sub_1FF00();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1FDB0()
{
  unint64_t result = qword_316A40;
  if (!qword_316A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A40);
  }
  return result;
}

unint64_t sub_1FE04()
{
  unint64_t result = qword_316A48;
  if (!qword_316A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A48);
  }
  return result;
}

unint64_t sub_1FE58()
{
  unint64_t result = qword_316A50;
  if (!qword_316A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A50);
  }
  return result;
}

unint64_t sub_1FEAC()
{
  unint64_t result = qword_316A58;
  if (!qword_316A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A58);
  }
  return result;
}

unint64_t sub_1FF00()
{
  unint64_t result = qword_316A60;
  if (!qword_316A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A60);
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  sub_4E04(&qword_316A28);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_316A68);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaEngageEvent.Model(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1FDB0();
  uint64_t v44 = v9;
  uint64_t v13 = (uint64_t)v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)a1);
  }
  char v36 = v6;
  uint64_t v37 = v10;
  uint64_t v14 = v42;
  uint64_t v45 = a1;
  v46[0] = 0;
  sub_1DEE8();
  uint64_t v15 = v43;
  sub_27E260();
  long long v16 = v48;
  int v17 = v49;
  uint64_t v18 = (uint64_t)v12;
  *(_OWORD *)uint64_t v12 = v47;
  *((_OWORD *)v12 + 1) = v16;
  *((_DWORD *)v12 + 8) = v17;
  v46[0] = 1;
  sub_20844();
  sub_27E260();
  uint64_t v19 = *((void *)&v47 + 1);
  long long v21 = v49;
  long long v20 = v50;
  uint64_t v22 = v51;
  char v23 = BYTE8(v51);
  char v24 = BYTE9(v51);
  char v25 = BYTE10(v51);
  long long v26 = v52;
  *((void *)v12 + 5) = v47;
  *((void *)v12 + 6) = v19;
  *(_OWORD *)(v12 + 56) = v48;
  *(_OWORD *)(v12 + 72) = v21;
  *(_OWORD *)(v12 + 88) = v20;
  *((void *)v12 + 13) = v22;
  v12[112] = v23;
  v12[113] = v24;
  v12[114] = v25;
  *(_OWORD *)(v12 + 120) = v26;
  v46[0] = 2;
  sub_20898();
  sub_27E1F0();
  long long v27 = v48;
  *(_OWORD *)(v12 + 136) = v47;
  *(_OWORD *)(v12 + 152) = v27;
  long long v28 = v50;
  *(_OWORD *)(v12 + 168) = v49;
  *(_OWORD *)(v12 + 184) = v28;
  long long v29 = v52;
  *(_OWORD *)(v12 + 200) = v51;
  *(_OWORD *)(v12 + 216) = v29;
  *(_OWORD *)(v12 + 232) = v53;
  v46[0] = 3;
  sub_208EC();
  sub_27E1F0();
  *(_OWORD *)&stru_B8.flags = v47;
  *(_OWORD *)stru_108.sectname = v48;
  LOBYTE(v47) = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v30 = v36;
  uint64_t v31 = v41;
  sub_27E260();
  uint64_t v35 = 0;
  uint64_t v32 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v18 + *(int *)(v37 + 32), v30, v31);
  sub_27D7F0();
  LOBYTE(v47) = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v33 = (uint64_t)v39;
  sub_27E1F0();
  sub_1F78C(v33, v18 + *(int *)(v32 + 36), &qword_316A28);
  char v54 = 6;
  sub_20940();
  sub_27E1F0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v15);
  sub_1F78C((uint64_t)&v47, (uint64_t)v46, &qword_316A30);
  sub_1F78C((uint64_t)v46, v18 + *(int *)(v32 + 40), &qword_316A30);
  sub_20994(v18, v38);
  sub_5E94((uint64_t)v45);
  return sub_209F8(v18);
}

uint64_t sub_2071C(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_316A28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2077C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_207C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20844()
{
  unint64_t result = qword_316A70;
  if (!qword_316A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A70);
  }
  return result;
}

unint64_t sub_20898()
{
  unint64_t result = qword_316A78;
  if (!qword_316A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A78);
  }
  return result;
}

unint64_t sub_208EC()
{
  unint64_t result = qword_316A80;
  if (!qword_316A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A80);
  }
  return result;
}

unint64_t sub_20940()
{
  unint64_t result = qword_316A88;
  if (!qword_316A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316A88);
  }
  return result;
}

uint64_t sub_20994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A6C(void *a1)
{
  return MediaEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A84@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315580, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3169D0, a1);
}

uint64_t sub_20ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315588, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3169E8, a1);
}

uint64_t sub_20AF4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v9, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316A20);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v9, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A00);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A08);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316A20);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_21B00);
}

uint64_t sub_21B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A00);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A08);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  uint64_t v15 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_316A20);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_21DAC);
}

uint64_t sub_21DAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A00);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A08);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v21 = sub_4E04(&qword_316A20);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_22050()
{
  sub_2235C(319, &qword_316AF8, (void (*)(void))sub_1DEE8, (void (*)(void))sub_1DF40);
  if (v0 <= 0x3F)
  {
    sub_2235C(319, &qword_316B00, (void (*)(void))sub_20844, (void (*)(void))sub_1FE04);
    if (v1 <= 0x3F)
    {
      sub_2235C(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
      if (v2 <= 0x3F)
      {
        sub_2235C(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F)
            {
              sub_2235C(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_2235C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for MediaEngageEvent.Model(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  uint64_t v10 = a2[10];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = v10;
  uint64_t v11 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = a2[13];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)((char *)a2 + 113);
  uint64_t v12 = a2[16];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v13)
  {
    long long v22 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v22;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    long long v23 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v23;
    long long v24 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v24;
    uint64_t v19 = a2[34];
    if (v19) {
      goto LABEL_4;
    }
LABEL_7:
    long long v25 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v25;
    goto LABEL_8;
  }
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = a2[21];
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v15;
  uint64_t v16 = a2[25];
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = v16;
  uint64_t v17 = a2[27];
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = v17;
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
  uint64_t v18 = a2[30];
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = a2[34];
  if (!v19) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v20 = a2[32];
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = v20;
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t)a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_27D7F0();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_4E04(&qword_316A28);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t)a2 + v36;
  uint64_t v39 = *(void *)(v38 + 8);
  if (v39)
  {
    *(void *)uint64_t v37 = *(void *)v38;
    *(void *)(v37 + 8) = v39;
    uint64_t v40 = *(void *)(v38 + 24);
    *(void *)(v37 + 16) = *(void *)(v38 + 16);
    *(void *)(v37 + 24) = v40;
    uint64_t v41 = *(void *)(v38 + 40);
    *(void *)(v37 + 32) = *(void *)(v38 + 32);
    *(void *)(v37 + 40) = v41;
    *(unsigned char *)(v37 + 48) = *(unsigned char *)(v38 + 48);
    uint64_t v42 = *(void *)(v38 + 64);
    *(void *)(v37 + 56) = *(void *)(v38 + 56);
    *(void *)(v37 + 64) = v42;
    uint64_t v43 = *(void *)(v38 + 80);
    *(void *)(v37 + 72) = *(void *)(v38 + 72);
    *(void *)(v37 + 80) = v43;
    uint64_t v44 = *(void *)(v38 + 96);
    *(void *)(v37 + 88) = *(void *)(v38 + 88);
    *(void *)(v37 + 96) = v44;
    uint64_t v45 = *(void *)(v38 + 112);
    *(void *)(v37 + 104) = *(void *)(v38 + 104);
    *(void *)(v37 + 112) = v45;
    uint64_t v46 = *(void *)(v38 + 128);
    *(void *)(v37 + 120) = *(void *)(v38 + 120);
    *(void *)(v37 + 128) = v46;
    uint64_t v47 = *(void *)(v38 + 144);
    *(void *)(v37 + 136) = *(void *)(v38 + 136);
    *(void *)(v37 + 144) = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v48 = *(_OWORD *)(v38 + 112);
    *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
    *(_OWORD *)(v37 + 112) = v48;
    *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
    *(void *)(v37 + 144) = *(void *)(v38 + 144);
    long long v49 = *(_OWORD *)(v38 + 48);
    *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
    *(_OWORD *)(v37 + 48) = v49;
    long long v50 = *(_OWORD *)(v38 + 80);
    *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
    *(_OWORD *)(v37 + 80) = v50;
    long long v51 = *(_OWORD *)(v38 + 16);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *(_OWORD *)(v37 + 16) = v51;
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent.Model(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 272))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t result = *(void *)(a1 + a2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v12;
    uint64_t v13 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v13;
    uint64_t v14 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v14;
    uint64_t v15 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v15;
    uint64_t v16 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v16;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
    uint64_t v17 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = *(void *)(a2 + 272);
    if (v18)
    {
LABEL_3:
      uint64_t v19 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v19;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v20;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    long long v21 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v21;
    long long v22 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v22;
    uint64_t v18 = *(void *)(a2 + 272);
    if (v18) {
      goto LABEL_3;
    }
  }
  long long v23 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v23;
LABEL_6:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = sub_27D7F0();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = sub_4E04(&qword_316A28);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(v36 + 8);
  if (v37)
  {
    *(void *)uint64_t v35 = *(void *)v36;
    *(void *)(v35 + 8) = v37;
    uint64_t v38 = *(void *)(v36 + 24);
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    *(void *)(v35 + 24) = v38;
    uint64_t v39 = *(void *)(v36 + 40);
    *(void *)(v35 + 32) = *(void *)(v36 + 32);
    *(void *)(v35 + 40) = v39;
    *(unsigned char *)(v35 + 48) = *(unsigned char *)(v36 + 48);
    uint64_t v40 = *(void *)(v36 + 64);
    *(void *)(v35 + 56) = *(void *)(v36 + 56);
    *(void *)(v35 + 64) = v40;
    uint64_t v41 = *(void *)(v36 + 80);
    *(void *)(v35 + 72) = *(void *)(v36 + 72);
    *(void *)(v35 + 80) = v41;
    uint64_t v42 = *(void *)(v36 + 96);
    *(void *)(v35 + 88) = *(void *)(v36 + 88);
    *(void *)(v35 + 96) = v42;
    uint64_t v43 = *(void *)(v36 + 112);
    *(void *)(v35 + 104) = *(void *)(v36 + 104);
    *(void *)(v35 + 112) = v43;
    uint64_t v44 = *(void *)(v36 + 128);
    *(void *)(v35 + 120) = *(void *)(v36 + 120);
    *(void *)(v35 + 128) = v44;
    uint64_t v45 = *(void *)(v36 + 144);
    *(void *)(v35 + 136) = *(void *)(v36 + 136);
    *(void *)(v35 + 144) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *(_OWORD *)(v36 + 112);
    *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
    *(_OWORD *)(v35 + 112) = v46;
    *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
    *(void *)(v35 + 144) = *(void *)(v36 + 144);
    long long v47 = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
    *(_OWORD *)(v35 + 48) = v47;
    long long v48 = *(_OWORD *)(v36 + 80);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 80) = v48;
    long long v49 = *(_OWORD *)(v36 + 16);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(_OWORD *)(v35 + 16) = v49;
  }
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 136);
  uint64_t v7 = (_OWORD *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v8)
    {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v9 = *(_DWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
      *(_DWORD *)(a1 + 224) = v9;
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235A0(a1 + 136);
      long long v12 = *(_OWORD *)(a2 + 152);
      long long v11 = *(_OWORD *)(a2 + 168);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 152) = v12;
      *(_OWORD *)(a1 + 168) = v11;
      long long v13 = *(_OWORD *)(a2 + 232);
      long long v15 = *(_OWORD *)(a2 + 184);
      long long v14 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v13;
      *(_OWORD *)(a1 + 184) = v15;
      *(_OWORD *)(a1 + 200) = v14;
    }
  }
  else if (v8)
  {
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    int v10 = *(_DWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
    *(_DWORD *)(a1 + 224) = v10;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v7;
    long long v17 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v17;
    *uint64_t v6 = v16;
    long long v18 = *(_OWORD *)(a2 + 184);
    long long v19 = *(_OWORD *)(a2 + 200);
    long long v20 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v20;
    *(_OWORD *)(a1 + 184) = v18;
    *(_OWORD *)(a1 + 200) = v19;
  }
  long long v21 = (_OWORD *)(a1 + 248);
  long long v22 = (_OWORD *)(a2 + 248);
  uint64_t v23 = *(void *)(a2 + 272);
  if (*(void *)(a1 + 272))
  {
    if (v23)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235F4(a1 + 248);
      long long v24 = *(_OWORD *)(a2 + 264);
      *long long v21 = *v22;
      *(_OWORD *)(a1 + 264) = v24;
    }
  }
  else if (v23)
  {
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 264);
    *long long v21 = *v22;
    *(_OWORD *)(a1 + 264) = v25;
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = sub_27D7F0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
LABEL_20:
    uint64_t v38 = sub_4E04(&qword_316A28);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_21:
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(a1 + v39 + 8);
  uint64_t v43 = *(void *)(v41 + 8);
  if (v42)
  {
    if (v43)
    {
      *(void *)uint64_t v40 = *(void *)v41;
      *(void *)(v40 + 8) = *(void *)(v41 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 16) = *(void *)(v41 + 16);
      *(void *)(v40 + 24) = *(void *)(v41 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 32) = *(void *)(v41 + 32);
      *(void *)(v40 + 40) = *(void *)(v41 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v40 + 48) = *(unsigned char *)(v41 + 48);
      *(void *)(v40 + 56) = *(void *)(v41 + 56);
      *(void *)(v40 + 64) = *(void *)(v41 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 72) = *(void *)(v41 + 72);
      *(void *)(v40 + 80) = *(void *)(v41 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 88) = *(void *)(v41 + 88);
      *(void *)(v40 + 96) = *(void *)(v41 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 104) = *(void *)(v41 + 104);
      *(void *)(v40 + 112) = *(void *)(v41 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 120) = *(void *)(v41 + 120);
      *(void *)(v40 + 128) = *(void *)(v41 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 136) = *(void *)(v41 + 136);
      *(void *)(v40 + 144) = *(void *)(v41 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(v40);
      long long v44 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v44;
      long long v45 = *(_OWORD *)(v41 + 80);
      long long v47 = *(_OWORD *)(v41 + 32);
      long long v46 = *(_OWORD *)(v41 + 48);
      *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
      *(_OWORD *)(v40 + 80) = v45;
      *(_OWORD *)(v40 + 32) = v47;
      *(_OWORD *)(v40 + 48) = v46;
      long long v49 = *(_OWORD *)(v41 + 112);
      long long v48 = *(_OWORD *)(v41 + 128);
      long long v50 = *(_OWORD *)(v41 + 96);
      *(void *)(v40 + 144) = *(void *)(v41 + 144);
      *(_OWORD *)(v40 + 112) = v49;
      *(_OWORD *)(v40 + 128) = v48;
      *(_OWORD *)(v40 + 96) = v50;
    }
  }
  else if (v43)
  {
    *(void *)uint64_t v40 = *(void *)v41;
    *(void *)(v40 + 8) = *(void *)(v41 + 8);
    *(void *)(v40 + 16) = *(void *)(v41 + 16);
    *(void *)(v40 + 24) = *(void *)(v41 + 24);
    *(void *)(v40 + 32) = *(void *)(v41 + 32);
    *(void *)(v40 + 40) = *(void *)(v41 + 40);
    *(unsigned char *)(v40 + 48) = *(unsigned char *)(v41 + 48);
    *(void *)(v40 + 56) = *(void *)(v41 + 56);
    *(void *)(v40 + 64) = *(void *)(v41 + 64);
    *(void *)(v40 + 72) = *(void *)(v41 + 72);
    *(void *)(v40 + 80) = *(void *)(v41 + 80);
    *(void *)(v40 + 88) = *(void *)(v41 + 88);
    *(void *)(v40 + 96) = *(void *)(v41 + 96);
    *(void *)(v40 + 104) = *(void *)(v41 + 104);
    *(void *)(v40 + 112) = *(void *)(v41 + 112);
    *(void *)(v40 + 120) = *(void *)(v41 + 120);
    *(void *)(v40 + 128) = *(void *)(v41 + 128);
    *(void *)(v40 + 136) = *(void *)(v41 + 136);
    *(void *)(v40 + 144) = *(void *)(v41 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v51;
    long long v52 = *(_OWORD *)(v41 + 32);
    long long v53 = *(_OWORD *)(v41 + 48);
    long long v54 = *(_OWORD *)(v41 + 80);
    *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
    *(_OWORD *)(v40 + 80) = v54;
    *(_OWORD *)(v40 + 32) = v52;
    *(_OWORD *)(v40 + 48) = v53;
    long long v55 = *(_OWORD *)(v41 + 96);
    long long v56 = *(_OWORD *)(v41 + 112);
    long long v57 = *(_OWORD *)(v41 + 128);
    *(void *)(v40 + 144) = *(void *)(v41 + 144);
    *(_OWORD *)(v40 + 112) = v56;
    *(_OWORD *)(v40 + 128) = v57;
    *(_OWORD *)(v40 + 96) = v55;
  }
  return a1;
}

uint64_t sub_235A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_235F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23648(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  long long v12 = (void *)(a1 + v11);
  long long v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_27D7F0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_4E04(&qword_316A28);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v20;
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(v19 + 128);
  *(void *)(v18 + 144) = *(void *)(v19 + 144);
  long long v21 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v21;
  long long v22 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v22;
  long long v23 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v23;
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    uint64_t v12 = *(void *)(a2 + 152);
    if (v12)
    {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v16;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
      uint64_t v17 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_235A0(a1 + 136);
  }
  long long v18 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v18;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  long long v19 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v19;
  long long v20 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v20;
LABEL_6:
  if (*(void *)(a1 + 272))
  {
    if (*(void *)(a2 + 272))
    {
      uint64_t v21 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v22;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_235F4(a1 + 248);
  }
  long long v23 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v23;
LABEL_11:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_27D7F0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
LABEL_16:
    uint64_t v36 = sub_4E04(&qword_316A28);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v29, v30, v31);
LABEL_17:
  uint64_t v37 = a3[10];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  if (!*(void *)(a1 + v37 + 8))
  {
LABEL_21:
    long long v49 = *(_OWORD *)(v39 + 112);
    *(_OWORD *)(v38 + 96) = *(_OWORD *)(v39 + 96);
    *(_OWORD *)(v38 + 112) = v49;
    *(_OWORD *)(v38 + 128) = *(_OWORD *)(v39 + 128);
    *(void *)(v38 + 144) = *(void *)(v39 + 144);
    long long v50 = *(_OWORD *)(v39 + 48);
    *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
    *(_OWORD *)(v38 + 48) = v50;
    long long v51 = *(_OWORD *)(v39 + 80);
    *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
    *(_OWORD *)(v38 + 80) = v51;
    long long v52 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 16) = v52;
    return a1;
  }
  uint64_t v40 = *(void *)(v39 + 8);
  if (!v40)
  {
    sub_23648(v38);
    goto LABEL_21;
  }
  *(void *)uint64_t v38 = *(void *)v39;
  *(void *)(v38 + 8) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 24);
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  *(void *)(v38 + 24) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v39 + 40);
  *(void *)(v38 + 32) = *(void *)(v39 + 32);
  *(void *)(v38 + 40) = v42;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v38 + 48) = *(unsigned char *)(v39 + 48);
  uint64_t v43 = *(void *)(v39 + 64);
  *(void *)(v38 + 56) = *(void *)(v39 + 56);
  *(void *)(v38 + 64) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v39 + 80);
  *(void *)(v38 + 72) = *(void *)(v39 + 72);
  *(void *)(v38 + 80) = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(v39 + 96);
  *(void *)(v38 + 88) = *(void *)(v39 + 88);
  *(void *)(v38 + 96) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v39 + 112);
  *(void *)(v38 + 104) = *(void *)(v39 + 104);
  *(void *)(v38 + 112) = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v39 + 128);
  *(void *)(v38 + 120) = *(void *)(v39 + 120);
  *(void *)(v38 + 128) = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v39 + 144);
  *(void *)(v38 + 136) = *(void *)(v39 + 136);
  *(void *)(v38 + 144) = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23D38);
}

uint64_t sub_23D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4E04(&qword_316A28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23E7C);
}

uint64_t sub_23E7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4E04(&qword_316A28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_23FAC()
{
  sub_27D7C0();
  if (v0 <= 0x3F)
  {
    sub_240A4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_240A4()
{
  if (!qword_316BC8)
  {
    sub_27D7F0();
    unint64_t v0 = sub_27E040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_316BC8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MediaEngageEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageEvent.Model.CodingKeys;
}

unint64_t sub_24204()
{
  unint64_t result = qword_316C10;
  if (!qword_316C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C10);
  }
  return result;
}

unint64_t sub_2425C()
{
  unint64_t result = qword_316C18;
  if (!qword_316C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C18);
  }
  return result;
}

unint64_t sub_242B4()
{
  unint64_t result = qword_316C20;
  if (!qword_316C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C20);
  }
  return result;
}

uint64_t sub_24308(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144616964656DLL && a2 == 0xE900000000000061;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002ADF00 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BookAnalytics::SortBy_optional __swiftcall SortBy.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7248;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SortBy.rawValue.getter()
{
  uint64_t result = 0x6E69646E65637361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x69646E6563736564;
      break;
    case 2:
      uint64_t result = 0x44657361656C6572;
      break;
    case 3:
      uint64_t result = 0x6972616C75706F70;
      break;
    case 4:
      uint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24734(unsigned __int8 *a1, char *a2)
{
  return sub_2D394(*a1, *a2);
}

unint64_t sub_24744()
{
  unint64_t result = qword_316C28;
  if (!qword_316C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C28);
  }
  return result;
}

Swift::Int sub_24798()
{
  return sub_27E420();
}

uint64_t sub_248A0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_24990()
{
  return sub_27E420();
}

BookAnalytics::SortBy_optional sub_24A94(Swift::String *a1)
{
  return SortBy.init(rawValue:)(*a1);
}

void sub_24AA0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x6E69646E65637361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000676ELL;
      uint64_t v3 = 0x69646E6563736564;
      goto LABEL_3;
    case 2:
      *a1 = 0x44657361656C6572;
      a1[1] = 0xEB00000000657461;
      break;
    case 3:
      *a1 = 0x6972616C75706F70;
      a1[1] = 0xEA00000000007974;
      break;
    case 4:
      *a1 = 0x656C746974;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_24B6C()
{
  return sub_27DED0();
}

uint64_t sub_24BCC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SortBy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24CE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SortBy()
{
  return &type metadata for SortBy;
}

unint64_t sub_24D20()
{
  unint64_t result = qword_316C30;
  if (!qword_316C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C30);
  }
  return result;
}

uint64_t AppData.appBundleVersion.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AppData.appBundleVersion.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t ClickData.targetType.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickData.targetType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ClickData.targetType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LinkData.previousSeriesID.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousSeriesID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*LinkData.previousSeriesID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngagementData.isBuffering.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MediaEngagementData.isBuffering.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t (*LinkData.previousGenreID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngagementData.isFailed.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t MediaEngagementData.isFailed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

uint64_t (*MediaEngagementData.isFailed.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MediaEngagementData.isMediaCompleted.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t MediaEngagementData.isMediaCompleted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 74) = result;
  return result;
}

uint64_t (*MediaEngagementData.isMediaCompleted.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultsItemTypeData.section.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsItemTypeData.section.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*SearchResultsItemTypeData.section.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall MediaEngagementData.init(mediaPlayMethod:mediaTimePlayed:mediaUserAction:videoMode:muteStatus:isBuffering:isFailed:isMediaCompleted:isPlaying:)(BookAnalytics::MediaEngagementData *__return_ptr retstr, Swift::String mediaPlayMethod, Swift::Int64 mediaTimePlayed, Swift::String mediaUserAction, Swift::String videoMode, Swift::String muteStatus, Swift::Bool isBuffering, Swift::Bool isFailed, Swift::Bool isMediaCompleted, Swift::String isPlaying)
{
  retstr->mediaPlayMethod = mediaPlayMethod;
  retstr->mediaTimePlayed = mediaTimePlayed;
  retstr->mediaUserAction = mediaUserAction;
  retstr->videoMode = videoMode;
  retstr->muteStatus = muteStatus;
  retstr->isBuffering = isBuffering;
  retstr->isFailed = isFailed;
  retstr->isMediaCompleted = isMediaCompleted;
  retstr->isPlaying = isPlaying;
}

unint64_t sub_24FEC(char a1)
{
  unint64_t result = 0x616C50616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6954616964656DLL;
      break;
    case 2:
      unint64_t result = 0x657355616964656DLL;
      break;
    case 3:
      unint64_t result = 0x646F4D6F65646976;
      break;
    case 4:
      unint64_t result = 0x746174536574756DLL;
      break;
    case 5:
      unint64_t result = 0x7265666675427369;
      break;
    case 6:
      unint64_t result = 0x64656C6961467369;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6E6979616C507369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2514C()
{
  return sub_24FEC(*v0);
}

uint64_t sub_25154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26244(a1, a2);
  *a3 = result;
  return result;
}

void sub_2517C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_25188(uint64_t a1)
{
  unint64_t v2 = sub_25C04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_251C4(uint64_t a1)
{
  unint64_t v2 = sub_25C04();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MediaEngagementData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316C38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v22 = *(void *)(v1 + 24);
  uint64_t v23 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 40);
  uint64_t v21 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v18 = *(void *)(v1 + 56);
  uint64_t v19 = v9;
  uint64_t v17 = *(void *)(v1 + 64);
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 72);
  int v15 = *(unsigned __int8 *)(v1 + 73);
  int v16 = v9;
  int v14 = *(unsigned __int8 *)(v1 + 74);
  uint64_t v10 = *(void *)(v1 + 88);
  v13[1] = *(void *)(v1 + 80);
  v13[2] = v10;
  sub_5900(a1, a1[3]);
  sub_25C04();
  sub_27E440();
  char v33 = 0;
  uint64_t v11 = v24;
  sub_27E2F0();
  if (!v11)
  {
    char v32 = 1;
    sub_27E350();
    char v31 = 2;
    sub_27E2F0();
    char v30 = 3;
    sub_27E2F0();
    char v29 = 4;
    sub_27E2F0();
    char v28 = 5;
    sub_27E300();
    char v27 = 6;
    sub_27E300();
    char v26 = 7;
    sub_27E300();
    char v25 = 8;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MediaEngagementData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316C48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25C04();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v45 = 0;
  uint64_t v10 = sub_27E220();
  uint64_t v12 = v11;
  char v44 = 1;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_27E280();
  char v43 = 2;
  uint64_t v33 = sub_27E220();
  uint64_t v34 = v10;
  char v42 = 3;
  uint64_t v36 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_27E220();
  uint64_t v16 = v15;
  uint64_t v32 = v14;
  char v41 = 4;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_27E220();
  uint64_t v31 = v17;
  char v40 = 5;
  swift_bridgeObjectRetain();
  int v29 = sub_27E230();
  char v39 = 6;
  int v28 = sub_27E230();
  char v38 = 7;
  int v26 = sub_27E230();
  char v37 = 8;
  uint64_t v27 = sub_27E220();
  uint64_t v19 = v18;
  v28 &= 1u;
  v29 &= 1u;
  v26 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = v12;
  uint64_t v21 = v33;
  *(void *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v21;
  uint64_t v23 = v31;
  uint64_t v22 = v32;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  uint64_t v24 = v30;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v23;
  *(unsigned char *)(a2 + 72) = v29;
  *(unsigned char *)(a2 + 73) = v28;
  *(unsigned char *)(a2 + 74) = v26;
  *(void *)(a2 + 80) = v27;
  *(void *)(a2 + 88) = v19;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngagementData.init(from:)(a1, a2);
}

uint64_t sub_259D0(void *a1)
{
  return MediaEngagementData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics19MediaEngagementDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a2 + 88);
  uint64_t v19 = *(void *)(a2 + 80);
  int v24 = *(unsigned __int8 *)(a1 + 72);
  int v25 = *(unsigned __int8 *)(a1 + 73);
  uint64_t v30 = *(void *)(a1 + 64);
  uint64_t v31 = *(void *)(a1 + 56);
  int v22 = *(unsigned __int8 *)(a2 + 72);
  int v23 = *(unsigned __int8 *)(a2 + 73);
  uint64_t v28 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a2 + 56);
  int v26 = *(unsigned __int8 *)(a2 + 74);
  int v27 = *(unsigned __int8 *)(a1 + 74);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v8) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_27E370();
    uint64_t result = 0;
    if ((v12 & 1) == 0 || v2 != v8) {
      return result;
    }
  }
  if (v4 == v7 && v3 == v10 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
  {
    if (v5 == v9 && v6 == v11 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
    {
      int v16 = v27 ^ v26;
      if (v31 == v29 && v30 == v28)
      {
        if ((v24 ^ v22 | v25 ^ v23 | v16)) {
          return 0;
        }
      }
      else
      {
        char v17 = sub_27E370();
        uint64_t result = 0;
        if ((v24 ^ v22) & 1 | ((v17 & 1) == 0) | (v25 ^ v23 | v16) & 1) {
          return result;
        }
      }
      if (v21 == v19 && v20 == v18)
      {
        return 1;
      }
      else
      {
        return sub_27E370();
      }
    }
  }
  return result;
}

unint64_t sub_25C04()
{
  unint64_t result = qword_316C40;
  if (!qword_316C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C40);
  }
  return result;
}

uint64_t destroy for MediaEngagementData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEngagementData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ContentData(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for MediaEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData()
{
  return &type metadata for MediaEngagementData;
}

uint64_t getEnumTagSinglePayload for MediaEngagementData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData.CodingKeys()
{
  return &type metadata for MediaEngagementData.CodingKeys;
}

unint64_t sub_26140()
{
  unint64_t result = qword_316C50;
  if (!qword_316C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C50);
  }
  return result;
}

unint64_t sub_26198()
{
  unint64_t result = qword_316C58;
  if (!qword_316C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C58);
  }
  return result;
}

unint64_t sub_261F0()
{
  unint64_t result = qword_316C60;
  if (!qword_316C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C60);
  }
  return result;
}

uint64_t sub_26244(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616C50616964656DLL && a2 == 0xEF646F6874654D79;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657355616964656DLL && a2 == 0xEF6E6F6974634172 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646F4D6F65646976 && a2 == 0xE900000000000065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746174536574756DLL && a2 == 0xEA00000000007375 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7265666675427369 && a2 == 0xEB00000000676E69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C6961467369 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADF20 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6979616C507369 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t YIRSourceData.longestAudiobook.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t YIRSourceData.longestAudiobook.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

void __swiftcall FlowcaseData.init(name:positionInSection:flowcaseID:lastRefreshedTimestamp:flowcaseType:)(BookAnalytics::FlowcaseData *__return_ptr retstr, Swift::String name, Swift::Int32 positionInSection, Swift::String flowcaseID, Swift::Int64_optional lastRefreshedTimestamp, Swift::String_optional flowcaseType)
{
  retstr->name = name;
  retstr->positionInSection = positionInSection;
  retstr->flowcaseID = flowcaseID;
  retstr->lastRefreshedTimestamp.value = lastRefreshedTimestamp.value;
  retstr->lastRefreshedTimestamp.is_nil = lastRefreshedTimestamp.is_nil;
  retstr->flowcaseType = flowcaseType;
}

unint64_t sub_266D0(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 4:
      unint64_t result = 0x65736163776F6C66;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_26780()
{
  return sub_266D0(*v0);
}

uint64_t sub_26788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_27490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_267B0(uint64_t a1)
{
  unint64_t v2 = sub_26EE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_267EC(uint64_t a1)
{
  unint64_t v2 = sub_26EE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowcaseData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316C68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(_DWORD *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = v7;
  uint64_t v13 = *(void *)(v1 + 40);
  int v12 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  v11[0] = *(void *)(v1 + 64);
  v11[1] = v8;
  sub_5900(a1, a1[3]);
  sub_26EE8();
  sub_27E440();
  char v22 = 0;
  uint64_t v9 = v17;
  sub_27E2F0();
  if (!v9)
  {
    char v21 = 1;
    sub_27E340();
    char v20 = 2;
    sub_27E2F0();
    char v19 = 3;
    sub_27E2E0();
    char v18 = 4;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FlowcaseData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316C78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_26EE8();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v31 = 0;
    uint64_t v10 = sub_27E220();
    uint64_t v12 = v11;
    char v30 = 1;
    swift_bridgeObjectRetain();
    int v25 = sub_27E270();
    char v29 = 2;
    uint64_t v24 = sub_27E220();
    char v28 = 3;
    uint64_t v26 = v13;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_27E210();
    int v22 = v15;
    uint64_t v23 = v14;
    char v27 = 4;
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    char v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 16) = v25;
    uint64_t v20 = v26;
    *(void *)(a2 + 24) = v24;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v23;
    *(unsigned char *)(a2 + 48) = v22 & 1;
    *(void *)(a2 + 56) = v21;
    *(void *)(a2 + 64) = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_26D64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FlowcaseData.init(from:)(a1, a2);
}

uint64_t sub_26D7C(void *a1)
{
  return FlowcaseData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12FlowcaseDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 64);
  int v6 = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_27E370();
    uint64_t result = 0;
    if ((v12 & 1) == 0 || v2 != v6) {
      return result;
    }
  }
  if (v3 == v7 && v4 == v8 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
  {
    if (v5)
    {
      if (!v10) {
        return 0;
      }
    }
    else
    {
      if (v18 == v9) {
        char v15 = v10;
      }
      else {
        char v15 = 1;
      }
      if (v15) {
        return 0;
      }
    }
    if (v19)
    {
      if (!v11 || (v17 != v16 || v19 != v11) && (sub_27E370() & 1) == 0) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_26EE8()
{
  unint64_t result = qword_316C70;
  if (!qword_316C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C70);
  }
  return result;
}

unint64_t sub_26F40()
{
  unint64_t result = qword_316C80;
  if (!qword_316C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C80);
  }
  return result;
}

unint64_t sub_26F98()
{
  unint64_t result = qword_316C88;
  if (!qword_316C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C88);
  }
  return result;
}

uint64_t destroy for FlowcaseData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FlowcaseData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FlowcaseData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FlowcaseData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FlowcaseData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowcaseData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowcaseData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowcaseData()
{
  return &type metadata for FlowcaseData;
}

unsigned char *storeEnumTagSinglePayload for FlowcaseData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowcaseData.CodingKeys()
{
  return &type metadata for FlowcaseData.CodingKeys;
}

unint64_t sub_2738C()
{
  unint64_t result = qword_316C90;
  if (!qword_316C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C90);
  }
  return result;
}

unint64_t sub_273E4()
{
  unint64_t result = qword_316C98;
  if (!qword_316C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316C98);
  }
  return result;
}

unint64_t sub_2743C()
{
  unint64_t result = qword_316CA0;
  if (!qword_316CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CA0);
  }
  return result;
}

uint64_t sub_27490(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADF40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEA00000000004449 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002ADF60 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::ErrorData __swiftcall ErrorData.init(errorCode:errorDescription:)(Swift::String errorCode, Swift::String errorDescription)
{
  Swift::String *v2 = errorCode;
  v2[1] = errorDescription;
  result.errorDescription = errorDescription;
  result.errorCode = errorCode;
  return result;
}

uint64_t sub_276B8()
{
  if (*v0) {
    return 0x6570795465676170;
  }
  else {
    return 0x444965676170;
  }
}

uint64_t sub_276F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_28000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_27718(uint64_t a1)
{
  unint64_t v2 = sub_27BFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_27754(uint64_t a1)
{
  unint64_t v2 = sub_27BFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PageData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316CA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_27BFC();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E290();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PageData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316CB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_27BFC();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v20 = 0;
    uint64_t v9 = sub_27E1C0();
    uint64_t v11 = v10;
    char v19 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v12;
    v16(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v18;
    a2[3] = v15;
    swift_bridgeObjectRetain();
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_27B10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PageData.init(from:)(a1, a2);
}

uint64_t sub_27B28(void *a1)
{
  return PageData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8PageDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (!v6)
    {
LABEL_11:
      if (v4 == v7 && v5 == v8) {
        return 1;
      }
      return sub_27E370();
    }
    return 0;
  }
  if (!v6) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v6) {
    goto LABEL_11;
  }
  char v10 = sub_27E370();
  uint64_t result = 0;
  if (v10) {
    goto LABEL_11;
  }
  return result;
}

unint64_t sub_27BFC()
{
  unint64_t result = qword_316CB0;
  if (!qword_316CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CB0);
  }
  return result;
}

void *initializeWithCopy for ErrorData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ErrorData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ErrorData(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ErrorData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageData()
{
  return &type metadata for PageData;
}

unsigned char *storeEnumTagSinglePayload for PageData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27EC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageData.CodingKeys()
{
  return &type metadata for PageData.CodingKeys;
}

unint64_t sub_27EFC()
{
  unint64_t result = qword_316CC0;
  if (!qword_316CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CC0);
  }
  return result;
}

unint64_t sub_27F54()
{
  unint64_t result = qword_316CC8;
  if (!qword_316CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CC8);
  }
  return result;
}

unint64_t sub_27FAC()
{
  unint64_t result = qword_316CD0;
  if (!qword_316CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CD0);
  }
  return result;
}

uint64_t sub_28000(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965676170 && a2 == 0xE600000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795465676170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double OnDevicePersonalizationPropertyData.lockedIn.getter()
{
  return *(double *)(v0 + 8);
}

void OnDevicePersonalizationPropertyData.lockedIn.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*ScrubData.totalLength.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void ReadingGoalsData.dailyReadingGoalStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *ReadingGoalsData.dailyReadingGoalStatus.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t ReadingGoalsData.weeklyGoalsStatus.getter()
{
  return *(unsigned int *)(v0 + 28);
}

uint64_t ReadingGoalsData.weeklyGoalsStatus.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*ReadingSettingsData.brightnessLevel.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

double ReadingGoalsData.lastLongestGoalReachedDate.getter()
{
  return *(double *)(v0 + 40);
}

void ReadingGoalsData.lastLongestGoalReachedDate.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

void LinkData.linkActionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *LinkData.linkActionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ClickData.outBoundURL.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

double ReadingGoalsData.defaultYearlyReadingGoalChangeDate.getter()
{
  return *(double *)(v0 + 56);
}

void ReadingGoalsData.defaultYearlyReadingGoalChangeDate.setter(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t ReadingGoalsData.yearlyReadingGoalCount.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ReadingGoalsData.yearlyReadingGoalCount.setter(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t (*UserEventStorageData.playCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void ReadingGoalsData.yearlyReadingGoalStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

unsigned char *ReadingGoalsData.yearlyReadingGoalStatus.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 72) = *result;
  return result;
}

void __swiftcall ReadingGoalsData.init(defaultReadingGoal:defaultReadingGoalChangeDate:dailyReadingGoalDuration:dailyReadingGoalStatus:weeklyGoalsStatus:longestGoalReachedDays:lastLongestGoalReachedDate:defaultYearlyReadingGoal:defaultYearlyReadingGoalChangeDate:yearlyReadingGoalCount:yearlyReadingGoalStatus:)(BookAnalytics::ReadingGoalsData *__return_ptr retstr, BookAnalytics::DefaultReadingGoal defaultReadingGoal, Swift::Double defaultReadingGoalChangeDate, Swift::Int64 dailyReadingGoalDuration, BookAnalytics::DailyReadingGoalStatus dailyReadingGoalStatus, Swift::Int32 weeklyGoalsStatus, Swift::Int32 longestGoalReachedDays, Swift::Double lastLongestGoalReachedDate, BookAnalytics::DefaultReadingGoal defaultYearlyReadingGoal, Swift::Double defaultYearlyReadingGoalChangeDate, Swift::Int64 yearlyReadingGoalCount, BookAnalytics::DailyReadingGoalStatus yearlyReadingGoalStatus)
{
  BookAnalytics::DailyReadingGoalStatus v12 = *(unsigned char *)dailyReadingGoalStatus;
  BookAnalytics::DefaultReadingGoal v13 = *(unsigned char *)defaultYearlyReadingGoal;
  BookAnalytics::DailyReadingGoalStatus v14 = *(unsigned char *)yearlyReadingGoalStatus;
  retstr->defaultReadingGoal = *(unsigned char *)defaultReadingGoal;
  retstr->defaultReadingGoalChangeDate = defaultReadingGoalChangeDate;
  retstr->dailyReadingGoalDuration = dailyReadingGoalDuration;
  retstr->dailyReadingGoalStatus = v12;
  retstr->weeklyGoalsStatus = weeklyGoalsStatus;
  retstr->longestGoalReachedDays = longestGoalReachedDays;
  retstr->lastLongestGoalReachedDate = lastLongestGoalReachedDate;
  retstr->defaultYearlyReadingGoal = v13;
  retstr->defaultYearlyReadingGoalChangeDate = defaultYearlyReadingGoalChangeDate;
  retstr->yearlyReadingGoalCount = yearlyReadingGoalCount;
  retstr->yearlyReadingGoalStatus = v14;
}

unint64_t sub_28244(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
    case 5:
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_28360()
{
  return sub_28244(*v0);
}

uint64_t sub_28368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_29404(a1, a2);
  *a3 = result;
  return result;
}

void sub_28390(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2839C(uint64_t a1)
{
  unint64_t v2 = sub_28E44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_283D8(uint64_t a1)
{
  unint64_t v2 = sub_28E44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingGoalsData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_316CD8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v26 = *((void *)v1 + 2);
  int v9 = v1[24];
  int v24 = *((_DWORD *)v1 + 7);
  LODWORD(v25) = v9;
  int v10 = *((_DWORD *)v1 + 8);
  int v21 = v1[48];
  int v22 = v10;
  v20[1] = *((void *)v1 + 8);
  int v23 = v1[72];
  sub_5900(a1, a1[3]);
  sub_28E44();
  sub_27E440();
  char v41 = v8;
  uint64_t v11 = v7;
  char v40 = 0;
  sub_28E98();
  sub_27E330();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  char v13 = v25;
  uint64_t v14 = v5;
  char v15 = v23;
  char v39 = 1;
  sub_27E310();
  char v38 = 2;
  sub_27E350();
  char v37 = v13;
  char v36 = 3;
  unint64_t v16 = sub_28EEC();
  uint64_t v17 = v4;
  unint64_t v18 = v16;
  uint64_t v26 = v17;
  sub_27E330();
  unint64_t v25 = v18;
  char v35 = 4;
  sub_27E340();
  char v34 = 5;
  sub_27E340();
  char v33 = 6;
  sub_27E310();
  char v32 = v21;
  char v31 = 7;
  sub_27E330();
  char v30 = 8;
  sub_27E310();
  char v29 = 9;
  sub_27E350();
  char v28 = v15;
  char v27 = 10;
  uint64_t v19 = v26;
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v19);
}

uint64_t ReadingGoalsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316CF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_28E44();
  sub_27E430();
  if (!v2)
  {
    char v42 = 0;
    sub_28F40();
    sub_27E260();
    int v9 = v43;
    char v41 = 1;
    sub_27E240();
    uint64_t v11 = v10;
    char v40 = 2;
    uint64_t v12 = sub_27E280();
    int v27 = v9;
    uint64_t v28 = v12;
    char v38 = 3;
    unint64_t v13 = sub_28F94();
    sub_27E260();
    unint64_t v26 = v13;
    int v25 = v39;
    char v37 = 4;
    LODWORD(v13) = sub_27E270();
    char v36 = 5;
    int v24 = sub_27E270();
    char v35 = 6;
    sub_27E240();
    uint64_t v15 = v14;
    char v33 = 7;
    sub_27E260();
    char v16 = v34;
    char v32 = 8;
    sub_27E240();
    uint64_t v18 = v17;
    char v31 = 9;
    uint64_t v23 = sub_27E280();
    char v29 = 10;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v20 = v30;
    *(unsigned char *)a2 = v27;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v28;
    *(unsigned char *)(a2 + 24) = v25;
    int v21 = v24;
    *(_DWORD *)(a2 + 28) = v13;
    *(_DWORD *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v15;
    *(unsigned char *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v18;
    *(void *)(a2 + 64) = v23;
    *(unsigned char *)(a2 + 72) = v20;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_28B6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingGoalsData.init(from:)(a1, a2);
}

uint64_t sub_28B84(void *a1)
{
  return ReadingGoalsData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics16ReadingGoalsDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)a1)
  {
    unint64_t v2 = 0xE200000000000000;
    uint64_t v3 = 16718;
    if (*(unsigned char *)a2) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  unint64_t v2 = 0xE100000000000000;
  if (*(unsigned char *)a1 != 1)
  {
    uint64_t v3 = 78;
    if (*(unsigned char *)a2) {
      goto LABEL_6;
    }
LABEL_9:
    unint64_t v4 = 0xE200000000000000;
    uint64_t v5 = 16718;
    goto LABEL_11;
  }
  uint64_t v3 = 89;
  if (!*(unsigned char *)a2) {
    goto LABEL_9;
  }
LABEL_6:
  unint64_t v4 = 0xE100000000000000;
  if (*(unsigned char *)a2 == 1) {
    uint64_t v5 = 89;
  }
  else {
    uint64_t v5 = 78;
  }
LABEL_11:
  char v6 = *(unsigned char *)(a1 + 24);
  char v7 = *(unsigned char *)(a2 + 24);
  int v30 = *(unsigned __int8 *)(a1 + 48);
  int v31 = *(unsigned __int8 *)(a2 + 48);
  char v26 = *(unsigned char *)(a2 + 72);
  char v27 = *(unsigned char *)(a1 + 72);
  double v8 = *(double *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  int v10 = *(_DWORD *)(a1 + 28);
  int v32 = *(_DWORD *)(a1 + 32);
  double v11 = *(double *)(a1 + 40);
  double v12 = *(double *)(a1 + 56);
  double v13 = *(double *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  int v16 = *(_DWORD *)(a2 + 28);
  int v15 = *(_DWORD *)(a2 + 32);
  double v17 = *(double *)(a2 + 40);
  double v18 = *(double *)(a2 + 56);
  uint64_t v28 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a1 + 64);
  if (v3 == v5 && v2 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  if (v8 != v13 || v9 != v14 || (sub_2F3EC(v6, v7) & 1) == 0 || v10 != v16 || v32 != v15 || v11 != v17) {
    return 0;
  }
  if (!v30)
  {
    unint64_t v21 = 0xE200000000000000;
    uint64_t v22 = 16718;
    int v20 = v31;
    if (!v31) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
  int v20 = v31;
  unint64_t v21 = 0xE100000000000000;
  if (v30 != 1)
  {
    uint64_t v22 = 78;
    if (!v31) {
      goto LABEL_30;
    }
LABEL_26:
    unint64_t v23 = 0xE100000000000000;
    if (v20 == 1)
    {
      if (v22 != 89) {
        goto LABEL_35;
      }
    }
    else if (v22 != 78)
    {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  uint64_t v22 = 89;
  if (v31) {
    goto LABEL_26;
  }
LABEL_30:
  unint64_t v23 = 0xE200000000000000;
  if (v22 != 16718)
  {
LABEL_35:
    char v24 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_36;
    }
    return 0;
  }
LABEL_33:
  if (v21 != v23) {
    goto LABEL_35;
  }
  swift_bridgeObjectRelease_n();
LABEL_36:
  if (v12 != v18 || v29 != v28) {
    return 0;
  }

  return sub_2F3EC(v27, v26);
}

unint64_t sub_28E44()
{
  unint64_t result = qword_316CE0;
  if (!qword_316CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CE0);
  }
  return result;
}

unint64_t sub_28E98()
{
  unint64_t result = qword_316CE8;
  if (!qword_316CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CE8);
  }
  return result;
}

unint64_t sub_28EEC()
{
  unint64_t result = qword_316CF0;
  if (!qword_316CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316CF0);
  }
  return result;
}

unint64_t sub_28F40()
{
  unint64_t result = qword_316D00;
  if (!qword_316D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D00);
  }
  return result;
}

unint64_t sub_28F94()
{
  unint64_t result = qword_316D08;
  if (!qword_316D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D08);
  }
  return result;
}

unint64_t sub_28FEC()
{
  unint64_t result = qword_316D10;
  if (!qword_316D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D10);
  }
  return result;
}

unint64_t sub_29044()
{
  unint64_t result = qword_316D18;
  if (!qword_316D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D18);
  }
  return result;
}

__n128 initializeWithCopy for ReadingGoalsData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingGoalsData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[73]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingGoalsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalsData()
{
  return &type metadata for ReadingGoalsData;
}

uint64_t getEnumTagSinglePayload for ReadingGoalsData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadingGoalsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x292C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalsData.CodingKeys()
{
  return &type metadata for ReadingGoalsData.CodingKeys;
}

unint64_t sub_29300()
{
  unint64_t result = qword_316D20;
  if (!qword_316D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D20);
  }
  return result;
}

unint64_t sub_29358()
{
  unint64_t result = qword_316D28;
  if (!qword_316D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D28);
  }
  return result;
}

unint64_t sub_293B0()
{
  unint64_t result = qword_316D30;
  if (!qword_316D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D30);
  }
  return result;
}

uint64_t sub_29404(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002ADF80 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000000002ADFA0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002ADFC0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002ADFE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AE020 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE040 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002AE060 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000000002AE080 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AE0B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002AE0D0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_297F4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_316D38, &enum case for SessionGroup.default(_:));
}

uint64_t static AccountEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315590, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316D38, a1);
}

uint64_t sub_29854(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_316D50, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AccountEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315598, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316D50, a1);
}

uint64_t AccountEvent.accountData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316D68);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AccountEvent.accountData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316D68);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AccountEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AccountEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_316DF0);
}

uint64_t AccountEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AccountEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AccountEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AccountEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

void CellularToggleEvent.Model.cellularData.getter(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t AccountEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AccountEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_316E88);
}

uint64_t AccountEvent.Model.init(accountData:eventData:)@<X0>(_WORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for AccountEvent.Model(0) + 20);
  uint64_t v5 = sub_27D7C0();
  unsigned int v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_29CDC()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x44746E756F636361;
  }
}

uint64_t sub_29D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2B4AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_29D4C(uint64_t a1)
{
  unint64_t v2 = sub_29F80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_29D88(uint64_t a1)
{
  unint64_t v2 = sub_29F80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_316D70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_29F80();
  sub_27E440();
  __int16 v11 = *v3;
  v10[13] = 0;
  sub_29FD4();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for AccountEvent.Model(0);
    v10[12] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_29F80()
{
  unint64_t result = qword_316D78;
  if (!qword_316D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D78);
  }
  return result;
}

unint64_t sub_29FD4()
{
  unint64_t result = qword_316D80;
  if (!qword_316D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D80);
  }
  return result;
}

uint64_t AccountEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_316D88);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccountEvent.Model(0);
  __chkstk_darwin();
  int v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_29F80();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    __int16 v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_2A320();
    uint64_t v14 = v25;
    sub_27E260();
    char v19 = v11;
    *(_WORD *)__int16 v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_2A374(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_2A320()
{
  unint64_t result = qword_316D90;
  if (!qword_316D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316D90);
  }
  return result;
}

uint64_t sub_2A374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2A3D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_2A3F0(void *a1)
{
  return AccountEvent.Model.encode(to:)(a1);
}

uint64_t sub_2A408@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315590, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316D38, a1);
}

uint64_t sub_2A440@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315598, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316D50, a1);
}

uint64_t sub_2A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316D68);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AccountEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2AA18);
}

uint64_t sub_2AA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316D68);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AccountEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2AB2C);
}

uint64_t sub_2AB2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316D68);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2AC38()
{
  sub_2AD00();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2AD00()
{
  if (!qword_316E00)
  {
    sub_2A320();
    sub_29FD4();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_316E00);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_27D7C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for AccountEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_27D7C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_WORD *initializeWithCopy for AccountEvent.Model(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for AccountEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *initializeWithTake for AccountEvent.Model(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_WORD *assignWithTake for AccountEvent.Model(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B0A8);
}

uint64_t sub_2B0A8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AccountEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B164);
}

unsigned char *sub_2B164(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2B208()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccountEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B36CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountEvent.Model.CodingKeys()
{
  return &type metadata for AccountEvent.Model.CodingKeys;
}

unint64_t sub_2B3A8()
{
  unint64_t result = qword_316EC0;
  if (!qword_316EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316EC0);
  }
  return result;
}

unint64_t sub_2B400()
{
  unint64_t result = qword_316EC8;
  if (!qword_316EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316EC8);
  }
  return result;
}

unint64_t sub_2B458()
{
  unint64_t result = qword_316ED0;
  if (!qword_316ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316ED0);
  }
  return result;
}

uint64_t sub_2B4AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E756F636361 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2B5C4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C61626F6C67;
      break;
    case 2:
      uint64_t v5 = 0x6E656D6D6F636572;
      unint64_t v3 = 0xEF736E6F69746164;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x736C616F67;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x62756C636B6F6F62;
      break;
    case 5:
      uint64_t v5 = 0x43676E6964616572;
      unint64_t v3 = 0xEF676E696863616FLL;
      break;
    case 6:
      uint64_t v5 = 0x6F72446563697270;
      unint64_t v3 = 0xE900000000000070;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6C61626F6C67) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEF736E6F69746164;
      if (v5 != 0x6E656D6D6F636572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x736C616F67) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x62756C636B6F6F62) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x43676E6964616572;
      unint64_t v6 = 0xEF676E696863616FLL;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE900000000000070;
      if (v5 != 0x6F72446563697270) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2B838(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000070;
  uint64_t v3 = 0x6F72446563697270;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1701147238;
    }
    else {
      uint64_t v5 = 0x6E776F6E6B6E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F72446563697270;
  unint64_t v6 = 0xE900000000000070;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 1701147238;
    }
    else {
      uint64_t v3 = 0x6E776F6E6B6E75;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE400000000000000;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2B944(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x696C43656C746974;
      unint64_t v3 = 0xEA00000000006B63;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6B63696C63;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6570697773;
      break;
    case 4:
      unint64_t v3 = 0x80000000002ACE00;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x776F6C6C6F66;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006B63;
      if (v5 == 0x696C43656C746974) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6B63696C63) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6570697773) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0x80000000002ACE00;
      unint64_t v2 = 0xD000000000000015;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x776F6C6C6F66) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2BB48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF646165526F5474;
  unint64_t v3 = 0x6E61576F54646461;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E61576F54646461;
  unint64_t v6 = 0xEF646165526F5474;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6D61536F69647561;
      unint64_t v6 = 0xEB00000000656C70;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x6E6F74747562;
      break;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      unint64_t v5 = 7959906;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x6574656C6564;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x7373696D736964;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x64616F6C6E776F64;
      break;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x657461676976616ELL;
      break;
    case 8:
      unint64_t v5 = 0x706D615364616572;
      unint64_t v6 = 0xEA0000000000656CLL;
      break;
    case 9:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x64616F6C6572;
      break;
    case 10:
      unint64_t v6 = 0x80000000002AD880;
      unint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000656C70;
      if (v5 == 0x6D61536F69647561) {
        goto LABEL_31;
      }
      goto LABEL_34;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6E6F74747562) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 3:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7959906) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6574656C6564) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x7373696D736964) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x64616F6C6E776F64) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 7:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x657461676976616ELL) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 8:
      unint64_t v2 = 0xEA0000000000656CLL;
      if (v5 != 0x706D615364616572) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 9:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x64616F6C6572) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 10:
      unint64_t v2 = 0x80000000002AD880;
      unint64_t v3 = 0xD000000000000014;
      goto LABEL_30;
    default:
LABEL_30:
      if (v5 != v3) {
        goto LABEL_34;
      }
LABEL_31:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_34:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2BEA4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x796C746E65636572;
  }
  else {
    uint64_t v3 = 0x6553746E65636572;
  }
  if (v2) {
    unint64_t v4 = 0xEE00736568637261;
  }
  else {
    unint64_t v4 = 0xEE00646577656956;
  }
  if (a2) {
    uint64_t v5 = 0x796C746E65636572;
  }
  else {
    uint64_t v5 = 0x6553746E65636572;
  }
  if (a2) {
    unint64_t v6 = 0xEE00646577656956;
  }
  else {
    unint64_t v6 = 0xEE00736568637261;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2BF64(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7368564;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6B72616D6B6F6F62;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7365746F6ELL;
      break;
    case 4:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xEA00000000007374;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7368564) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6B72616D6B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7365746F6ELL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000007374;
      if (v5 != 0x6867696C68676968) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2C120(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000000002ACE00;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6570697773;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v3 = 0x80000000002ACE20;
      break;
    case 4:
      unint64_t v5 = 0x63656C6553626174;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 6579297;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x65766F6D6572;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000000002ACE00;
      if (v5 == 0xD000000000000015) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6570697773) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0x80000000002ACE20;
      if (v5 != 0xD000000000000016) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x63656C6553626174) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 6579297;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x65766F6D6572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2C374(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x434F546D6F7266;
    }
    else {
      uint64_t v3 = 0x646165526D6F7266;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xEB00000000676E69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x434F546D6F7266;
      }
      else {
        uint64_t v6 = 0x646165526D6F7266;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xEB00000000676E69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2C4A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746E65636572;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x726F68747561;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C61756E616DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746E65636572) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656C746974) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x726F68747561;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6C61756E616DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2C64C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64726177726F66;
    }
    else {
      uint64_t v3 = 1801675106;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64726177726F66;
      }
      else {
        uint64_t v6 = 1801675106;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2C758(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x61546E6F74747562;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 2:
      uint64_t v5 = 0x6E69626275726373;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x6172447265766F63;
LABEL_5:
      unint64_t v3 = 0xE900000000000067;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v2 = 0x61546E6F74747562;
      unint64_t v6 = 0xE900000000000070;
      break;
    case 2:
      uint64_t v2 = 0x6E69626275726373;
      goto LABEL_10;
    case 3:
      uint64_t v2 = 0x6172447265766F63;
LABEL_10:
      unint64_t v6 = 0xE900000000000067;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2C8E0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F6F527265707573;
      unint64_t v3 = 0xE90000000000006DLL;
      break;
    case 2:
      unint64_t v5 = 0x6F52656C706D6973;
      unint64_t v3 = 0xEA00000000006D6FLL;
      break;
    case 3:
      unint64_t v3 = 0x80000000002ACFF0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x4C6465726564726FLL;
      unint64_t v3 = 0xEF6D6F6F52747369;
      break;
    case 5:
      unint64_t v5 = 0x676E6970756F7267;
      unint64_t v3 = 0xEC00000065676150;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE90000000000006DLL;
      if (v5 == 0x6F6F527265707573) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEA00000000006D6FLL;
      if (v5 != 0x6F52656C706D6973) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0x80000000002ACFF0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x4C6465726564726FLL;
      unint64_t v6 = 0xEF6D6F6F52747369;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEC00000065676150;
      if (v5 != 0x676E6970756F7267) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2CB2C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x65536E497478656ELL;
      unint64_t v3 = 0xEC00000073656972;
      break;
    case 2:
      unint64_t v5 = 0x6D6F724665726F6DLL;
      unint64_t v3 = 0xEE00726F68747541;
      break;
    case 3:
      unint64_t v5 = 0x48676E6964616572;
      unint64_t v3 = 0xEE0079726F747369;
      break;
    case 4:
      unint64_t v3 = 0x80000000002ACDE0;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000073656972;
      if (v5 == 0x65536E497478656ELL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEE00726F68747541;
      if (v5 != 0x6D6F724665726F6DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x48676E6964616572;
      unint64_t v6 = 0xEE0079726F747369;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0x80000000002ACDE0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2CD40(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6553656369766564;
      unint64_t v3 = 0xEE0073676E697474;
      break;
    case 2:
      unint64_t v5 = 0x656D6F636C6577;
      break;
    case 3:
      unint64_t v3 = 0x80000000002AC9F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE0073676E697474;
      if (v5 == 0x6553656369766564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x656D6F636C6577;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000000002AC9F0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2CEE8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x47676E6964616572;
    }
    else {
      uint64_t v3 = 0x616F47736B6F6F62;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEB000000006C616FLL;
    }
    else {
      unint64_t v4 = 0xE90000000000006CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x47676E6964616572;
      }
      else {
        uint64_t v6 = 0x616F47736B6F6F62;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEB000000006C616FLL;
      }
      else {
        unint64_t v7 = 0xE90000000000006CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2D01C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4E676E6964616572;
      unint64_t v3 = 0xEA0000000000776FLL;
      break;
    case 2:
      uint64_t v5 = 0x7972617262696CLL;
      break;
    case 3:
      uint64_t v5 = 0x726F74736B6F6F62;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 4:
      uint64_t v5 = 0x6F6F626F69647561;
      unint64_t v3 = 0xEA0000000000736BLL;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x686372616573;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x61676E616DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA0000000000776FLL;
      if (v5 == 0x4E676E6964616572) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      if (v5 != 0x7972617262696CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x726F74736B6F6F62) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEA0000000000736BLL;
      if (v5 != 0x6F6F626F69647561) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x686372616573;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x61676E616DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2D278(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC00000073656972;
  uint64_t v3 = 0x65536E497478656ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x65536E4965726F6DLL;
    }
    else {
      uint64_t v5 = 0x6E776F6E6B6E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC00000073656972;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0x65536E497478656ELL;
    unint64_t v6 = 0xEC00000073656972;
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  if (v7 == 1) {
    uint64_t v3 = 0x65536E4965726F6DLL;
  }
  else {
    uint64_t v3 = 0x6E776F6E6B6E75;
  }
  if (v7 != 1) {
    unint64_t v2 = 0xE700000000000000;
  }
LABEL_14:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2D394(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x6E69646E65637361;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E69646E65637361;
  unint64_t v6 = 0xE900000000000067;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x69646E6563736564;
      unint64_t v6 = 0xEA0000000000676ELL;
      break;
    case 2:
      uint64_t v5 = 0x44657361656C6572;
      unint64_t v6 = 0xEB00000000657461;
      break;
    case 3:
      uint64_t v5 = 0x6972616C75706F70;
      unint64_t v6 = 0xEA00000000007974;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000676ELL;
      if (v5 == 0x69646E6563736564) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEB00000000657461;
      if (v5 != 0x44657361656C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x6972616C75706F70;
      unint64_t v2 = 0xEA00000000007974;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x656C746974) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2D580(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6647407;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7305076;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6565726874;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1920298854;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702259046;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 6647407) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7305076) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6565726874) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1920298854;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702259046) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2D744(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7070617369446E6FLL;
  }
  else {
    uint64_t v3 = 0x7261657070416E6FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000726165;
  }
  if (a2) {
    uint64_t v5 = 0x7070617369446E6FLL;
  }
  else {
    uint64_t v5 = 0x7261657070416E6FLL;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000726165;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2D7F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000014;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000000002AD330;
  }
  else {
    unint64_t v4 = 0x80000000002AD350;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000014;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0x80000000002AD350;
  }
  else {
    unint64_t v6 = 0x80000000002AD330;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2D8A0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6564646968;
  }
  else {
    uint64_t v3 = 0x656C6269736976;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6E6564646968;
  }
  else {
    uint64_t v5 = 0x656C6269736976;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2D944(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656C62;
  uint64_t v3 = 0x6967696C45746F6ELL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6967696C45746F6ELL;
  unint64_t v6 = 0xEB00000000656C62;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x656C626967696C65;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x736B6F6F62;
      break;
    case 3:
      uint64_t v5 = 0x6F6F626F69647561;
      unint64_t v6 = 0xEA0000000000736BLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x656C626967696C65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x736B6F6F62;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEA0000000000736BLL;
      if (v5 == 0x6F6F626F69647561) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2DAE4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802465122;
      break;
    case 2:
      uint64_t v5 = 0x6F6F626F69647561;
      unint64_t v3 = 0xE90000000000006BLL;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 4605008;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 5527636;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 4276809;
      break;
    case 6:
      uint64_t v5 = 0x694773656E757469;
      unint64_t v3 = 0xEE00647261437466;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1802465122) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE90000000000006BLL;
      if (v5 != 0x6F6F626F69647561) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 4605008) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 5527636) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 4276809;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEE00647261437466;
      if (v5 != 0x694773656E757469) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2DD10(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746E65636572;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E69646E657274;
      break;
    case 3:
      uint64_t v5 = 0x64656863746566;
      break;
    case 4:
      uint64_t v6 = 0x736567677573;
      goto LABEL_7;
    case 5:
      uint64_t v6 = 0x636572726F63;
LABEL_7:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      unint64_t v3 = 0xED00006D72655464;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7368564;
      break;
    case 7:
      unint64_t v3 = 0x80000000002ACED0;
      uint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x746E65636572) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x676E69646E657274) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      if (v5 != 0x64656863746566) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      uint64_t v8 = 0x736567677573;
      goto LABEL_19;
    case 5:
      uint64_t v8 = 0x636572726F63;
LABEL_19:
      unint64_t v7 = 0xED00006D72655464;
      if (v5 != (v8 & 0xFFFFFFFFFFFFLL | 0x6574000000000000)) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v2 = 7368564;
      goto LABEL_22;
    case 7:
      unint64_t v7 = 0x80000000002ACED0;
      if (v5 != 0xD000000000000014) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_26:
      }
        char v9 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_2DF84(uint64_t a1, uint64_t a2)
{
  return sub_3211C(a1, a2, CellularRadioAccessTechnology.rawValue.getter);
}

uint64_t sub_2DF9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746E65636572;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E69646E657274;
      break;
    case 3:
      uint64_t v5 = 0x64656863746566;
      break;
    case 4:
      uint64_t v6 = 0x736567677573;
      goto LABEL_7;
    case 5:
      uint64_t v6 = 0x636572726F63;
LABEL_7:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      unint64_t v3 = 0xED00006D72655464;
      break;
    case 6:
      unint64_t v3 = 0x80000000002ACED0;
      uint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x746E65636572) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x676E69646E657274) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      if (v5 != 0x64656863746566) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v7 = 0xED00006D72655464;
      if (v5 != 0x6574736567677573) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      uint64_t v2 = 0x6574636572726F63;
      unint64_t v7 = 0xED00006D72655464;
      goto LABEL_19;
    case 6:
      unint64_t v7 = 0x80000000002ACED0;
      if (v5 != 0xD000000000000014) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v2) {
        goto LABEL_23;
      }
LABEL_20:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_23:
      }
        char v8 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_2E1FC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E4974706FLL;
    }
    else {
      uint64_t v3 = 0x74754F74706FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E4974706FLL;
      }
      else {
        uint64_t v6 = 0x74754F74706FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2E308(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x6573616863727570;
    }
    else {
      unint64_t v3 = 0xD000000000000012;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0x80000000002ACA10;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x6573616863727570;
      }
      else {
        unint64_t v6 = 0xD000000000000012;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0x80000000002ACA10;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2E424(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656C676E6973;
    }
    else {
      uint64_t v3 = 2037277037;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656C676E6973;
      }
      else {
        uint64_t v6 = 2037277037;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2E528(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x546567617373656DLL;
      unint64_t v3 = 0xEA00000000007061;
      break;
    case 2:
      uint64_t v5 = 0x6F74747542797562;
      unint64_t v3 = 0xEC0000007061546ELL;
      break;
    case 3:
      uint64_t v5 = 0x7473694C746E6177;
      unint64_t v3 = 0xEB00000000646441;
      break;
    case 4:
      uint64_t v5 = 0x74536E4977656976;
      unint64_t v3 = 0xEB0000000065726FLL;
      break;
    case 5:
      uint64_t v5 = 0x6165527472617473;
      unint64_t v3 = 0xEC000000676E6964;
      break;
    case 6:
      uint64_t v5 = 0x73694C7472617473;
      unint64_t v3 = 0xEE00676E696E6574;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007061;
      if (v5 == 0x546567617373656DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEC0000007061546ELL;
      if (v5 != 0x6F74747542797562) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      uint64_t v7 = 0x7473694C746E6177;
      uint64_t v8 = 6579265;
      goto LABEL_15;
    case 4:
      uint64_t v7 = 0x74536E4977656976;
      uint64_t v8 = 6648431;
LABEL_15:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x6165527472617473;
      unint64_t v6 = 0xEC000000676E6964;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEE00676E696E6574;
      if (v5 != 0x73694C7472617473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_22:
      }
        char v9 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_2E7C8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000000002AD680;
    }
    else {
      unint64_t v4 = 0x80000000002AD6A0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000012;
      }
      else {
        unint64_t v6 = 0xD00000000000001ALL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000000002AD680;
      }
      else {
        unint64_t v7 = 0x80000000002AD6A0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2E8D4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6375646F72506773;
    }
    else {
      uint64_t v3 = 0x6F725047536E6F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC0000006E6F6974;
    }
    else {
      unint64_t v4 = 0xEF6E6F6974637564;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6375646F72506773;
      }
      else {
        uint64_t v6 = 0x6F725047536E6F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC0000006E6F6974;
      }
      else {
        unint64_t v7 = 0xEF6E6F6974637564;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2EA18(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC000000656C6261;
  unint64_t v3 = 0x6863616552746F6ELL;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0x80000000002AD410;
    }
    else {
      unint64_t v4 = 0x80000000002AD430;
    }
    unint64_t v5 = 0xD000000000000010;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  unint64_t v5 = 0x6863616552746F6ELL;
  unint64_t v4 = 0xEC000000656C6261;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      unint64_t v2 = 0x80000000002AD410;
    }
    else {
      unint64_t v2 = 0x80000000002AD430;
    }
    unint64_t v3 = 0xD000000000000010;
  }
LABEL_10:
  if (v5 == v3 && v4 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2EB24(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7070416E69;
      break;
    case 2:
      unint64_t v3 = 0x80000000002AD640;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v5 = 0x79616C50726163;
      break;
    case 4:
      unint64_t v5 = 0x6979616C50776F6ELL;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 5:
      unint64_t v5 = 0x746F6F5465756C62;
      unint64_t v3 = 0xE900000000000068;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 6452085;
      break;
    case 7:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6863746177;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7070416E69) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0x80000000002AD640;
      if (v5 != 0xD000000000000014) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      if (v5 != 0x79616C50726163) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEA0000000000676ELL;
      if (v5 != 0x6979616C50776F6ELL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE900000000000068;
      if (v5 != 0x746F6F5465756C62) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 6452085;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6863746177) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2EDA0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656369766564;
      break;
    case 2:
      uint64_t v5 = 0x79616C50726163;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6F69647541726163;
      break;
    case 4:
      uint64_t v5 = 0x6E6F687064616568;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 5:
      uint64_t v5 = 0x73646F50726961;
      break;
    case 6:
      uint64_t v5 = 0x646F50656D6F68;
      break;
    case 7:
      uint64_t v5 = 0x5654656C707061;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x656369766564) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      if (v5 != 0x79616C50726163) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6F69647541726163) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 != 0x6E6F687064616568) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x73646F50726961) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x646F50656D6F68;
      goto LABEL_21;
    case 7:
      if (v5 != 0x5654656C707061) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2F00C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 28271;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6710895;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x746867696CLL;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802658148;
      break;
    case 5:
      unint64_t v3 = 0x80000000002AD4D0;
      uint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 28271) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 6710895) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x746867696CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1802658148;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x80000000002AD4D0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2F1E0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0x6F4465766F6D6572;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000000002AD790;
    }
    else {
      unint64_t v4 = 0xEE0064616F6C6E77;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000012;
      }
      else {
        unint64_t v6 = 0x6F4465766F6D6572;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000000002AD790;
      }
      else {
        unint64_t v7 = 0xEE0064616F6C6E77;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2F318(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 89;
    }
    else {
      uint64_t v2 = 78;
    }
    unint64_t v3 = 0xE100000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 89;
      }
      else {
        uint64_t v5 = 78;
      }
      unint64_t v6 = 0xE100000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE200000000000000;
    uint64_t v2 = 16718;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE200000000000000;
  if (v2 != 16718)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2F3EC(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 16718;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v4 = 0x64656863616572;
      break;
    case 2:
      uint64_t v4 = 0x6572676F72506E69;
      unint64_t v3 = 0xEA00000000007373;
      break;
    case 3:
      uint64_t v4 = 0x7472617453746F6ELL;
      unint64_t v3 = 0xEA00000000006465;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 16718;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE700000000000000;
      if (v4 == 0x64656863616572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v6 = 0x6572676F72506E69;
      unint64_t v5 = 0xEA00000000007373;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xEA00000000006465;
      if (v4 == 0x7472617453746F6ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2F580(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7972617262696CLL;
      break;
    case 2:
      uint64_t v5 = 0x726F74536B6F6F62;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v5 = 0x6F6F626F69647561;
      unint64_t v3 = 0xEE0065726F74536BLL;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x7972617262696CLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x726F74536B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6F6F626F69647561;
      unint64_t v6 = 0xEE0065726F74536BLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7105633) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2F758(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x726F727265;
    }
    else {
      uint64_t v3 = 0x64656C65636E6163;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x726F727265;
      }
      else {
        uint64_t v6 = 0x64656C65636E6163;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2F86C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x756F72676B636162;
      unint64_t v3 = 0xEC0000006465646ELL;
      break;
    case 2:
      unint64_t v3 = 0x80000000002AD460;
      unint64_t v5 = 0xD000000000000027;
      break;
    case 3:
      unint64_t v5 = 0x696669746E656469;
      unint64_t v3 = 0xEF74657365527265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC0000006465646ELL;
      if (v5 == 0x756F72676B636162) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000000002AD460;
      unint64_t v2 = 0xD000000000000027;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF74657365527265;
      if (v5 == 0x696669746E656469) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2FA2C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x65756E69746E6F63;
    }
    else {
      uint64_t v3 = 0x616E614D61746164;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEA00000000006567;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x65756E69746E6F63;
      }
      else {
        uint64_t v6 = 0x616E614D61746164;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEA00000000006567;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2FB50(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1802465122;
    }
    else {
      uint64_t v3 = 0x6F6F626F69647561;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE90000000000006BLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1802465122;
      }
      else {
        uint64_t v6 = 0x6F6F626F69647561;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE90000000000006BLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2FC64(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6574696877;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6169706573;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2036691559;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6B63616C62;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E696769726FLL;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7465697571;
      break;
    case 7:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7265706170;
      break;
    case 8:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1835819363;
      break;
    case 9:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7375636F66;
      break;
    case 10:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684828002;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6574696877) {
        goto LABEL_31;
      }
      goto LABEL_34;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6169706573) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 2036691559) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6B63616C62) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6C616E696769726FLL) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7465697571) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 7:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7265706170) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 8:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1835819363) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 9:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7375636F66) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 10:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1684828002;
      goto LABEL_30;
    default:
LABEL_30:
      if (v5 != v2) {
        goto LABEL_34;
      }
LABEL_31:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_34:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2FF50(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1819440483;
    }
    else {
      uint64_t v2 = 1701736302;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1819440483;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v2 = 0x6564696C73;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE500000000000000;
  if (v2 != 0x6564696C73)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_30044(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7469617274726F70;
    }
    else {
      uint64_t v3 = 0x70616373646E616CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000065;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7469617274726F70;
      }
      else {
        uint64_t v6 = 0x70616373646E616CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000065;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_30168(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1684632167;
    }
    else {
      uint64_t v2 = 1953720684;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1684632167;
      }
      else {
        uint64_t v5 = 1953720684;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_30264(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 2:
      uint64_t v5 = 0x676E6967617473;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1685025392;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 24945) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x676E6967617473;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1685025392) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_303C4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656D6F636C6577;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7265766F63736964;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x657061637365;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2003792487;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x656D6F636C6577) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7265766F63736964) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x657061637365;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 2003792487) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_30570(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1885956979;
    }
    else {
      uint64_t v3 = 0x65756E69746E6F63;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1885956979;
      }
      else {
        uint64_t v6 = 0x65756E69746E6F63;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_3067C(uint64_t a1, uint64_t a2)
{
  return sub_3211C(a1, a2, (uint64_t (*)(void))OdpSuggestionType.rawValue.getter);
}

uint64_t sub_30694(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x436572756C696166;
    }
    else {
      uint64_t v3 = 0x6F436572756C6166;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC0000003165646FLL;
    }
    else {
      unint64_t v4 = 0xEB00000000326564;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x436572756C696166;
      }
      else {
        uint64_t v6 = 0x6F436572756C6166;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC0000003165646FLL;
      }
      else {
        unint64_t v7 = 0xEB00000000326564;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_307D0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E49676F6CLL;
    }
    else {
      uint64_t v3 = 0x74754F676F6CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E49676F6CLL;
      }
      else {
        uint64_t v6 = 0x74754F676F6CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_308DC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7542686372616573;
      unint64_t v3 = 0xEF7061546E6F7474;
      break;
    case 2:
      uint64_t v6 = "fetchedSuggestion";
      goto LABEL_5;
    case 3:
      uint64_t v6 = "noFetchSuggestion";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      uint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      uint64_t v5 = 0xD000000000000013;
      unint64_t v7 = "landingPageFallback";
      goto LABEL_8;
    case 5:
      uint64_t v5 = 0xD00000000000001BLL;
      unint64_t v7 = "canceledLandingPageFallback";
LABEL_8:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 6:
      uint64_t v8 = 0x736567677573;
      goto LABEL_11;
    case 7:
      uint64_t v8 = 0x636572726F63;
LABEL_11:
      uint64_t v5 = v8 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      unint64_t v3 = 0xED00006D72655464;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xEF7061546E6F7474;
      if (v5 == 0x7542686372616573) {
        goto LABEL_27;
      }
      goto LABEL_29;
    case 2:
      uint64_t v10 = "fetchedSuggestion";
      goto LABEL_17;
    case 3:
      uint64_t v10 = "noFetchSuggestion";
LABEL_17:
      unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000011) {
        goto LABEL_29;
      }
      goto LABEL_27;
    case 4:
      unint64_t v2 = 0xD000000000000013;
      uint64_t v11 = "landingPageFallback";
      goto LABEL_21;
    case 5:
      unint64_t v2 = 0xD00000000000001BLL;
      uint64_t v11 = "canceledLandingPageFallback";
LABEL_21:
      unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      goto LABEL_22;
    case 6:
      uint64_t v12 = 0x736567677573;
      goto LABEL_26;
    case 7:
      uint64_t v12 = 0x636572726F63;
LABEL_26:
      unint64_t v9 = 0xED00006D72655464;
      if (v5 == (v12 & 0xFFFFFFFFFFFFLL | 0x6574000000000000)) {
        goto LABEL_27;
      }
      goto LABEL_29;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_29;
      }
LABEL_27:
      if (v3 == v9) {
        char v13 = 1;
      }
      else {
LABEL_29:
      }
        char v13 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13 & 1;
  }
}

uint64_t sub_30B7C(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6C616E7265746E69;
    }
    else {
      uint64_t v2 = 0x6C616E7265747865;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6C616E7265746E69;
      }
      else {
        uint64_t v5 = 0x6C616E7265747865;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_30C70(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1868785010;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1818324839;
      break;
    case 3:
      uint64_t v5 = 0x4D64656966696E75;
      unint64_t v3 = 0xEE00656761737365;
      break;
    case 4:
      uint64_t v5 = 0x6F72446563697270;
      unint64_t v3 = 0xE900000000000070;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1868785010) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1818324839) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x4D64656966696E75;
      unint64_t v6 = 0xEE00656761737365;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE900000000000070;
      if (v5 != 0x6F72446563697270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_30E3C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000736569;
  uint64_t v3 = 0x7265536E496C6C61;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7265536E496C6C61;
  unint64_t v6 = 0xEB00000000736569;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6573616863727570;
      unint64_t v6 = 0xE900000000000064;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x646165726E75;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      if (v5 == 0x6573616863727570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x646165726E75;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_30FDC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73736563637573;
    }
    else {
      uint64_t v3 = 0x6C65636E6163;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73736563637573;
      }
      else {
        uint64_t v6 = 0x6C65636E6163;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_310F0(uint64_t a1, uint64_t a2)
{
  return sub_3211C(a1, a2, DialogActionType.rawValue.getter);
}

uint64_t sub_31108(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x75426C65636E6163;
      unint64_t v3 = 0xEF7061546E6F7474;
      break;
    case 2:
      unint64_t v3 = 0x80000000002AD6D0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0x656E6F646E616261;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF7061546E6F7474;
      if (v5 == 0x75426C65636E6163) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000000002AD6D0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x656E6F646E616261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_312C0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6572616873;
      break;
    case 2:
      uint64_t v5 = 0x6C6F436F54646461;
      unint64_t v3 = 0xEF6E6F697463656CLL;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x65766F6D6572;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6572616873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6C6F436F54646461;
      unint64_t v6 = 0xEF6E6F697463656CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x65766F6D6572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_31458(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x654D6E6F69746361;
    }
    else {
      uint64_t v3 = 6516596;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA0000000000756ELL;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x654D6E6F69746361;
      }
      else {
        uint64_t v6 = 6516596;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA0000000000756ELL;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_3156C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 16718;
      break;
    case 2:
      uint64_t v5 = 0x6964616552626F65;
      uint64_t v6 = 26478;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x4E676E6964616572;
      uint64_t v6 = 30575;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE200000000000000;
      if (v5 == 16718) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x6964616552626F65;
      unint64_t v7 = 0xEA0000000000676ELL;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEA0000000000776FLL;
      if (v5 == 0x4E676E6964616572) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_316F0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x676E69746172;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x776569766572;
      break;
    case 3:
      uint64_t v5 = 0x6E41776569766572;
      unint64_t v3 = 0xEF676E6974615264;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x676E69746172) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x776569766572;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF676E6974615264;
      if (v5 == 0x6E41776569766572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_31888(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656C62616E65;
    }
    else {
      uint64_t v3 = 0x64656C6261736964;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656C62616E65;
      }
      else {
        uint64_t v6 = 0x64656C6261736964;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_319A4(uint64_t a1, uint64_t a2)
{
  return sub_3211C(a1, a2, (uint64_t (*)(void))FrameName.rawValue.getter);
}

uint64_t sub_319BC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000072656461;
  unint64_t v3 = 0x655279646E657274;
  uint64_t v4 = a1;
  unint64_t v5 = 0x655279646E657274;
  unint64_t v6 = 0xEC00000072656461;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6552736569726573;
      break;
    case 2:
      unint64_t v7 = "nonfictionReader";
      goto LABEL_5;
    case 3:
      unint64_t v7 = "multiGenreReader";
LABEL_5:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = 0x80000000002ACAC0;
      break;
    case 5:
      unint64_t v5 = 0x52636972656E6567;
      unint64_t v6 = 0xED00007265646165;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x6552736569726573) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      char v8 = "nonfictionReader";
      goto LABEL_13;
    case 3:
      char v8 = "multiGenreReader";
LABEL_13:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000010) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v3 = 0xD000000000000011;
      unint64_t v2 = 0x80000000002ACAC0;
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xED00007265646165;
      if (v5 != 0x52636972656E6567) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v3) {
        goto LABEL_20;
      }
LABEL_17:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_31BE0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E6F43664F646E65;
    }
    else {
      uint64_t v3 = 0x6F6F42664F646E65;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC000000746E6574;
    }
    else {
      unint64_t v4 = 0xE90000000000006BLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E6F43664F646E65;
      }
      else {
        uint64_t v6 = 0x6F6F42664F646E65;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC000000746E6574;
      }
      else {
        unint64_t v7 = 0xE90000000000006BLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_31D14(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6573616863727570;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 2:
      uint64_t v5 = 0x64616F6C65646973;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x726564726F657270;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656C706D6173;
      break;
    case 5:
      uint64_t v5 = 0x5364656E776F6E75;
      unint64_t v3 = 0xEC00000065726F74;
      break;
    case 6:
      uint64_t v5 = 0x7550796C696D6166;
      unint64_t v3 = 0xEE00657361686372;
      break;
    case 7:
      uint64_t v5 = 0x646567616E616DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x6573616863727570) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEA00000000006465;
      if (v5 != 0x64616F6C65646973) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x726564726F657270) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656C706D6173) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEC00000065726F74;
      if (v5 != 0x5364656E776F6E75) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x7550796C696D6166;
      unint64_t v6 = 0xEE00657361686372;
      goto LABEL_21;
    case 7:
      if (v5 != 0x646567616E616DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_31FC8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6143746964657263;
    }
    else {
      uint64_t v3 = 0x6974706D65646572;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000006472;
    }
    else {
      unint64_t v4 = 0xEE0065646F436E6FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6143746964657263;
      }
      else {
        uint64_t v6 = 0x6974706D65646572;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000006472;
      }
      else {
        unint64_t v7 = 0xEE0065646F436E6FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_32104(uint64_t a1, uint64_t a2)
{
  return sub_3211C(a1, a2, (uint64_t (*)(void))LocationType.rawValue.getter);
}

uint64_t sub_3211C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_321C0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6C616E7265747865;
      unint64_t v3 = 0xEC0000006B6E694CLL;
      break;
    case 2:
      unint64_t v5 = 0x65726353656D6F68;
      unint64_t v3 = 0xED00007061546E65;
      break;
    case 3:
      unint64_t v5 = 0x756F546563726F66;
      unint64_t v3 = 0xEA00000000006863;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v3 = 0x80000000002AD730;
      break;
    case 5:
      unint64_t v3 = 0x80000000002AD750;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 6:
      unint64_t v5 = 0x6163696669746F6ELL;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 7:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x746567646977;
      break;
    case 8:
      unint64_t v5 = 0x6E65746E49707061;
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 0x6C616E7265747865;
      uint64_t v8 = 1802398028;
      goto LABEL_21;
    case 2:
      unint64_t v6 = 0xED00007061546E65;
      if (v5 != 0x65726353656D6F68) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xEA00000000006863;
      if (v5 != 0x756F546563726F66) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0x80000000002AD730;
      if (v5 != 0xD000000000000017) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0x80000000002AD750;
      if (v5 != 0xD000000000000014) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      uint64_t v7 = 0x6163696669746F6ELL;
      uint64_t v8 = 1852795252;
LABEL_21:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 != v7) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x746567646977;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE900000000000074;
      if (v5 != 0x6E65746E49707061) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_28:
      }
        char v9 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_324D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 28271;
    }
    else {
      uint64_t v3 = 6710895;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 28271;
      }
      else {
        uint64_t v6 = 6710895;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_325CC(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1684828003;
    }
    else {
      uint64_t v2 = 1836212599;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1684828003;
      }
      else {
        uint64_t v5 = 1836212599;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_326C8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x68736F6F7773;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6B63697262;
      break;
    case 3:
      unint64_t v3 = 0x80000000002ACF50;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65736163776F6C66;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x736C616F67;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6573776F7262;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x68736F6F7773) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6B63697262) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0x80000000002ACF50;
      if (v5 != 0xD000000000000010) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65736163776F6C66) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x736C616F67;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6573776F7262) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_328FC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x68736F6F7773;
      break;
    case 2:
      uint64_t v5 = 0x756B636F4C706F74;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 3:
      uint64_t v5 = 0x6143736569726573;
      unint64_t v3 = 0xEA00000000006472;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7465656873;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x68736F6F7773) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000070;
      if (v5 != 0x756B636F4C706F74) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6143736569726573;
      unint64_t v6 = 0xEA00000000006472;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7465656873) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_32AC8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC000000656C6262;
  uint64_t v3 = 0x7542656E694C6E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7542656E694C6E69;
  unint64_t v6 = 0xEC000000656C6262;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x656C62627562;
      break;
    case 2:
      uint64_t v5 = 0x6142656E694C6E69;
      unint64_t v6 = 0xEC00000072656E6ELL;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x72656E6E6162;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7473616F74;
      break;
    case 5:
      uint64_t v5 = 0x4279616C7265766FLL;
      unint64_t v6 = 0xED0000656C626275;
      break;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x656C62627562) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xEC00000072656E6ELL;
      if (v5 != 0x6142656E694C6E69) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x72656E6E6162) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x7473616F74) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x4279616C7265766FLL;
      unint64_t v2 = 0xED0000656C626275;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_32D34(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 28526;
    }
    else {
      uint64_t v3 = 0x6E776F6E6B6E75;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 28526;
      }
      else {
        uint64_t v6 = 0x6E776F6E6B6E75;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7562617;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 7562617)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_32E28(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7630194;
      break;
    case 2:
      uint64_t v5 = 0x79616C6465786966;
      uint64_t v6 = 7632239;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x6F69746964617274;
      uint64_t v6 = 7102830;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE300000000000000;
      if (v5 == 7630194) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x79616C6465786966;
      unint64_t v7 = 0xEB0000000074756FLL;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEB000000006C616ELL;
      if (v5 == 0x6F69746964617274) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_32FC4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x756F4265726F7473;
    }
    else {
      uint64_t v3 = 0x65726F74536E6F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEB00000000746867;
    }
    else {
      unint64_t v4 = 0xEE00746867756F42;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x756F4265726F7473;
      }
      else {
        uint64_t v6 = 0x65726F74536E6F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEB00000000746867;
      }
      else {
        unint64_t v7 = 0xEE00746867756F42;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_27E370();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_33108(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65697265536E6F6ELL;
  unint64_t v3 = 0xE900000000000073;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65697265536E6F6ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6465726564726FLL;
      break;
    case 2:
      uint64_t v5 = 0x65726564724F6E75;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000073;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6465726564726FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x65726564724F6E75;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_332A8(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x64756F6C4369;
    }
    else {
      uint64_t v2 = 0x73656E755469;
    }
    unint64_t v3 = 0xE600000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x64756F6C4369;
      }
      else {
        uint64_t v5 = 0x73656E755469;
      }
      unint64_t v6 = 0xE600000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_27E370();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_333B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC000000656C706DLL;
  uint64_t v3 = 0x6153736569726573;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6153736569726573;
  unint64_t v6 = 0xEC000000656C706DLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65536E497478656ELL;
      unint64_t v6 = 0xEC00000073656972;
      break;
    case 2:
      uint64_t v7 = 0x536572616873;
      goto LABEL_5;
    case 3:
      uint64_t v7 = 0x537472617473;
LABEL_5:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
      unint64_t v6 = 0xEB00000000736569;
      break;
    case 4:
      uint64_t v5 = 0x65756E69746E6F63;
      unint64_t v6 = 0xEE00736569726553;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    case 6:
      unint64_t v6 = 0x80000000002ACF20;
      uint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000073656972;
      if (v5 == 0x65536E497478656ELL) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      uint64_t v8 = 0x536572616873;
      goto LABEL_14;
    case 3:
      uint64_t v8 = 0x537472617473;
LABEL_14:
      unint64_t v2 = 0xEB00000000736569;
      if (v5 != (v8 & 0xFFFFFFFFFFFFLL | 0x7265000000000000)) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v2 = 0xEE00736569726553;
      if (v5 != 0x65756E69746E6F63) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6E776F6E6B6E75;
      goto LABEL_19;
    case 6:
      unint64_t v2 = 0x80000000002ACF20;
      if (v5 != 0xD000000000000010) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_23;
      }
LABEL_20:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_23:
      }
        char v9 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_33638(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7824750;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7824750;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6574656C706D6F63;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 2:
      uint64_t v5 = 0x6572676F72506E69;
      unint64_t v3 = 0xEA00000000007373;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x6574656C706D6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6572676F72506E69;
      unint64_t v6 = 0xEA00000000007373;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_337C8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000000002ADA90;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 2:
      unint64_t v5 = 0x76616E556B6F6F62;
      unint64_t v3 = 0xEF656C62616C6961;
      break;
    case 3:
      unint64_t v5 = 0x6C70704177656976;
      unint64_t v3 = 0xEB00000000444965;
      break;
    case 4:
      unint64_t v5 = 0x63694E7265746E65;
      unint64_t v3 = 0xED0000656D616E6BLL;
      break;
    case 5:
      unint64_t v5 = 0x6976655274726F73;
      unint64_t v3 = 0xEB00000000737765;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v6 = "reviewSubmissionError";
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0x6163696669746F6ELL;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 8:
      unint64_t v5 = 0xD000000000000021;
      unint64_t v6 = "removeRatingAndReviewConfirmation";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 9:
      unint64_t v5 = 0x6F53736569726573;
      unint64_t v3 = 0xEF726F7272457472;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x80000000002ADA90;
      if (v5 == 0xD000000000000013) {
        goto LABEL_29;
      }
      goto LABEL_32;
    case 2:
      unint64_t v7 = 0xEF656C62616C6961;
      if (v5 != 0x76616E556B6F6F62) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 3:
      uint64_t v8 = 0x6C70704177656976;
      uint64_t v9 = 4475237;
      goto LABEL_21;
    case 4:
      unint64_t v7 = 0xED0000656D616E6BLL;
      if (v5 != 0x63694E7265746E65) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 5:
      uint64_t v8 = 0x6976655274726F73;
      uint64_t v9 = 7567205;
LABEL_21:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v8) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 6:
      unint64_t v2 = 0xD000000000000015;
      uint64_t v10 = "reviewSubmissionError";
      goto LABEL_27;
    case 7:
      unint64_t v7 = 0xEC0000006E6F6974;
      if (v5 != 0x6163696669746F6ELL) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 8:
      unint64_t v2 = 0xD000000000000021;
      uint64_t v10 = "removeRatingAndReviewConfirmation";
LABEL_27:
      unint64_t v7 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      goto LABEL_28;
    case 9:
      unint64_t v7 = 0xEF726F7272457472;
      if (v5 != 0x6F53736569726573) {
        goto LABEL_32;
      }
      goto LABEL_29;
    default:
LABEL_28:
      if (v5 != v2) {
        goto LABEL_32;
      }
LABEL_29:
      if (v3 == v7) {
        char v11 = 1;
      }
      else {
LABEL_32:
      }
        char v11 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t static SearchEndData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      unint64_t v5 = 0x75426C65636E6163;
      unint64_t v4 = 0xEF7061546E6F7474;
      break;
    case 2:
      unint64_t v4 = 0x80000000002AD6D0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0x656E6F646E616261;
      unint64_t v4 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xEF7061546E6F7474;
      if (v5 == 0x75426C65636E6163) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000000002AD6D0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x656E6F646E616261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_33D0C()
{
  return 0x6E45686372616573;
}

uint64_t sub_33D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E45686372616573 && a2 == 0xEF646F6874654D64)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_33DEC(uint64_t a1)
{
  unint64_t v2 = sub_34150();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_33E28(uint64_t a1)
{
  unint64_t v2 = sub_34150();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchEndData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_316ED8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_34150();
  sub_27E440();
  char v10 = v7;
  sub_341A4();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchEndData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_316EF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_34150();
  sub_27E430();
  if (!v2)
  {
    sub_341F8();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_34114(unsigned __int8 *a1, char *a2)
{
  return sub_31108(*a1, *a2);
}

uint64_t sub_34120@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SearchEndData.init(from:)(a1, a2);
}

uint64_t sub_34138(void *a1)
{
  return SearchEndData.encode(to:)(a1);
}

unint64_t sub_34150()
{
  unint64_t result = qword_316EE0;
  if (!qword_316EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316EE0);
  }
  return result;
}

unint64_t sub_341A4()
{
  unint64_t result = qword_316EE8;
  if (!qword_316EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316EE8);
  }
  return result;
}

unint64_t sub_341F8()
{
  unint64_t result = qword_316EF8;
  if (!qword_316EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316EF8);
  }
  return result;
}

unint64_t sub_34250()
{
  unint64_t result = qword_316F00;
  if (!qword_316F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F00);
  }
  return result;
}

unint64_t sub_342A8()
{
  unint64_t result = qword_316F08;
  if (!qword_316F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchEndData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x343C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEndData()
{
  return &type metadata for SearchEndData;
}

unsigned char *storeEnumTagSinglePayload for SearchEndData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3449CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEndData.CodingKeys()
{
  return &type metadata for SearchEndData.CodingKeys;
}

unint64_t sub_344D8()
{
  unint64_t result = qword_316F10;
  if (!qword_316F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F10);
  }
  return result;
}

unint64_t sub_34530()
{
  unint64_t result = qword_316F18;
  if (!qword_316F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F18);
  }
  return result;
}

unint64_t sub_34588()
{
  unint64_t result = qword_316F20;
  if (!qword_316F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F20);
  }
  return result;
}

BookAnalytics::MangaFlag_optional __swiftcall MangaFlag.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F72E0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t MangaFlag.rawValue.getter()
{
  uint64_t v1 = 28526;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7562617;
  }
}

uint64_t sub_34680(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_32D34(*a1, *a2);
}

unint64_t sub_34690()
{
  unint64_t result = qword_316F28;
  if (!qword_316F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F28);
  }
  return result;
}

Swift::Int sub_346E4()
{
  return sub_27E420();
}

uint64_t sub_34774()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_347F0()
{
  return sub_27E420();
}

BookAnalytics::MangaFlag_optional sub_3487C(Swift::String *a1)
{
  return MangaFlag.init(rawValue:)(*a1);
}

void sub_34888(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 28526;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E776F6E6B6E75;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 7562617;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_348D4()
{
  return sub_27DED0();
}

uint64_t sub_34934()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for MangaFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x34A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MangaFlag()
{
  return &type metadata for MangaFlag;
}

unint64_t sub_34A88()
{
  unint64_t result = qword_316F30;
  if (!qword_316F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F30);
  }
  return result;
}

uint64_t sub_34ADC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_316F38, &enum case for SessionGroup.default(_:));
}

uint64_t static SectionExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316F38, a1);
}

uint64_t sub_34B3C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_316F50, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SectionExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316F50, a1);
}

uint64_t FlowcaseExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316A10);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FlowcaseExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316A10);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SectionExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SectionExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317040);
}

uint64_t SectionExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.readingGoalsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.readingGoalsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.readingGoalsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.booksGoalsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.booksGoalsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.booksGoalsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.onDevicePersonalizationPropertyData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.onDevicePersonalizationPropertyData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.onDevicePersonalizationPropertyData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SectionExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SectionExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SectionExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v8, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v8, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_315DE8);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v2, v25);
}

uint64_t FlowcaseExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 4);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 80);
  int v11 = *(_DWORD *)(v1 + 88);
  char v12 = *(unsigned char *)(v1 + 92);
  uint64_t v13 = *(void *)(v1 + 96);
  uint64_t v14 = *(void *)(v1 + 104);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(_DWORD *)(a1 + 4) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(void *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 92) = v12;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SectionExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 224);
  long long v3 = *(_OWORD *)(v1 + 192);
  long long v19 = *(_OWORD *)(v1 + 208);
  long long v20 = v2;
  long long v4 = *(_OWORD *)(v1 + 224);
  long long v21 = *(_OWORD *)(v1 + 240);
  long long v5 = *(_OWORD *)(v1 + 160);
  long long v7 = *(_OWORD *)(v1 + 128);
  long long v15 = *(_OWORD *)(v1 + 144);
  long long v6 = v15;
  long long v16 = v5;
  long long v8 = *(_OWORD *)(v1 + 160);
  long long v9 = *(_OWORD *)(v1 + 192);
  long long v17 = *(_OWORD *)(v1 + 176);
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = *(_OWORD *)(v1 + 128);
  v14[0] = *(_OWORD *)(v1 + 112);
  long long v12 = v14[0];
  v14[1] = v11;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 240);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v3;
  uint64_t v22 = *(void *)(v1 + 256);
  *(void *)(a1 + 144) = *(void *)(v1 + 256);
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v7;
  return sub_35DC8((uint64_t)v14);
}

uint64_t sub_35DC8(uint64_t a1)
{
  return a1;
}

__n128 SectionExposureEvent.Model.readingGoalsData.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 328);
  char v3 = *(unsigned char *)(v1 + 336);
  long long v4 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 264);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 296);
  long long v6 = *(_OWORD *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v2;
  *(unsigned char *)(a1 + 72) = v3;
  return result;
}

__n128 SectionExposureEvent.Model.booksGoalsData.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 376);
  __n128 result = *(__n128 *)(v1 + 344);
  long long v4 = *(_OWORD *)(v1 + 360);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t SectionExposureEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 408);
  *(void *)a1 = *(void *)(v1 + 384);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 392);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SectionExposureEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 432);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 416);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

__n128 SectionExposureEvent.Model.onDevicePersonalizationPropertyData.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 456);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 464);
  __n128 result = *(__n128 *)(v1 + 440);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t SectionExposureEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[59];
  uint64_t v3 = v1[60];
  uint64_t v4 = v1[61];
  uint64_t v5 = v1[62];
  uint64_t v6 = v1[63];
  uint64_t v7 = v1[64];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void SectionExposureEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 520);
}

uint64_t SectionExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent.Model(0) + 52);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SectionExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317120);
}

uint64_t SectionExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SectionExposureEvent.Model(0) + 56);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SectionExposureEvent.Model.init(sectionData:linkData:readingGoalsData:booksGoalsData:pageData:upSellData:onDevicePersonalizationPropertyData:seriesData:suggestionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, uint64_t a12)
{
  int v13 = *(_DWORD *)(a1 + 4);
  uint64_t v14 = (_OWORD *)(a9 + 264);
  long long v15 = *(_OWORD *)(a1 + 8);
  long long v16 = *(_OWORD *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  int v19 = *(_DWORD *)(a1 + 88);
  char v20 = *(unsigned char *)(a1 + 92);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a3 + 64);
  char v24 = *(unsigned char *)(a3 + 72);
  char v25 = *(unsigned char *)(a4 + 32);
  uint64_t v26 = *(void *)(a5 + 16);
  uint64_t v27 = *(void *)(a5 + 24);
  uint64_t v28 = *(void *)(a6 + 16);
  uint64_t v29 = *(void *)(a7 + 16);
  char v30 = *(unsigned char *)(a7 + 24);
  char v31 = *a10;
  *(unsigned char *)a9 = *(unsigned char *)a1;
  *(_DWORD *)(a9 + 4) = v13;
  *(_OWORD *)(a9 + 8) = v15;
  *(_OWORD *)(a9 + 24) = v16;
  *(void *)(a9 + 40) = v17;
  *(void *)(a9 + 48) = v18;
  *(_OWORD *)(a9 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a9 + 72) = *(_OWORD *)(a1 + 72);
  *(_DWORD *)(a9 + 88) = v19;
  *(unsigned char *)(a9 + 92) = v20;
  *(void *)(a9 + 96) = v21;
  *(void *)(a9 + 104) = v22;
  long long v32 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 112) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 128) = v32;
  long long v33 = *(_OWORD *)(a2 + 32);
  long long v34 = *(_OWORD *)(a2 + 48);
  long long v35 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a9 + 176) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a9 + 192) = v35;
  *(_OWORD *)(a9 + 144) = v33;
  *(_OWORD *)(a9 + 160) = v34;
  long long v36 = *(_OWORD *)(a2 + 96);
  long long v37 = *(_OWORD *)(a2 + 112);
  long long v38 = *(_OWORD *)(a2 + 128);
  *(void *)(a9 + 256) = *(void *)(a2 + 144);
  *(_OWORD *)(a9 + 224) = v37;
  *(_OWORD *)(a9 + 240) = v38;
  *(_OWORD *)(a9 + 208) = v36;
  long long v39 = *(_OWORD *)(a3 + 16);
  *uint64_t v14 = *(_OWORD *)a3;
  v14[1] = v39;
  long long v40 = *(_OWORD *)(a3 + 48);
  _OWORD v14[2] = *(_OWORD *)(a3 + 32);
  void v14[3] = v40;
  *(void *)(a9 + 328) = v23;
  *(unsigned char *)(a9 + 336) = v24;
  long long v41 = *(_OWORD *)(a4 + 16);
  v14[5] = *(_OWORD *)a4;
  v14[6] = v41;
  *(unsigned char *)(a9 + 376) = v25;
  *(_OWORD *)(a9 + 384) = *(_OWORD *)a5;
  *(void *)(a9 + 400) = v26;
  *(void *)(a9 + 408) = v27;
  *(_OWORD *)(a9 + 416) = *(_OWORD *)a6;
  *(void *)(a9 + 432) = v28;
  v14[11] = *(_OWORD *)a7;
  *(void *)(a9 + 456) = v29;
  *(unsigned char *)(a9 + 464) = v30;
  long long v42 = a8[1];
  v14[13] = *a8;
  v14[14] = v42;
  v14[15] = a8[2];
  *(unsigned char *)(a9 + 520) = v31;
  uint64_t v43 = type metadata accessor for SectionExposureEvent.Model(0);
  uint64_t v44 = a9 + *(int *)(v43 + 52);
  uint64_t v45 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v44, a11, v45);
  uint64_t v46 = a9 + *(int *)(v43 + 56);
  uint64_t v47 = sub_27D7F0();
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32);

  return v48(v46, a12, v47);
}

uint64_t sub_36260(char a1)
{
  uint64_t result = 0x446E6F6974636573;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1802398060;
      return v3 | 0x6174614400000000;
    case 2:
      return 0xD000000000000010;
    case 3:
      return 0x616F47736B6F6F62;
    case 4:
      unsigned int v3 = 1701273968;
      return v3 | 0x6174614400000000;
    case 5:
      uint64_t v4 = 0x6C6C65537075;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 6:
      return 0xD000000000000023;
    case 7:
      uint64_t v4 = 0x736569726573;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 8:
      return 0x6974736567677573;
    case 9:
      uint64_t v5 = 0x44746E657665;
      goto LABEL_13;
    case 10:
      uint64_t v5 = 0x4464656D6974;
LABEL_13:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_363D8()
{
  return sub_36260(*v0);
}

uint64_t sub_363E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_3B5AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_36408(uint64_t a1)
{
  unint64_t v2 = sub_369CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_36444(uint64_t a1)
{
  unint64_t v2 = sub_369CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SectionExposureEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_316F90);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_369CC();
  sub_27E440();
  int v8 = *((_DWORD *)v2 + 1);
  long long v9 = *(_OWORD *)(v2 + 8);
  long long v10 = *(_OWORD *)(v2 + 24);
  uint64_t v11 = *((void *)v2 + 5);
  uint64_t v12 = *((void *)v2 + 6);
  int v13 = *((_DWORD *)v2 + 22);
  char v14 = v2[92];
  uint64_t v15 = *((void *)v2 + 12);
  uint64_t v16 = *((void *)v2 + 13);
  char v48 = *v2;
  int v49 = v8;
  long long v50 = v9;
  long long v51 = v10;
  uint64_t v52 = v11;
  uint64_t v53 = v12;
  long long v54 = *(_OWORD *)(v2 + 56);
  long long v55 = *(_OWORD *)(v2 + 72);
  int v56 = v13;
  char v57 = v14;
  uint64_t v58 = v15;
  uint64_t v59 = v16;
  char v47 = 0;
  sub_1FE58();
  uint64_t v17 = v60;
  sub_27E330();
  if (!v17)
  {
    long long v18 = *((_OWORD *)v2 + 14);
    long long v43 = *((_OWORD *)v2 + 13);
    long long v44 = v18;
    long long v45 = *((_OWORD *)v2 + 15);
    uint64_t v46 = *((void *)v2 + 32);
    long long v19 = *((_OWORD *)v2 + 10);
    long long v39 = *((_OWORD *)v2 + 9);
    long long v40 = v19;
    long long v20 = *((_OWORD *)v2 + 12);
    long long v41 = *((_OWORD *)v2 + 11);
    long long v42 = v20;
    long long v21 = *((_OWORD *)v2 + 8);
    long long v37 = *((_OWORD *)v2 + 7);
    long long v38 = v21;
    char v36 = 1;
    sub_1FF00();
    sub_27E330();
    uint64_t v22 = *((void *)v2 + 41);
    char v23 = v2[336];
    long long v24 = *(_OWORD *)(v2 + 280);
    long long v37 = *(_OWORD *)(v2 + 264);
    long long v38 = v24;
    long long v25 = *(_OWORD *)(v2 + 312);
    long long v39 = *(_OWORD *)(v2 + 296);
    long long v40 = v25;
    *(void *)&long long v41 = v22;
    BYTE8(v41) = v23;
    char v36 = 2;
    sub_29044();
    sub_27E2C0();
    char v26 = v2[376];
    long long v27 = *(_OWORD *)(v2 + 360);
    long long v37 = *(_OWORD *)(v2 + 344);
    long long v38 = v27;
    LOBYTE(v39) = v26;
    char v36 = 3;
    sub_36A20();
    sub_27E2C0();
    uint64_t v28 = *((void *)v2 + 50);
    uint64_t v29 = *((void *)v2 + 51);
    long long v37 = *((_OWORD *)v2 + 24);
    *(void *)&long long v38 = v28;
    *((void *)&v38 + 1) = v29;
    char v36 = 4;
    sub_1FEAC();
    sub_27E330();
    uint64_t v30 = *((void *)v2 + 54);
    long long v37 = *((_OWORD *)v2 + 26);
    *(void *)&long long v38 = v30;
    char v36 = 5;
    sub_36A74();
    sub_27E2C0();
    uint64_t v31 = *((void *)v2 + 57);
    char v32 = v2[464];
    long long v37 = *(_OWORD *)(v2 + 440);
    *(void *)&long long v38 = v31;
    BYTE8(v38) = v32;
    char v36 = 6;
    sub_36AC8();
    sub_27E2C0();
    long long v33 = *(_OWORD *)(v2 + 488);
    long long v37 = *(_OWORD *)(v2 + 472);
    long long v38 = v33;
    long long v39 = *(_OWORD *)(v2 + 504);
    char v36 = 7;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v37) = v2[520];
    char v36 = 8;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for SectionExposureEvent.Model(0);
    LOBYTE(v37) = 9;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v37) = 10;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_369CC()
{
  unint64_t result = qword_316F98;
  if (!qword_316F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316F98);
  }
  return result;
}

unint64_t sub_36A20()
{
  unint64_t result = qword_316FA0;
  if (!qword_316FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FA0);
  }
  return result;
}

unint64_t sub_36A74()
{
  unint64_t result = qword_316FA8;
  if (!qword_316FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FA8);
  }
  return result;
}

unint64_t sub_36AC8()
{
  unint64_t result = qword_316FB0;
  if (!qword_316FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FB0);
  }
  return result;
}

unint64_t sub_36B1C()
{
  unint64_t result = qword_316FB8;
  if (!qword_316FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FB8);
  }
  return result;
}

uint64_t SectionExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v55 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_27D7C0();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_4E04(&qword_316FC0);
  uint64_t v8 = *(void *)(v58 - 8);
  __chkstk_darwin();
  long long v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SectionExposureEvent.Model(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  v62 = a1;
  sub_5900(a1, v13);
  sub_369CC();
  char v57 = v10;
  uint64_t v14 = v77;
  sub_27E430();
  if (v14)
  {
    int v15 = 0;
    uint64_t v77 = v14;
    uint64_t result = sub_5E94((uint64_t)v62);
    int v17 = 0;
    int v18 = 0;
    int v19 = 0;
  }
  else
  {
    uint64_t v54 = v3;
    LOBYTE(v64) = 0;
    sub_20898();
    sub_27E260();
    int v26 = *(_DWORD *)&v71[4];
    long long v27 = *(_OWORD *)&v71[8];
    long long v28 = *(_OWORD *)&v71[24];
    uint64_t v29 = *(void *)&v71[40];
    uint64_t v30 = *(void *)v72;
    int v31 = *(_DWORD *)&v72[40];
    char v32 = v72[44];
    long long v33 = v73;
    char *v12 = v71[0];
    *((_DWORD *)v12 + 1) = v26;
    *(_OWORD *)(v12 + 8) = v27;
    *(_OWORD *)(v12 + 24) = v28;
    *((void *)v12 + 5) = v29;
    *((void *)v12 + 6) = v30;
    *(_OWORD *)(v12 + 56) = *(_OWORD *)&v72[8];
    *(_OWORD *)(v12 + 72) = *(_OWORD *)&v72[24];
    *((_DWORD *)v12 + 22) = v31;
    v12[92] = v32;
    *((_OWORD *)v12 + 6) = v33;
    char v70 = 1;
    sub_20940();
    sub_27E260();
    long long v34 = v74;
    long long v35 = v75;
    long long v36 = *(_OWORD *)&v72[32];
    *((_OWORD *)v12 + 13) = v73;
    *((_OWORD *)v12 + 14) = v34;
    *((_OWORD *)v12 + 15) = v35;
    long long v37 = *(_OWORD *)v72;
    long long v38 = *(_OWORD *)&v72[16];
    *((_OWORD *)v12 + 9) = *(_OWORD *)&v71[32];
    *((_OWORD *)v12 + 10) = v37;
    *((void *)v12 + 32) = v76;
    *((_OWORD *)v12 + 11) = v38;
    *((_OWORD *)v12 + 12) = v36;
    long long v39 = *(_OWORD *)&v71[16];
    *((_OWORD *)v12 + 7) = *(_OWORD *)v71;
    *((_OWORD *)v12 + 8) = v39;
    char v63 = 2;
    sub_28FEC();
    sub_27E1F0();
    uint64_t v40 = v68;
    char v41 = v69;
    long long v42 = v65;
    *(_OWORD *)(v12 + 264) = v64;
    *(_OWORD *)(v12 + 280) = v42;
    long long v43 = v67;
    *(_OWORD *)(v12 + 296) = v66;
    *(_OWORD *)(v12 + 312) = v43;
    *((void *)v12 + 41) = v40;
    v12[336] = v41;
    char v63 = 3;
    sub_376F0();
    sub_27E1F0();
    char v44 = v66;
    long long v45 = v65;
    *(_OWORD *)(v12 + 344) = v64;
    *(_OWORD *)(v12 + 360) = v45;
    v12[376] = v44;
    char v63 = 4;
    sub_208EC();
    sub_27E260();
    long long v46 = v65;
    *((_OWORD *)v12 + 24) = v64;
    *((_OWORD *)v12 + 25) = v46;
    char v63 = 5;
    sub_37744();
    sub_27E1F0();
    uint64_t v47 = v65;
    *((_OWORD *)v12 + 26) = v64;
    *((void *)v12 + 54) = v47;
    char v63 = 6;
    sub_37798();
    sub_27E1F0();
    v53[1] = v8;
    uint64_t v48 = v65;
    char v49 = BYTE8(v65);
    *(_OWORD *)(v12 + 440) = v64;
    *((void *)v12 + 57) = v48;
    v12[464] = v49;
    char v63 = 7;
    sub_11A3C();
    sub_27E1F0();
    long long v50 = v65;
    *(_OWORD *)(v12 + 472) = v64;
    *(_OWORD *)(v12 + 488) = v50;
    *(_OWORD *)(v12 + 504) = v66;
    char v63 = 8;
    sub_377EC();
    sub_27E1F0();
    uint64_t v77 = 0;
    v12[520] = v64;
    LOBYTE(v64) = 9;
    sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
    uint64_t v51 = v77;
    sub_27E260();
    uint64_t v77 = v51;
    if (v51)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v58);
      sub_5E94((uint64_t)v62);
      LODWORD(v62) = 0;
      LODWORD(v58) = 1;
      int v17 = 1;
      int v15 = 1;
      int v19 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v12[*(int *)(v60 + 52)], v7, v61);
      LOBYTE(v64) = 10;
      sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
      uint64_t v52 = v77;
      sub_27E260();
      uint64_t v77 = v52;
      if (!v52)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v58);
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v12[*(int *)(v60 + 56)], v5, v54);
        sub_37840((uint64_t)v12, v56);
        sub_5E94((uint64_t)v62);
        return sub_378A4((uint64_t)v12);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v58);
      sub_5E94((uint64_t)v62);
      LODWORD(v58) = 1;
      int v17 = 1;
      int v15 = 1;
      int v19 = 1;
      LODWORD(v62) = 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int v18 = (int)v62;
    if (v58)
    {
      long long v20 = *((_OWORD *)v12 + 13);
      long long v21 = *((_OWORD *)v12 + 15);
      long long v74 = *((_OWORD *)v12 + 14);
      long long v75 = v21;
      long long v22 = *((_OWORD *)v12 + 9);
      long long v23 = *((_OWORD *)v12 + 11);
      long long v24 = *((_OWORD *)v12 + 12);
      *(_OWORD *)v72 = *((_OWORD *)v12 + 10);
      *(_OWORD *)&v72[16] = v23;
      uint64_t v76 = *((void *)v12 + 32);
      *(_OWORD *)&v72[32] = v24;
      long long v73 = v20;
      long long v25 = *((_OWORD *)v12 + 8);
      *(_OWORD *)v71 = *((_OWORD *)v12 + 7);
      *(_OWORD *)&v71[16] = v25;
      *(_OWORD *)&v71[32] = v22;
      sub_37644((uint64_t)v71);
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
  }
  if (v17) {
    goto LABEL_5;
  }
  if (!v15)
  {
LABEL_6:
    if (v19) {
      goto LABEL_7;
    }
LABEL_13:
    if (!v18) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(&v12[*(int *)(v60 + 52)], v61);
  }
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t result = sub_1A978(*((void *)v12 + 59), *((void *)v12 + 60), *((void *)v12 + 61), *((void *)v12 + 62), *((void *)v12 + 63), *((void *)v12 + 64));
  if ((v18 & 1) == 0) {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(&v12[*(int *)(v60 + 52)], v61);
}

uint64_t sub_37644(uint64_t a1)
{
  return a1;
}

unint64_t sub_376F0()
{
  unint64_t result = qword_316FC8;
  if (!qword_316FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FC8);
  }
  return result;
}

unint64_t sub_37744()
{
  unint64_t result = qword_316FD0;
  if (!qword_316FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FD0);
  }
  return result;
}

unint64_t sub_37798()
{
  unint64_t result = qword_316FD8;
  if (!qword_316FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FD8);
  }
  return result;
}

unint64_t sub_377EC()
{
  unint64_t result = qword_316FE0;
  if (!qword_316FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_316FE0);
  }
  return result;
}

uint64_t sub_37840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SectionExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_378A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SectionExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_37900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SectionExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_37918(void *a1)
{
  return SectionExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_37930@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_316F38, a1);
}

uint64_t sub_37968@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_316F50, a1);
}

uint64_t sub_379A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v9, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v9, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_315DE8);
  long long v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v4, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for SectionExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A10);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    long long v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for SectionExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_315DE8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for SectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for SectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for SectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for SectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_391CC);
}

uint64_t sub_391CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  uint64_t v14 = sub_4E04(&qword_316F68);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  uint64_t v15 = sub_4E04(&qword_316F70);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  uint64_t v16 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for SectionExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_395B8);
}

uint64_t sub_395B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A10);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  uint64_t v16 = sub_4E04(&qword_316F68);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_316F70);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  uint64_t v22 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  uint64_t v25 = sub_4E04(&qword_315DE8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_3999C()
{
  sub_39E78(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
  if (v0 <= 0x3F)
  {
    sub_39E78(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_39E78(319, &qword_317050, (void (*)(void))sub_28FEC, (void (*)(void))sub_29044);
      if (v2 <= 0x3F)
      {
        sub_39E78(319, &qword_317058, (void (*)(void))sub_376F0, (void (*)(void))sub_36A20);
        if (v3 <= 0x3F)
        {
          sub_39E78(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
          if (v4 <= 0x3F)
          {
            sub_39E78(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
            if (v5 <= 0x3F)
            {
              sub_39E78(319, &qword_317068, (void (*)(void))sub_37798, (void (*)(void))sub_36AC8);
              if (v6 <= 0x3F)
              {
                sub_39E78(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_39E78(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
                  if (v8 <= 0x3F)
                  {
                    sub_6DA0();
                    if (v9 <= 0x3F)
                    {
                      sub_6E6C();
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_39E78(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SectionExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v33 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v6 = a2[2];
    *(void *)(v4 + 8) = a2[1];
    *(void *)(v4 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(v4 + 24) = a2[3];
    *(void *)(v4 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(v4 + 72) = a2[9];
    *(void *)(v4 + 80) = v10;
    *(_DWORD *)(v4 + 88) = *((_DWORD *)a2 + 22);
    *(unsigned char *)(v4 + 92) = *((unsigned char *)a2 + 92);
    uint64_t v11 = a2[13];
    *(void *)(v4 + 96) = a2[12];
    *(void *)(v4 + 104) = v11;
    uint64_t v12 = a2[15];
    *(void *)(v4 + 112) = a2[14];
    *(void *)(v4 + 120) = v12;
    uint64_t v13 = a2[17];
    *(void *)(v4 + 128) = a2[16];
    *(void *)(v4 + 136) = v13;
    uint64_t v14 = a2[19];
    *(void *)(v4 + 144) = a2[18];
    *(void *)(v4 + 152) = v14;
    *(unsigned char *)(v4 + 160) = *((unsigned char *)a2 + 160);
    uint64_t v15 = a2[22];
    *(void *)(v4 + 168) = a2[21];
    *(void *)(v4 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(v4 + 184) = a2[23];
    *(void *)(v4 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(v4 + 200) = a2[25];
    *(void *)(v4 + 208) = v17;
    uint64_t v18 = a2[28];
    *(void *)(v4 + 216) = a2[27];
    *(void *)(v4 + 224) = v18;
    uint64_t v19 = a2[30];
    *(void *)(v4 + 232) = a2[29];
    *(void *)(v4 + 240) = v19;
    uint64_t v20 = a2[32];
    *(void *)(v4 + 248) = a2[31];
    *(void *)(v4 + 256) = v20;
    long long v21 = *(_OWORD *)(a2 + 33);
    long long v22 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(v4 + 321) = *(_OWORD *)((char *)a2 + 321);
    long long v23 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(v4 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(v4 + 312) = v23;
    *(_OWORD *)(v4 + 264) = v21;
    *(_OWORD *)(v4 + 280) = v22;
    long long v24 = *(_OWORD *)(a2 + 43);
    long long v25 = *(_OWORD *)(a2 + 45);
    *(unsigned char *)(v4 + 376) = *((unsigned char *)a2 + 376);
    *(_OWORD *)(v4 + 344) = v24;
    *(_OWORD *)(v4 + 360) = v25;
    uint64_t v26 = a2[49];
    *(void *)(v4 + 384) = a2[48];
    *(void *)(v4 + 392) = v26;
    uint64_t v27 = a2[51];
    *(void *)(v4 + 400) = a2[50];
    *(void *)(v4 + 408) = v27;
    *(unsigned char *)(v4 + 416) = *((unsigned char *)a2 + 416);
    *(unsigned char *)(v4 + 417) = *((unsigned char *)a2 + 417);
    uint64_t v28 = a2[54];
    *(void *)(v4 + 424) = a2[53];
    *(void *)(v4 + 432) = v28;
    long long v29 = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(v4 + 449) = *(_OWORD *)((char *)a2 + 449);
    *(_OWORD *)(v4 + 440) = v29;
    uint64_t v30 = a2 + 59;
    uint64_t v31 = a2[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31 == 1)
    {
      long long v32 = *(_OWORD *)(a2 + 61);
      *(_OWORD *)(v4 + 472) = *v30;
      *(_OWORD *)(v4 + 488) = v32;
      *(_OWORD *)(v4 + 504) = *(_OWORD *)(a2 + 63);
    }
    else
    {
      *(void *)(v4 + 472) = a2[59];
      *(unsigned char *)(v4 + 480) = *((unsigned char *)a2 + 480);
      *(void *)(v4 + 488) = a2[61];
      *(unsigned char *)(v4 + 496) = *((unsigned char *)a2 + 496);
      *(_WORD *)(v4 + 497) = *(_WORD *)((char *)a2 + 497);
      *(void *)(v4 + 504) = a2[63];
      *(void *)(v4 + 512) = v31;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v4 + 520) = *((unsigned char *)a2 + 520);
    uint64_t v34 = *(int *)(a3 + 52);
    uint64_t v35 = v4 + v34;
    uint64_t v36 = (uint64_t)a2 + v34;
    uint64_t v37 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = *(int *)(a3 + 56);
    uint64_t v39 = v4 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return v4;
}

uint64_t destroy for SectionExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 512) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 56);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  long long v20 = *(_OWORD *)(a2 + 264);
  long long v21 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
  long long v22 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v22;
  *(_OWORD *)(a1 + 264) = v20;
  *(_OWORD *)(a1 + 280) = v21;
  long long v23 = *(_OWORD *)(a2 + 344);
  long long v24 = *(_OWORD *)(a2 + 360);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(_OWORD *)(a1 + 344) = v23;
  *(_OWORD *)(a1 + 360) = v24;
  uint64_t v25 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v25;
  uint64_t v26 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v26;
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(unsigned char *)(a1 + 417) = *(unsigned char *)(a2 + 417);
  uint64_t v27 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v27;
  long long v28 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 449) = *(_OWORD *)(a2 + 449);
  *(_OWORD *)(a1 + 440) = v28;
  uint64_t v29 = a2 + 472;
  uint64_t v30 = *(void *)(a2 + 512);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 == 1)
  {
    long long v31 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)v29;
    *(_OWORD *)(a1 + 488) = v31;
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(v29 + 32);
  }
  else
  {
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(_WORD *)(a1 + 497) = *(_WORD *)(v29 + 25);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = v30;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  uint64_t v32 = *(int *)(a3 + 52);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = *(int *)(a3 + 56);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

uint64_t assignWithCopy for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  long long v7 = *(_OWORD *)(a2 + 280);
  long long v8 = *(_OWORD *)(a2 + 296);
  long long v9 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
  *(_OWORD *)(a1 + 296) = v8;
  *(_OWORD *)(a1 + 312) = v9;
  *(_OWORD *)(a1 + 280) = v7;
  long long v10 = *(_OWORD *)(a2 + 344);
  long long v11 = *(_OWORD *)(a2 + 360);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(_OWORD *)(a1 + 344) = v10;
  *(_OWORD *)(a1 + 360) = v11;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(unsigned char *)(a1 + 417) = *(unsigned char *)(a2 + 417);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v12 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 449) = *(_OWORD *)(a2 + 449);
  *(_OWORD *)(a1 + 440) = v12;
  uint64_t v13 = (long long *)(a1 + 472);
  uint64_t v14 = (long long *)(a2 + 472);
  uint64_t v15 = *(void *)(a2 + 512);
  if (*(void *)(a1 + 512) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 504);
      *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 504) = v17;
      long long *v13 = v16;
    }
    else
    {
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(unsigned char *)(a1 + 497) = *(unsigned char *)(a2 + 497);
      *(unsigned char *)(a1 + 498) = *(unsigned char *)(a2 + 498);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1CDD8(a1 + 472);
    long long v19 = *(_OWORD *)(a2 + 488);
    long long v18 = *(_OWORD *)(a2 + 504);
    long long *v13 = *v14;
    *(_OWORD *)(a1 + 488) = v19;
    *(_OWORD *)(a1 + 504) = v18;
  }
  else
  {
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(unsigned char *)(a1 + 497) = *(unsigned char *)(a2 + 497);
    *(unsigned char *)(a1 + 498) = *(unsigned char *)(a2 + 498);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  uint64_t v20 = *(int *)(a3 + 52);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = *(int *)(a3 + 56);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t initializeWithTake for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  long long v13 = *(_OWORD *)(a2 + 192);
  long long v14 = *(_OWORD *)(a2 + 208);
  long long v15 = *(_OWORD *)(a2 + 224);
  long long v16 = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 208) = v14;
  long long v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
  long long v18 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v18;
  long long v19 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v19;
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  long long v20 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v20;
  long long v21 = *(_OWORD *)(a2 + 416);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 449) = *(_OWORD *)(a2 + 449);
  long long v22 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 488) = v22;
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  uint64_t v23 = *(int *)(a3 + 52);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(_OWORD *)(a1 + 416) = v21;
  uint64_t v26 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 56);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  long long v21 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v21;
  *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
  long long v22 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v22;
  long long v23 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v23;
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  uint64_t v24 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v25;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  uint64_t v26 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v26;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 449) = *(_OWORD *)(a2 + 449);
  if (*(void *)(a1 + 512) != 1)
  {
    uint64_t v27 = *(void *)(a2 + 512);
    if (v27 != 1)
    {
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(_WORD *)(a1 + 497) = *(_WORD *)(a2 + 497);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 472);
  }
  long long v28 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 488) = v28;
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
LABEL_6:
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  uint64_t v29 = *(int *)(a3 + 52);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = *(int *)(a3 + 56);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B010);
}

uint64_t sub_3B010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 56);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B150);
}

uint64_t sub_3B150(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 56);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_3B27C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SectionExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B46CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionExposureEvent.Model.CodingKeys()
{
  return &type metadata for SectionExposureEvent.Model.CodingKeys;
}

unint64_t sub_3B4A8()
{
  unint64_t result = qword_317180;
  if (!qword_317180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317180);
  }
  return result;
}

unint64_t sub_3B500()
{
  unint64_t result = qword_317188;
  if (!qword_317188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317188);
  }
  return result;
}

unint64_t sub_3B558()
{
  unint64_t result = qword_317190;
  if (!qword_317190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317190);
  }
  return result;
}

uint64_t sub_3B5AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE0F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616F47736B6F6F62 && a2 == 0xEE0061746144736CLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000000002AE110 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_3BA78(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317198, &enum case for SessionGroup.default(_:));
}

uint64_t static CollectionDescriptionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317198, a1);
}

uint64_t sub_3BAD8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3171B0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CollectionDescriptionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3171B0, a1);
}

uint64_t CollectionDescriptionEvent.collectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3171C8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CollectionDescriptionEvent.collectionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3171C8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t CollectionDescriptionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionDescriptionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionDescriptionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317250);
}

uint64_t CollectionDescriptionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionDescriptionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionDescriptionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionDescriptionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CollectionDescriptionEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t CollectionDescriptionEvent.Model.collectionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t CollectionDescriptionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionDescriptionEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionDescriptionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3172E8);
}

uint64_t CollectionDescriptionEvent.Model.init(collectionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v4;
  *(_OWORD *)(a3 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for CollectionDescriptionEvent.Model(0) + 20);
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_3BFA0()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_3BFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_3D8D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_3C014(uint64_t a1)
{
  unint64_t v2 = sub_3C250();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3C050(uint64_t a1)
{
  unint64_t v2 = sub_3C250();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionDescriptionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3171D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_3C250();
  sub_27E440();
  uint64_t v9 = v3[1];
  uint64_t v12 = *v3;
  uint64_t v13 = v9;
  long long v14 = *((_OWORD *)v3 + 1);
  v11[15] = 0;
  sub_3C2A4();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for CollectionDescriptionEvent.Model(0);
    LOBYTE(v12) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_3C250()
{
  unint64_t result = qword_3171D8;
  if (!qword_3171D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3171D8);
  }
  return result;
}

unint64_t sub_3C2A4()
{
  unint64_t result = qword_3171E0;
  if (!qword_3171E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3171E0);
  }
  return result;
}

uint64_t CollectionDescriptionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_3171E8);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CollectionDescriptionEvent.Model(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_3C250();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v26 = 0;
  sub_3C618();
  uint64_t v14 = v22;
  sub_27E260();
  uint64_t v15 = v24;
  *(void *)uint64_t v11 = v23;
  *(void *)(v11 + 8) = v15;
  *(_OWORD *)(v11 + 16) = v25;
  LOBYTE(v23) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v11 + *(int *)(v17 + 20), v5, v12);
  sub_3C66C(v11, v19);
  sub_5E94((uint64_t)a1);
  return sub_3C6D0(v11);
}

unint64_t sub_3C618()
{
  unint64_t result = qword_3171F0;
  if (!qword_3171F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3171F0);
  }
  return result;
}

uint64_t sub_3C66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionDescriptionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3C6D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionDescriptionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3C72C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionDescriptionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_3C744(void *a1)
{
  return CollectionDescriptionEvent.Model.encode(to:)(a1);
}

uint64_t sub_3C75C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317198, a1);
}

uint64_t sub_3C794@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3171B0, a1);
}

uint64_t sub_3C7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionDescriptionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3171C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for CollectionDescriptionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3CD6C);
}

uint64_t sub_3CD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionDescriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3CE80);
}

uint64_t sub_3CE80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3171C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_3CF8C()
{
  sub_3D054();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_3D054()
{
  if (!qword_317260)
  {
    sub_3C618();
    sub_3C2A4();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_317260);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionDescriptionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_27D7C0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for CollectionDescriptionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for CollectionDescriptionEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for CollectionDescriptionEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for CollectionDescriptionEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for CollectionDescriptionEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionDescriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3D4C4);
}

uint64_t sub_3D4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionDescriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3D588);
}

uint64_t sub_3D588(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_3D630()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionDescriptionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3D794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionDescriptionEvent.Model.CodingKeys()
{
  return &type metadata for CollectionDescriptionEvent.Model.CodingKeys;
}

unint64_t sub_3D7D0()
{
  unint64_t result = qword_317320;
  if (!qword_317320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317320);
  }
  return result;
}

unint64_t sub_3D828()
{
  unint64_t result = qword_317328;
  if (!qword_317328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317328);
  }
  return result;
}

unint64_t sub_3D880()
{
  unint64_t result = qword_317330;
  if (!qword_317330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317330);
  }
  return result;
}

uint64_t sub_3D8D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00617461446E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void ClickData.linkActionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *ClickData.linkActionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t PurchaseData.isPreorder.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t PurchaseData.isPreorder.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*OnDevicePersonalizationPropertyData.onDevicePersonalizationUserStatus.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall PurchaseData.init(purchaseAttemptID:purchaseMethod:isPreorder:pricingParameters:)(BookAnalytics::PurchaseData *__return_ptr retstr, Swift::String purchaseAttemptID, BookAnalytics::PurchaseMethod_optional purchaseMethod, Swift::Bool isPreorder, Swift::String pricingParameters)
{
  BookAnalytics::PurchaseMethod v5 = *(unsigned char *)purchaseMethod.value;
  retstr->purchaseAttemptID = purchaseAttemptID;
  retstr->purchaseMethod.value = v5;
  retstr->isPreorder = isPreorder;
  retstr->pricingParameters = pricingParameters;
}

unint64_t sub_3DA5C()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6573616863727570;
      break;
    case 2:
      unint64_t result = 0x64726F6572507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_3DAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_3E850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_3DB24(uint64_t a1)
{
  unint64_t v2 = sub_3E288();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3DB60(uint64_t a1)
{
  unint64_t v2 = sub_3E288();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PurchaseData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_317338);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int8 *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 17);
  int v13 = v7;
  uint64_t v8 = *(void *)(v1 + 24);
  v11[0] = *(void *)(v1 + 32);
  v11[1] = v8;
  sub_5900(a1, a1[3]);
  sub_3E288();
  sub_27E440();
  char v19 = 0;
  uint64_t v9 = v14;
  sub_27E2F0();
  if (!v9)
  {
    char v18 = v13;
    char v17 = 1;
    sub_3E2DC();
    sub_27E2C0();
    char v16 = 2;
    sub_27E300();
    char v15 = 3;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PurchaseData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_317350);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_3E288();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v22 = 1;
  sub_3E330();
  swift_bridgeObjectRetain();
  sub_27E1F0();
  int v19 = v23;
  char v21 = 2;
  int v18 = sub_27E230();
  char v20 = 3;
  uint64_t v12 = sub_27E220();
  uint64_t v15 = v14;
  v18 &= 1u;
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v17 = v12;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v19;
  *(unsigned char *)(a2 + 17) = v18;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3E020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseData.init(from:)(a1, a2);
}

uint64_t sub_3E038(void *a1)
{
  return PurchaseData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12PurchaseDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 17);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 17);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_27E370(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == 3)
    {
      uint64_t result = 0;
      if (v6 != 3) {
        return result;
      }
      goto LABEL_25;
    }
    if (v6 == 3) {
      return 0;
    }
    if (v2)
    {
      if (v2 == 1)
      {
        uint64_t v12 = 0x6143746964657263;
        unint64_t v13 = 0xEA00000000006472;
        if (v6) {
          goto LABEL_12;
        }
LABEL_18:
        unint64_t v14 = 0xE700000000000000;
        if (v12 != 0x6E776F6E6B6E75) {
          goto LABEL_24;
        }
        goto LABEL_21;
      }
      uint64_t v12 = 0x6974706D65646572;
      unint64_t v13 = 0xEE0065646F436E6FLL;
      if (!v6) {
        goto LABEL_18;
      }
    }
    else
    {
      unint64_t v13 = 0xE700000000000000;
      uint64_t v12 = 0x6E776F6E6B6E75;
      if (!v6) {
        goto LABEL_18;
      }
    }
LABEL_12:
    if (v6 == 1)
    {
      unint64_t v14 = 0xEA00000000006472;
      if (v12 != 0x6143746964657263) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v14 = 0xEE0065646F436E6FLL;
      if (v12 != 0x6974706D65646572) {
        goto LABEL_24;
      }
    }
LABEL_21:
    if (v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      if (v3 == v7)
      {
LABEL_26:
        if (v4 == v8 && v5 == v9) {
          return 1;
        }
        return sub_27E370();
      }
      return 0;
    }
LABEL_24:
    char v15 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
LABEL_25:
    if ((v3 ^ v7)) {
      return result;
    }
    goto LABEL_26;
  }
  return result;
}

unint64_t sub_3E288()
{
  unint64_t result = qword_317340;
  if (!qword_317340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317340);
  }
  return result;
}

unint64_t sub_3E2DC()
{
  unint64_t result = qword_317348;
  if (!qword_317348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317348);
  }
  return result;
}

unint64_t sub_3E330()
{
  unint64_t result = qword_317358;
  if (!qword_317358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317358);
  }
  return result;
}

unint64_t sub_3E388()
{
  unint64_t result = qword_317360;
  if (!qword_317360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317360);
  }
  return result;
}

unint64_t sub_3E3E0()
{
  unint64_t result = qword_317368;
  if (!qword_317368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317368);
  }
  return result;
}

uint64_t destroy for PurchaseData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PurchaseData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurchaseData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PurchaseData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PurchaseData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseData()
{
  return &type metadata for PurchaseData;
}

unsigned char *storeEnumTagSinglePayload for PurchaseData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3E710);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseData.CodingKeys()
{
  return &type metadata for PurchaseData.CodingKeys;
}

unint64_t sub_3E74C()
{
  unint64_t result = qword_317370;
  if (!qword_317370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317370);
  }
  return result;
}

unint64_t sub_3E7A4()
{
  unint64_t result = qword_317378;
  if (!qword_317378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317378);
  }
  return result;
}

unint64_t sub_3E7FC()
{
  unint64_t result = qword_317380;
  if (!qword_317380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317380);
  }
  return result;
}

uint64_t sub_3E850(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE140 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEE00646F6874654DLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64726F6572507369 && a2 == 0xEA00000000007265 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE160)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::DisplayType_optional __swiftcall DisplayType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7348;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t DisplayType.rawValue.getter()
{
  uint64_t v1 = 1684632167;
  if (*v0 != 1) {
    uint64_t v1 = 1953720684;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_3EADC(char *a1, unsigned __int8 *a2)
{
  return sub_30168(*a1, *a2);
}

unint64_t sub_3EAEC()
{
  unint64_t result = qword_317388;
  if (!qword_317388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317388);
  }
  return result;
}

Swift::Int sub_3EB40()
{
  return sub_27E420();
}

uint64_t sub_3EBD4()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3EC54()
{
  return sub_27E420();
}

BookAnalytics::DisplayType_optional sub_3ECE4(Swift::String *a1)
{
  return DisplayType.init(rawValue:)(*a1);
}

void sub_3ECF0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1684632167;
  if (v2 != 1) {
    uint64_t v4 = 1953720684;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_3ED40()
{
  return sub_27DED0();
}

uint64_t sub_3EDA0()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3EEBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayType()
{
  return &type metadata for DisplayType;
}

unint64_t sub_3EEF4()
{
  unint64_t result = qword_317390;
  if (!qword_317390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317390);
  }
  return result;
}

uint64_t sub_3EF4C()
{
  return 0x546C61766F6D6572;
}

uint64_t sub_3EF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x546C61766F6D6572 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_3F01C(uint64_t a1)
{
  unint64_t v2 = sub_3F48C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3F058(uint64_t a1)
{
  unint64_t v2 = sub_3F48C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WantListRemovalTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_317398);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_3F48C();
  sub_27E440();
  char v10 = v7;
  sub_3F4E0();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WantListRemovalTypeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3173B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  Swift::String v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_3F48C();
  sub_27E430();
  if (!v2)
  {
    sub_3F534();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_3F344@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return WantListRemovalTypeData.init(from:)(a1, a2);
}

uint64_t sub_3F35C(void *a1)
{
  return WantListRemovalTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics23WantListRemovalTypeDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0x80000000002AD790;
  unint64_t v4 = 0xD000000000000012;
  if (v2 == 1)
  {
    unint64_t v5 = 0x80000000002AD790;
  }
  else
  {
    unint64_t v4 = 0x6F4465766F6D6572;
    unint64_t v5 = 0xEE0064616F6C6E77;
  }
  if (*a1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  unint64_t v8 = 0xD000000000000012;
  if (*a2 != 1)
  {
    unint64_t v8 = 0x6F4465766F6D6572;
    unint64_t v3 = 0xEE0064616F6C6E77;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v3;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v6 == v9 && v7 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_3F48C()
{
  unint64_t result = qword_3173A0;
  if (!qword_3173A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173A0);
  }
  return result;
}

unint64_t sub_3F4E0()
{
  unint64_t result = qword_3173A8;
  if (!qword_3173A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173A8);
  }
  return result;
}

unint64_t sub_3F534()
{
  unint64_t result = qword_3173B8;
  if (!qword_3173B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173B8);
  }
  return result;
}

unint64_t sub_3F58C()
{
  unint64_t result = qword_3173C0;
  if (!qword_3173C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173C0);
  }
  return result;
}

unint64_t sub_3F5E4()
{
  unint64_t result = qword_3173C8;
  if (!qword_3173C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WantListRemovalTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3F704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListRemovalTypeData()
{
  return &type metadata for WantListRemovalTypeData;
}

unsigned char *storeEnumTagSinglePayload for WantListRemovalTypeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3F7D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListRemovalTypeData.CodingKeys()
{
  return &type metadata for WantListRemovalTypeData.CodingKeys;
}

unint64_t sub_3F814()
{
  unint64_t result = qword_3173D0;
  if (!qword_3173D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173D0);
  }
  return result;
}

unint64_t sub_3F86C()
{
  unint64_t result = qword_3173D8;
  if (!qword_3173D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173D8);
  }
  return result;
}

unint64_t sub_3F8C4()
{
  unint64_t result = qword_3173E0;
  if (!qword_3173E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3173E0);
  }
  return result;
}

uint64_t sub_3F918(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3173E8, &enum case for SessionGroup.default(_:));
}

uint64_t static FlowcaseExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3173E8, a1);
}

uint64_t sub_3F978(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317400, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static FlowcaseExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317400, a1);
}

uint64_t FlowcaseExposureEvent.flowcaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FlowcaseExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3174A8);
}

uint64_t FlowcaseExposureEvent.flowcaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.flowcaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.mediaData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.dealsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.dealsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.dealsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FlowcaseExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t FlowcaseExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for FlowcaseExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = enum case for EventProperty.optional<A>(_:);
  uint64_t v13 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v12, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v12, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_315DE8);
  char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t FlowcaseExposureEvent.Model.flowcaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  int v3 = *(_DWORD *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  char v7 = *(unsigned char *)(v1 + 160);
  uint64_t v9 = *(void *)(v1 + 168);
  uint64_t v8 = *(void *)(v1 + 176);
  *(void *)a1 = *(void *)(v1 + 112);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t FlowcaseExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 232);
  void v12[2] = *(_OWORD *)(v1 + 216);
  v12[3] = v2;
  long long v3 = *(_OWORD *)(v1 + 248);
  long long v4 = *(_OWORD *)(v1 + 200);
  v12[0] = *(_OWORD *)(v1 + 184);
  v12[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 296);
  long long v6 = *(_OWORD *)(v1 + 264);
  long long v13 = *(_OWORD *)(v1 + 280);
  long long v14 = v5;
  long long v7 = *(_OWORD *)(v1 + 296);
  long long v15 = *(_OWORD *)(v1 + 312);
  long long v8 = *(_OWORD *)(v1 + 264);
  v12[4] = v3;
  v12[5] = v8;
  uint64_t v16 = *(void *)(v1 + 328);
  *(_OWORD *)(a1 + 96) = v13;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 312);
  *(void *)(a1 + 144) = *(void *)(v1 + 328);
  long long v9 = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 80) = v6;
  long long v10 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(a1 + 16) = v10;
  return sub_35DC8((uint64_t)v12);
}

uint64_t FlowcaseExposureEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 360);
  *(void *)a1 = *(void *)(v1 + 336);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 344);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t FlowcaseExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 368);
  uint64_t v3 = *(void *)(v1 + 376);
  uint64_t v4 = *(void *)(v1 + 384);
  uint64_t v5 = *(void *)(v1 + 392);
  int v6 = *(_DWORD *)(v1 + 400);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = v6;
  return sub_409E0(v2, v3);
}

uint64_t sub_409E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FlowcaseExposureEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 424);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 408);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void FlowcaseExposureEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 432);
}

uint64_t FlowcaseExposureEvent.Model.dealsData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[55];
  uint64_t v3 = v1[56];
  uint64_t v4 = v1[57];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_40A5C(v2, v3, v4);
}

uint64_t sub_40A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FlowcaseExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FlowcaseExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317568);
}

uint64_t FlowcaseExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowcaseExposureEvent.Model(0) + 52);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowcaseExposureEvent.Model.init(sectionData:flowcaseData:linkData:pageData:mediaData:upSellData:suggestionData:dealsData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v12 = *(_DWORD *)(a1 + 4);
  long long v13 = *(_OWORD *)(a1 + 8);
  long long v14 = (_OWORD *)(a9 + 408);
  long long v15 = *(_OWORD *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  int v18 = *(_DWORD *)(a1 + 88);
  char v19 = *(unsigned char *)(a1 + 92);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 104);
  uint64_t v22 = *a2;
  uint64_t v23 = a2[1];
  int v24 = *((_DWORD *)a2 + 4);
  long long v25 = *(_OWORD *)(a2 + 3);
  uint64_t v26 = a2[5];
  char v27 = *((unsigned char *)a2 + 48);
  uint64_t v28 = *(void *)(a4 + 16);
  uint64_t v29 = *(void *)(a4 + 24);
  int v30 = *(_DWORD *)(a5 + 32);
  uint64_t v31 = *(void *)(a6 + 16);
  char v32 = *a7;
  uint64_t v33 = *(void *)(a8 + 16);
  *(unsigned char *)a9 = *(unsigned char *)a1;
  *(_DWORD *)(a9 + 4) = v12;
  *(_OWORD *)(a9 + 8) = v13;
  *(_OWORD *)(a9 + 24) = v15;
  *(void *)(a9 + 40) = v16;
  *(void *)(a9 + 48) = v17;
  *(_OWORD *)(a9 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a9 + 72) = *(_OWORD *)(a1 + 72);
  *(_DWORD *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 92) = v19;
  *(void *)(a9 + 96) = v20;
  *(void *)(a9 + 104) = v21;
  *(void *)(a9 + 112) = v22;
  *(void *)(a9 + 120) = v23;
  *(_DWORD *)(a9 + 128) = v24;
  *(_OWORD *)(a9 + 136) = v25;
  *(void *)(a9 + 152) = v26;
  *(unsigned char *)(a9 + 160) = v27;
  *(_OWORD *)(a9 + 168) = *(_OWORD *)(a2 + 7);
  long long v34 = *(_OWORD *)(a3 + 96);
  long long v35 = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(a9 + 296) = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(a9 + 312) = v35;
  *(void *)(a9 + 328) = *(void *)(a3 + 144);
  long long v36 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a9 + 216) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a9 + 232) = v36;
  long long v37 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a9 + 248) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a9 + 264) = v37;
  *(_OWORD *)(a9 + 280) = v34;
  long long v38 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 184) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 200) = v38;
  *(_OWORD *)(a9 + 336) = *(_OWORD *)a4;
  *(void *)(a9 + 352) = v28;
  *(void *)(a9 + 360) = v29;
  long long v39 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 368) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 384) = v39;
  *(_DWORD *)(a9 + 400) = v30;
  *long long v14 = *(_OWORD *)a6;
  *(void *)(a9 + 424) = v31;
  *(unsigned char *)(a9 + 432) = v32;
  _OWORD v14[2] = *(_OWORD *)a8;
  *(void *)(a9 + 456) = v33;
  uint64_t v40 = type metadata accessor for FlowcaseExposureEvent.Model(0);
  uint64_t v41 = a9 + *(int *)(v40 + 48);
  uint64_t v42 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v41, a10, v42);
  uint64_t v43 = a9 + *(int *)(v40 + 52);
  uint64_t v44 = sub_27D7F0();
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32);

  return v45(v43, a11, v44);
}

uint64_t sub_40D7C(char a1)
{
  uint64_t result = 0x446E6F6974636573;
  switch(a1)
  {
    case 1:
      return 0x65736163776F6C66;
    case 2:
      unsigned int v3 = 1802398060;
      return v3 | 0x6174614400000000;
    case 3:
      unsigned int v3 = 1701273968;
      return v3 | 0x6174614400000000;
    case 4:
      uint64_t v4 = 0x44616964656DLL;
      goto LABEL_12;
    case 5:
      return 0x61446C6C65537075;
    case 6:
      return 0x6974736567677573;
    case 7:
      uint64_t v4 = 0x44736C616564;
      goto LABEL_12;
    case 8:
      uint64_t v4 = 0x44746E657665;
      goto LABEL_12;
    case 9:
      uint64_t v4 = 0x4464656D6974;
LABEL_12:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_40EBC()
{
  return sub_40D7C(*v0);
}

uint64_t sub_40EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_45DC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_40EEC(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_40EF8(uint64_t a1)
{
  unint64_t v2 = sub_414DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_40F34(uint64_t a1)
{
  unint64_t v2 = sub_414DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowcaseExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_317428);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  long long v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_414DC();
  sub_27E440();
  int v9 = *(_DWORD *)(v3 + 4);
  long long v10 = *(_OWORD *)(v3 + 8);
  long long v11 = *(_OWORD *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 40);
  uint64_t v13 = *(void *)(v3 + 48);
  int v14 = *(_DWORD *)(v3 + 88);
  char v15 = *(unsigned char *)(v3 + 92);
  uint64_t v16 = *(void *)(v3 + 96);
  uint64_t v17 = *(void *)(v3 + 104);
  LOBYTE(v37[0]) = *(unsigned char *)v3;
  DWORD1(v37[0]) = v9;
  *(_OWORD *)((char *)v37 + 8) = v10;
  *(_OWORD *)((char *)&v37[1] + 8) = v11;
  *((void *)&v37[2] + 1) = v12;
  *(void *)long long v38 = v13;
  *(_OWORD *)&v38[8] = *(_OWORD *)(v3 + 56);
  *(_OWORD *)&v38[24] = *(_OWORD *)(v3 + 72);
  *(_DWORD *)&v38[40] = v14;
  v38[44] = v15;
  *(void *)&long long v39 = v16;
  *((void *)&v39 + 1) = v17;
  LOBYTE(v44) = 0;
  sub_1FE58();
  sub_27E330();
  if (!v2)
  {
    uint64_t v18 = *(void *)(v3 + 120);
    int v19 = *(_DWORD *)(v3 + 128);
    long long v20 = *(_OWORD *)(v3 + 136);
    uint64_t v21 = *(void *)(v3 + 152);
    char v22 = *(unsigned char *)(v3 + 160);
    uint64_t v44 = *(void *)(v3 + 112);
    uint64_t v45 = v18;
    int v46 = v19;
    long long v47 = v20;
    uint64_t v48 = v21;
    char v49 = v22;
    long long v50 = *(_OWORD *)(v3 + 168);
    char v43 = 1;
    sub_26F98();
    sub_27E330();
    long long v23 = *(_OWORD *)(v3 + 232);
    v37[2] = *(_OWORD *)(v3 + 216);
    *(_OWORD *)long long v38 = v23;
    long long v24 = *(_OWORD *)(v3 + 200);
    v37[0] = *(_OWORD *)(v3 + 184);
    v37[1] = v24;
    long long v25 = *(_OWORD *)(v3 + 296);
    long long v26 = *(_OWORD *)(v3 + 312);
    long long v27 = *(_OWORD *)(v3 + 264);
    long long v39 = *(_OWORD *)(v3 + 280);
    long long v40 = v25;
    uint64_t v42 = *(void *)(v3 + 328);
    long long v41 = v26;
    *(_OWORD *)&v38[16] = *(_OWORD *)(v3 + 248);
    *(_OWORD *)&v38[32] = v27;
    char v36 = 2;
    sub_1FF00();
    sub_27E330();
    uint64_t v28 = *(void *)(v3 + 352);
    uint64_t v29 = *(void *)(v3 + 360);
    v37[0] = *(_OWORD *)(v3 + 336);
    *(void *)&v37[1] = v28;
    *((void *)&v37[1] + 1) = v29;
    char v36 = 3;
    sub_1FEAC();
    sub_27E330();
    int v30 = *(_DWORD *)(v3 + 400);
    long long v31 = *(_OWORD *)(v3 + 384);
    v37[0] = *(_OWORD *)(v3 + 368);
    v37[1] = v31;
    LODWORD(v37[2]) = v30;
    char v36 = 4;
    sub_1DF40();
    sub_27E2C0();
    uint64_t v32 = *(void *)(v3 + 424);
    v37[0] = *(_OWORD *)(v3 + 408);
    *(void *)&v37[1] = v32;
    char v36 = 5;
    sub_36A74();
    sub_27E2C0();
    LOBYTE(v37[0]) = *(unsigned char *)(v3 + 432);
    char v36 = 6;
    sub_36B1C();
    sub_27E2C0();
    uint64_t v33 = *(void *)(v3 + 456);
    v37[0] = *(_OWORD *)(v3 + 440);
    *(void *)&v37[1] = v33;
    char v36 = 7;
    sub_41530();
    sub_27E2C0();
    type metadata accessor for FlowcaseExposureEvent.Model(0);
    LOBYTE(v37[0]) = 8;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v37[0]) = 9;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_414DC()
{
  unint64_t result = qword_317430;
  if (!qword_317430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317430);
  }
  return result;
}

unint64_t sub_41530()
{
  unint64_t result = qword_317438;
  if (!qword_317438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317438);
  }
  return result;
}

uint64_t FlowcaseExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_27D7C0();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_4E04(&qword_317440);
  uint64_t v8 = *(void *)(v45 - 8);
  __chkstk_darwin();
  long long v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for FlowcaseExposureEvent.Model(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v49 = a1;
  sub_5900(a1, v13);
  sub_414DC();
  uint64_t v44 = v10;
  uint64_t v14 = v50;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v49);
  }
  long long v40 = v5;
  uint64_t v41 = v3;
  LOBYTE(v51) = 0;
  sub_20898();
  sub_27E260();
  int v15 = *(_DWORD *)&v54[4];
  long long v16 = *(_OWORD *)&v54[8];
  long long v17 = *(_OWORD *)&v54[24];
  uint64_t v18 = *(void *)&v54[40];
  uint64_t v19 = *(void *)v55;
  int v20 = *(_DWORD *)&v55[40];
  char v21 = v55[44];
  long long v22 = v56;
  char *v12 = v54[0];
  *((_DWORD *)v12 + 1) = v15;
  *(_OWORD *)(v12 + 8) = v16;
  *(_OWORD *)(v12 + 24) = v17;
  *((void *)v12 + 5) = v18;
  *((void *)v12 + 6) = v19;
  *(_OWORD *)(v12 + 56) = *(_OWORD *)&v55[8];
  *(_OWORD *)(v12 + 72) = *(_OWORD *)&v55[24];
  *((_DWORD *)v12 + 22) = v20;
  v12[92] = v21;
  *((_OWORD *)v12 + 6) = v22;
  LOBYTE(v51) = 1;
  sub_26F40();
  sub_27E260();
  uint64_t v23 = *(void *)&v54[8];
  int v24 = *(_DWORD *)&v54[16];
  long long v25 = *(_OWORD *)&v54[24];
  uint64_t v26 = *(void *)&v54[40];
  char v27 = v55[0];
  *((void *)v12 + 14) = *(void *)v54;
  *((void *)v12 + 15) = v23;
  *((_DWORD *)v12 + 32) = v24;
  *(_OWORD *)(v12 + 136) = v25;
  *((void *)v12 + 19) = v26;
  v12[160] = v27;
  *(_OWORD *)(v12 + 168) = *(_OWORD *)&v55[8];
  char v61 = 2;
  sub_20940();
  sub_27E260();
  long long v28 = *(_OWORD *)v55;
  *(_OWORD *)(v12 + 216) = *(_OWORD *)&v54[32];
  *(_OWORD *)(v12 + 232) = v28;
  long long v29 = *(_OWORD *)&v55[32];
  *(_OWORD *)(v12 + 248) = *(_OWORD *)&v55[16];
  long long v30 = *(_OWORD *)&v54[16];
  *(_OWORD *)(v12 + 184) = *(_OWORD *)v54;
  *(_OWORD *)(v12 + 200) = v30;
  long long v31 = v56;
  long long v32 = v58;
  *(_OWORD *)(v12 + 296) = v57;
  *(_OWORD *)(v12 + 312) = v32;
  *((void *)v12 + 41) = v59;
  *(_OWORD *)(v12 + 264) = v29;
  *(_OWORD *)(v12 + 280) = v31;
  char v60 = 3;
  sub_208EC();
  sub_27E260();
  long long v33 = v52;
  *((_OWORD *)v12 + 21) = v51;
  *((_OWORD *)v12 + 22) = v33;
  char v60 = 4;
  sub_1DEE8();
  sub_27E1F0();
  int v34 = v53;
  long long v35 = v52;
  *((_OWORD *)v12 + 23) = v51;
  *((_OWORD *)v12 + 24) = v35;
  *((_DWORD *)v12 + 100) = v34;
  char v60 = 5;
  sub_37744();
  sub_27E1F0();
  uint64_t v36 = v52;
  *(_OWORD *)(v12 + 408) = v51;
  *((void *)v12 + 53) = v36;
  char v60 = 6;
  sub_377EC();
  sub_27E1F0();
  v12[432] = v51;
  char v60 = 7;
  sub_420DC();
  sub_27E1F0();
  uint64_t v37 = v52;
  *(_OWORD *)(v12 + 440) = v51;
  *((void *)v12 + 57) = v37;
  LOBYTE(v51) = 8;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v12[*(int *)(v47 + 48)], v7, v48);
  LOBYTE(v51) = 9;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  uint64_t v50 = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v44, v45);
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v12[*(int *)(v47 + 52)], v40, v41);
  sub_42130((uint64_t)v12, v43);
  sub_5E94((uint64_t)v49);
  return sub_42194((uint64_t)v12);
}

uint64_t sub_42084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_42098(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_420DC()
{
  unint64_t result = qword_317448;
  if (!qword_317448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317448);
  }
  return result;
}

uint64_t sub_42130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowcaseExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_42194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowcaseExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_421F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FlowcaseExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_42208(void *a1)
{
  return FlowcaseExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_42220@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3173E8, a1);
}

uint64_t sub_42258@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317400, a1);
}

uint64_t sub_42290@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = enum case for EventProperty.optional<A>(_:);
  uint64_t v14 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v13, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v13, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_315DE8);
  long long v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for FlowcaseExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A10);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317418);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316A00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    int v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_317420);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for FlowcaseExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_315DE8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_438B4);
}

uint64_t sub_438B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  uint64_t v14 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  uint64_t v15 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  uint64_t v16 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_315DE8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for FlowcaseExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_43C50);
}

uint64_t sub_43C50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A10);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  uint64_t v21 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  uint64_t v24 = sub_4E04(&qword_315DE8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_43FE4()
{
  sub_4444C(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
  if (v0 <= 0x3F)
  {
    sub_4444C(319, &qword_3174B8, (void (*)(void))sub_26F40, (void (*)(void))sub_26F98);
    if (v1 <= 0x3F)
    {
      sub_4444C(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
      if (v2 <= 0x3F)
      {
        sub_4444C(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
        if (v3 <= 0x3F)
        {
          sub_4444C(319, &qword_316AF8, (void (*)(void))sub_1DEE8, (void (*)(void))sub_1DF40);
          if (v4 <= 0x3F)
          {
            sub_4444C(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
            if (v5 <= 0x3F)
            {
              sub_4444C(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
              if (v6 <= 0x3F)
              {
                sub_4444C(319, (unint64_t *)&unk_3174C0, (void (*)(void))sub_420DC, (void (*)(void))sub_41530);
                if (v7 <= 0x3F)
                {
                  sub_6DA0();
                  if (v8 <= 0x3F)
                  {
                    sub_6E6C();
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_4444C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v6 = a2[2];
    *(void *)(v4 + 8) = a2[1];
    *(void *)(v4 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(v4 + 24) = a2[3];
    *(void *)(v4 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(v4 + 72) = a2[9];
    *(void *)(v4 + 80) = v10;
    *(_DWORD *)(v4 + 88) = *((_DWORD *)a2 + 22);
    *(unsigned char *)(v4 + 92) = *((unsigned char *)a2 + 92);
    uint64_t v11 = a2[13];
    *(void *)(v4 + 96) = a2[12];
    *(void *)(v4 + 104) = v11;
    uint64_t v12 = a2[15];
    *(void *)(v4 + 112) = a2[14];
    *(void *)(v4 + 120) = v12;
    *(_DWORD *)(v4 + 128) = *((_DWORD *)a2 + 32);
    uint64_t v13 = a2[18];
    *(void *)(v4 + 136) = a2[17];
    *(void *)(v4 + 144) = v13;
    *(unsigned char *)(v4 + 160) = *((unsigned char *)a2 + 160);
    *(void *)(v4 + 152) = a2[19];
    uint64_t v14 = a2[22];
    *(void *)(v4 + 168) = a2[21];
    *(void *)(v4 + 176) = v14;
    uint64_t v15 = a2[24];
    *(void *)(v4 + 184) = a2[23];
    *(void *)(v4 + 192) = v15;
    uint64_t v16 = a2[26];
    *(void *)(v4 + 200) = a2[25];
    *(void *)(v4 + 208) = v16;
    uint64_t v17 = a2[28];
    *(void *)(v4 + 216) = a2[27];
    *(void *)(v4 + 224) = v17;
    *(unsigned char *)(v4 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v18 = a2[31];
    *(void *)(v4 + 240) = a2[30];
    *(void *)(v4 + 248) = v18;
    uint64_t v19 = a2[33];
    *(void *)(v4 + 256) = a2[32];
    *(void *)(v4 + 264) = v19;
    uint64_t v20 = a2[35];
    *(void *)(v4 + 272) = a2[34];
    *(void *)(v4 + 280) = v20;
    uint64_t v21 = a2[37];
    *(void *)(v4 + 288) = a2[36];
    *(void *)(v4 + 296) = v21;
    uint64_t v22 = a2[39];
    *(void *)(v4 + 304) = a2[38];
    *(void *)(v4 + 312) = v22;
    uint64_t v23 = a2[41];
    *(void *)(v4 + 320) = a2[40];
    *(void *)(v4 + 328) = v23;
    uint64_t v24 = a2[43];
    *(void *)(v4 + 336) = a2[42];
    *(void *)(v4 + 344) = v24;
    uint64_t v25 = a2[45];
    *(void *)(v4 + 352) = a2[44];
    *(void *)(v4 + 360) = v25;
    uint64_t v40 = a2[47];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40)
    {
      *(void *)(v4 + 368) = a2[46];
      *(void *)(v4 + 376) = v40;
      uint64_t v26 = a2[49];
      *(void *)(v4 + 384) = a2[48];
      *(void *)(v4 + 392) = v26;
      *(_DWORD *)(v4 + 400) = *((_DWORD *)a2 + 100);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)a2 + 24);
      *(_OWORD *)(v4 + 368) = *((_OWORD *)a2 + 23);
      *(_OWORD *)(v4 + 384) = v28;
      *(_DWORD *)(v4 + 400) = *((_DWORD *)a2 + 100);
    }
    *(_WORD *)(v4 + 408) = *((_WORD *)a2 + 204);
    uint64_t v29 = a2[53];
    *(void *)(v4 + 416) = a2[52];
    *(void *)(v4 + 424) = v29;
    *(unsigned char *)(v4 + 432) = *((unsigned char *)a2 + 432);
    uint64_t v30 = a2[57];
    swift_bridgeObjectRetain();
    if (v30 == 1)
    {
      *(_OWORD *)(v4 + 440) = *(_OWORD *)(a2 + 55);
      *(void *)(v4 + 456) = a2[57];
    }
    else
    {
      *(unsigned char *)(v4 + 440) = *((unsigned char *)a2 + 440);
      *(void *)(v4 + 448) = a2[56];
      *(void *)(v4 + 456) = v30;
      swift_bridgeObjectRetain();
    }
    uint64_t v31 = *(int *)(a3 + 48);
    uint64_t v32 = v4 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    uint64_t v34 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = *(int *)(a3 + 52);
    uint64_t v36 = v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  }
  return v4;
}

uint64_t destroy for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 376))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 456) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  uint64_t v19 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v19;
  uint64_t v20 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v20;
  uint64_t v21 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v21;
  uint64_t v22 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v22;
  uint64_t v23 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v23;
  uint64_t v24 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v24;
  uint64_t v38 = *(void *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38)
  {
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v38;
    uint64_t v25 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v25;
    *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v26;
    *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
  }
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  uint64_t v27 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v27;
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  uint64_t v28 = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
  }
  else
  {
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = v28;
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = *(int *)(a3 + 48);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  uint64_t v33 = *(int *)(a3 + 52);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  return a1;
}

uint64_t assignWithCopy for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 368);
  uint64_t v9 = (_OWORD *)(a2 + 368);
  uint64_t v10 = *(void *)(a2 + 376);
  if (*(void *)(a1 + 376))
  {
    if (v10)
    {
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
    }
    else
    {
      sub_4523C(a1 + 368);
      int v11 = *(_DWORD *)(a2 + 400);
      long long v12 = *(_OWORD *)(a2 + 384);
      _OWORD *v8 = *v9;
      *(_OWORD *)(a1 + 384) = v12;
      *(_DWORD *)(a1 + 400) = v11;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *v9;
    long long v14 = *(_OWORD *)(a2 + 384);
    *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
    _OWORD *v8 = v13;
    *(_OWORD *)(a1 + 384) = v14;
  }
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  *(unsigned char *)(a1 + 409) = *(unsigned char *)(a2 + 409);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  uint64_t v15 = (long long *)(a1 + 440);
  uint64_t v16 = (long long *)(a2 + 440);
  uint64_t v17 = *(void *)(a2 + 456);
  if (*(void *)(a1 + 456) == 1)
  {
    if (v17 == 1)
    {
      long long v18 = *v16;
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      long long *v15 = v18;
    }
    else
    {
      *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRetain();
    }
  }
  else if (v17 == 1)
  {
    sub_45290(a1 + 440);
    uint64_t v19 = *(void *)(a2 + 456);
    long long *v15 = *v16;
    *(void *)(a1 + 456) = v19;
  }
  else
  {
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(int *)(a3 + 48);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = *(int *)(a3 + 52);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t sub_4523C(uint64_t a1)
{
  return a1;
}

uint64_t sub_45290(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 144) = v11;
  *(_OWORD *)(a1 + 160) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  long long v13 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v13;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v14 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v14;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  long long v15 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v15;
  long long v16 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v16;
  *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  long long v17 = *(_OWORD *)(a2 + 440);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  uint64_t v18 = *(int *)(a3 + 48);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)(a1 + 440) = v17;
  uint64_t v21 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = *(int *)(a3 + 52);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

uint64_t assignWithTake for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v25;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 376))
  {
    uint64_t v26 = *(void *)(a2 + 376);
    if (v26)
    {
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v27;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
      goto LABEL_6;
    }
    sub_4523C(a1 + 368);
  }
  long long v28 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v28;
  *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
LABEL_6:
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  uint64_t v29 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  if (*(void *)(a1 + 456) != 1)
  {
    uint64_t v30 = *(void *)(a2 + 456);
    if (v30 != 1)
    {
      *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = v30;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_45290(a1 + 440);
  }
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
LABEL_11:
  uint64_t v31 = *(int *)(a3 + 48);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 52);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_457A8);
}

uint64_t sub_457A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FlowcaseExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_458E8);
}

uint64_t sub_458E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 52);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_45A14()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FlowcaseExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlowcaseExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x45C88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowcaseExposureEvent.Model.CodingKeys()
{
  return &type metadata for FlowcaseExposureEvent.Model.CodingKeys;
}

unint64_t sub_45CC4()
{
  unint64_t result = qword_3175C0;
  if (!qword_3175C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3175C0);
  }
  return result;
}

unint64_t sub_45D1C()
{
  unint64_t result = qword_3175C8;
  if (!qword_3175C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3175C8);
  }
  return result;
}

unint64_t sub_45D74()
{
  unint64_t result = qword_3175D0;
  if (!qword_3175D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3175D0);
  }
  return result;
}

uint64_t sub_45DC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144736C616564 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t AppAnalyticsAdditionalData.supportsUnifiedProductPage.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BAAppAnalyticsAdditionalData_supportsUnifiedProductPage);
}

uint64_t AppAnalyticsAdditionalData.editionKind.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t static AppAnalyticsAdditionalData.supportsUnifiedProductPageKey.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t static AppAnalyticsAdditionalData.editionKindKey.getter()
{
  return 0x4B6E6F6974696465;
}

id AppAnalyticsAdditionalData.__allocating_init(supportsUnifiedProductPage:editionKind:)(char a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___BAAppAnalyticsAdditionalData_supportsUnifiedProductPage] = a1;
  int v8 = &v7[OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind];
  void *v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return [super init];
}

id AppAnalyticsAdditionalData.init(supportsUnifiedProductPage:editionKind:)(char a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR___BAAppAnalyticsAdditionalData_supportsUnifiedProductPage] = a1;
  unsigned int v4 = &v3[OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind];
  void *v4 = a2;
  v4[1] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AppAnalyticsAdditionalData();
  return [super init];
}

uint64_t type metadata accessor for AppAnalyticsAdditionalData()
{
  return self;
}

unint64_t sub_465B0()
{
  sub_4E04(&qword_3175E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_283E30;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x80000000002AE180;
  *(unsigned char *)(inited + 48) = *(unsigned char *)(v0 + OBJC_IVAR___BAAppAnalyticsAdditionalData_supportsUnifiedProductPage);
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0x4B6E6F6974696465;
  *(void *)(inited + 88) = 0xEB00000000646E69;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind + 8);
  *(void *)(inited + 120) = sub_4E04(&qword_3175F0);
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 104) = v2;
  swift_bridgeObjectRetain();
  return sub_4668C(inited);
}

unint64_t sub_4668C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4E04(&qword_317638);
  uint64_t v2 = sub_27E180();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46D1C(v6, (uint64_t)&v15, &qword_317640);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_E12C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_46D0C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_467C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4E04(&qword_317628);
  uint64_t v2 = sub_27E180();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_46D1C(v6, (uint64_t)v15, &qword_317630);
    unint64_t result = sub_E1A4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_46D0C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_46908(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4E04(&qword_317620);
  uint64_t v2 = (void *)sub_27E180();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_DB90(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id Utilities.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void AppAnalyticsAdditionalData.init()()
{
}

id AppAnalyticsAdditionalData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppAnalyticsAdditionalData();
  return [super dealloc];
}

id _s13BookAnalytics03AppB14AdditionalDataC4data10dictionaryACSgSDySSypG_tFZ_0(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_E12C(0xD00000000000001ALL, 0x80000000002AE180);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_46D80(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v15);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_E12C(0x4B6E6F6974696465, 0xEB00000000646E69);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_46D80(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v15);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  char v8 = (objc_class *)type metadata accessor for AppAnalyticsAdditionalData();
  char v9 = objc_allocWithZone(v8);
  v9[OBJC_IVAR___BAAppAnalyticsAdditionalData_supportsUnifiedProductPage] = v13;
  long long v10 = &v9[OBJC_IVAR___BAAppAnalyticsAdditionalData_editionKind];
  *long long v10 = v6;
  v10[1] = v7;
  v12.receiver = v9;
  v12.super_class = v8;
  return [super init];
}

uint64_t method lookup function for AppAnalyticsAdditionalData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AppAnalyticsAdditionalData);
}

uint64_t dispatch thunk of AppAnalyticsAdditionalData.__allocating_init(supportsUnifiedProductPage:editionKind:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AppAnalyticsAdditionalData.dictionary()()
{
  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

_OWORD *sub_46D0C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_46D1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_4E04(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_46D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

BookAnalytics::LocationType_optional __swiftcall LocationType.init(rawValue:)(Swift::String rawValue)
{
  long long v2 = v1;
  uint64_t v3 = sub_27E380();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 14;
  switch(v3)
  {
    case 0:
      goto LABEL_16;
    case 1:
      char v5 = 1;
      goto LABEL_16;
    case 2:
      char v5 = 2;
      goto LABEL_16;
    case 3:
      char v5 = 3;
      goto LABEL_16;
    case 4:
      char v5 = 4;
      goto LABEL_16;
    case 5:
      char v5 = 5;
      goto LABEL_16;
    case 6:
      char v5 = 6;
      goto LABEL_16;
    case 7:
      char v5 = 7;
      goto LABEL_16;
    case 8:
      char v5 = 8;
      goto LABEL_16;
    case 9:
      char v5 = 9;
      goto LABEL_16;
    case 10:
      char v5 = 10;
      goto LABEL_16;
    case 11:
      char v5 = 11;
      goto LABEL_16;
    case 12:
      char v5 = 12;
      goto LABEL_16;
    case 13:
      char v5 = 13;
LABEL_16:
      char v6 = v5;
      break;
    case 14:
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    default:
      char v6 = 32;
      break;
  }
  char *v2 = v6;
  return result;
}

unint64_t LocationType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6461655274736F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
    case 0x10:
    case 0x1A:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6372755074736F70;
      break;
    case 7:
      unint64_t result = 0x52545774736F70;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0x50746375646F7270;
      break;
    case 0xB:
      unint64_t result = 0x54676E6964616572;
      break;
    case 0xC:
      unint64_t result = 0x45676E6964616572;
      break;
    case 0xD:
      unint64_t result = 0x79616C50696E696DLL;
      break;
    case 0xE:
      unint64_t result = 0x676150726564726FLL;
      break;
    case 0xF:
      unint64_t result = 0x6150726F68747561;
      break;
    case 0x11:
      unint64_t result = 0x4241736569726573;
      break;
    case 0x12:
      unint64_t result = 0x6F42736569726573;
      break;
    case 0x13:
      unint64_t result = 0x65676150707075;
      break;
    case 0x14:
      unint64_t result = 0x69746964456C6C61;
      break;
    case 0x15:
      unint64_t result = 0x726568746FLL;
      break;
    case 0x16:
      unint64_t result = 0x7265766F63736964;
      break;
    case 0x17:
      unint64_t result = 0x796C746E65636572;
      break;
    case 0x18:
      unint64_t result = 0x6C75736552706F74;
      break;
    case 0x19:
      unint64_t result = 0x6552686372616573;
      break;
    case 0x1B:
      unint64_t result = 0x70756B636F6CLL;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x1D:
      unint64_t result = 0x6465727574616566;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x1F:
      unint64_t result = 0x6E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_473E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_32104(*a1, *a2);
}

unint64_t sub_473F0()
{
  unint64_t result = qword_317648;
  if (!qword_317648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317648);
  }
  return result;
}

Swift::Int sub_47444()
{
  return sub_27E420();
}

uint64_t sub_474AC()
{
  LocationType.rawValue.getter();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_47510()
{
  return sub_27E420();
}

BookAnalytics::LocationType_optional sub_47574(Swift::String *a1)
{
  return LocationType.init(rawValue:)(*a1);
}

unint64_t sub_47580@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LocationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_475A8()
{
  return sub_27DED0();
}

uint64_t sub_47608()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for LocationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE1) {
    goto LABEL_17;
  }
  if (a2 + 31 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 31) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 31;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x20;
  int v8 = v6 - 32;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *unint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x477B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationType()
{
  return &type metadata for LocationType;
}

unint64_t sub_477EC()
{
  unint64_t result = qword_317650;
  if (!qword_317650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317650);
  }
  return result;
}

uint64_t sub_47840(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317658, &enum case for SessionGroup.default(_:));
}

uint64_t static RatingEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317658, a1);
}

uint64_t sub_478A0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317670, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RatingEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317670, a1);
}

uint64_t RatingEvent.ratingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317688);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RatingEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317710);
}

uint64_t RatingEvent.ratingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317688);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RatingEvent.ratingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RatingEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RatingEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RatingEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RatingEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RatingEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RatingEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RatingEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RatingEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RatingEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RatingEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RatingEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

void LoveEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 96);
}

uint64_t RemoveReviewAndRatingEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AddToCollectionEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[16];
  uint64_t v3 = v1[17];
  uint64_t v4 = v1[18];
  uint64_t v5 = v1[19];
  uint64_t v6 = v1[20];
  uint64_t v7 = v1[21];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t RatingEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RatingEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RatingEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3177B8);
}

uint64_t RatingEvent.Model.init(contentData:ratingData:upSellData:seriesData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 77);
  char v18 = *a2;
  uint64_t v19 = *(void *)(a3 + 16);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v7;
  *(unsigned char *)(a6 + 16) = v8;
  *(_OWORD *)(a6 + 24) = v9;
  *(void *)(a6 + 40) = v10;
  *(void *)(a6 + 48) = v11;
  *(_WORD *)(a6 + 56) = v12;
  *(_DWORD *)(a6 + 60) = v13;
  *(unsigned char *)(a6 + 64) = v14;
  *(_DWORD *)(a6 + 68) = v15;
  *(unsigned char *)(a6 + 72) = v16;
  *(_DWORD *)(a6 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a6 + 77) = v17;
  *(_OWORD *)(a6 + 80) = *(_OWORD *)(a1 + 80);
  *(unsigned char *)(a6 + 96) = v18;
  *(_OWORD *)(a6 + 104) = *(_OWORD *)a3;
  *(void *)(a6 + 120) = v19;
  long long v20 = a4[1];
  *(_OWORD *)(a6 + 128) = *a4;
  *(_OWORD *)(a6 + 144) = v20;
  *(_OWORD *)(a6 + 160) = a4[2];
  uint64_t v21 = a6 + *(int *)(type metadata accessor for RatingEvent.Model(0) + 32);
  uint64_t v22 = sub_27D7C0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);

  return v23(v21, a5, v22);
}

uint64_t sub_481B8()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x676E69746172;
      goto LABEL_5;
    case 2:
      uint64_t v2 = 0x6C6C65537075;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x736569726573;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 4:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_48264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_4AD34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_4828C(uint64_t a1)
{
  unint64_t v2 = sub_485E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_482C8(uint64_t a1)
{
  unint64_t v2 = sub_485E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RatingEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_317690);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  long long v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_485E8();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v26 = *(void *)v4;
  *((void *)&v26 + 1) = v10;
  v27[0] = v11;
  *(_OWORD *)&unsigned char v27[8] = v12;
  *(void *)&v27[24] = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)(v4 + 73);
  char v35 = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v25 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    LOBYTE(v26) = *(unsigned char *)(v4 + 96);
    char v25 = 1;
    sub_4863C();
    sub_27E330();
    uint64_t v21 = *(void *)(v4 + 120);
    long long v26 = *(_OWORD *)(v4 + 104);
    *(void *)uint64_t v27 = v21;
    char v25 = 2;
    sub_36A74();
    sub_27E2C0();
    long long v22 = *(_OWORD *)(v4 + 144);
    long long v26 = *(_OWORD *)(v4 + 128);
    *(_OWORD *)uint64_t v27 = v22;
    *(_OWORD *)&v27[16] = *(_OWORD *)(v4 + 160);
    char v25 = 3;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for RatingEvent.Model(0);
    LOBYTE(v26) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_485E8()
{
  unint64_t result = qword_317698;
  if (!qword_317698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317698);
  }
  return result;
}

unint64_t sub_4863C()
{
  unint64_t result = qword_3176A0;
  if (!qword_3176A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3176A0);
  }
  return result;
}

uint64_t RatingEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_3176A8);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RatingEvent.Model(0);
  __chkstk_darwin();
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v34 = a1;
  sub_5900(a1, v12);
  sub_485E8();
  uint64_t v13 = v35;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = (uint64_t)v11;
  uint64_t v15 = v32;
  char v47 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v16 = *((void *)&v36 + 1);
  char v17 = v37[0];
  long long v18 = *(_OWORD *)&v37[8];
  uint64_t v19 = *(void *)&v37[24];
  uint64_t v20 = v38;
  __int16 v21 = v39;
  int v22 = v40;
  char v23 = v41;
  int v24 = v42;
  char v25 = v43;
  char v26 = v45;
  *(void *)uint64_t v14 = v36;
  *(void *)(v14 + 8) = v16;
  *(unsigned char *)(v14 + 16) = v17;
  *(_OWORD *)(v14 + 24) = v18;
  *(void *)(v14 + 40) = v19;
  *(void *)(v14 + 48) = v20;
  *(_WORD *)(v14 + 56) = v21;
  *(_DWORD *)(v14 + 60) = v22;
  *(unsigned char *)(v14 + 64) = v23;
  *(_DWORD *)(v14 + 68) = v24;
  *(unsigned char *)(v14 + 72) = v25;
  *(_DWORD *)(v14 + 73) = v44;
  *(unsigned char *)(v14 + 77) = v26;
  *(_OWORD *)(v14 + 80) = v46;
  char v47 = 1;
  sub_48B74();
  sub_27E260();
  *(unsigned char *)(v14 + 96) = v36;
  char v47 = 2;
  sub_37744();
  sub_27E1F0();
  uint64_t v27 = *(void *)v37;
  *(_OWORD *)(v14 + 104) = v36;
  *(void *)(v14 + 120) = v27;
  char v47 = 3;
  sub_11A3C();
  sub_27E1F0();
  long long v28 = *(_OWORD *)v37;
  *(_OWORD *)(v14 + 128) = v36;
  *(_OWORD *)(v14 + 144) = v28;
  *(_OWORD *)(v14 + 160) = *(_OWORD *)&v37[16];
  LOBYTE(v36) = 4;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v14 + *(int *)(v9 + 32), v5, v3);
  sub_48BC8(v14, v30);
  sub_5E94((uint64_t)v34);
  return sub_48C2C(v14);
}

unint64_t sub_48B74()
{
  unint64_t result = qword_3176B0;
  if (!qword_3176B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3176B0);
  }
  return result;
}

uint64_t sub_48BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RatingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_48C2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RatingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_48C88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RatingEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_48CA0(void *a1)
{
  return RatingEvent.Model.encode(to:)(a1);
}

uint64_t sub_48CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317658, a1);
}

uint64_t sub_48CF0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317670, a1);
}

uint64_t sub_48D28@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for RatingEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317688);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for RatingEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for RatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for RatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for RatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for RatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for RatingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_49924);
}

uint64_t sub_49924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317688);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for RatingEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_49B30);
}

uint64_t sub_49B30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317688);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_49D34()
{
  sub_49F90(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_49F90(319, (unint64_t *)&unk_317720, (void (*)(void))sub_48B74, (void (*)(void))sub_4863C);
    if (v1 <= 0x3F)
    {
      sub_49F90(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
      if (v2 <= 0x3F)
      {
        sub_49F90(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_49F90(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RatingEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(unsigned char *)(a1 + 105) = *((unsigned char *)a2 + 105);
    uint64_t v12 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v12;
    uint64_t v13 = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      long long v14 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    }
    else
    {
      *(void *)(a1 + 128) = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 144) = a2[18];
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRetain();
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for RatingEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 168) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    long long v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v12;
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (long long *)(a1 + 128);
  int v9 = (long long *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v12;
      long long *v8 = v11;
    }
    else
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
      *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1CDD8(a1 + 128);
    long long v14 = *(_OWORD *)(a2 + 144);
    long long v13 = *(_OWORD *)(a2 + 160);
    long long *v8 = *v9;
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = v13;
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
    *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 168) != 1)
  {
    uint64_t v11 = *(void *)(a2 + 168);
    if (v11 != 1)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 128);
  }
  long long v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_6:
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4A908);
}

uint64_t sub_4A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4A9CC);
}

uint64_t sub_4A9CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_4AA74()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RatingEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4ABF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RatingEvent.Model.CodingKeys()
{
  return &type metadata for RatingEvent.Model.CodingKeys;
}

unint64_t sub_4AC30()
{
  unint64_t result = qword_317800;
  if (!qword_317800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317800);
  }
  return result;
}

unint64_t sub_4AC88()
{
  unint64_t result = qword_317808;
  if (!qword_317808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317808);
  }
  return result;
}

unint64_t sub_4ACE0()
{
  unint64_t result = qword_317810;
  if (!qword_317810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317810);
  }
  return result;
}

uint64_t sub_4AD34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144676E69746172 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::ExposureTypeView_optional __swiftcall ExposureTypeView.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F76D0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ExposureTypeView.rawValue.getter()
{
  uint64_t v1 = 0x656C676E6973;
  if (*v0 != 1) {
    uint64_t v1 = 2037277037;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_4B040(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2E424(*a1, *a2);
}

unint64_t sub_4B050()
{
  unint64_t result = qword_317818;
  if (!qword_317818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317818);
  }
  return result;
}

Swift::Int sub_4B0A4()
{
  return sub_27E420();
}

uint64_t sub_4B13C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_4B1C0()
{
  return sub_27E420();
}

BookAnalytics::ExposureTypeView_optional sub_4B254(Swift::String *a1)
{
  return ExposureTypeView.init(rawValue:)(*a1);
}

void sub_4B260(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x656C676E6973;
  if (v2 != 1)
  {
    uint64_t v5 = 2037277037;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_4B2B4()
{
  return sub_27DED0();
}

uint64_t sub_4B314()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ExposureTypeView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4B430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExposureTypeView()
{
  return &type metadata for ExposureTypeView;
}

unint64_t sub_4B468()
{
  unint64_t result = qword_317820;
  if (!qword_317820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317820);
  }
  return result;
}

uint64_t sub_4B4BC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317828, &enum case for SessionGroup.default(_:));
}

uint64_t static AnnotationViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317828, a1);
}

uint64_t sub_4B51C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317840, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AnnotationViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317840, a1);
}

uint64_t AnnotationViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AnnotationViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3178D0);
}

uint64_t AnnotationViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AnnotationViewEvent.viewData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AnnotationViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AnnotationViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AnnotationViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AnnotationViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for AnnotationViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

void AnnotationActionEvent.Model.viewData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 98);
  *(_WORD *)a1 = *(_WORD *)(v1 + 96);
  *(unsigned char *)(a1 + 2) = v2;
}

uint64_t AnnotationViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AnnotationViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317970);
}

uint64_t AnnotationViewEvent.Model.init(contentData:viewData:eventData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  __int16 v16 = *a2;
  char v17 = *((unsigned char *)a2 + 2);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(_WORD *)(a4 + 96) = v16;
  *(unsigned char *)(a4 + 98) = v17;
  uint64_t v18 = a4 + *(int *)(type metadata accessor for AnnotationViewEvent.Model(0) + 24);
  uint64_t v19 = sub_27D7C0();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);

  return v20(v18, a3, v19);
}

uint64_t sub_4BAD0()
{
  uint64_t v1 = 0x6174614477656976;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_4BB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_4DAD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_4BB60(uint64_t a1)
{
  unint64_t v2 = sub_4BE34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_4BB9C(uint64_t a1)
{
  unint64_t v2 = sub_4BE34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AnnotationViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_317860);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_4BE34();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v25 = *v4;
  uint64_t v26 = v10;
  char v27 = v11;
  long long v28 = v12;
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  __int16 v31 = v15;
  int v32 = v16;
  char v33 = v17;
  int v34 = v18;
  char v35 = v19;
  int v36 = *(_DWORD *)((char *)v4 + 73);
  char v37 = v20;
  long long v38 = *((_OWORD *)v4 + 5);
  char v24 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *((unsigned char *)v4 + 98);
    LOWORD(v25) = *((_WORD *)v4 + 48);
    BYTE2(v25) = v21;
    char v24 = 1;
    sub_F3B0();
    sub_27E330();
    type metadata accessor for AnnotationViewEvent.Model(0);
    LOBYTE(v25) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_4BE34()
{
  unint64_t result = qword_317868;
  if (!qword_317868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317868);
  }
  return result;
}

uint64_t AnnotationViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_317870);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AnnotationViewEvent.Model(0);
  __chkstk_darwin();
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v35 = a1;
  sub_5900(a1, v13);
  sub_4BE34();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v14 = v33;
  __int16 v15 = v6;
  char v50 = 0;
  sub_1A98C();
  uint64_t v16 = v34;
  sub_27E260();
  uint64_t v17 = v37;
  char v18 = v38;
  long long v19 = v39;
  uint64_t v20 = v40;
  uint64_t v21 = v41;
  __int16 v22 = v42;
  int v23 = v43;
  char v24 = v44;
  int v25 = v45;
  char v26 = v46;
  char v27 = v48;
  *(void *)long long v12 = v36;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v47;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v49;
  char v50 = 1;
  sub_F358();
  sub_27E260();
  char v28 = BYTE2(v36);
  *((_WORD *)v12 + 48) = v36;
  v12[98] = v28;
  LOBYTE(v36) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_4C274((uint64_t)v12, v32);
  sub_5E94((uint64_t)v35);
  return sub_4C2D8((uint64_t)v12);
}

uint64_t sub_4C274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4C2D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnnotationViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4C334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnnotationViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_4C34C(void *a1)
{
  return AnnotationViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_4C364@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317828, a1);
}

uint64_t sub_4C39C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317840, a1);
}

uint64_t sub_4C3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for AnnotationViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317858);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AnnotationViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4CBAC);
}

uint64_t sub_4CBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317858);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AnnotationViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4CD18);
}

uint64_t sub_4CD18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317858);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_4CE7C()
{
  sub_4CFF0(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_4CFF0(319, (unint64_t *)&unk_3178E0, (void (*)(void))sub_F358, (void (*)(void))sub_F3B0);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_4CFF0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AnnotationViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 98) = *((unsigned char *)a2 + 98);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = a1 + v10;
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4D6BC);
}

uint64_t sub_4D6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnnotationViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4D780);
}

uint64_t sub_4D780(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_4D828()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnnotationViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4D994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationViewEvent.Model.CodingKeys()
{
  return &type metadata for AnnotationViewEvent.Model.CodingKeys;
}

unint64_t sub_4D9D0()
{
  unint64_t result = qword_3179B0;
  if (!qword_3179B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179B0);
  }
  return result;
}

unint64_t sub_4DA28()
{
  unint64_t result = qword_3179B8;
  if (!qword_3179B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179B8);
  }
  return result;
}

unint64_t sub_4DA80()
{
  unint64_t result = qword_3179C0;
  if (!qword_3179C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179C0);
  }
  return result;
}

uint64_t sub_4DAD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::DebugData __swiftcall DebugData.init(name:)(BookAnalytics::DebugData name)
{
  BookAnalytics::DebugData *v1 = name;
  return name;
}

uint64_t static DebugData.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_27E370();
  }
}

uint64_t sub_4DC88()
{
  return 1953394534;
}

uint64_t sub_4DC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1953394534 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_4DD20(uint64_t a1)
{
  unint64_t v2 = sub_4DED0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_4DD5C(uint64_t a1)
{
  unint64_t v2 = sub_4DED0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FontData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_3179C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_4DED0();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_4DED0()
{
  unint64_t result = qword_3179D0;
  if (!qword_3179D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179D0);
  }
  return result;
}

uint64_t FontData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3179D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_4DED0();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_4E098()
{
  unint64_t result = qword_3179E0;
  if (!qword_3179E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179E0);
  }
  return result;
}

unint64_t sub_4E0F0()
{
  unint64_t result = qword_3179E8;
  if (!qword_3179E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179E8);
  }
  return result;
}

uint64_t sub_4E144@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FontData.init(from:)(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for DataStackID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DataStackID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for DataStackID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for DataStackID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataStackID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DataStackID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontData()
{
  return &type metadata for FontData;
}

unsigned char *storeEnumTagSinglePayload for FontData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x4E340);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FontData.CodingKeys()
{
  return &type metadata for FontData.CodingKeys;
}

unint64_t sub_4E37C()
{
  unint64_t result = qword_3179F0;
  if (!qword_3179F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179F0);
  }
  return result;
}

unint64_t sub_4E3D4()
{
  unint64_t result = qword_3179F8;
  if (!qword_3179F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3179F8);
  }
  return result;
}

unint64_t sub_4E42C()
{
  unint64_t result = qword_317A00;
  if (!qword_317A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317A00);
  }
  return result;
}

uint64_t sub_4E484(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317A08, &enum case for SessionGroup.default(_:));
}

uint64_t static CollectionExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317A08, a1);
}

uint64_t sub_4E4E4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317A20, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CollectionExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3155F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317A20, a1);
}

uint64_t CollectionExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317AC0);
}

uint64_t CollectionExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionExposureEvent.exposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for CollectionExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t CollectionExposureEvent.Model.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_4EC48(v2, v3);
}

uint64_t sub_4EC48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *CollectionExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_4ED08(v1 + 96, (uint64_t)v4);
  sub_4ED08((uint64_t)v4, a1);
  return sub_4FB64(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1F4E8);
}

uint64_t sub_4ED08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CollectionExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317B68);
}

uint64_t CollectionExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionExposureEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionExposureEvent.Model.init(collectionData:exposureData:linkData:eventData:timedData:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  long long v21 = *a2;
  long long v22 = *a1;
  long long v19 = a2[2];
  long long v20 = a2[1];
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  sub_4ED08(a3, (uint64_t)v23);
  *(_OWORD *)a6 = v22;
  *(void *)(a6 + 16) = v9;
  *(void *)(a6 + 24) = v10;
  *(_OWORD *)(a6 + 32) = v21;
  *(_OWORD *)(a6 + 48) = v20;
  *(_OWORD *)(a6 + 64) = v19;
  *(void *)(a6 + 80) = v11;
  *(void *)(a6 + 88) = v12;
  sub_4ED08((uint64_t)v23, a6 + 96);
  uint64_t v13 = type metadata accessor for CollectionExposureEvent.Model(0);
  uint64_t v14 = a6 + *(int *)(v13 + 28);
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a4, v15);
  uint64_t v16 = a6 + *(int *)(v13 + 32);
  uint64_t v17 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a5, v17);
}

uint64_t sub_4EFB8()
{
  uint64_t result = 0x697463656C6C6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_4F074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_5250C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_4F09C(uint64_t a1)
{
  unint64_t v2 = sub_4F45C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_4F0D8(uint64_t a1)
{
  unint64_t v2 = sub_4F45C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_317A40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_4F45C();
  sub_27E440();
  uint64_t v8 = *(void *)(v2 + 8);
  v17[0] = *(void *)v2;
  v17[1] = v8;
  long long v18 = *(_OWORD *)(v2 + 16);
  v16[0] = 0;
  sub_3C2A4();
  uint64_t v9 = v24;
  sub_27E330();
  if (v9) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = v5;
  long long v12 = *(_OWORD *)(v2 + 48);
  long long v20 = *(_OWORD *)(v2 + 32);
  long long v21 = v12;
  long long v13 = *(_OWORD *)(v2 + 80);
  long long v22 = *(_OWORD *)(v2 + 64);
  long long v23 = v13;
  char v19 = 1;
  sub_4F4B0();
  sub_27E2C0();
  sub_4ED08(v2 + 96, (uint64_t)v17);
  sub_4ED08((uint64_t)v17, (uint64_t)v16);
  v15[7] = 2;
  sub_1FF00();
  sub_27E2C0();
  type metadata accessor for CollectionExposureEvent.Model(0);
  v16[0] = 3;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v24 = v4;
  sub_27E330();
  v16[0] = 4;
  sub_27D7F0();
  sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v14 = v24;
  sub_27E330();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v7, v14);
}

unint64_t sub_4F45C()
{
  unint64_t result = qword_317A48;
  if (!qword_317A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317A48);
  }
  return result;
}

unint64_t sub_4F4B0()
{
  unint64_t result = qword_317A50;
  if (!qword_317A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317A50);
  }
  return result;
}

uint64_t CollectionExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = sub_27D7F0();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4E04(&qword_317A58);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CollectionExposureEvent.Model(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_4F45C();
  uint64_t v33 = v8;
  uint64_t v12 = (uint64_t)v41;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  long long v13 = v6;
  uint64_t v25 = v9;
  uint64_t v41 = a1;
  uint64_t v14 = (uint64_t)v11;
  uint64_t v15 = v31;
  v36[0] = 0;
  sub_3C618();
  sub_27E260();
  uint64_t v16 = *((void *)&v37 + 1);
  *(void *)uint64_t v11 = v37;
  *((void *)v11 + 1) = v16;
  *((_OWORD *)v11 + 1) = v38;
  v36[0] = 1;
  sub_4FB10();
  sub_27E1F0();
  long long v17 = v38;
  *((_OWORD *)v11 + 2) = v37;
  *((_OWORD *)v11 + 3) = v17;
  long long v18 = v40;
  *((_OWORD *)v11 + 4) = v39;
  *((_OWORD *)v11 + 5) = v18;
  v36[159] = 2;
  sub_20940();
  sub_27E1F0();
  uint64_t v24 = 0;
  sub_4ED08((uint64_t)&v37, (uint64_t)v36);
  sub_4ED08((uint64_t)v36, (uint64_t)(v11 + 96));
  char v35 = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  char v19 = v13;
  sub_27E260();
  uint64_t v20 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v14 + *(int *)(v25 + 28), v19, v15);
  char v35 = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v22 = v28;
  long long v21 = v29;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v14 + *(int *)(v20 + 32), v21, v22);
  sub_4FCE4(v14, v27);
  sub_5E94((uint64_t)v41);
  return sub_4FD48(v14);
}

unint64_t sub_4FB10()
{
  unint64_t result = qword_317A60;
  if (!qword_317A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317A60);
  }
  return result;
}

void *sub_4FB64(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_4FBD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_4FC80(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_4FCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4FD48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4FDA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_4FDBC(void *a1)
{
  return CollectionExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_4FDD4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317A08, a1);
}

uint64_t sub_4FE0C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3155F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317A20, a1);
}

uint64_t sub_4FE44@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3171C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317A38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for CollectionExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for CollectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for CollectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for CollectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for CollectionExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_50A40);
}

uint64_t sub_50A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for CollectionExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_50C4C);
}

uint64_t sub_50C4C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3171C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_50E50()
{
  sub_51074(319, (unint64_t *)&qword_317260, (void (*)(void))sub_3C618, (void (*)(void))sub_3C2A4);
  if (v0 <= 0x3F)
  {
    sub_51074(319, (unint64_t *)&unk_317AD0, (void (*)(void))sub_4FB10, (void (*)(void))sub_4F4B0);
    if (v1 <= 0x3F)
    {
      sub_51074(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_51074(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for CollectionExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v9;
      uint64_t v10 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      uint64_t v11 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      uint64_t v12 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = a2[13];
      if (v13)
      {
LABEL_4:
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v13;
        uint64_t v14 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v14;
        uint64_t v15 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v15;
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        uint64_t v16 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v16;
        uint64_t v17 = a2[22];
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v17;
        uint64_t v38 = v6;
        uint64_t v18 = a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v18;
        uint64_t v19 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v19;
        uint64_t v20 = a2[28];
        *(void *)(a1 + 216) = a2[27];
        *(void *)(a1 + 224) = v20;
        uint64_t v21 = a2[30];
        *(void *)(a1 + 232) = a2[29];
        *(void *)(a1 + 240) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v29 = *(int *)(v6 + 28);
        uint64_t v30 = a1 + v29;
        uint64_t v31 = (uint64_t)a2 + v29;
        uint64_t v32 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        uint64_t v33 = *(int *)(v6 + 32);
        uint64_t v34 = a1 + v33;
        uint64_t v35 = (uint64_t)a2 + v33;
        uint64_t v36 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        return a1;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v23;
      long long v24 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v24;
      uint64_t v13 = a2[13];
      if (v13) {
        goto LABEL_4;
      }
    }
    long long v25 = *((_OWORD *)a2 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
    *(void *)(a1 + 240) = a2[30];
    long long v26 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v26;
    long long v27 = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 176) = v27;
    long long v28 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v28;
    goto LABEL_8;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v8)
  {
    long long v21 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v21;
    long long v22 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v22;
    uint64_t v12 = *(void *)(a2 + 104);
    if (v12) {
      goto LABEL_3;
    }
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v23;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    long long v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
    long long v25 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v25;
    long long v26 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v26;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = *(void *)(a2 + 104);
  if (!v12) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  uint64_t v36 = a3;
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v27 = *(int *)(a3 + 28);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = *(int *)(a3 + 32);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (long long *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_51BEC(a1 + 32);
      long long v9 = *(_OWORD *)(a2 + 80);
      long long v11 = *v7;
      long long v10 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *uint64_t v6 = v11;
      *(_OWORD *)(a1 + 48) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 48);
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v15 = (_OWORD *)(a1 + 96);
  uint64_t v16 = (_OWORD *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v17)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 96);
      long long v18 = *(_OWORD *)(a2 + 112);
      _OWORD *v15 = *v16;
      *(_OWORD *)(a1 + 112) = v18;
      long long v19 = *(_OWORD *)(a2 + 176);
      long long v21 = *(_OWORD *)(a2 + 128);
      long long v20 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v19;
      *(_OWORD *)(a1 + 128) = v21;
      *(_OWORD *)(a1 + 144) = v20;
      long long v23 = *(_OWORD *)(a2 + 208);
      long long v22 = *(_OWORD *)(a2 + 224);
      long long v24 = *(_OWORD *)(a2 + 192);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v23;
      *(_OWORD *)(a1 + 224) = v22;
      *(_OWORD *)(a1 + 192) = v24;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 112);
    _OWORD *v15 = *v16;
    *(_OWORD *)(a1 + 112) = v25;
    long long v26 = *(_OWORD *)(a2 + 128);
    long long v27 = *(_OWORD *)(a2 + 144);
    long long v28 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v28;
    *(_OWORD *)(a1 + 128) = v26;
    *(_OWORD *)(a1 + 144) = v27;
    long long v29 = *(_OWORD *)(a2 + 192);
    long long v30 = *(_OWORD *)(a2 + 208);
    long long v31 = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v30;
    *(_OWORD *)(a1 + 224) = v31;
    *(_OWORD *)(a1 + 192) = v29;
  }
  uint64_t v32 = *(int *)(a3 + 28);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = *(int *)(a3 + 32);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t sub_51BEC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  long long v9 = *(_OWORD *)(a2 + 224);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v9;
  long long v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v11;
  long long v13 = *(_OWORD *)(a2 + 96);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  *(_OWORD *)(a1 + 96) = v13;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    uint64_t v8 = *(void *)(a2 + 40);
    if (v8)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_51BEC(a1 + 32);
  }
  long long v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v13;
LABEL_6:
  if (!*(void *)(a1 + 104))
  {
LABEL_10:
    long long v23 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v23;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    long long v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
    long long v25 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v25;
    long long v26 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v26;
    goto LABEL_11;
  }
  uint64_t v14 = *(void *)(a2 + 104);
  if (!v14)
  {
    sub_23648(a1 + 96);
    goto LABEL_10;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v27 = *(int *)(a3 + 28);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = *(int *)(a3 + 32);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_51FAC);
}

uint64_t sub_51FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CollectionExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_520EC);
}

uint64_t sub_520EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_52218()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x523CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionExposureEvent.Model.CodingKeys()
{
  return &type metadata for CollectionExposureEvent.Model.CodingKeys;
}

unint64_t sub_52408()
{
  unint64_t result = qword_317BB0;
  if (!qword_317BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317BB0);
  }
  return result;
}

unint64_t sub_52460()
{
  unint64_t result = qword_317BB8;
  if (!qword_317BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317BB8);
  }
  return result;
}

unint64_t sub_524B8()
{
  unint64_t result = qword_317BC0;
  if (!qword_317BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317BC0);
  }
  return result;
}

uint64_t sub_5250C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00617461446E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::ViewSource_optional __swiftcall ViewSource.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7738;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ViewSource.rawValue.getter()
{
  uint64_t v1 = 0x654D6E6F69746361;
  if (*v0 != 1) {
    uint64_t v1 = 6516596;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_52834(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_31458(*a1, *a2);
}

unint64_t sub_52844()
{
  unint64_t result = qword_317BC8;
  if (!qword_317BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317BC8);
  }
  return result;
}

Swift::Int sub_52898()
{
  return sub_27E420();
}

uint64_t sub_52938()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_529C4()
{
  return sub_27E420();
}

BookAnalytics::ViewSource_optional sub_52A60(Swift::String *a1)
{
  return ViewSource.init(rawValue:)(*a1);
}

void sub_52A6C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEA0000000000756ELL;
  uint64_t v5 = 0x654D6E6F69746361;
  if (v2 != 1)
  {
    uint64_t v5 = 6516596;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_52AC8()
{
  return sub_27DED0();
}

uint64_t sub_52B28()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ViewSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x52C44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSource()
{
  return &type metadata for ViewSource;
}

unint64_t sub_52C7C()
{
  unint64_t result = qword_317BD0;
  if (!qword_317BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317BD0);
  }
  return result;
}

uint64_t sub_52CD0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317BD8, &enum case for SessionGroup.default(_:));
}

uint64_t static NotificationOptInActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315600, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317BD8, a1);
}

uint64_t sub_52D30(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317BF0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static NotificationOptInActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315608, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317BF0, a1);
}

uint64_t NotificationOptInActionEvent.notificationOptInActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_317C08);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t NotificationOptInActionEvent.notificationOptInActionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_317C08);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t NotificationOptInActionEvent.notificationOptInLocationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317C10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationOptInActionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317CC0);
}

uint64_t NotificationOptInActionEvent.notificationOptInLocationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317C10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationOptInActionEvent.notificationOptInLocationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t NotificationOptInActionEvent.notificationOptInTypeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_317C18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NotificationOptInActionEvent.notificationOptInTypeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_317C18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationOptInActionEvent.notificationOptInTypeData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t NotificationOptInActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NotificationOptInActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationOptInActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t NotificationOptInActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NotificationOptInActionEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t NotificationOptInActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationOptInActionEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationOptInActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317D70);
}

uint64_t NotificationOptInActionEvent.Model.init(notificationOptInActionData:notificationOptInLocationData:notificationOptInTypeData:eventData:)@<X0>(unsigned char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  char v6 = *a2;
  char v7 = *a3;
  *a5 = *a1;
  a5[1] = v6;
  a5[2] = v7;
  uint64_t v8 = &a5[*(int *)(type metadata accessor for NotificationOptInActionEvent.Model(0) + 28)];
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v10(v8, a4, v9);
}

unint64_t sub_534EC(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_53590()
{
  return sub_534EC(*v0);
}

uint64_t sub_53598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_55674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_535C0(uint64_t a1)
{
  unint64_t v2 = sub_53874();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_535FC(uint64_t a1)
{
  unint64_t v2 = sub_53874();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationOptInActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_317C20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_53874();
  sub_27E440();
  v10[15] = *v3;
  unsigned char v10[14] = 0;
  sub_538C8();
  sub_27E330();
  if (!v2)
  {
    v10[13] = v3[1];
    v10[12] = 1;
    sub_5391C();
    sub_27E330();
    v10[11] = v3[2];
    v10[10] = 2;
    sub_53970();
    sub_27E2C0();
    type metadata accessor for NotificationOptInActionEvent.Model(0);
    v10[9] = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_53874()
{
  unint64_t result = qword_317C28;
  if (!qword_317C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C28);
  }
  return result;
}

unint64_t sub_538C8()
{
  unint64_t result = qword_317C30;
  if (!qword_317C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C30);
  }
  return result;
}

unint64_t sub_5391C()
{
  unint64_t result = qword_317C38;
  if (!qword_317C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C38);
  }
  return result;
}

unint64_t sub_53970()
{
  unint64_t result = qword_317C40;
  if (!qword_317C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C40);
  }
  return result;
}

uint64_t NotificationOptInActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_317C48);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NotificationOptInActionEvent.Model(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_53874();
  long long v23 = v8;
  uint64_t v12 = v24;
  sub_27E430();
  if (!v12)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v21;
    char v30 = 0;
    sub_53D2C();
    uint64_t v15 = v22;
    sub_27E260();
    unsigned char *v13 = v31;
    char v28 = 1;
    sub_53D80();
    sub_27E260();
    v13[1] = v29;
    char v26 = 2;
    sub_53DD4();
    sub_27E1F0();
    v13[2] = v27;
    char v25 = 3;
    sub_1AB30(&qword_315E28);
    uint64_t v17 = v23;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v15);
    uint64_t v18 = v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v20 + 32))(&v13[*(int *)(v9 + 28)], v5, v3);
    sub_53E28((uint64_t)v13, v18);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_53D2C()
{
  unint64_t result = qword_317C50;
  if (!qword_317C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C50);
  }
  return result;
}

unint64_t sub_53D80()
{
  unint64_t result = qword_317C58;
  if (!qword_317C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C58);
  }
  return result;
}

unint64_t sub_53DD4()
{
  unint64_t result = qword_317C60;
  if (!qword_317C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317C60);
  }
  return result;
}

uint64_t sub_53E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationOptInActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_53E8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationOptInActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_53EA4(void *a1)
{
  return NotificationOptInActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_53EBC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315600, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317BD8, a1);
}

uint64_t sub_53EF4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315608, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317BF0, a1);
}

uint64_t sub_53F2C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationOptInActionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_317C08);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317C10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_317C18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for NotificationOptInActionEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_54920);
}

uint64_t sub_54920(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317C08);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317C10);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_317C18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for NotificationOptInActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_54ADC);
}

uint64_t sub_54ADC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_317C08);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317C10);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_317C18);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_54C90()
{
  sub_54E78(319, &qword_317CD0, (void (*)(void))sub_53D2C, (void (*)(void))sub_538C8);
  if (v0 <= 0x3F)
  {
    sub_54E78(319, &qword_317CD8, (void (*)(void))sub_53D80, (void (*)(void))sub_5391C);
    if (v1 <= 0x3F)
    {
      sub_54E78(319, (unint64_t *)&unk_317CE0, (void (*)(void))sub_53DD4, (void (*)(void))sub_53970);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_54E78(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v3 = *a2;
    unint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_27D7C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t initializeWithCopy for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for NotificationOptInActionEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5525C);
}

uint64_t sub_5525C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 28)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NotificationOptInActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_55318);
}

unsigned char *sub_55318(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 28)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_553BC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x55534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInActionEvent.Model.CodingKeys()
{
  return &type metadata for NotificationOptInActionEvent.Model.CodingKeys;
}

unint64_t sub_55570()
{
  unint64_t result = qword_317DB0;
  if (!qword_317DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317DB0);
  }
  return result;
}

unint64_t sub_555C8()
{
  unint64_t result = qword_317DB8;
  if (!qword_317DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317DB8);
  }
  return result;
}

unint64_t sub_55620()
{
  unint64_t result = qword_317DC0;
  if (!qword_317DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317DC0);
  }
  return result;
}

uint64_t sub_55674(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000000002AE290 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000000002AE2B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002AE2D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_55824(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_317DC8, &enum case for SessionGroup.default(_:));
}

uint64_t static PlayEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315610, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317DC8, a1);
}

uint64_t sub_55884(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_317DE0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PlayEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315618, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317DE0, a1);
}

uint64_t PlayEvent.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_317EB0);
}

uint64_t PlayEvent.listeningSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.listeningSessionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.listeningActionSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.listeningActionSourceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.listeningActionSourceData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.bitRateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.bitRateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.bitRateData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.errorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.doNotDisturbData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.doNotDisturbData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.doNotDisturbData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.userEmbeddingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_317E08);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.userEmbeddingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_317E08);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayEvent.userEmbeddingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PlayEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = enum case for EventProperty.optional<A>(_:);
  uint64_t v15 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v14, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_317E08);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v14, v25);
}

uint64_t PlayEvent.Model.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 100);
  int v3 = *(_DWORD *)(v1 + 104);
  char v4 = *(unsigned char *)(v1 + 108);
  int v5 = *(_DWORD *)(v1 + 112);
  uint64_t v7 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  char v8 = *(unsigned char *)(v1 + 136);
  char v9 = *(unsigned char *)(v1 + 137);
  int v10 = *(_DWORD *)(v1 + 140);
  char v11 = *(unsigned char *)(v1 + 144);
  char v12 = *(unsigned char *)(v1 + 145);
  int v13 = *(_DWORD *)(v1 + 148);
  char v14 = *(unsigned char *)(v1 + 152);
  char v15 = *(unsigned char *)(v1 + 153);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 96);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 41) = v9;
  *(_DWORD *)(a1 + 44) = v10;
  *(unsigned char *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 49) = v12;
  *(_DWORD *)(a1 + 52) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 57) = v15;
  return swift_bridgeObjectRetain();
}

void PlayEvent.Model.listeningActionSourceData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 154);
}

void PlayEvent.Model.bitRateData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 160);
  int v3 = *(_DWORD *)(v1 + 164);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 156);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
}

uint64_t PlayEvent.Model.errorData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[22];
  uint64_t v3 = v1[23];
  uint64_t v4 = v1[24];
  *a1 = v1[21];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PlayEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 216);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 200);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void PlayEvent.Model.doNotDisturbData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 224);
}

uint64_t PlayEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[29];
  uint64_t v3 = v1[30];
  uint64_t v4 = v1[31];
  uint64_t v5 = v1[32];
  uint64_t v6 = v1[33];
  uint64_t v7 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t PlayEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_317F80);
}

uint64_t PlayEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayEvent.Model(0) + 52);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayEvent.Model.userEmbeddingData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for PlayEvent.Model(0) + 56));

  return swift_bridgeObjectRetain();
}

uint64_t PlayEvent.Model.init(contentData:listeningSessionData:listeningActionSourceData:bitRateData:errorData:upSellData:doNotDisturbData:seriesData:eventData:timedData:userEmbeddingData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, _WORD *a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v13;
  *(unsigned char *)(a9 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 48);
  *(void *)(a9 + 40) = *(void *)(a1 + 40);
  *(void *)(a9 + 48) = v14;
  long long v15 = *(_OWORD *)(a1 + 24);
  *(_WORD *)(a9 + 56) = *(_WORD *)(a1 + 56);
  *(_DWORD *)(a9 + 60) = *(_DWORD *)(a1 + 60);
  *(unsigned char *)(a9 + 64) = *(unsigned char *)(a1 + 64);
  *(_DWORD *)(a9 + 68) = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(_OWORD *)(a9 + 24) = v15;
  *(unsigned char *)(a9 + 72) = v16;
  *(_DWORD *)(a9 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a9 + 77) = *(unsigned char *)(a1 + 77);
  long long v17 = *(_OWORD *)(a1 + 80);
  *(_DWORD *)(a9 + 96) = *(_DWORD *)a2;
  *(unsigned char *)(a9 + 100) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a9 + 104) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a9 + 108) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a9 + 136) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a9 + 137) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a9 + 140) = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a9 + 144) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a9 + 145) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a9 + 148) = *(_DWORD *)(a2 + 52);
  *(unsigned char *)(a9 + 152) = *(unsigned char *)(a2 + 56);
  int v18 = *(_DWORD *)(a2 + 16);
  long long v19 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a9 + 153) = *(unsigned char *)(a2 + 57);
  *(_WORD *)(a9 + 154) = *a3;
  *(_DWORD *)(a9 + 156) = *(_DWORD *)a4;
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(a4 + 4);
  long long v20 = a8[1];
  *(_OWORD *)(a9 + 232) = *a8;
  *(_OWORD *)(a9 + 264) = a8[2];
  long long v21 = *a5;
  *(_DWORD *)(a9 + 164) = *(_DWORD *)(a4 + 8);
  uint64_t v22 = *((void *)a5 + 3);
  *(void *)(a9 + 184) = *((void *)a5 + 2);
  *(void *)(a9 + 192) = v22;
  *(_OWORD *)(a9 + 80) = v17;
  *(_DWORD *)(a9 + 112) = v18;
  uint64_t v23 = *((void *)a6 + 2);
  *(_OWORD *)(a9 + 120) = v19;
  long long v24 = *a6;
  *(void *)(a9 + 216) = v23;
  *(_WORD *)(a9 + 224) = *a7;
  uint64_t v25 = *a12;
  *(_OWORD *)(a9 + 168) = v21;
  *(_OWORD *)(a9 + 200) = v24;
  *(_OWORD *)(a9 + 248) = v20;
  char v26 = (int *)type metadata accessor for PlayEvent.Model(0);
  uint64_t v27 = a9 + v26[12];
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a10, v28);
  uint64_t v29 = a9 + v26[13];
  uint64_t v30 = sub_27D7F0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a11, v30);
  *(void *)(a9 + v26[14]) = v25;
  return result;
}

uint64_t sub_56D6C(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      return 0xD000000000000014;
    case 2:
      return 0xD000000000000019;
    case 3:
      return 0x4465746152746962;
    case 4:
      uint64_t v3 = 0x44726F727265;
      goto LABEL_14;
    case 5:
      uint64_t v4 = 0x6C6C65537075;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 6:
      return 0xD000000000000010;
    case 7:
      uint64_t v4 = 0x736569726573;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 8:
      uint64_t v3 = 0x44746E657665;
      goto LABEL_14;
    case 9:
      uint64_t v3 = 0x4464656D6974;
LABEL_14:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_56EC8()
{
  return sub_56D6C(*v0);
}

uint64_t sub_56ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_5BB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_56EF8(uint64_t a1)
{
  unint64_t v2 = sub_574AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_56F34(uint64_t a1)
{
  unint64_t v2 = sub_574AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlayEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_317E10);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  char v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_574AC();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v44 = *(void *)v4;
  *((void *)&v44 + 1) = v10;
  v45[0] = v11;
  *(_OWORD *)&v45[8] = v12;
  *(void *)&v45[24] = v13;
  uint64_t v46 = v14;
  __int16 v47 = v15;
  int v48 = v16;
  char v49 = v17;
  int v50 = v18;
  char v51 = v19;
  int v52 = *(_DWORD *)(v4 + 73);
  char v53 = v20;
  long long v54 = *(_OWORD *)(v4 + 80);
  char v43 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *(unsigned char *)(v4 + 100);
    int v22 = *(_DWORD *)(v4 + 104);
    char v23 = *(unsigned char *)(v4 + 108);
    int v24 = *(_DWORD *)(v4 + 112);
    char v25 = *(unsigned char *)(v4 + 136);
    char v26 = *(unsigned char *)(v4 + 137);
    int v27 = *(_DWORD *)(v4 + 140);
    char v28 = *(unsigned char *)(v4 + 144);
    char v29 = *(unsigned char *)(v4 + 145);
    int v30 = *(_DWORD *)(v4 + 148);
    char v31 = *(unsigned char *)(v4 + 152);
    char v32 = *(unsigned char *)(v4 + 153);
    LODWORD(v44) = *(_DWORD *)(v4 + 96);
    BYTE4(v44) = v21;
    DWORD2(v44) = v22;
    BYTE12(v44) = v23;
    *(_DWORD *)int v45 = v24;
    *(_OWORD *)&v45[8] = *(_OWORD *)(v4 + 120);
    v45[24] = v25;
    v45[25] = v26;
    *(_DWORD *)&v45[28] = v27;
    LOBYTE(v46) = v28;
    BYTE1(v46) = v29;
    HIDWORD(v46) = v30;
    LOBYTE(v47) = v31;
    HIBYTE(v47) = v32;
    char v43 = 1;
    sub_57500();
    sub_27E330();
    LOWORD(v44) = *(_WORD *)(v4 + 154);
    char v43 = 2;
    sub_1A27C();
    sub_27E330();
    char v33 = *(unsigned char *)(v4 + 160);
    int v34 = *(_DWORD *)(v4 + 164);
    LODWORD(v44) = *(_DWORD *)(v4 + 156);
    BYTE4(v44) = v33;
    DWORD2(v44) = v34;
    char v43 = 3;
    sub_1A2D0();
    sub_27E330();
    uint64_t v35 = *(void *)(v4 + 184);
    uint64_t v36 = *(void *)(v4 + 192);
    long long v44 = *(_OWORD *)(v4 + 168);
    *(void *)int v45 = v35;
    *(void *)&v45[8] = v36;
    char v43 = 4;
    sub_1A324();
    sub_27E330();
    uint64_t v37 = *(void *)(v4 + 216);
    long long v44 = *(_OWORD *)(v4 + 200);
    *(void *)int v45 = v37;
    char v43 = 5;
    sub_36A74();
    sub_27E2C0();
    LOWORD(v44) = *(_WORD *)(v4 + 224);
    char v43 = 6;
    sub_57554();
    sub_27E330();
    long long v38 = *(_OWORD *)(v4 + 248);
    long long v39 = *(_OWORD *)(v4 + 264);
    long long v44 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)int v45 = v38;
    *(_OWORD *)&v45[16] = v39;
    char v43 = 7;
    sub_11514();
    sub_27E2C0();
    uint64_t v40 = type metadata accessor for PlayEvent.Model(0);
    LOBYTE(v44) = 8;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v44) = 9;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
    *(void *)&long long v44 = *(void *)(v4 + *(int *)(v40 + 56));
    char v43 = 10;
    sub_575A8();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_574AC()
{
  unint64_t result = qword_317E18;
  if (!qword_317E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E18);
  }
  return result;
}

unint64_t sub_57500()
{
  unint64_t result = qword_317E20;
  if (!qword_317E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E20);
  }
  return result;
}

unint64_t sub_57554()
{
  unint64_t result = qword_317E28;
  if (!qword_317E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E28);
  }
  return result;
}

unint64_t sub_575A8()
{
  unint64_t result = qword_317E30;
  if (!qword_317E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E30);
  }
  return result;
}

uint64_t PlayEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v56 = sub_27D7F0();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_27D7C0();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4E04(&qword_317E38);
  uint64_t v8 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v60 = (int *)type metadata accessor for PlayEvent.Model(0);
  __chkstk_darwin();
  long long v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v58 = a1;
  sub_5900(a1, v13);
  sub_574AC();
  int v52 = v10;
  sub_27E430();
  if (v2)
  {
    uint64_t v59 = v2;
    uint64_t result = sub_5E94((uint64_t)v58);
    int v15 = 0;
    int v16 = 0;
  }
  else
  {
    uint64_t v59 = v7;
    int v50 = v5;
    char v73 = 0;
    sub_1A98C();
    sub_27E260();
    uint64_t v18 = *((void *)&v61 + 1);
    char v19 = v62[0];
    long long v20 = *(_OWORD *)&v62[8];
    uint64_t v21 = *(void *)&v62[24];
    uint64_t v22 = v63;
    __int16 v23 = v64;
    int v24 = v65;
    char v25 = v66;
    int v26 = v67;
    char v27 = v68;
    char v28 = v70;
    *(void *)long long v12 = v61;
    *((void *)v12 + 1) = v18;
    v12[16] = v19;
    *(_OWORD *)(v12 + 24) = v20;
    *((void *)v12 + 5) = v21;
    *((void *)v12 + 6) = v22;
    *((_WORD *)v12 + 28) = v23;
    *((_DWORD *)v12 + 15) = v24;
    v12[64] = v25;
    *((_DWORD *)v12 + 17) = v26;
    v12[72] = v27;
    *(_DWORD *)(v12 + 73) = v69;
    v12[77] = v28;
    *((_OWORD *)v12 + 5) = v71;
    char v73 = 1;
    sub_57F90();
    sub_27E260();
    char v29 = BYTE4(v61);
    int v30 = DWORD2(v61);
    char v31 = BYTE12(v61);
    int v32 = *(_DWORD *)v62;
    char v33 = v62[24];
    char v34 = v62[25];
    int v35 = *(_DWORD *)&v62[28];
    char v36 = v63;
    char v37 = BYTE1(v63);
    int v38 = HIDWORD(v63);
    char v39 = v64;
    char v40 = HIBYTE(v64);
    *((_DWORD *)v12 + 24) = v61;
    v12[100] = v29;
    *((_DWORD *)v12 + 26) = v30;
    v12[108] = v31;
    *((_DWORD *)v12 + 28) = v32;
    *(_OWORD *)(v12 + 120) = *(_OWORD *)&v62[8];
    v12[136] = v33;
    v12[137] = v34;
    *((_DWORD *)v12 + 35) = v35;
    v12[144] = v36;
    v12[145] = v37;
    *((_DWORD *)v12 + 37) = v38;
    v12[152] = v39;
    v12[153] = v40;
    char v73 = 2;
    sub_1AA34();
    sub_27E260();
    *((_WORD *)v12 + 77) = v61;
    char v73 = 3;
    sub_1AA88();
    sub_27E260();
    char v41 = BYTE4(v61);
    int v42 = DWORD2(v61);
    *((_DWORD *)v12 + 39) = v61;
    v12[160] = v41;
    *((_DWORD *)v12 + 41) = v42;
    char v73 = 4;
    sub_1AADC();
    sub_27E260();
    long long v43 = *(_OWORD *)v62;
    *(_OWORD *)(v12 + 168) = v61;
    *(_OWORD *)(v12 + 184) = v43;
    char v73 = 5;
    sub_37744();
    sub_27E1F0();
    uint64_t v44 = *(void *)v62;
    *(_OWORD *)(v12 + 200) = v61;
    *((void *)v12 + 27) = v44;
    char v73 = 6;
    sub_57FE4();
    sub_27E260();
    *((_WORD *)v12 + 112) = v61;
    char v73 = 7;
    sub_11A3C();
    sub_27E1F0();
    int v72 = 1;
    long long v45 = *(_OWORD *)v62;
    *(_OWORD *)(v12 + 232) = v61;
    long long v46 = *(_OWORD *)&v62[16];
    *(_OWORD *)(v12 + 248) = v45;
    *(_OWORD *)(v12 + 264) = v46;
    LOBYTE(v61) = 8;
    sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
    __int16 v47 = v59;
    sub_27E260();
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v12[v60[12]], v47, v57);
    LOBYTE(v61) = 9;
    sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E260();
    uint64_t v59 = 0;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v12[v60[13]], v50, v56);
    char v73 = 10;
    sub_58038();
    int v48 = v59;
    sub_27E1F0();
    uint64_t v59 = v48;
    if (!v48)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v52, v53);
      *(void *)&v12[v60[14]] = v61;
      sub_5808C((uint64_t)v12, v51);
      sub_5E94((uint64_t)v58);
      return sub_580F0((uint64_t)v12);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v52, v53);
    int v16 = 1;
    int v15 = 1;
    sub_5E94((uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v17 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      sub_1A978(*((void *)v12 + 29), *((void *)v12 + 30), *((void *)v12 + 31), *((void *)v12 + 32), *((void *)v12 + 33), *((void *)v12 + 34));
      goto LABEL_9;
    }
  }
  if (v16)
  {
LABEL_9:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v12[v60[12]], v57);
    if ((v15 & 1) == 0) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(&v12[v60[13]], v56);
  }
  if (!v15) {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(&v12[v60[13]], v56);
}

unint64_t sub_57F90()
{
  unint64_t result = qword_317E40;
  if (!qword_317E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E40);
  }
  return result;
}

unint64_t sub_57FE4()
{
  unint64_t result = qword_317E48;
  if (!qword_317E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E48);
  }
  return result;
}

unint64_t sub_58038()
{
  unint64_t result = qword_317E50;
  if (!qword_317E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317E50);
  }
  return result;
}

uint64_t sub_5808C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_580F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5814C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PlayEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_58164(void *a1)
{
  return PlayEvent.Model.encode(to:)(a1);
}

uint64_t sub_5817C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315610, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_317DC8, a1);
}

uint64_t sub_581B4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315618, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_317DE0, a1);
}

uint64_t sub_581EC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = enum case for EventProperty.optional<A>(_:);
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v15, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_317E08);
  char v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v15, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317DF8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316780);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316788);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316790);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    int v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_317E00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    int v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    int v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    long long v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_317E08);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for PlayEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_317E08);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for PlayEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for PlayEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for PlayEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for PlayEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_59A18);
}

uint64_t sub_59A18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  uint64_t v14 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  uint64_t v15 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  uint64_t v16 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_317E08);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for PlayEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_59E04);
}

uint64_t sub_59E04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  uint64_t v16 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  uint64_t v25 = sub_4E04(&qword_317E08);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_5A1E8()
{
  sub_5A6C4(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_5A6C4(319, &qword_317EC0, (void (*)(void))sub_57F90, (void (*)(void))sub_57500);
    if (v1 <= 0x3F)
    {
      sub_5A6C4(319, &qword_316878, (void (*)(void))sub_1AA34, (void (*)(void))sub_1A27C);
      if (v2 <= 0x3F)
      {
        sub_5A6C4(319, &qword_316880, (void (*)(void))sub_1AA88, (void (*)(void))sub_1A2D0);
        if (v3 <= 0x3F)
        {
          sub_5A6C4(319, (unint64_t *)&unk_316888, (void (*)(void))sub_1AADC, (void (*)(void))sub_1A324);
          if (v4 <= 0x3F)
          {
            sub_5A6C4(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
            if (v5 <= 0x3F)
            {
              sub_5A6C4(319, &qword_317EC8, (void (*)(void))sub_57FE4, (void (*)(void))sub_57554);
              if (v6 <= 0x3F)
              {
                sub_5A6C4(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_6DA0();
                  if (v8 <= 0x3F)
                  {
                    sub_6E6C();
                    if (v9 <= 0x3F)
                    {
                      sub_5A6C4(319, (unint64_t *)&unk_317ED0, (void (*)(void))sub_58038, (void (*)(void))sub_575A8);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_5A6C4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PlayEvent.Model(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    *(_WORD *)(a1 + 136) = *((_WORD *)a2 + 68);
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
    int v13 = *((_DWORD *)a2 + 37);
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(_DWORD *)(a1 + 148) = v13;
    *(unsigned char *)(a1 + 153) = *((unsigned char *)a2 + 153);
    *(_WORD *)(a1 + 154) = *((_WORD *)a2 + 77);
    *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
    *(void *)(a1 + 156) = *(uint64_t *)((char *)a2 + 156);
    uint64_t v14 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v15;
    *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
    *(unsigned char *)(a1 + 201) = *((unsigned char *)a2 + 201);
    uint64_t v16 = a2[27];
    *(void *)(a1 + 208) = a2[26];
    *(void *)(a1 + 216) = v16;
    *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
    uint64_t v17 = a2[34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v18 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 248) = v18;
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    }
    else
    {
      *(void *)(a1 + 232) = a2[29];
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(a1 + 248) = a2[31];
      *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
      *(_WORD *)(a1 + 257) = *(_WORD *)((char *)a2 + 257);
      *(void *)(a1 + 264) = a2[33];
      *(void *)(a1 + 272) = v17;
      swift_bridgeObjectRetain();
    }
    uint64_t v20 = a3[12];
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[13];
    uint64_t v25 = a1 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    *(void *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlayEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 272) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  uint64_t v7 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlayEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v8 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v8;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  int v11 = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v11;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(void *)(a1 + 156) = *(void *)(a2 + 156);
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v13;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v14;
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  uint64_t v15 = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v16;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  }
  else
  {
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(_WORD *)(a1 + 257) = *(_WORD *)(a2 + 257);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v15;
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlayEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v8;
  int v9 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v9;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  int v10 = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = v10;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  int v11 = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v11;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
  int v12 = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = v12;
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  uint64_t v13 = (long long *)(a1 + 232);
  uint64_t v14 = (long long *)(a2 + 232);
  uint64_t v15 = *(void *)(a2 + 272);
  if (*(void *)(a1 + 272) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v17;
      long long *v13 = v16;
    }
    else
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
      *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1CDD8(a1 + 232);
    long long v19 = *(_OWORD *)(a2 + 248);
    long long v18 = *(_OWORD *)(a2 + 264);
    long long *v13 = *v14;
    *(_OWORD *)(a1 + 248) = v19;
    *(_OWORD *)(a1 + 264) = v18;
  }
  else
  {
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
    *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[13];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlayEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 138) = *(_OWORD *)(a2 + 138);
  long long v9 = *(_OWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 96) = v10;
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(void *)(a1 + 156) = *(void *)(a2 + 156);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  long long v11 = *(_OWORD *)(a2 + 232);
  long long v12 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v12;
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)(a1 + 232) = v11;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for PlayEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(void *)(a1 + 148) = *(void *)(a2 + 148);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  if (*(void *)(a1 + 272) != 1)
  {
    uint64_t v14 = *(void *)(a2 + 272);
    if (v14 != 1)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_WORD *)(a1 + 257) = *(_WORD *)(a2 + 257);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 232);
  }
  long long v15 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v15;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_6:
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5B5E4);
}

uint64_t sub_5B5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PlayEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5B724);
}

uint64_t sub_5B724(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 52);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_5B850()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlayEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5BA3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayEvent.Model.CodingKeys()
{
  return &type metadata for PlayEvent.Model.CodingKeys;
}

unint64_t sub_5BA78()
{
  unint64_t result = qword_317FE0;
  if (!qword_317FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317FE0);
  }
  return result;
}

unint64_t sub_5BAD0()
{
  unint64_t result = qword_317FE8;
  if (!qword_317FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317FE8);
  }
  return result;
}

unint64_t sub_5BB28()
{
  unint64_t result = qword_317FF0;
  if (!qword_317FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_317FF0);
  }
  return result;
}

uint64_t sub_5BB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE2F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002ADEE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4465746152746962 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE310 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE330)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t static DialogData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_337C8(*a1, *a2);
}

uint64_t sub_5C028()
{
  return 0x7954676F6C616964;
}

uint64_t sub_5C044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7954676F6C616964 && a2 == 0xEA00000000006570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_5C0E8(uint64_t a1)
{
  unint64_t v2 = sub_5C2A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_5C124(uint64_t a1)
{
  unint64_t v2 = sub_5C2A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DialogData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_317FF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_5C2A8();
  sub_27E440();
  char v10 = v7;
  sub_5C2FC();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_5C2A8()
{
  unint64_t result = qword_318000;
  if (!qword_318000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318000);
  }
  return result;
}

unint64_t sub_5C2FC()
{
  unint64_t result = qword_318008;
  if (!qword_318008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318008);
  }
  return result;
}

uint64_t DialogData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_318010);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_5C2A8();
  sub_27E430();
  if (!v2)
  {
    sub_5C4B8();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_5C4B8()
{
  unint64_t result = qword_318018;
  if (!qword_318018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318018);
  }
  return result;
}

unint64_t sub_5C510()
{
  unint64_t result = qword_318020;
  if (!qword_318020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318020);
  }
  return result;
}

unint64_t sub_5C568()
{
  unint64_t result = qword_318028;
  if (!qword_318028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318028);
  }
  return result;
}

uint64_t sub_5C5BC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DialogData.init(from:)(a1, a2);
}

uint64_t sub_5C5D4(void *a1)
{
  return DialogData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for DialogData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5C6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogData()
{
  return &type metadata for DialogData;
}

unsigned char *storeEnumTagSinglePayload for DialogData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x5C78CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogData.CodingKeys()
{
  return &type metadata for DialogData.CodingKeys;
}

unint64_t sub_5C7C8()
{
  unint64_t result = qword_318030;
  if (!qword_318030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318030);
  }
  return result;
}

unint64_t sub_5C820()
{
  unint64_t result = qword_318038;
  if (!qword_318038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318038);
  }
  return result;
}

unint64_t sub_5C878()
{
  unint64_t result = qword_318040;
  if (!qword_318040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318040);
  }
  return result;
}

uint64_t sub_5C8CC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318048, &enum case for SessionGroup.default(_:));
}

uint64_t static ContentDetailsViewScrollEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315620, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318048, a1);
}

uint64_t sub_5C92C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318060, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ContentDetailsViewScrollEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315628, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318060, a1);
}

uint64_t ContentDetailsViewScrollEvent.scrollData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_318078);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentDetailsViewScrollEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_318100);
}

uint64_t ContentDetailsViewScrollEvent.scrollData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_318078);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewScrollEvent.scrollData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewScrollEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewScrollEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewScrollEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewScrollEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ContentDetailsViewScrollEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

double ContentDetailsViewScrollEvent.Model.scrollData.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 96);
  *a1 = result;
  return result;
}

uint64_t ContentDetailsViewScrollEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentDetailsViewScrollEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3181A0);
}

uint64_t ContentDetailsViewScrollEvent.Model.init(contentData:scrollData:eventData:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(void *)(a4 + 96) = *a2;
  uint64_t v16 = a4 + *(int *)(type metadata accessor for ContentDetailsViewScrollEvent.Model(0) + 24);
  uint64_t v17 = sub_27D7C0();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a3, v17);
}

uint64_t sub_5CED0()
{
  uint64_t v1 = 0x61446C6C6F726373;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_5CF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_5EEB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_5CF64(uint64_t a1)
{
  unint64_t v2 = sub_5D230();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_5CFA0(uint64_t a1)
{
  unint64_t v2 = sub_5D230();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentDetailsViewScrollEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_318080);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_5D230();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v24 = *v4;
  uint64_t v25 = v10;
  char v26 = v11;
  long long v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  __int16 v30 = v15;
  int v31 = v16;
  char v32 = v17;
  int v33 = v18;
  char v34 = v19;
  int v35 = *(_DWORD *)((char *)v4 + 73);
  char v36 = v20;
  long long v37 = *((_OWORD *)v4 + 5);
  char v23 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    uint64_t v24 = v4[12];
    char v23 = 1;
    sub_5D284();
    sub_27E330();
    type metadata accessor for ContentDetailsViewScrollEvent.Model(0);
    LOBYTE(v24) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_5D230()
{
  unint64_t result = qword_318088;
  if (!qword_318088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318088);
  }
  return result;
}

unint64_t sub_5D284()
{
  unint64_t result = qword_318090;
  if (!qword_318090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318090);
  }
  return result;
}

uint64_t ContentDetailsViewScrollEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_318098);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContentDetailsViewScrollEvent.Model(0);
  __chkstk_darwin();
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v34 = a1;
  sub_5900(a1, v13);
  sub_5D230();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = v32;
  __int16 v15 = v6;
  char v49 = 0;
  sub_1A98C();
  uint64_t v16 = v33;
  sub_27E260();
  uint64_t v17 = v36;
  char v18 = v37;
  long long v19 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  __int16 v22 = v41;
  int v23 = v42;
  char v24 = v43;
  int v25 = v44;
  char v26 = v45;
  char v27 = v47;
  *(void *)long long v12 = v35;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v46;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v48;
  char v49 = 1;
  sub_5D6BC();
  sub_27E260();
  *((void *)v12 + 12) = v35;
  LOBYTE(v35) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_5D710((uint64_t)v12, v31);
  sub_5E94((uint64_t)v34);
  return sub_5D774((uint64_t)v12);
}

unint64_t sub_5D6BC()
{
  unint64_t result = qword_3180A0;
  if (!qword_3180A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3180A0);
  }
  return result;
}

uint64_t sub_5D710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentDetailsViewScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5D774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentDetailsViewScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5D7D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContentDetailsViewScrollEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_5D7E8(void *a1)
{
  return ContentDetailsViewScrollEvent.Model.encode(to:)(a1);
}

uint64_t sub_5D800@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315620, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318048, a1);
}

uint64_t sub_5D838@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315628, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318060, a1);
}

uint64_t sub_5D870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentDetailsViewScrollEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_318078);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5E048);
}

uint64_t sub_5E048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_318078);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ContentDetailsViewScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5E1B4);
}

uint64_t sub_5E1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_318078);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_5E318()
{
  sub_5E48C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_5E48C(319, (unint64_t *)&unk_318110, (void (*)(void))sub_5D6BC, (void (*)(void))sub_5D284);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_5E48C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = a1 + v10;
    *(void *)(a1 + 96) = a2[12];
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t initializeWithCopy for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5EAA0);
}

uint64_t sub_5EAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContentDetailsViewScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5EB64);
}

uint64_t sub_5EB64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_5EC0C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentDetailsViewScrollEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5ED78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentDetailsViewScrollEvent.Model.CodingKeys()
{
  return &type metadata for ContentDetailsViewScrollEvent.Model.CodingKeys;
}

unint64_t sub_5EDB4()
{
  unint64_t result = qword_3181E0;
  if (!qword_3181E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3181E0);
  }
  return result;
}

unint64_t sub_5EE0C()
{
  unint64_t result = qword_3181E8;
  if (!qword_3181E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3181E8);
  }
  return result;
}

unint64_t sub_5EE64()
{
  unint64_t result = qword_3181F0;
  if (!qword_3181F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3181F0);
  }
  return result;
}

uint64_t sub_5EEB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6C6F726373 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_5F040(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3181F8, &enum case for SessionGroup.default(_:));
}

uint64_t static ThemeCustomizedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315630, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3181F8, a1);
}

uint64_t sub_5F0A0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318210, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ThemeCustomizedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315638, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318210, a1);
}

uint64_t ThemeCustomizedEvent.textData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemeCustomizedEvent(uint64_t a1)
{
  return sub_5338(a1, qword_318298);
}

uint64_t ThemeCustomizedEvent.textData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizedEvent.textData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizedEvent.layoutOptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316028);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizedEvent.layoutOptionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316028);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizedEvent.layoutOptionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizedEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizedEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizedEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizedEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizedEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemeCustomizedEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemeCustomizedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ThemeCustomizedEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = enum case for EventProperty.optional<A>(_:);
  uint64_t v11 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

void ThemeCustomizedEvent.Model.layoutOptionData.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 68);
  int v4 = *(_DWORD *)(v1 + 72);
  char v5 = *(unsigned char *)(v1 + 76);
  int v6 = *(_DWORD *)(v1 + 80);
  char v7 = *(unsigned char *)(v1 + 84);
  char v8 = *(unsigned char *)(v1 + 85);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 60);
  *(_DWORD *)(a1 + 4) = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 12) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
}

uint64_t ThemeCustomizedEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v8 = v1[17];
  uint64_t v9 = v1[18];
  uint64_t v10 = v1[19];
  uint64_t v11 = v1[20];
  uint64_t v12 = v1[21];
  uint64_t v13 = v1[22];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t sub_5FA04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ThemeCustomizedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemeCustomizedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_318338);
}

uint64_t ThemeCustomizedEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemeCustomizedEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemeCustomizedEvent.Model.init(themesData:textData:layoutOptionData:contentData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_OWORD *)a7 = *(_OWORD *)a1;
  long long v10 = a4[1];
  *(_OWORD *)(a7 + 88) = *a4;
  *(_OWORD *)(a7 + 104) = v10;
  long long v11 = a4[3];
  *(_OWORD *)(a7 + 120) = a4[2];
  *(_OWORD *)(a7 + 136) = v11;
  long long v12 = a4[5];
  *(_OWORD *)(a7 + 152) = a4[4];
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  char v18 = *((unsigned char *)a2 + 16);
  char v19 = *a3;
  int v20 = *((_DWORD *)a3 + 1);
  char v21 = a3[8];
  int v22 = *((_DWORD *)a3 + 3);
  char v23 = a3[16];
  int v24 = *((_DWORD *)a3 + 5);
  char v25 = a3[24];
  char v26 = a3[25];
  *(void *)(a7 + 16) = v13;
  *(void *)(a7 + 24) = v14;
  *(unsigned char *)(a7 + 32) = v15;
  *(void *)(a7 + 40) = v16;
  *(void *)(a7 + 48) = v17;
  *(unsigned char *)(a7 + 56) = v18;
  *(unsigned char *)(a7 + 60) = v19;
  *(_DWORD *)(a7 + 64) = v20;
  *(unsigned char *)(a7 + 68) = v21;
  *(_DWORD *)(a7 + 72) = v22;
  *(unsigned char *)(a7 + 76) = v23;
  *(_DWORD *)(a7 + 80) = v24;
  *(unsigned char *)(a7 + 84) = v25;
  *(unsigned char *)(a7 + 85) = v26;
  *(_OWORD *)(a7 + 168) = v12;
  uint64_t v27 = type metadata accessor for ThemeCustomizedEvent.Model(0);
  uint64_t v28 = a7 + *(int *)(v27 + 32);
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a5, v29);
  uint64_t v30 = a7 + *(int *)(v27 + 36);
  uint64_t v31 = sub_27D7F0();
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);

  return v32(v30, a6, v31);
}

uint64_t sub_5FCDC()
{
  uint64_t result = 0x614473656D656874;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6174614474786574;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 4:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_5FDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_63190(a1, a2);
  *a3 = result;
  return result;
}

void sub_5FDD8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_5FDE4(uint64_t a1)
{
  unint64_t v2 = sub_601D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_5FE20(uint64_t a1)
{
  unint64_t v2 = sub_601D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ThemeCustomizedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_318228);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_601D4();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  long long v25 = *v3;
  *(void *)&long long v26 = v9;
  *((void *)&v26 + 1) = v10;
  LOBYTE(v27) = v11;
  char v31 = 0;
  sub_98F4();
  sub_27E330();
  if (!v2)
  {
    uint64_t v12 = *((void *)v3 + 6);
    char v13 = *((unsigned char *)v3 + 56);
    *(void *)&long long v25 = *((void *)v3 + 5);
    *((void *)&v25 + 1) = v12;
    LOBYTE(v26) = v13;
    char v31 = 1;
    sub_9948();
    sub_27E330();
    int v14 = *((_DWORD *)v3 + 16);
    char v15 = *((unsigned char *)v3 + 68);
    int v16 = *((_DWORD *)v3 + 18);
    char v17 = *((unsigned char *)v3 + 76);
    int v18 = *((_DWORD *)v3 + 20);
    char v19 = *((unsigned char *)v3 + 84);
    char v20 = *((unsigned char *)v3 + 85);
    LOBYTE(v25) = *((unsigned char *)v3 + 60);
    DWORD1(v25) = v14;
    BYTE8(v25) = v15;
    HIDWORD(v25) = v16;
    LOBYTE(v26) = v17;
    DWORD1(v26) = v18;
    BYTE8(v26) = v19;
    BYTE9(v26) = v20;
    char v31 = 2;
    sub_999C();
    sub_27E330();
    long long v21 = *(long long *)((char *)v3 + 104);
    long long v25 = *(long long *)((char *)v3 + 88);
    long long v26 = v21;
    long long v22 = *(long long *)((char *)v3 + 136);
    long long v27 = *(long long *)((char *)v3 + 120);
    long long v28 = v22;
    long long v23 = *(long long *)((char *)v3 + 168);
    long long v29 = *(long long *)((char *)v3 + 152);
    long long v30 = v23;
    char v31 = 3;
    sub_1A1D4();
    sub_27E2C0();
    type metadata accessor for ThemeCustomizedEvent.Model(0);
    LOBYTE(v25) = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v25) = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_601D4()
{
  unint64_t result = qword_318230;
  if (!qword_318230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318230);
  }
  return result;
}

uint64_t ThemeCustomizedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v42 = sub_27D7F0();
  uint64_t v38 = *(void *)(v42 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4E04(&qword_318238);
  uint64_t v40 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ThemeCustomizedEvent.Model(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v45 = a1;
  sub_5900(a1, v13);
  sub_601D4();
  int v44 = v9;
  int v14 = v46;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v45);
  }
  int v46 = v7;
  char v37 = v4;
  uint64_t v15 = v42;
  uint64_t v16 = (uint64_t)v12;
  uint64_t v18 = v40;
  uint64_t v17 = v41;
  char v53 = 0;
  sub_9FA4();
  sub_27E260();
  long long v19 = v48;
  char v20 = v49;
  *(_OWORD *)uint64_t v16 = v47;
  *(_OWORD *)(v16 + 16) = v19;
  *(unsigned char *)(v16 + 32) = v20;
  char v53 = 1;
  sub_9FF8();
  sub_27E260();
  uint64_t v21 = *((void *)&v47 + 1);
  char v22 = v48;
  *(void *)(v16 + 40) = v47;
  *(void *)(v16 + 48) = v21;
  *(unsigned char *)(v16 + 56) = v22;
  char v53 = 2;
  sub_A04C();
  v36[1] = 0;
  sub_27E260();
  uint64_t v23 = v5;
  int v24 = DWORD1(v47);
  char v25 = BYTE8(v47);
  int v26 = HIDWORD(v47);
  char v27 = v48;
  int v28 = DWORD1(v48);
  char v29 = BYTE8(v48);
  char v30 = BYTE9(v48);
  *(unsigned char *)(v16 + 60) = v47;
  *(_DWORD *)(v16 + 64) = v24;
  *(unsigned char *)(v16 + 68) = v25;
  *(_DWORD *)(v16 + 72) = v26;
  *(unsigned char *)(v16 + 76) = v27;
  *(_DWORD *)(v16 + 80) = v28;
  *(unsigned char *)(v16 + 84) = v29;
  *(unsigned char *)(v16 + 85) = v30;
  char v53 = 3;
  sub_1A98C();
  sub_27E1F0();
  long long v31 = v48;
  *(_OWORD *)(v16 + 88) = v47;
  *(_OWORD *)(v16 + 104) = v31;
  long long v32 = v50;
  *(_OWORD *)(v16 + 120) = v49;
  *(_OWORD *)(v16 + 136) = v32;
  long long v33 = v52;
  *(_OWORD *)(v16 + 152) = v51;
  *(_OWORD *)(v16 + 168) = v33;
  LOBYTE(v47) = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  char v34 = v46;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + *(int *)(v10 + 32), v34, v23);
  LOBYTE(v47) = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v44, v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v16 + *(int *)(v10 + 36), v37, v15);
  sub_60920(v16, v39);
  sub_5E94((uint64_t)v45);
  return sub_60984(v16);
}

uint64_t sub_608BC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_60920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThemeCustomizedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_60984(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ThemeCustomizedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_609E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ThemeCustomizedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_609F8(void *a1)
{
  return ThemeCustomizedEvent.Model.encode(to:)(a1);
}

uint64_t sub_60A10@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315630, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3181F8, a1);
}

uint64_t sub_60A48@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315638, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318210, a1);
}

uint64_t sub_60A80@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.optional<A>(_:);
  uint64_t v12 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for ThemeCustomizedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316018);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316020);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316028);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    int v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for ThemeCustomizedEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_61884);
}

uint64_t sub_61884(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316020);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_316028);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for ThemeCustomizedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_61AE0);
}

uint64_t sub_61AE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316018);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316020);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_316028);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_61D34()
{
  sub_61FCC(319, &qword_3160E0, (void (*)(void))sub_9FA4, (void (*)(void))sub_98F4);
  if (v0 <= 0x3F)
  {
    sub_61FCC(319, &qword_3160E8, (void (*)(void))sub_9FF8, (void (*)(void))sub_9948);
    if (v1 <= 0x3F)
    {
      sub_61FCC(319, (unint64_t *)&unk_3160F0, (void (*)(void))sub_A04C, (void (*)(void))sub_999C);
      if (v2 <= 0x3F)
      {
        sub_61FCC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_61FCC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    long long v10 = *(_OWORD *)((char *)a2 + 60);
    *(_OWORD *)(a1 + 70) = *(_OWORD *)((char *)a2 + 70);
    *(_OWORD *)(a1 + 60) = v10;
    uint64_t v11 = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v11;
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      uint64_t v12 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v12;
      uint64_t v13 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v13;
      *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
      *(_DWORD *)(a1 + 156) = *((_DWORD *)a2 + 39);
      *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
      *(_DWORD *)(a1 + 161) = *(_DWORD *)((char *)a2 + 161);
      *(unsigned char *)(a1 + 165) = *((unsigned char *)a2 + 165);
      uint64_t v14 = a2[22];
      *(void *)(a1 + 168) = a2[21];
      *(void *)(a1 + 176) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v16 = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 136) = v16;
      long long v17 = *(_OWORD *)(a2 + 21);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 168) = v17;
      long long v18 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 104) = v18;
    }
    uint64_t v19 = *(int *)(a3 + 32);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = *(int *)(a3 + 36);
    uint64_t v24 = a1 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t destroy for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v9 = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  *(_OWORD *)(a1 + 60) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v10;
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(_DWORD *)(a1 + 161) = *(_DWORD *)(a2 + 161);
    *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
    uint64_t v13 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v14;
    long long v15 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v15;
    long long v16 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v16;
  }
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 36);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  int v6 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v6;
  int v7 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v7;
  int v8 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
  long long v9 = (_OWORD *)(a1 + 88);
  uint64_t v10 = (_OWORD *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v11)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
      int v12 = *(_DWORD *)(a2 + 148);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_DWORD *)(a1 + 148) = v12;
      int v13 = *(_DWORD *)(a2 + 156);
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(_DWORD *)(a1 + 156) = v13;
      *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
      *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
      *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 88);
      long long v16 = *(_OWORD *)(a2 + 104);
      _OWORD *v9 = *v10;
      *(_OWORD *)(a1 + 104) = v16;
      long long v17 = *(_OWORD *)(a2 + 168);
      long long v19 = *(_OWORD *)(a2 + 120);
      long long v18 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v17;
      *(_OWORD *)(a1 + 120) = v19;
      *(_OWORD *)(a1 + 136) = v18;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
    int v14 = *(_DWORD *)(a2 + 148);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_DWORD *)(a1 + 148) = v14;
    int v15 = *(_DWORD *)(a2 + 156);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(_DWORD *)(a1 + 156) = v15;
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
    *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 104);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 104) = v20;
    long long v21 = *(_OWORD *)(a2 + 120);
    long long v22 = *(_OWORD *)(a2 + 136);
    long long v23 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 120) = v21;
    *(_OWORD *)(a1 + 136) = v22;
  }
  uint64_t v24 = *(int *)(a3 + 32);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = *(int *)(a3 + 36);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

uint64_t sub_62898(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 136);
  long long v9 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v9;
  *(_OWORD *)(a1 + 136) = v8;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 120) = v7;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_WORD *)(a1 + 84) = *(_WORD *)(a2 + 84);
  if (!*(void *)(a1 + 96)) {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(a2 + 96);
  if (!v9)
  {
    sub_62898(a1 + 88);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    long long v14 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v14;
    long long v15 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v15;
    goto LABEL_6;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 161) = *(_DWORD *)(a2 + 161);
  *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 36);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_62C28);
}

uint64_t sub_62C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ThemeCustomizedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_62D68);
}

uint64_t sub_62D68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_62E94()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThemeCustomizedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x63050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeCustomizedEvent.Model.CodingKeys()
{
  return &type metadata for ThemeCustomizedEvent.Model.CodingKeys;
}

unint64_t sub_6308C()
{
  unint64_t result = qword_318380;
  if (!qword_318380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318380);
  }
  return result;
}

unint64_t sub_630E4()
{
  unint64_t result = qword_318388;
  if (!qword_318388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318388);
  }
  return result;
}

unint64_t sub_6313C()
{
  unint64_t result = qword_318390;
  if (!qword_318390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318390);
  }
  return result;
}

uint64_t sub_63190(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614473656D656874 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614474786574 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADD90 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t ReadingGoalsDurationData.prevGoalDuration.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ReadingGoalsDurationData.prevGoalDuration.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

BookAnalytics::YearlyGoalsReachedData __swiftcall YearlyGoalsReachedData.init(defaultYearlyReadingGoal:yearlyReadingGoalCount:)(BookAnalytics::DefaultReadingGoal defaultYearlyReadingGoal, Swift::Int64 yearlyReadingGoalCount)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)defaultYearlyReadingGoal;
  *(void *)(v2 + 8) = yearlyReadingGoalCount;
  result.yearlyReadingGoalCount = yearlyReadingGoalCount;
  result.defaultYearlyReadingGoal = defaultYearlyReadingGoal;
  return result;
}

unint64_t sub_6346C()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_634AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_63D4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_634D4(uint64_t a1)
{
  unint64_t v2 = sub_639A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_63510(uint64_t a1)
{
  unint64_t v2 = sub_639A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t YearlyGoalsReachedData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_318398);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[1] = *((void *)v1 + 1);
  sub_5900(a1, a1[3]);
  sub_639A8();
  sub_27E440();
  char v13 = v8;
  char v12 = 0;
  sub_28E98();
  sub_27E330();
  if (!v2)
  {
    char v11 = 1;
    sub_27E350();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t YearlyGoalsReachedData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3183A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_639A8();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    sub_28F40();
    sub_27E260();
    char v9 = v15;
    char v13 = 1;
    uint64_t v10 = sub_27E280();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_63888@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YearlyGoalsReachedData.init(from:)(a1, a2);
}

uint64_t sub_638A0(void *a1)
{
  return YearlyGoalsReachedData.encode(to:)(a1);
}

BOOL _s13BookAnalytics22YearlyGoalsReachedDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = 89;
  if (v2 != 1) {
    uint64_t v5 = 78;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 16718;
  }
  if (v2) {
    unint64_t v7 = 0xE100000000000000;
  }
  else {
    unint64_t v7 = 0xE200000000000000;
  }
  uint64_t v8 = 89;
  if (*(unsigned char *)a2 != 1) {
    uint64_t v8 = 78;
  }
  if (*(unsigned char *)a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 16718;
  }
  if (*(unsigned char *)a2) {
    unint64_t v10 = 0xE100000000000000;
  }
  else {
    unint64_t v10 = 0xE200000000000000;
  }
  if (v6 == v9 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  return v3 == v4;
}

unint64_t sub_639A8()
{
  unint64_t result = qword_3183A0;
  if (!qword_3183A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183A0);
  }
  return result;
}

unint64_t sub_63A00()
{
  unint64_t result = qword_3183B0;
  if (!qword_3183B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183B0);
  }
  return result;
}

unint64_t sub_63A58()
{
  unint64_t result = qword_3183B8;
  if (!qword_3183B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for YearlyGoalsReachedData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for YearlyGoalsReachedData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YearlyGoalsReachedData()
{
  return &type metadata for YearlyGoalsReachedData;
}

unsigned char *storeEnumTagSinglePayload for YearlyGoalsReachedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x63C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YearlyGoalsReachedData.CodingKeys()
{
  return &type metadata for YearlyGoalsReachedData.CodingKeys;
}

unint64_t sub_63C48()
{
  unint64_t result = qword_3183C0;
  if (!qword_3183C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183C0);
  }
  return result;
}

unint64_t sub_63CA0()
{
  unint64_t result = qword_3183C8;
  if (!qword_3183C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183C8);
  }
  return result;
}

unint64_t sub_63CF8()
{
  unint64_t result = qword_3183D0;
  if (!qword_3183D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183D0);
  }
  return result;
}

uint64_t sub_63D4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000000002AE060 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AE0B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *EventReporter.emitAddToCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, id a8, unint64_t a9, unint64_t a10)
{
  char v11 = a6;
  if (a6 >= 3) {
    goto LABEL_14;
  }
  char v12 = a7;
  if (a7 >= 7) {
    goto LABEL_14;
  }
  if (a8)
  {
    unsigned int v18 = [a8 intValue];
    if (a9 >= 4) {
      goto LABEL_14;
    }
  }
  else
  {
    unsigned int v18 = 0;
    if (a9 >= 4) {
      goto LABEL_14;
    }
  }
  unsigned int v30 = v18;
  char v32 = v12;
  if (a10 >= 3)
  {
LABEL_14:
    unint64_t result = (void *)sub_27E390();
    __break(1u);
    return result;
  }
  uint64_t v19 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v19 = result) != 0))
  {
    uint64_t v29 = a1;
    uint64_t v21 = a5;
    uint64_t v22 = v10;
    BOOL v23 = a8 == 0;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = a4;
    *(void *)(v24 + 32) = v21;
    *(unsigned char *)(v24 + 40) = v32;
    *(unsigned char *)(v24 + 41) = v11;
    *(void *)(v24 + 48) = v19;
    *(_DWORD *)(v24 + 56) = v30;
    *(unsigned char *)(v24 + 60) = v23;
    *(unsigned char *)(v24 + 61) = 0x2010004u >> (8 * a9);
    *(unsigned char *)(v24 + 62) = a10;
    *(void *)(v24 + 64) = a2;
    *(void *)(v24 + 72) = a3;
    *(void *)(v24 + 80) = 0;
    *(void *)(v24 + 88) = 0;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_68D54;
    *(void *)(v25 + 24) = v24;
    id v26 = v29;
    swift_bridgeObjectRetain();
    id v27 = v22;
    swift_bridgeObjectRetain();
    id v28 = v19;
    swift_retain();
    sub_27D730();

    swift_release();
    return (void *)swift_release();
  }
  return result;
}

id EventReporter.emitAddToCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7, uint64_t a8, char *a9, char *a10)
{
  char v17 = *a6;
  char v18 = *a7;
  char v29 = *a10;
  char v30 = *a9;
  uint64_t v19 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v19 = result) != 0))
  {
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    uint64_t v24 = v21;
    *(void *)(v21 + 16) = v10;
    *(void *)(v21 + 24) = a4;
    *(void *)(v21 + 32) = v23;
    *(unsigned char *)(v21 + 40) = v18;
    *(unsigned char *)(v21 + 41) = v17;
    *(void *)(v21 + 48) = v19;
    *(_DWORD *)(v21 + 56) = a8;
    *(unsigned char *)(v21 + 60) = BYTE4(a8) & 1;
    *(unsigned char *)(v21 + 61) = v30;
    *(unsigned char *)(v21 + 62) = v29;
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 72) = a3;
    *(void *)(v21 + 80) = 0;
    *(void *)(v21 + 88) = 0;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_68D54;
    *(void *)(v25 + 24) = v24;
    id v26 = a1;
    swift_bridgeObjectRetain();
    id v27 = v10;
    swift_bridgeObjectRetain();
    id v28 = v19;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_64264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6, uint64_t a7, unint64_t a8, unsigned __int8 a9, unsigned __int8 a10, long long a11, long long a12)
{
  unsigned __int8 v23 = a5;
  unsigned __int8 v22 = a6;
  unsigned __int8 v21 = a9;
  unsigned __int8 v20 = a10;
  sub_102DC0(a3, a4, &v23, &v22, a7, a8 | ((HIDWORD(a8) & 1) << 32), &v21, &v20, (uint64_t)&v24);
  sub_4E04(&qword_319FE0);
  uint64_t v12 = sub_27D380();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_285930;
  uint64_t v16 = enum case for DataEventTrait.onlyOnce(_:);
  char v17 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104);
  v17(v15 + v14, enum case for DataEventTrait.onlyOnce(_:), v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v24 = a11;
  long long v25 = a12;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  v17(v18 + v14, v16, v12);
  sub_69A78();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for AddToCollectionEvent(0);
  sub_69C20(&qword_318450, (void (*)(uint64_t))type metadata accessor for AddToCollectionEvent);
  long long v24 = 0u;
  long long v25 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v24);
}

id EventReporter.emitAddToCollectionEvent(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v8 = a4[3];
  v19[2] = a4[2];
  v19[3] = v8;
  long long v9 = a4[5];
  v19[4] = a4[4];
  v19[5] = v9;
  long long v10 = a4[1];
  v19[0] = *a4;
  v19[1] = v10;
  char v11 = a1;
  if (a1 || (result = sub_103814(), (char v11 = result) != 0))
  {
    uint64_t v13 = swift_allocObject();
    long long v14 = a4[3];
    *(_OWORD *)(v13 + 48) = a4[2];
    *(_OWORD *)(v13 + 64) = v14;
    long long v15 = a4[5];
    *(_OWORD *)(v13 + 80) = a4[4];
    *(_OWORD *)(v13 + 96) = v15;
    long long v16 = a4[1];
    *(_OWORD *)(v13 + 16) = *a4;
    *(_OWORD *)(v13 + 32) = v16;
    *(void *)(v13 + 112) = a2;
    *(void *)(v13 + 120) = a3;
    *(void *)(v13 + 128) = 0;
    *(void *)(v13 + 136) = 0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_68EA0;
    *(void *)(v17 + 24) = v13;
    id v18 = a1;
    swift_bridgeObjectRetain();
    sub_68EB8((uint64_t)v19);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_646EC(uint64_t a1, long long *a2)
{
  long long v2 = a2[3];
  long long v15 = a2[2];
  long long v16 = v2;
  long long v3 = a2[5];
  long long v17 = a2[4];
  long long v18 = v3;
  long long v4 = a2[1];
  long long v13 = *a2;
  long long v14 = v4;
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  long long v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_285930;
  v10(v11 + v7, v9, v5);
  sub_69A78();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for AddToCollectionEvent(0);
  sub_69C20(&qword_318450, (void (*)(uint64_t))type metadata accessor for AddToCollectionEvent);
  long long v13 = 0u;
  long long v14 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v13);
}

id EventReporter.emitCollectionAddEvent(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v8 = result) != 0))
  {
    long long v10 = (void *)swift_allocObject();
    void v10[2] = a4;
    v10[3] = a2;
    void v10[4] = a3;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_68F10;
    *(void *)(v11 + 24) = v10;
    id v12 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_64A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t result = BARoundIntegerToSignificantFigures(a2, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *(void *)&long long v12 = a3;
    *((void *)&v12 + 1) = a4;
    LODWORD(v13) = result;
    sub_4E04(&qword_319FE0);
    uint64_t v8 = sub_27D380();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, enum case for DataEventTrait.onlyOnce(_:), v8);
    sub_69BCC();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CollectionAddEvent(0);
    sub_69C20(&qword_318448, (void (*)(uint64_t))type metadata accessor for CollectionAddEvent);
    long long v12 = 0u;
    long long v13 = 0u;
    sub_27D2F0();
    return sub_6991C((uint64_t)&v12);
  }
  __break(1u);
  return result;
}

uint64_t EventReporter.emitCollectionDescriptionEvent(using:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_68F1C;
  *(void *)(v6 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_64E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v8 = a2;
  *((void *)&v8 + 1) = a3;
  long long v9 = 0uLL;
  sub_4E04(&qword_319FE0);
  uint64_t v3 = sub_27D380();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v4 + 104))(v6 + v5, enum case for DataEventTrait.onlyOnce(_:), v3);
  sub_69A78();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for CollectionDescriptionEvent(0);
  sub_69C20(&qword_318440, (void (*)(uint64_t))type metadata accessor for CollectionDescriptionEvent);
  long long v8 = 0u;
  long long v9 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v8);
}

id EventReporter.emitCollectionRemoveEvent(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v8 = a1;
  if (a1 || (result = sub_103814(), (long long v8 = result) != 0))
  {
    unint64_t v10 = (void *)swift_allocObject();
    void v10[2] = a4;
    v10[3] = a2;
    void v10[4] = a3;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_68F24;
    *(void *)(v11 + 24) = v10;
    id v12 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_65230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t result = BARoundIntegerToSignificantFigures(a2, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *(void *)&long long v12 = a3;
    *((void *)&v12 + 1) = a4;
    LODWORD(v13) = result;
    sub_4E04(&qword_319FE0);
    uint64_t v8 = sub_27D380();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, enum case for DataEventTrait.onlyOnce(_:), v8);
    sub_69BCC();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CollectionRemoveEvent(0);
    sub_69C20(&qword_318438, (void (*)(uint64_t))type metadata accessor for CollectionRemoveEvent);
    long long v12 = 0u;
    long long v13 = 0u;
    sub_27D2F0();
    return sub_6991C((uint64_t)&v12);
  }
  __break(1u);
  return result;
}

id EventReporter.emitLibraryDataEditEvent(using:with:for:result:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v8 = result) != 0))
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = v8;
    *(void *)(v10 + 32) = a3;
    *(unsigned char *)(v10 + 40) = a4 & 1;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_68F34;
    *(void *)(v11 + 24) = v10;
    id v12 = a1;
    swift_bridgeObjectRetain();
    id v13 = v8;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_65684(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, char a5)
{
  id v8 = a3;
  uint64_t v9 = sub_68FB0(a2);

  if (a4 >= 4)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    *(void *)&v16[0] = v9;
    if (a5) {
      char v10 = 1;
    }
    else {
      char v10 = 2;
    }
    BYTE8(v16[0]) = a4;
    BYTE9(v16[0]) = v10;
    sub_4E04(&qword_319FE0);
    uint64_t v11 = sub_27D380();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, enum case for DataEventTrait.onlyOnce(_:), v11);
    sub_69B78();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for LibraryDataEditEvent(0);
    sub_69C20(&qword_318428, (void (*)(uint64_t))type metadata accessor for LibraryDataEditEvent);
    memset(v16, 0, sizeof(v16));
    sub_27D2F0();
    return sub_6991C((uint64_t)v16);
  }
  return result;
}

void *EventReporter.emitMarkAsFinishedEvent(using:for:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, id a6, unint64_t a7, unint64_t a8)
{
  char v9 = a4;
  if (a4 >= 3) {
    goto LABEL_14;
  }
  char v10 = a5;
  if (a5 >= 7) {
    goto LABEL_14;
  }
  if (a6)
  {
    unsigned int v17 = [a6 intValue];
    if (a7 >= 4) {
      goto LABEL_14;
    }
  }
  else
  {
    unsigned int v17 = 0;
    if (a7 >= 4) {
      goto LABEL_14;
    }
  }
  unsigned int v28 = v17;
  if (a8 >= 3)
  {
LABEL_14:
    uint64_t result = (void *)sub_27E390();
    __break(1u);
    return result;
  }
  long long v18 = a1;
  if (a1 || (result = sub_103814(), (long long v18 = result) != 0))
  {
    id v27 = a1;
    uint64_t v20 = a3;
    BOOL v21 = a6 == 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v8;
    *(void *)(v22 + 24) = a2;
    *(void *)(v22 + 32) = v20;
    *(unsigned char *)(v22 + 40) = v10;
    *(unsigned char *)(v22 + 41) = v9;
    *(void *)(v22 + 48) = v18;
    *(_DWORD *)(v22 + 56) = v28;
    *(unsigned char *)(v22 + 60) = v21;
    *(unsigned char *)(v22 + 61) = 0x2010004u >> (8 * a7);
    *(unsigned char *)(v22 + 62) = a8;
    *(unsigned char *)(v22 + 63) = 2;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_68F4C;
    *(void *)(v23 + 24) = v22;
    id v24 = v27;
    id v25 = v8;
    swift_bridgeObjectRetain();
    id v26 = v18;
    swift_retain();
    sub_27D730();

    swift_release();
    return (void *)swift_release();
  }
  return result;
}

id EventReporter.emitMarkAsFinishedEvent(using:for:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:isFinishedDateSet:)(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t a6, char *a7, char *a8, char a9)
{
  char v14 = *a4;
  char v15 = *a5;
  char v25 = *a7;
  char v16 = *a8;
  unsigned int v17 = a1;
  if (a1 || (result = sub_103814(), (unsigned int v17 = result) != 0))
  {
    uint64_t v19 = a3;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v9;
    *(void *)(v20 + 24) = a2;
    *(void *)(v20 + 32) = v19;
    *(unsigned char *)(v20 + 40) = v15;
    *(unsigned char *)(v20 + 41) = v14;
    *(void *)(v20 + 48) = v17;
    *(_DWORD *)(v20 + 56) = a6;
    *(unsigned char *)(v20 + 60) = BYTE4(a6) & 1;
    *(unsigned char *)(v20 + 61) = v25;
    *(unsigned char *)(v20 + 62) = v16;
    *(unsigned char *)(v20 + 63) = a9;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_68F4C;
    *(void *)(v21 + 24) = v20;
    id v22 = a1;
    id v23 = v9;
    swift_bridgeObjectRetain();
    id v24 = v17;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_65DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6, uint64_t a7, unint64_t a8, unsigned __int8 a9, unsigned __int8 a10, char a11)
{
  unsigned __int8 v56 = a5;
  unsigned __int8 v55 = a6;
  unsigned __int8 v54 = a9;
  unsigned __int8 v53 = a10;
  sub_102DC0(a3, a4, &v56, &v55, a7, a8 | ((HIDWORD(a8) & 1) << 32), &v54, &v53, (uint64_t)&v57);
  uint64_t v12 = *((void *)&v57 + 1);
  uint64_t v11 = v57;
  char v13 = v58;
  uint64_t v14 = *((void *)&v58 + 1);
  uint64_t v15 = v59;
  uint64_t v16 = v60;
  uint64_t v17 = v61;
  char v18 = v62;
  char v19 = v63;
  int v20 = v64;
  char v21 = v65;
  int v22 = v66;
  char v23 = v67;
  v24.i32[0] = v68;
  int16x8_t v25 = (int16x8_t)vmovl_u8(v24);
  char v26 = v69;
  uint64_t v27 = v70;
  uint64_t v28 = v71;
  if (a11 == 2)
  {
    uint64_t v29 = enum case for DataEventTrait.onlyOnce(_:);
  }
  else
  {
    LOBYTE(v57) = a11;
    int v43 = v66;
    char v44 = v65;
    char v52 = v69;
    uint64_t v51 = v11;
    char v50 = v58;
    uint64_t v48 = v60;
    uint64_t v49 = *((void *)&v58 + 1);
    char v46 = v63;
    char v47 = v62;
    int v45 = v64;
    char v42 = v67;
    int16x8_t v41 = v25;
    uint64_t v40 = v70;
    sub_4E04(&qword_319FE0);
    uint64_t v30 = sub_27D380();
    uint64_t v31 = *(void *)(v30 - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_285930;
    unint64_t v34 = v33 + v32;
    uint64_t v29 = enum case for DataEventTrait.onlyOnce(_:);
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v34, enum case for DataEventTrait.onlyOnce(_:), v30);
    sub_69AD0();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    uint64_t v27 = v40;
    int16x8_t v25 = v41;
    char v23 = v42;
    int v22 = v43;
    char v21 = v44;
    int v20 = v45;
    char v19 = v46;
    char v18 = v47;
    uint64_t v16 = v48;
    uint64_t v14 = v49;
    char v13 = v50;
    uint64_t v11 = v51;
    char v26 = v52;
  }
  *(void *)&long long v57 = v11;
  *((void *)&v57 + 1) = v12;
  LOBYTE(v58) = v13;
  *((void *)&v58 + 1) = v14;
  uint64_t v59 = v15;
  uint64_t v60 = v16;
  uint64_t v61 = v17;
  char v62 = v18;
  char v63 = v19;
  int v64 = v20;
  char v65 = v21;
  int v66 = v22;
  char v67 = v23;
  __int32 v68 = vmovn_s16(v25).u32[0];
  char v69 = v26;
  uint64_t v70 = v27;
  uint64_t v71 = v28;
  sub_4E04(&qword_319FE0);
  uint64_t v35 = sub_27D380();
  uint64_t v36 = *(void *)(v35 - 8);
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 104))(v38 + v37, v29, v35);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MarkAsFinishedEvent(0);
  sub_69C20(&qword_318410, (void (*)(uint64_t))type metadata accessor for MarkAsFinishedEvent);
  long long v57 = 0u;
  long long v58 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v57);
}

id EventReporter.emitMarkAsFinishedEvent(using:with:markedData:)(void *a1, _OWORD *a2, char *a3)
{
  long long v5 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v5;
  long long v6 = a2[5];
  void v17[4] = a2[4];
  v17[5] = v6;
  long long v7 = a2[1];
  v17[0] = *a2;
  v17[1] = v7;
  id v8 = a1;
  char v9 = *a3;
  if (a1 || (result = sub_103814(), (id v8 = result) != 0))
  {
    uint64_t v11 = swift_allocObject();
    long long v12 = a2[3];
    *(_OWORD *)(v11 + 56) = a2[2];
    *(_OWORD *)(v11 + 72) = v12;
    long long v13 = a2[5];
    *(_OWORD *)(v11 + 88) = a2[4];
    *(_OWORD *)(v11 + 104) = v13;
    long long v14 = a2[1];
    *(_OWORD *)(v11 + 24) = *a2;
    *(unsigned char *)(v11 + 16) = v9;
    *(_OWORD *)(v11 + 40) = v14;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_692F8;
    *(void *)(v15 + 24) = v11;
    id v16 = a1;
    sub_68EB8((uint64_t)v17);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_663A4(uint64_t a1, char a2, long long *a3)
{
  if (a2 == 3)
  {
    uint64_t v4 = enum case for DataEventTrait.onlyOnce(_:);
  }
  else
  {
    LOBYTE(v17) = a2;
    sub_4E04(&qword_319FE0);
    uint64_t v5 = sub_27D380();
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_285930;
    uint64_t v4 = enum case for DataEventTrait.onlyOnce(_:);
    (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
    sub_69AD0();
    sub_27D2E0();
    swift_bridgeObjectRelease();
  }
  long long v9 = a3[3];
  long long v19 = a3[2];
  long long v20 = v9;
  long long v10 = a3[5];
  long long v21 = a3[4];
  long long v22 = v10;
  long long v11 = a3[1];
  long long v17 = *a3;
  long long v18 = v11;
  sub_4E04(&qword_319FE0);
  uint64_t v12 = sub_27D380();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104))(v15 + v14, v4, v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for MarkAsFinishedEvent(0);
  sub_69C20(&qword_318410, (void (*)(uint64_t))type metadata accessor for MarkAsFinishedEvent);
  long long v17 = 0u;
  long long v18 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v17);
}

void *EventReporter.emitRemoveFromCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, id a8, unint64_t a9, unint64_t a10)
{
  char v11 = a6;
  if (a6 >= 3) {
    goto LABEL_14;
  }
  char v12 = a7;
  if (a7 >= 7) {
    goto LABEL_14;
  }
  if (a8)
  {
    unsigned int v18 = [a8 intValue];
    if (a9 >= 4) {
      goto LABEL_14;
    }
  }
  else
  {
    unsigned int v18 = 0;
    if (a9 >= 4) {
      goto LABEL_14;
    }
  }
  unsigned int v30 = v18;
  char v32 = v12;
  if (a10 >= 3)
  {
LABEL_14:
    id result = (void *)sub_27E390();
    __break(1u);
    return result;
  }
  long long v19 = a1;
  if (a1 || (result = sub_103814(), (long long v19 = result) != 0))
  {
    uint64_t v29 = a1;
    uint64_t v21 = a5;
    long long v22 = v10;
    BOOL v23 = a8 == 0;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = a4;
    *(void *)(v24 + 32) = v21;
    *(unsigned char *)(v24 + 40) = v32;
    *(unsigned char *)(v24 + 41) = v11;
    *(void *)(v24 + 48) = v19;
    *(_DWORD *)(v24 + 56) = v30;
    *(unsigned char *)(v24 + 60) = v23;
    *(unsigned char *)(v24 + 61) = 0x2010004u >> (8 * a9);
    *(unsigned char *)(v24 + 62) = a10;
    *(void *)(v24 + 64) = a2;
    *(void *)(v24 + 72) = a3;
    *(void *)(v24 + 80) = 0;
    *(void *)(v24 + 88) = 0;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_69308;
    *(void *)(v25 + 24) = v24;
    id v26 = v29;
    swift_bridgeObjectRetain();
    id v27 = v22;
    swift_bridgeObjectRetain();
    id v28 = v19;
    swift_retain();
    sub_27D730();

    swift_release();
    return (void *)swift_release();
  }
  return result;
}

id EventReporter.emitRemoveFromCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7, uint64_t a8, char *a9, char *a10)
{
  char v17 = *a6;
  char v18 = *a7;
  char v29 = *a10;
  char v30 = *a9;
  long long v19 = a1;
  if (a1 || (result = sub_103814(), (long long v19 = result) != 0))
  {
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    uint64_t v24 = v21;
    *(void *)(v21 + 16) = v10;
    *(void *)(v21 + 24) = a4;
    *(void *)(v21 + 32) = v23;
    *(unsigned char *)(v21 + 40) = v18;
    *(unsigned char *)(v21 + 41) = v17;
    *(void *)(v21 + 48) = v19;
    *(_DWORD *)(v21 + 56) = a8;
    *(unsigned char *)(v21 + 60) = BYTE4(a8) & 1;
    *(unsigned char *)(v21 + 61) = v30;
    *(unsigned char *)(v21 + 62) = v29;
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 72) = a3;
    *(void *)(v21 + 80) = 0;
    *(void *)(v21 + 88) = 0;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_69308;
    *(void *)(v25 + 24) = v24;
    id v26 = a1;
    swift_bridgeObjectRetain();
    id v27 = v10;
    swift_bridgeObjectRetain();
    id v28 = v19;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_66A90(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void (*a11)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  uint64_t v14 = sub_27DDB0();
  uint64_t v16 = v15;
  uint64_t v17 = sub_27DDB0();
  uint64_t v19 = v18;
  id v20 = a3;
  id v21 = a8;
  id v22 = a1;
  a11(a3, v14, v16, v17, v19, a6, a7, a8, a9, a10);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_66B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6, uint64_t a7, unint64_t a8, unsigned __int8 a9, unsigned __int8 a10, long long a11, long long a12)
{
  unsigned __int8 v23 = a5;
  unsigned __int8 v22 = a6;
  unsigned __int8 v21 = a9;
  unsigned __int8 v20 = a10;
  sub_102DC0(a3, a4, &v23, &v22, a7, a8 | ((HIDWORD(a8) & 1) << 32), &v21, &v20, (uint64_t)&v24);
  sub_4E04(&qword_319FE0);
  uint64_t v12 = sub_27D380();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_285930;
  uint64_t v16 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104);
  v17(v15 + v14, enum case for DataEventTrait.onlyOnce(_:), v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v24 = a11;
  long long v25 = a12;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  v17(v18 + v14, v16, v12);
  sub_69A78();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for RemoveFromCollectionEvent(0);
  sub_69C20(&qword_318408, (void (*)(uint64_t))type metadata accessor for RemoveFromCollectionEvent);
  long long v24 = 0u;
  long long v25 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v24);
}

id EventReporter.emitRemoveFromCollectionEvent(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v8 = a4[3];
  v19[2] = a4[2];
  v19[3] = v8;
  long long v9 = a4[5];
  v19[4] = a4[4];
  v19[5] = v9;
  long long v10 = a4[1];
  v19[0] = *a4;
  v19[1] = v10;
  char v11 = a1;
  if (a1 || (result = sub_103814(), (char v11 = result) != 0))
  {
    uint64_t v13 = swift_allocObject();
    long long v14 = a4[3];
    *(_OWORD *)(v13 + 48) = a4[2];
    *(_OWORD *)(v13 + 64) = v14;
    long long v15 = a4[5];
    *(_OWORD *)(v13 + 80) = a4[4];
    *(_OWORD *)(v13 + 96) = v15;
    long long v16 = a4[1];
    *(_OWORD *)(v13 + 16) = *a4;
    *(_OWORD *)(v13 + 32) = v16;
    *(void *)(v13 + 112) = a2;
    *(void *)(v13 + 120) = a3;
    *(void *)(v13 + 128) = 0;
    *(void *)(v13 + 136) = 0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_6950C;
    *(void *)(v17 + 24) = v13;
    id v18 = a1;
    swift_bridgeObjectRetain();
    sub_68EB8((uint64_t)v19);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_67018(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(void *, uint64_t, uint64_t, id))
{
  uint64_t v10 = sub_27DDB0();
  uint64_t v12 = v11;
  id v13 = a3;
  id v14 = a5;
  id v15 = a1;
  a6(a3, v10, v12, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_670BC(uint64_t a1, long long *a2)
{
  long long v2 = a2[3];
  long long v15 = a2[2];
  long long v16 = v2;
  long long v3 = a2[5];
  long long v17 = a2[4];
  long long v18 = v3;
  long long v4 = a2[1];
  long long v13 = *a2;
  long long v14 = v4;
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_285930;
  v10(v11 + v7, v9, v5);
  sub_69A78();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for RemoveFromCollectionEvent(0);
  sub_69C20(&qword_318408, (void (*)(uint64_t))type metadata accessor for RemoveFromCollectionEvent);
  long long v13 = 0u;
  long long v14 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v13);
}

uint64_t EventReporter.emitRemoveFromWantListEvent(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = a3;
  void v8[5] = a4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_6952C;
  *(void *)(v9 + 24) = v8;
  id v10 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_673F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  NSString v9 = sub_27DDA0();
  id v10 = [Strong contentPrivateIDForContentID:v9];

  swift_unknownObjectRelease();
  if (!v10)
  {
    Strong = 0;
LABEL_5:
    unint64_t v12 = 0xE000000000000000;
    goto LABEL_6;
  }
  Strong = (void *)sub_27DDB0();
  unint64_t v12 = v11;

LABEL_6:
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13
    && (long long v14 = (void *)v13,
        NSString v15 = sub_27DDA0(),
        id v16 = [v14 contentUserIDForContentID:v15],
        v15,
        swift_unknownObjectRelease(),
        v16))
  {
    uint64_t v17 = sub_27DDB0();
    unint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  if (a5 >= 7)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    sub_4E04(&qword_3183E0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_285930;
    *(void *)(v20 + 32) = Strong;
    *(void *)(v20 + 40) = v12;
    *(void *)(v20 + 48) = v17;
    *(void *)(v20 + 56) = v19;
    *(unsigned char *)(v20 + 64) = a5;
    *(void *)(v20 + 72) = a3;
    *(void *)(v20 + 80) = a4;
    *(void *)&v29[0] = v20;
    sub_4E04(&qword_319FE0);
    uint64_t v21 = sub_27D380();
    uint64_t v22 = *(void *)(v21 - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_285930;
    uint64_t v25 = enum case for DataEventTrait.onlyOnce(_:);
    id v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 104);
    v26(v24 + v23, enum case for DataEventTrait.onlyOnce(_:), v21);
    sub_699D0();
    swift_bridgeObjectRetain();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_285930;
    v26(v27 + v23, v25, v21);
    sub_69A24();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    type metadata accessor for RemoveFromWantListEvent(0);
    sub_69C20(&qword_3183F8, (void (*)(uint64_t))type metadata accessor for RemoveFromWantListEvent);
    memset(v29, 0, sizeof(v29));
    sub_27D2F0();
    return sub_6991C((uint64_t)v29);
  }
  return result;
}

uint64_t EventReporter.emitRemoveFromWantListEvent(using:with:)()
{
  sub_DF4A4((uint64_t)v6);
  uint64_t v0 = (_OWORD *)swift_allocObject();
  long long v1 = v6[3];
  v0[3] = v6[2];
  v0[4] = v1;
  long long v2 = v6[5];
  v0[5] = v6[4];
  v0[6] = v2;
  long long v3 = v6[1];
  v0[1] = v6[0];
  v0[2] = v3;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_6953C;
  *(void *)(v4 + 24) = v0;
  sub_68EB8((uint64_t)v6);
  swift_retain();
  sub_27D730();
  swift_release();
  swift_release();
  return sub_6957C((uint64_t)v6);
}

uint64_t EventReporter.emitRemoveFromWantListEvent(using:with:)(uint64_t a1, _OWORD *a2)
{
  long long v3 = a2[3];
  void v12[2] = a2[2];
  v12[3] = v3;
  long long v4 = a2[5];
  v12[4] = a2[4];
  v12[5] = v4;
  long long v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  uint64_t v6 = (_OWORD *)swift_allocObject();
  long long v7 = a2[3];
  v6[3] = a2[2];
  void v6[4] = v7;
  long long v8 = a2[5];
  v6[5] = a2[4];
  _OWORD v6[6] = v8;
  long long v9 = a2[1];
  v6[1] = *a2;
  v6[2] = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_69D7C;
  *(void *)(v10 + 24) = v6;
  sub_68EB8((uint64_t)v12);
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_67BB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v5 = a2[6];
  char v6 = *((unsigned char *)a2 + 16);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  sub_4E04(&qword_3183E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  *(void *)(v9 + 32) = v2;
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  *(unsigned char *)(v9 + 64) = v6;
  *(void *)(v9 + 72) = v7;
  *(void *)(v9 + 80) = v8;
  *(void *)&v18[0] = v9;
  sub_4E04(&qword_319FE0);
  uint64_t v10 = sub_27D380();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  uint64_t v14 = enum case for DataEventTrait.onlyOnce(_:);
  NSString v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 104);
  v15(v13 + v12, enum case for DataEventTrait.onlyOnce(_:), v10);
  sub_699D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_285930;
  v15(v16 + v12, v14, v10);
  sub_69A24();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for RemoveFromWantListEvent(0);
  sub_69C20(&qword_3183F8, (void (*)(uint64_t))type metadata accessor for RemoveFromWantListEvent);
  memset(v18, 0, sizeof(v18));
  sub_27D2F0();
  return sub_6991C((uint64_t)v18);
}

id EventReporter.emitRemoveFromWantToReadEvent(using:for:)(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1;
  if (a1 || (result = sub_103814(), (char v6 = result) != 0))
  {
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = a2;
    void v8[4] = a3;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_695E0;
    *(void *)(v9 + 24) = v8;
    id v10 = a1;
    id v11 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_67F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  NSString v7 = sub_27DDA0();
  id v8 = [Strong contentPrivateIDForContentID:v7];

  swift_unknownObjectRelease();
  if (!v8)
  {
    Strong = 0;
LABEL_5:
    unint64_t v10 = 0xE000000000000000;
    goto LABEL_6;
  }
  Strong = (void *)sub_27DDB0();
  unint64_t v10 = v9;

LABEL_6:
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11
    && (unint64_t v12 = (void *)v11,
        NSString v13 = sub_27DDA0(),
        id v14 = [v12 contentUserIDForContentID:v13],
        v13,
        swift_unknownObjectRelease(),
        v14))
  {
    uint64_t v15 = sub_27DDB0();
    unint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  sub_4E04(&qword_3183E0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  *(void *)(v18 + 32) = Strong;
  *(void *)(v18 + 40) = v10;
  *(void *)(v18 + 48) = v15;
  *(void *)(v18 + 56) = v17;
  *(unsigned char *)(v18 + 64) = 0;
  *(void *)(v18 + 72) = a3;
  *(void *)(v18 + 80) = a4;
  *(void *)&v27[0] = v18;
  sub_4E04(&qword_319FE0);
  uint64_t v19 = sub_27D380();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_285930;
  uint64_t v23 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 104);
  v24(v22 + v21, enum case for DataEventTrait.onlyOnce(_:), v19);
  sub_699D0();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_285930;
  v24(v25 + v21, v23, v19);
  sub_69A24();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for RemoveFromWantListEvent(0);
  sub_69C20(&qword_3183F8, (void (*)(uint64_t))type metadata accessor for RemoveFromWantListEvent);
  memset(v27, 0, sizeof(v27));
  sub_27D2F0();
  return sub_6991C((uint64_t)v27);
}

void *EventReporter.emitWantListAddEvent(using:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, id a6, unint64_t a7, unint64_t a8)
{
  char v9 = a4;
  if (a4 >= 3) {
    goto LABEL_14;
  }
  char v10 = a5;
  if (a5 >= 7) {
    goto LABEL_14;
  }
  if (a6)
  {
    unsigned int v17 = [a6 intValue];
    if (a7 >= 4) {
      goto LABEL_14;
    }
  }
  else
  {
    unsigned int v17 = 0;
    if (a7 >= 4) {
      goto LABEL_14;
    }
  }
  unsigned int v28 = v17;
  if (a8 >= 3)
  {
LABEL_14:
    id result = (void *)sub_27E390();
    __break(1u);
    return result;
  }
  uint64_t v18 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v18 = result) != 0))
  {
    uint64_t v27 = a1;
    uint64_t v20 = a3;
    BOOL v21 = a6 == 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v8;
    *(void *)(v22 + 24) = a2;
    *(void *)(v22 + 32) = v20;
    *(unsigned char *)(v22 + 40) = v10;
    *(unsigned char *)(v22 + 41) = v9;
    *(void *)(v22 + 48) = v18;
    *(_DWORD *)(v22 + 56) = v28;
    *(unsigned char *)(v22 + 60) = v21;
    *(unsigned char *)(v22 + 61) = 0x2010004u >> (8 * a7);
    *(unsigned char *)(v22 + 62) = a8;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_695F4;
    *(void *)(v23 + 24) = v22;
    id v24 = v27;
    id v25 = v8;
    swift_bridgeObjectRetain();
    id v26 = v18;
    swift_retain();
    sub_27D730();

    swift_release();
    return (void *)swift_release();
  }
  return result;
}

id EventReporter.emitWantListAddEvent(using:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t a6, char *a7, char *a8)
{
  char v13 = *a4;
  char v14 = *a5;
  char v15 = *a7;
  char v16 = *a8;
  unsigned int v17 = a1;
  if (a1 || (result = sub_103814(), (unsigned int v17 = result) != 0))
  {
    uint64_t v19 = swift_allocObject();
    char v20 = v15;
    uint64_t v21 = a3;
    uint64_t v22 = v19;
    *(void *)(v19 + 16) = v8;
    *(void *)(v19 + 24) = a2;
    *(void *)(v19 + 32) = v21;
    *(unsigned char *)(v19 + 40) = v14;
    *(unsigned char *)(v19 + 41) = v13;
    *(void *)(v19 + 48) = v17;
    *(_DWORD *)(v19 + 56) = a6;
    *(unsigned char *)(v19 + 60) = BYTE4(a6) & 1;
    *(unsigned char *)(v19 + 61) = v20;
    *(unsigned char *)(v19 + 62) = v16;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_695F4;
    *(void *)(v23 + 24) = v22;
    id v24 = a1;
    id v25 = v8;
    swift_bridgeObjectRetain();
    id v26 = v17;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_686BC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void (*a10)(void *, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  uint64_t v14 = sub_27DDB0();
  uint64_t v16 = v15;
  id v17 = a3;
  id v18 = a7;
  id v19 = a1;
  a10(a3, v14, v16, a5, a6, a7, a8, a9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_68788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6, uint64_t a7, unint64_t a8, unsigned __int8 a9, unsigned __int8 a10)
{
  unsigned __int8 v18 = a5;
  unsigned __int8 v17 = a6;
  unsigned __int8 v16 = a9;
  unsigned __int8 v15 = a10;
  sub_102DC0(a3, a4, &v18, &v17, a7, a8 | ((HIDWORD(a8) & 1) << 32), &v16, &v15, (uint64_t)v19);
  sub_4E04(&qword_319FE0);
  uint64_t v10 = sub_27D380();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for DataEventTrait.onlyOnce(_:), v10);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WantListAddEvent(0);
  sub_69C20(&qword_3183D8, (void (*)(uint64_t))type metadata accessor for WantListAddEvent);
  memset(v19, 0, sizeof(v19));
  sub_27D2F0();
  return sub_6991C((uint64_t)v19);
}

id EventReporter.emitWantListAddEvent(using:with:)(void *a1, _OWORD *a2)
{
  long long v4 = a2[3];
  _OWORD v15[2] = a2[2];
  v15[3] = v4;
  long long v5 = a2[5];
  v15[4] = a2[4];
  v15[5] = v5;
  long long v6 = a2[1];
  v15[0] = *a2;
  v15[1] = v6;
  NSString v7 = a1;
  if (a1 || (result = sub_103814(), (NSString v7 = result) != 0))
  {
    char v9 = (_OWORD *)swift_allocObject();
    long long v10 = a2[3];
    v9[3] = a2[2];
    v9[4] = v10;
    long long v11 = a2[5];
    v9[5] = a2[4];
    v9[6] = v11;
    long long v12 = a2[1];
    v9[1] = *a2;
    void v9[2] = v12;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_697B4;
    *(void *)(v13 + 24) = v9;
    id v14 = a1;
    sub_68EB8((uint64_t)v15);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_68BA0(uint64_t a1, long long *a2)
{
  long long v2 = a2[3];
  long long v12 = a2[2];
  long long v13 = v2;
  long long v3 = a2[5];
  long long v14 = a2[4];
  long long v15 = v3;
  long long v4 = a2[1];
  long long v10 = *a2;
  long long v11 = v4;
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for WantListAddEvent(0);
  sub_69C20(&qword_3183D8, (void (*)(uint64_t))type metadata accessor for WantListAddEvent);
  long long v10 = 0u;
  long long v11 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v10);
}

uint64_t sub_68D54(uint64_t a1)
{
  return sub_6937C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, unint64_t, __int16, void, void, void, void))sub_64264);
}

uint64_t sub_68D6C(uint64_t a1)
{
  return sub_26DE00(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t _s13BookAnalytics13EventReporterC019emitAddToCollectionC05using3for4withyAA9BATrackerCSg_SSAA18BridgedContentDataCtF_0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_DF4A4((uint64_t)v14);
  id v6 = a1;
  if (a1 || (id v6 = sub_103814()) != 0)
  {
    uint64_t v7 = swift_allocObject();
    long long v8 = v14[3];
    *(_OWORD *)(v7 + 48) = v14[2];
    *(_OWORD *)(v7 + 64) = v8;
    long long v9 = v14[5];
    *(_OWORD *)(v7 + 80) = v14[4];
    *(_OWORD *)(v7 + 96) = v9;
    long long v10 = v14[1];
    *(_OWORD *)(v7 + 16) = v14[0];
    *(_OWORD *)(v7 + 32) = v10;
    *(void *)(v7 + 112) = a2;
    *(void *)(v7 + 120) = a3;
    *(void *)(v7 + 128) = 0;
    *(void *)(v7 + 136) = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_68EA0;
    *(void *)(v11 + 24) = v7;
    id v12 = a1;
    swift_bridgeObjectRetain();
    sub_68EB8((uint64_t)v14);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v14);
}

uint64_t sub_68EA0(uint64_t a1)
{
  return sub_69CCC(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_646EC);
}

uint64_t sub_68EB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_68F10(uint64_t a1)
{
  return sub_64A60(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_68F1C(uint64_t a1)
{
  return sub_64E58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_68F24(uint64_t a1)
{
  return sub_65230(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_68F34(uint64_t a1)
{
  return sub_65684(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_68F44()
{
  return sub_69600(64);
}

uint64_t sub_68F50()
{
  return sub_69600(64);
}

uint64_t sub_68F58(uint64_t a1)
{
  return sub_65DEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(unsigned char *)(v1 + 41), *(void *)(v1 + 48), *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32), *(_WORD *)(v1 + 61), HIBYTE(*(_WORD *)(v1 + 61)), *(unsigned char *)(v1 + 63));
}

void *sub_68FB0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_E3408(0, v1, 0);
    swift_beginAccess();
    long long v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      swift_bridgeObjectRetain();
      if (Strong
        && (NSString v7 = sub_27DDA0(),
            id v8 = [Strong contentPrivateIDForContentID:v7],
            v7,
            swift_unknownObjectRelease(),
            v8))
      {
        uint64_t v9 = sub_27DDB0();
        unint64_t v22 = v10;
        uint64_t v23 = v9;
      }
      else
      {
        unint64_t v22 = 0xE000000000000000;
        uint64_t v23 = 0;
      }
      uint64_t v11 = swift_unknownObjectWeakLoadStrong();
      if (v11
        && (id v12 = (void *)v11,
            NSString v13 = sub_27DDA0(),
            id v14 = [v12 contentUserIDForContentID:v13],
            v13,
            swift_unknownObjectRelease(),
            v14))
      {
        uint64_t v15 = sub_27DDB0();
        unint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      unint64_t v19 = _swiftEmptyArrayStorage[2];
      unint64_t v18 = _swiftEmptyArrayStorage[3];
      if (v19 >= v18 >> 1) {
        sub_E3408(v18 > 1, v19 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v19 + 1;
      char v20 = &_swiftEmptyArrayStorage[6 * v19];
      void v20[4] = v23;
      v20[5] = v22;
      v20[6] = v15;
      v20[7] = v17;
      v20[8] = v5;
      v20[9] = v4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t _s13BookAnalytics13EventReporterC018emitMarkAsFinishedC05using4with10markedDatayAA9BATrackerCSg_AA014BridgedContentL0CAA0n6MarkedL0CSgtF_0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_DF4A4((uint64_t)v14);
  if (!a3)
  {
    char v5 = 3;
    id v6 = a1;
    if (!a1) {
      goto LABEL_5;
    }
LABEL_6:
    uint64_t v7 = swift_allocObject();
    long long v8 = v14[3];
    *(_OWORD *)(v7 + 56) = v14[2];
    *(_OWORD *)(v7 + 72) = v8;
    long long v9 = v14[5];
    *(_OWORD *)(v7 + 88) = v14[4];
    *(_OWORD *)(v7 + 104) = v9;
    long long v10 = v14[1];
    *(_OWORD *)(v7 + 24) = v14[0];
    *(unsigned char *)(v7 + 16) = v5;
    *(_OWORD *)(v7 + 40) = v10;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_69CEC;
    *(void *)(v11 + 24) = v7;
    id v12 = a1;
    sub_68EB8((uint64_t)v14);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
    return sub_6957C((uint64_t)v14);
  }
  char v5 = *(unsigned char *)(a3 + OBJC_IVAR___BAMarkedData_isFinishedDateSet);
  id v6 = a1;
  if (a1) {
    goto LABEL_6;
  }
LABEL_5:
  id v6 = sub_103814();
  if (v6) {
    goto LABEL_6;
  }
  return sub_6957C((uint64_t)v14);
}

uint64_t sub_692F8(uint64_t a1)
{
  return sub_663A4(a1, *(unsigned char *)(v1 + 16), (long long *)(v1 + 24));
}

uint64_t sub_69308(uint64_t a1)
{
  return sub_6937C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, unint64_t, __int16, void, void, void, void))sub_66B90);
}

uint64_t sub_69324()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_6937C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, unint64_t, __int16, void, void, void, void))
{
  __int16 v4 = *(_WORD *)(v2 + 61);
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(unsigned __int8 *)(v2 + 41), *(void *)(v2 + 48), *(unsigned int *)(v2 + 56) | ((unint64_t)*(unsigned __int8 *)(v2 + 60) << 32), v4, *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t _s13BookAnalytics13EventReporterC024emitRemoveFromCollectionC05using3for4withyAA9BATrackerCSg_SSAA18BridgedContentDataCtF_0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_DF4A4((uint64_t)v14);
  id v6 = a1;
  if (a1 || (id v6 = sub_103814()) != 0)
  {
    uint64_t v7 = swift_allocObject();
    long long v8 = v14[3];
    *(_OWORD *)(v7 + 48) = v14[2];
    *(_OWORD *)(v7 + 64) = v8;
    long long v9 = v14[5];
    *(_OWORD *)(v7 + 80) = v14[4];
    *(_OWORD *)(v7 + 96) = v9;
    long long v10 = v14[1];
    *(_OWORD *)(v7 + 16) = v14[0];
    *(_OWORD *)(v7 + 32) = v10;
    *(void *)(v7 + 112) = a2;
    *(void *)(v7 + 120) = a3;
    *(void *)(v7 + 128) = 0;
    *(void *)(v7 + 136) = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_6950C;
    *(void *)(v11 + 24) = v7;
    id v12 = a1;
    swift_bridgeObjectRetain();
    sub_68EB8((uint64_t)v14);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v14);
}

uint64_t sub_6950C(uint64_t a1)
{
  return sub_69CCC(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_670BC);
}

uint64_t sub_69524()
{
  return sub_697C8(48);
}

uint64_t sub_6952C(uint64_t a1)
{
  return sub_673F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_6953C(uint64_t a1)
{
  return sub_67BB0(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_69544()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6957C(uint64_t a1)
{
  return a1;
}

uint64_t sub_695D8()
{
  return sub_697C8(40);
}

uint64_t sub_695E0(uint64_t a1)
{
  return sub_67F60(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_695EC()
{
  return sub_69600(63);
}

uint64_t sub_695F8()
{
  return sub_69600(63);
}

uint64_t sub_69600(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_69654(uint64_t a1)
{
  return sub_68788(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(unsigned char *)(v1 + 41), *(void *)(v1 + 48), *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32), *(_WORD *)(v1 + 61), HIBYTE(*(_WORD *)(v1 + 61)));
}

uint64_t _s13BookAnalytics13EventReporterC015emitWantListAddC05using4withyAA9BATrackerCSg_AA18BridgedContentDataCtF_0(void *a1)
{
  sub_DF4A4((uint64_t)v10);
  id v2 = a1;
  if (a1 || (id v2 = sub_103814()) != 0)
  {
    long long v3 = (_OWORD *)swift_allocObject();
    long long v4 = v10[3];
    v3[3] = v10[2];
    v3[4] = v4;
    long long v5 = v10[5];
    v3[5] = v10[4];
    v3[6] = v5;
    long long v6 = v10[1];
    v3[1] = v10[0];
    v3[2] = v6;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_69D80;
    *(void *)(v7 + 24) = v3;
    id v8 = a1;
    sub_68EB8((uint64_t)v10);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v10);
}

uint64_t sub_697B4(uint64_t a1)
{
  return sub_68BA0(a1, (long long *)(v1 + 16));
}

uint64_t sub_697C0()
{
  return sub_697C8(48);
}

uint64_t sub_697C8(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_69818()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_69858()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_69890()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_698C8()
{
  unint64_t result = qword_31A000;
  if (!qword_31A000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A000);
  }
  return result;
}

uint64_t sub_6991C(uint64_t a1)
{
  uint64_t v2 = sub_4E04((uint64_t *)&unk_320320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_69980()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

unint64_t sub_699D0()
{
  unint64_t result = qword_3183E8;
  if (!qword_3183E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183E8);
  }
  return result;
}

unint64_t sub_69A24()
{
  unint64_t result = qword_3183F0;
  if (!qword_3183F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3183F0);
  }
  return result;
}

unint64_t sub_69A78()
{
  unint64_t result = qword_318400;
  if (!qword_318400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318400);
  }
  return result;
}

unint64_t sub_69AD0()
{
  unint64_t result = qword_318418;
  if (!qword_318418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318418);
  }
  return result;
}

uint64_t sub_69B28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

unint64_t sub_69B78()
{
  unint64_t result = qword_318420;
  if (!qword_318420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318420);
  }
  return result;
}

unint64_t sub_69BCC()
{
  unint64_t result = qword_318430;
  if (!qword_318430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318430);
  }
  return result;
}

uint64_t sub_69C20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_69C6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_69CCC(uint64_t a1, uint64_t (*a2)(uint64_t, void *, void, void, void, void))
{
  return a2(a1, v2 + 2, v2[14], v2[15], v2[16], v2[17]);
}

uint64_t sub_69D8C()
{
  return 0x4449726F68747561;
}

uint64_t sub_69DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4449726F68747561 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_69E3C(uint64_t a1)
{
  unint64_t v2 = sub_69FEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_69E78(uint64_t a1)
{
  unint64_t v2 = sub_69FEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AuthorData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_318458);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_69FEC();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_69FEC()
{
  unint64_t result = qword_318460;
  if (!qword_318460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318460);
  }
  return result;
}

uint64_t AuthorData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_318468);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_69FEC();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_6A1B4()
{
  unint64_t result = qword_318470;
  if (!qword_318470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318470);
  }
  return result;
}

unint64_t sub_6A20C()
{
  unint64_t result = qword_318478;
  if (!qword_318478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318478);
  }
  return result;
}

uint64_t sub_6A260@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AuthorData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for AuthorData()
{
  return &type metadata for AuthorData;
}

unsigned char *storeEnumTagSinglePayload for AuthorData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x6A324);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthorData.CodingKeys()
{
  return &type metadata for AuthorData.CodingKeys;
}

unint64_t sub_6A360()
{
  unint64_t result = qword_318480;
  if (!qword_318480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318480);
  }
  return result;
}

unint64_t sub_6A3B8()
{
  unint64_t result = qword_318488;
  if (!qword_318488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318488);
  }
  return result;
}

unint64_t sub_6A410()
{
  unint64_t result = qword_318490;
  if (!qword_318490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318490);
  }
  return result;
}

uint64_t sub_6A464(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318498, &enum case for SessionGroup.default(_:));
}

uint64_t static PurchaseSuccessEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315640, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318498, a1);
}

uint64_t sub_6A4C4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3184B0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PurchaseSuccessEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315648, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3184B0, a1);
}

uint64_t PurchaseSuccessEvent.altContentTypeExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3184C8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PurchaseSuccessEvent.altContentTypeExposureData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3184C8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t PurchaseSuccessEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseSuccessEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3185B8);
}

uint64_t PurchaseSuccessEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.prevAltContentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.prevAltContentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.prevAltContentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.purchaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.uppParentContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.uppParentContentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseSuccessEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseSuccessEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseSuccessEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PurchaseSuccessEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v6, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_315DE0);
  id v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v6, v25);
}

uint64_t PurchaseSuccessEvent.Model.altContentTypeExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(v1 + 56);
  return sub_6B638(v2, v3);
}

uint64_t sub_6B638(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PurchaseSuccessEvent.Model.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  char v3 = *(unsigned char *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  __int16 v8 = *(_WORD *)(v1 + 120);
  int v9 = *(_DWORD *)(v1 + 124);
  char v10 = *(unsigned char *)(v1 + 128);
  int v11 = *(_DWORD *)(v1 + 132);
  char v12 = *(unsigned char *)(v1 + 136);
  char v13 = *(unsigned char *)(v1 + 141);
  uint64_t v15 = *(void *)(v1 + 144);
  uint64_t v14 = *(void *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 64);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 68) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(v1 + 137);
  *(unsigned char *)(a1 + 77) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PurchaseSuccessEvent.Model.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v5 = *(void *)(v1 + 184);
  uint64_t v6 = *(void *)(v1 + 192);
  uint64_t v7 = *(void *)(v1 + 200);
  uint64_t v8 = *(void *)(v1 + 208);
  uint64_t v9 = *(void *)(v1 + 216);
  char v10 = *(unsigned char *)(v1 + 228);
  int v11 = *(_DWORD *)(v1 + 224);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 68) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  return sub_6B78C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_6B78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PurchaseSuccessEvent.Model.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 240);
  uint64_t v4 = v1 + 232;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(void *)(v4 + 40);
  uint64_t v9 = *(void *)(v4 + 48);
  uint64_t v10 = *(void *)(v4 + 56);
  uint64_t v11 = *(void *)(v4 + 64);
  uint64_t v12 = *(void *)(v4 + 72);
  uint64_t v13 = *(void *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 88);
  uint64_t v15 = *(void *)(v4 + 96);
  uint64_t v16 = *(void *)(v4 + 104);
  __int16 v17 = *(_WORD *)(v4 + 116);
  int v18 = *(_DWORD *)(v4 + 112);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  *(_WORD *)(a1 + 116) = v17;
  *(_DWORD *)(a1 + 112) = v18;
  return sub_6B874(v2, v3);
}

uint64_t sub_6B874(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void PurchaseSuccessEvent.Model.prevAltContentExposureData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 350);
}

uint64_t PurchaseSuccessEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 360);
  char v3 = *(unsigned char *)(v1 + 368);
  char v4 = *(unsigned char *)(v1 + 369);
  uint64_t v5 = *(void *)(v1 + 376);
  uint64_t v6 = *(void *)(v1 + 384);
  *(void *)a1 = *(void *)(v1 + 352);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PurchaseSuccessEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 408);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 392);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PurchaseSuccessEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[52];
  uint64_t v3 = v1[53];
  uint64_t v4 = v1[54];
  uint64_t v5 = v1[55];
  uint64_t v6 = v1[56];
  uint64_t v7 = v1[57];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void PurchaseSuccessEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 464);
}

uint64_t PurchaseSuccessEvent.Model.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 472);
  uint64_t v3 = *(void *)(v1 + 480);
  uint64_t v4 = *(void *)(v1 + 488);
  uint64_t v5 = *(void *)(v1 + 496);
  uint64_t v6 = *(void *)(v1 + 504);
  uint64_t v7 = *(void *)(v1 + 512);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v1 + 520);
  return sub_6B9C0(v2, v3);
}

uint64_t sub_6B9C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PurchaseSuccessEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseSuccessEvent.Model(0) + 56);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseSuccessEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3186A0);
}

uint64_t PurchaseSuccessEvent.Model.init(altContentTypeExposureData:contentData:contentStoreData:contentExposureData:prevAltContentExposureData:purchaseData:upSellData:seriesData:suggestionData:uppParentContentData:eventData:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, _WORD *a5@<X4>, uint64_t a6@<X5>, long long *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, unsigned char *a10, uint64_t a11, uint64_t a12)
{
  long long v12 = *a1;
  long long v13 = a1[1];
  long long v14 = a1[2];
  char v15 = *((unsigned char *)a1 + 56);
  *(void *)(a9 + 48) = *((void *)a1 + 6);
  *(unsigned char *)(a9 + 56) = v15;
  uint64_t v16 = *(void *)(a2 + 8);
  *(void *)(a9 + 64) = *(void *)a2;
  *(void *)(a9 + 72) = v16;
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 48);
  *(void *)(a9 + 104) = *(void *)(a2 + 40);
  *(void *)(a9 + 112) = v17;
  long long v18 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a9 + 120) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a9 + 124) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a9 + 132) = *(_DWORD *)(a2 + 68);
  char v19 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)a9 = v12;
  *(_OWORD *)(a9 + 16) = v13;
  *(_OWORD *)(a9 + 32) = v14;
  *(_OWORD *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 136) = v19;
  *(_DWORD *)(a9 + 137) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a9 + 141) = *(unsigned char *)(a2 + 77);
  long long v20 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a9 + 228) = *((unsigned char *)a3 + 68);
  long long v21 = *a3;
  long long v22 = a3[1];
  long long v23 = a3[2];
  long long v24 = a3[3];
  *(_DWORD *)(a9 + 224) = *((_DWORD *)a3 + 16);
  *(_WORD *)(a9 + 348) = *((_WORD *)a4 + 58);
  long long v25 = *a4;
  long long v26 = a4[1];
  long long v27 = a4[2];
  long long v28 = a4[3];
  long long v29 = a4[4];
  long long v30 = a4[5];
  long long v31 = a4[6];
  LOWORD(v17) = *a5;
  *(_DWORD *)(a9 + 344) = *((_DWORD *)a4 + 28);
  *(_WORD *)(a9 + 350) = v17;
  uint64_t v32 = *(void *)(a6 + 8);
  *(void *)(a9 + 352) = *(void *)a6;
  *(void *)(a9 + 360) = v32;
  *(unsigned char *)(a9 + 368) = *(unsigned char *)(a6 + 16);
  *(unsigned char *)(a9 + 369) = *(unsigned char *)(a6 + 17);
  uint64_t v33 = *(void *)(a6 + 32);
  *(void *)(a9 + 376) = *(void *)(a6 + 24);
  *(void *)(a9 + 384) = v33;
  long long v34 = *a7;
  *(void *)(a9 + 408) = *((void *)a7 + 2);
  *(_OWORD *)(a9 + 264) = v27;
  *(_OWORD *)(a9 + 280) = v28;
  *(_OWORD *)(a9 + 296) = v29;
  *(_OWORD *)(a9 + 312) = v30;
  *(_OWORD *)(a9 + 328) = v31;
  *(_OWORD *)(a9 + 392) = v34;
  long long v35 = *(_OWORD *)(a11 + 16);
  long long v36 = *(_OWORD *)(a11 + 32);
  *(_OWORD *)(a9 + 472) = *(_OWORD *)a11;
  *(_OWORD *)(a9 + 488) = v35;
  *(_OWORD *)(a9 + 504) = v36;
  long long v37 = *a8;
  long long v38 = a8[1];
  long long v39 = a8[2];
  *(unsigned char *)(a9 + 464) = *a10;
  *(unsigned char *)(a9 + 520) = *(unsigned char *)(a11 + 48);
  *(_OWORD *)(a9 + 144) = v20;
  *(_OWORD *)(a9 + 160) = v21;
  *(_OWORD *)(a9 + 176) = v22;
  *(_OWORD *)(a9 + 192) = v23;
  *(_OWORD *)(a9 + 208) = v24;
  *(_OWORD *)(a9 + 232) = v25;
  *(_OWORD *)(a9 + 248) = v26;
  *(_OWORD *)(a9 + 416) = v37;
  *(_OWORD *)(a9 + 432) = v38;
  *(_OWORD *)(a9 + 448) = v39;
  uint64_t v40 = a9 + *(int *)(type metadata accessor for PurchaseSuccessEvent.Model(0) + 56);
  uint64_t v41 = sub_27D7C0();
  char v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);

  return v42(v40, a12, v41);
}

uint64_t sub_6BC68(char a1)
{
  uint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x6573616863727570;
      break;
    case 6:
      uint64_t v3 = 0x6C6C65537075;
      goto LABEL_8;
    case 7:
      uint64_t v3 = 0x736569726573;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 8:
      uint64_t result = 0x6974736567677573;
      break;
    case 9:
      uint64_t result = 0xD000000000000014;
      break;
    case 10:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_6BDC4()
{
  return sub_6BC68(*v0);
}

uint64_t sub_6BDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_715D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_6BDF4(uint64_t a1)
{
  unint64_t v2 = sub_6C358();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_6BE30(uint64_t a1)
{
  unint64_t v2 = sub_6C358();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PurchaseSuccessEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3184F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_6C358();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 6);
  char v10 = *((unsigned char *)v3 + 56);
  long long v11 = v3[1];
  long long v42 = *v3;
  *(_OWORD *)int v43 = v11;
  *(_OWORD *)&v43[16] = v3[2];
  *(void *)&long long v44 = v9;
  BYTE8(v44) = v10;
  char v50 = 0;
  sub_6C3AC();
  sub_27E2C0();
  if (!v2)
  {
    uint64_t v12 = *((void *)v3 + 9);
    char v13 = *((unsigned char *)v3 + 80);
    long long v14 = *(long long *)((char *)v3 + 88);
    uint64_t v15 = *((void *)v3 + 13);
    uint64_t v16 = *((void *)v3 + 14);
    __int16 v17 = *((_WORD *)v3 + 60);
    int v18 = *((_DWORD *)v3 + 31);
    char v19 = *((unsigned char *)v3 + 128);
    int v20 = *((_DWORD *)v3 + 33);
    char v21 = *((unsigned char *)v3 + 136);
    uint64_t v22 = *((unsigned __int8 *)v3 + 141);
    *(void *)&long long v42 = *((void *)v3 + 8);
    *((void *)&v42 + 1) = v12;
    v43[0] = v13;
    *(_OWORD *)&v43[8] = v14;
    *(void *)&v43[24] = v15;
    *(void *)&long long v44 = v16;
    WORD4(v44) = v17;
    HIDWORD(v44) = v18;
    LOBYTE(v45) = v19;
    DWORD1(v45) = v20;
    BYTE8(v45) = v21;
    *(_DWORD *)((char *)&v45 + 9) = *(_DWORD *)((char *)v3 + 137);
    BYTE13(v45) = v22;
    long long v46 = v3[9];
    char v50 = 1;
    sub_1A1D4();
    sub_27E330();
    int v23 = *((_DWORD *)v3 + 56);
    char v24 = *((unsigned char *)v3 + 228);
    long long v25 = v3[11];
    long long v42 = v3[10];
    *(_OWORD *)int v43 = v25;
    long long v26 = v3[13];
    *(_OWORD *)&v43[16] = v3[12];
    long long v44 = v26;
    BYTE4(v45) = v24;
    LODWORD(v45) = v23;
    char v50 = 2;
    sub_6C400();
    sub_27E2C0();
    int v27 = *((_DWORD *)v3 + 86);
    __int16 v28 = *((_WORD *)v3 + 174);
    long long v29 = *(long long *)((char *)v3 + 248);
    long long v42 = *(long long *)((char *)v3 + 232);
    *(_OWORD *)int v43 = v29;
    long long v30 = *(long long *)((char *)v3 + 280);
    *(_OWORD *)&v43[16] = *(long long *)((char *)v3 + 264);
    long long v44 = v30;
    long long v31 = *(long long *)((char *)v3 + 312);
    long long v45 = *(long long *)((char *)v3 + 296);
    long long v46 = v31;
    long long v47 = *(long long *)((char *)v3 + 328);
    __int16 v49 = v28;
    int v48 = v27;
    char v50 = 3;
    sub_6C454();
    sub_27E2C0();
    LOWORD(v42) = *((_WORD *)v3 + 175);
    char v50 = 4;
    sub_6C4A8();
    sub_27E2C0();
    uint64_t v32 = *((void *)v3 + 45);
    char v33 = *((unsigned char *)v3 + 368);
    char v34 = *((unsigned char *)v3 + 369);
    uint64_t v35 = *((void *)v3 + 47);
    uint64_t v36 = *((void *)v3 + 48);
    *(void *)&long long v42 = *((void *)v3 + 44);
    *((void *)&v42 + 1) = v32;
    v43[0] = v33;
    v43[1] = v34;
    *(void *)&v43[8] = v35;
    *(void *)&v43[16] = v36;
    char v50 = 5;
    sub_3E3E0();
    sub_27E330();
    uint64_t v37 = *((void *)v3 + 51);
    long long v42 = *(long long *)((char *)v3 + 392);
    *(void *)int v43 = v37;
    char v50 = 6;
    sub_36A74();
    sub_27E2C0();
    long long v38 = v3[27];
    long long v42 = v3[26];
    *(_OWORD *)int v43 = v38;
    *(_OWORD *)&v43[16] = v3[28];
    char v50 = 7;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v42) = *((unsigned char *)v3 + 464);
    char v50 = 8;
    sub_36B1C();
    sub_27E2C0();
    char v39 = *((unsigned char *)v3 + 520);
    long long v40 = *(long long *)((char *)v3 + 488);
    long long v42 = *(long long *)((char *)v3 + 472);
    *(_OWORD *)int v43 = v40;
    *(_OWORD *)&v43[16] = *(long long *)((char *)v3 + 504);
    LOBYTE(v44) = v39;
    char v50 = 9;
    sub_6C4FC();
    sub_27E2C0();
    type metadata accessor for PurchaseSuccessEvent.Model(0);
    LOBYTE(v42) = 10;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_6C358()
{
  unint64_t result = qword_318500;
  if (!qword_318500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318500);
  }
  return result;
}

unint64_t sub_6C3AC()
{
  unint64_t result = qword_318508;
  if (!qword_318508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318508);
  }
  return result;
}

unint64_t sub_6C400()
{
  unint64_t result = qword_318510;
  if (!qword_318510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318510);
  }
  return result;
}

unint64_t sub_6C454()
{
  unint64_t result = qword_318518;
  if (!qword_318518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318518);
  }
  return result;
}

unint64_t sub_6C4A8()
{
  unint64_t result = qword_318520;
  if (!qword_318520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318520);
  }
  return result;
}

unint64_t sub_6C4FC()
{
  unint64_t result = qword_318528;
  if (!qword_318528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318528);
  }
  return result;
}

uint64_t PurchaseSuccessEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_4E04(&qword_318530);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PurchaseSuccessEvent.Model(0);
  __chkstk_darwin();
  long long v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v11 + 264;
  uint64_t v62 = (uint64_t)a1;
  sub_5900(a1, a1[3]);
  sub_6C358();
  uint64_t v59 = v8;
  sub_27E430();
  if (v2)
  {
    uint64_t v63 = v2;
    int v13 = 0;
    uint64_t result = sub_5E94(v62);
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
  }
  else
  {
    unsigned __int8 v54 = v6;
    uint64_t v55 = v4;
    uint64_t v12 = v58;
    char v72 = 0;
    sub_6D014();
    sub_27E1F0();
    uint64_t v19 = v66;
    char v20 = BYTE8(v66);
    long long v21 = *(_OWORD *)v65;
    *(_OWORD *)long long v11 = v64;
    *((_OWORD *)v11 + 1) = v21;
    *((_OWORD *)v11 + 2) = *(_OWORD *)&v65[16];
    *((void *)v11 + 6) = v19;
    v11[56] = v20;
    char v72 = 1;
    sub_1A98C();
    sub_27E260();
    uint64_t v22 = *((void *)&v64 + 1);
    char v23 = v65[0];
    long long v24 = *(_OWORD *)&v65[8];
    uint64_t v25 = *(void *)&v65[24];
    uint64_t v26 = v66;
    __int16 v27 = WORD4(v66);
    int v28 = HIDWORD(v66);
    char v29 = v67;
    int v30 = DWORD1(v67);
    char v31 = BYTE8(v67);
    char v32 = BYTE13(v67);
    *((void *)v11 + 8) = v64;
    *((void *)v11 + 9) = v22;
    v11[80] = v23;
    *(_OWORD *)(v11 + 88) = v24;
    *((void *)v11 + 13) = v25;
    *((void *)v11 + 14) = v26;
    *((_WORD *)v11 + 60) = v27;
    *((_DWORD *)v11 + 31) = v28;
    v11[128] = v29;
    *((_DWORD *)v11 + 33) = v30;
    v11[136] = v31;
    *(_DWORD *)(v11 + 137) = *(_DWORD *)((char *)&v67 + 9);
    v11[141] = v32;
    *((_OWORD *)v11 + 9) = v68;
    char v72 = 2;
    sub_6D068();
    sub_27E1F0();
    int v33 = v67;
    char v34 = BYTE4(v67);
    long long v35 = *(_OWORD *)v65;
    *((_OWORD *)v11 + 10) = v64;
    *((_OWORD *)v11 + 11) = v35;
    long long v36 = v66;
    *((_OWORD *)v11 + 12) = *(_OWORD *)&v65[16];
    *((_OWORD *)v11 + 13) = v36;
    v11[228] = v34;
    *((_DWORD *)v11 + 56) = v33;
    char v72 = 3;
    sub_6D0BC();
    sub_27E1F0();
    int v37 = v70;
    __int16 v38 = v71;
    long long v39 = *(_OWORD *)v65;
    *(_OWORD *)(v11 + 232) = v64;
    *(_OWORD *)(v11 + 248) = v39;
    long long v40 = v66;
    uint64_t v41 = v61;
    *uint64_t v61 = *(_OWORD *)&v65[16];
    v41[1] = v40;
    long long v42 = v68;
    v41[2] = v67;
    v41[3] = v42;
    v41[4] = v69;
    *((_WORD *)v41 + 42) = v38;
    *((_DWORD *)v41 + 20) = v37;
    char v72 = 4;
    sub_6D110();
    sub_27E1F0();
    *((_WORD *)v11 + 175) = v64;
    char v72 = 5;
    sub_3E388();
    sub_27E260();
    uint64_t v43 = *((void *)&v64 + 1);
    char v44 = v65[0];
    char v45 = v65[1];
    uint64_t v46 = *(void *)&v65[8];
    uint64_t v47 = *(void *)&v65[16];
    *((void *)v11 + 44) = v64;
    *((void *)v11 + 45) = v43;
    v11[368] = v44;
    v11[369] = v45;
    *((void *)v11 + 47) = v46;
    *((void *)v11 + 48) = v47;
    char v72 = 6;
    sub_37744();
    sub_27E1F0();
    uint64_t v48 = *(void *)v65;
    v61[8] = v64;
    *((void *)v11 + 51) = v48;
    char v72 = 7;
    sub_11A3C();
    sub_27E1F0();
    int v17 = 1;
    long long v49 = *(_OWORD *)v65;
    *((_OWORD *)v11 + 26) = v64;
    *((_OWORD *)v11 + 27) = v49;
    *((_OWORD *)v11 + 28) = *(_OWORD *)&v65[16];
    char v72 = 8;
    sub_377EC();
    sub_27E1F0();
    v11[464] = v64;
    char v72 = 9;
    sub_6D164();
    sub_27E1F0();
    uint64_t v63 = 0;
    char v50 = v66;
    long long v51 = *(_OWORD *)v65;
    char v52 = v61;
    v61[13] = v64;
    v52[14] = v51;
    v52[15] = *(_OWORD *)&v65[16];
    v11[520] = v50;
    LOBYTE(v64) = 10;
    sub_1AB30(&qword_315E28);
    uint64_t v53 = v63;
    sub_27E260();
    uint64_t v63 = v53;
    if (!v53)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v59, v60);
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v11[*(int *)(v9 + 56)], v54, v55);
      sub_6D1B8((uint64_t)v11, v57);
      sub_5E94(v62);
      return sub_6D21C((uint64_t)v11);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v59, v60);
    int v16 = 1;
    sub_5E94(v62);
    int v13 = 1;
    int v18 = 1;
    sub_6CFC4(*(void *)v11, *((void *)v11 + 1));
    LODWORD(v62) = 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v15 = 1;
    uint64_t result = swift_bridgeObjectRelease();
    if (v62)
    {
      sub_6CF60(*((void *)v11 + 20), *((void *)v11 + 21), *((void *)v11 + 22), *((void *)v11 + 23), *((void *)v11 + 24), *((void *)v11 + 25));
      goto LABEL_12;
    }
  }
  if (!v15)
  {
    if (!v13) {
      goto LABEL_13;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_14;
    }
LABEL_7:
    if (!v17) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
LABEL_12:
  uint64_t result = sub_6CEDC(*((void *)v11 + 29), *((void *)v11 + 30));
  if (v13) {
    goto LABEL_6;
  }
LABEL_13:
  if (!v18) {
    goto LABEL_7;
  }
LABEL_14:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_15:
    if (!v16) {
      return result;
    }
    return sub_6CE8C(*((void *)v11 + 59), *((void *)v11 + 60));
  }
LABEL_8:
  uint64_t result = sub_1A978(*((void *)v11 + 52), *((void *)v11 + 53), *((void *)v11 + 54), *((void *)v11 + 55), *((void *)v11 + 56), *((void *)v11 + 57));
  if ((v16 & 1) == 0) {
    return result;
  }
  return sub_6CE8C(*((void *)v11 + 59), *((void *)v11 + 60));
}

uint64_t sub_6CE8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6CEDC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6CF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6CFC4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_6D014()
{
  unint64_t result = qword_318538;
  if (!qword_318538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318538);
  }
  return result;
}

unint64_t sub_6D068()
{
  unint64_t result = qword_318540;
  if (!qword_318540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318540);
  }
  return result;
}

unint64_t sub_6D0BC()
{
  unint64_t result = qword_318548;
  if (!qword_318548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318548);
  }
  return result;
}

unint64_t sub_6D110()
{
  unint64_t result = qword_318550;
  if (!qword_318550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318550);
  }
  return result;
}

unint64_t sub_6D164()
{
  unint64_t result = qword_318558;
  if (!qword_318558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318558);
  }
  return result;
}

uint64_t sub_6D1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseSuccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6D21C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseSuccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6D278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseSuccessEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_6D290(void *a1)
{
  return PurchaseSuccessEvent.Model.encode(to:)(a1);
}

uint64_t sub_6D2A8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315640, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318498, a1);
}

uint64_t sub_6D2E0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315648, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3184B0, a1);
}

uint64_t sub_6D318@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v7, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_315DE0);
  __int16 v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v7, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for PurchaseSuccessEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3184C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_3184E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_3184E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    int v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    int v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    int v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_3184F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for PurchaseSuccessEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_315DE0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6EB44);
}

uint64_t sub_6EB44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  uint64_t v14 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  uint64_t v15 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  uint64_t v16 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for PurchaseSuccessEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6EF30);
}

uint64_t sub_6EF30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3184C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  uint64_t v16 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  uint64_t v22 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  uint64_t v25 = sub_4E04(&qword_315DE0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_6F314()
{
  sub_6F828(319, &qword_3185C8, (void (*)(void))sub_6D014, (void (*)(void))sub_6C3AC);
  if (v0 <= 0x3F)
  {
    sub_6F828(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_6F828(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
      if (v2 <= 0x3F)
      {
        sub_6F828(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
        if (v3 <= 0x3F)
        {
          sub_6F828(319, &qword_3185E0, (void (*)(void))sub_6D110, (void (*)(void))sub_6C4A8);
          if (v4 <= 0x3F)
          {
            sub_6F828(319, &qword_3185E8, (void (*)(void))sub_3E388, (void (*)(void))sub_3E3E0);
            if (v5 <= 0x3F)
            {
              sub_6F828(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
              if (v6 <= 0x3F)
              {
                sub_6F828(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_6F828(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
                  if (v8 <= 0x3F)
                  {
                    sub_6F828(319, (unint64_t *)&unk_3185F0, (void (*)(void))sub_6D164, (void (*)(void))sub_6C4FC);
                    if (v9 <= 0x3F)
                    {
                      sub_6DA0();
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_6F828(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  if (v7)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  uint64_t v12 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  uint64_t v13 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v14;
  *(_WORD *)(a1 + 120) = *((_WORD *)a2 + 60);
  int v15 = *((_DWORD *)a2 + 31);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(_DWORD *)(a1 + 124) = v15;
  *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)((char *)a2 + 137);
  *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
  uint64_t v16 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v16;
  uint64_t v17 = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v17)
  {
    long long v27 = *((_OWORD *)a2 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 208) = v27;
    *(void *)(a1 + 221) = *(uint64_t *)((char *)a2 + 221);
    long long v28 = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 176) = v28;
    uint64_t v21 = a2[30];
    if (v21) {
      goto LABEL_8;
    }
LABEL_10:
    long long v29 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 312) = v29;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(void *)(a1 + 342) = *(uint64_t *)((char *)a2 + 342);
    long long v30 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v30;
    long long v31 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v31;
    goto LABEL_11;
  }
  uint64_t v18 = a2[21];
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = v18;
  uint64_t v19 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v19;
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = v17;
  uint64_t v20 = a2[27];
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = v20;
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = a2[30];
  if (!v21) {
    goto LABEL_10;
  }
LABEL_8:
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = v21;
  uint64_t v22 = a2[32];
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = v22;
  uint64_t v23 = a2[34];
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v23;
  uint64_t v24 = a2[36];
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = v24;
  uint64_t v25 = a2[38];
  *(void *)(a1 + 296) = a2[37];
  *(void *)(a1 + 304) = v25;
  *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
  *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
  *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
  *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
  uint64_t v26 = a2[42];
  *(void *)(a1 + 328) = a2[41];
  *(void *)(a1 + 336) = v26;
  *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
  *(_WORD *)(a1 + 348) = *((_WORD *)a2 + 174);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  *(_WORD *)(a1 + 350) = *((_WORD *)a2 + 175);
  uint64_t v32 = a2[45];
  *(void *)(a1 + 352) = a2[44];
  *(void *)(a1 + 360) = v32;
  *(_WORD *)(a1 + 368) = *((_WORD *)a2 + 184);
  uint64_t v33 = a2[48];
  *(void *)(a1 + 376) = a2[47];
  *(void *)(a1 + 384) = v33;
  *(_WORD *)(a1 + 392) = *((_WORD *)a2 + 196);
  uint64_t v34 = a2[51];
  *(void *)(a1 + 400) = a2[50];
  *(void *)(a1 + 408) = v34;
  uint64_t v35 = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 == 1)
  {
    long long v36 = *((_OWORD *)a2 + 27);
    *(_OWORD *)(a1 + 416) = *((_OWORD *)a2 + 26);
    *(_OWORD *)(a1 + 432) = v36;
    *(_OWORD *)(a1 + 448) = *((_OWORD *)a2 + 28);
  }
  else
  {
    *(void *)(a1 + 416) = a2[52];
    *(unsigned char *)(a1 + 424) = *((unsigned char *)a2 + 424);
    *(void *)(a1 + 432) = a2[54];
    *(unsigned char *)(a1 + 440) = *((unsigned char *)a2 + 440);
    *(_WORD *)(a1 + 441) = *(_WORD *)((char *)a2 + 441);
    *(void *)(a1 + 448) = a2[56];
    *(void *)(a1 + 456) = v35;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 464) = *((unsigned char *)a2 + 464);
  uint64_t v37 = a2[60];
  if (v37)
  {
    *(void *)(a1 + 472) = a2[59];
    *(void *)(a1 + 480) = v37;
    uint64_t v38 = a2[62];
    *(void *)(a1 + 488) = a2[61];
    *(void *)(a1 + 496) = v38;
    uint64_t v39 = a2[64];
    *(void *)(a1 + 504) = a2[63];
    *(void *)(a1 + 512) = v39;
    *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v40 = *(_OWORD *)(a2 + 61);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 59);
    *(_OWORD *)(a1 + 488) = v40;
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 63);
    *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
  }
  uint64_t v41 = *(int *)(a3 + 56);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t)a2 + v41;
  uint64_t v44 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

uint64_t destroy for PurchaseSuccessEvent.Model(void *a1, uint64_t a2)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[30])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[57] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[60])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 56);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = v6;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  int v13 = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = v13;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  uint64_t v15 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v16;
    uint64_t v17 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v17;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v15;
    uint64_t v18 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v18;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = *(void *)(a2 + 240);
    if (v19)
    {
LABEL_6:
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v19;
      uint64_t v20 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v20;
      uint64_t v21 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v21;
      uint64_t v22 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v22;
      uint64_t v23 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v23;
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
      *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      uint64_t v24 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v24;
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(void *)(a1 + 221) = *(void *)(a2 + 221);
    long long v26 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v26;
    uint64_t v19 = *(void *)(a2 + 240);
    if (v19) {
      goto LABEL_6;
    }
  }
  long long v27 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v27;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  long long v28 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v28;
  long long v29 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v29;
LABEL_9:
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  uint64_t v30 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v30;
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  uint64_t v31 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v31;
  *(_WORD *)(a1 + 392) = *(_WORD *)(a2 + 392);
  uint64_t v32 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v32;
  uint64_t v33 = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    long long v34 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v34;
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  }
  else
  {
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(_WORD *)(a1 + 441) = *(_WORD *)(a2 + 441);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = v33;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  uint64_t v35 = *(void *)(a2 + 480);
  if (v35)
  {
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = v35;
    uint64_t v36 = *(void *)(a2 + 496);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = v36;
    uint64_t v37 = *(void *)(a2 + 512);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = v37;
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v38 = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 488) = v38;
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  }
  uint64_t v39 = *(int *)(a3 + 56);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for PurchaseSuccessEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    }
    else
    {
      sub_70A8C(a1);
      long long v8 = a2[1];
      long long v7 = a2[2];
      long long v9 = *a2;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v9;
    }
  }
  else if (v6)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[2];
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)a1 = v10;
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(unsigned char *)(a1 + 121) = *((unsigned char *)a2 + 121);
  int v13 = *((_DWORD *)a2 + 31);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(_DWORD *)(a1 + 124) = v13;
  int v14 = *((_DWORD *)a2 + 33);
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 132) = v14;
  *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
  *(unsigned char *)(a1 + 138) = *((unsigned char *)a2 + 138);
  *(unsigned char *)(a1 + 139) = *((unsigned char *)a2 + 139);
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (_OWORD *)(a1 + 160);
  uint64_t v16 = a2 + 10;
  uint64_t v17 = *((void *)a2 + 25);
  if (*(void *)(a1 + 200))
  {
    if (v17)
    {
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(void *)(a1 + 168) = *((void *)a2 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *((void *)a2 + 22);
      *(void *)(a1 + 184) = *((void *)a2 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *((void *)a2 + 24);
      *(void *)(a1 + 200) = *((void *)a2 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *((void *)a2 + 26);
      *(void *)(a1 + 216) = *((void *)a2 + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v18 = *((_DWORD *)a2 + 56);
      *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
      *(_DWORD *)(a1 + 224) = v18;
    }
    else
    {
      sub_70AE0(a1 + 160);
      _OWORD *v15 = *v16;
      long long v21 = a2[12];
      long long v20 = a2[13];
      long long v22 = a2[11];
      *(void *)(a1 + 221) = *(void *)((char *)a2 + 221);
      *(_OWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 208) = v20;
      *(_OWORD *)(a1 + 176) = v22;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(void *)(a1 + 168) = *((void *)a2 + 21);
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    *(void *)(a1 + 200) = *((void *)a2 + 25);
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(void *)(a1 + 216) = *((void *)a2 + 27);
    int v19 = *((_DWORD *)a2 + 56);
    *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
    *(_DWORD *)(a1 + 224) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v15 = *v16;
    long long v23 = a2[11];
    long long v24 = a2[12];
    long long v25 = a2[13];
    *(void *)(a1 + 221) = *(void *)((char *)a2 + 221);
    *(_OWORD *)(a1 + 192) = v24;
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 176) = v23;
  }
  long long v26 = (_OWORD *)(a1 + 232);
  long long v27 = (long long *)((char *)a2 + 232);
  uint64_t v28 = *((void *)a2 + 30);
  if (*(void *)(a1 + 240))
  {
    if (v28)
    {
      *(void *)(a1 + 232) = *((void *)a2 + 29);
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *((void *)a2 + 31);
      *(void *)(a1 + 256) = *((void *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *((void *)a2 + 33);
      *(void *)(a1 + 272) = *((void *)a2 + 34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *((void *)a2 + 35);
      *(void *)(a1 + 288) = *((void *)a2 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *((void *)a2 + 37);
      *(void *)(a1 + 304) = *((void *)a2 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = *((_DWORD *)a2 + 78);
      *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
      *(_DWORD *)(a1 + 312) = v29;
      int v30 = *((_DWORD *)a2 + 80);
      *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
      *(_DWORD *)(a1 + 320) = v30;
      *(void *)(a1 + 328) = *((void *)a2 + 41);
      *(void *)(a1 + 336) = *((void *)a2 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v31 = *((_DWORD *)a2 + 86);
      *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
      *(_DWORD *)(a1 + 344) = v31;
      *(unsigned char *)(a1 + 349) = *((unsigned char *)a2 + 349);
    }
    else
    {
      sub_70B34(a1 + 232);
      long long v35 = *(long long *)((char *)a2 + 280);
      long long v37 = *v27;
      long long v36 = *(long long *)((char *)a2 + 248);
      *(_OWORD *)(a1 + 264) = *(long long *)((char *)a2 + 264);
      *(_OWORD *)(a1 + 280) = v35;
      *long long v26 = v37;
      *(_OWORD *)(a1 + 248) = v36;
      long long v39 = *(long long *)((char *)a2 + 312);
      long long v38 = *(long long *)((char *)a2 + 328);
      long long v40 = *(long long *)((char *)a2 + 296);
      *(void *)(a1 + 342) = *(void *)((char *)a2 + 342);
      *(_OWORD *)(a1 + 312) = v39;
      *(_OWORD *)(a1 + 328) = v38;
      *(_OWORD *)(a1 + 296) = v40;
    }
  }
  else if (v28)
  {
    *(void *)(a1 + 232) = *((void *)a2 + 29);
    *(void *)(a1 + 240) = *((void *)a2 + 30);
    *(void *)(a1 + 248) = *((void *)a2 + 31);
    *(void *)(a1 + 256) = *((void *)a2 + 32);
    *(void *)(a1 + 264) = *((void *)a2 + 33);
    *(void *)(a1 + 272) = *((void *)a2 + 34);
    *(void *)(a1 + 280) = *((void *)a2 + 35);
    *(void *)(a1 + 288) = *((void *)a2 + 36);
    *(void *)(a1 + 296) = *((void *)a2 + 37);
    *(void *)(a1 + 304) = *((void *)a2 + 38);
    int v32 = *((_DWORD *)a2 + 78);
    *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
    *(_DWORD *)(a1 + 312) = v32;
    int v33 = *((_DWORD *)a2 + 80);
    *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
    *(_DWORD *)(a1 + 320) = v33;
    *(void *)(a1 + 328) = *((void *)a2 + 41);
    *(void *)(a1 + 336) = *((void *)a2 + 42);
    int v34 = *((_DWORD *)a2 + 86);
    *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
    *(_DWORD *)(a1 + 344) = v34;
    *(unsigned char *)(a1 + 349) = *((unsigned char *)a2 + 349);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *v27;
    long long v42 = *(long long *)((char *)a2 + 248);
    long long v43 = *(long long *)((char *)a2 + 280);
    *(_OWORD *)(a1 + 264) = *(long long *)((char *)a2 + 264);
    *(_OWORD *)(a1 + 280) = v43;
    *long long v26 = v41;
    *(_OWORD *)(a1 + 248) = v42;
    long long v44 = *(long long *)((char *)a2 + 296);
    long long v45 = *(long long *)((char *)a2 + 312);
    long long v46 = *(long long *)((char *)a2 + 328);
    *(void *)(a1 + 342) = *(void *)((char *)a2 + 342);
    *(_OWORD *)(a1 + 312) = v45;
    *(_OWORD *)(a1 + 328) = v46;
    *(_OWORD *)(a1 + 296) = v44;
  }
  *(_WORD *)(a1 + 350) = *((_WORD *)a2 + 175);
  *(void *)(a1 + 352) = *((void *)a2 + 44);
  *(void *)(a1 + 360) = *((void *)a2 + 45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
  *(unsigned char *)(a1 + 369) = *((unsigned char *)a2 + 369);
  *(void *)(a1 + 376) = *((void *)a2 + 47);
  *(void *)(a1 + 384) = *((void *)a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 392) = *((unsigned char *)a2 + 392);
  *(unsigned char *)(a1 + 393) = *((unsigned char *)a2 + 393);
  *(void *)(a1 + 400) = *((void *)a2 + 50);
  *(void *)(a1 + 408) = *((void *)a2 + 51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = (long long *)(a1 + 416);
  uint64_t v48 = a2 + 26;
  uint64_t v49 = *((void *)a2 + 57);
  if (*(void *)(a1 + 456) == 1)
  {
    if (v49 == 1)
    {
      long long v50 = *v48;
      long long v51 = a2[28];
      *(_OWORD *)(a1 + 432) = a2[27];
      *(_OWORD *)(a1 + 448) = v51;
      *uint64_t v47 = v50;
    }
    else
    {
      *(void *)(a1 + 416) = *((void *)a2 + 52);
      *(unsigned char *)(a1 + 424) = *((unsigned char *)a2 + 424);
      *(void *)(a1 + 432) = *((void *)a2 + 54);
      *(unsigned char *)(a1 + 440) = *((unsigned char *)a2 + 440);
      *(unsigned char *)(a1 + 441) = *((unsigned char *)a2 + 441);
      *(unsigned char *)(a1 + 442) = *((unsigned char *)a2 + 442);
      *(void *)(a1 + 448) = *((void *)a2 + 56);
      *(void *)(a1 + 456) = *((void *)a2 + 57);
      swift_bridgeObjectRetain();
    }
  }
  else if (v49 == 1)
  {
    sub_1CDD8(a1 + 416);
    long long v53 = a2[27];
    long long v52 = a2[28];
    *uint64_t v47 = *v48;
    *(_OWORD *)(a1 + 432) = v53;
    *(_OWORD *)(a1 + 448) = v52;
  }
  else
  {
    *(void *)(a1 + 416) = *((void *)a2 + 52);
    *(unsigned char *)(a1 + 424) = *((unsigned char *)a2 + 424);
    *(void *)(a1 + 432) = *((void *)a2 + 54);
    *(unsigned char *)(a1 + 440) = *((unsigned char *)a2 + 440);
    *(unsigned char *)(a1 + 441) = *((unsigned char *)a2 + 441);
    *(unsigned char *)(a1 + 442) = *((unsigned char *)a2 + 442);
    *(void *)(a1 + 448) = *((void *)a2 + 56);
    *(void *)(a1 + 456) = *((void *)a2 + 57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 464) = *((unsigned char *)a2 + 464);
  unsigned __int8 v54 = (_OWORD *)(a1 + 472);
  uint64_t v55 = (long long *)((char *)a2 + 472);
  uint64_t v56 = *((void *)a2 + 60);
  if (*(void *)(a1 + 480))
  {
    if (v56)
    {
      *(void *)(a1 + 472) = *((void *)a2 + 59);
      *(void *)(a1 + 480) = *((void *)a2 + 60);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 488) = *((void *)a2 + 61);
      *(void *)(a1 + 496) = *((void *)a2 + 62);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      *(void *)(a1 + 512) = *((void *)a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
    }
    else
    {
      sub_70B88(a1 + 472);
      long long v58 = *(long long *)((char *)a2 + 488);
      long long v57 = *(long long *)((char *)a2 + 504);
      long long v59 = *v55;
      *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
      *(_OWORD *)(a1 + 488) = v58;
      *(_OWORD *)(a1 + 504) = v57;
      *unsigned __int8 v54 = v59;
    }
  }
  else if (v56)
  {
    *(void *)(a1 + 472) = *((void *)a2 + 59);
    *(void *)(a1 + 480) = *((void *)a2 + 60);
    *(void *)(a1 + 488) = *((void *)a2 + 61);
    *(void *)(a1 + 496) = *((void *)a2 + 62);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    *(void *)(a1 + 512) = *((void *)a2 + 64);
    *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v60 = *v55;
    long long v61 = *(long long *)((char *)a2 + 488);
    long long v62 = *(long long *)((char *)a2 + 504);
    *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
    *(_OWORD *)(a1 + 488) = v61;
    *(_OWORD *)(a1 + 504) = v62;
    *unsigned __int8 v54 = v60;
  }
  uint64_t v63 = *(int *)(a3 + 56);
  uint64_t v64 = a1 + v63;
  uint64_t v65 = (uint64_t)a2 + v63;
  uint64_t v66 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t sub_70A8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_70AE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_70B34(uint64_t a1)
{
  return a1;
}

uint64_t sub_70B88(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(void *)(a1 + 221) = *(void *)(a2 + 221);
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v10;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v11 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v11;
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  long long v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v12;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  long long v13 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v13;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  long long v14 = *(_OWORD *)(a2 + 472);
  long long v15 = *(_OWORD *)(a2 + 488);
  long long v16 = *(_OWORD *)(a2 + 504);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(_OWORD *)(a1 + 488) = v15;
  *(_OWORD *)(a1 + 504) = v16;
  uint64_t v17 = *(int *)(a3 + 56);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)(a1 + 472) = v14;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      goto LABEL_6;
    }
    sub_70A8C(a1);
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    if (*(void *)(a2 + 200))
    {
      uint64_t v14 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v17;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
      goto LABEL_11;
    }
    sub_70AE0(a1 + 160);
  }
  long long v18 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v18;
  *(void *)(a1 + 221) = *(void *)(a2 + 221);
  long long v19 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v19;
LABEL_11:
  if (*(void *)(a1 + 240))
  {
    uint64_t v20 = *(void *)(a2 + 240);
    if (v20)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
      *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      uint64_t v25 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v25;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
      goto LABEL_16;
    }
    sub_70B34(a1 + 232);
  }
  long long v26 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v26;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  long long v27 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v27;
  long long v28 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v28;
LABEL_16:
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  uint64_t v29 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(unsigned char *)(a1 + 369) = *(unsigned char *)(a2 + 369);
  uint64_t v30 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v30;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 392) = *(_WORD *)(a2 + 392);
  uint64_t v31 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v31;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 456) == 1)
  {
LABEL_19:
    long long v33 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v33;
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    goto LABEL_21;
  }
  uint64_t v32 = *(void *)(a2 + 456);
  if (v32 == 1)
  {
    sub_1CDD8(a1 + 416);
    goto LABEL_19;
  }
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(_WORD *)(a1 + 441) = *(_WORD *)(a2 + 441);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v32;
  swift_bridgeObjectRelease();
LABEL_21:
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  if (!*(void *)(a1 + 480))
  {
LABEL_25:
    long long v37 = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 488) = v37;
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    goto LABEL_26;
  }
  uint64_t v34 = *(void *)(a2 + 480);
  if (!v34)
  {
    sub_70B88(a1 + 472);
    goto LABEL_25;
  }
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v36;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
LABEL_26:
  uint64_t v38 = *(int *)(a3 + 56);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7116C);
}

uint64_t sub_7116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_71230);
}

uint64_t sub_71230(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_712D8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PurchaseSuccessEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x71494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseSuccessEvent.Model.CodingKeys()
{
  return &type metadata for PurchaseSuccessEvent.Model.CodingKeys;
}

unint64_t sub_714D0()
{
  unint64_t result = qword_318700;
  if (!qword_318700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318700);
  }
  return result;
}

unint64_t sub_71528()
{
  unint64_t result = qword_318708;
  if (!qword_318708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318708);
  }
  return result;
}

unint64_t sub_71580()
{
  unint64_t result = qword_318710;
  if (!qword_318710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318710);
  }
  return result;
}

uint64_t sub_715D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE480 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE4E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE500 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t GenreData.contentType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenreData.contentType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t ClickData.outBoundURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickData.outBoundURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t ContentExposureData.cellSize.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentExposureData.cellSize.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

unint64_t ContentExposureData.positionInSubSection.getter()
{
  return *(unsigned int *)(v0 + 80) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32);
}

uint64_t ContentExposureData.positionInSubSection.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 80) = result;
  *(unsigned char *)(v1 + 84) = BYTE4(result) & 1;
  return result;
}

unint64_t ContentExposureData.subSectionID.getter()
{
  return *(unsigned int *)(v0 + 88) | ((unint64_t)*(unsigned __int8 *)(v0 + 92) << 32);
}

uint64_t ContentExposureData.subSectionID.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 88) = result;
  *(unsigned char *)(v1 + 92) = BYTE4(result) & 1;
  return result;
}

uint64_t (*LinkData.previousCollectionID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureData.subSectionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentExposureData.subSectionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

uint64_t (*UserEventStorageData.sampleBooksDownloadedCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t ContentExposureData.subSectionPosition.getter()
{
  return *(unsigned int *)(v0 + 112) | ((unint64_t)*(unsigned __int8 *)(v0 + 116) << 32);
}

uint64_t ContentExposureData.subSectionPosition.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 112) = result;
  *(unsigned char *)(v1 + 116) = BYTE4(result) & 1;
  return result;
}

uint64_t (*UserEventStorageData.ratedBookCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureData.hasLanguageTag.getter()
{
  return *(unsigned __int8 *)(v0 + 117);
}

uint64_t ContentExposureData.hasLanguageTag.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 117) = result;
  return result;
}

uint64_t (*ContentExposureData.hasLanguageTag.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall ContentExposureData.init(sectionType:sectionID:sectionName:positionInSection:cellSize:positionInSubSection:subSectionID:subSectionName:subSectionPosition:hasLanguageTag:)(BookAnalytics::ContentExposureData *__return_ptr retstr, Swift::String sectionType, Swift::String sectionID, Swift::String sectionName, Swift::String positionInSection, Swift::String cellSize, Swift::Int32_optional positionInSubSection, Swift::Int32_optional subSectionID, Swift::String_optional subSectionName, Swift::Int32_optional subSectionPosition, Swift::Bool_optional hasLanguageTag)
{
  retstr->sectionType = sectionType;
  retstr->sectionID = sectionID;
  retstr->sectionName = sectionName;
  retstr->positionInSection = positionInSection;
  retstr->cellSize = cellSize;
  retstr->positionInSubSection.value = positionInSubSection.value;
  retstr->positionInSubSection.is_nil = positionInSubSection.is_nil;
  retstr->subSectionID.value = subSectionID.value;
  retstr->subSectionID.is_nil = subSectionID.is_nil;
  retstr->subSectionName = subSectionName;
  retstr->subSectionPosition.value = subSectionPosition.value;
  retstr->subSectionPosition.is_nil = subSectionPosition.is_nil;
  retstr->hasLanguageTag = hasLanguageTag;
}

unint64_t sub_71DB0(char a1)
{
  unint64_t result = 0x546E6F6974636573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6974636573;
      break;
    case 2:
      unint64_t result = 0x4E6E6F6974636573;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x657A69536C6C6563;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 7:
      unint64_t result = 0x6974636553627573;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x75676E614C736168;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_71F20()
{
  return sub_71DB0(*v0);
}

uint64_t sub_71F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_732C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_71F50(uint64_t a1)
{
  unint64_t v2 = sub_72C74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_71F8C(uint64_t a1)
{
  unint64_t v2 = sub_72C74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentExposureData.encode(to:)(void *a1)
{
  uint64_t v3 = *(void *)(sub_4E04(&qword_318718) - 8);
  __chkstk_darwin();
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v32 = *(void *)(v1 + 24);
  uint64_t v33 = v6;
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v30 = *(void *)(v1 + 40);
  uint64_t v31 = v7;
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v28 = *(void *)(v1 + 56);
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v26 = *(void *)(v1 + 64);
  uint64_t v27 = v9;
  uint64_t v25 = *(unsigned int *)(v1 + 80);
  int v24 = *(unsigned __int8 *)(v1 + 84);
  uint64_t v23 = *(unsigned int *)(v1 + 88);
  int v22 = *(unsigned __int8 *)(v1 + 92);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v20 = *(void *)(v1 + 96);
  uint64_t v21 = v10;
  uint64_t v19 = *(unsigned int *)(v1 + 112);
  int v18 = *(unsigned __int8 *)(v1 + 116);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  sub_5900(v12, v11);
  sub_72C74();
  sub_27E440();
  char v47 = 0;
  uint64_t v15 = v34;
  sub_27E2F0();
  if (!v15)
  {
    char v46 = 1;
    sub_27E2F0();
    char v45 = 2;
    sub_27E2F0();
    char v44 = 3;
    sub_27E2F0();
    char v43 = 4;
    sub_27E2F0();
    char v42 = 5;
    char v40 = v24;
    sub_27E2D0();
    char v41 = 6;
    char v39 = v22;
    sub_27E2D0();
    char v38 = 7;
    sub_27E290();
    char v37 = 8;
    char v36 = v18;
    sub_27E2D0();
    char v35 = 9;
    sub_27E2A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v14);
}

uint64_t ContentExposureData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_318728);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_72C74();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v57 = 0;
    uint64_t v10 = sub_27E220();
    uint64_t v12 = v11;
    char v56 = 1;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_27E220();
    char v43 = a2;
    char v55 = 2;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_27E220();
    uint64_t v47 = v14;
    uint64_t v41 = v15;
    char v54 = 3;
    uint64_t v17 = v16;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_27E220();
    uint64_t v46 = v17;
    uint64_t v40 = v18;
    char v53 = 4;
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_27E220();
    uint64_t v45 = v20;
    uint64_t v39 = v21;
    char v52 = 5;
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_27E200();
    uint64_t v44 = v23;
    uint64_t v38 = v24;
    char v51 = 6;
    uint64_t v37 = sub_27E200();
    char v50 = 7;
    uint64_t v25 = sub_27E1C0();
    uint64_t v27 = v26;
    uint64_t v36 = v25;
    char v49 = 8;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_27E200();
    char v48 = 9;
    char v28 = sub_27E1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v29 = v42;
    uint64_t v30 = v43;
    *char v43 = v10;
    v30[1] = v12;
    uint64_t v32 = v46;
    uint64_t v31 = v47;
    v30[2] = v29;
    v30[3] = v31;
    v30[4] = v41;
    v30[5] = v32;
    uint64_t v34 = v44;
    uint64_t v33 = v45;
    v30[6] = v40;
    v30[7] = v33;
    v30[8] = v39;
    v30[9] = v34;
    BYTE4(v29) = BYTE4(v38);
    *((_DWORD *)v30 + 20) = v38;
    *((unsigned char *)v30 + 84) = BYTE4(v29) & 1;
    BYTE4(v29) = BYTE4(v37);
    *((_DWORD *)v30 + 22) = v37;
    *((unsigned char *)v30 + 92) = BYTE4(v29) & 1;
    v30[12] = v36;
    v30[13] = v27;
    BYTE4(v29) = BYTE4(v35);
    *((_DWORD *)v30 + 28) = v35;
    *((unsigned char *)v30 + 116) = BYTE4(v29) & 1;
    *((unsigned char *)v30 + 117) = v28;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_72920@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ContentExposureData.init(from:)(a1, a2);
}

uint64_t sub_72938(void *a1)
{
  return ContentExposureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics19ContentExposureDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v44 = *(void *)(a1 + 56);
  uint64_t v45 = *(void *)(a1 + 48);
  uint64_t v43 = *(void *)(a1 + 64);
  uint64_t v41 = *(void *)(a1 + 72);
  char v39 = *(unsigned char *)(a1 + 84);
  int v31 = *(_DWORD *)(a1 + 88);
  int v36 = *(_DWORD *)(a1 + 80);
  char v37 = *(unsigned char *)(a1 + 92);
  uint64_t v29 = *(void *)(a1 + 96);
  uint64_t v33 = *(void *)(a1 + 104);
  char v27 = *(unsigned char *)(a1 + 116);
  int v24 = *(_DWORD *)(a1 + 112);
  int v25 = *(unsigned __int8 *)(a1 + 117);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v42 = *(void *)(a2 + 64);
  uint64_t v40 = *(void *)(a2 + 72);
  int v38 = *(unsigned __int8 *)(a2 + 84);
  int v30 = *(_DWORD *)(a2 + 88);
  int v34 = *(unsigned __int8 *)(a2 + 92);
  int v35 = *(_DWORD *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 96);
  uint64_t v32 = *(void *)(a2 + 104);
  int v26 = *(unsigned __int8 *)(a2 + 116);
  int v22 = *(_DWORD *)(a2 + 112);
  int v23 = *(unsigned __int8 *)(a2 + 117);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
      {
        if (v45 == v10 && v44 == v11 || (char v16 = sub_27E370(), result = 0, (v16 & 1) != 0))
        {
          if (v43 == v42 && v41 == v40 || (char v17 = sub_27E370(), result = 0, (v17 & 1) != 0))
          {
            if (v39)
            {
              if (!v38) {
                return 0;
              }
            }
            else
            {
              char v18 = v38;
              if (v36 != v35) {
                char v18 = 1;
              }
              if (v18) {
                return 0;
              }
            }
            if (v37)
            {
              if (!v34) {
                return 0;
              }
            }
            else
            {
              char v19 = v34;
              if (v31 != v30) {
                char v19 = 1;
              }
              if (v19) {
                return 0;
              }
            }
            if (v33)
            {
              if (v32)
              {
                if (v29 != v28 || v33 != v32)
                {
                  char v20 = sub_27E370();
                  uint64_t result = 0;
                  if ((v20 & 1) == 0) {
                    return result;
                  }
                }
LABEL_35:
                if (v27)
                {
                  if (!v26) {
                    return 0;
                  }
                }
                else
                {
                  char v21 = v26;
                  if (v24 != v22) {
                    char v21 = 1;
                  }
                  if (v21) {
                    return 0;
                  }
                }
                if (v25 == 2)
                {
                  if (v23 != 2) {
                    return 0;
                  }
                }
                else if (v23 == 2 || ((((v25 & 1) == 0) ^ v23) & 1) == 0)
                {
                  return 0;
                }
                return 1;
              }
            }
            else if (!v32)
            {
              goto LABEL_35;
            }
            return 0;
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_72C74()
{
  unint64_t result = qword_318720;
  if (!qword_318720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318720);
  }
  return result;
}

uint64_t destroy for ContentExposureData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentExposureData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentExposureData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v4;
  int v5 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  return a1;
}

__n128 initializeWithTake for ContentExposureData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 110) = *(void *)((char *)a2 + 110);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ContentExposureData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentExposureData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 118)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentExposureData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 116) = 0;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 118) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 118) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentExposureData()
{
  return &type metadata for ContentExposureData;
}

unsigned char *storeEnumTagSinglePayload for ContentExposureData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x73188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentExposureData.CodingKeys()
{
  return &type metadata for ContentExposureData.CodingKeys;
}

unint64_t sub_731C4()
{
  unint64_t result = qword_318730;
  if (!qword_318730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318730);
  }
  return result;
}

unint64_t sub_7321C()
{
  unint64_t result = qword_318738;
  if (!qword_318738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318738);
  }
  return result;
}

unint64_t sub_73274()
{
  unint64_t result = qword_318740;
  if (!qword_318740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318740);
  }
  return result;
}

uint64_t sub_732C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E6E6F6974636573 && a2 == 0xEB00000000656D61 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADF40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657A69536C6C6563 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE520 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6974636553627573 && a2 == 0xEC00000044496E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6974636553627573 && a2 == 0xEE00656D614E6E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE540 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x75676E614C736168 && a2 == 0xEE00676154656761)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_73748(uint64_t a1)
{
  return sub_73964(a1, qword_318748);
}

uint64_t static Logger.analyticsController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315650, (uint64_t)qword_318748, a1);
}

uint64_t sub_73790(uint64_t a1)
{
  return sub_73964(a1, qword_318760);
}

uint64_t static Logger.appAnalyticsActionImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315658, (uint64_t)qword_318760, a1);
}

uint64_t sub_737D8(uint64_t a1)
{
  return sub_73964(a1, qword_318778);
}

uint64_t static Logger.appManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315660, (uint64_t)qword_318778, a1);
}

uint64_t sub_73820(uint64_t a1)
{
  return sub_73964(a1, qword_318790);
}

uint64_t static Logger.debugEventProcessor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315668, (uint64_t)qword_318790, a1);
}

uint64_t sub_73868(uint64_t a1)
{
  return sub_73964(a1, qword_3187A8);
}

uint64_t static Logger.eventReporter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315670, (uint64_t)qword_3187A8, a1);
}

uint64_t sub_738B0(uint64_t a1)
{
  return sub_73964(a1, qword_3187C0);
}

uint64_t static Logger.eventViewModifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315678, (uint64_t)qword_3187C0, a1);
}

uint64_t sub_738F8(uint64_t a1)
{
  return sub_73964(a1, qword_3187D8);
}

uint64_t static Logger.hostingControllerVisibilityStateManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315680, (uint64_t)qword_3187D8, a1);
}

uint64_t sub_73940(uint64_t a1)
{
  return sub_73964(a1, qword_3187F0);
}

uint64_t sub_73964(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_27D9B0();
  sub_7CA8(v3, a2);
  sub_4BD4(v3, (uint64_t)a2);
  sub_27E0E0(16);
  swift_bridgeObjectRelease();
  return sub_27D9A0();
}

uint64_t static Logger.utilities.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_73A28(&qword_315688, (uint64_t)qword_3187F0, a1);
}

uint64_t sub_73A28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_27D9B0();
  uint64_t v6 = sub_4BD4(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

unint64_t ListeningSessionData.startTime.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t ListeningSessionData.startTime.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t ScrubData.totalLength.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t ScrubData.totalLength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

BookAnalytics::BitRateData __swiftcall BitRateData.init(prevBitRate:bitRate:)(Swift::Int32_optional prevBitRate, Swift::Int32 bitRate)
{
  *(_DWORD *)uint64_t v2 = prevBitRate.value;
  *(unsigned char *)(v2 + 4) = prevBitRate.is_nil;
  *(_DWORD *)(v2 + 8) = bitRate;
  result.prevBitRate = prevBitRate;
  result.bitRate = bitRate;
  return result;
}

BOOL static BitRateData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a1 != *(_DWORD *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8);
}

uint64_t sub_73B5C()
{
  if (*v0) {
    return 0x65746152746962;
  }
  else {
    return 0x5274694276657270;
  }
}

uint64_t sub_73BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_7426C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_73BC8(uint64_t a1)
{
  unint64_t v2 = sub_73DBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_73C04(uint64_t a1)
{
  unint64_t v2 = sub_73DBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BitRateData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_318808);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(unsigned char *)(v1 + 4);
  int v11 = *(_DWORD *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_73DBC();
  sub_27E440();
  char v14 = 0;
  char v12 = v7;
  uint64_t v8 = v10[1];
  sub_27E2D0();
  if (!v8)
  {
    char v13 = 1;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_73DBC()
{
  unint64_t result = qword_318810;
  if (!qword_318810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318810);
  }
  return result;
}

uint64_t BitRateData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_318818);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_73DBC();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_27E200();
    char v13 = 1;
    int v10 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v9;
    *(unsigned char *)(a2 + 4) = BYTE4(v9) & 1;
    *(_DWORD *)(a2 + 8) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_73FC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BitRateData.init(from:)(a1, a2);
}

uint64_t sub_73FD8(void *a1)
{
  return BitRateData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for BitRateData(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BitRateData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BitRateData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BitRateData()
{
  return &type metadata for BitRateData;
}

unsigned char *storeEnumTagSinglePayload for BitRateData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7412CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BitRateData.CodingKeys()
{
  return &type metadata for BitRateData.CodingKeys;
}

unint64_t sub_74168()
{
  unint64_t result = qword_318820;
  if (!qword_318820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318820);
  }
  return result;
}

unint64_t sub_741C0()
{
  unint64_t result = qword_318828;
  if (!qword_318828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318828);
  }
  return result;
}

unint64_t sub_74218()
{
  unint64_t result = qword_318830;
  if (!qword_318830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318830);
  }
  return result;
}

uint64_t sub_7426C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5274694276657270 && a2 == 0xEB00000000657461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746152746962 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::RecoType_optional __swiftcall RecoType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F77A0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t RecoType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65536E497478656ELL;
      break;
    case 2:
      unint64_t result = 0x6D6F724665726F6DLL;
      break;
    case 3:
      unint64_t result = 0x48676E6964616572;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_744A4(unsigned __int8 *a1, char *a2)
{
  return sub_2CB2C(*a1, *a2);
}

unint64_t sub_744B4()
{
  unint64_t result = qword_318838;
  if (!qword_318838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318838);
  }
  return result;
}

Swift::Int sub_74508()
{
  return sub_20B790();
}

uint64_t sub_74510()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_74614()
{
  return sub_25D918();
}

BookAnalytics::RecoType_optional sub_7461C(Swift::String *a1)
{
  return RecoType.init(rawValue:)(*a1);
}

void sub_74628(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000073656972;
      uint64_t v3 = 0x65536E497478656ELL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "moreFromAuthor");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      strcpy((char *)a1, "readingHistory");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 0xD000000000000010;
      *(void *)(a1 + 8) = 0x80000000002ACDE0;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_74708()
{
  return sub_27DED0();
}

uint64_t sub_74768()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for RecoType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x74884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecoType()
{
  return &type metadata for RecoType;
}

unint64_t sub_748BC()
{
  unint64_t result = qword_318840;
  if (!qword_318840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318840);
  }
  return result;
}

uint64_t sub_74910(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318848, &enum case for SessionGroup.default(_:));
}

uint64_t static PreorderAttemptEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315690, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318848, a1);
}

uint64_t sub_74970(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318860, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PreorderAttemptEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315698, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318860, a1);
}

uint64_t PreorderAttemptEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderAttemptEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3188E8);
}

uint64_t PreorderAttemptEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderAttemptEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderAttemptEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderAttemptEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderAttemptEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderAttemptEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderAttemptEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderAttemptEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderAttemptEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PreorderAttemptEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t GiftEvent.Model.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  char v10 = *(unsigned char *)(v1 + 164);
  int v11 = *(_DWORD *)(v1 + 160);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 68) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  return sub_6B78C(v2, v3, v4, v5, v6, v7);
}

uint64_t RedownloadCompleteEvent.Model.sectionData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[21];
  uint64_t v3 = v1[22];
  uint64_t v4 = v1[23];
  uint64_t v5 = v1[24];
  uint64_t v6 = v1[25];
  uint64_t v7 = v1[26];
  uint64_t v8 = v1[27];
  uint64_t v9 = v1[28];
  uint64_t v10 = v1[29];
  uint64_t v11 = v1[30];
  uint64_t v12 = v1[31];
  uint64_t v13 = v1[32];
  uint64_t v14 = v1[33];
  uint64_t v15 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  return sub_1F200(v2, v3, v4);
}

uint64_t PreorderAttemptEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderAttemptEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderAttemptEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_318980);
}

uint64_t PreorderAttemptEvent.Model.init(contentData:contentStoreData:sectionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(unsigned char *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 24) = v9;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 56) = v12;
  *(_DWORD *)(a5 + 60) = v13;
  *(unsigned char *)(a5 + 64) = v14;
  *(_DWORD *)(a5 + 68) = v15;
  *(unsigned char *)(a5 + 72) = v16;
  int v17 = *(_DWORD *)(a1 + 73);
  long long v18 = *a2;
  long long v19 = a2[1];
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v18;
  long long v20 = a2[2];
  long long v21 = a2[3];
  *(_OWORD *)(a5 + 112) = v19;
  *(_OWORD *)(a5 + 128) = v20;
  *(_OWORD *)(a5 + 144) = v21;
  long long v22 = a3[1];
  *(_OWORD *)(a5 + 168) = *a3;
  *(_OWORD *)(a5 + 184) = v22;
  long long v23 = a3[3];
  *(_OWORD *)(a5 + 200) = a3[2];
  *(_OWORD *)(a5 + 216) = v23;
  long long v24 = a3[5];
  *(_OWORD *)(a5 + 232) = a3[4];
  char v25 = *(unsigned char *)(a1 + 77);
  LODWORD(v10) = *((_DWORD *)a2 + 16);
  LOBYTE(v11) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a5 + 73) = v17;
  *(unsigned char *)(a5 + 77) = v25;
  *(unsigned char *)(a5 + 164) = v11;
  *(_DWORD *)(a5 + 160) = v10;
  *(_OWORD *)(a5 + 248) = v24;
  *(_OWORD *)(a5 + 264) = a3[6];
  uint64_t v26 = a5 + *(int *)(type metadata accessor for PreorderAttemptEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_751A8()
{
  unint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_75244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_77E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_7526C(uint64_t a1)
{
  unint64_t v2 = sub_755AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_752A8(uint64_t a1)
{
  unint64_t v2 = sub_755AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PreorderAttemptEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_318878);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  long long v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_755AC();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)uint64_t v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    type metadata accessor for PreorderAttemptEvent.Model(0);
    LOBYTE(v32) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_755AC()
{
  unint64_t result = qword_318880;
  if (!qword_318880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318880);
  }
  return result;
}

uint64_t PreorderAttemptEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4E04(&qword_318888);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreorderAttemptEvent.Model(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v44 = a1;
  sub_5900(a1, v11);
  sub_755AC();
  long long v12 = v7;
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v14 = v10;
  __int16 v15 = v5;
  uint64_t v17 = v41;
  uint64_t v16 = v42;
  char v52 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v46 + 1);
  char v19 = v47[0];
  long long v20 = *(_OWORD *)&v47[8];
  uint64_t v21 = *(void *)&v47[24];
  uint64_t v22 = v48;
  __int16 v23 = WORD4(v48);
  int v24 = HIDWORD(v48);
  char v25 = v49;
  int v26 = DWORD1(v49);
  char v27 = BYTE8(v49);
  char v28 = BYTE13(v49);
  *(void *)uint64_t v14 = v46;
  *((void *)v14 + 1) = v18;
  unsigned char v14[16] = v19;
  *(_OWORD *)(v14 + 24) = v20;
  *((void *)v14 + 5) = v21;
  *((void *)v14 + 6) = v22;
  *((_WORD *)v14 + 28) = v23;
  *((_DWORD *)v14 + 15) = v24;
  v14[64] = v25;
  *((_DWORD *)v14 + 17) = v26;
  v14[72] = v27;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v49 + 9);
  v14[77] = v28;
  *((_OWORD *)v14 + 5) = v50;
  char v52 = 1;
  sub_6D068();
  sub_27E1F0();
  int v29 = v49;
  char v30 = BYTE4(v49);
  long long v31 = *(_OWORD *)v47;
  *((_OWORD *)v14 + 6) = v46;
  *((_OWORD *)v14 + 7) = v31;
  long long v32 = v48;
  *((_OWORD *)v14 + 8) = *(_OWORD *)&v47[16];
  *((_OWORD *)v14 + 9) = v32;
  v14[164] = v30;
  *((_DWORD *)v14 + 40) = v29;
  char v52 = 2;
  sub_20898();
  sub_27E1F0();
  long long v33 = *(_OWORD *)v47;
  *(_OWORD *)(v14 + 168) = v46;
  long long v34 = *(_OWORD *)&v47[16];
  long long v35 = v48;
  *(_OWORD *)(v14 + 184) = v33;
  *(_OWORD *)(v14 + 200) = v34;
  long long v36 = v49;
  long long v37 = v50;
  *(_OWORD *)(v14 + 216) = v35;
  *(_OWORD *)(v14 + 232) = v36;
  long long v38 = v51;
  *(_OWORD *)(v14 + 248) = v37;
  *(_OWORD *)(v14 + 264) = v38;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v43);
  (*(void (**)(void, char *, uint64_t))(v16 + 32))(*(int *)(v8 + 28), v15, v3);
  sub_75B00(0, v40);
  sub_5E94((uint64_t)v44);
  return sub_75B64(0);
}

uint64_t sub_75B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreorderAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_75B64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreorderAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_75BC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PreorderAttemptEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_75BD8(void *a1)
{
  return PreorderAttemptEvent.Model.encode(to:)(a1);
}

uint64_t sub_75BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315690, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318848, a1);
}

uint64_t sub_75C28@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315698, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318860, a1);
}

uint64_t sub_75C60@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for PreorderAttemptEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for PreorderAttemptEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for PreorderAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for PreorderAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for PreorderAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for PreorderAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreorderAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_76654);
}

uint64_t sub_76654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for PreorderAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_76810);
}

uint64_t sub_76810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_769C4()
{
  sub_76BAC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_76BAC(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_76BAC(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_76BAC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PreorderAttemptEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      uint64_t v14 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      uint64_t v15 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v15;
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2[23];
      if (v16)
      {
LABEL_4:
        *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
        *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v16;
        uint64_t v17 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v17;
        uint64_t v18 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v18;
        uint64_t v19 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v19;
        uint64_t v20 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v20;
        *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
        *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
        uint64_t v21 = a2[34];
        *(void *)(a1 + 264) = a2[33];
        *(void *)(a1 + 272) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v28 = *(int *)(a3 + 28);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        return a1;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v23;
      *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      uint64_t v16 = a2[23];
      if (v16) {
        goto LABEL_4;
      }
    }
    long long v25 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v25;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    long long v26 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v26;
    long long v27 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v27;
    goto LABEL_8;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v11)
  {
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    uint64_t v15 = *(void *)(a2 + 184);
    if (v15) {
      goto LABEL_3;
    }
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v23;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v24 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v24;
    long long v25 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v25;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = *(void *)(a2 + 184);
  if (!v15) {
    goto LABEL_5;
  }
LABEL_3:
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t assignWithCopy for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 96);
  int v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v11;
    }
    else
    {
      sub_70AE0(a1 + 96);
      _OWORD *v8 = *v9;
      long long v14 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v14;
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 112) = v15;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v12 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v8 = *v9;
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 168);
  uint64_t v20 = (_OWORD *)(a2 + 168);
  uint64_t v21 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v21)
    {
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v22;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235A0(a1 + 168);
      long long v25 = *(_OWORD *)(a2 + 184);
      long long v24 = *(_OWORD *)(a2 + 200);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v24;
      long long v26 = *(_OWORD *)(a2 + 264);
      long long v28 = *(_OWORD *)(a2 + 216);
      long long v27 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 216) = v28;
      *(_OWORD *)(a1 + 232) = v27;
    }
  }
  else if (v21)
  {
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    int v23 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v23;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v20;
    long long v30 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v30;
    *uint64_t v19 = v29;
    long long v31 = *(_OWORD *)(a2 + 216);
    long long v32 = *(_OWORD *)(a2 + 232);
    long long v33 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v33;
    *(_OWORD *)(a1 + 216) = v31;
    *(_OWORD *)(a1 + 232) = v32;
  }
  uint64_t v34 = *(int *)(a3 + 28);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

uint64_t initializeWithTake for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    uint64_t v10 = *(void *)(a2 + 136);
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v12;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_6;
    }
    sub_70AE0(a1 + 96);
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
LABEL_6:
  if (!*(void *)(a1 + 184))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v22;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v23 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v23;
    long long v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 184);
  if (!v16)
  {
    sub_235A0(a1 + 168);
    goto LABEL_10;
  }
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v25 = *(int *)(a3 + 28);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_779F0);
}

uint64_t sub_779F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PreorderAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_77AB4);
}

uint64_t sub_77AB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_77B5C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreorderAttemptEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x77CD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreorderAttemptEvent.Model.CodingKeys()
{
  return &type metadata for PreorderAttemptEvent.Model.CodingKeys;
}

unint64_t sub_77D10()
{
  unint64_t result = qword_3189C0;
  if (!qword_3189C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3189C0);
  }
  return result;
}

unint64_t sub_77D68()
{
  unint64_t result = qword_3189C8;
  if (!qword_3189C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3189C8);
  }
  return result;
}

unint64_t sub_77DC0()
{
  unint64_t result = qword_3189D0;
  if (!qword_3189D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3189D0);
  }
  return result;
}

uint64_t sub_77E14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static SingleCollectionData.data(with:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = BARoundIntegerToSignificantFigures(a1, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *(void *)a4 = a2;
    *(void *)(a4 + 8) = a3;
    *(_DWORD *)(a4 + 16) = result;
    return result;
  }
  __break(1u);
  return result;
}

BookAnalytics::LaunchType_optional __swiftcall LaunchType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7838;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t LaunchType.rawValue.getter()
{
  uint64_t v1 = 1684828003;
  if (*v0 != 1) {
    uint64_t v1 = 1836212599;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_78118(char *a1, unsigned __int8 *a2)
{
  return sub_325CC(*a1, *a2);
}

unint64_t sub_78128()
{
  unint64_t result = qword_3189D8;
  if (!qword_3189D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3189D8);
  }
  return result;
}

Swift::Int sub_7817C()
{
  return sub_27E420();
}

uint64_t sub_78210()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_78290()
{
  return sub_27E420();
}

BookAnalytics::LaunchType_optional sub_78320(Swift::String *a1)
{
  return LaunchType.init(rawValue:)(*a1);
}

void sub_7832C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1684828003;
  if (v2 != 1) {
    uint64_t v4 = 1836212599;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_7837C()
{
  return sub_27DED0();
}

uint64_t sub_783DC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for LaunchType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x784F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchType()
{
  return &type metadata for LaunchType;
}

unint64_t sub_78530()
{
  unint64_t result = qword_3189E0;
  if (!qword_3189E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3189E0);
  }
  return result;
}

uint64_t sub_78584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v45 = a6;
  uint64_t v47 = a1;
  uint64_t v11 = sub_27E040();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  ((void (*)(void))__chkstk_darwin)();
  long long v46 = (char *)&v38 - v12;
  uint64_t v44 = sub_27E040();
  uint64_t v13 = *(void *)(v44 - 8);
  uint64_t v14 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  uint64_t v18 = __chkstk_darwin(v14);
  char v39 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)(a3 - 8);
  uint64_t v24 = __chkstk_darwin(v20);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v38 - v27;
  long long v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v42 = a2;
  v29(v22, a2, a4);
  int v30 = swift_dynamicCast();
  long long v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v30)
  {
    v31(v16, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v16, a3);
    char v32 = sub_27DD90();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, a3);
  }
  else
  {
    v31(v16, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v44);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v47, a3);
    long long v33 = v46;
    int v34 = swift_dynamicCast();
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    if (v34)
    {
      v35(v33, 0, 1, a4);
      uint64_t v36 = v39;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v39, v33, a4);
      char v32 = sub_27DD90();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, a4);
    }
    else
    {
      v35(v33, 1, 1, a4);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
      char v32 = 0;
    }
  }
  return v32 & 1;
}

uint64_t ==~ infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  unsigned int v6 = sub_5900(a1, v3);
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = sub_5900(a2, v7);

  return sub_78584((uint64_t)v6, (uint64_t)v10, v3, v7, v4, v5, v8, v9);
}

uint64_t sub_78A5C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3189E8, &enum case for SessionGroup.default(_:));
}

uint64_t static ShareSheetExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3189E8, a1);
}

uint64_t sub_78ABC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318A00, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ShareSheetExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318A00, a1);
}

uint64_t ShareSheetExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSheetExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_318A88);
}

uint64_t ShareSheetExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSheetExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareSheetExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareSheetExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSheetExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareSheetExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ShareSheetExposureEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t ShareSheetExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSheetExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_318B20);
}

uint64_t ShareSheetExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSheetExposureEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareSheetExposureEvent.Model.init(contentData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 77);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = v8;
  *(_OWORD *)(a4 + 24) = v9;
  *(void *)(a4 + 40) = v10;
  *(void *)(a4 + 48) = v11;
  *(_WORD *)(a4 + 56) = v12;
  *(_DWORD *)(a4 + 60) = v13;
  *(unsigned char *)(a4 + 64) = v14;
  *(_DWORD *)(a4 + 68) = v15;
  *(unsigned char *)(a4 + 72) = v16;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v17;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  uint64_t v18 = type metadata accessor for ShareSheetExposureEvent.Model(0);
  uint64_t v19 = a4 + *(int *)(v18 + 20);
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  uint64_t v21 = a4 + *(int *)(v18 + 24);
  uint64_t v22 = sub_27D7F0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);

  return v23(v21, a3, v22);
}

uint64_t sub_79120()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_7918C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_7B524(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_791B4(uint64_t a1)
{
  unint64_t v2 = sub_794D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_791F0(uint64_t a1)
{
  unint64_t v2 = sub_794D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShareSheetExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_318A18);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_794D0();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v23 = *v4;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)((char *)v4 + 73);
  char v35 = v20;
  long long v36 = *((_OWORD *)v4 + 5);
  v22[15] = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    type metadata accessor for ShareSheetExposureEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v23) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_794D0()
{
  unint64_t result = qword_318A20;
  if (!qword_318A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318A20);
  }
  return result;
}

uint64_t ShareSheetExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_27D7F0();
  uint64_t v34 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4E04(&qword_318A28);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ShareSheetExposureEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v41 = a1;
  sub_5900(a1, v13);
  sub_794D0();
  uint64_t v40 = v9;
  uint64_t v14 = v42;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v41);
  }
  __int16 v15 = v7;
  uint64_t v16 = v37;
  uint64_t v42 = v12;
  uint64_t v33 = v10;
  int v32 = v4;
  uint64_t v17 = v38;
  char v57 = 0;
  sub_1A98C();
  uint64_t v18 = v39;
  sub_27E260();
  uint64_t v19 = v44;
  char v20 = v45;
  long long v21 = v46;
  uint64_t v22 = v47;
  uint64_t v23 = v48;
  __int16 v24 = v49;
  int v25 = v50;
  char v26 = v51;
  int v27 = v52;
  char v28 = v53;
  char v29 = v55;
  uint64_t v30 = (uint64_t)v42;
  void *v42 = v43;
  *(void *)(v30 + 8) = v19;
  *(unsigned char *)(v30 + 16) = v20;
  *(_OWORD *)(v30 + 24) = v21;
  *(void *)(v30 + 40) = v22;
  *(void *)(v30 + 48) = v23;
  *(_WORD *)(v30 + 56) = v24;
  *(_DWORD *)(v30 + 60) = v25;
  *(unsigned char *)(v30 + 64) = v26;
  *(_DWORD *)(v30 + 68) = v27;
  *(unsigned char *)(v30 + 72) = v28;
  *(_DWORD *)(v30 + 73) = v54;
  *(unsigned char *)(v30 + 77) = v29;
  *(_OWORD *)(v30 + 80) = v56;
  LOBYTE(v43) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v30 + *(int *)(v33 + 20), v15, v5);
  LOBYTE(v43) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v40, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v30 + *(int *)(v33 + 24), v32, v17);
  sub_79A74(v30, v35);
  sub_5E94((uint64_t)v41);
  return sub_79AD8(v30);
}

uint64_t sub_79A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareSheetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_79AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareSheetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_79B34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareSheetExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_79B4C(void *a1)
{
  return ShareSheetExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_79B64@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3189E8, a1);
}

uint64_t sub_79B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318A00, a1);
}

uint64_t sub_79BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareSheetExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ShareSheetExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7A3AC);
}

uint64_t sub_7A3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ShareSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7A518);
}

uint64_t sub_7A518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_7A67C()
{
  sub_7A780();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_7A780()
{
  if (!qword_316868)
  {
    sub_1A98C();
    sub_1A1D4();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_316868);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v21 = (uint64_t)a2 + v12;
    uint64_t v22 = a1 + v12;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v22, v21, v13);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v8 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v8;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v19 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v19, v11, v12);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *initializeWithTake for ShareSheetExposureEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  long long v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  long long v8 = a2[1];
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7AFD8);
}

uint64_t sub_7AFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShareSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7B118);
}

uint64_t sub_7B118(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_7B244()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareSheetExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7B3E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetExposureEvent.Model.CodingKeys()
{
  return &type metadata for ShareSheetExposureEvent.Model.CodingKeys;
}

unint64_t sub_7B420()
{
  unint64_t result = qword_318B60;
  if (!qword_318B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318B60);
  }
  return result;
}

unint64_t sub_7B478()
{
  unint64_t result = qword_318B68;
  if (!qword_318B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318B68);
  }
  return result;
}

unint64_t sub_7B4D0()
{
  unint64_t result = qword_318B70;
  if (!qword_318B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318B70);
  }
  return result;
}

uint64_t sub_7B524(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_7B6AC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318B78, &enum case for SessionGroup.default(_:));
}

uint64_t static InitialAppStateQueryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318B78, a1);
}

uint64_t sub_7B70C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318B90, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static InitialAppStateQueryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318B90, a1);
}

uint64_t InitialAppStateQueryEvent.libraryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_318BA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t InitialAppStateQueryEvent.libraryData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_318BA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t InitialAppStateQueryEvent.readingNowData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_318BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for InitialAppStateQueryEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_318C48);
}

uint64_t InitialAppStateQueryEvent.readingNowData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_318BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InitialAppStateQueryEvent.readingNowData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InitialAppStateQueryEvent.collectionSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InitialAppStateQueryEvent.collectionSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InitialAppStateQueryEvent.collectionSummaryData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InitialAppStateQueryEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InitialAppStateQueryEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InitialAppStateQueryEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InitialAppStateQueryEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InitialAppStateQueryEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InitialAppStateQueryEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InitialAppStateQueryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for InitialAppStateQueryEvent(0);
  uint64_t v5 = a1 + Event[5];
  uint64_t v6 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  uint64_t v8 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + Event[7];
  uint64_t v10 = enum case for EventProperty.required<A>(_:);
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + Event[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v10, v13);
}

uint64_t InitialAppStateQueryEvent.Model.readingNowData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t InitialAppStateQueryEvent.Model.collectionSummaryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t InitialAppStateQueryEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for InitialAppStateQueryEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_318CF8);
}

uint64_t InitialAppStateQueryEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InitialAppStateQueryEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InitialAppStateQueryEvent.Model.init(libraryData:readingNowData:collectionSummaryData:eventData:timedData:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = *a3;
  *a6 = *a1;
  a6[1] = v9;
  a6[2] = v10;
  uint64_t v11 = type metadata accessor for InitialAppStateQueryEvent.Model(0);
  uint64_t v12 = (char *)a6 + *(int *)(v11 + 28);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
  uint64_t v14 = (char *)a6 + *(int *)(v11 + 32);
  uint64_t v15 = sub_27D7F0();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);

  return v16(v14, a5, v15);
}

uint64_t sub_7C130()
{
  uint64_t result = 0x447972617262696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4E676E6964616572;
      break;
    case 2:
      uint64_t result = 0xD000000000000015;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_7C1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_7EC2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_7C218(uint64_t a1)
{
  unint64_t v2 = sub_7C55C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7C254(uint64_t a1)
{
  unint64_t v2 = sub_7C55C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t InitialAppStateQueryEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_318BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_7C55C();
  sub_27E440();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  sub_7C5B0();
  sub_27E2C0();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_7C604();
    sub_27E2C0();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_5998();
    sub_27E2C0();
    type metadata accessor for InitialAppStateQueryEvent.Model(0);
    LOBYTE(v11) = 3;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v11) = 4;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_7C55C()
{
  unint64_t result = qword_318BC0;
  if (!qword_318BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318BC0);
  }
  return result;
}

unint64_t sub_7C5B0()
{
  unint64_t result = qword_318BC8;
  if (!qword_318BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318BC8);
  }
  return result;
}

unint64_t sub_7C604()
{
  unint64_t result = qword_318BD0;
  if (!qword_318BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318BD0);
  }
  return result;
}

uint64_t InitialAppStateQueryEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = sub_27D7F0();
  uint64_t v19 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v22 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_318BD8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for InitialAppStateQueryEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_7C55C();
  char v26 = v8;
  uint64_t v12 = (uint64_t)v27;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  int v27 = a1;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v28 = 0;
  sub_7CBE0();
  sub_27E1F0();
  *(void *)uint64_t v11 = v29;
  char v28 = 1;
  sub_7CC34();
  sub_27E1F0();
  *((void *)v11 + 1) = v29;
  char v28 = 2;
  sub_5EE4();
  v18[1] = 0;
  sub_27E1F0();
  *((void *)v11 + 2) = v29;
  LOBYTE(v29) = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v11[*(int *)(v9 + 28)], v6, v4);
  LOBYTE(v29) = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v25);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v11[*(int *)(v9 + 32)], v16, v15);
  sub_7CC88((uint64_t)v11, v20);
  sub_5E94((uint64_t)v27);
  return sub_7CCEC((uint64_t)v11);
}

unint64_t sub_7CBE0()
{
  unint64_t result = qword_318BE0;
  if (!qword_318BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318BE0);
  }
  return result;
}

unint64_t sub_7CC34()
{
  unint64_t result = qword_318BE8;
  if (!qword_318BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318BE8);
  }
  return result;
}

uint64_t sub_7CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InitialAppStateQueryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7CCEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InitialAppStateQueryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7CD48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InitialAppStateQueryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_7CD60(void *a1)
{
  return InitialAppStateQueryEvent.Model.encode(to:)(a1);
}

uint64_t sub_7CD78@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318B78, a1);
}

uint64_t sub_7CDB0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318B90, a1);
}

uint64_t sub_7CDE8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.required<A>(_:);
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v11, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for InitialAppStateQueryEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_318BA8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_318BB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for InitialAppStateQueryEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_318BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7D9DC);
}

uint64_t sub_7D9DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_318BB0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_315DD8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for InitialAppStateQueryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7DBE8);
}

uint64_t sub_7DBE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_318BA8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_318BB0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_315DD8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_7DDEC()
{
  sub_7E010(319, &qword_318C58, (void (*)(void))sub_7CBE0, (void (*)(void))sub_7C5B0);
  if (v0 <= 0x3F)
  {
    sub_7E010(319, (unint64_t *)&unk_318C60, (void (*)(void))sub_7CC34, (void (*)(void))sub_7C604);
    if (v1 <= 0x3F)
    {
      sub_7E010(319, (unint64_t *)&qword_315EA0, (void (*)(void))sub_5EE4, (void (*)(void))sub_5998);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_7E010(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for InitialAppStateQueryEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v18 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_27D7C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v18, v10, v11);
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_27D7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for InitialAppStateQueryEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for InitialAppStateQueryEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v16 = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v16, v8, v9);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *assignWithCopy for InitialAppStateQueryEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for InitialAppStateQueryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *assignWithTake for InitialAppStateQueryEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for InitialAppStateQueryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7E6D0);
}

uint64_t sub_7E6D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 28);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 32);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for InitialAppStateQueryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7E81C);
}

void *sub_7E81C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_7E948()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InitialAppStateQueryEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7EAECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InitialAppStateQueryEvent.Model.CodingKeys()
{
  return &type metadata for InitialAppStateQueryEvent.Model.CodingKeys;
}

unint64_t sub_7EB28()
{
  unint64_t result = qword_318D40;
  if (!qword_318D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318D40);
  }
  return result;
}

unint64_t sub_7EB80()
{
  unint64_t result = qword_318D48;
  if (!qword_318D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318D48);
  }
  return result;
}

unint64_t sub_7EBD8()
{
  unint64_t result = qword_318D50;
  if (!qword_318D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318D50);
  }
  return result;
}

uint64_t sub_7EC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x447972617262696CLL && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E676E6964616572 && a2 == 0xEE0061746144776FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002ADB40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_7EE98(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318D58, &enum case for SessionGroup.default(_:));
}

uint64_t static GetStartedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318D58, a1);
}

uint64_t sub_7EEF8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318D70, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GetStartedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318D70, a1);
}

uint64_t PredictiveSearchSuggestionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_315DE0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PredictiveSearchSuggestionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_315DE0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t GetStartedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GetStartedViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_318DF8);
}

uint64_t GetStartedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GetStartedViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GetStartedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for GetStartedViewEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE8);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t PredictiveSearchSuggestionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_27D7C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GetStartedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GetStartedViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_318E88);
}

uint64_t GetStartedViewEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for GetStartedViewEvent.Model(0) + 20);
  uint64_t v8 = sub_27D7F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_7F41C()
{
  if (*v0) {
    return 0x74614464656D6974;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_7F454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_80E70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_7F47C(uint64_t a1)
{
  unint64_t v2 = sub_7F6F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7F4B8(uint64_t a1)
{
  unint64_t v2 = sub_7F6F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GetStartedViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_318D88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_7F6F4();
  sub_27E440();
  v8[15] = 0;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E330();
  if (!v1)
  {
    type metadata accessor for GetStartedViewEvent.Model(0);
    v8[14] = 1;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_7F6F4()
{
  unint64_t result = qword_318D90;
  if (!qword_318D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318D90);
  }
  return result;
}

uint64_t GetStartedViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_27D7F0();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_27D7C0();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v25 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_318D98);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t StartedView = type metadata accessor for GetStartedViewEvent.Model(0);
  __chkstk_darwin(StartedView);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_7F6F4();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v20 = StartedView;
  uint64_t v12 = v11;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v15 = v25;
  sub_27E260();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v19 = (uint64_t)v12;
  v16(v12, v15, v27);
  char v29 = 1;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v17 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19 + *(int *)(v20 + 20), v5, v13);
  sub_7FB64(v17, v22);
  sub_5E94((uint64_t)a1);
  return sub_7FBC8(v17);
}

uint64_t sub_7FB64(uint64_t a1, uint64_t a2)
{
  uint64_t StartedView = type metadata accessor for GetStartedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(StartedView - 8) + 16))(a2, a1, StartedView);
  return a2;
}

uint64_t sub_7FBC8(uint64_t a1)
{
  uint64_t StartedView = type metadata accessor for GetStartedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(StartedView - 8) + 8))(a1, StartedView);
  return a1;
}

uint64_t sub_7FC24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GetStartedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_7FC3C(void *a1)
{
  return GetStartedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_7FC54@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318D58, a1);
}

uint64_t sub_7FC8C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318D70, a1);
}

uint64_t sub_7FCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for GetStartedViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_315DE0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for GetStartedViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_80264);
}

uint64_t sub_80264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for GetStartedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_80378);
}

uint64_t sub_80378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_80484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_80B90(a1, a2, a3, (uint64_t (*)(uint64_t))sub_6DA0, (uint64_t (*)(uint64_t))sub_6E6C);
}

uint64_t *initializeBufferWithCopyOfBuffer for GetStartedViewEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_27D7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_27D7F0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_80954);
}

uint64_t sub_80954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_27D7F0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for GetStartedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_80A60);
}

uint64_t sub_80A60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_27D7F0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_80B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_80B90(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for EventData, (uint64_t (*)(uint64_t))&type metadata accessor for TimedData);
}

uint64_t sub_80B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GetStartedViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x80D30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetStartedViewEvent.Model.CodingKeys()
{
  return &type metadata for GetStartedViewEvent.Model.CodingKeys;
}

unint64_t sub_80D6C()
{
  unint64_t result = qword_318EC0;
  if (!qword_318EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318EC0);
  }
  return result;
}

unint64_t sub_80DC4()
{
  unint64_t result = qword_318EC8;
  if (!qword_318EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318EC8);
  }
  return result;
}

unint64_t sub_80E1C()
{
  unint64_t result = qword_318ED0;
  if (!qword_318ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318ED0);
  }
  return result;
}

uint64_t sub_80E70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t CollectionSummaryData.collectionSummary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CollectionSummaryData.collectionSummary.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

BookAnalytics::CollectionSummaryData __swiftcall CollectionSummaryData.init(collectionSummary:)(BookAnalytics::CollectionSummaryData collectionSummary)
{
  v1->collectionSummary._rawValue = collectionSummary.collectionSummary._rawValue;
  return collectionSummary;
}

uint64_t static CollectionSummaryData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_8108C(*a1, *a2);
}

uint64_t sub_80FC4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_27E370(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_27E370() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_8108C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    int v3 = (_DWORD *)(a2 + 48);
    unsigned int v4 = (_DWORD *)(a1 + 48);
    do
    {
      int v5 = *v4;
      int v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_27E370();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 6;
      v4 += 6;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_81140(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = 0;
  while (2)
  {
    int v7 = *(_DWORD *)(a1 + v5 + 48);
    uint64_t v8 = *(unsigned __int8 *)(a1 + v5 + 52);
    int v9 = *(_DWORD *)(a2 + v5 + 48);
    uint64_t v10 = *(unsigned __int8 *)(a2 + v5 + 52);
    if (*(void *)(a1 + v5 + 32) == *(void *)(a2 + v5 + 32)
      && *(void *)(a1 + v5 + 40) == *(void *)(a2 + v5 + 40))
    {
      if (v7 == v9) {
        goto LABEL_15;
      }
      return 0;
    }
    char v12 = sub_27E370();
    uint64_t result = 0;
    if ((v12 & 1) != 0 && v7 == v9)
    {
LABEL_15:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x6E776F6E6B6E75;
      switch(v8)
      {
        case 1:
          unint64_t v14 = 0xE600000000000000;
          uint64_t v15 = 0x746E65636572;
          break;
        case 2:
          unint64_t v14 = 0xE800000000000000;
          uint64_t v15 = 0x676E69646E657274;
          break;
        case 3:
          uint64_t v15 = 0x64656863746566;
          break;
        case 4:
          uint64_t v16 = 0x736567677573;
          goto LABEL_21;
        case 5:
          uint64_t v16 = 0x636572726F63;
LABEL_21:
          uint64_t v15 = v16 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
          unint64_t v14 = 0xED00006D72655464;
          break;
        case 6:
          unint64_t v14 = 0x80000000002ACED0;
          uint64_t v15 = 0xD000000000000014;
          break;
        default:
          break;
      }
      unint64_t v17 = 0xE700000000000000;
      uint64_t v18 = 0x6E776F6E6B6E75;
      switch(v10)
      {
        case 1:
          unint64_t v17 = 0xE600000000000000;
          if (v15 == 0x746E65636572) {
            goto LABEL_34;
          }
          goto LABEL_5;
        case 2:
          unint64_t v17 = 0xE800000000000000;
          if (v15 != 0x676E69646E657274) {
            goto LABEL_5;
          }
          goto LABEL_34;
        case 3:
          if (v15 != 0x64656863746566) {
            goto LABEL_5;
          }
          goto LABEL_34;
        case 4:
          unint64_t v17 = 0xED00006D72655464;
          if (v15 != 0x6574736567677573) {
            goto LABEL_5;
          }
          goto LABEL_34;
        case 5:
          uint64_t v18 = 0x6574636572726F63;
          unint64_t v17 = 0xED00006D72655464;
          goto LABEL_33;
        case 6:
          unint64_t v17 = 0x80000000002ACED0;
          if (v15 != 0xD000000000000014) {
            goto LABEL_5;
          }
          goto LABEL_34;
        default:
LABEL_33:
          if (v15 != v18) {
            goto LABEL_5;
          }
LABEL_34:
          if (v14 == v17)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_5:
            char v6 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v6 & 1) == 0) {
              return 0;
            }
          }
          v5 += 24;
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
    return result;
  }
}

uint64_t sub_8144C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  while (2)
  {
    uint64_t v5 = *(void *)(a1 + v3 + 48);
    uint64_t v6 = *(unsigned __int8 *)(a1 + v3 + 64);
    uint64_t v7 = *(void *)(a1 + v3 + 80);
    uint64_t v20 = *(void *)(a1 + v3 + 72);
    uint64_t v21 = *(void *)(a1 + v3 + 56);
    uint64_t v8 = *(void *)(a2 + v3 + 48);
    uint64_t v22 = *(void *)(a2 + v3 + 56);
    uint64_t v9 = *(unsigned __int8 *)(a2 + v3 + 64);
    uint64_t v10 = *(void *)(a2 + v3 + 80);
    uint64_t v19 = *(void *)(a2 + v3 + 72);
    if ((*(void *)(a1 + v3 + 32) != *(void *)(a2 + v3 + 32)
       || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
      && (sub_27E370() & 1) == 0
      || (v5 != v8 || v21 != v22) && (sub_27E370() & 1) == 0)
    {
      return 0;
    }
    unint64_t v11 = 0xE700000000000000;
    uint64_t v12 = 0x6E776F6E6B6E75;
    switch(v6)
    {
      case 1:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1802465122;
        break;
      case 2:
        uint64_t v12 = 0x6F6F626F69647561;
        unint64_t v11 = 0xE90000000000006BLL;
        break;
      case 3:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 4605008;
        break;
      case 4:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 5527636;
        break;
      case 5:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 4276809;
        break;
      case 6:
        uint64_t v12 = 0x694773656E757469;
        unint64_t v11 = 0xEE00647261437466;
        break;
      default:
        break;
    }
    unint64_t v13 = 0xE700000000000000;
    uint64_t v14 = 0x6E776F6E6B6E75;
    switch(v9)
    {
      case 1:
        unint64_t v13 = 0xE400000000000000;
        if (v12 == 1802465122) {
          goto LABEL_31;
        }
        goto LABEL_34;
      case 2:
        unint64_t v13 = 0xE90000000000006BLL;
        if (v12 != 0x6F6F626F69647561) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 3:
        unint64_t v13 = 0xE300000000000000;
        if (v12 != 4605008) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 4:
        unint64_t v13 = 0xE300000000000000;
        if (v12 != 5527636) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 5:
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 4276809;
        goto LABEL_30;
      case 6:
        unint64_t v13 = 0xEE00647261437466;
        if (v12 != 0x694773656E757469) {
          goto LABEL_34;
        }
        goto LABEL_31;
      default:
LABEL_30:
        if (v12 != v14) {
          goto LABEL_34;
        }
LABEL_31:
        if (v11 == v13)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_35;
        }
LABEL_34:
        char v15 = sub_27E370();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_35:
          if (v20 == v19 && v7 == v10)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v4 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v4 & 1) == 0) {
              return 0;
            }
          }
          v3 += 56;
          if (!--v2) {
            return 1;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
    }
  }
}

uint64_t sub_81898(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      char v4 = (long long *)(a1 + 80);
      uint64_t v5 = (long long *)(a2 + 48);
      do
      {
        long long v6 = *(v4 - 2);
        v15[0] = *(v4 - 3);
        v15[1] = v6;
        long long v7 = *v4;
        _OWORD v15[2] = *(v4 - 1);
        v15[3] = v7;
        long long v8 = *v5;
        v14[0] = *(v5 - 1);
        v14[1] = v8;
        long long v9 = v5[2];
        _OWORD v14[2] = v5[1];
        void v14[3] = v9;
        char v10 = _s13BookAnalytics25RemoteConfigNamespaceDataV2eeoiySbAC_ACtFZ_0(v15, v14);
        BOOL v12 = v3-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 4;
        v5 += 4;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_81944(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    while (1)
    {
      long long v6 = (void *)(v4 + 24 * v3);
      uint64_t v7 = v6[2];
      long long v8 = (void *)(v5 + 24 * v3);
      uint64_t v9 = v8[2];
      BOOL v10 = *v6 == *v8 && v6[1] == v8[1];
      if (!v10 && (sub_27E370() & 1) == 0) {
        break;
      }
      uint64_t v11 = *(void *)(v7 + 16);
      if (v11 != *(void *)(v9 + 16)) {
        break;
      }
      if (v11) {
        BOOL v12 = v7 == v9;
      }
      else {
        BOOL v12 = 1;
      }
      if (!v12)
      {
        if (*(float *)(v7 + 32) != *(float *)(v9 + 32)) {
          return 0;
        }
        if (v11 != 1)
        {
          if (*(float *)(v7 + 36) != *(float *)(v9 + 36)) {
            return 0;
          }
          unint64_t v13 = (float *)(v7 + 40);
          uint64_t v14 = (float *)(v9 + 40);
          for (uint64_t i = v11 - 2; i; --i)
          {
            float v16 = *v13++;
            float v17 = v16;
            float v18 = *v14++;
            if (v17 != v18) {
              return 0;
            }
          }
        }
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

BOOL sub_81A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_81AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v16 = a1;
      while (1)
      {
        int v5 = *(_DWORD *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v28 = *(void *)(a1 + v4 + 72);
        uint64_t v29 = *(void *)(a1 + v4 + 80);
        uint64_t v26 = *(void *)(a1 + v4 + 96);
        uint64_t v27 = *(void *)(a1 + v4 + 88);
        uint64_t v20 = *(void *)(a1 + v4 + 120);
        uint64_t v21 = *(void *)(a1 + v4 + 112);
        int v8 = *(_DWORD *)(v3 + v4 + 48);
        uint64_t v9 = *(void *)(v3 + v4 + 56);
        uint64_t v10 = *(void *)(v3 + v4 + 64);
        uint64_t v12 = *(void *)(v3 + v4 + 72);
        uint64_t v11 = *(void *)(v3 + v4 + 80);
        uint64_t v25 = *(void *)(v3 + v4 + 88);
        uint64_t v24 = *(void *)(v3 + v4 + 96);
        int v22 = *(_DWORD *)(v3 + v4 + 104);
        int v23 = *(_DWORD *)(a1 + v4 + 104);
        uint64_t v18 = *(void *)(v3 + v4 + 120);
        uint64_t v19 = *(void *)(v3 + v4 + 112);
        if (*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)) {
          goto LABEL_11;
        }
        if (*(void *)(a1 + v4 + 40) == *(void *)(v3 + v4 + 40))
        {
          if (v5 != v8) {
            return 0;
          }
        }
        else
        {
LABEL_11:
          char v13 = sub_27E370();
          uint64_t result = 0;
          if ((v13 & 1) == 0 || v5 != v8) {
            return result;
          }
        }
        if ((v6 != v9 || v7 != v10) && (sub_27E370() & 1) == 0 || (v28 != v12 || v29 != v11) && (sub_27E370() & 1) == 0) {
          return 0;
        }
        if (v27 == v25 && v26 == v24)
        {
          if (v23 != v22) {
            return 0;
          }
        }
        else
        {
          char v15 = sub_27E370();
          uint64_t result = 0;
          if ((v15 & 1) == 0 || v23 != v22) {
            return result;
          }
        }
        if ((v21 != v19 || v20 != v18) && (sub_27E370() & 1) == 0) {
          return 0;
        }
        v4 += 96;
        --v2;
        a1 = v16;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_81CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v6 = *(unsigned __int8 *)(a1 + v3 + 64);
      float v7 = *(float *)(a1 + v3 + 68);
      uint64_t v8 = *(void *)(a1 + v3 + 80);
      uint64_t v22 = *(void *)(a1 + v3 + 72);
      uint64_t v23 = *(void *)(a1 + v3 + 56);
      uint64_t v9 = *(void *)(a2 + v3 + 48);
      uint64_t v24 = *(void *)(a2 + v3 + 56);
      uint64_t v10 = *(unsigned __int8 *)(a2 + v3 + 64);
      float v11 = *(float *)(a2 + v3 + 68);
      uint64_t v12 = *(void *)(a2 + v3 + 80);
      uint64_t v21 = *(void *)(a2 + v3 + 72);
      if ((*(void *)(a1 + v3 + 32) != *(void *)(a2 + v3 + 32)
         || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
        && (sub_27E370() & 1) == 0
        || (v5 != v9 || v23 != v24) && (sub_27E370() & 1) == 0)
      {
        return 0;
      }
      unint64_t v13 = 0xE700000000000000;
      uint64_t v14 = 0x6E776F6E6B6E75;
      switch(v6)
      {
        case 1:
          unint64_t v13 = 0xE400000000000000;
          uint64_t v14 = 1802465122;
          break;
        case 2:
          uint64_t v14 = 0x6F6F626F69647561;
          unint64_t v13 = 0xE90000000000006BLL;
          break;
        case 3:
          unint64_t v13 = 0xE300000000000000;
          uint64_t v14 = 4605008;
          break;
        case 4:
          unint64_t v13 = 0xE300000000000000;
          uint64_t v14 = 5527636;
          break;
        case 5:
          unint64_t v13 = 0xE300000000000000;
          uint64_t v14 = 4276809;
          break;
        case 6:
          uint64_t v14 = 0x694773656E757469;
          unint64_t v13 = 0xEE00647261437466;
          break;
        default:
          break;
      }
      unint64_t v15 = 0xE700000000000000;
      uint64_t v16 = 0x6E776F6E6B6E75;
      switch(v10)
      {
        case 1:
          unint64_t v15 = 0xE400000000000000;
          if (v14 == 1802465122) {
            goto LABEL_31;
          }
          goto LABEL_34;
        case 2:
          unint64_t v15 = 0xE90000000000006BLL;
          if (v14 != 0x6F6F626F69647561) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 3:
          unint64_t v15 = 0xE300000000000000;
          if (v14 != 4605008) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 4:
          unint64_t v15 = 0xE300000000000000;
          if (v14 != 5527636) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 5:
          unint64_t v15 = 0xE300000000000000;
          uint64_t v16 = 4276809;
          goto LABEL_30;
        case 6:
          unint64_t v15 = 0xEE00647261437466;
          if (v14 != 0x694773656E757469) {
            goto LABEL_34;
          }
          goto LABEL_31;
        default:
LABEL_30:
          if (v14 != v16) {
            goto LABEL_34;
          }
LABEL_31:
          if (v13 == v15)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_34:
            char v17 = sub_27E370();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0) {
              goto LABEL_40;
            }
          }
          if (v7 != v11)
          {
LABEL_40:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          if (v22 == v21 && v8 == v12)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v4 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v4 & 1) == 0) {
              return 0;
            }
          }
          v3 += 56;
          if (!--v2) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_82118(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v17 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v8 = *(void *)(a1 + v4 + 72);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v10 = *(void *)(v3 + v4 + 56);
        uint64_t v11 = *(void *)(v3 + v4 + 64);
        uint64_t v12 = *(void *)(v3 + v4 + 72);
        BOOL v13 = *(void *)(a1 + v4 + 32) == *(void *)(v3 + v4 + 32)
           && *(void *)(a1 + v4 + 40) == *(void *)(v3 + v4 + 40);
        if (!v13 && (sub_27E370() & 1) == 0) {
          break;
        }
        BOOL v14 = v5 == v9 && v6 == v10;
        if (!v14 && (sub_27E370() & 1) == 0) {
          break;
        }
        BOOL v15 = v7 == v11 && v8 == v12;
        if (!v15 && (sub_27E370() & 1) == 0) {
          break;
        }
        v4 += 48;
        --v2;
        a1 = v17;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_8222C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = *(void *)(a1 + v3 + 48);
      uint64_t v5 = *(unsigned __int8 *)(a1 + v3 + 64);
      uint64_t v6 = *(void *)(a1 + v3 + 80);
      uint64_t v22 = *(void *)(a1 + v3 + 72);
      uint64_t v23 = *(void *)(a1 + v3 + 56);
      uint64_t v7 = *(void *)(a2 + v3 + 48);
      uint64_t v24 = *(void *)(a2 + v3 + 56);
      uint64_t v8 = *(unsigned __int8 *)(a2 + v3 + 64);
      uint64_t v9 = *(void *)(a2 + v3 + 80);
      uint64_t v21 = *(void *)(a2 + v3 + 72);
      int v19 = *(unsigned __int8 *)(a2 + v3 + 88);
      int v20 = *(unsigned __int8 *)(a1 + v3 + 88);
      if ((*(void *)(a1 + v3 + 32) != *(void *)(a2 + v3 + 32)
         || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
        && (sub_27E370() & 1) == 0
        || (v4 != v7 || v23 != v24) && (sub_27E370() & 1) == 0)
      {
        return 0;
      }
      unint64_t v10 = 0xE700000000000000;
      uint64_t v11 = 0x6E776F6E6B6E75;
      switch(v5)
      {
        case 1:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1802465122;
          break;
        case 2:
          uint64_t v11 = 0x6F6F626F69647561;
          unint64_t v10 = 0xE90000000000006BLL;
          break;
        case 3:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 4605008;
          break;
        case 4:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 5527636;
          break;
        case 5:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 4276809;
          break;
        case 6:
          uint64_t v11 = 0x694773656E757469;
          unint64_t v10 = 0xEE00647261437466;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE700000000000000;
      uint64_t v13 = 0x6E776F6E6B6E75;
      switch(v8)
      {
        case 1:
          unint64_t v12 = 0xE400000000000000;
          if (v11 == 1802465122) {
            goto LABEL_31;
          }
          goto LABEL_34;
        case 2:
          unint64_t v12 = 0xE90000000000006BLL;
          if (v11 != 0x6F6F626F69647561) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 3:
          unint64_t v12 = 0xE300000000000000;
          if (v11 != 4605008) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 4:
          unint64_t v12 = 0xE300000000000000;
          if (v11 != 5527636) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 5:
          unint64_t v12 = 0xE300000000000000;
          uint64_t v13 = 4276809;
          goto LABEL_30;
        case 6:
          unint64_t v12 = 0xEE00647261437466;
          if (v11 != 0x694773656E757469) {
            goto LABEL_34;
          }
          goto LABEL_31;
        default:
LABEL_30:
          if (v11 != v13) {
            goto LABEL_34;
          }
LABEL_31:
          if (v10 == v12)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_34:
            char v14 = sub_27E370();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v14 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
          }
          if (v22 == v21 && v6 == v9)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20 != v19) {
              return 0;
            }
          }
          else
          {
            char v15 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = 0;
            if (v15 & 1) == 0 || ((v20 ^ v19)) {
              return result;
            }
          }
          v3 += 64;
          if (!--v2) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

unint64_t sub_82698()
{
  return 0xD000000000000011;
}

uint64_t sub_826B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_82DB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_826E0(uint64_t a1)
{
  unint64_t v2 = sub_828DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8271C(uint64_t a1)
{
  unint64_t v2 = sub_828DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionSummaryData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_318ED8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_828DC();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_318EE8);
  sub_82B1C(&qword_318EF0, (void (*)(void))sub_8320);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_828DC()
{
  unint64_t result = qword_318EE0;
  if (!qword_318EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318EE0);
  }
  return result;
}

uint64_t sub_82930(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t CollectionSummaryData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_318EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_828DC();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_318EE8);
    sub_82B1C(&qword_318F00, (void (*)(void))sub_82C8);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_82B1C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_318EE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_82B94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CollectionSummaryData.init(from:)(a1, a2);
}

uint64_t sub_82BAC(void *a1)
{
  return CollectionSummaryData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for CollectionSummaryData()
{
  return &type metadata for CollectionSummaryData;
}

unsigned char *storeEnumTagSinglePayload for CollectionSummaryData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x82C70);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionSummaryData.CodingKeys()
{
  return &type metadata for CollectionSummaryData.CodingKeys;
}

unint64_t sub_82CAC()
{
  unint64_t result = qword_318F08;
  if (!qword_318F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F08);
  }
  return result;
}

unint64_t sub_82D04()
{
  unint64_t result = qword_318F10;
  if (!qword_318F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F10);
  }
  return result;
}

unint64_t sub_82D5C()
{
  unint64_t result = qword_318F18;
  if (!qword_318F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F18);
  }
  return result;
}

uint64_t sub_82DB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE6D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BookAnalytics::ViewAction_optional __swiftcall ViewAction.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  char v3 = v1;
  v4._rawValue = &off_2F78A0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t ViewAction.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6570697773;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x63656C6553626174;
      break;
    case 5:
      unint64_t result = 6579297;
      break;
    case 6:
      unint64_t result = 0x65766F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_82F7C(unsigned __int8 *a1, char *a2)
{
  return sub_2C120(*a1, *a2);
}

unint64_t sub_82F8C()
{
  unint64_t result = qword_318F20;
  if (!qword_318F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F20);
  }
  return result;
}

Swift::Int sub_82FE0()
{
  return sub_25C374();
}

uint64_t sub_82FEC()
{
  return sub_27C624();
}

Swift::Int sub_82FF4()
{
  return sub_25C374();
}

BookAnalytics::ViewAction_optional sub_82FFC(Swift::String *a1)
{
  return ViewAction.init(rawValue:)(*a1);
}

unint64_t sub_83008@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ViewAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_83030()
{
  return sub_27DED0();
}

uint64_t sub_83090()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x831ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewAction()
{
  return &type metadata for ViewAction;
}

unint64_t sub_831E4()
{
  unint64_t result = qword_318F28;
  if (!qword_318F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F28);
  }
  return result;
}

uint64_t UserEventStorageData.productCardViewCount.getter()
{
  return *(void *)v0;
}

uint64_t UserEventStorageData.productCardViewCount.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.readingSampleCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t UserEventStorageData.readingSampleCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.previewAudiobookCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t UserEventStorageData.previewAudiobookCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.readCount.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t UserEventStorageData.readCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.playCount.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t UserEventStorageData.playCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.addToWantToReadCount.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t UserEventStorageData.addToWantToReadCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.sampleBooksDownloadedCount.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t UserEventStorageData.sampleBooksDownloadedCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.ratedBookCount.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t UserEventStorageData.ratedBookCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 112) = result;
  *(unsigned char *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t UserEventStorageData.likedCount.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t UserEventStorageData.likedCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 128) = result;
  *(unsigned char *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.likedCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.shareCount.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t UserEventStorageData.shareCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 144) = result;
  *(unsigned char *)(v2 + 152) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.shareCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.totalContentExposedCount.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t UserEventStorageData.totalContentExposedCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 160) = result;
  *(unsigned char *)(v2 + 168) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.totalContentExposedCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.unLikedEventCount.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t UserEventStorageData.unLikedEventCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 176) = result;
  *(unsigned char *)(v2 + 184) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.unLikedEventCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.hiddenEventCount.getter()
{
  return *(void *)(v0 + 192);
}

uint64_t UserEventStorageData.hiddenEventCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 192) = result;
  *(unsigned char *)(v2 + 200) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.hiddenEventCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.removefromWTRCount.getter()
{
  return *(void *)(v0 + 208);
}

uint64_t UserEventStorageData.removefromWTRCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 208) = result;
  *(unsigned char *)(v2 + 216) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.removefromWTRCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.deleteSampleCount.getter()
{
  return *(void *)(v0 + 224);
}

uint64_t UserEventStorageData.deleteSampleCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 224) = result;
  *(unsigned char *)(v2 + 232) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.deleteSampleCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncFromCloudTimestamp.getter()
{
  return *(void *)(v0 + 240);
}

uint64_t UserEventStorageData.lastSyncFromCloudTimestamp.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 240) = result;
  *(unsigned char *)(v2 + 248) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncFromCloudTimestamp.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncFromCloudError.getter()
{
  uint64_t v1 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserEventStorageData.lastSyncFromCloudError.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 256) = a1;
  *(void *)(v2 + 264) = a2;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncFromCloudError.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncErrorFromCloudTimestamp.getter()
{
  return *(void *)(v0 + 272);
}

uint64_t UserEventStorageData.lastSyncErrorFromCloudTimestamp.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 272) = result;
  *(unsigned char *)(v2 + 280) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncErrorFromCloudTimestamp.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncToCloudTimestamp.getter()
{
  return *(void *)(v0 + 288);
}

uint64_t UserEventStorageData.lastSyncToCloudTimestamp.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 288) = result;
  *(unsigned char *)(v2 + 296) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncToCloudTimestamp.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncToCloudError.getter()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserEventStorageData.lastSyncToCloudError.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 304) = a1;
  *(void *)(v2 + 312) = a2;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncToCloudError.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UserEventStorageData.lastSyncToFromCloudTimestamp.getter()
{
  return *(void *)(v0 + 320);
}

uint64_t UserEventStorageData.lastSyncToFromCloudTimestamp.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 320) = result;
  *(unsigned char *)(v2 + 328) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.lastSyncToFromCloudTimestamp.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall UserEventStorageData.init(productCardViewCount:readingSampleCount:previewAudiobookCount:readCount:playCount:addToWantToReadCount:sampleBooksDownloadedCount:ratedBookCount:likedCount:shareCount:totalContentExposedCount:unLikedEventCount:hiddenEventCount:removefromWTRCount:deleteSampleCount:lastSyncFromCloudTimestamp:lastSyncFromCloudError:lastSyncErrorFromCloudTimestamp:lastSyncToCloudTimestamp:lastSyncToCloudError:lastSyncToFromCloudTimestamp:)(BookAnalytics::UserEventStorageData *__return_ptr retstr, Swift::Int64_optional productCardViewCount, Swift::Int64_optional readingSampleCount, Swift::Int64_optional previewAudiobookCount, Swift::Int64_optional readCount, Swift::Int64_optional playCount, Swift::Int64_optional addToWantToReadCount, Swift::Int64_optional sampleBooksDownloadedCount, Swift::Int64_optional ratedBookCount, Swift::Int64_optional likedCount, Swift::Int64_optional shareCount, Swift::Int64_optional totalContentExposedCount, Swift::Int64_optional unLikedEventCount, Swift::Int64_optional hiddenEventCount, Swift::Int64_optional removefromWTRCount, Swift::Int64_optional deleteSampleCount, Swift::Int64_optional lastSyncFromCloudTimestamp, Swift::String_optional lastSyncFromCloudError, Swift::Int64_optional lastSyncErrorFromCloudTimestamp, Swift::Int64_optional lastSyncToCloudTimestamp,Swift::String_optional lastSyncToCloudError,Swift::Int64_optional lastSyncToFromCloudTimestamp)
{
  retstr->productCardViewCount.value = productCardViewCount.value;
  retstr->productCardViewCount.is_nil = productCardViewCount.is_nil;
  retstr->readingSampleCount.value = readingSampleCount.value;
  retstr->readingSampleCount.is_nil = readingSampleCount.is_nil;
  retstr->previewAudiobookCount.value = previewAudiobookCount.value;
  retstr->previewAudiobookCount.is_nil = previewAudiobookCount.is_nil;
  retstr->readCount.value = readCount.value;
  retstr->readCount.is_nil = readCount.is_nil;
  retstr->playCount.value = playCount.value;
  retstr->playCount.is_nil = playCount.is_nil;
  retstr->addToWantToReadCount.value = addToWantToReadCount.value;
  retstr->addToWantToReadCount.is_nil = addToWantToReadCount.is_nil;
  retstr->sampleBooksDownloadedCount.value = sampleBooksDownloadedCount.value;
  retstr->sampleBooksDownloadedCount.is_nil = sampleBooksDownloadedCount.is_nil;
  retstr->ratedBookCount.value = ratedBookCount.value;
  retstr->ratedBookCount.is_nil = ratedBookCount.is_nil;
  retstr->likedCount.value = likedCount.value;
  retstr->likedCount.is_nil = likedCount.is_nil;
  retstr->shareCount.value = shareCount.value;
  retstr->shareCount.is_nil = shareCount.is_nil;
  retstr->totalContentExposedCount.value = totalContentExposedCount.value;
  retstr->totalContentExposedCount.is_nil = totalContentExposedCount.is_nil;
  retstr->unLikedEventCount.value = unLikedEventCount.value;
  retstr->unLikedEventCount.is_nil = unLikedEventCount.is_nil;
  retstr->hiddenEventCount.value = hiddenEventCount.value;
  retstr->hiddenEventCount.is_nil = hiddenEventCount.is_nil;
  retstr->removefromWTRCount.value = removefromWTRCount.value;
  retstr->removefromWTRCount.is_nil = removefromWTRCount.is_nil;
  retstr->deleteSampleCount.value = deleteSampleCount.value;
  retstr->deleteSampleCount.is_nil = deleteSampleCount.is_nil;
  retstr->lastSyncFromCloudTimestamp.value = lastSyncFromCloudTimestamp.value;
  retstr->lastSyncFromCloudTimestamp.is_nil = lastSyncFromCloudTimestamp.is_nil;
  retstr->lastSyncErrorFromCloudTimestamp.value = lastSyncErrorFromCloudTimestamp.value;
  retstr->lastSyncErrorFromCloudTimestamp.is_nil = lastSyncErrorFromCloudTimestamp.is_nil;
  retstr->lastSyncToCloudTimestamp.value = lastSyncToCloudTimestamp.value;
  retstr->lastSyncToCloudTimestamp.is_nil = lastSyncToCloudTimestamp.is_nil;
  retstr->lastSyncToFromCloudTimestamp.value = lastSyncToFromCloudTimestamp.value;
  retstr->lastSyncToFromCloudTimestamp.is_nil = lastSyncToFromCloudTimestamp.is_nil;
  retstr->lastSyncFromCloudError = lastSyncFromCloudError;
  retstr->lastSyncToCloudError = lastSyncToCloudError;
}

uint64_t sub_838E4(char a1)
{
  uint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      return 0xD000000000000012;
    case 2:
      return 0xD000000000000015;
    case 3:
      unsigned int v3 = 1684104562;
      return v3 | 0x6E756F4300000000;
    case 4:
      unsigned int v3 = 2036427888;
      return v3 | 0x6E756F4300000000;
    case 6:
      return 0xD00000000000001ALL;
    case 7:
      return 0x6F6F426465746172;
    case 8:
      uint64_t v4 = 0x4364656B696CLL;
      goto LABEL_11;
    case 9:
      uint64_t v4 = 0x436572616873;
LABEL_11:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x756F000000000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000018;
      break;
    case 11:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0xD000000000000010;
      break;
    case 13:
      uint64_t result = 0xD000000000000012;
      break;
    case 14:
      uint64_t result = 0xD000000000000011;
      break;
    case 15:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 16:
      uint64_t result = 0xD000000000000016;
      break;
    case 17:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 18:
      uint64_t result = 0xD000000000000018;
      break;
    case 20:
      uint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_83AE0()
{
  return sub_838E4(*v0);
}

uint64_t sub_83AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_863BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_83B10(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_83B1C(uint64_t a1)
{
  unint64_t v2 = sub_859C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_83B58(uint64_t a1)
{
  unint64_t v2 = sub_859C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserEventStorageData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_318F30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = *v1;
  uint64_t v50 = v1[2];
  uint64_t v51 = v6;
  int v53 = *((unsigned __int8 *)v1 + 24);
  uint64_t v49 = v1[4];
  int v48 = *((unsigned __int8 *)v1 + 40);
  uint64_t v46 = v1[6];
  int v45 = *((unsigned __int8 *)v1 + 56);
  uint64_t v44 = v1[8];
  int v43 = *((unsigned __int8 *)v1 + 72);
  uint64_t v42 = v1[10];
  LODWORD(v6) = *((unsigned __int8 *)v1 + 88);
  uint64_t v39 = v1[12];
  int v40 = *((unsigned __int8 *)v1 + 104);
  int v41 = v6;
  uint64_t v37 = v1[14];
  int v38 = *((unsigned __int8 *)v1 + 120);
  uint64_t v35 = v1[16];
  int v36 = *((unsigned __int8 *)v1 + 136);
  uint64_t v33 = v1[18];
  int v34 = *((unsigned __int8 *)v1 + 152);
  uint64_t v31 = v1[20];
  int v32 = *((unsigned __int8 *)v1 + 168);
  uint64_t v29 = v1[22];
  int v30 = *((unsigned __int8 *)v1 + 184);
  uint64_t v27 = v1[24];
  int v28 = *((unsigned __int8 *)v1 + 200);
  uint64_t v25 = v1[26];
  int v26 = *((unsigned __int8 *)v1 + 216);
  uint64_t v23 = v1[28];
  int v24 = *((unsigned __int8 *)v1 + 232);
  uint64_t v21 = v1[30];
  int v22 = *((unsigned __int8 *)v1 + 248);
  uint64_t v19 = v1[32];
  uint64_t v20 = v1[33];
  v14[1] = v1[34];
  int v15 = *((unsigned __int8 *)v1 + 280);
  uint64_t v47 = v1[36];
  uint64_t v17 = v1[38];
  uint64_t v16 = v1[39];
  uint64_t v18 = v1[40];
  int v7 = *((unsigned __int8 *)v1 + 296);
  int v8 = *((unsigned __int8 *)v1 + 328);
  uint64_t v9 = a1[3];
  unint64_t v10 = a1;
  uint64_t v11 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(v10, v9);
  sub_859C8();
  sub_27E440();
  char v54 = 0;
  uint64_t v12 = v52;
  sub_27E2E0();
  if (!v12)
  {
    LODWORD(v52) = v7;
    LODWORD(v51) = v8;
    char v54 = 1;
    sub_27E2E0();
    char v54 = 2;
    sub_27E2E0();
    char v54 = 3;
    sub_27E2E0();
    char v54 = 4;
    sub_27E2E0();
    char v54 = 5;
    sub_27E2E0();
    char v54 = 6;
    sub_27E2E0();
    char v54 = 7;
    sub_27E2E0();
    char v54 = 8;
    sub_27E2E0();
    char v54 = 9;
    sub_27E2E0();
    char v54 = 10;
    sub_27E2E0();
    char v54 = 11;
    sub_27E2E0();
    char v54 = 12;
    sub_27E2E0();
    char v54 = 13;
    sub_27E2E0();
    char v54 = 14;
    sub_27E2E0();
    char v54 = 15;
    sub_27E2E0();
    char v54 = 16;
    sub_27E290();
    char v54 = 17;
    sub_27E2E0();
    char v54 = 18;
    sub_27E2E0();
    char v54 = 19;
    sub_27E290();
    char v54 = 20;
    sub_27E2E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v11, v3);
}

uint64_t UserEventStorageData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v85 = sub_4E04(&qword_318F40);
  uint64_t v5 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  int v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v200 = 1;
  char v198 = 1;
  char v196 = 1;
  char v194 = 1;
  char v192 = 1;
  char v190 = 1;
  char v188 = 1;
  char v186 = 1;
  char v184 = 1;
  char v182 = 1;
  char v180 = 1;
  char v178 = 1;
  char v176 = 1;
  char v174 = 1;
  char v172 = 1;
  char v170 = 1;
  char v168 = 1;
  char v166 = 1;
  char v164 = 1;
  uint64_t v8 = a1[3];
  v86 = a1;
  sub_5900(a1, v8);
  sub_859C8();
  sub_27E430();
  if (v2)
  {
    uint64_t v201 = v2;
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    uint64_t v89 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
    uint64_t v101 = 0;
    uint64_t v94 = 0;
    uint64_t v95 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = (uint64_t)v86;
  }
  else
  {
    uint64_t v9 = a2;
    LOBYTE(v104) = 0;
    uint64_t v10 = sub_27E210();
    int v21 = v20;
    uint64_t v84 = v10;
    char v200 = v20 & 1;
    LOBYTE(v104) = 1;
    uint64_t v22 = sub_27E210();
    int v24 = v23;
    uint64_t v83 = v22;
    char v198 = v23 & 1;
    LOBYTE(v104) = 2;
    uint64_t v25 = sub_27E210();
    int v81 = v24;
    uint64_t v82 = v25;
    char v196 = v26 & 1;
    LOBYTE(v104) = 3;
    int v27 = v26;
    uint64_t v95 = sub_27E210();
    int v79 = v27;
    int v80 = v21;
    char v194 = v28 & 1;
    LOBYTE(v104) = 4;
    char v29 = v28;
    uint64_t v78 = sub_27E210();
    char v192 = v30 & 1;
    LOBYTE(v104) = 5;
    int v31 = v30;
    uint64_t v32 = sub_27E210();
    int v76 = v31;
    uint64_t v77 = v32;
    char v190 = v33 & 1;
    LOBYTE(v104) = 6;
    char v34 = v33;
    uint64_t v75 = sub_27E210();
    int v74 = v35;
    char v188 = v35 & 1;
    LOBYTE(v104) = 7;
    uint64_t v73 = sub_27E210();
    int v72 = v36;
    char v186 = v36 & 1;
    LOBYTE(v104) = 8;
    uint64_t v37 = sub_27E210();
    uint64_t v201 = 0;
    uint64_t v94 = v37;
    int v70 = v38;
    char v184 = v38 & 1;
    LOBYTE(v104) = 9;
    uint64_t v101 = sub_27E210();
    int v71 = v39;
    uint64_t v201 = 0;
    char v182 = v39 & 1;
    LOBYTE(v104) = 10;
    uint64_t v100 = sub_27E210();
    int v69 = v40;
    uint64_t v201 = 0;
    char v180 = v40 & 1;
    LOBYTE(v104) = 11;
    uint64_t v99 = sub_27E210();
    int v68 = v41;
    uint64_t v201 = 0;
    char v178 = v41 & 1;
    LOBYTE(v104) = 12;
    uint64_t v98 = sub_27E210();
    int v67 = v42;
    uint64_t v201 = 0;
    char v176 = v42 & 1;
    LOBYTE(v104) = 13;
    uint64_t v97 = sub_27E210();
    int v66 = v43;
    uint64_t v201 = 0;
    char v174 = v43 & 1;
    LOBYTE(v104) = 14;
    uint64_t v96 = sub_27E210();
    int v65 = v44;
    uint64_t v201 = 0;
    char v172 = v44 & 1;
    LOBYTE(v104) = 15;
    uint64_t v90 = sub_27E210();
    int v64 = v45;
    uint64_t v201 = 0;
    char v170 = v45 & 1;
    LOBYTE(v104) = 16;
    uint64_t v89 = sub_27E1C0();
    uint64_t v201 = 0;
    uint64_t v47 = v46;
    LOBYTE(v104) = 17;
    swift_bridgeObjectRetain();
    uint64_t v48 = v201;
    uint64_t v88 = sub_27E210();
    int v63 = v49;
    uint64_t v201 = v48;
    uint64_t v87 = v47;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v85);
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v93 = 0;
      uint64_t v91 = 0;
      uint64_t v88 = 0;
    }
    else
    {
      char v168 = v63 & 1;
      LOBYTE(v104) = 18;
      uint64_t v92 = sub_27E210();
      int v62 = v50;
      uint64_t v201 = 0;
      char v166 = v50 & 1;
      LOBYTE(v104) = 19;
      uint64_t v91 = sub_27E1C0();
      uint64_t v93 = v51;
      uint64_t v201 = 0;
      char v103 = 20;
      swift_bridgeObjectRetain();
      uint64_t v52 = v201;
      uint64_t v61 = sub_27E210();
      HIDWORD(v60) = v53;
      uint64_t v201 = v52;
      if (!v52)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v85);
        v102[280] = v63 & 1;
        v102[296] = v62 & 1;
        v102[328] = BYTE4(v60) & 1;
        char v164 = BYTE4(v60) & 1;
        v102[8] = v80 & 1;
        v102[24] = v81 & 1;
        v102[40] = v79 & 1;
        v102[56] = v29 & 1;
        v102[72] = v76 & 1;
        v102[88] = v34 & 1;
        v102[104] = v74 & 1;
        v102[120] = v72 & 1;
        v102[136] = v70 & 1;
        v102[152] = v71 & 1;
        v102[168] = v69 & 1;
        v102[184] = v68 & 1;
        v102[200] = v67 & 1;
        v102[216] = v66 & 1;
        v102[232] = v65 & 1;
        v102[248] = v64 & 1;
        uint64_t v55 = v83;
        uint64_t v54 = v84;
        *(void *)v102 = v84;
        *(void *)&v102[16] = v83;
        uint64_t v56 = v82;
        *(void *)&v102[32] = v82;
        uint64_t v57 = v95;
        *(void *)&v102[48] = v95;
        *(void *)&v102[64] = v78;
        *(void *)&v102[80] = v77;
        *(void *)&v102[96] = v75;
        *(void *)&v102[112] = v73;
        *(void *)&v102[128] = v94;
        *(void *)&v102[144] = v101;
        *(void *)&v102[160] = v100;
        *(void *)&v102[176] = v99;
        *(void *)&v102[192] = v98;
        *(void *)&v102[208] = v97;
        *(void *)&v102[224] = v96;
        *(void *)&v102[240] = v90;
        *(void *)&v102[256] = v89;
        uint64_t v58 = v47;
        *(void *)&v102[264] = v47;
        *(void *)&v102[272] = v88;
        uint64_t v59 = v93;
        *(void *)&v102[288] = v92;
        *(void *)&v102[304] = v91;
        *(void *)&v102[312] = v93;
        *(void *)&v102[320] = v61;
        sub_85A54((uint64_t)v102);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v9, v102, 0x149uLL);
        sub_5E94((uint64_t)v86);
        uint64_t v104 = v54;
        char v105 = v200;
        *(_DWORD *)v106 = *(_DWORD *)v199;
        *(_DWORD *)&v106[3] = *(_DWORD *)&v199[3];
        uint64_t v107 = v55;
        char v108 = v198;
        *(_DWORD *)v109 = *(_DWORD *)v197;
        *(_DWORD *)&v109[3] = *(_DWORD *)&v197[3];
        uint64_t v110 = v56;
        char v111 = v196;
        *(_DWORD *)&v112[3] = *(_DWORD *)&v195[3];
        *(_DWORD *)v112 = *(_DWORD *)v195;
        uint64_t v113 = v57;
        char v114 = v194;
        *(_DWORD *)v115 = *(_DWORD *)v193;
        *(_DWORD *)&v115[3] = *(_DWORD *)&v193[3];
        uint64_t v116 = v78;
        char v117 = v192;
        *(_DWORD *)v118 = *(_DWORD *)v191;
        *(_DWORD *)&v118[3] = *(_DWORD *)&v191[3];
        uint64_t v119 = v77;
        char v120 = v190;
        *(_DWORD *)&v121[3] = *(_DWORD *)&v189[3];
        *(_DWORD *)v121 = *(_DWORD *)v189;
        uint64_t v122 = v75;
        char v123 = v188;
        *(_DWORD *)&v124[3] = *(_DWORD *)&v187[3];
        *(_DWORD *)v124 = *(_DWORD *)v187;
        uint64_t v125 = v73;
        char v126 = v186;
        *(_DWORD *)&v127[3] = *(_DWORD *)&v185[3];
        *(_DWORD *)v127 = *(_DWORD *)v185;
        uint64_t v128 = v94;
        char v129 = v184;
        *(_DWORD *)&v130[3] = *(_DWORD *)&v183[3];
        *(_DWORD *)v130 = *(_DWORD *)v183;
        uint64_t v131 = v101;
        char v132 = v182;
        *(_DWORD *)&v133[3] = *(_DWORD *)&v181[3];
        *(_DWORD *)v133 = *(_DWORD *)v181;
        uint64_t v134 = v100;
        char v135 = v180;
        *(_DWORD *)&v136[3] = *(_DWORD *)&v179[3];
        *(_DWORD *)v136 = *(_DWORD *)v179;
        uint64_t v137 = v99;
        char v138 = v178;
        *(_DWORD *)&v139[3] = *(_DWORD *)&v177[3];
        *(_DWORD *)v139 = *(_DWORD *)v177;
        uint64_t v140 = v98;
        char v141 = v176;
        *(_DWORD *)&v142[3] = *(_DWORD *)&v175[3];
        *(_DWORD *)v142 = *(_DWORD *)v175;
        uint64_t v143 = v97;
        char v144 = v174;
        *(_DWORD *)&v145[3] = *(_DWORD *)&v173[3];
        *(_DWORD *)v145 = *(_DWORD *)v173;
        uint64_t v146 = v96;
        char v147 = v172;
        *(_DWORD *)&v148[3] = *(_DWORD *)&v171[3];
        *(_DWORD *)v148 = *(_DWORD *)v171;
        uint64_t v149 = v90;
        char v150 = v170;
        *(_DWORD *)&v151[3] = *(_DWORD *)&v169[3];
        *(_DWORD *)v151 = *(_DWORD *)v169;
        uint64_t v152 = v89;
        uint64_t v153 = v58;
        uint64_t v154 = v88;
        char v155 = v168;
        *(_DWORD *)v156 = *(_DWORD *)v167;
        *(_DWORD *)&v156[3] = *(_DWORD *)&v167[3];
        uint64_t v157 = v92;
        char v158 = v166;
        *(_DWORD *)v159 = *(_DWORD *)v165;
        *(_DWORD *)&v159[3] = *(_DWORD *)&v165[3];
        uint64_t v160 = v91;
        uint64_t v161 = v59;
        uint64_t v162 = v61;
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v85);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = (uint64_t)v86;
    uint64_t v16 = v83;
    uint64_t v17 = v84;
    uint64_t v15 = v82;
    uint64_t v13 = v77;
    uint64_t v14 = v78;
    uint64_t v12 = v75;
    uint64_t v11 = v73;
  }
  sub_5E94(v18);
  uint64_t v104 = v17;
  char v105 = v200;
  *(_DWORD *)v106 = *(_DWORD *)v199;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v199[3];
  uint64_t v107 = v16;
  char v108 = v198;
  *(_DWORD *)v109 = *(_DWORD *)v197;
  *(_DWORD *)&v109[3] = *(_DWORD *)&v197[3];
  uint64_t v110 = v15;
  char v111 = v196;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v195[3];
  *(_DWORD *)v112 = *(_DWORD *)v195;
  uint64_t v113 = v95;
  char v114 = v194;
  *(_DWORD *)v115 = *(_DWORD *)v193;
  *(_DWORD *)&v115[3] = *(_DWORD *)&v193[3];
  uint64_t v116 = v14;
  char v117 = v192;
  *(_DWORD *)v118 = *(_DWORD *)v191;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v191[3];
  uint64_t v119 = v13;
  char v120 = v190;
  *(_DWORD *)&v121[3] = *(_DWORD *)&v189[3];
  *(_DWORD *)v121 = *(_DWORD *)v189;
  uint64_t v122 = v12;
  char v123 = v188;
  *(_DWORD *)&v124[3] = *(_DWORD *)&v187[3];
  *(_DWORD *)v124 = *(_DWORD *)v187;
  uint64_t v125 = v11;
  char v126 = v186;
  *(_DWORD *)&v127[3] = *(_DWORD *)&v185[3];
  *(_DWORD *)v127 = *(_DWORD *)v185;
  uint64_t v128 = v94;
  char v129 = v184;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v183[3];
  *(_DWORD *)v130 = *(_DWORD *)v183;
  uint64_t v131 = v101;
  char v132 = v182;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v181[3];
  *(_DWORD *)v133 = *(_DWORD *)v181;
  uint64_t v134 = v100;
  char v135 = v180;
  *(_DWORD *)&v136[3] = *(_DWORD *)&v179[3];
  *(_DWORD *)v136 = *(_DWORD *)v179;
  uint64_t v137 = v99;
  char v138 = v178;
  *(_DWORD *)&v139[3] = *(_DWORD *)&v177[3];
  *(_DWORD *)v139 = *(_DWORD *)v177;
  uint64_t v140 = v98;
  char v141 = v176;
  *(_DWORD *)&v142[3] = *(_DWORD *)&v175[3];
  *(_DWORD *)v142 = *(_DWORD *)v175;
  uint64_t v143 = v97;
  char v144 = v174;
  *(_DWORD *)&v145[3] = *(_DWORD *)&v173[3];
  *(_DWORD *)v145 = *(_DWORD *)v173;
  uint64_t v146 = v96;
  char v147 = v172;
  *(_DWORD *)&v148[3] = *(_DWORD *)&v171[3];
  *(_DWORD *)v148 = *(_DWORD *)v171;
  uint64_t v149 = v90;
  char v150 = v170;
  *(_DWORD *)&v151[3] = *(_DWORD *)&v169[3];
  *(_DWORD *)v151 = *(_DWORD *)v169;
  uint64_t v152 = v89;
  uint64_t v153 = v87;
  uint64_t v154 = v88;
  char v155 = v168;
  *(_DWORD *)v156 = *(_DWORD *)v167;
  *(_DWORD *)&v156[3] = *(_DWORD *)&v167[3];
  uint64_t v157 = v92;
  char v158 = v166;
  *(_DWORD *)v159 = *(_DWORD *)v165;
  *(_DWORD *)&v159[3] = *(_DWORD *)&v165[3];
  uint64_t v160 = v91;
  uint64_t v161 = v93;
  uint64_t v162 = 0;
LABEL_5:
  char v163 = v164;
  return sub_85A1C((uint64_t)&v104);
}

uint64_t sub_853E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return UserEventStorageData.init(from:)(a1, a2);
}

uint64_t sub_853FC(void *a1)
{
  return UserEventStorageData.encode(to:)(a1);
}

BOOL _s13BookAnalytics20UserEventStorageDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a1 + 280;
  char v7 = *(unsigned char *)(a1 + 24);
  char v74 = *(unsigned char *)(v6 + 48);
  char v75 = *(unsigned char *)(v6 + 16);
  int v57 = *(unsigned __int8 *)(a2 + 296);
  char v52 = *(unsigned char *)(a2 + 328);
  uint64_t v61 = *(void *)(a1 + 264);
  char v71 = *(unsigned char *)(a1 + 280);
  uint64_t v72 = *(void *)(a1 + 288);
  uint64_t v73 = *(void *)(a1 + 272);
  uint64_t v53 = *(void *)(a1 + 304);
  uint64_t v55 = *(void *)(a1 + 312);
  uint64_t v50 = *(void *)(a1 + 320);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  int v13 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  int v15 = *(unsigned __int8 *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  int v17 = *(unsigned __int8 *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 96);
  int v19 = *(unsigned __int8 *)(a2 + 104);
  uint64_t v20 = *(void *)(a2 + 112);
  int v21 = *(unsigned __int8 *)(a2 + 120);
  uint64_t v22 = *(void *)(a2 + 128);
  int v23 = *(unsigned __int8 *)(a2 + 136);
  uint64_t v24 = *(void *)(a2 + 144);
  int v25 = *(unsigned __int8 *)(a2 + 152);
  uint64_t v26 = *(void *)(a2 + 160);
  int v27 = *(unsigned __int8 *)(a2 + 168);
  uint64_t v76 = *(void *)(a2 + 176);
  int v78 = *(unsigned __int8 *)(a2 + 184);
  uint64_t v66 = *(void *)(a2 + 192);
  int v77 = *(unsigned __int8 *)(a2 + 200);
  uint64_t v64 = *(void *)(a2 + 208);
  int v70 = *(unsigned __int8 *)(a2 + 216);
  uint64_t v62 = *(void *)(a2 + 224);
  int v65 = *(unsigned __int8 *)(a2 + 232);
  uint64_t v59 = *(void *)(a2 + 240);
  int v63 = *(unsigned __int8 *)(a2 + 248);
  uint64_t v58 = *(void *)(a2 + 256);
  uint64_t v60 = *(void *)(a2 + 264);
  uint64_t v69 = *(void *)(a2 + 272);
  int v67 = *(unsigned __int8 *)(a2 + 280);
  uint64_t v68 = *(void *)(a2 + 288);
  uint64_t v54 = *(void *)(a2 + 304);
  uint64_t v56 = *(void *)(a2 + 312);
  uint64_t v51 = *(void *)(a2 + 320);
  if (v4)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v28 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v28 = 1;
    }
    if (v28) {
      return 0;
    }
  }
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (v5 == v8) {
      char v29 = v9;
    }
    else {
      char v29 = 1;
    }
    if (v29) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (!v11) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) == v10) {
      char v30 = v11;
    }
    else {
      char v30 = 1;
    }
    if (v30) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 56))
  {
    if (!v13) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 48) == v12) {
      char v31 = v13;
    }
    else {
      char v31 = 1;
    }
    if (v31) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 72))
  {
    if (!v15) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 64) == v14) {
      char v32 = v15;
    }
    else {
      char v32 = 1;
    }
    if (v32) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 88))
  {
    if (!v17) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 80) == v16) {
      char v33 = v17;
    }
    else {
      char v33 = 1;
    }
    if (v33) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if (!v19) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 96) == v18) {
      char v34 = v19;
    }
    else {
      char v34 = 1;
    }
    if (v34) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 120))
  {
    if (!v21) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 112) == v20) {
      char v35 = v21;
    }
    else {
      char v35 = 1;
    }
    if (v35) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 136))
  {
    if (!v23) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 128) == v22) {
      char v36 = v23;
    }
    else {
      char v36 = 1;
    }
    if (v36) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 152))
  {
    if (!v25) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 144) == v24) {
      char v37 = v25;
    }
    else {
      char v37 = 1;
    }
    if (v37) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 168))
  {
    if (!v27) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 160) == v26) {
      char v38 = v27;
    }
    else {
      char v38 = 1;
    }
    if (v38) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 184))
  {
    if (!v78) {
      return 0;
    }
  }
  else
  {
    char v39 = v78;
    if (*(void *)(a1 + 176) != v76) {
      char v39 = 1;
    }
    if (v39) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 200))
  {
    if (!v77) {
      return 0;
    }
  }
  else
  {
    char v40 = v77;
    if (*(void *)(a1 + 192) != v66) {
      char v40 = 1;
    }
    if (v40) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 216))
  {
    if (!v70) {
      return 0;
    }
  }
  else
  {
    char v41 = v70;
    if (*(void *)(a1 + 208) != v64) {
      char v41 = 1;
    }
    if (v41) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 232))
  {
    if (!v65) {
      return 0;
    }
  }
  else
  {
    char v42 = v65;
    if (*(void *)(a1 + 224) != v62) {
      char v42 = 1;
    }
    if (v42) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 248))
  {
    if (!v63) {
      return 0;
    }
  }
  else
  {
    char v43 = v63;
    if (*(void *)(a1 + 240) != v59) {
      char v43 = 1;
    }
    if (v43) {
      return 0;
    }
  }
  if (!v61)
  {
    if (v60) {
      return 0;
    }
    goto LABEL_115;
  }
  if (!v60) {
    return 0;
  }
  if (*(void *)(a1 + 256) == v58 && v61 == v60 || (v44 = sub_27E370(), BOOL result = 0, (v44 & 1) != 0))
  {
LABEL_115:
    if (v71)
    {
      if (!v67) {
        return 0;
      }
    }
    else
    {
      if (v73 == v69) {
        char v46 = v67;
      }
      else {
        char v46 = 1;
      }
      if (v46) {
        return 0;
      }
    }
    if (v75)
    {
      if (!v57) {
        return 0;
      }
    }
    else
    {
      char v47 = v57;
      if (v72 != v68) {
        char v47 = 1;
      }
      if (v47) {
        return 0;
      }
    }
    if (v55)
    {
      if (!v56) {
        return 0;
      }
      if (v53 != v54 || v55 != v56)
      {
        char v48 = sub_27E370();
        BOOL result = 0;
        if ((v48 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v56)
    {
      return 0;
    }
    if ((v74 & 1) == 0)
    {
      char v49 = v52;
      if (v50 != v51) {
        char v49 = 1;
      }
      return (v49 & 1) == 0;
    }
    return (v52 & 1) != 0;
  }
  return result;
}

unint64_t sub_859C8()
{
  unint64_t result = qword_318F38;
  if (!qword_318F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F38);
  }
  return result;
}

uint64_t sub_85A1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_85A54(uint64_t a1)
{
  return a1;
}

unint64_t sub_85A90()
{
  unint64_t result = qword_318F48;
  if (!qword_318F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F48);
  }
  return result;
}

unint64_t sub_85AE8()
{
  unint64_t result = qword_318F50;
  if (!qword_318F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F50);
  }
  return result;
}

uint64_t destroy for UserEventStorageData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserEventStorageData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v3 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v4 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v4;
  uint64_t v5 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v5;
  uint64_t v6 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v6;
  uint64_t v7 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v7;
  uint64_t v8 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v8;
  uint64_t v9 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v9;
  uint64_t v10 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v10;
  uint64_t v11 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v11;
  uint64_t v12 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v12;
  uint64_t v13 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v13;
  uint64_t v14 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v14;
  uint64_t v15 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserEventStorageData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = a2[20];
  *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = a2[22];
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = a2[24];
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = a2[26];
  *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = a2[28];
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(void *)(a1 + 224) = v18;
  uint64_t v19 = a2[30];
  *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
  *(void *)(a1 + 240) = v19;
  *(void *)(a1 + 256) = a2[32];
  *(void *)(a1 + 264) = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a2[34];
  *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
  *(void *)(a1 + 272) = v20;
  uint64_t v21 = a2[36];
  *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
  *(void *)(a1 + 288) = v21;
  *(void *)(a1 + 304) = a2[38];
  *(void *)(a1 + 312) = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a2[40];
  *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
  *(void *)(a1 + 320) = v22;
  return a1;
}

void *initializeWithTake for UserEventStorageData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x149uLL);
}

uint64_t assignWithTake for UserEventStorageData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v5 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v5;
  uint64_t v6 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v6;
  uint64_t v7 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v7;
  uint64_t v8 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v8;
  uint64_t v9 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v9;
  uint64_t v10 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v10;
  uint64_t v11 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v11;
  uint64_t v12 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  uint64_t v13 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserEventStorageData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 329)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 264);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserEventStorageData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 328) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 329) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 329) = 0;
    }
    if (a2) {
      *(void *)(result + 264) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEventStorageData()
{
  return &type metadata for UserEventStorageData;
}

uint64_t getEnumTagSinglePayload for UserEventStorageData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserEventStorageData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8627CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEventStorageData.CodingKeys()
{
  return &type metadata for UserEventStorageData.CodingKeys;
}

unint64_t sub_862B8()
{
  unint64_t result = qword_318F58;
  if (!qword_318F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F58);
  }
  return result;
}

unint64_t sub_86310()
{
  unint64_t result = qword_318F60;
  if (!qword_318F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F60);
  }
  return result;
}

unint64_t sub_86368()
{
  unint64_t result = qword_318F68;
  if (!qword_318F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F68);
  }
  return result;
}

uint64_t sub_863BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE6F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE710 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002AE730 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F4364616572 && a2 == 0xE900000000000074 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E756F4379616C70 && a2 == 0xE900000000000074 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE750 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE770 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6F426465746172 && a2 == 0xEE00746E756F436BLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x756F4364656B696CLL && a2 == 0xEA0000000000746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x756F436572616873 && a2 == 0xEA0000000000746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002AE790 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE7B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE7D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE7F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE810 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE830 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AE850 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000000002AE870 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002AE890 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE8B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000000002AE8D0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 20;
    }
    else {
      return 21;
    }
  }
}

BookAnalytics::NotificationType_optional __swiftcall NotificationType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7968;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t NotificationType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1868785010;
      break;
    case 2:
      uint64_t result = 1818324839;
      break;
    case 3:
      uint64_t result = 0x4D64656966696E75;
      break;
    case 4:
      uint64_t result = 0x6F72446563697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_86C9C(unsigned __int8 *a1, char *a2)
{
  return sub_30C70(*a1, *a2);
}

unint64_t sub_86CAC()
{
  unint64_t result = qword_318F70;
  if (!qword_318F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F70);
  }
  return result;
}

Swift::Int sub_86D00()
{
  return sub_27E420();
}

uint64_t sub_86DF8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_86ED8()
{
  return sub_27E420();
}

BookAnalytics::NotificationType_optional sub_86FCC(Swift::String *a1)
{
  return NotificationType.init(rawValue:)(*a1);
}

void sub_86FD8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1868785010;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 1818324839;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 3:
      strcpy((char *)a1, "unifiedMessage");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 0x6F72446563697270;
      *(void *)(a1 + 8) = 0xE900000000000070;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_87094()
{
  return sub_27DED0();
}

uint64_t sub_870F4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for NotificationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x87210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationType()
{
  return &type metadata for NotificationType;
}

unint64_t sub_87248()
{
  unint64_t result = qword_318F78;
  if (!qword_318F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318F78);
  }
  return result;
}

uint64_t sub_8729C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_318F80, &enum case for SessionGroup.default(_:));
}

uint64_t static ThemesAndSettingViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318F80, a1);
}

uint64_t sub_872FC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_318F98, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ThemesAndSettingViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318F98, a1);
}

uint64_t ThemesAndSettingViewEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemesAndSettingViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_319020);
}

uint64_t ThemesAndSettingViewEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemesAndSettingViewEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemesAndSettingViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ThemesAndSettingViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ThemesAndSettingViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ThemesAndSettingViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ThemesAndSettingViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t ThemesAndSettingViewEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[11];
  uint64_t v9 = v1[12];
  uint64_t v10 = v1[13];
  uint64_t v11 = v1[14];
  uint64_t v12 = v1[15];
  uint64_t v13 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t ThemesAndSettingViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ThemesAndSettingViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3190B8);
}

uint64_t ThemesAndSettingViewEvent.Model.init(themesData:contentData:eventData:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)a4 = *(_OWORD *)a1;
  long long v5 = a2[1];
  *(_OWORD *)(a4 + 40) = *a2;
  *(_OWORD *)(a4 + 56) = v5;
  long long v6 = a2[3];
  *(_OWORD *)(a4 + 72) = a2[2];
  *(_OWORD *)(a4 + 88) = v6;
  long long v7 = a2[5];
  *(_OWORD *)(a4 + 104) = a2[4];
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a4 + 16) = *(void *)(a1 + 16);
  *(void *)(a4 + 24) = v8;
  *(unsigned char *)(a4 + 32) = v9;
  *(_OWORD *)(a4 + 120) = v7;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for ThemesAndSettingViewEvent.Model(0) + 24);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_878D4()
{
  uint64_t v1 = 0x44746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x614473656D656874;
  }
}

uint64_t sub_87940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_89AEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_87968(uint64_t a1)
{
  unint64_t v2 = sub_87C08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_879A4(uint64_t a1)
{
  unint64_t v2 = sub_87C08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ThemesAndSettingViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_318FB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_87C08();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  long long v16 = *v3;
  *(void *)&long long v17 = v9;
  *((void *)&v17 + 1) = v10;
  LOBYTE(v18) = v11;
  char v22 = 0;
  sub_98F4();
  sub_27E330();
  if (!v2)
  {
    long long v12 = *(long long *)((char *)v3 + 56);
    long long v16 = *(long long *)((char *)v3 + 40);
    long long v17 = v12;
    long long v13 = *(long long *)((char *)v3 + 88);
    long long v18 = *(long long *)((char *)v3 + 72);
    long long v19 = v13;
    long long v14 = *(long long *)((char *)v3 + 120);
    long long v20 = *(long long *)((char *)v3 + 104);
    long long v21 = v14;
    char v22 = 1;
    sub_1A1D4();
    sub_27E2C0();
    type metadata accessor for ThemesAndSettingViewEvent.Model(0);
    LOBYTE(v16) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_87C08()
{
  unint64_t result = qword_318FB8;
  if (!qword_318FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_318FB8);
  }
  return result;
}

uint64_t ThemesAndSettingViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_318FC0);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ThemesAndSettingViewEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v27 = a1;
  sub_5900(a1, v13);
  sub_87C08();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v27);
  }
  uint64_t v14 = v25;
  char v22 = v6;
  char v34 = 0;
  sub_9FA4();
  uint64_t v15 = v26;
  sub_27E260();
  long long v16 = v29;
  char v17 = v30;
  *(_OWORD *)long long v12 = v28;
  *((_OWORD *)v12 + 1) = v16;
  v12[32] = v17;
  char v34 = 1;
  sub_1A98C();
  sub_27E1F0();
  long long v18 = v29;
  *(_OWORD *)(v12 + 40) = v28;
  *(_OWORD *)(v12 + 56) = v18;
  long long v19 = v31;
  *(_OWORD *)(v12 + 72) = v30;
  *(_OWORD *)(v12 + 88) = v19;
  long long v20 = v33;
  *(_OWORD *)(v12 + 104) = v32;
  *(_OWORD *)(v12 + 120) = v20;
  LOBYTE(v28) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v12[*(int *)(v10 + 24)], v22, v4);
  sub_8802C((uint64_t)v12, v24);
  sub_5E94((uint64_t)v27);
  return sub_88090((uint64_t)v12);
}

uint64_t sub_8802C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThemesAndSettingViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_88090(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ThemesAndSettingViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_880EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ThemesAndSettingViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_88104(void *a1)
{
  return ThemesAndSettingViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_8811C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_318F80, a1);
}

uint64_t sub_88154@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_318F98, a1);
}

uint64_t sub_8818C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v4, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ThemesAndSettingViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316018);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_88978);
}

uint64_t sub_88978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316018);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ThemesAndSettingViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_88AE4);
}

uint64_t sub_88AE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316018);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_88C48()
{
  sub_88DBC(319, &qword_3160E0, (void (*)(void))sub_9FA4, (void (*)(void))sub_98F4);
  if (v0 <= 0x3F)
  {
    sub_88DBC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_88DBC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v10 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v10;
      uint64_t v11 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v11;
      *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
      *(_DWORD *)(a1 + 108) = *((_DWORD *)a2 + 27);
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      *(_DWORD *)(a1 + 113) = *(_DWORD *)((char *)a2 + 113);
      *(unsigned char *)(a1 + 117) = *((unsigned char *)a2 + 117);
      uint64_t v12 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 88) = v14;
      long long v15 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 120) = v15;
      long long v16 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 56) = v16;
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v10;
    *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_DWORD *)(a1 + 113) = *(_DWORD *)(a2 + 113);
    *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v8)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
      int v9 = *(_DWORD *)(a2 + 100);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(_DWORD *)(a1 + 100) = v9;
      int v10 = *(_DWORD *)(a2 + 108);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(_DWORD *)(a1 + 108) = v10;
      *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
      *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
      *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
      *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
      *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 40);
      long long v13 = *(_OWORD *)(a2 + 56);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 56) = v13;
      long long v14 = *(_OWORD *)(a2 + 120);
      long long v16 = *(_OWORD *)(a2 + 72);
      long long v15 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v14;
      *(_OWORD *)(a1 + 72) = v16;
      *(_OWORD *)(a1 + 88) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
    int v11 = *(_DWORD *)(a2 + 100);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 100) = v11;
    int v12 = *(_DWORD *)(a2 + 108);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_DWORD *)(a1 + 108) = v12;
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
    *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
    *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
    *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 56);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 56) = v17;
    long long v18 = *(_OWORD *)(a2 + 72);
    long long v19 = *(_OWORD *)(a2 + 88);
    long long v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v20;
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 88) = v19;
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (!v8)
  {
    sub_62898(a1 + 40);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_DWORD *)(a1 + 113) = *(_DWORD *)(a2 + 113);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_896D4);
}

uint64_t sub_896D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ThemesAndSettingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_89798);
}

uint64_t sub_89798(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_89840()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThemesAndSettingViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x899ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemesAndSettingViewEvent.Model.CodingKeys()
{
  return &type metadata for ThemesAndSettingViewEvent.Model.CodingKeys;
}

unint64_t sub_899E8()
{
  unint64_t result = qword_3190F8;
  if (!qword_3190F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3190F8);
  }
  return result;
}

unint64_t sub_89A40()
{
  unint64_t result = qword_319100;
  if (!qword_319100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319100);
  }
  return result;
}

unint64_t sub_89A98()
{
  unint64_t result = qword_319108;
  if (!qword_319108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319108);
  }
  return result;
}

uint64_t sub_89AEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614473656D656874 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_89C78()
{
  return 0x5479616C70736964;
}

uint64_t sub_89C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5479616C70736964 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_89D48(uint64_t a1)
{
  unint64_t v2 = sub_8A188();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89D84(uint64_t a1)
{
  unint64_t v2 = sub_8A188();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryDisplayData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_319110);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_8A188();
  sub_27E440();
  char v10 = v7;
  sub_8A1DC();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LibraryDisplayData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_319128);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_8A188();
  sub_27E430();
  if (!v2)
  {
    sub_8A230();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_8A070@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LibraryDisplayData.init(from:)(a1, a2);
}

uint64_t sub_8A088(void *a1)
{
  return LibraryDisplayData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics18LibraryDisplayDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 1684632167;
  if (v2 != 1) {
    uint64_t v3 = 1953720684;
  }
  if (*a1) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  uint64_t v6 = 1684632167;
  if (*a2 != 1) {
    uint64_t v6 = 1953720684;
  }
  if (*a2) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE700000000000000;
  }
  if (v4 == v7 && v5 == v8) {
    char v9 = 1;
  }
  else {
    char v9 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t sub_8A188()
{
  unint64_t result = qword_319118;
  if (!qword_319118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319118);
  }
  return result;
}

unint64_t sub_8A1DC()
{
  unint64_t result = qword_319120;
  if (!qword_319120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319120);
  }
  return result;
}

unint64_t sub_8A230()
{
  unint64_t result = qword_319130;
  if (!qword_319130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319130);
  }
  return result;
}

unint64_t sub_8A288()
{
  unint64_t result = qword_319138;
  if (!qword_319138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319138);
  }
  return result;
}

unint64_t sub_8A2E0()
{
  unint64_t result = qword_319140;
  if (!qword_319140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319140);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryDisplayData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8A400);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryDisplayData()
{
  return &type metadata for LibraryDisplayData;
}

unsigned char *storeEnumTagSinglePayload for LibraryDisplayData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x8A4D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryDisplayData.CodingKeys()
{
  return &type metadata for LibraryDisplayData.CodingKeys;
}

unint64_t sub_8A510()
{
  unint64_t result = qword_319148;
  if (!qword_319148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319148);
  }
  return result;
}

unint64_t sub_8A568()
{
  unint64_t result = qword_319150;
  if (!qword_319150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319150);
  }
  return result;
}

unint64_t sub_8A5C0()
{
  unint64_t result = qword_319158;
  if (!qword_319158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319158);
  }
  return result;
}

void __swiftcall UppParentContentData.init(parentContentID:parentContentPrivateID:parentContentUserID:parentContentType:)(BookAnalytics::UppParentContentData *__return_ptr retstr, Swift::String parentContentID, Swift::String parentContentPrivateID, Swift::String parentContentUserID, BookAnalytics::ContentType parentContentType)
{
  BookAnalytics::ContentType v5 = *(unsigned char *)parentContentType;
  retstr->parentContentID = parentContentID;
  retstr->parentContentPrivateID = parentContentPrivateID;
  retstr->parentContentUserID = parentContentUserID;
  retstr->parentContentType = v5;
}

unint64_t sub_8A630(char a1)
{
  unint64_t result = 0x6F43746E65726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_8A6DC()
{
  return sub_8A630(*v0);
}

uint64_t sub_8A6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_8B2B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8A70C(uint64_t a1)
{
  unint64_t v2 = sub_8ADEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8A748(uint64_t a1)
{
  unint64_t v2 = sub_8ADEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UppParentContentData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_319160);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v13 = *(void *)(v1 + 40);
  uint64_t v14 = v8;
  HIDWORD(v12) = *(unsigned __int8 *)(v1 + 48);
  sub_5900(a1, a1[3]);
  sub_8ADEC();
  sub_27E440();
  char v22 = 0;
  uint64_t v9 = v17;
  sub_27E2F0();
  if (!v9)
  {
    char v10 = BYTE4(v12);
    char v21 = 1;
    sub_27E2F0();
    char v20 = 2;
    sub_27E2F0();
    char v19 = v10;
    char v18 = 3;
    sub_101E4();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t UppParentContentData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_319170);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_8ADEC();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v25 = v13;
  uint64_t v23 = v12;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_27E220();
  char v26 = 3;
  uint64_t v15 = v14;
  sub_10238();
  uint64_t v22 = v15;
  swift_bridgeObjectRetain();
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v27;
  uint64_t v18 = v25;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  uint64_t v19 = v22;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 48) = v17;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_8ACA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UppParentContentData.init(from:)(a1, a2);
}

uint64_t sub_8ACC0(void *a1)
{
  return UppParentContentData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics20UppParentContentDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_27E370() & 1) == 0
    || (v2 != v7 || v4 != v8) && (sub_27E370() & 1) == 0
    || (v3 != v9 || v5 != v10) && (sub_27E370() & 1) == 0)
  {
    return 0;
  }

  return sub_2DAE4(v6, v11);
}

unint64_t sub_8ADEC()
{
  unint64_t result = qword_319168;
  if (!qword_319168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319168);
  }
  return result;
}

uint64_t destroy for UppParentContentData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UppParentContentData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UppParentContentData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for UppParentContentData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UppParentContentData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for UppParentContentData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UppParentContentData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UppParentContentData()
{
  return &type metadata for UppParentContentData;
}

unsigned char *storeEnumTagSinglePayload for UppParentContentData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8B174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UppParentContentData.CodingKeys()
{
  return &type metadata for UppParentContentData.CodingKeys;
}

unint64_t sub_8B1B0()
{
  unint64_t result = qword_319178;
  if (!qword_319178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319178);
  }
  return result;
}

unint64_t sub_8B208()
{
  unint64_t result = qword_319180;
  if (!qword_319180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319180);
  }
  return result;
}

unint64_t sub_8B260()
{
  unint64_t result = qword_319188;
  if (!qword_319188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319188);
  }
  return result;
}

uint64_t sub_8B2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43746E65726170 && a2 == 0xEF4449746E65746ELL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AE8F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE910 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE930)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::GoalType_optional __swiftcall GoalType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7A00;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t GoalType.rawValue.getter()
{
  uint64_t v1 = 0x47676E6964616572;
  if (*v0 != 1) {
    uint64_t v1 = 0x616F47736B6F6F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_8B544(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2CEE8(*a1, *a2);
}

unint64_t sub_8B554()
{
  unint64_t result = qword_319190;
  if (!qword_319190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319190);
  }
  return result;
}

Swift::Int sub_8B5A8()
{
  return sub_27E420();
}

uint64_t sub_8B658()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_8B6F4()
{
  return sub_27E420();
}

BookAnalytics::GoalType_optional sub_8B7A0(Swift::String *a1)
{
  return GoalType.init(rawValue:)(*a1);
}

void sub_8B7AC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEB000000006C616FLL;
  uint64_t v5 = 0x47676E6964616572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x616F47736B6F6F62;
    unint64_t v4 = 0xE90000000000006CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_8B818()
{
  return sub_27DED0();
}

uint64_t sub_8B878()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for GoalType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8B994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalType()
{
  return &type metadata for GoalType;
}

unint64_t sub_8B9CC()
{
  unint64_t result = qword_319198;
  if (!qword_319198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319198);
  }
  return result;
}

uint64_t TextData.isBold.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TextData.isBold.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

BookAnalytics::TextData __swiftcall TextData.init(fontName:isBold:)(Swift::String fontName, Swift::Bool isBold)
{
  *(Swift::String *)uint64_t v2 = fontName;
  *(unsigned char *)(v2 + 16) = isBold;
  result.fontName = fontName;
  result.isBold = isBold;
  return result;
}

uint64_t static TextData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_27E370();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_8BA9C()
{
  if (*v0) {
    return 0x646C6F427369;
  }
  else {
    return 0x656D614E746E6F66;
  }
}

uint64_t sub_8BAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_8C2E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8BAFC(uint64_t a1)
{
  unint64_t v2 = sub_8BCE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8BB38(uint64_t a1)
{
  unint64_t v2 = sub_8BCE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3191A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_8BCE8();
  sub_27E440();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_27E2F0();
  if (!v7)
  {
    char v11 = 1;
    sub_27E300();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_8BCE8()
{
  unint64_t result = qword_3191A8;
  if (!qword_3191A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3191A8);
  }
  return result;
}

uint64_t TextData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3191B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_8BCE8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  char v12 = sub_27E230();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12 & 1;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_8BF28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TextData.init(from:)(a1, a2);
}

uint64_t sub_8BF40(void *a1)
{
  return TextData.encode(to:)(a1);
}

uint64_t sub_8BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TextData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextData()
{
  return &type metadata for TextData;
}

unsigned char *storeEnumTagSinglePayload for TextData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8C1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextData.CodingKeys()
{
  return &type metadata for TextData.CodingKeys;
}

unint64_t sub_8C1E0()
{
  unint64_t result = qword_3191B8;
  if (!qword_3191B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3191B8);
  }
  return result;
}

unint64_t sub_8C238()
{
  unint64_t result = qword_3191C0;
  if (!qword_3191C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3191C0);
  }
  return result;
}

unint64_t sub_8C290()
{
  unint64_t result = qword_3191C8;
  if (!qword_3191C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3191C8);
  }
  return result;
}

uint64_t sub_8C2E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E746E6F66 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C6F427369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_8C3D0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3191D0, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3191D0, a1);
}

uint64_t sub_8C430(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3191E8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3191E8, a1);
}

uint64_t ReadEvent.readingSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_319200);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ReadEvent.readingSessionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_319200);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ReadEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3192D0);
}

uint64_t ReadEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.readingSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_319208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.readingSettingsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_319208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.readingSettingsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.contentSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_319210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.contentSettingsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_319210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.contentSettingsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.orientationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.doNotDisturbData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.doNotDisturbData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.doNotDisturbData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.userEmbeddingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_317E08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.userEmbeddingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_317E08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadEvent.userEmbeddingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for ReadEvent(0);
  uint64_t v5 = a1 + Event[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  uint64_t v8 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + Event[7];
  uint64_t v10 = enum case for EventProperty.optional<A>(_:);
  uint64_t v11 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + Event[8];
  uint64_t v13 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + Event[9];
  uint64_t v15 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + Event[10];
  uint64_t v17 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + Event[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + Event[12];
  uint64_t v21 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + Event[13];
  uint64_t v23 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + Event[14];
  uint64_t v25 = sub_4E04(&qword_317E08);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v10, v25);
}

void ReadEvent.Model.readingSessionData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 4);
  int v3 = *(_DWORD *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 12);
  char v5 = *(unsigned char *)(v1 + 13);
  char v6 = *(unsigned char *)(v1 + 14);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = v4;
  *(unsigned char *)(a1 + 13) = v5;
  *(unsigned char *)(a1 + 14) = v6;
}

uint64_t ReadEvent.Model.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  __int16 v8 = *(_WORD *)(v1 + 72);
  int v9 = *(_DWORD *)(v1 + 76);
  char v10 = *(unsigned char *)(v1 + 80);
  int v11 = *(_DWORD *)(v1 + 84);
  char v12 = *(unsigned char *)(v1 + 88);
  char v13 = *(unsigned char *)(v1 + 93);
  uint64_t v15 = *(void *)(v1 + 96);
  uint64_t v14 = *(void *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 68) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(v1 + 89);
  *(unsigned char *)(a1 + 77) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ReadEvent.Model.readingSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 114);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 128);
  *(_WORD *)a1 = *(_WORD *)(v1 + 112);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t ReadEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 144);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void ReadEvent.Model.contentSettingsData.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 176);
  char v3 = *(unsigned char *)(v1 + 180);
  *(void *)a1 = *(void *)(v1 + 168);
  *(_DWORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 12) = v3;
}

__n128 ReadEvent.Model.orientationData.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v2 = *(_DWORD *)(v1 + 200);
  __n128 result = *(__n128 *)(v1 + 184);
  *a1 = result;
  a1[1].n128_u32[0] = v2;
  return result;
}

void ReadEvent.Model.doNotDisturbData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 204);
}

uint64_t ReadEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[26];
  uint64_t v3 = v1[27];
  uint64_t v4 = v1[28];
  uint64_t v5 = v1[29];
  uint64_t v6 = v1[30];
  uint64_t v7 = v1[31];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t ReadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3193A8);
}

uint64_t ReadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadEvent.Model(0) + 52);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadEvent.Model.userEmbeddingData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for ReadEvent.Model(0) + 56));

  return swift_bridgeObjectRetain();
}

uint64_t ReadEvent.Model.init(readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:orientationData:doNotDisturbData:seriesData:eventData:timedData:userEmbeddingData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, _WORD *a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  *(_DWORD *)a9 = *(_DWORD *)a1;
  *(unsigned char *)(a9 + 4) = *(unsigned char *)(a1 + 4);
  *(_DWORD *)(a9 + 8) = *(_DWORD *)(a1 + 8);
  *(unsigned char *)(a9 + 12) = *(unsigned char *)(a1 + 12);
  char v13 = *(unsigned char *)(a1 + 14);
  *(unsigned char *)(a9 + 13) = *(unsigned char *)(a1 + 13);
  *(unsigned char *)(a9 + 14) = v13;
  uint64_t v14 = *(void *)(a2 + 8);
  *(void *)(a9 + 16) = *(void *)a2;
  *(void *)(a9 + 24) = v14;
  *(unsigned char *)(a9 + 32) = *(unsigned char *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 48);
  *(void *)(a9 + 56) = *(void *)(a2 + 40);
  *(void *)(a9 + 64) = v15;
  long long v16 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a9 + 72) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a9 + 76) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a9 + 84) = *(_DWORD *)(a2 + 68);
  char v17 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a9 + 40) = v16;
  *(unsigned char *)(a9 + 88) = v17;
  *(_DWORD *)(a9 + 89) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a9 + 93) = *(unsigned char *)(a2 + 77);
  long long v18 = *(_OWORD *)(a2 + 80);
  LOBYTE(v15) = *(unsigned char *)(a3 + 2);
  *(_WORD *)(a9 + 112) = *(_WORD *)a3;
  *(unsigned char *)(a9 + 114) = v15;
  uint64_t v19 = *(void *)(a3 + 16);
  *(void *)(a9 + 120) = *(void *)(a3 + 8);
  *(void *)(a9 + 128) = v19;
  uint64_t v20 = *(void *)(a3 + 24);
  long long v21 = *a4;
  uint64_t v22 = *a5;
  *(void *)(a9 + 160) = *((void *)a4 + 2);
  *(void *)(a9 + 168) = v22;
  *(_DWORD *)(a9 + 176) = *((_DWORD *)a5 + 2);
  *(unsigned char *)(a9 + 180) = *((unsigned char *)a5 + 12);
  *(_OWORD *)(a9 + 96) = v18;
  *(void *)(a9 + 136) = v20;
  long long v23 = *a6;
  LOWORD(v22) = *a7;
  *(_DWORD *)(a9 + 200) = *((_DWORD *)a6 + 4);
  *(_WORD *)(a9 + 204) = v22;
  *(_OWORD *)(a9 + 144) = v21;
  *(_OWORD *)(a9 + 184) = v23;
  long long v24 = a8[1];
  *(_OWORD *)(a9 + 208) = *a8;
  *(_OWORD *)(a9 + 224) = v24;
  uint64_t v25 = *a12;
  *(_OWORD *)(a9 + 240) = a8[2];
  char v26 = (int *)type metadata accessor for ReadEvent.Model(0);
  uint64_t v27 = a9 + v26[12];
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a10, v28);
  uint64_t v29 = a9 + v26[13];
  uint64_t v30 = sub_27D7F0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a11, v30);
  *(void *)(a9 + v26[14]) = v25;
  return result;
}

uint64_t sub_8DA10(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      return 0x44746E65746E6F63;
    case 2:
    case 4:
      return 0xD000000000000013;
    case 3:
      uint64_t v3 = 0x6C6C65537075;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 5:
      return 0x7461746E6569726FLL;
    case 6:
      return 0xD000000000000010;
    case 7:
      uint64_t v3 = 0x736569726573;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 8:
      uint64_t v4 = 0x44746E657665;
      goto LABEL_13;
    case 9:
      uint64_t v4 = 0x4464656D6974;
LABEL_13:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8DB6C()
{
  return sub_8DA10(*v0);
}

uint64_t sub_8DB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8DB9C(uint64_t a1)
{
  unint64_t v2 = sub_8E124();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8DBD8(uint64_t a1)
{
  unint64_t v2 = sub_8E124();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_319220);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __int16 v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_8E124();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v35) = *(_DWORD *)v3;
  BYTE4(v35) = v9;
  DWORD2(v35) = v10;
  BYTE12(v35) = v11;
  BYTE13(v35) = v12;
  BYTE14(v35) = v13;
  char v46 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    *(void *)&long long v35 = *(void *)(v3 + 16);
    *((void *)&v35 + 1) = v14;
    v36[0] = v15;
    *(_OWORD *)&v36[8] = v16;
    *(void *)&v36[24] = v17;
    uint64_t v37 = v18;
    __int16 v38 = v19;
    int v39 = v20;
    char v40 = v21;
    int v41 = v22;
    char v42 = v23;
    int v43 = *(_DWORD *)(v3 + 89);
    char v44 = v24;
    long long v45 = *(_OWORD *)(v3 + 96);
    char v46 = 1;
    sub_1A1D4();
    sub_27E330();
    char v25 = *(unsigned char *)(v3 + 114);
    uint64_t v26 = *(void *)(v3 + 120);
    uint64_t v27 = *(void *)(v3 + 128);
    LOWORD(v35) = *(_WORD *)(v3 + 112);
    BYTE2(v35) = v25;
    *((void *)&v35 + 1) = v26;
    *(void *)char v36 = v27;
    *(void *)&v36[8] = *(void *)(v3 + 136);
    char v46 = 2;
    sub_8E1CC();
    sub_27E330();
    uint64_t v28 = *(void *)(v3 + 160);
    long long v35 = *(_OWORD *)(v3 + 144);
    *(void *)char v36 = v28;
    char v46 = 3;
    sub_36A74();
    sub_27E2C0();
    int v29 = *(_DWORD *)(v3 + 176);
    char v30 = *(unsigned char *)(v3 + 180);
    *(void *)&long long v35 = *(void *)(v3 + 168);
    DWORD2(v35) = v29;
    BYTE12(v35) = v30;
    char v46 = 4;
    sub_8E220();
    sub_27E2C0();
    int v31 = *(_DWORD *)(v3 + 200);
    long long v35 = *(_OWORD *)(v3 + 184);
    *(_DWORD *)char v36 = v31;
    char v46 = 5;
    sub_8E274();
    sub_27E2C0();
    LOWORD(v35) = *(_WORD *)(v3 + 204);
    char v46 = 6;
    sub_57554();
    sub_27E330();
    long long v32 = *(_OWORD *)(v3 + 224);
    long long v35 = *(_OWORD *)(v3 + 208);
    *(_OWORD *)char v36 = v32;
    *(_OWORD *)&v36[16] = *(_OWORD *)(v3 + 240);
    char v46 = 7;
    sub_11514();
    sub_27E2C0();
    uint64_t v33 = type metadata accessor for ReadEvent.Model(0);
    LOBYTE(v35) = 8;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v35) = 9;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
    *(void *)&long long v35 = *(void *)(v3 + *(int *)(v33 + 56));
    char v46 = 10;
    sub_575A8();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_8E124()
{
  unint64_t result = qword_319228;
  if (!qword_319228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319228);
  }
  return result;
}

unint64_t sub_8E178()
{
  unint64_t result = qword_319230;
  if (!qword_319230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319230);
  }
  return result;
}

unint64_t sub_8E1CC()
{
  unint64_t result = qword_319238;
  if (!qword_319238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319238);
  }
  return result;
}

unint64_t sub_8E220()
{
  unint64_t result = qword_319240;
  if (!qword_319240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319240);
  }
  return result;
}

unint64_t sub_8E274()
{
  unint64_t result = qword_319248;
  if (!qword_319248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319248);
  }
  return result;
}

uint64_t ReadEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v47 = sub_27D7F0();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_27D7C0();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_4E04(&qword_319250);
  uint64_t v8 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  int v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (int *)type metadata accessor for ReadEvent.Model(0);
  __chkstk_darwin(v51);
  char v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v49 = a1;
  sub_5900(a1, v13);
  sub_8E124();
  int v43 = v10;
  sub_27E430();
  if (v2)
  {
    uint64_t v50 = v2;
    return sub_5E94((uint64_t)v49);
  }
  else
  {
    uint64_t v50 = v7;
    int v41 = v5;
    char v63 = 0;
    sub_8EBD0();
    sub_27E260();
    char v14 = BYTE4(v52);
    int v15 = DWORD2(v52);
    char v16 = BYTE12(v52);
    char v17 = BYTE13(v52);
    char v18 = BYTE14(v52);
    *(_DWORD *)char v12 = v52;
    v12[4] = v14;
    *((_DWORD *)v12 + 2) = v15;
    v12[12] = v16;
    v12[13] = v17;
    v12[14] = v18;
    char v63 = 1;
    sub_1A98C();
    sub_27E260();
    uint64_t v19 = *((void *)&v52 + 1);
    char v20 = v53[0];
    long long v21 = *(_OWORD *)&v53[8];
    uint64_t v22 = *(void *)&v53[24];
    uint64_t v23 = v54;
    __int16 v24 = v55;
    int v25 = v56;
    char v26 = v57;
    int v27 = v58;
    char v28 = v59;
    char v29 = v61;
    *((void *)v12 + 2) = v52;
    *((void *)v12 + 3) = v19;
    v12[32] = v20;
    *(_OWORD *)(v12 + 40) = v21;
    *((void *)v12 + 7) = v22;
    *((void *)v12 + 8) = v23;
    *((_WORD *)v12 + 36) = v24;
    *((_DWORD *)v12 + 19) = v25;
    v12[80] = v26;
    *((_DWORD *)v12 + 21) = v27;
    v12[88] = v28;
    *(_DWORD *)(v12 + 89) = v60;
    v12[93] = v29;
    *((_OWORD *)v12 + 6) = v62;
    char v63 = 2;
    sub_8EC24();
    sub_27E260();
    char v30 = BYTE2(v52);
    uint64_t v31 = *((void *)&v52 + 1);
    unint64_t v32 = *(void *)v53;
    *((_WORD *)v12 + 56) = v52;
    v12[114] = v30;
    *((void *)v12 + 15) = v31;
    *((_OWORD *)v12 + 8) = __PAIR128__(*(unint64_t *)&v53[8], v32);
    char v63 = 3;
    sub_37744();
    sub_27E1F0();
    uint64_t v33 = *(void *)v53;
    *((_OWORD *)v12 + 9) = v52;
    *((void *)v12 + 20) = v33;
    char v63 = 4;
    sub_8EC78();
    sub_27E1F0();
    int v34 = DWORD2(v52);
    char v35 = BYTE12(v52);
    *((void *)v12 + 21) = v52;
    *((_DWORD *)v12 + 44) = v34;
    v12[180] = v35;
    char v63 = 5;
    sub_8ECCC();
    sub_27E1F0();
    int v36 = *(_DWORD *)v53;
    *(_OWORD *)(v12 + 184) = v52;
    *((_DWORD *)v12 + 50) = v36;
    char v63 = 6;
    sub_57FE4();
    sub_27E260();
    *((_WORD *)v12 + 102) = v52;
    char v63 = 7;
    sub_11A3C();
    sub_27E1F0();
    long long v37 = *(_OWORD *)v53;
    *((_OWORD *)v12 + 13) = v52;
    *((_OWORD *)v12 + 14) = v37;
    *((_OWORD *)v12 + 15) = *(_OWORD *)&v53[16];
    LOBYTE(v52) = 8;
    sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
    __int16 v38 = v50;
    sub_27E260();
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v12[v51[12]], v38, v48);
    LOBYTE(v52) = 9;
    sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E260();
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v12[v51[13]], v41, v47);
    char v63 = 10;
    sub_58038();
    sub_27E1F0();
    uint64_t v50 = 0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v43, v44);
    *(void *)&v12[v51[14]] = v52;
    sub_8ED20((uint64_t)v12, v42);
    sub_5E94((uint64_t)v49);
    return sub_8ED84((uint64_t)v12);
  }
}

unint64_t sub_8EBD0()
{
  unint64_t result = qword_319258;
  if (!qword_319258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319258);
  }
  return result;
}

unint64_t sub_8EC24()
{
  unint64_t result = qword_319260;
  if (!qword_319260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319260);
  }
  return result;
}

unint64_t sub_8EC78()
{
  unint64_t result = qword_319268;
  if (!qword_319268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319268);
  }
  return result;
}

unint64_t sub_8ECCC()
{
  unint64_t result = qword_319270;
  if (!qword_319270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319270);
  }
  return result;
}

uint64_t sub_8ED20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8ED84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_8EDE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_8EDF8(void *a1)
{
  return ReadEvent.Model.encode(to:)(a1);
}

uint64_t sub_8EE10@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3191D0, a1);
}

uint64_t sub_8EE48@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3191E8, a1);
}

uint64_t sub_8EE80@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.optional<A>(_:);
  uint64_t v12 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_317E08);
  int v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_319208);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_319210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_319218);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_317E00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    int v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    int v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_317E08);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for ReadEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_317E08);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for ReadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for ReadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for ReadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for ReadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_319210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_906AC);
}

uint64_t sub_906AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  uint64_t v14 = sub_4E04(&qword_319208);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  uint64_t v15 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  uint64_t v16 = sub_4E04(&qword_319210);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_317E08);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for ReadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_90A98);
}

uint64_t sub_90A98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  uint64_t v16 = sub_4E04(&qword_319208);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_319210);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE8);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  uint64_t v25 = sub_4E04(&qword_317E08);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_90E7C()
{
  sub_91358(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_91358(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_91358(319, &qword_3192E8, (void (*)(void))sub_8EC24, (void (*)(void))sub_8E1CC);
      if (v2 <= 0x3F)
      {
        sub_91358(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
        if (v3 <= 0x3F)
        {
          sub_91358(319, &qword_3192F0, (void (*)(void))sub_8EC78, (void (*)(void))sub_8E220);
          if (v4 <= 0x3F)
          {
            sub_91358(319, (unint64_t *)&qword_3192F8, (void (*)(void))sub_8ECCC, (void (*)(void))sub_8E274);
            if (v5 <= 0x3F)
            {
              sub_91358(319, &qword_317EC8, (void (*)(void))sub_57FE4, (void (*)(void))sub_57554);
              if (v6 <= 0x3F)
              {
                sub_91358(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_6DA0();
                  if (v8 <= 0x3F)
                  {
                    sub_6E6C();
                    if (v9 <= 0x3F)
                    {
                      sub_91358(319, (unint64_t *)&unk_317ED0, (void (*)(void))sub_58038, (void (*)(void))sub_575A8);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_91358(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadEvent.Model(void *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    *(void *)((char *)a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v7 = a2[3];
    v4[2] = a2[2];
    v4[3] = v7;
    *((unsigned char *)v4 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = a2[8];
    v4[7] = a2[7];
    v4[8] = v9;
    *((_WORD *)v4 + 36) = *((_WORD *)a2 + 36);
    *((_DWORD *)v4 + 19) = *((_DWORD *)a2 + 19);
    *((unsigned char *)v4 + 80) = *((unsigned char *)a2 + 80);
    *((_DWORD *)v4 + 21) = *((_DWORD *)a2 + 21);
    *((unsigned char *)v4 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)((char *)v4 + 89) = *(_DWORD *)((char *)a2 + 89);
    *((unsigned char *)v4 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v10 = a2[13];
    v4[12] = a2[12];
    v4[13] = v10;
    *((unsigned char *)v4 + 112) = *((unsigned char *)a2 + 112);
    *(_WORD *)((char *)v4 + 113) = *(_WORD *)((char *)a2 + 113);
    uint64_t v11 = a2[16];
    v4[15] = a2[15];
    v4[16] = v11;
    v4[17] = a2[17];
    *((_WORD *)v4 + 72) = *((_WORD *)a2 + 72);
    uint64_t v12 = a2[20];
    void v4[19] = a2[19];
    v4[20] = v12;
    uint64_t v13 = a2[21];
    *(void *)((char *)v4 + 173) = *(uint64_t *)((char *)a2 + 173);
    v4[21] = v13;
    *((_DWORD *)v4 + 50) = *((_DWORD *)a2 + 50);
    *(_OWORD *)(v4 + 23) = *(_OWORD *)(a2 + 23);
    *((_WORD *)v4 + 102) = *((_WORD *)a2 + 102);
    uint64_t v14 = a2[31];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      long long v15 = *((_OWORD *)a2 + 14);
      *((_OWORD *)v4 + 13) = *((_OWORD *)a2 + 13);
      *((_OWORD *)v4 + 14) = v15;
      *((_OWORD *)v4 + 15) = *((_OWORD *)a2 + 15);
    }
    else
    {
      v4[26] = a2[26];
      *((unsigned char *)v4 + 216) = *((unsigned char *)a2 + 216);
      v4[28] = a2[28];
      *((unsigned char *)v4 + 232) = *((unsigned char *)a2 + 232);
      *(_WORD *)((char *)v4 + 233) = *(_WORD *)((char *)a2 + 233);
      v4[30] = a2[30];
      v4[31] = v14;
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = a3[12];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[13];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ReadEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 248) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  uint64_t v7 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 173) = *(void *)(a2 + 173);
  *(void *)(a1 + 168) = v12;
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_WORD *)(a1 + 204) = *(_WORD *)(a2 + 204);
  uint64_t v13 = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    long long v14 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v14;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  }
  else
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v13;
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadEvent.Model(uint64_t a1, int *a2, int *a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
  *(unsigned char *)(a1 + 114) = *((unsigned char *)a2 + 114);
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = a2[34];
  *(_DWORD *)(a1 + 140) = a2[35];
  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
  *(unsigned char *)(a1 + 145) = *((unsigned char *)a2 + 145);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)a2 + 21);
  *(void *)(a1 + 173) = *(void *)((char *)a2 + 173);
  *(void *)(a1 + 168) = v10;
  long long v11 = *(_OWORD *)(a2 + 46);
  *(_DWORD *)(a1 + 200) = a2[50];
  *(_OWORD *)(a1 + 184) = v11;
  *(unsigned char *)(a1 + 204) = *((unsigned char *)a2 + 204);
  *(unsigned char *)(a1 + 205) = *((unsigned char *)a2 + 205);
  uint64_t v12 = (long long *)(a1 + 208);
  uint64_t v13 = (long long *)(a2 + 52);
  uint64_t v14 = *((void *)a2 + 31);
  if (*(void *)(a1 + 248) == 1)
  {
    if (v14 == 1)
    {
      long long v15 = *v13;
      long long v16 = *((_OWORD *)a2 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 240) = v16;
      long long *v12 = v15;
    }
    else
    {
      *(void *)(a1 + 208) = *((void *)a2 + 26);
      *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
      *(void *)(a1 + 224) = *((void *)a2 + 28);
      *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
      *(unsigned char *)(a1 + 233) = *((unsigned char *)a2 + 233);
      *(unsigned char *)(a1 + 234) = *((unsigned char *)a2 + 234);
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      *(void *)(a1 + 248) = *((void *)a2 + 31);
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_1CDD8(a1 + 208);
    long long v18 = *((_OWORD *)a2 + 14);
    long long v17 = *((_OWORD *)a2 + 15);
    long long *v12 = *v13;
    *(_OWORD *)(a1 + 224) = v18;
    *(_OWORD *)(a1 + 240) = v17;
  }
  else
  {
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    *(void *)(a1 + 224) = *((void *)a2 + 28);
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    *(unsigned char *)(a1 + 233) = *((unsigned char *)a2 + 233);
    *(unsigned char *)(a1 + 234) = *((unsigned char *)a2 + 234);
    *(void *)(a1 + 240) = *((void *)a2 + 30);
    *(void *)(a1 + 248) = *((void *)a2 + 31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t)a2 + v23;
  uint64_t v26 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  *(void *)(a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 173) = *(void *)(a2 + 173);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_WORD *)(a1 + 204) = *(_WORD *)(a2 + 204);
  long long v11 = *(_OWORD *)(a2 + 208);
  long long v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)(a1 + 208) = v11;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for ReadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 173) = *(void *)(a2 + 173);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_WORD *)(a1 + 204) = *(_WORD *)(a2 + 204);
  if (*(void *)(a1 + 248) != 1)
  {
    uint64_t v12 = *(void *)(a2 + 248);
    if (v12 != 1)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 208);
  }
  long long v13 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v13;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_6:
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_920F8);
}

uint64_t sub_920F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ReadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_92238);
}

uint64_t sub_92238(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 52);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_92364()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x92550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadEvent.Model.CodingKeys()
{
  return &type metadata for ReadEvent.Model.CodingKeys;
}

unint64_t sub_9258C()
{
  unint64_t result = qword_319408;
  if (!qword_319408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319408);
  }
  return result;
}

unint64_t sub_925E4()
{
  unint64_t result = qword_319410;
  if (!qword_319410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319410);
  }
  return result;
}

unint64_t sub_9263C()
{
  unint64_t result = qword_319418;
  if (!qword_319418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319418);
  }
  return result;
}

uint64_t sub_92690(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE970 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE990 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE310 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE330)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

BookAnalytics::GetStartedActionType_optional __swiftcall GetStartedActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7A68;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t GetStartedActionType.rawValue.getter()
{
  uint64_t v1 = 0x65756E69746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x616E614D61746164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_92BF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2FA2C(*a1, *a2);
}

unint64_t sub_92C00()
{
  unint64_t result = qword_319420;
  if (!qword_319420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319420);
  }
  return result;
}

Swift::Int sub_92C54()
{
  return sub_27E420();
}

uint64_t sub_92CFC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_92D90()
{
  return sub_27E420();
}

BookAnalytics::GetStartedActionType_optional sub_92E34(Swift::String *a1)
{
  return GetStartedActionType.init(rawValue:)(*a1);
}

void sub_92E40(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x65756E69746E6F63;
  if (v2 != 1)
  {
    uint64_t v5 = 0x616E614D61746164;
    unint64_t v4 = 0xEA00000000006567;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_92EA4()
{
  return sub_27DED0();
}

uint64_t sub_92F04()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for GetStartedActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x93020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetStartedActionType()
{
  return &type metadata for GetStartedActionType;
}

unint64_t sub_93058()
{
  unint64_t result = qword_319428;
  if (!qword_319428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319428);
  }
  return result;
}

BookAnalytics::SuggestionType_optional __swiftcall SuggestionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7AD0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SuggestionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65636572;
      break;
    case 2:
      uint64_t result = 0x676E69646E657274;
      break;
    case 3:
      uint64_t result = 0x64656863746566;
      break;
    case 4:
      uint64_t v2 = 0x736567677573;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x636572726F63;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_931EC(unsigned __int8 *a1, char *a2)
{
  return sub_2DF9C(*a1, *a2);
}

unint64_t sub_931FC()
{
  unint64_t result = qword_319430;
  if (!qword_319430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319430);
  }
  return result;
}

Swift::Int sub_93250()
{
  return sub_25CCD0();
}

uint64_t sub_9325C()
{
  return sub_27BEE4();
}

Swift::Int sub_93264()
{
  return sub_25CCD0();
}

BookAnalytics::SuggestionType_optional sub_9326C(Swift::String *a1)
{
  return SuggestionType.init(rawValue:)(*a1);
}

uint64_t sub_93278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SuggestionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_932A0()
{
  return sub_27DED0();
}

uint64_t sub_93300()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SuggestionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9341CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionType()
{
  return &type metadata for SuggestionType;
}

unint64_t sub_93454()
{
  unint64_t result = qword_319438;
  if (!qword_319438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319438);
  }
  return result;
}

BookAnalytics::SeriesUserSubStatus_optional __swiftcall SeriesUserSubStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7B98;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SeriesUserSubStatus.rawValue.getter()
{
  uint64_t result = 0x6153736569726573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65536E497478656ELL;
      break;
    case 2:
      uint64_t v2 = 0x536572616873;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x537472617473;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
      break;
    case 4:
      uint64_t result = 0x65756E69746E6F63;
      break;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_93608(unsigned __int8 *a1, char *a2)
{
  return sub_333B4(*a1, *a2);
}

unint64_t sub_93618()
{
  unint64_t result = qword_319440;
  if (!qword_319440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319440);
  }
  return result;
}

Swift::Int sub_9366C()
{
  return sub_25D020();
}

uint64_t sub_93678()
{
  return sub_27BB24();
}

Swift::Int sub_93680()
{
  return sub_25D020();
}

BookAnalytics::SeriesUserSubStatus_optional sub_93688(Swift::String *a1)
{
  return SeriesUserSubStatus.init(rawValue:)(*a1);
}

uint64_t sub_93694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SeriesUserSubStatus.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_936BC()
{
  return sub_27DED0();
}

uint64_t sub_9371C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SeriesUserSubStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x93838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesUserSubStatus()
{
  return &type metadata for SeriesUserSubStatus;
}

unint64_t sub_93870()
{
  unint64_t result = qword_319448;
  if (!qword_319448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319448);
  }
  return result;
}

BookAnalytics::FeatureEnabled_optional __swiftcall FeatureEnabled.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7C60;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t FeatureEnabled.rawValue.getter()
{
  uint64_t v1 = 0x64656C62616E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C6261736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_9397C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_31888(*a1, *a2);
}

unint64_t sub_9398C()
{
  unint64_t result = qword_319450;
  if (!qword_319450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319450);
  }
  return result;
}

Swift::Int sub_939E0()
{
  return sub_27E420();
}

uint64_t sub_93A84()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_93B14()
{
  return sub_27E420();
}

BookAnalytics::FeatureEnabled_optional sub_93BB4(Swift::String *a1)
{
  return FeatureEnabled.init(rawValue:)(*a1);
}

void sub_93BC0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64656C62616E65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C6261736964;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_93C20()
{
  return sub_27DED0();
}

uint64_t sub_93C80()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for FeatureEnabled(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x93D9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureEnabled()
{
  return &type metadata for FeatureEnabled;
}

unint64_t sub_93DD4()
{
  unint64_t result = qword_319458;
  if (!qword_319458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319458);
  }
  return result;
}

BookAnalytics::SectionType_optional __swiftcall SectionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7CC8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t SectionType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x68736F6F7773;
      break;
    case 2:
      unint64_t result = 0x6B63697262;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x65736163776F6C66;
      break;
    case 5:
      unint64_t result = 0x736C616F67;
      break;
    case 6:
      unint64_t result = 0x6573776F7262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_93F5C(unsigned __int8 *a1, char *a2)
{
  return sub_326C8(*a1, *a2);
}

unint64_t sub_93F6C()
{
  unint64_t result = qword_319460;
  if (!qword_319460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319460);
  }
  return result;
}

Swift::Int sub_93FC0()
{
  return sub_25C6FC();
}

uint64_t sub_93FCC()
{
  return sub_27C514();
}

Swift::Int sub_93FD4()
{
  return sub_25C6FC();
}

BookAnalytics::SectionType_optional sub_93FDC(Swift::String *a1)
{
  return SectionType.init(rawValue:)(*a1);
}

unint64_t sub_93FE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SectionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_94010()
{
  return sub_27DED0();
}

uint64_t sub_94070()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9418CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionType()
{
  return &type metadata for SectionType;
}

unint64_t sub_941C4()
{
  unint64_t result = qword_319468;
  if (!qword_319468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319468);
  }
  return result;
}

uint64_t sub_94218(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_319470, &enum case for SessionGroup.default(_:));
}

uint64_t static CollectionScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319470, a1);
}

uint64_t sub_94278(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_319488, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CollectionScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3156F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319488, a1);
}

uint64_t CollectionScreenViewEvent.singleCollectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3194A0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CollectionScreenViewEvent.singleCollectionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3194A0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t CollectionScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionScreenViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_319518);
}

uint64_t CollectionScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionScreenViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionScreenViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for CollectionScreenViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t CollectionScreenViewEvent.Model.singleCollectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  int v3 = *(_DWORD *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t CollectionScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionScreenViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3195B8);
}

uint64_t CollectionScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionScreenViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CollectionScreenViewEvent.Model.init(singleCollectionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(_DWORD *)(a1 + 16);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v7;
  *(_DWORD *)(a4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CollectionScreenViewEvent.Model(0);
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + *(int *)(v9 + 24);
  uint64_t v13 = sub_27D7F0();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a3, v13);
}

unint64_t sub_94978()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_949E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_96A58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_94A08(uint64_t a1)
{
  unint64_t v2 = sub_94CD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_94A44(uint64_t a1)
{
  unint64_t v2 = sub_94CD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3194A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_94CD4();
  sub_27E440();
  uint64_t v9 = v3[1];
  int v10 = *((_DWORD *)v3 + 4);
  uint64_t v13 = *v3;
  uint64_t v14 = v9;
  int v15 = v10;
  v12[7] = 0;
  sub_18340();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for CollectionScreenViewEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v13) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_94CD4()
{
  unint64_t result = qword_3194B0;
  if (!qword_3194B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3194B0);
  }
  return result;
}

uint64_t CollectionScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = sub_27D7F0();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4E04(&qword_3194B8);
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  int v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CollectionScreenViewEvent.Model(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v32 = a1;
  sub_5900(a1, v14);
  sub_94CD4();
  uint64_t v31 = v10;
  uint64_t v15 = v33;
  sub_27E430();
  if (v15) {
    return sub_5E94((uint64_t)v32);
  }
  uint64_t v33 = v11;
  uint64_t v16 = v29;
  uint64_t v17 = (uint64_t)v13;
  uint64_t v24 = v4;
  char v37 = 0;
  sub_182E8();
  uint64_t v18 = v30;
  sub_27E260();
  uint64_t v19 = v35;
  int v20 = v36;
  *(void *)uint64_t v17 = v34;
  *(void *)(v17 + 8) = v19;
  *(_DWORD *)(v17 + 16) = v20;
  LOBYTE(v34) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v17 + *(int *)(v33 + 20), v7, v5);
  LOBYTE(v34) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v21 = v27;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v17 + *(int *)(v33 + 24), v24, v21);
  sub_951D0(v17, v26);
  sub_5E94((uint64_t)v32);
  return sub_95234(v17);
}

uint64_t sub_951D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_95234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_95290@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_952A8(void *a1)
{
  return CollectionScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_952C0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319470, a1);
}

uint64_t sub_952F8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3156F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319488, a1);
}

uint64_t sub_95330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3194A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for CollectionScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_95B08);
}

uint64_t sub_95B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for CollectionScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_95C74);
}

uint64_t sub_95C74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3194A0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_95DD8()
{
  sub_95EDC();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_95EDC()
{
  if (!qword_319528)
  {
    sub_182E8();
    sub_18340();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_319528);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_27D7C0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9650C);
}

uint64_t sub_9650C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CollectionScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9664C);
}

uint64_t sub_9664C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_96778()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x96918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for CollectionScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_96954()
{
  unint64_t result = qword_3195F8;
  if (!qword_3195F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3195F8);
  }
  return result;
}

unint64_t sub_969AC()
{
  unint64_t result = qword_319600;
  if (!qword_319600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319600);
  }
  return result;
}

unint64_t sub_96A04()
{
  unint64_t result = qword_319608;
  if (!qword_319608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319608);
  }
  return result;
}

uint64_t sub_96A58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE9B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t DealsData.originalPricePoint.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DealsData.originalPricePoint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void NotificationData.recoType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

unsigned char *NotificationData.recoType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 25) = *result;
  return result;
}

uint64_t (*NotificationData.recoType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void NotificationData.goalType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 26);
}

unsigned char *NotificationData.goalType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 26) = *result;
  return result;
}

uint64_t (*NotificationData.goalType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

__n128 NotificationData.init(notificationContentID:notificationID:notificationType:recoType:goalType:titleCode:title:messageCode:message:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result = a11;
  char v14 = *a4;
  char v15 = *a5;
  char v16 = *a6;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = v14;
  *(unsigned char *)(a9 + 25) = v15;
  *(unsigned char *)(a9 + 26) = v16;
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a8;
  *(_OWORD *)(a9 + 48) = a10;
  *(__n128 *)(a9 + 64) = a11;
  *(void *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  return result;
}

uint64_t sub_96CD8(char a1)
{
  uint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6163696669746F6ELL;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      unsigned int v3 = 1868785010;
      goto LABEL_6;
    case 4:
      unsigned int v3 = 1818324839;
LABEL_6:
      uint64_t result = v3 | 0x6570795400000000;
      break;
    case 5:
      uint64_t result = 0x646F43656C746974;
      break;
    case 6:
      uint64_t result = 0x656C746974;
      break;
    case 7:
      uint64_t result = 0x436567617373656DLL;
      break;
    case 8:
      uint64_t result = 0x6567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_96E14()
{
  return sub_96CD8(*v0);
}

uint64_t sub_96E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_983F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_96E44(uint64_t a1)
{
  unint64_t v2 = sub_97B40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_96E80(uint64_t a1)
{
  unint64_t v2 = sub_97B40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_319610);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v23 = v1[2];
  uint64_t v24 = v8;
  LODWORD(v8) = *((unsigned __int8 *)v1 + 24);
  int v21 = *((unsigned __int8 *)v1 + 25);
  int v22 = v8;
  int v20 = *((unsigned __int8 *)v1 + 26);
  uint64_t v10 = v1[4];
  v19[7] = v1[5];
  v19[8] = v10;
  uint64_t v11 = v1[7];
  v19[5] = v1[6];
  _OWORD v19[6] = v11;
  uint64_t v12 = v1[9];
  v19[3] = v1[8];
  v19[4] = v12;
  uint64_t v13 = v1[11];
  v19[1] = v1[10];
  _OWORD v19[2] = v13;
  sub_5900(a1, a1[3]);
  sub_97B40();
  uint64_t v14 = v4;
  sub_27E440();
  uint64_t v26 = v9;
  char v25 = 0;
  sub_4E04(&qword_319620);
  sub_97C90(&qword_319628);
  sub_27E2C0();
  if (!v2)
  {
    char v16 = v21;
    char v15 = v22;
    char v17 = v20;
    LOBYTE(v26) = 1;
    sub_27E2F0();
    LOBYTE(v26) = v15;
    char v25 = 2;
    sub_97B94();
    sub_27E330();
    LOBYTE(v26) = v16;
    char v25 = 3;
    sub_97BE8();
    sub_27E330();
    LOBYTE(v26) = v17;
    char v25 = 4;
    sub_97C3C();
    sub_27E330();
    LOBYTE(v26) = 5;
    sub_27E290();
    LOBYTE(v26) = 6;
    sub_27E2F0();
    LOBYTE(v26) = 7;
    sub_27E290();
    LOBYTE(v26) = 8;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t NotificationData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_319648);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_97B40();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    sub_4E04(&qword_319620);
    char v36 = 0;
    sub_97C90(&qword_319650);
    sub_27E1F0();
    uint64_t v10 = v37;
    LOBYTE(v37) = 1;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_27E220();
    char v36 = 2;
    uint64_t v12 = v11;
    sub_97CF4();
    swift_bridgeObjectRetain();
    sub_27E260();
    uint64_t v35 = v12;
    LODWORD(v12) = v37;
    char v36 = 3;
    sub_97D48();
    sub_27E260();
    int v32 = v12;
    LODWORD(v12) = v37;
    char v36 = 4;
    sub_97D9C();
    sub_27E260();
    int v30 = v12;
    uint64_t v31 = a2;
    LODWORD(v12) = v37;
    LOBYTE(v37) = 5;
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v29 = v13;
    LOBYTE(v37) = 6;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_27E220();
    int v28 = v12;
    LOBYTE(v37) = 7;
    uint64_t v34 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_27E1C0();
    uint64_t v19 = v18;
    uint64_t v26 = v17;
    LOBYTE(v37) = 8;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_27E1C0();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int v22 = v31;
    uint64_t v23 = v33;
    uint64_t v24 = v34;
    *uint64_t v31 = v10;
    v22[1] = v23;
    v22[2] = v35;
    *((unsigned char *)v22 + 24) = v32;
    *((unsigned char *)v22 + 25) = v30;
    *((unsigned char *)v22 + 26) = v28;
    v22[4] = v29;
    v22[5] = v15;
    v22[6] = v27;
    v22[7] = v24;
    v22[8] = v26;
    v22[9] = v19;
    v22[10] = v25;
    v22[11] = v21;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_977E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return NotificationData.init(from:)(a1, a2);
}

uint64_t sub_977F8(void *a1)
{
  return NotificationData.encode(to:)(a1);
}

BOOL _s13BookAnalytics16NotificationDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 25);
  int v9 = *(unsigned __int8 *)(a1 + 26);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v18 = *(void **)a2;
  uint64_t v20 = *(void *)(a2 + 8);
  uint64_t v19 = *(void *)(a2 + 16);
  char v21 = *(unsigned char *)(a2 + 24);
  char v22 = *(unsigned char *)(a2 + 25);
  int v23 = *(unsigned __int8 *)(a2 + 26);
  uint64_t v25 = *(void *)(a2 + 32);
  uint64_t v24 = *(void *)(a2 + 40);
  uint64_t v26 = *(void *)(a2 + 48);
  uint64_t v27 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  if (v4)
  {
    if (!v18) {
      return 0;
    }
    uint64_t v56 = v25;
    uint64_t v60 = v24;
    uint64_t v61 = v11;
    uint64_t v57 = v10;
    uint64_t v58 = v26;
    uint64_t v54 = v27;
    uint64_t v55 = v13;
    uint64_t v59 = v12;
    uint64_t v50 = v29;
    uint64_t v51 = v14;
    uint64_t v52 = v28;
    uint64_t v53 = v15;
    uint64_t v46 = v31;
    uint64_t v47 = v17;
    uint64_t v48 = v30;
    uint64_t v49 = v16;
    if ((sub_80FC4(v4, v18) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v56 = v25;
    uint64_t v60 = v24;
    uint64_t v61 = v11;
    uint64_t v57 = v10;
    uint64_t v58 = v26;
    uint64_t v54 = v27;
    uint64_t v55 = v13;
    uint64_t v59 = v12;
    uint64_t v50 = v29;
    uint64_t v51 = v14;
    uint64_t v52 = v28;
    uint64_t v53 = v15;
    uint64_t v46 = v31;
    uint64_t v47 = v17;
    uint64_t v48 = v30;
    uint64_t v49 = v16;
    if (v18) {
      return 0;
    }
  }
  if (v6 == v20 && v5 == v19 || (v32 = sub_27E370(), BOOL result = 0, (v32 & 1) != 0))
  {
    if ((sub_30C70(v7, v21) & 1) == 0 || (sub_2CB2C(v8, v22) & 1) == 0) {
      return 0;
    }
    uint64_t v34 = 0x47676E6964616572;
    unint64_t v35 = 0xEB000000006C616FLL;
    if (v9 != 1)
    {
      uint64_t v34 = 0x616F47736B6F6F62;
      unint64_t v35 = 0xE90000000000006CLL;
    }
    if (v9) {
      uint64_t v36 = v34;
    }
    else {
      uint64_t v36 = 0x6E776F6E6B6E75;
    }
    if (v9) {
      unint64_t v37 = v35;
    }
    else {
      unint64_t v37 = 0xE700000000000000;
    }
    uint64_t v38 = 0x47676E6964616572;
    unint64_t v39 = 0xEB000000006C616FLL;
    if (v23 != 1)
    {
      uint64_t v38 = 0x616F47736B6F6F62;
      unint64_t v39 = 0xE90000000000006CLL;
    }
    if (v23) {
      uint64_t v40 = v38;
    }
    else {
      uint64_t v40 = 0x6E776F6E6B6E75;
    }
    if (v23) {
      unint64_t v41 = v39;
    }
    else {
      unint64_t v41 = 0xE700000000000000;
    }
    if (v36 == v40 && v37 == v41)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v42 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v42 & 1) == 0) {
        return result;
      }
    }
    if (v61)
    {
      if (!v60) {
        return 0;
      }
      if (v57 != v56 || v61 != v60)
      {
        char v43 = sub_27E370();
        BOOL result = 0;
        if ((v43 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v60)
    {
      return 0;
    }
    if (v59 != v58 || v55 != v54)
    {
      char v44 = sub_27E370();
      BOOL result = 0;
      if ((v44 & 1) == 0) {
        return result;
      }
    }
    if (v53)
    {
      if (!v52) {
        return 0;
      }
      if (v51 != v50 || v53 != v52)
      {
        char v45 = sub_27E370();
        BOOL result = 0;
        if ((v45 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v52)
    {
      return 0;
    }
    if (v49) {
      return v48 && (v47 == v46 && v49 == v48 || (sub_27E370() & 1) != 0);
    }
    return !v48;
  }
  return result;
}

unint64_t sub_97B40()
{
  unint64_t result = qword_319618;
  if (!qword_319618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319618);
  }
  return result;
}

unint64_t sub_97B94()
{
  unint64_t result = qword_319630;
  if (!qword_319630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319630);
  }
  return result;
}

unint64_t sub_97BE8()
{
  unint64_t result = qword_319638;
  if (!qword_319638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319638);
  }
  return result;
}

unint64_t sub_97C3C()
{
  unint64_t result = qword_319640;
  if (!qword_319640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319640);
  }
  return result;
}

uint64_t sub_97C90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_319620);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_97CF4()
{
  unint64_t result = qword_319658;
  if (!qword_319658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319658);
  }
  return result;
}

unint64_t sub_97D48()
{
  unint64_t result = qword_319660;
  if (!qword_319660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319660);
  }
  return result;
}

unint64_t sub_97D9C()
{
  unint64_t result = qword_319668;
  if (!qword_319668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319668);
  }
  return result;
}

unint64_t sub_97DF4()
{
  unint64_t result = qword_319670;
  if (!qword_319670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319670);
  }
  return result;
}

unint64_t sub_97E4C()
{
  unint64_t result = qword_319678;
  if (!qword_319678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319678);
  }
  return result;
}

uint64_t destroy for NotificationData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NotificationData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationData()
{
  return &type metadata for NotificationData;
}

unsigned char *storeEnumTagSinglePayload for NotificationData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x982B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationData.CodingKeys()
{
  return &type metadata for NotificationData.CodingKeys;
}

unint64_t sub_982EC()
{
  unint64_t result = qword_319680;
  if (!qword_319680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319680);
  }
  return result;
}

unint64_t sub_98344()
{
  unint64_t result = qword_319688;
  if (!qword_319688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319688);
  }
  return result;
}

unint64_t sub_9839C()
{
  unint64_t result = qword_319690;
  if (!qword_319690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319690);
  }
  return result;
}

uint64_t sub_983F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000002AE9D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6163696669746F6ELL && a2 == 0xEE0044496E6F6974 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE9F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657079546F636572 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657079546C616F67 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646F43656C746974 && a2 == 0xE900000000000065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x436567617373656DLL && a2 == 0xEB0000000065646FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

BookAnalytics::YIRDetailedData __swiftcall YIRDetailedData.init(totalCardCount:cardViewedCount:)(Swift::Int64_optional totalCardCount, Swift::Int64_optional cardViewedCount)
{
  *(void *)uint64_t v2 = totalCardCount.value;
  *(unsigned char *)(v2 + 8) = totalCardCount.is_nil;
  *(void *)(v2 + 16) = cardViewedCount.value;
  *(unsigned char *)(v2 + 24) = cardViewedCount.is_nil;
  result.cardViewedCount = cardViewedCount;
  result.totalCardCount = totalCardCount;
  return result;
}

uint64_t sub_987F8()
{
  if (*v0) {
    return 0x7765695664726163;
  }
  else {
    return 0x7261436C61746F74;
  }
}

uint64_t sub_9884C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_99024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_98874(uint64_t a1)
{
  unint64_t v2 = sub_98CB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_988B0(uint64_t a1)
{
  unint64_t v2 = sub_98CB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t YIRDetailedData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_319698);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 16);
  int v10 = *(unsigned __int8 *)(v1 + 24);
  sub_5900(a1, a1[3]);
  sub_98CB4();
  sub_27E440();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_27E2E0();
  if (!v7)
  {
    char v11 = 1;
    sub_27E2E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t YIRDetailedData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3196A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_98CB4();
  sub_27E430();
  if (!v2)
  {
    char v19 = 0;
    uint64_t v9 = sub_27E210();
    char v11 = v10;
    char v18 = 1;
    uint64_t v13 = sub_27E210();
    uint64_t v14 = v8;
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v16 & 1;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_98C28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YIRDetailedData.init(from:)(a1, a2);
}

uint64_t sub_98C40(void *a1)
{
  return YIRDetailedData.encode(to:)(a1);
}

BOOL _s13BookAnalytics15YIRDetailedDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16)) {
      char v4 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v4 = 1;
    }
    return (v4 & 1) == 0;
  }
  return (*(unsigned char *)(a2 + 24) & 1) != 0;
}

unint64_t sub_98CB4()
{
  unint64_t result = qword_3196A0;
  if (!qword_3196A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196A0);
  }
  return result;
}

unint64_t sub_98D0C()
{
  unint64_t result = qword_3196B0;
  if (!qword_3196B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196B0);
  }
  return result;
}

unint64_t sub_98D64()
{
  unint64_t result = qword_3196B8;
  if (!qword_3196B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for YIRDetailedData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for YIRDetailedData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for YIRDetailedData()
{
  return &type metadata for YIRDetailedData;
}

unsigned char *storeEnumTagSinglePayload for YIRDetailedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x98EE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YIRDetailedData.CodingKeys()
{
  return &type metadata for YIRDetailedData.CodingKeys;
}

unint64_t sub_98F20()
{
  unint64_t result = qword_3196C0;
  if (!qword_3196C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196C0);
  }
  return result;
}

unint64_t sub_98F78()
{
  unint64_t result = qword_3196C8;
  if (!qword_3196C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196C8);
  }
  return result;
}

unint64_t sub_98FD0()
{
  unint64_t result = qword_3196D0;
  if (!qword_3196D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3196D0);
  }
  return result;
}

uint64_t sub_99024(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7261436C61746F74 && a2 == 0xEE00746E756F4364;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7765695664726163 && a2 == 0xEF746E756F436465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_99160(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3196D8, &enum case for SessionGroup.default(_:));
}

uint64_t static GetStartedActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315700, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3196D8, a1);
}

uint64_t sub_991C0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3196F0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GetStartedActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315708, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3196F0, a1);
}

uint64_t GetStartedActionEvent.getStartedActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_319708);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GetStartedActionEvent.getStartedActionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_319708);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t GetStartedActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GetStartedActionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_319780);
}

uint64_t GetStartedActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GetStartedActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GetStartedActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for GetStartedActionEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t GetStartedActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetStartedActionEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GetStartedActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_319818);
}

uint64_t GetStartedActionEvent.Model.init(getStartedActionData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for GetStartedActionEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  char v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_9963C()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_99680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_9ACF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_996A8(uint64_t a1)
{
  unint64_t v2 = sub_998DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_996E4(uint64_t a1)
{
  unint64_t v2 = sub_998DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GetStartedActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_319710);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_998DC();
  sub_27E440();
  v10[15] = *v3;
  unsigned char v10[14] = 0;
  sub_16C4C();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for GetStartedActionEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}