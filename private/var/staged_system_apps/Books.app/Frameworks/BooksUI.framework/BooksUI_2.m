unint64_t sub_14E550()
{
  unint64_t result;

  result = qword_2F1970;
  if (!qword_2F1970)
  {
    sub_7B0C(&qword_2F1938);
    sub_7B0C(&qword_2F1928);
    sub_7C18(&qword_2F1960, &qword_2F1928);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F1978, &qword_2F1980);
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1970);
  }
  return result;
}

unint64_t sub_14E650()
{
  unint64_t result = qword_2F1988;
  if (!qword_2F1988)
  {
    type metadata accessor for ToolbarButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1988);
  }
  return result;
}

uint64_t sub_14E6A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_14E704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F1950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_14E76C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_14E788@<X0>(uint64_t a1@<X8>)
{
  return YearInReviewLoadingView.body.getter(a1);
}

ValueMetadata *type metadata accessor for YearInReviewLoadingView()
{
  return &type metadata for YearInReviewLoadingView;
}

unint64_t sub_14E7B4()
{
  unint64_t result = qword_2F1990;
  if (!qword_2F1990)
  {
    sub_7B0C(&qword_2F1950);
    sub_7B0C(&qword_2F1940);
    type metadata accessor for ToolbarButtonStyle();
    sub_14E4D4();
    sub_14E650();
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1990);
  }
  return result;
}

uint64_t UberNavigationTitleView.init(title:subtitle:navigationBarOpacity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  v12 = (int *)type metadata accessor for UberNavigationTitleView();
  v13 = (uint64_t *)(a5 + v12[6]);
  uint64_t *v13 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  v14 = (uint64_t *)(a5 + v12[7]);
  uint64_t *v14 = swift_getKeyPath();
  sub_4A98(&qword_2EBC80);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a5, a1, v15);
  uint64_t result = sub_19CC4(a2, a5 + v12[5], &qword_2EA0C0);
  uint64_t v17 = a5 + v12[8];
  *(void *)uint64_t v17 = a3;
  *(void *)(v17 + 8) = a4;
  *(double *)(v17 + 16) = a6;
  return result;
}

uint64_t type metadata accessor for UberNavigationTitleView()
{
  uint64_t result = qword_2F1A10;
  if (!qword_2F1A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t UberNavigationTitleView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v5 - 8);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F1998);
  __chkstk_darwin(v8 - 8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F19A0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)v10 = sub_26B1C0();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v15 = sub_4A98(&qword_2F19A8);
  sub_14ED00(v1, (uint64_t)&v10[*(int *)(v15 + 44)]);
  v16 = &v1[*(int *)(type metadata accessor for UberNavigationTitleView() + 32)];
  uint64_t v17 = *((void *)v16 + 1);
  uint64_t v18 = *((void *)v16 + 2);
  uint64_t v37 = *(void *)v16;
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  sub_4A98(&qword_2F0320);
  sub_26C4B0();
  uint64_t v20 = v40;
  uint64_t v19 = v41;
  uint64_t v21 = v42;
  sub_B678((uint64_t)v10, (uint64_t)v14, &qword_2F1998);
  v22 = &v14[*(int *)(v12 + 44)];
  *(void *)v22 = v20;
  *((void *)v22 + 1) = v19;
  *((void *)v22 + 2) = v21;
  sub_B6DC((uint64_t)v10, &qword_2F1998);
  char v23 = sub_26B750();
  sub_41378((uint64_t)v7);
  sub_14FB94((uint64_t)v7, (uint64_t)v4);
  sub_1517A0((uint64_t)v7, type metadata accessor for SizeConstants);
  sub_1517A0((uint64_t)v4, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = v36;
  sub_B678((uint64_t)v14, v36, &qword_2F19A0);
  uint64_t v33 = v32 + *(int *)(sub_4A98(&qword_2F19B0) + 36);
  *(unsigned char *)uint64_t v33 = v23;
  *(void *)(v33 + 8) = v25;
  *(void *)(v33 + 16) = v27;
  *(void *)(v33 + 24) = v29;
  *(void *)(v33 + 32) = v31;
  *(unsigned char *)(v33 + 40) = 0;
  return sub_B6DC((uint64_t)v14, &qword_2F19A0);
}

uint64_t sub_14ED00@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v137 = a2;
  uint64_t v121 = sub_4A98(&qword_2F1A88);
  __chkstk_darwin(v121);
  v124 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_4A98(&qword_2F1A90);
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v123 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F1A98);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v136 = (uint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v134 = (uint64_t)&v104 - v8;
  uint64_t v9 = sub_4A98(&qword_2EBFC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v120 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v108 = (char *)&v104 - v13;
  __chkstk_darwin(v12);
  v107 = (char *)&v104 - v14;
  uint64_t v15 = sub_26B980();
  uint64_t v140 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  v118 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v106 = (char *)&v104 - v19;
  __chkstk_darwin(v18);
  v105 = (char *)&v104 - v20;
  uint64_t v21 = type metadata accessor for FontConstants.Navigation(0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v117 = (uint64_t)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v104 = (uint64_t)&v104 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v104 - v26;
  uint64_t v28 = sub_4A98(&qword_2EA0C0);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v130 = (uint64_t)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v104 - v31;
  uint64_t v33 = sub_26A220();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  v131 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v104 - v37;
  uint64_t v39 = sub_26A160();
  uint64_t v128 = *(void *)(v39 - 8);
  uint64_t v129 = v39;
  uint64_t v40 = __chkstk_darwin(v39);
  v115 = (char *)&v104 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v43 = (char *)&v104 - v42;
  uint64_t v127 = sub_4A98(&qword_2EBFC8);
  uint64_t v44 = __chkstk_darwin(v127);
  uint64_t v132 = (uint64_t)&v104 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  v48 = (char *)&v104 - v47;
  __chkstk_darwin(v46);
  uint64_t v138 = (uint64_t)&v104 - v49;
  v50 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v112 = v34 + 16;
  v111 = v50;
  v50(v38, a1, v33);
  v114 = v38;
  sub_26A170();
  uint64_t v51 = type metadata accessor for UberNavigationTitleView();
  v125 = &a1[*(int *)(v51 + 20)];
  sub_B678((uint64_t)v125, (uint64_t)v32, &qword_2EA0C0);
  uint64_t v116 = v34;
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  uint64_t v139 = v33;
  v126 = v52;
  LODWORD(v33) = v52((uint64_t)v32, 1, v33);
  sub_B6DC((uint64_t)v32, &qword_2EA0C0);
  uint64_t v113 = v51;
  v122 = a1;
  v53 = (void (**)(char *, void, uint64_t))(v140 + 104);
  uint64_t v119 = v15;
  uint64_t v110 = v140 + 104;
  if (v33 == 1)
  {
    uint64_t v54 = v104;
    sub_42178(v104);
    v55 = v106;
    v109 = *v53;
    v109(v106, enum case for Font.TextStyle.headline(_:), v15);
    if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
    {
      uint64_t v56 = sub_26B820();
      uint64_t v57 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v108, 1, 1, v56);
    }
    else
    {
      uint64_t v61 = enum case for Font.Design.serif (_:);
      uint64_t v62 = sub_26B820();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v57 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 104))(v108, v61, v62);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v57, 0, 1, v62);
    }
    uint64_t v64 = sub_26B8E0();
    sub_B6DC(v57, &qword_2EBFC0);
    v108 = *(char **)(v140 + 8);
    ((void (*)(char *, uint64_t))v108)(v55, v15);
    uint64_t v27 = (char *)v54;
  }
  else
  {
    sub_42178((uint64_t)v27);
    v58 = v105;
    v109 = *v53;
    v109(v105, enum case for Font.TextStyle.subheadline(_:), v15);
    if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
    {
      uint64_t v59 = sub_26B820();
      uint64_t v60 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v107, 1, 1, v59);
    }
    else
    {
      uint64_t v65 = enum case for Font.Design.serif (_:);
      uint64_t v66 = sub_26B820();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v60 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 104))(v107, v65, v66);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v60, 0, 1, v66);
    }
    sub_26B8E0();
    sub_B6DC(v60, &qword_2EBFC0);
    v108 = *(char **)(v140 + 8);
    ((void (*)(char *, uint64_t))v108)(v58, v15);
    uint64_t v64 = sub_26B800();
    swift_release();
  }
  sub_1517A0((uint64_t)v27, type metadata accessor for FontConstants.Navigation);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v70 = v128;
  uint64_t v69 = v129;
  v71 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
  v71(v48, v43, v129);
  v72 = (uint64_t *)&v48[*(int *)(v127 + 36)];
  uint64_t *v72 = KeyPath;
  v72[1] = v64;
  v73 = *(void (**)(char *, uint64_t))(v70 + 8);
  v74 = v43;
  uint64_t v75 = v69;
  v73(v74, v69);
  uint64_t v76 = v138;
  sub_19CC4((uint64_t)v48, v138, &qword_2EBFC8);
  uint64_t v77 = v130;
  sub_B678((uint64_t)v125, v130, &qword_2EA0C0);
  uint64_t v78 = v139;
  if (v126(v77, 1, v139) == 1)
  {
    sub_B6DC(v77, &qword_2EA0C0);
    uint64_t v79 = 1;
    uint64_t v81 = v134;
    uint64_t v80 = v135;
  }
  else
  {
    uint64_t v82 = v116;
    v83 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v131, v77, v78);
    v111(v114, v83, v78);
    v84 = v115;
    sub_26A170();
    uint64_t v85 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v86 = swift_getKeyPath();
    uint64_t v87 = (uint64_t)v124;
    v71(v124, v84, v75);
    v88 = (uint64_t *)(v87 + *(int *)(v121 + 36));
    uint64_t *v88 = v86;
    v88[1] = v85;
    v73(v84, v75);
    uint64_t v76 = v138;
    uint64_t v89 = v117;
    sub_42178(v117);
    v90 = v118;
    uint64_t v91 = v119;
    v109(v118, enum case for Font.TextStyle.caption2(_:), v119);
    uint64_t v92 = sub_26B820();
    uint64_t v93 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v120, 1, 1, v92);
    sub_26B890();
    uint64_t v94 = sub_26B8E0();
    sub_B6DC(v93, &qword_2EBFC0);
    ((void (*)(char *, uint64_t))v108)(v90, v91);
    sub_1517A0(v89, type metadata accessor for FontConstants.Navigation);
    uint64_t v95 = swift_getKeyPath();
    uint64_t v96 = v123;
    sub_B678(v87, v123, &qword_2F1A88);
    uint64_t v80 = v135;
    v97 = (uint64_t *)(v96 + *(int *)(v135 + 36));
    uint64_t *v97 = v95;
    v97[1] = v94;
    sub_B6DC(v87, &qword_2F1A88);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v131, v139);
    uint64_t v98 = v96;
    uint64_t v81 = v134;
    sub_19CC4(v98, v134, &qword_2F1A90);
    uint64_t v79 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56))(v81, v79, 1, v80);
  uint64_t v99 = v132;
  sub_B678(v76, v132, &qword_2EBFC8);
  uint64_t v100 = v136;
  sub_B678(v81, v136, &qword_2F1A98);
  uint64_t v101 = v137;
  sub_B678(v99, v137, &qword_2EBFC8);
  uint64_t v102 = sub_4A98(&qword_2F1AA0);
  sub_B678(v100, v101 + *(int *)(v102 + 48), &qword_2F1A98);
  sub_B6DC(v81, &qword_2F1A98);
  sub_B6DC(v76, &qword_2EBFC8);
  sub_B6DC(v100, &qword_2F1A98);
  return sub_B6DC(v99, &qword_2EBFC8);
}

uint64_t sub_14FAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_4A98(&qword_2F0320);
  sub_26C480();
  uint64_t v4 = sub_4A98(&qword_2F1A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t result = sub_4A98(&qword_2F1A80);
  *(void *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_14FB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14FBF8()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for UberNavigationTitleView(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_26A220();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(v4, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = &v4[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = &a2[v15];
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v16 = *(_WORD *)v17;
      uint64_t v18 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
      uint64_t v23 = v18[8];
      uint64_t v24 = &v16[v23];
      uint64_t v25 = &v17[v23];
      v24[2] = v25[2];
      *(_WORD *)uint64_t v24 = *(_WORD *)v25;
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[7];
    uint64_t v27 = &v4[v26];
    uint64_t v28 = &a2[v26];
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v27 = *(_WORD *)v28;
      uint64_t v29 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v30 = *(int *)(v29 + 24);
      uint64_t v31 = &v27[v30];
      uint64_t v32 = &v28[v30];
      uint64_t v33 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = a3[8];
    uint64_t v35 = &v4[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *((void *)v35 + 2) = *((void *)v36 + 2);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for UberNavigationTitleView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v10 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[7];
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = v11 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v13 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for UberNavigationTitleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (_WORD *)(a1 + v13);
  uint64_t v15 = (_WORD *)(a2 + v13);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v14 = *v15;
    uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v14 + v17;
    uint64_t v19 = (char *)v15 + v17;
    uint64_t v20 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)((char *)v14 + v16[7]) = *(void *)((char *)v15 + v16[7]);
    uint64_t v21 = v16[8];
    uint64_t v22 = (char *)v14 + v21;
    uint64_t v23 = (char *)v15 + v21;
    v22[2] = v23[2];
    *(_WORD *)uint64_t v22 = *(_WORD *)v23;
  }
  else
  {
    *(void *)uint64_t v14 = *(void *)v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[7];
  uint64_t v25 = (_WORD *)(a1 + v24);
  uint64_t v26 = (_WORD *)(a2 + v24);
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v25 = *v26;
    uint64_t v27 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v28 = *(int *)(v27 + 24);
    uint64_t v29 = (char *)v25 + v28;
    uint64_t v30 = (char *)v26 + v28;
    uint64_t v31 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(void *)((char *)v25 + *(int *)(v27 + 28)) = *(void *)((char *)v26 + *(int *)(v27 + 28));
  }
  else
  {
    *(void *)uint64_t v25 = *(void *)v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = a3[8];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  v33[2] = v34[2];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UberNavigationTitleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  if (a1 != v41)
  {
    uint64_t v16 = v40[6];
    uint64_t v17 = (unsigned char *)(a1 + v16);
    uint64_t v18 = (unsigned char *)(v41 + v16);
    sub_B6DC(a1 + v16, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      uint64_t v19 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = &v17[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
      uint64_t v24 = v19[8];
      uint64_t v25 = &v17[v24];
      uint64_t v26 = &v18[v24];
      char v27 = v26[2];
      *(_WORD *)uint64_t v25 = *(_WORD *)v26;
      v25[2] = v27;
    }
    else
    {
      *(void *)uint64_t v17 = *(void *)v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v40[7];
    uint64_t v29 = (unsigned char *)(a1 + v28);
    uint64_t v30 = (unsigned char *)(v41 + v28);
    sub_B6DC(a1 + v28, &qword_2EBC80);
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      uint64_t v31 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v32 = *(int *)(v31 + 24);
      uint64_t v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      uint64_t v35 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      *(void *)&v29[*(int *)(v31 + 28)] = *(void *)&v30[*(int *)(v31 + 28)];
    }
    else
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v36 = v40[8];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = v41 + v36;
  *(void *)(a1 + v36) = *(void *)(v41 + v36);
  swift_retain();
  swift_release();
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_retain();
  swift_release();
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  return a1;
}

uint64_t initializeWithTake for UberNavigationTitleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[6];
  int v14 = (_WORD *)(a1 + v13);
  uint64_t v15 = (_WORD *)(a2 + v13);
  uint64_t v16 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v14 = *v15;
    uint64_t v17 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v18 = v17[6];
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v20 = (char *)v15 + v18;
    uint64_t v21 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)((char *)v14 + v17[7]) = *(void *)((char *)v15 + v17[7]);
    uint64_t v22 = v17[8];
    uint64_t v23 = (char *)v14 + v22;
    uint64_t v24 = (char *)v15 + v22;
    v23[2] = v24[2];
    *(_WORD *)uint64_t v23 = *(_WORD *)v24;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = (_WORD *)(a1 + v25);
  char v27 = (_WORD *)(a2 + v25);
  uint64_t v28 = sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v26 = *v27;
    uint64_t v29 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v31 = (char *)v26 + v30;
    uint64_t v32 = (char *)v27 + v30;
    uint64_t v33 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    *(void *)((char *)v26 + *(int *)(v29 + 28)) = *(void *)((char *)v27 + *(int *)(v29 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  return a1;
}

uint64_t assignWithTake for UberNavigationTitleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  if (a1 != v42)
  {
    uint64_t v16 = v41[6];
    uint64_t v17 = (_WORD *)(a1 + v16);
    uint64_t v18 = (_WORD *)(v42 + v16);
    sub_B6DC(a1 + v16, &qword_2EB708);
    uint64_t v19 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v18;
      uint64_t v20 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v21 = v20[6];
      uint64_t v22 = (char *)v17 + v21;
      uint64_t v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(void *)((char *)v17 + v20[7]) = *(void *)((char *)v18 + v20[7]);
      uint64_t v25 = v20[8];
      uint64_t v26 = (char *)v17 + v25;
      char v27 = (char *)v18 + v25;
      v26[2] = v27[2];
      *(_WORD *)uint64_t v26 = *(_WORD *)v27;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    uint64_t v28 = v41[7];
    uint64_t v29 = (_WORD *)(a1 + v28);
    uint64_t v30 = (_WORD *)(v42 + v28);
    sub_B6DC(a1 + v28, &qword_2EBC80);
    uint64_t v31 = sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v29 = *v30;
      uint64_t v32 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v33 = *(int *)(v32 + 24);
      uint64_t v34 = (char *)v29 + v33;
      uint64_t v35 = (char *)v30 + v33;
      uint64_t v36 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(void *)((char *)v29 + *(int *)(v32 + 28)) = *(void *)((char *)v30 + *(int *)(v32 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  uint64_t v37 = v41[8];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = v42 + v37;
  *(void *)(a1 + v37) = *(void *)(v42 + v37);
  swift_release();
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_release();
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for UberNavigationTitleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_150F48);
}

uint64_t sub_150F48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EA0C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4A98(&qword_2EC890);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for UberNavigationTitleView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_151118);
}

uint64_t sub_151118(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_26A220();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_4A98(&qword_2EB718);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_4A98(&qword_2EC890);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8] + 8) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1512D0()
{
  sub_26A220();
  if (v0 <= 0x3F)
  {
    sub_1514A8(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F)
    {
      sub_1514A8(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_1514A8(319, (unint64_t *)&unk_2EC900, type metadata accessor for FontConstants.Navigation, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1514A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_151510()
{
  unint64_t result = qword_2F1A58;
  if (!qword_2F1A58)
  {
    sub_7B0C(&qword_2F19B0);
    sub_15158C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1A58);
  }
  return result;
}

unint64_t sub_15158C()
{
  unint64_t result = qword_2F1A60;
  if (!qword_2F1A60)
  {
    sub_7B0C(&qword_2F19A0);
    sub_7C18(&qword_2F1A68, &qword_2F1998);
    sub_15162C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1A60);
  }
  return result;
}

unint64_t sub_15162C()
{
  unint64_t result = qword_2F1A70;
  if (!qword_2F1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1A70);
  }
  return result;
}

void *sub_151684(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for OpacityBindingViewModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for OpacityBindingViewModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for OpacityBindingViewModifier()
{
  return &type metadata for OpacityBindingViewModifier;
}

uint64_t sub_151784()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1517A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_151814()
{
  unint64_t result = qword_2F1AA8;
  if (!qword_2F1AA8)
  {
    sub_7B0C(&qword_2F1A80);
    sub_7C18(&qword_2F1AB0, &qword_2F1A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1AA8);
  }
  return result;
}

uint64_t WelcomeFrameViewModel.init(year:localizedYear:exposureData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = type metadata accessor for WelcomeFrameViewModel(0);
  uint64_t v10 = (void *)((char *)a5 + *(int *)(v9 + 24));
  void *v10 = a2;
  v10[1] = a3;
  uint64_t v11 = (char *)a5 + *(int *)(v9 + 20);
  uint64_t v12 = sub_269BE0();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);

  return v13(v11, a4, v12);
}

uint64_t type metadata accessor for WelcomeFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F1B40);
}

uint64_t sub_151970()
{
  uint64_t v1 = sub_269920();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v20[-v6];
  uint64_t v8 = sub_26D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v20[-v13];
  uint64_t v15 = sub_26D3C0();
  __chkstk_darwin(v15 - 8);
  sub_26D3B0();
  v21._object = (void *)0x800000000028A6A0;
  v21._countAndFlagsBits = 0xD000000000000033;
  sub_26D3A0(v21);
  Swift::String v22 = *(Swift::String *)(v0 + *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 24));
  sub_26D390(v22);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  sub_26D3A0(v23);
  sub_26D3D0();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  uint64_t v18 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  return v18;
}

uint64_t sub_151C70()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v18[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v18[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v16;
}

uint64_t WelcomeFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_154FD0(v1, a1, type metadata accessor for PageBackground);
}

uint64_t WelcomeFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeFrame(0) + 44);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 20);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_152044(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_152044(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t type metadata accessor for WelcomeFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2F1BD8);
}

uint64_t sub_152044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double WelcomeFrame.horizontalPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for WelcomeFrame(0) + 20));
}

uint64_t WelcomeFrame.init(model:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (char *)a2 + *(int *)(sub_4A98(&qword_2EA948) + 48);
  *a2 = 0xD000000000000015;
  a2[1] = 0x800000000028A610;
  uint64_t v5 = enum case for ColorScheme.dark(_:);
  uint64_t v6 = sub_26A6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (int *)type metadata accessor for WelcomeFrame(0);
  *(void *)((char *)a2 + v7[5]) = 0;
  uint64_t v8 = (void *)((char *)a2 + v7[6]);
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (void *)((char *)a2 + v7[7]);
  *uint64_t v9 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (char *)a2 + v7[8];
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  uint64_t v11 = (char *)a2 + v7[9];
  *(void *)uint64_t v11 = swift_getKeyPath();
  v11[8] = 0;
  uint64_t v12 = (char *)a2 + v7[10];
  *(void *)uint64_t v12 = swift_getKeyPath();
  v12[8] = 0;
  return sub_1553C8(a1, (uint64_t)a2 + v7[11], type metadata accessor for WelcomeFrameViewModel);
}

uint64_t WelcomeFrame.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = type metadata accessor for WelcomeFrame(0);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v31 + 64);
  __chkstk_darwin(v3);
  uint64_t v30 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26A6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F1AB8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F1AC0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v11);
  sub_156FA8((uint64_t)v11, type metadata accessor for SizeConstants.Spacing);
  *(void *)uint64_t v14 = sub_26B1C0();
  *((void *)v14 + 1) = 0x4034000000000000;
  v14[16] = 0;
  uint64_t v19 = sub_4A98(&qword_2F1AC8);
  sub_152650(v1, (uint64_t)&v14[*(int *)(v19 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ColorScheme.dark(_:), v5);
  Swift::String v21 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t v22 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v21 + *(int *)(v22 + 28), v8, v5);
  *Swift::String v21 = KeyPath;
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2F1AB8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_B6DC((uint64_t)v14, &qword_2F1AB8);
  uint64_t v23 = v30;
  sub_154FD0(v2, v30, type metadata accessor for WelcomeFrame);
  unint64_t v24 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v25 = swift_allocObject();
  sub_1553C8(v23, v25 + v24, type metadata accessor for WelcomeFrame);
  uint64_t v26 = v32;
  sub_B678((uint64_t)v18, v32, &qword_2F1AC0);
  char v27 = (void (**)())(v26 + *(int *)(sub_4A98(&qword_2F1AD0) + 36));
  *char v27 = sub_155430;
  v27[1] = (void (*)())v25;
  v27[2] = 0;
  v27[3] = 0;
  return sub_B6DC((uint64_t)v18, &qword_2F1AC0);
}

uint64_t sub_152650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v372 = a2;
  uint64_t v401 = sub_4A98(&qword_2F1C40);
  __chkstk_darwin(v401);
  uint64_t v402 = (uint64_t)&v339 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_4A98(&qword_2F1C48);
  uint64_t v359 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  v358 = (char *)&v339 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v352 = sub_4A98(&qword_2F1C50);
  __chkstk_darwin(v352);
  v363 = (char *)&v339 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v362 = sub_4A98(&qword_2F1C58);
  __chkstk_darwin(v362);
  v366 = (char *)&v339 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v365 = sub_4A98(&qword_2F1C60);
  __chkstk_darwin(v365);
  v369 = (char *)&v339 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = sub_4A98(&qword_2F1C68);
  uint64_t v8 = __chkstk_darwin(v368);
  uint64_t v371 = (uint64_t)&v339 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v367 = (uint64_t)&v339 - v11;
  __chkstk_darwin(v10);
  uint64_t v370 = (uint64_t)&v339 - v12;
  uint64_t v416 = sub_4A98(&qword_2EB028);
  uint64_t v13 = __chkstk_darwin(v416);
  v400 = (char *)&v339 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v398 = (char *)&v339 - v15;
  uint64_t v415 = sub_26AB40();
  v418 = *(void **)(v415 - 8);
  uint64_t v16 = __chkstk_darwin(v415);
  v414 = (char *)&v339 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v413 = (char *)&v339 - v18;
  uint64_t v399 = sub_4A98(&qword_2EB030);
  uint64_t v19 = __chkstk_darwin(v399);
  v396 = (char *)&v339 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v397 = (uint64_t)&v339 - v21;
  uint64_t v22 = sub_26AC80();
  __chkstk_darwin(v22 - 8);
  v412 = (char *)&v339 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v411 = sub_26C700();
  uint64_t v421 = *(void *)(v411 - 8);
  __chkstk_darwin(v411);
  v410 = (char *)&v339 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v25 - 8);
  uint64_t v407 = (uint64_t)&v339 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v408 = sub_4A98(&qword_2EE910);
  __chkstk_darwin(v408);
  v409 = (char *)&v339 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v390 = sub_4A98(&qword_2F1C70);
  __chkstk_darwin(v390);
  uint64_t v392 = (uint64_t)&v339 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v391 = sub_4A98(&qword_2F1C78);
  __chkstk_darwin(v391);
  uint64_t v393 = (uint64_t)&v339 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v404 = sub_4A98(&qword_2F1C80);
  __chkstk_darwin(v404);
  uint64_t v405 = (uint64_t)&v339 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v385 = sub_4A98(&qword_2F1C88);
  uint64_t v384 = *(void *)(v385 - 8);
  __chkstk_darwin(v385);
  v383 = (char *)&v339 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v382 = sub_4A98(&qword_2F1C90);
  __chkstk_darwin(v382);
  v388 = (char *)&v339 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v387 = sub_4A98(&qword_2F1C98);
  uint64_t v33 = __chkstk_darwin(v387);
  uint64_t v364 = (uint64_t)&v339 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v386 = (uint64_t)&v339 - v36;
  __chkstk_darwin(v35);
  uint64_t v403 = (uint64_t)&v339 - v37;
  uint64_t v38 = type metadata accessor for WelcomeFrame(0);
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v355 = (uint64_t)&v339 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v351 = (char *)&v339 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v350 = (uint64_t)&v339 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v394 = (uint64_t)&v339 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v348 = (uint64_t)&v339 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v381 = (uint64_t)&v339 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v380 = (char *)&v339 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v379 = (uint64_t)&v339 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v57 = (char *)&v339 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v339 - v59;
  uint64_t v61 = __chkstk_darwin(v58);
  uint64_t v63 = (char *)&v339 - v62;
  uint64_t v64 = __chkstk_darwin(v61);
  uint64_t v66 = (char *)&v339 - v65;
  uint64_t v67 = __chkstk_darwin(v64);
  uint64_t v69 = (char *)&v339 - v68;
  uint64_t v70 = a1 + *(int *)(v67 + 44);
  uint64_t v71 = *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 24);
  uint64_t v406 = v70;
  v72 = (uint64_t *)(v70 + v71);
  uint64_t v73 = v72[1];
  uint64_t v357 = *v72;
  uint64_t v361 = v73;
  swift_bridgeObjectRetain();
  int v356 = sub_26B750();
  sub_26A640();
  uint64_t v354 = v74;
  uint64_t v353 = v75;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v80 = a1 + *(int *)(v38 + 36);
  uint64_t v81 = *(void *)v80;
  uint64_t v419 = v80;
  char v82 = *(unsigned char *)(v80 + 8);
  sub_10E0C(v81, v82);
  char v83 = sub_40900(v81, v82);
  sub_C374(v81, v82);
  uint64_t v420 = a1;
  sub_154FD0(a1, (uint64_t)v69, type metadata accessor for WelcomeFrame);
  v417 = (int *)v38;
  if (v83)
  {
    sub_156FA8((uint64_t)v69, type metadata accessor for WelcomeFrame);
LABEL_4:
    uint64_t v88 = v420;
    sub_154FD0(v420, (uint64_t)v66, type metadata accessor for WelcomeFrame);
    uint64_t v89 = v419;
LABEL_5:
    sub_156FA8((uint64_t)v66, type metadata accessor for WelcomeFrame);
    v90 = v417;
LABEL_6:
    uint64_t v91 = 0;
    goto LABEL_7;
  }
  v84 = &v69[*(int *)(v38 + 40)];
  uint64_t v85 = *(void *)v84;
  char v86 = v84[8];
  sub_10E0C(*(void *)v84, v86);
  char v87 = sub_40900(v85, v86);
  sub_C374(v85, v86);
  sub_156FA8((uint64_t)v69, type metadata accessor for WelcomeFrame);
  if (v87) {
    goto LABEL_4;
  }
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  uint64_t v88 = v420;
  sub_154FD0(v420, (uint64_t)v66, type metadata accessor for WelcomeFrame);
  uint64_t v89 = v419;
  if (IsReduceMotionEnabled) {
    goto LABEL_5;
  }
  v90 = v417;
  v205 = &v66[v417[8]];
  uint64_t v206 = *(void *)v205;
  char v207 = v205[8];
  sub_10E0C(*(void *)v205, v207);
  char v208 = sub_40900(v206, v207);
  sub_C374(v206, v207);
  sub_156FA8((uint64_t)v66, type metadata accessor for WelcomeFrame);
  if (v208) {
    goto LABEL_6;
  }
  uint64_t v91 = 0x4054000000000000;
LABEL_7:
  uint64_t v92 = *(void *)v89;
  char v93 = *(unsigned char *)(v89 + 8);
  sub_10E0C(*(void *)v89, v93);
  char v94 = sub_40900(v92, v93);
  sub_C374(v92, v93);
  sub_154FD0(v88, (uint64_t)v63, type metadata accessor for WelcomeFrame);
  if (v94)
  {
    sub_156FA8((uint64_t)v63, type metadata accessor for WelcomeFrame);
LABEL_10:
    sub_154FD0(v88, (uint64_t)v60, type metadata accessor for WelcomeFrame);
LABEL_11:
    sub_156FA8((uint64_t)v60, type metadata accessor for WelcomeFrame);
LABEL_12:
    double v99 = 1.0;
    goto LABEL_13;
  }
  uint64_t v95 = &v63[v90[10]];
  uint64_t v96 = *(void *)v95;
  char v97 = v95[8];
  sub_10E0C(*(void *)v95, v97);
  char v98 = sub_40900(v96, v97);
  sub_C374(v96, v97);
  sub_156FA8((uint64_t)v63, type metadata accessor for WelcomeFrame);
  if (v98) {
    goto LABEL_10;
  }
  BOOL v209 = UIAccessibilityIsReduceMotionEnabled();
  sub_154FD0(v88, (uint64_t)v60, type metadata accessor for WelcomeFrame);
  if (v209) {
    goto LABEL_11;
  }
  v210 = &v60[v90[8]];
  uint64_t v211 = *(void *)v210;
  char v212 = v210[8];
  sub_10E0C(*(void *)v210, v212);
  char v213 = sub_40900(v211, v212);
  sub_C374(v211, v212);
  sub_156FA8((uint64_t)v60, type metadata accessor for WelcomeFrame);
  double v99 = 0.0;
  if (v213) {
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v100 = *(void *)v89;
  char v101 = *(unsigned char *)(v89 + 8);
  sub_10E0C(*(void *)v89, v101);
  char v102 = sub_40900(v100, v101);
  sub_C374(v100, v101);
  sub_154FD0(v88, (uint64_t)v57, type metadata accessor for WelcomeFrame);
  if (v102)
  {
    sub_156FA8((uint64_t)v57, type metadata accessor for WelcomeFrame);
LABEL_17:
    uint64_t v349 = 0;
    goto LABEL_18;
  }
  v103 = &v57[v90[10]];
  uint64_t v104 = *(void *)v103;
  char v105 = v103[8];
  sub_10E0C(*(void *)v103, v105);
  char v106 = sub_40900(v104, v105);
  sub_C374(v104, v105);
  sub_156FA8((uint64_t)v57, type metadata accessor for WelcomeFrame);
  if ((v106 & 1) != 0 || UIAccessibilityIsReduceMotionEnabled()) {
    goto LABEL_17;
  }
  sub_26C6D0();
  uint64_t v349 = sub_26C680();
  swift_release();
LABEL_18:
  uint64_t v107 = v88 + v90[8];
  uint64_t v108 = *(void *)v107;
  uint64_t v395 = v107;
  char v109 = *(unsigned char *)(v107 + 8);
  sub_10E0C(v108, v109);
  int v347 = sub_40900(v108, v109);
  sub_C374(v108, v109);
  uint64_t v422 = sub_151970();
  uint64_t v423 = v110;
  unint64_t v378 = sub_CC78();
  uint64_t v111 = sub_26BB00();
  uint64_t v113 = v112;
  uint64_t v114 = v88;
  char v116 = v115 & 1;
  sub_26B7F0();
  uint64_t v117 = sub_26BA80();
  uint64_t v119 = v118;
  char v121 = v120;
  uint64_t v389 = v122;
  swift_release();
  char v123 = v121 & 1;
  sub_3A380(v111, v113, v116);
  swift_bridgeObjectRelease();
  uint64_t v124 = v114 + v90[6];
  uint64_t v125 = v407;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v407);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v126 = sub_26C1C0();
  swift_release();
  sub_156FA8(v125, type metadata accessor for ColorConstants);
  uint64_t v422 = v126;
  uint64_t v127 = sub_26BA40();
  uint64_t v129 = v128;
  uint64_t v131 = v130;
  char v133 = v132 & 1;
  sub_3A380(v117, v119, v123);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v134 = v421;
  uint64_t v135 = *(void (**)(void))(v421 + 104);
  uint64_t v136 = v410;
  unsigned int v377 = enum case for BlendMode.plusLighter(_:);
  uint64_t v137 = v411;
  uint64_t v389 = v421 + 104;
  v376 = (void (*)(char *, void, uint64_t))v135;
  v135(v410);
  uint64_t v138 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  uint64_t v139 = (uint64_t)v412;
  uint64_t v375 = v134 + 16;
  v374 = v138;
  v138(v412, v136, v137);
  uint64_t v140 = (uint64_t)v409;
  sub_154FD0(v139, (uint64_t)&v409[*(int *)(v408 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v140 = v127;
  *(void *)(v140 + 8) = v129;
  *(unsigned char *)(v140 + 16) = v133;
  *(void *)(v140 + 24) = v131;
  sub_45370(v127, v129, v133);
  swift_bridgeObjectRetain();
  sub_156FA8(v139, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  v142 = *(void (**)(char *, uint64_t))(v134 + 8);
  uint64_t v141 = v134 + 8;
  v373 = v142;
  v142(v136, v137);
  sub_3A380(v127, v129, v133);
  swift_bridgeObjectRelease();
  LOBYTE(v139) = sub_26B750();
  sub_26A640();
  uint64_t v144 = v143;
  uint64_t v146 = v145;
  uint64_t v148 = v147;
  uint64_t v150 = v149;
  uint64_t v151 = v392;
  sub_B678(v140, v392, &qword_2EE910);
  uint64_t v152 = v151 + *(int *)(v390 + 36);
  *(unsigned char *)uint64_t v152 = v139;
  *(void *)(v152 + 8) = v144;
  *(void *)(v152 + 16) = v146;
  *(void *)(v152 + 24) = v148;
  *(void *)(v152 + 32) = v150;
  *(unsigned char *)(v152 + 40) = 0;
  sub_B6DC(v140, &qword_2EE910);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v154 = v393;
  sub_B678(v151, v393, &qword_2F1C70);
  uint64_t v155 = v154 + *(int *)(v391 + 36);
  *(void *)uint64_t v155 = KeyPath;
  *(unsigned char *)(v155 + 8) = 1;
  sub_B6DC(v151, &qword_2F1C70);
  uint64_t v156 = swift_getKeyPath();
  uint64_t v157 = v405;
  sub_B678(v154, v405, &qword_2F1C78);
  uint64_t v158 = v157 + *(int *)(v404 + 36);
  *(void *)uint64_t v158 = v156;
  *(void *)(v158 + 8) = 3;
  *(unsigned char *)(v158 + 16) = 0;
  sub_B6DC(v154, &qword_2F1C78);
  v159 = v418;
  v160 = v418 + 13;
  v161 = (void (*)(char *))v418[13];
  v162 = v413;
  LODWORD(v393) = enum case for DynamicTypeSize.small(_:);
  uint64_t v163 = v415;
  v161(v413);
  v164 = v414;
  LODWORD(v392) = enum case for DynamicTypeSize.xxxLarge(_:);
  v161(v414);
  uint64_t v391 = sub_152044(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D350();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_68:
    __break(1u);
    return result;
  }
  v345 = v161;
  v346 = v160;
  uint64_t v390 = v124;
  uint64_t v421 = v141;
  uint64_t v166 = v416;
  v167 = v398;
  v168 = &v398[*(int *)(v416 + 48)];
  v169 = (void (*)(char *, char *, uint64_t))v159[4];
  v169(v398, v162, v163);
  v169(v168, v164, v163);
  v170 = v400;
  v171 = &v400[*(int *)(v166 + 48)];
  v172 = (void (*)(char *, char *, uint64_t))v159[2];
  v172(v400, v167, v163);
  v341 = v159 + 2;
  v340 = v172;
  v172(v171, v168, v163);
  uint64_t v173 = (uint64_t)v396;
  v169(v396, v170, v163);
  v174 = (void (*)(char *, uint64_t))v159[1];
  v174(v171, v163);
  v175 = &v170[*(int *)(v416 + 48)];
  v169(v170, v167, v163);
  v169(v175, v168, v163);
  uint64_t v176 = v173 + *(int *)(v399 + 36);
  v344 = v169;
  v343 = v159 + 4;
  v169((char *)v176, v175, v163);
  v418 = v159 + 1;
  v342 = v174;
  v174(v170, v163);
  uint64_t v177 = v397;
  sub_19CC4(v173, v397, &qword_2EB030);
  sub_157FA4(&qword_2F1CA0, &qword_2F1C80, (void (*)(void))sub_158048);
  uint64_t v178 = sub_7C18(&qword_2EB118, &qword_2EB030);
  v179 = v383;
  uint64_t v180 = v405;
  sub_26BD90();
  sub_B6DC(v177, &qword_2EB030);
  sub_B6DC(v180, &qword_2F1C80);
  uint64_t v181 = v419;
  uint64_t v182 = *(void *)v419;
  LOBYTE(v180) = *(unsigned char *)(v419 + 8);
  sub_10E0C(*(void *)v419, v180);
  LOBYTE(v170) = sub_40900(v182, v180);
  sub_C374(v182, v180);
  uint64_t v183 = v420;
  uint64_t v184 = v379;
  sub_154FD0(v420, v379, type metadata accessor for WelcomeFrame);
  if (v170)
  {
    sub_156FA8(v184, type metadata accessor for WelcomeFrame);
    v185 = v417;
    uint64_t v186 = (uint64_t)v388;
    uint64_t v187 = (uint64_t)v380;
LABEL_22:
    sub_154FD0(v183, v187, type metadata accessor for WelcomeFrame);
LABEL_23:
    sub_156FA8(v187, type metadata accessor for WelcomeFrame);
LABEL_24:
    double v192 = 1.0;
    goto LABEL_25;
  }
  v185 = v417;
  uint64_t v188 = v184 + v417[10];
  uint64_t v189 = *(void *)v188;
  char v190 = *(unsigned char *)(v188 + 8);
  sub_10E0C(*(void *)v188, v190);
  char v191 = sub_40900(v189, v190);
  sub_C374(v189, v190);
  sub_156FA8(v184, type metadata accessor for WelcomeFrame);
  uint64_t v186 = (uint64_t)v388;
  uint64_t v187 = (uint64_t)v380;
  if (v191) {
    goto LABEL_22;
  }
  BOOL v214 = UIAccessibilityIsReduceMotionEnabled();
  sub_154FD0(v183, v187, type metadata accessor for WelcomeFrame);
  if (v214) {
    goto LABEL_23;
  }
  uint64_t v215 = v187 + v185[8];
  uint64_t v216 = *(void *)v215;
  char v217 = *(unsigned char *)(v215 + 8);
  sub_10E0C(*(void *)v215, v217);
  char v218 = sub_40900(v216, v217);
  sub_C374(v216, v217);
  sub_156FA8(v187, type metadata accessor for WelcomeFrame);
  double v192 = 0.0;
  if (v218) {
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v193 = v384;
  uint64_t v194 = v385;
  (*(void (**)(uint64_t, char *, uint64_t))(v384 + 16))(v186, v179, v385);
  *(double *)(v186 + *(int *)(v382 + 36)) = v192;
  (*(void (**)(char *, uint64_t))(v193 + 8))(v179, v194);
  uint64_t v195 = *(void *)v181;
  LOBYTE(v193) = *(unsigned char *)(v181 + 8);
  sub_10E0C(*(void *)v181, v193);
  char v196 = sub_40900(v195, v193);
  sub_C374(v195, v193);
  uint64_t v197 = v183;
  uint64_t v198 = v381;
  sub_154FD0(v197, v381, type metadata accessor for WelcomeFrame);
  if (v196)
  {
    sub_156FA8(v198, type metadata accessor for WelcomeFrame);
    uint64_t v199 = 0;
  }
  else
  {
    uint64_t v200 = v198 + v185[10];
    uint64_t v201 = *(void *)v200;
    char v202 = *(unsigned char *)(v200 + 8);
    sub_10E0C(*(void *)v200, v202);
    char v203 = sub_40900(v201, v202);
    sub_C374(v201, v202);
    sub_156FA8(v198, type metadata accessor for WelcomeFrame);
    if ((v203 & 1) != 0 || UIAccessibilityIsReduceMotionEnabled())
    {
      uint64_t v199 = 0;
    }
    else
    {
      sub_26C6F0();
      uint64_t v199 = sub_26C680();
      swift_release();
    }
  }
  uint64_t v219 = *(void *)v395;
  char v220 = *(unsigned char *)(v395 + 8);
  sub_10E0C(*(void *)v395, v220);
  char v221 = sub_40900(v219, v220);
  sub_C374(v219, v220);
  uint64_t v222 = v386;
  sub_B678(v186, v386, &qword_2F1C90);
  uint64_t v223 = v222 + *(int *)(v387 + 36);
  *(void *)uint64_t v223 = v199;
  *(unsigned char *)(v223 + 8) = v221 & 1;
  sub_B6DC(v186, &qword_2F1C90);
  sub_19CC4(v222, v403, &qword_2F1C98);
  uint64_t v422 = sub_151C70();
  uint64_t v423 = v224;
  uint64_t v225 = sub_26BB00();
  uint64_t v227 = v226;
  char v229 = v228 & 1;
  sub_26B7F0();
  sub_26B800();
  swift_release();
  uint64_t v230 = sub_26BA80();
  uint64_t v232 = v231;
  char v234 = v233;
  swift_release();
  char v235 = v234 & 1;
  sub_3A380(v225, v227, v229);
  swift_bridgeObjectRelease();
  uint64_t v236 = v407;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v407);
  uint64_t v237 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  sub_156FA8(v236, type metadata accessor for ColorConstants);
  uint64_t v422 = v237;
  uint64_t v238 = sub_26BA40();
  uint64_t v240 = v239;
  uint64_t v242 = v241;
  char v244 = v243 & 1;
  sub_3A380(v230, v232, v235);
  swift_release();
  swift_bridgeObjectRelease();
  v245 = v410;
  uint64_t v246 = v411;
  v376(v410, v377, v411);
  uint64_t v247 = (uint64_t)v412;
  v374(v412, v245, v246);
  uint64_t v248 = (uint64_t)v409;
  sub_154FD0(v247, (uint64_t)&v409[*(int *)(v408 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v248 = v238;
  *(void *)(v248 + 8) = v240;
  *(unsigned char *)(v248 + 16) = v244;
  *(void *)(v248 + 24) = v242;
  sub_45370(v238, v240, v244);
  swift_bridgeObjectRetain();
  sub_156FA8(v247, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  v373(v245, v246);
  sub_3A380(v238, v240, v244);
  swift_bridgeObjectRelease();
  uint64_t v249 = swift_getKeyPath();
  uint64_t v250 = v402;
  sub_B678(v248, v402, &qword_2EE910);
  uint64_t v251 = v250 + *(int *)(v401 + 36);
  *(void *)uint64_t v251 = v249;
  *(void *)(v251 + 8) = 3;
  *(unsigned char *)(v251 + 16) = 0;
  sub_B6DC(v248, &qword_2EE910);
  v252 = v413;
  uint64_t v253 = v415;
  v254 = v345;
  ((void (*)(char *, void, uint64_t))v345)(v413, v393, v415);
  v255 = v414;
  ((void (*)(char *, void, uint64_t))v254)(v414, v392, v253);
  uint64_t result = sub_26D350();
  if ((result & 1) == 0) {
    goto LABEL_68;
  }
  uint64_t v256 = v416;
  v257 = v398;
  v258 = &v398[*(int *)(v416 + 48)];
  uint64_t v421 = v178;
  v259 = v344;
  v344(v398, v252, v253);
  v412 = v258;
  v259(v258, v255, v253);
  v260 = v400;
  v261 = &v400[*(int *)(v256 + 48)];
  v262 = v340;
  v340(v400, v257, v253);
  v262(v261, v258, v253);
  uint64_t v263 = (uint64_t)v396;
  v259(v396, v260, v253);
  v264 = v342;
  v342(v261, v253);
  v265 = &v260[*(int *)(v256 + 48)];
  v259(v260, v257, v253);
  v259(v265, v412, v253);
  v259((char *)(v263 + *(int *)(v399 + 36)), v265, v253);
  v264(v260, v253);
  uint64_t v266 = v397;
  sub_19CC4(v263, v397, &qword_2EB030);
  sub_157FA4(&qword_2F1CC0, &qword_2F1C40, (void (*)(void))sub_158190);
  v267 = v358;
  uint64_t v268 = v402;
  sub_26BD90();
  sub_B6DC(v266, &qword_2EB030);
  sub_B6DC(v268, &qword_2F1C40);
  LOBYTE(v264) = sub_26B750();
  sub_26A640();
  uint64_t v270 = v269;
  uint64_t v272 = v271;
  uint64_t v274 = v273;
  uint64_t v276 = v275;
  uint64_t v277 = v359;
  uint64_t v278 = (uint64_t)v363;
  uint64_t v279 = v360;
  (*(void (**)(char *, char *, uint64_t))(v359 + 16))(v363, v267, v360);
  uint64_t v280 = v278 + *(int *)(v352 + 36);
  *(unsigned char *)uint64_t v280 = (_BYTE)v264;
  *(void *)(v280 + 8) = v270;
  *(void *)(v280 + 16) = v272;
  *(void *)(v280 + 24) = v274;
  *(void *)(v280 + 32) = v276;
  *(unsigned char *)(v280 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v277 + 8))(v267, v279);
  uint64_t v281 = v419;
  uint64_t v282 = *(void *)v419;
  LOBYTE(v279) = *(unsigned char *)(v419 + 8);
  sub_10E0C(*(void *)v419, v279);
  LOBYTE(v277) = sub_40900(v282, v279);
  sub_C374(v282, v279);
  uint64_t v283 = v420;
  uint64_t v284 = v348;
  sub_154FD0(v420, v348, type metadata accessor for WelcomeFrame);
  if (v277)
  {
    sub_156FA8(v284, type metadata accessor for WelcomeFrame);
    uint64_t v285 = v372;
    uint64_t v286 = (uint64_t)v369;
    uint64_t v287 = (uint64_t)v366;
    v288 = v417;
    uint64_t v289 = v394;
LABEL_45:
    sub_154FD0(v283, v289, type metadata accessor for WelcomeFrame);
LABEL_46:
    sub_156FA8(v289, type metadata accessor for WelcomeFrame);
LABEL_47:
    uint64_t v294 = 0;
    goto LABEL_48;
  }
  v288 = v417;
  uint64_t v290 = v284 + v417[10];
  uint64_t v291 = *(void *)v290;
  char v292 = *(unsigned char *)(v290 + 8);
  sub_10E0C(*(void *)v290, v292);
  char v293 = sub_40900(v291, v292);
  sub_C374(v291, v292);
  sub_156FA8(v284, type metadata accessor for WelcomeFrame);
  uint64_t v285 = v372;
  uint64_t v286 = (uint64_t)v369;
  uint64_t v287 = (uint64_t)v366;
  uint64_t v289 = v394;
  if (v293) {
    goto LABEL_45;
  }
  BOOL v316 = UIAccessibilityIsReduceMotionEnabled();
  sub_154FD0(v283, v289, type metadata accessor for WelcomeFrame);
  if (v316) {
    goto LABEL_46;
  }
  uint64_t v317 = v289 + v288[8];
  uint64_t v318 = *(void *)v317;
  char v319 = *(unsigned char *)(v317 + 8);
  sub_10E0C(*(void *)v317, v319);
  char v320 = sub_40900(v318, v319);
  sub_C374(v318, v319);
  sub_156FA8(v394, type metadata accessor for WelcomeFrame);
  if (v320) {
    goto LABEL_47;
  }
  uint64_t v294 = 0x4054000000000000;
LABEL_48:
  sub_B678(v278, v287, &qword_2F1C50);
  v295 = (void *)(v287 + *(int *)(v362 + 36));
  void *v295 = 0;
  v295[1] = v294;
  sub_B6DC(v278, &qword_2F1C50);
  uint64_t v296 = *(void *)v281;
  char v297 = *(unsigned char *)(v281 + 8);
  sub_10E0C(*(void *)v281, v297);
  char v298 = sub_40900(v296, v297);
  sub_C374(v296, v297);
  uint64_t v299 = v350;
  sub_154FD0(v283, v350, type metadata accessor for WelcomeFrame);
  if (v298)
  {
    sub_156FA8(v299, type metadata accessor for WelcomeFrame);
    uint64_t v300 = (uint64_t)v351;
LABEL_51:
    sub_154FD0(v283, v300, type metadata accessor for WelcomeFrame);
    goto LABEL_52;
  }
  uint64_t v301 = v299 + v288[10];
  uint64_t v302 = *(void *)v301;
  char v303 = *(unsigned char *)(v301 + 8);
  sub_10E0C(*(void *)v301, v303);
  char v304 = sub_40900(v302, v303);
  sub_C374(v302, v303);
  sub_156FA8(v299, type metadata accessor for WelcomeFrame);
  uint64_t v300 = (uint64_t)v351;
  if (v304) {
    goto LABEL_51;
  }
  BOOL v321 = UIAccessibilityIsReduceMotionEnabled();
  sub_154FD0(v283, v300, type metadata accessor for WelcomeFrame);
  if (!v321)
  {
    uint64_t v322 = v300 + v288[8];
    uint64_t v323 = *(void *)v322;
    char v324 = *(unsigned char *)(v322 + 8);
    sub_10E0C(*(void *)v322, v324);
    char v325 = sub_40900(v323, v324);
    sub_C374(v323, v324);
    sub_156FA8(v300, type metadata accessor for WelcomeFrame);
    double v305 = 0.0;
    if ((v325 & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }
LABEL_52:
  sub_156FA8(v300, type metadata accessor for WelcomeFrame);
LABEL_53:
  double v305 = 1.0;
LABEL_54:
  sub_B678(v287, v286, &qword_2F1C58);
  *(double *)(v286 + *(int *)(v365 + 36)) = v305;
  sub_B6DC(v287, &qword_2F1C58);
  uint64_t v306 = *(void *)v281;
  char v307 = *(unsigned char *)(v281 + 8);
  sub_10E0C(*(void *)v281, v307);
  char v308 = sub_40900(v306, v307);
  sub_C374(v306, v307);
  uint64_t v309 = v283;
  uint64_t v310 = v355;
  sub_154FD0(v309, v355, type metadata accessor for WelcomeFrame);
  if (v308)
  {
    sub_156FA8(v310, type metadata accessor for WelcomeFrame);
    uint64_t v311 = 0;
  }
  else
  {
    uint64_t v312 = v310 + v288[10];
    uint64_t v313 = *(void *)v312;
    char v314 = *(unsigned char *)(v312 + 8);
    sub_10E0C(*(void *)v312, v314);
    char v315 = sub_40900(v313, v314);
    sub_C374(v313, v314);
    sub_156FA8(v310, type metadata accessor for WelcomeFrame);
    if ((v315 & 1) != 0 || UIAccessibilityIsReduceMotionEnabled())
    {
      uint64_t v311 = 0;
    }
    else
    {
      sub_26C6D0();
      uint64_t v311 = sub_26C680();
      swift_release();
    }
  }
  uint64_t v326 = *(void *)v395;
  char v327 = *(unsigned char *)(v395 + 8);
  sub_10E0C(*(void *)v395, v327);
  char v328 = sub_40900(v326, v327);
  sub_C374(v326, v327);
  uint64_t v329 = v367;
  sub_B678(v286, v367, &qword_2F1C60);
  uint64_t v330 = v329 + *(int *)(v368 + 36);
  *(void *)uint64_t v330 = v311;
  *(unsigned char *)(v330 + 8) = v328 & 1;
  sub_B6DC(v286, &qword_2F1C60);
  uint64_t v331 = v370;
  sub_19CC4(v329, v370, &qword_2F1C68);
  char v332 = v347 & 1;
  uint64_t v333 = v403;
  uint64_t v334 = v364;
  sub_B678(v403, v364, &qword_2F1C98);
  uint64_t v335 = v371;
  sub_B678(v331, v371, &qword_2F1C68);
  uint64_t v336 = v361;
  *(void *)uint64_t v285 = v357;
  *(void *)(v285 + 8) = v336;
  *(unsigned char *)(v285 + 16) = v356;
  uint64_t v337 = v353;
  *(void *)(v285 + 24) = v354;
  *(void *)(v285 + 32) = v337;
  *(void *)(v285 + 40) = v77;
  *(void *)(v285 + 48) = v79;
  *(unsigned char *)(v285 + 56) = 0;
  *(void *)(v285 + 64) = 0;
  *(void *)(v285 + 72) = v91;
  *(double *)(v285 + 80) = v99;
  *(void *)(v285 + 88) = v349;
  *(unsigned char *)(v285 + 96) = v332;
  *(void *)(v285 + 104) = 0;
  *(unsigned char *)(v285 + 112) = 1;
  uint64_t v338 = sub_4A98(qword_2F1CC8);
  sub_B678(v334, v285 + *(int *)(v338 + 64), &qword_2F1C98);
  sub_B678(v335, v285 + *(int *)(v338 + 80), &qword_2F1C68);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_B6DC(v331, &qword_2F1C68);
  sub_B6DC(v333, &qword_2F1C98);
  swift_release();
  swift_bridgeObjectRelease();
  sub_B6DC(v335, &qword_2F1C68);
  sub_B6DC(v334, &qword_2F1C98);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_154DB0()
{
  type metadata accessor for WelcomeFrame(0);
  v3._countAndFlagsBits = sub_26DD50();
  sub_26D4E0(v3);
  swift_bridgeObjectRelease();
  id v0 = [self books];
  id v1 = [v0 userDefaults];

  NSString v2 = sub_26D3F0();
  swift_bridgeObjectRelease();
  [v1 setBool:1 forKey:v2];
}

double sub_154EB8(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_154EC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 20);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_152044(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_152044(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t sub_154FD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_155038()
{
  uint64_t v1 = (int *)type metadata accessor for WelcomeFrame(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v9 = v4 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
    case 1:
      if (!*(unsigned char *)(v4 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v3);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v6 = v4 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v7 = sub_26A6E0();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      break;
  }
  uint64_t v11 = v4 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v4 + v1[7];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = v13 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v15 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v4 + v1[8]), *(unsigned char *)(v4 + v1[8] + 8));
  sub_C374(*(void *)(v4 + v1[9]), *(unsigned char *)(v4 + v1[9] + 8));
  sub_C374(*(void *)(v4 + v1[10]), *(unsigned char *)(v4 + v1[10] + 8));
  uint64_t v16 = v4 + v1[11];
  uint64_t v17 = v16 + *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 20);
  uint64_t v18 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1553C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_155430()
{
  type metadata accessor for WelcomeFrame(0);

  sub_154DB0();
}

uint64_t sub_155490(uint64_t a1)
{
  uint64_t result = sub_152044(&qword_2F1AD8, (void (*)(uint64_t))type metadata accessor for WelcomeFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1554E8(uint64_t a1)
{
  uint64_t result = sub_152044(&qword_2F1AE0, (void (*)(uint64_t))type metadata accessor for WelcomeFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_155540()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for WelcomeFrameViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_269BE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for WelcomeFrameViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WelcomeFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WelcomeFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for WelcomeFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for WelcomeFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_155988);
}

uint64_t sub_155988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269BE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WelcomeFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_155A64);
}

uint64_t sub_155A64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_269BE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_155B28()
{
  uint64_t result = sub_269BE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WelcomeFrame(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v8 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      }
      else
      {
        long long v21 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v21;
        (**(void (***)(uint64_t, uint64_t *))(v21 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(void *)(a1 + 104) = a2[13];
      uint64_t v22 = a2[15];
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v22;
        uint64_t v23 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v23;
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        uint64_t v24 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 128) = v25;
        *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
        *(void *)(a1 + 160) = a2[20];
      }
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
      uint64_t v15 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_26A6E0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_4A98(&qword_2EA940);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[6];
    *(void *)(a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[7];
    uint64_t v31 = (_WORD *)(a1 + v30);
    uint64_t v32 = (_WORD *)((char *)a2 + v30);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v31 = *v32;
      uint64_t v33 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v34 = v33[6];
      uint64_t v35 = (char *)v31 + v34;
      uint64_t v36 = (char *)v32 + v34;
      uint64_t v37 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      *(void *)((char *)v31 + v33[7]) = *(void *)((char *)v32 + v33[7]);
      uint64_t v38 = v33[8];
      uint64_t v39 = (char *)v31 + v38;
      uint64_t v40 = (char *)v32 + v38;
      v39[2] = v40[2];
      *(_WORD *)uint64_t v39 = *(_WORD *)v40;
    }
    else
    {
      *(void *)uint64_t v31 = *(void *)v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = a3[8];
    uint64_t v42 = a1 + v41;
    uint64_t v43 = (uint64_t)a2 + v41;
    uint64_t v44 = *(void *)v43;
    char v45 = *(unsigned char *)(v43 + 8);
    sub_10E0C(*(void *)v43, v45);
    *(void *)uint64_t v42 = v44;
    *(unsigned char *)(v42 + 8) = v45;
    uint64_t v46 = a3[9];
    uint64_t v47 = a1 + v46;
    uint64_t v48 = (uint64_t)a2 + v46;
    uint64_t v49 = *(void *)v48;
    char v50 = *(unsigned char *)(v48 + 8);
    sub_10E0C(*(void *)v48, v50);
    *(void *)uint64_t v47 = v49;
    *(unsigned char *)(v47 + 8) = v50;
    uint64_t v51 = a3[10];
    uint64_t v52 = a1 + v51;
    uint64_t v53 = (uint64_t)a2 + v51;
    uint64_t v54 = *(void *)v53;
    char v55 = *(unsigned char *)(v53 + 8);
    sub_10E0C(*(void *)v53, v55);
    *(void *)uint64_t v52 = v54;
    *(unsigned char *)(v52 + 8) = v55;
    uint64_t v56 = a3[11];
    uint64_t v57 = a1 + v56;
    uint64_t v58 = (uint64_t)a2 + v56;
    *(void *)(a1 + v56) = *(uint64_t *)((char *)a2 + v56);
    uint64_t v59 = type metadata accessor for WelcomeFrameViewModel(0);
    uint64_t v60 = *(int *)(v59 + 20);
    uint64_t v61 = v57 + v60;
    uint64_t v62 = v58 + v60;
    uint64_t v63 = sub_269BE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    uint64_t v64 = *(int *)(v59 + 24);
    uint64_t v65 = (void *)(v57 + v64);
    uint64_t v66 = (void *)(v58 + v64);
    uint64_t v67 = v66[1];
    *uint64_t v65 = *v66;
    v65[1] = v67;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WelcomeFrame(uint64_t a1, int *a2)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[7];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = v12 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v14 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_C374(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  uint64_t v15 = a1 + a2[11];
  uint64_t v16 = v15 + *(int *)(type metadata accessor for WelcomeFrameViewModel(0) + 20);
  uint64_t v17 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WelcomeFrame(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v8;
    swift_bridgeObjectRetain();
    uint64_t v9 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      long long v19 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v19;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    uint64_t v20 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v20;
      uint64_t v21 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v21;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v22 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v23;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    uint64_t v13 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    uint64_t v16 = sub_26A6E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EA940);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  long long v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *long long v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[7];
  uint64_t v29 = (_WORD *)(a1 + v28);
  uint64_t v30 = (_WORD *)(a2 + v28);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v29 = *v30;
    uint64_t v31 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v32 = v31[6];
    uint64_t v33 = (char *)v29 + v32;
    uint64_t v34 = (char *)v30 + v32;
    uint64_t v35 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    *(void *)((char *)v29 + v31[7]) = *(void *)((char *)v30 + v31[7]);
    uint64_t v36 = v31[8];
    uint64_t v37 = (char *)v29 + v36;
    uint64_t v38 = (char *)v30 + v36;
    v37[2] = v38[2];
    *(_WORD *)uint64_t v37 = *(_WORD *)v38;
  }
  else
  {
    *(void *)uint64_t v29 = *(void *)v30;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = a3[8];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)v41;
  char v43 = *(unsigned char *)(v41 + 8);
  sub_10E0C(*(void *)v41, v43);
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v43;
  uint64_t v44 = a3[9];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)v46;
  char v48 = *(unsigned char *)(v46 + 8);
  sub_10E0C(*(void *)v46, v48);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(v45 + 8) = v48;
  uint64_t v49 = a3[10];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  uint64_t v52 = *(void *)v51;
  char v53 = *(unsigned char *)(v51 + 8);
  sub_10E0C(*(void *)v51, v53);
  *(void *)uint64_t v50 = v52;
  *(unsigned char *)(v50 + 8) = v53;
  uint64_t v54 = a3[11];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(void *)(a1 + v54) = *(void *)(a2 + v54);
  uint64_t v57 = type metadata accessor for WelcomeFrameViewModel(0);
  uint64_t v58 = *(int *)(v57 + 20);
  uint64_t v59 = v55 + v58;
  uint64_t v60 = v56 + v58;
  uint64_t v61 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = *(int *)(v57 + 24);
  uint64_t v63 = (void *)(v55 + v62);
  uint64_t v64 = (void *)(v56 + v62);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WelcomeFrame(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 == a2)
  {
    *(void *)(a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  }
  else
  {
    sub_156FA8(a1, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = (uint64_t)a2 + v10;
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        long long v9 = a2[2];
        *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        *(_OWORD *)a1 = v7;
      }
      else
      {
        uint64_t v20 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v20 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = a2[4];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      uint64_t v21 = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v22 = a2[7];
        long long v23 = a2[8];
        long long v24 = a2[9];
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(_OWORD *)(a1 + 128) = v23;
        *(_OWORD *)(a1 + 144) = v24;
        *(_OWORD *)(a1 + 112) = v22;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_4A98(&qword_2EA940);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v25 = a3[6];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    sub_B6DC(a1 + v25, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = a3[7];
    uint64_t v30 = (unsigned char *)(a1 + v29);
    uint64_t v31 = (char *)a2 + v29;
    sub_B6DC(a1 + v29, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      uint64_t v32 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v33 = v32[6];
      uint64_t v34 = &v30[v33];
      uint64_t v35 = &v31[v33];
      uint64_t v36 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      uint64_t v37 = v32[8];
      uint64_t v38 = &v30[v37];
      uint64_t v39 = &v31[v37];
      char v40 = v39[2];
      *(_WORD *)uint64_t v38 = *(_WORD *)v39;
      v38[2] = v40;
    }
    else
    {
      *(void *)uint64_t v30 = *(void *)v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v41 = a3[8];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t)a2 + v41;
  uint64_t v44 = *(void *)v43;
  char v45 = *(unsigned char *)(v43 + 8);
  sub_10E0C(*(void *)v43, v45);
  uint64_t v46 = *(void *)v42;
  char v47 = *(unsigned char *)(v42 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = v45;
  sub_C374(v46, v47);
  uint64_t v48 = a3[9];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t)a2 + v48;
  uint64_t v51 = *(void *)v50;
  char v52 = *(unsigned char *)(v50 + 8);
  sub_10E0C(*(void *)v50, v52);
  uint64_t v53 = *(void *)v49;
  char v54 = *(unsigned char *)(v49 + 8);
  *(void *)uint64_t v49 = v51;
  *(unsigned char *)(v49 + 8) = v52;
  sub_C374(v53, v54);
  uint64_t v55 = a3[10];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = (uint64_t)a2 + v55;
  uint64_t v58 = *(void *)v57;
  char v59 = *(unsigned char *)(v57 + 8);
  sub_10E0C(*(void *)v57, v59);
  uint64_t v60 = *(void *)v56;
  char v61 = *(unsigned char *)(v56 + 8);
  *(void *)uint64_t v56 = v58;
  *(unsigned char *)(v56 + 8) = v59;
  sub_C374(v60, v61);
  uint64_t v62 = a3[11];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (uint64_t)a2 + v62;
  *(void *)(a1 + v62) = *(void *)((char *)a2 + v62);
  uint64_t v65 = type metadata accessor for WelcomeFrameViewModel(0);
  uint64_t v66 = *(int *)(v65 + 20);
  uint64_t v67 = v63 + v66;
  uint64_t v68 = v64 + v66;
  uint64_t v69 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
  uint64_t v70 = *(int *)(v65 + 24);
  uint64_t v71 = (void *)(v63 + v70);
  v72 = (void *)(v64 + v70);
  *uint64_t v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_156FA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for WelcomeFrame(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_9;
    }
    *(void *)a1 = *(void *)a2;
    uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A6E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EA940);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v18 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[7];
  long long v24 = (_WORD *)((char *)a1 + v23);
  uint64_t v25 = (_WORD *)((char *)a2 + v23);
  uint64_t v26 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *long long v24 = *v25;
    uint64_t v27 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v28 = v27[6];
    uint64_t v29 = (char *)v24 + v28;
    uint64_t v30 = (char *)v25 + v28;
    uint64_t v31 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    *(void *)((char *)v24 + v27[7]) = *(void *)((char *)v25 + v27[7]);
    uint64_t v32 = v27[8];
    uint64_t v33 = (char *)v24 + v32;
    uint64_t v34 = (char *)v25 + v32;
    v33[2] = v34[2];
    *(_WORD *)uint64_t v33 = *(_WORD *)v34;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v35 = a3[8];
  uint64_t v36 = a3[9];
  uint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = (char *)a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = (char *)a1 + v36;
  char v40 = (char *)a2 + v36;
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[10];
  uint64_t v42 = a3[11];
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  char v45 = (char *)a1 + v42;
  uint64_t v46 = (char *)a2 + v42;
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  uint64_t v47 = type metadata accessor for WelcomeFrameViewModel(0);
  uint64_t v48 = *(int *)(v47 + 20);
  uint64_t v49 = &v45[v48];
  uint64_t v50 = &v46[v48];
  uint64_t v51 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  *(_OWORD *)&v45[*(int *)(v47 + 24)] = *(_OWORD *)&v46[*(int *)(v47 + 24)];
  return a1;
}

_OWORD *assignWithTake for WelcomeFrame(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 == a2)
  {
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    goto LABEL_17;
  }
  sub_156FA8((uint64_t)a1, type metadata accessor for PageBackground);
  uint64_t v6 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A6E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EA940);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_11:
  uint64_t v18 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  sub_B6DC((uint64_t)a1 + v18, &qword_2EA968);
  uint64_t v21 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[7];
  long long v24 = (_WORD *)((char *)a1 + v23);
  uint64_t v25 = (_WORD *)((char *)a2 + v23);
  sub_B6DC((uint64_t)a1 + v23, &qword_2EA978);
  uint64_t v26 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *long long v24 = *v25;
    uint64_t v27 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v28 = v27[6];
    uint64_t v29 = (char *)v24 + v28;
    uint64_t v30 = (char *)v25 + v28;
    uint64_t v31 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    *(void *)((char *)v24 + v27[7]) = *(void *)((char *)v25 + v27[7]);
    uint64_t v32 = v27[8];
    uint64_t v33 = (char *)v24 + v32;
    uint64_t v34 = (char *)v25 + v32;
    v33[2] = v34[2];
    *(_WORD *)uint64_t v33 = *(_WORD *)v34;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
LABEL_17:
  uint64_t v35 = a3[8];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)v37;
  LOBYTE(v37) = v37[8];
  uint64_t v39 = *(void *)v36;
  char v40 = v36[8];
  *(void *)uint64_t v36 = v38;
  v36[8] = (char)v37;
  sub_C374(v39, v40);
  uint64_t v41 = a3[9];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void *)v42;
  char v46 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  sub_C374(v45, v46);
  uint64_t v47 = a3[10];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = *(void *)v49;
  LOBYTE(v49) = v49[8];
  uint64_t v51 = *(void *)v48;
  char v52 = v48[8];
  *(void *)uint64_t v48 = v50;
  v48[8] = (char)v49;
  sub_C374(v51, v52);
  uint64_t v53 = a3[11];
  char v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
  uint64_t v56 = type metadata accessor for WelcomeFrameViewModel(0);
  uint64_t v57 = *(int *)(v56 + 20);
  uint64_t v58 = &v54[v57];
  char v59 = &v55[v57];
  uint64_t v60 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
  uint64_t v61 = *(int *)(v56 + 24);
  uint64_t v62 = &v54[v61];
  uint64_t v63 = &v55[v61];
  uint64_t v65 = *(void *)v63;
  uint64_t v64 = *((void *)v63 + 1);
  *(void *)uint64_t v62 = v65;
  *((void *)v62 + 1) = v64;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_157944);
}

uint64_t sub_157944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_7:
    uint64_t v10 = a1 + v13;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  if (a2 == 254)
  {
    unsigned int v16 = *(unsigned __int8 *)(a1 + a3[8] + 8);
    if (v16 > 1) {
      return (v16 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v17 = type metadata accessor for WelcomeFrameViewModel(0);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[11];
    return v18(v20, a2, v19);
  }
}

uint64_t storeEnumTagSinglePayload for WelcomeFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_157B28);
}

uint64_t sub_157B28(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for PageBackground(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[7];
    goto LABEL_7;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[8] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v17 = type metadata accessor for WelcomeFrameViewModel(0);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[11];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_157CFC()
{
  type metadata accessor for PageBackground(319);
  if (v0 <= 0x3F)
  {
    sub_D7278(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
    if (v1 <= 0x3F)
    {
      sub_D7278(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WelcomeFrameViewModel(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_157E8C()
{
  return sub_158114(&qword_2F1C28, &qword_2F1AD0, (void (*)(void))sub_157ED0);
}

unint64_t sub_157ED0()
{
  unint64_t result = qword_2F1C30;
  if (!qword_2F1C30)
  {
    sub_7B0C(&qword_2F1AC0);
    sub_7C18(&qword_2F1C38, &qword_2F1AB8);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1C30);
  }
  return result;
}

uint64_t sub_157FA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_158048()
{
  unint64_t result = qword_2F1CA8;
  if (!qword_2F1CA8)
  {
    sub_7B0C(&qword_2F1C78);
    sub_158114(&qword_2F1CB0, &qword_2F1C70, (void (*)(void))sub_158190);
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1CA8);
  }
  return result;
}

uint64_t sub_158114(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_158190()
{
  unint64_t result = qword_2F1CB8;
  if (!qword_2F1CB8)
  {
    sub_7B0C(&qword_2EE910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1CB8);
  }
  return result;
}

uint64_t PageUpdateActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1592E8(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_158214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[35] = a4;
  v8[36] = a5;
  v8[33] = a2;
  v8[34] = a3;
  v8[32] = a1;
  uint64_t v12 = sub_4A98(&qword_2F1D68);
  v8[37] = v12;
  v8[38] = *(void *)(v12 - 8);
  v8[39] = swift_task_alloc();
  uint64_t v13 = sub_26CB90();
  v8[40] = v13;
  v8[41] = *(void *)(v13 - 8);
  v8[42] = swift_task_alloc();
  uint64_t v14 = sub_4A98(&qword_2F1D70);
  v8[43] = v14;
  v8[44] = *(void *)(v14 - 8);
  v8[45] = swift_task_alloc();
  v8[22] = a6;
  v8[23] = a7;
  v8[24] = a8;
  v8[25] = v21;
  uint64_t updated = type metadata accessor for PageUpdateInstruction();
  v8[46] = updated;
  v8[47] = *(void *)(updated - 8);
  v8[48] = swift_task_alloc();
  v8[26] = a6;
  v8[27] = a7;
  v8[28] = a8;
  v8[29] = v21;
  uint64_t v16 = type metadata accessor for PageUpdateAction();
  v8[49] = v16;
  v8[50] = *(void *)(v16 - 8);
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  sub_26D6D0();
  v8[53] = sub_26D6C0();
  uint64_t v18 = sub_26D6B0();
  v8[54] = v18;
  v8[55] = v17;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1584D4, v18, v17);
}

uint64_t sub_1584D4()
{
  uint64_t v32 = v0;
  if (qword_2E9AF8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[33];
  uint64_t v5 = sub_26A340();
  sub_6B14(v5, (uint64_t)qword_2E9EB0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = sub_26A320();
  os_log_type_t v8 = sub_26D860();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[52];
  if (v9)
  {
    log = v7;
    uint64_t v11 = v0[50];
    uint64_t v12 = v0[51];
    uint64_t v13 = v0[49];
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    v6(v12, v10, v13);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v13);
    unint64_t updated = PageUpdateAction.description.getter(v13);
    unint64_t v18 = v17;
    v15(v12, v13);
    v0[31] = sub_1B1A8C(updated, v18, &v31);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_5F050, log, v8, "Resolving instruction for PageUpdateAction: %s)", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0[50] + 8))(v0[52], v0[49]);
  }
  uint64_t v19 = v0[49];
  uint64_t v20 = (void *)v0[34];
  uint64_t v21 = v20[3];
  uint64_t v22 = v20[4];
  sub_4ADC(v20, v21);
  PageUpdateAction.instructionIntent.getter(v19, (uint64_t)(v0 + 2));
  uint64_t v23 = v0[5];
  uint64_t v24 = v0[6];
  uint64_t v25 = sub_4ADC(v0 + 2, v23);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[56] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1587DC;
  uint64_t v27 = v0[48];
  uint64_t v28 = v0[35];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v27, v25, v28, v23, v24, v21, v22);
}

uint64_t sub_1587DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v5 = sub_158F6C;
  }
  else {
    uint64_t v5 = sub_158918;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v5, v4, v3);
}

uint64_t sub_158918()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[41];
  uint64_t v15 = v0[40];
  uint64_t v5 = (void *)v0[36];
  uint64_t v6 = v0[33];
  uint64_t v13 = v0[46];
  uint64_t v14 = v0[32];
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v0 + 2));
  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  sub_4ADC(v5, v7);
  char v9 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 40))(v1, *(unsigned __int8 *)(v6 + *(int *)(v2 + 60)), v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v13);
  uint64_t v10 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
  if ((v9 & 1) == 0) {
    uint64_t v10 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v14, *v10, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_158A98()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v5 = sub_159130;
  }
  else {
    uint64_t v5 = sub_158BD4;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v5, v4, v3);
}

uint64_t sub_158BD4()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[37];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  sub_4ADC(v0 + 7, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[60] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_158CF8;
  uint64_t v7 = v0[42];
  uint64_t v8 = v0[43];
  uint64_t v9 = v0[39];
  uint64_t v10 = v0[35];
  return ActionDispatcher.perform(_:withMetrics:asPartOf:)(v7, v0 + 12, v9, v10, v8);
}

uint64_t sub_158CF8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)v1 + 96;
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[38] + 8))(v2[39], v2[37]);
    _s7BooksUI13AnyPagedFrameVwxx_0(v3);
    uint64_t v4 = v2[54];
    uint64_t v5 = v2[55];
    uint64_t v6 = sub_1591FC;
  }
  else
  {
    uint64_t v8 = v2[41];
    uint64_t v7 = v2[42];
    uint64_t v9 = v2[40];
    (*(void (**)(void, void))(v2[38] + 8))(v2[39], v2[37]);
    _s7BooksUI13AnyPagedFrameVwxx_0(v3);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v4 = v2[54];
    uint64_t v5 = v2[55];
    uint64_t v6 = sub_158E7C;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v6, v4, v5);
}

uint64_t sub_158E7C()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = v0[43];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v0 + 7));
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_158F6C()
{
  uint64_t v1 = *(void *)(v0 + 456);
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);
  *(void *)(v0 + 240) = v1;
  swift_errorRetain();
  sub_4A98(&qword_2F1D78);
  sub_4A98(&qword_2F1D80);
  if (swift_dynamicCast())
  {
    sub_AD44((long long *)(v0 + 136), v0 + 56);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_158A98;
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 344);
    return BaseObjectGraph.inject<A>(_:)(v3, v4, v4);
  }
  else
  {
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    *(void *)(v0 + 168) = 0;
    swift_release();
    sub_159AC0(v0 + 136);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_159130()
{
  swift_release();
  swift_errorRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1591FC()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = v0[43];
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1592E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v32 = a5;
  uint64_t v12 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v34 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = a3;
  v38[1] = a4;
  uint64_t v31 = a4;
  v38[2] = a5;
  v38[3] = a6;
  uint64_t updated = type metadata accessor for PageUpdateAction();
  uint64_t v15 = *(void *)(updated - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(updated);
  unint64_t v18 = (char *)&v30 - v17;
  sub_4A98(&qword_2F1D50);
  sub_26CC80();
  v37[0] = a3;
  v37[1] = a4;
  swift_getExtendedExistentialTypeMetadata();
  sub_26CC80();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, updated);
  sub_C224((uint64_t)v38, (uint64_t)v36);
  sub_C224((uint64_t)v37, (uint64_t)v35);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  uint64_t v23 = v31;
  *((void *)v22 + 2) = a3;
  *((void *)v22 + 3) = v23;
  uint64_t v24 = v33;
  *((void *)v22 + 4) = v32;
  *((void *)v22 + 5) = v24;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v22[v19], v18, updated);
  sub_AD44(v36, (uint64_t)&v22[v20]);
  *(void *)&v22[v21] = a2;
  sub_AD44(v35, (uint64_t)&v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8]);
  sub_4A98(&qword_2F0340);
  swift_retain();
  uint64_t v25 = sub_26D180();
  uint64_t v26 = sub_26D6F0();
  uint64_t v27 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v34, 1, 1, v26);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = &unk_2F1D60;
  v28[5] = v22;
  v28[6] = v25;
  swift_retain();
  sub_105C10(v27, (uint64_t)&unk_2F0350, (uint64_t)v28);
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v37);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v38);
  return v25;
}

uint64_t sub_15961C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for PageUpdateActionImplementation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_159650()
{
  uint64_t updated = type metadata accessor for PageUpdateAction();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(updated - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(updated - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(updated - 8) + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_26CB80();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
  unint64_t v6 = v0 + v2 + *(int *)(updated + 52);
  uint64_t v7 = sub_269CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v9 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  _s7BooksUI13AnyPagedFrameVwxx_0(v4 + *(int *)(updated + 56));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v9);
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + ((((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_15980C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  v3[2] = v6;
  v3[3] = v5;
  v3[4] = v7;
  v3[5] = v8;
  uint64_t v9 = *(void *)(type metadata accessor for PageUpdateAction() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (uint64_t)v1 + v10;
  uint64_t v14 = (uint64_t)v1 + v11;
  uint64_t v15 = *(void *)((char *)v1 + v12);
  uint64_t v16 = (uint64_t)v1 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)swift_task_alloc();
  v3[6] = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_159984;
  return sub_158214(a1, v13, v14, v15, v16, v6, v5, v7);
}

uint64_t sub_159984()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_159A78()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_159AC0(uint64_t a1)
{
  uint64_t v2 = sub_4A98(qword_2F1D88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_159B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ListItemMetadataEyebrowView() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t sub_159BD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_4A98(&qword_2F1E10);
  sub_26A0F0();
  sub_26A0D0();
  sub_15AEB0();
  sub_15B160(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_15B160(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_159DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v51 = a2;
  uint64_t v46 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v55 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v56 = (uint64_t)&v45 - v8;
  uint64_t v9 = sub_26B910();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_26B980();
  uint64_t v14 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_4A98(&qword_2F1E10);
  __chkstk_darwin(v52);
  unint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v22 = sub_26B720();
  unsigned __int8 v23 = sub_26B740();
  char v24 = sub_26B730();
  sub_26B730();
  if (sub_26B730() != v22) {
    char v24 = sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v23) {
    char v24 = sub_26B730();
  }
  sub_15A42C(v46, v47, v48, (uint64_t)v58);
  *(_OWORD *)&v60[119] = v58[7];
  *(_OWORD *)&v60[103] = v58[6];
  *(_OWORD *)&v60[55] = v58[3];
  *(_OWORD *)&v60[39] = v58[2];
  *(_OWORD *)&v60[135] = v59[0];
  *(_OWORD *)&v60[145] = *(_OWORD *)((char *)v59 + 10);
  *(_OWORD *)&v60[71] = v58[4];
  *(_OWORD *)&v60[87] = v58[5];
  *(_OWORD *)&v60[7] = v58[0];
  *(_OWORD *)&v60[23] = v58[1];
  long long v69 = *(_OWORD *)&v60[128];
  long long v70 = *(_OWORD *)&v60[144];
  char v71 = BYTE9(v59[1]);
  long long v65 = *(_OWORD *)&v60[64];
  long long v66 = *(_OWORD *)&v60[80];
  long long v67 = *(_OWORD *)&v60[96];
  long long v68 = *(_OWORD *)&v60[112];
  long long v61 = *(_OWORD *)v60;
  long long v62 = *(_OWORD *)&v60[16];
  long long v63 = *(_OWORD *)&v60[32];
  long long v64 = *(_OWORD *)&v60[48];
  sub_4040C((uint64_t)v19);
  uint64_t v25 = v49;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.TextStyle.caption2(_:), v49);
  uint64_t v26 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 1, 1, v26);
  sub_26B8E0();
  sub_15B1A8((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
  sub_26B800();
  swift_release();
  uint64_t v28 = v53;
  uint64_t v27 = v54;
  uint64_t v29 = v50;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v50, enum case for Font.Leading.tight(_:), v54);
  uint64_t v30 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  sub_67BB8((uint64_t)v19, type metadata accessor for FontConstants.ListItem);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  char v74 = 0;
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = v55;
  uint64_t *v55 = v35;
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (uint64_t)v36;
  uint64_t v38 = v56;
  sub_67AF0(v37, v56);
  sub_67B54(v38, (uint64_t)&v21[*(int *)(v52 + 36)]);
  long long v39 = v67;
  *(_OWORD *)(v21 + 113) = v68;
  long long v40 = v70;
  *(_OWORD *)(v21 + 129) = v69;
  *(_OWORD *)(v21 + 145) = v40;
  long long v41 = v63;
  *(_OWORD *)(v21 + 49) = v64;
  long long v42 = v66;
  *(_OWORD *)(v21 + 65) = v65;
  *(_OWORD *)(v21 + 81) = v42;
  *(_OWORD *)(v21 + 97) = v39;
  long long v43 = v62;
  *(_OWORD *)(v21 + 1) = v61;
  *(_OWORD *)(v21 + 17) = v43;
  *unint64_t v21 = v24;
  v21[161] = v71;
  *(_OWORD *)(v21 + 33) = v41;
  *(_DWORD *)(v21 + 162) = v72;
  *((_WORD *)v21 + 83) = v73;
  *((void *)v21 + 21) = KeyPath;
  *((void *)v21 + 22) = v30;
  *((void *)v21 + 23) = v33;
  *((void *)v21 + 24) = v32;
  *((void *)v21 + 25) = v34;
  *((void *)v21 + 26) = 1;
  v21[216] = v74;
  sub_67BB8(v38, (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
  return sub_15B224((uint64_t)v21, v57);
}

uint64_t sub_15A42C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  type metadata accessor for ListItemMetadataEyebrowView();
  uint64_t v8 = a1;
  uint64_t v9 = a3[2](a1, a2, (uint64_t)a3);
  uint64_t v11 = v10;
  uint64_t v38 = v12;
  char v14 = v13 & 1;
  uint64_t v15 = a3[3];
  swift_bridgeObjectRetain();
  sub_45370(v9, v11, v14);
  uint64_t v16 = v15(v8, a2, (uint64_t)a3);
  uint64_t v37 = v19;
  if (v19) {
    uint64_t v20 = v16;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v39 = v20;
  if (v19) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v19) {
    uint64_t v22 = v18 & 1;
  }
  else {
    uint64_t v22 = 0;
  }
  if (v19) {
    __int16 v23 = 257;
  }
  else {
    __int16 v23 = 0;
  }
  __int16 v40 = v23;
  uint64_t v24 = a3[4](v8, a2, (uint64_t)a3);
  uint64_t v28 = v27;
  *(void *)a4 = v9;
  *(void *)(a4 + 8) = v11;
  if (v27) {
    uint64_t v29 = v24;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v27) {
    uint64_t v30 = v25;
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v36 = v30;
  *(unsigned char *)(a4 + 16) = v14;
  if (v27) {
    uint64_t v31 = v26 & 1;
  }
  else {
    uint64_t v31 = 0;
  }
  uint64_t v34 = v29;
  char v35 = v31;
  if (v27) {
    __int16 v32 = 257;
  }
  else {
    __int16 v32 = 0;
  }
  *(void *)(a4 + 24) = v38;
  *(_WORD *)(a4 + 32) = 257;
  *(void *)(a4 + 40) = v39;
  *(void *)(a4 + 48) = v21;
  *(void *)(a4 + 56) = v22;
  *(void *)(a4 + 64) = v37;
  *(_WORD *)(a4 + 72) = v40;
  *(void *)(a4 + 80) = v29;
  *(void *)(a4 + 88) = v30;
  *(void *)(a4 + 96) = v31;
  *(void *)(a4 + 104) = v27;
  *(_WORD *)(a4 + 112) = v32;
  *(void *)(a4 + 120) = v9;
  *(void *)(a4 + 128) = v11;
  *(unsigned char *)(a4 + 136) = v14;
  *(void *)(a4 + 144) = v38;
  *(_WORD *)(a4 + 152) = 256;
  sub_45370(v9, v11, v14);
  swift_bridgeObjectRetain();
  sub_15B28C(v39, v21, v22, v37);
  sub_15B28C(v34, v36, v35, v28);
  sub_45370(v9, v11, v14);
  swift_bridgeObjectRetain();
  sub_3A380(v9, v11, v14);
  swift_bridgeObjectRelease();
  sub_15B2D0(v34, v36, v35, v28);
  sub_15B2D0(v39, v21, v22, v37);
  sub_3A380(v9, v11, v14);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ListItemMetadataEyebrowView()
{
  return sub_129B4();
}

uint64_t sub_15A6C8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26AB40() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v11 + v8 + 1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v10 > 0xFE)
      {
        __int16 v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v23(((unint64_t)a1 + v13) & ~v11);
      }
      else
      {
        unsigned int v22 = *((unsigned __int8 *)a1 + v8);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_15A924(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26AB40() - 8);
  unint64_t v9 = ((*(void *)(v8 + 64)
       + ((*(unsigned __int8 *)(v8 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = v10 | 1;
  uint64_t v16 = (v10 | 1) + v13;
  size_t v17 = (v16 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v13;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x15AC3CLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v12 > 0xFE)
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v24((unint64_t)&a1[v16] & v21, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v15 < 4) {
            int v25 = ~(-1 << (8 * v15));
          }
          else {
            int v25 = -1;
          }
          int v26 = v25 & (a2 - 255);
          bzero(a1, v15);
          if (v15 == 1) {
            *a1 = v26;
          }
          else {
            *(_DWORD *)a1 = v26;
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_15AC64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_15ACAC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ListItemMetadataEyebrowView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_15AE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ListItemMetadataEyebrowView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_159DF0(a1, v8, v5, v6, a2);
}

unint64_t sub_15AEB0()
{
  unint64_t result = qword_2F1E18;
  if (!qword_2F1E18)
  {
    sub_7B0C(&qword_2F1E10);
    sub_15AF5C();
    sub_15B160((unint64_t *)&qword_2ECC70, (void (*)(uint64_t))type metadata accessor for DefaultBlendModeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1E18);
  }
  return result;
}

unint64_t sub_15AF5C()
{
  unint64_t result = qword_2F1E20;
  if (!qword_2F1E20)
  {
    sub_7B0C(&qword_2F1E28);
    sub_15AFFC();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1E20);
  }
  return result;
}

unint64_t sub_15AFFC()
{
  unint64_t result = qword_2F1E30;
  if (!qword_2F1E30)
  {
    sub_7B0C(&qword_2F1E38);
    sub_15B09C();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1E30);
  }
  return result;
}

unint64_t sub_15B09C()
{
  unint64_t result = qword_2F1E40;
  if (!qword_2F1E40)
  {
    sub_7B0C(&qword_2F1E48);
    sub_7C18(&qword_2F1E50, &qword_2F1E58);
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1E40);
  }
  return result;
}

uint64_t sub_15B160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15B1A8(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBFC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15B224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F1E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_15B28C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_45370(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_15B2D0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_3A380(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_15B314()
{
  return sub_7C18(&qword_2F1E60, &qword_2F1E68);
}

uint64_t static ActionKinds.table.getter()
{
  if (qword_2E9C90 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2F1E80);
  sub_26A310();
  return v1;
}

uint64_t sub_15B3CC()
{
  if (qword_2E9C98 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F1E78;
  sub_4A98(&qword_2F1EC0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = v0;
  qword_2F1E70 = v1;

  return swift_bridgeObjectRetain();
}

unint64_t sub_15B45C()
{
  sub_4A98(&qword_2F1EC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F980;
  *(void *)(inited + 32) = 0x7463417465737361;
  *(void *)(inited + 40) = 0xEB000000006E6F69;
  uint64_t v1 = type metadata accessor for AssetAction(0);
  uint64_t v2 = sub_15D078(&qword_2ED9D0, (void (*)(uint64_t))type metadata accessor for AssetAction);
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 0x69746341776F6C66;
  *(void *)(inited + 72) = 0xEA00000000006E6FLL;
  uint64_t v3 = type metadata accessor for FlowAction();
  uint64_t v4 = sub_15D078(&qword_2F1ED0, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)(inited + 80) = v3;
  *(void *)(inited + 88) = v4;
  strcpy((char *)(inited + 96), "flowBackAction");
  *(unsigned char *)(inited + 111) = -18;
  *(void *)(inited + 112) = sub_26D140();
  *(void *)(inited + 120) = &protocol witness table for Models.FlowBackAction;
  unint64_t result = sub_95A8(inited);
  qword_2F1E78 = result;
  return result;
}

void static ActionKinds.register<A>(_:name:)(uint64_t a1)
{
  if (qword_2E9C90 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_15B728(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_15B680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_B04C(a4, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_15B728(uint64_t *a1)
{
  return sub_15B680(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

unint64_t sub_15B74C()
{
  if (qword_2E9C90 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2F1E80);
  sub_26A310();
  uint64_t v0 = sub_26D020();
  uint64_t v1 = sub_15C2F4(v0, v4);
  unint64_t v2 = sub_15C380(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_15B7F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_15B810(a1, a2, a3);
}

uint64_t sub_15B810@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v83 = a2;
  uint64_t v75 = a3;
  uint64_t v4 = sub_26C8F0();
  __chkstk_darwin(v4 - 8);
  char v74 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_26CBE0();
  uint64_t v73 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  long long v70 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F1E90);
  __chkstk_darwin(v7 - 8);
  uint64_t v78 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_4A98(&qword_2F1E98);
  uint64_t v71 = *(void *)(v76 - 8);
  uint64_t v9 = __chkstk_darwin(v76);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v67 - v12;
  uint64_t v14 = sub_4A98(&qword_2F1EA0);
  uint64_t v80 = *(char **)(v14 - 8);
  uint64_t v81 = (char *)v14;
  uint64_t v15 = __chkstk_darwin(v14);
  int v72 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int v18 = (char *)&v67 - v17;
  uint64_t v91 = sub_26CA10();
  uint64_t v84 = *(void *)(v91 - 8);
  uint64_t v19 = __chkstk_darwin(v91);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v67 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  *(void *)&long long v85 = (char *)&v67 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v67 - v27;
  uint64_t v29 = sub_BF8B8(a1);
  if (v29)
  {
    uint64_t v32 = v29;
    uint64_t v78 = v30;
    uint64_t v79 = v31;
    uint64_t v33 = v83;
    sub_4ADC(v83, v83[3]);
    sub_26DFA0();
    sub_26CA00();
    sub_26C9D0();
    sub_4A98(&qword_2F1EB0);
    sub_26CA20();
    uint64_t v34 = v81;
    char v35 = (void (*)(char *, char *))*((void *)v80 + 1);
    v35(v18, v81);
    if (!v87)
    {
      unint64_t v36 = sub_15C2A0();
      uint64_t v87 = v77;
      unint64_t v88 = v36;
      uint64_t v37 = v72;
      sub_26C9D0();
      sub_26C9A0();
      v35(v37, v34);
      uint64_t v38 = v84;
      uint64_t v39 = v91;
      (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v91);
      (*(void (**)(char *, void, uint64_t))(v38 + 32))(v28, v85, v39);
    }
    sub_4ADC(v33, v33[3]);
    uint64_t v40 = v84;
    uint64_t v41 = v91;
    (*(void (**)(void, char *, uint64_t))(v84 + 16))(v85, v28, v91);
    sub_26D270();
    sub_26DFB0();
    swift_bridgeObjectRelease();
    *(void *)&long long v89 = v32;
    *((void *)&v89 + 1) = v78;
    uint64_t v90 = v79;
    sub_CA1C(&v87);
    uint64_t v42 = v82;
    sub_26D730();
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
      return sub_BF940((uint64_t)&v87);
    }
  }
  else
  {
    uint64_t v44 = (uint64_t)v78;
    uint64_t v80 = v11;
    int v72 = v21;
    uint64_t v81 = v24;
    uint64_t v45 = v79;
    uint64_t v46 = v83;
    uint64_t v47 = sub_BF8B8(a1);
    if (!v47)
    {
      uint64_t v60 = sub_26DAD0();
      swift_allocError();
      long long v62 = v61;
      sub_4A98(&qword_2EBAB0);
      *long long v62 = a1;
      sub_4ADC(v46, v46[3]);
      sub_26DF80();
      uint64_t v87 = 0;
      unint64_t v88 = 0xE000000000000000;
      sub_26DA90(21);
      swift_bridgeObjectRelease();
      uint64_t v87 = 60;
      unint64_t v88 = 0xE100000000000000;
      v92._countAndFlagsBits = sub_26E0F0();
      sub_26D4E0(v92);
      swift_bridgeObjectRelease();
      v93._object = (void *)0x8000000000289370;
      v93._countAndFlagsBits = 0xD000000000000012;
      sub_26D4E0(v93);
      sub_26DAC0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v60 - 8) + 104))(v62, enum case for DecodingError.typeMismatch(_:), v60);
      return swift_willThrow();
    }
    uint64_t v67 = v48;
    uint64_t v68 = v49;
    uint64_t v69 = v47;
    sub_4ADC(v46, v46[3]);
    sub_26DFA0();
    sub_26CA00();
    sub_26C9B0();
    sub_26CA20();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v71 + 8);
    v50(v13, v76);
    uint64_t v51 = v73;
    int v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v44, 1, v45);
    sub_15C240(v44);
    uint64_t v53 = v91;
    uint64_t v40 = v84;
    if (v52 == 1)
    {
      sub_15C2A0();
      uint64_t v54 = v70;
      sub_26CBF0();
      uint64_t v55 = v80;
      sub_26C9B0();
      uint64_t v56 = v85;
      uint64_t v57 = v81;
      sub_26C9A0();
      uint64_t v58 = v55;
      uint64_t v53 = v91;
      v50(v58, v76);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v79);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v57, v53);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v57, v56, v53);
    }
    sub_C224((uint64_t)v46, (uint64_t)v86);
    uint64_t v59 = v82;
    sub_26C8D0();
    if (v59) {
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v81, v53);
    }
    uint64_t v28 = v81;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v72, v81, v53);
    *(void *)&long long v89 = v69;
    *((void *)&v89 + 1) = v67;
    uint64_t v41 = v53;
    uint64_t v90 = v68;
    sub_CA1C(&v87);
    sub_26CDE0();
  }
  long long v85 = v89;
  uint64_t v63 = v89;
  long long v64 = sub_4ADC(&v87, v89);
  long long v65 = (uint64_t *)v75;
  *(_OWORD *)(v75 + 24) = v85;
  long long v66 = sub_CA1C(v65);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v66, v64, v63);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v87);
}

void static ActionModel.registerActionKind(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_15C1DC()
{
  unint64_t result = qword_2F1E88;
  if (!qword_2F1E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1E88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionKinds()
{
  return &type metadata for ActionKinds;
}

uint64_t sub_15C240(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F1E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_15C2A0()
{
  unint64_t result = qword_2F1EA8;
  if (!qword_2F1EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1EA8);
  }
  return result;
}

uint64_t sub_15C2F4(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_15C6C0(a1, (uint64_t)sub_15C6A0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_15C380(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_4A98(&qword_2EEBC8);
    uint64_t v2 = (void *)sub_26DBD0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_2F1EB8;
  uint64_t v9 = (uint64_t *)&unk_2EEBD8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_36;
  }
  if (v17 >= v30) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v30) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v30) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v30) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = i + 5;
          if (i + 5 >= v30) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v31 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = i + 6;
            if (i + 6 >= v30) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v31 + 8 * v19);
            int64_t v20 = i + 6;
            if (!v18)
            {
              while (1)
              {
                int64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_37;
                }
                if (v19 >= v30) {
                  break;
                }
                unint64_t v18 = *(void *)(v31 + 8 * v19);
                ++v20;
                if (v18) {
                  goto LABEL_27;
                }
              }
LABEL_33:
              sub_BFCB4();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
  }
LABEL_27:
  unint64_t v5 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_4A98(v8);
    sub_4A98(v9);
    swift_dynamicCast();
    unint64_t result = sub_23E49C(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      unint64_t v32 = v5;
      uint64_t v10 = v1;
      int64_t v11 = i;
      uint64_t v12 = v9;
      uint64_t v13 = v8;
      uint64_t v14 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v14 = v23;
      v14[1] = v22;
      uint64_t v8 = v13;
      uint64_t v9 = v12;
      int64_t i = v11;
      uint64_t v1 = v10;
      unint64_t v5 = v32;
      *(void *)(v2[7] + 8 * v24) = v33;
      if (!v32) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v26 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v33;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_35;
    }
    v2[2] = v29;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_15C6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_15C6C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_15C9DC();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v10;
  uint64_t v55 = v9;
  uint64_t v14 = (void *)*a5;
  unint64_t v16 = sub_23E49C(v7, v8);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      uint64_t v23 = (void *)*a5;
      if (v15) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_15CB94();
      uint64_t v23 = (void *)*a5;
      if (v20) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v23[(v16 >> 6) + 8] |= 1 << v16;
    unint64_t v24 = (uint64_t *)(v23[6] + 16 * v16);
    *unint64_t v24 = v11;
    v24[1] = v12;
    char v25 = (void *)(v23[7] + 16 * v16);
    *char v25 = v55;
    v25[1] = v13;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v23[2] = v28;
LABEL_13:
    uint64_t v29 = sub_15C9DC();
    if (v30)
    {
      uint64_t v33 = v29;
      uint64_t v34 = v30;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      do
      {
        uint64_t v41 = (void *)*a5;
        unint64_t v42 = sub_23E49C(v33, v34);
        uint64_t v44 = v41[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v27 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v27) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v41[3] < v46)
        {
          sub_15CD50(v46, 1);
          unint64_t v42 = sub_23E49C(v33, v34);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v49 = (void *)*a5;
        if (v47)
        {
          uint64_t v37 = 16 * v42;
          long long v57 = *(_OWORD *)(v49[7] + 16 * v42);
          swift_bridgeObjectRelease();
          *(_OWORD *)(v49[7] + v37) = v57;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          uint64_t v50 = (uint64_t *)(v49[6] + 16 * v42);
          *uint64_t v50 = v33;
          v50[1] = v34;
          uint64_t v51 = (void *)(v49[7] + 16 * v42);
          *uint64_t v51 = v35;
          v51[1] = v36;
          uint64_t v52 = v49[2];
          BOOL v27 = __OFADD__(v52, 1);
          uint64_t v53 = v52 + 1;
          if (v27) {
            goto LABEL_25;
          }
          v49[2] = v53;
        }
        uint64_t v33 = sub_15C9DC();
        uint64_t v34 = v38;
        uint64_t v35 = v39;
        uint64_t v36 = v40;
      }
      while (v38);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_BFCB4();
    return swift_release();
  }
  sub_15CD50(v19, a4 & 1);
  unint64_t v21 = sub_23E49C(v11, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    uint64_t v23 = (void *)*a5;
    if ((v20 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    long long v56 = *(_OWORD *)(v23[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v23[7] + 16 * v16) = v56;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_26DE60();
  __break(1u);
  return result;
}

uint64_t sub_15C9DC()
{
  void (*v13)(uint64_t *__return_ptr, void *);
  long long v14;
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  void v24[2];
  long long v25;

  uint64_t v2 = *v1;
  int64_t v4 = v1[3];
  unint64_t v3 = v1[4];
  int64_t v5 = v4;
  if (v3)
  {
    uint64_t v6 = (v3 - 1) & v3;
    unint64_t v7 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_3:
    uint64_t v8 = 16 * v7;
    uint64_t v10 = *(void *)(v2 + 48);
    uint64_t v9 = *(void *)(v2 + 56);
    uint64_t v11 = (void *)(v10 + v8);
    uint64_t v12 = v11[1];
    uint64_t v13 = (void (*)(uint64_t *__return_ptr, void *))v1[5];
    v24[0] = *v11;
    v24[1] = v12;
    uint64_t v14 = *(_OWORD *)(v9 + v8);
    v1[3] = v5;
    v1[4] = v6;
    char v25 = v14;
    swift_bridgeObjectRetain();
    v13(&v23, v24);
    swift_bridgeObjectRelease();
    return v23;
  }
  unint64_t v16 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_25:
    uint64_t v1 = v0;
    goto LABEL_26;
  }
  uint64_t v17 = (unint64_t)(v1[2] + 64) >> 6;
  if (v16 < v17)
  {
    BOOL v18 = v1[1];
    uint64_t v19 = *(void *)(v18 + 8 * v16);
    if (v19)
    {
LABEL_7:
      uint64_t v6 = (v19 - 1) & v19;
      unint64_t v7 = __clz(__rbit64(v19)) + (v16 << 6);
      int64_t v5 = v16;
      goto LABEL_3;
    }
    char v20 = v4 + 2;
    int64_t v5 = v4 + 1;
    if (v4 + 2 < v17)
    {
      uint64_t v19 = *(void *)(v18 + 8 * v20);
      if (v19)
      {
LABEL_10:
        unint64_t v16 = v20;
        goto LABEL_7;
      }
      unint64_t v21 = v4 + 3;
      int64_t v5 = v4 + 2;
      if (v4 + 3 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v21);
        if (v19)
        {
LABEL_13:
          unint64_t v16 = v21;
          goto LABEL_7;
        }
        char v20 = v4 + 4;
        int64_t v5 = v4 + 3;
        if (v4 + 4 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * v20);
          if (v19) {
            goto LABEL_10;
          }
          unint64_t v21 = v4 + 5;
          int64_t v5 = v4 + 4;
          if (v4 + 5 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v21);
            if (v19) {
              goto LABEL_13;
            }
            unint64_t v16 = v4 + 6;
            int64_t v5 = v4 + 5;
            if (v4 + 6 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              uint64_t v0 = v1;
              int64_t v5 = v17 - 1;
              char v22 = v4 + 7;
              while (v17 != v22)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v22++);
                if (v19)
                {
                  unint64_t v16 = v22 - 1;
                  goto LABEL_7;
                }
              }
              goto LABEL_25;
            }
          }
        }
      }
    }
  }
LABEL_26:
  uint64_t result = 0;
  v1[3] = v5;
  v1[4] = 0;
  return result;
}

void *sub_15CB94()
{
  uint64_t v1 = v0;
  sub_4A98(&qword_2EA020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26DBB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v22 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_27;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_27;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23)
        {
          int64_t v9 = v22 + 3;
          if (v22 + 3 >= v13) {
            goto LABEL_27;
          }
          unint64_t v23 = *(void *)(v6 + 8 * v9);
          int64_t v24 = v22 + 3;
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_26;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_15CD50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4A98(&qword_2EA020);
  uint64_t v6 = sub_26DBC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_34;
        }
        unint64_t v23 = v34[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v23 = v34[v13];
          if (!v23)
          {
            int64_t v13 = v22 + 2;
            if (v22 + 2 >= v35) {
              goto LABEL_34;
            }
            unint64_t v23 = v34[v13];
            if (!v23)
            {
              int64_t v13 = v22 + 3;
              if (v22 + 3 >= v35)
              {
LABEL_34:
                swift_release();
                uint64_t v3 = v2;
                if (a2)
                {
                  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                  if (v33 >= 64) {
                    bzero(v34, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v34 = -1 << v33;
                  }
                  *(void *)(v5 + 16) = 0;
                }
                break;
              }
              unint64_t v23 = v34[v13];
              for (int64_t i = v22 + 3; !v23; ++i)
              {
                int64_t v13 = i + 1;
                if (__OFADD__(i, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v23 = v34[v13];
              }
            }
          }
        }
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v25 = 16 * v21;
      uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + v25);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      long long v36 = *(_OWORD *)(*(void *)(v5 + 56) + v25);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_26DEF0();
      sub_26D4B0();
      uint64_t result = sub_26DF20();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v16 == v30;
          if (v16 == v30) {
            unint64_t v16 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v11 + 8 * v16);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 16 * v17;
      uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      *uint64_t v19 = v28;
      v19[1] = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + v18) = v36;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_15D078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FlowAction.init(id:actionMetrics:clickData:destination:origin:sourceViewIdentifer:presentation:shouldInheritFigaroRestriction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a3;
  int v42 = a12;
  uint64_t v41 = a11;
  uint64_t v40 = a10;
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CC4(a6, (uint64_t)v45, &qword_2EF790);
  sub_269830();
  uint64_t v21 = sub_269820();
  uint64_t v23 = v22;
  int64_t v24 = *(void (**)(char *, uint64_t))(v18 + 8);
  v24(v20, v17);
  *a9 = v21;
  a9[1] = v23;
  uint64_t v25 = (int *)type metadata accessor for FlowAction();
  uint64_t v26 = v25[11];
  *((unsigned char *)a9 + v26) = 0;
  if (!a2)
  {
    sub_269830();
    a1 = sub_269820();
    a2 = v27;
    v24(v20, v17);
  }
  swift_bridgeObjectRelease();
  *a9 = a1;
  a9[1] = a2;
  uint64_t v28 = (char *)a9 + v25[5];
  uint64_t v29 = sub_26CB80();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v39, v29);
  sub_B678(a4, (uint64_t)a9 + v25[6], &qword_2EA820);
  sub_AD44(v38, (uint64_t)a9 + v25[7]);
  sub_B6DC(a4, &qword_2EA820);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
  uint64_t result = sub_19CC4((uint64_t)v45, (uint64_t)a9 + v25[8], &qword_2EF790);
  uint64_t v33 = (uint64_t *)((char *)a9 + v25[9]);
  uint64_t v34 = v44;
  *uint64_t v33 = v43;
  v33[1] = v34;
  int64_t v35 = (uint64_t *)((char *)a9 + v25[10]);
  uint64_t v36 = v41;
  *int64_t v35 = v40;
  v35[1] = v36;
  *((unsigned char *)a9 + v26) = v42 & 1;
  return result;
}

uint64_t FlowAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowAction() + 20);
  uint64_t v4 = sub_26CB80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FlowAction.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FlowAction();
  return sub_B678(v1 + *(int *)(v3 + 24), a1, &qword_2EA820);
}

uint64_t FlowAction.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FlowAction();
  sub_B678(v1 + *(int *)(v3 + 28), (uint64_t)v5, &qword_2F1ED8);
  return sub_AD44(v5, a1);
}

uint64_t sub_15D478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FlowAction();
  sub_B678(a1 + *(int *)(v4 + 28), (uint64_t)v6, &qword_2F1ED8);
  return sub_AD44(v6, a2);
}

uint64_t sub_15D4D0(uint64_t a1, uint64_t a2)
{
  sub_C224(a1, (uint64_t)v5);
  uint64_t v3 = a2 + *(int *)(type metadata accessor for FlowAction() + 28);
  _s7BooksUI13AnyPagedFrameVwxx_0(v3);
  return sub_AD44(v5, v3);
}

uint64_t FlowAction.destination.setter(long long *a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FlowAction() + 28);
  _s7BooksUI13AnyPagedFrameVwxx_0(v3);

  return sub_AD44(a1, v3);
}

double (*FlowAction.destination.modify())(double)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t FlowAction.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FlowAction();
  sub_19CC4(v1 + *(int *)(v3 + 32), (uint64_t)v5, &qword_2EF790);
  sub_19CC4((uint64_t)v5, a1, &qword_2EF790);
  return sub_15E4F8((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_15E3F0);
}

uint64_t FlowAction.sourceViewIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FlowAction() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowAction.presentation.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FlowAction() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowAction.shouldInheritFigaroRestriction.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FlowAction() + 44));
}

uint64_t FlowAction.shouldInheritFigaroRestriction.setter(char a1)
{
  uint64_t result = type metadata accessor for FlowAction();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

double (*FlowAction.shouldInheritFigaroRestriction.modify())(double)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t sub_15D750(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x654D6E6F69746361;
      break;
    case 2:
      uint64_t result = 0x7461446B63696C63;
      break;
    case 3:
      uint64_t result = 0x74616E6974736564;
      break;
    case 4:
      uint64_t result = 0x6E696769726FLL;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      uint64_t result = 0x61746E6573657270;
      break;
    case 7:
      uint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15D874()
{
  return sub_15D750(*v0);
}

uint64_t sub_15D87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1600E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_15D8A4(uint64_t a1)
{
  unint64_t v2 = sub_15E4A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15D8E0(uint64_t a1)
{
  unint64_t v2 = sub_15E4A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  long long v62 = a1;
  uint64_t v43 = a2;
  uint64_t v2 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v2 - 8);
  BOOL v45 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26CB80();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_4A98(&qword_2F1EE0);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_269840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlowAction();
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_269830();
  uint64_t v15 = sub_269820();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v48 = v8;
  uint64_t v44 = v18;
  v18(v11, v8);
  uint64_t *v14 = v15;
  v14[1] = v17;
  uint64_t v53 = v14;
  uint64_t v54 = (int *)v12;
  uint64_t v19 = *(int *)(v12 + 44);
  *((unsigned char *)v14 + v19) = 0;
  sub_4ADC(v62, v62[3]);
  sub_15E4A4();
  uint64_t v50 = v7;
  uint64_t v20 = v55;
  sub_26DFC0();
  if (v20)
  {
    uint64_t v55 = v20;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v62);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v48;
    uint64_t v55 = v19;
    v59[0] = 0;
    sub_4A98(&qword_2F1EF0);
    sub_7C18(&qword_2F1EF8, &qword_2F1EF0);
    sub_26DC60();
    uint64_t v22 = (char *)v53;
    uint64_t v23 = *((void *)&v60[0] + 1);
    int64_t v24 = v54;
    if (*((void *)&v60[0] + 1))
    {
      uint64_t v25 = *(void *)&v60[0];
    }
    else
    {
      sub_269830();
      uint64_t v42 = sub_269820();
      uint64_t v23 = v26;
      v44(v11, v21);
      uint64_t v25 = v42;
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = v52;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v22 = v25;
    *((void *)v22 + 1) = v23;
    LOBYTE(v60[0]) = 1;
    sub_15E824(&qword_2EF918, (void (*)(uint64_t))&type metadata accessor for ActionMetrics);
    uint64_t v28 = v46;
    uint64_t v30 = v49;
    uint64_t v29 = v50;
    sub_26DC90();
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v22[v24[5]], v28, v27);
    sub_269CE0();
    LOBYTE(v60[0]) = 2;
    sub_15E824(&qword_2F13B0, (void (*)(uint64_t))&type metadata accessor for ClickData);
    uint64_t v31 = (uint64_t)v45;
    sub_26DC60();
    uint64_t v32 = v47;
    sub_19CC4(v31, (uint64_t)&v22[v24[6]], &qword_2EA820);
    sub_4A98(&qword_2F1ED8);
    v59[0] = 3;
    sub_7C18(&qword_2F1F00, &qword_2F1ED8);
    sub_26DC90();
    uint64_t v33 = &v22[v24[7]];
    long long v34 = v60[1];
    *(_OWORD *)uint64_t v33 = v60[0];
    *((_OWORD *)v33 + 1) = v34;
    *((void *)v33 + 4) = v61;
    v59[151] = 4;
    sub_EE73C();
    sub_26DC60();
    sub_19CC4((uint64_t)v60, (uint64_t)v59, &qword_2EF790);
    sub_19CC4((uint64_t)v59, (uint64_t)&v22[v24[8]], &qword_2EF790);
    LOBYTE(v57) = 5;
    uint64_t v35 = sub_26DC30();
    uint64_t v36 = (uint64_t *)&v22[v24[9]];
    *uint64_t v36 = v35;
    v36[1] = v37;
    char v56 = 6;
    sub_15E618();
    sub_26DC90();
    uint64_t v38 = v58;
    uint64_t v39 = &v22[v24[10]];
    *(void *)uint64_t v39 = v57;
    *((void *)v39 + 1) = v38;
    LOBYTE(v57) = 7;
    sub_4A98(&qword_2F1F10);
    sub_7C18(&qword_2F1F18, &qword_2F1F10);
    sub_26DC60();
    uint64_t v40 = v29;
    LOBYTE(v29) = v56 & 1;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v30);
    v22[v55] = (char)v29;
    sub_15E66C((uint64_t)v22, v43);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v62);
    return sub_15E6D0((uint64_t)v22);
  }
}

uint64_t sub_15E2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_B678(v2 + *(int *)(a1 + 28), (uint64_t)v5, &qword_2F1ED8);
  return sub_AD44(v5, a2);
}

uint64_t sub_15E328(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_15E360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_B678(v2 + *(int *)(a1 + 24), a2, &qword_2EA820);
}

uint64_t sub_15E38C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FlowAction.init(from:)(a1, a2);
}

uint64_t type metadata accessor for FlowAction()
{
  uint64_t result = qword_2F1F80;
  if (!qword_2F1F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_15E3F0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_15E4A4()
{
  unint64_t result = qword_2F1EE8;
  if (!qword_2F1EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1EE8);
  }
  return result;
}

uint64_t sub_15E4F8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 144);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), v4);
  return a1;
}

uint64_t sub_15E564(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_15E618()
{
  unint64_t result = qword_2F1F08;
  if (!qword_2F1F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1F08);
  }
  return result;
}

uint64_t sub_15E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15E6D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15E72C()
{
  return sub_15E824(&qword_2F1ED0, (void (*)(uint64_t))type metadata accessor for FlowAction);
}

uint64_t sub_15E774(uint64_t a1)
{
  uint64_t result = sub_15E824(&qword_2F1ED0, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_15E7CC(uint64_t a1)
{
  uint64_t result = sub_15E824(&qword_2F1F20, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_15E824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15E86C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_15E878(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_15E8C4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for FlowAction();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 44));
  return result;
}

uint64_t sub_15E8FC(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for FlowAction();
  *(unsigned char *)(a2 + *(int *)(result + 44)) = v3;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FlowAction(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26CB80();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_269CE0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EA820);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[7];
    long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    int64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *((void *)v24 + 1);
    if (v25 == 1)
    {
      long long v26 = *((_OWORD *)v24 + 7);
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      *((_OWORD *)v23 + 7) = v26;
      *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
      v23[144] = v24[144];
      long long v27 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v27;
      long long v28 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v28;
      long long v29 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v29;
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      uint64_t v30 = *((void *)v24 + 3);
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *((void *)v23 + 3) = v30;
      uint64_t v31 = *((void *)v24 + 5);
      *((void *)v23 + 4) = *((void *)v24 + 4);
      *((void *)v23 + 5) = v31;
      uint64_t v32 = *((void *)v24 + 7);
      *((void *)v23 + 6) = *((void *)v24 + 6);
      *((void *)v23 + 7) = v32;
      uint64_t v33 = *((void *)v24 + 9);
      *((void *)v23 + 8) = *((void *)v24 + 8);
      *((void *)v23 + 9) = v33;
      uint64_t v34 = *((void *)v24 + 11);
      *((void *)v23 + 10) = *((void *)v24 + 10);
      *((void *)v23 + 11) = v34;
      uint64_t v35 = *((void *)v24 + 13);
      *((void *)v23 + 12) = *((void *)v24 + 12);
      *((void *)v23 + 13) = v35;
      uint64_t v36 = *((void *)v24 + 15);
      *((void *)v23 + 14) = *((void *)v24 + 14);
      *((void *)v23 + 15) = v36;
      uint64_t v37 = *((void *)v24 + 17);
      *((void *)v23 + 16) = *((void *)v24 + 16);
      *((void *)v23 + 17) = v37;
      v23[144] = v24[144];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = a3[9];
    uint64_t v39 = a3[10];
    uint64_t v40 = (void *)((char *)v4 + v38);
    uint64_t v41 = (void *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = (void *)((char *)v4 + v39);
    uint64_t v44 = (void *)((char *)a2 + v39);
    uint64_t v45 = v44[1];
    void *v43 = *v44;
    v43[1] = v45;
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FlowAction(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_269CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[7]);
  if (*(void *)(a1 + a2[8] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FlowAction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26CB80();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_269CE0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_4A98(&qword_2EA820);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = a3[8];
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *((void *)v22 + 1);
  if (v23 == 1)
  {
    long long v24 = *((_OWORD *)v22 + 7);
    *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
    *((_OWORD *)v21 + 7) = v24;
    *((_OWORD *)v21 + 8) = *((_OWORD *)v22 + 8);
    v21[144] = v22[144];
    long long v25 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v25;
    long long v26 = *((_OWORD *)v22 + 5);
    *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
    *((_OWORD *)v21 + 5) = v26;
    long long v27 = *((_OWORD *)v22 + 1);
    *(_OWORD *)long long v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v27;
  }
  else
  {
    *(void *)long long v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v28 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v28;
    uint64_t v29 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v29;
    uint64_t v30 = *((void *)v22 + 7);
    *((void *)v21 + 6) = *((void *)v22 + 6);
    *((void *)v21 + 7) = v30;
    uint64_t v31 = *((void *)v22 + 9);
    *((void *)v21 + 8) = *((void *)v22 + 8);
    *((void *)v21 + 9) = v31;
    uint64_t v32 = *((void *)v22 + 11);
    *((void *)v21 + 10) = *((void *)v22 + 10);
    *((void *)v21 + 11) = v32;
    uint64_t v33 = *((void *)v22 + 13);
    *((void *)v21 + 12) = *((void *)v22 + 12);
    *((void *)v21 + 13) = v33;
    uint64_t v34 = *((void *)v22 + 15);
    *((void *)v21 + 14) = *((void *)v22 + 14);
    *((void *)v21 + 15) = v34;
    uint64_t v35 = *((void *)v22 + 17);
    *((void *)v21 + 16) = *((void *)v22 + 16);
    *((void *)v21 + 17) = v35;
    v21[144] = v22[144];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = a3[9];
  uint64_t v37 = a3[10];
  uint64_t v38 = (void *)((char *)a1 + v36);
  uint64_t v39 = (void *)((char *)a2 + v36);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = (void *)((char *)a1 + v37);
  uint64_t v42 = (void *)((char *)a2 + v37);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FlowAction(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_269CE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_4A98(&qword_2EA820);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  sub_16D58((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  uint64_t v19 = a3[8];
  uint64_t v20 = (uint64_t)a1 + v19;
  long long v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a1 + v19 + 8);
  uint64_t v23 = *(void *)((char *)a2 + v19 + 8);
  if (v22 == 1)
  {
    if (v23 == 1)
    {
      long long v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *(_OWORD *)(v20 + 16) = v24;
      long long v25 = *((_OWORD *)v21 + 2);
      long long v26 = *((_OWORD *)v21 + 3);
      long long v27 = *((_OWORD *)v21 + 5);
      *(_OWORD *)(v20 + 64) = *((_OWORD *)v21 + 4);
      *(_OWORD *)(v20 + 80) = v27;
      *(_OWORD *)(v20 + 32) = v25;
      *(_OWORD *)(v20 + 48) = v26;
      long long v28 = *((_OWORD *)v21 + 6);
      long long v29 = *((_OWORD *)v21 + 7);
      long long v30 = *((_OWORD *)v21 + 8);
      *(unsigned char *)(v20 + 144) = v21[144];
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 128) = v30;
      *(_OWORD *)(v20 + 96) = v28;
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *(void *)(v20 + 8) = *((void *)v21 + 1);
      *(void *)(v20 + 16) = *((void *)v21 + 2);
      *(void *)(v20 + 24) = *((void *)v21 + 3);
      *(void *)(v20 + 32) = *((void *)v21 + 4);
      *(void *)(v20 + 40) = *((void *)v21 + 5);
      *(void *)(v20 + 48) = *((void *)v21 + 6);
      *(void *)(v20 + 56) = *((void *)v21 + 7);
      *(void *)(v20 + 64) = *((void *)v21 + 8);
      *(void *)(v20 + 72) = *((void *)v21 + 9);
      *(void *)(v20 + 80) = *((void *)v21 + 10);
      *(void *)(v20 + 88) = *((void *)v21 + 11);
      *(void *)(v20 + 96) = *((void *)v21 + 12);
      *(void *)(v20 + 104) = *((void *)v21 + 13);
      *(void *)(v20 + 112) = *((void *)v21 + 14);
      *(void *)(v20 + 120) = *((void *)v21 + 15);
      *(void *)(v20 + 128) = *((void *)v21 + 16);
      *(void *)(v20 + 136) = *((void *)v21 + 17);
      *(unsigned char *)(v20 + 144) = v21[144];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v23 == 1)
  {
    sub_15F5E8(v20);
    long long v31 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v31;
    long long v32 = *((_OWORD *)v21 + 5);
    long long v34 = *((_OWORD *)v21 + 2);
    long long v33 = *((_OWORD *)v21 + 3);
    *(_OWORD *)(v20 + 64) = *((_OWORD *)v21 + 4);
    *(_OWORD *)(v20 + 80) = v32;
    *(_OWORD *)(v20 + 32) = v34;
    *(_OWORD *)(v20 + 48) = v33;
    long long v36 = *((_OWORD *)v21 + 7);
    long long v35 = *((_OWORD *)v21 + 8);
    long long v37 = *((_OWORD *)v21 + 6);
    *(unsigned char *)(v20 + 144) = v21[144];
    *(_OWORD *)(v20 + 112) = v36;
    *(_OWORD *)(v20 + 128) = v35;
    *(_OWORD *)(v20 + 96) = v37;
  }
  else
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = *((void *)v21 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 16) = *((void *)v21 + 2);
    *(void *)(v20 + 24) = *((void *)v21 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 32) = *((void *)v21 + 4);
    *(void *)(v20 + 40) = *((void *)v21 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 48) = *((void *)v21 + 6);
    *(void *)(v20 + 56) = *((void *)v21 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 64) = *((void *)v21 + 8);
    *(void *)(v20 + 72) = *((void *)v21 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 80) = *((void *)v21 + 10);
    *(void *)(v20 + 88) = *((void *)v21 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 96) = *((void *)v21 + 12);
    *(void *)(v20 + 104) = *((void *)v21 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 112) = *((void *)v21 + 14);
    *(void *)(v20 + 120) = *((void *)v21 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v20 + 128) = *((void *)v21 + 16);
    *(void *)(v20 + 136) = *((void *)v21 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v20 + 144) = v21[144];
  }
  uint64_t v38 = a3[9];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[10];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_15F5E8(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for FlowAction(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_269CE0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_4A98(&qword_2EA820);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  long long v21 = (char *)a1 + v17;
  uint64_t v22 = (char *)a2 + v17;
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  long long v24 = *((_OWORD *)v22 + 5);
  *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
  *((_OWORD *)v21 + 5) = v24;
  long long v25 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v25;
  v21[144] = v22[144];
  long long v26 = *((_OWORD *)v22 + 8);
  long long v27 = *((_OWORD *)v22 + 6);
  *((_OWORD *)v21 + 7) = *((_OWORD *)v22 + 7);
  *((_OWORD *)v21 + 8) = v26;
  *((_OWORD *)v21 + 6) = v27;
  uint64_t v28 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *assignWithTake for FlowAction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_269CE0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = sub_4A98(&qword_2EA820);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1 + v20);
  *((void *)v21 + 4) = *((void *)v22 + 4);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = (uint64_t)a1 + v24;
  long long v26 = (char *)a2 + v24;
  if (*(void *)((char *)a1 + v24 + 8) != 1)
  {
    uint64_t v27 = *((void *)v26 + 1);
    if (v27 != 1)
    {
      *(void *)uint64_t v25 = *(void *)v26;
      *(void *)(v25 + 8) = v27;
      swift_bridgeObjectRelease();
      uint64_t v32 = *((void *)v26 + 3);
      *(void *)(v25 + 16) = *((void *)v26 + 2);
      *(void *)(v25 + 24) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *((void *)v26 + 5);
      *(void *)(v25 + 32) = *((void *)v26 + 4);
      *(void *)(v25 + 40) = v33;
      swift_bridgeObjectRelease();
      uint64_t v34 = *((void *)v26 + 7);
      *(void *)(v25 + 48) = *((void *)v26 + 6);
      *(void *)(v25 + 56) = v34;
      swift_bridgeObjectRelease();
      uint64_t v35 = *((void *)v26 + 9);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      *(void *)(v25 + 72) = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *((void *)v26 + 11);
      *(void *)(v25 + 80) = *((void *)v26 + 10);
      *(void *)(v25 + 88) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *((void *)v26 + 13);
      *(void *)(v25 + 96) = *((void *)v26 + 12);
      *(void *)(v25 + 104) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = *((void *)v26 + 15);
      *(void *)(v25 + 112) = *((void *)v26 + 14);
      *(void *)(v25 + 120) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *((void *)v26 + 17);
      *(void *)(v25 + 128) = *((void *)v26 + 16);
      *(void *)(v25 + 136) = v39;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v25 + 144) = v26[144];
      goto LABEL_12;
    }
    sub_15F5E8(v25);
  }
  long long v28 = *((_OWORD *)v26 + 7);
  *(_OWORD *)(v25 + 96) = *((_OWORD *)v26 + 6);
  *(_OWORD *)(v25 + 112) = v28;
  *(_OWORD *)(v25 + 128) = *((_OWORD *)v26 + 8);
  *(unsigned char *)(v25 + 144) = v26[144];
  long long v29 = *((_OWORD *)v26 + 3);
  *(_OWORD *)(v25 + 32) = *((_OWORD *)v26 + 2);
  *(_OWORD *)(v25 + 48) = v29;
  long long v30 = *((_OWORD *)v26 + 5);
  *(_OWORD *)(v25 + 64) = *((_OWORD *)v26 + 4);
  *(_OWORD *)(v25 + 80) = v30;
  long long v31 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v31;
LABEL_12:
  uint64_t v40 = a3[9];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[10];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15FB64);
}

uint64_t sub_15FB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_26CB80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EA820);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FlowAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15FCA8);
}

uint64_t sub_15FCA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_26CB80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EA820);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_15FDD8()
{
  sub_26CB80();
  if (v0 <= 0x3F)
  {
    sub_141A10();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FlowAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15FFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowAction.CodingKeys()
{
  return &type metadata for FlowAction.CodingKeys;
}

unint64_t sub_15FFDC()
{
  unint64_t result = qword_2F1FD0;
  if (!qword_2F1FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1FD0);
  }
  return result;
}

unint64_t sub_160034()
{
  unint64_t result = qword_2F1FD8;
  if (!qword_2F1FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1FD8);
  }
  return result;
}

unint64_t sub_16008C()
{
  unint64_t result = qword_2F1FE0;
  if (!qword_2F1FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1FE0);
  }
  return result;
}

uint64_t sub_1600E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446B63696C63 && a2 == 0xE900000000000061 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000028A720 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x61746E6573657270 && a2 == 0xEC0000006E6F6974 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000000028A740)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t NavigationActionMenuButtonView.init(menuIconKind:menus:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a1;
  uint64_t v6 = type metadata accessor for NavigationActionMenuButtonView(0);
  uint64_t v7 = (uint64_t *)(a3 + *(int *)(v6 + 24));
  uint64_t *v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3 + *(int *)(v6 + 28);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v8 = result;
  *(unsigned char *)(v8 + 8) = 0;
  *(unsigned char *)a3 = v5;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t type metadata accessor for NavigationActionMenuButtonView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F20D0);
}

uint64_t NavigationActionMenuButtonView.body.getter()
{
  uint64_t v1 = type metadata accessor for NavigationActionMenuButtonView(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  sub_164BD4(v0, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NavigationActionMenuButtonView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_164DB4((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, type metadata accessor for NavigationActionMenuButtonView);
  sub_4A98(&qword_2F1FE8);
  sub_26A0F0();
  sub_26A0D0();
  sub_162F88();
  sub_163414(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_163414(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_160738@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v173 = a1;
  uint64_t v178 = a3;
  uint64_t v177 = sub_26AB80();
  uint64_t v164 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v163 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_26AC00();
  uint64_t v153 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v150 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_26AAB0();
  uint64_t v143 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v141 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_4A98(&qword_2F2060);
  uint64_t v140 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v139 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_4A98(&qword_2F2058);
  uint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v144 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_4A98(&qword_2F2050);
  uint64_t v149 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v147 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_4A98(&qword_2F21E0);
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v151 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = (void *)sub_4A98(&qword_2F2040);
  __chkstk_darwin(v172);
  uint64_t v157 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_4A98(&qword_2F2038);
  uint64_t v160 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  v159 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_4A98(&qword_2F21E8);
  uint64_t v162 = *(void *)(v176 - 8);
  uint64_t v13 = __chkstk_darwin(v176);
  uint64_t v158 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v161 = (char *)&v123 - v15;
  uint64_t v171 = sub_4A98(&qword_2F21F0);
  __chkstk_darwin(v171);
  v174 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26A220();
  __chkstk_darwin(v17 - 8);
  v168 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26B600();
  uint64_t v166 = *(void *)(v19 - 8);
  uint64_t v167 = v19;
  __chkstk_darwin(v19);
  v165 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  __chkstk_darwin(v127);
  uint64_t v22 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_4A98(&qword_2EB038);
  __chkstk_darwin(v125);
  uint64_t v24 = (uint64_t *)((char *)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = sub_26C270();
  uint64_t v25 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v27 = (char *)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_4A98(&qword_2F2028);
  __chkstk_darwin(v124);
  long long v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_4A98(&qword_2F2010);
  __chkstk_darwin(v129);
  long long v31 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_4A98(&qword_2F2008);
  uint64_t v130 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v128 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_4A98(&qword_2F21F8);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v131 = (char *)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_4A98(&qword_2F1FF8);
  __chkstk_darwin(v169);
  uint64_t v136 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_4A98(&qword_2F2200);
  uint64_t v138 = *(void *)(v170 - 8);
  uint64_t v35 = __chkstk_darwin(v170);
  uint64_t v135 = (char *)&v123 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v137 = (char *)&v123 - v37;
  uint64_t v38 = a2;
  uint64_t v39 = &a2[*(int *)(type metadata accessor for NavigationActionMenuButtonView(0) + 28)];
  uint64_t v40 = *(void *)v39;
  LOBYTE(a2) = v39[8];
  sub_10E0C(*(void *)v39, (char)a2);
  char v41 = sub_41888(v40, (char)a2);
  uint64_t v42 = sub_C374(v40, (char)a2);
  if (v41)
  {
    char v123 = v38;
    char v85 = *v38;
    sub_161EA8((uint64_t)v27);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v87 = v126;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)v24 + *(int *)(v125 + 28), v27, v126);
    *uint64_t v24 = KeyPath;
    sub_B678((uint64_t)v24, (uint64_t)&v29[*(int *)(v124 + 36)], &qword_2EB038);
    *long long v29 = v85;
    sub_B6DC((uint64_t)v24, &qword_2EB038);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v87);
    *(void *)uint64_t v22 = swift_getKeyPath();
    v22[8] = 0;
    uint64_t v88 = v127;
    long long v89 = (uint64_t *)&v22[*(int *)(v127 + 20)];
    *long long v89 = swift_getKeyPath();
    sub_4A98(&qword_2EA970);
    swift_storeEnumTagMultiPayload();
    v22[*(int *)(v88 + 24)] = 1;
    sub_B678((uint64_t)v29, (uint64_t)v31, &qword_2F2028);
    uint64_t v90 = v129;
    sub_164DB4((uint64_t)v22, (uint64_t)&v31[*(int *)(v129 + 36)], (uint64_t (*)(void))type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier);
    uint64_t v91 = sub_B6DC((uint64_t)v29, &qword_2F2028);
    __chkstk_darwin(v91);
    uint64_t v92 = (uint64_t)v31;
    Swift::String v93 = v123;
    *(&v123 - 2) = v123;
    uint64_t v94 = type metadata accessor for MenuContentView(0);
    unint64_t v95 = sub_1632C8();
    uint64_t v96 = sub_163414(&qword_2F2030, (void (*)(uint64_t))type metadata accessor for MenuContentView);
    char v97 = v128;
    sub_26BCA0();
    sub_B6DC(v92, &qword_2F2010);
    char v98 = v165;
    sub_26B5E0();
    uint64_t v179 = v90;
    uint64_t v180 = v94;
    unint64_t v181 = v95;
    uint64_t v182 = v96;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v100 = v131;
    uint64_t v101 = v132;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v98, v167);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v97, v101);
    char v102 = v93;
    LOBYTE(v179) = *v93;
    SymbolImage.Kind.accessibilityLocalizable.getter();
    uint64_t v103 = v173;
    sub_C224(v173, (uint64_t)&v179);
    uint64_t v104 = sub_26BA00();
    uint64_t v106 = v105;
    LOBYTE(v98) = v107 & 1;
    uint64_t v179 = v101;
    uint64_t v180 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v108 = (uint64_t)v136;
    uint64_t v109 = v134;
    sub_26BE30();
    sub_3A380(v104, v106, (char)v98);
    swift_bridgeObjectRelease();
    uint64_t v110 = (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v100, v109);
    __chkstk_darwin(v110);
    *(&v123 - 2) = v102;
    *(&v123 - 1) = (unsigned char *)v103;
    uint64_t v111 = sub_4A98(&qword_2ECC98);
    unint64_t v112 = sub_16313C();
    uint64_t v113 = sub_7C18(&qword_2ECCD0, &qword_2ECC98);
    uint64_t v114 = v135;
    uint64_t v115 = v169;
    sub_26BF60();
    sub_B6DC(v108, &qword_2F1FF8);
    uint64_t v116 = v138;
    uint64_t v117 = v137;
    uint64_t v118 = v114;
    uint64_t v119 = v170;
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v137, v118, v170);
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v174, v117, v119);
    swift_storeEnumTagMultiPayload();
    uint64_t v179 = v115;
    uint64_t v180 = v111;
    unint64_t v181 = v112;
    uint64_t v182 = v113;
    swift_getOpaqueTypeConformance2();
    unint64_t v120 = sub_16345C();
    uint64_t v179 = (uint64_t)v172;
    uint64_t v180 = v111;
    unint64_t v181 = v120;
    uint64_t v182 = v113;
    uint64_t v121 = swift_getOpaqueTypeConformance2();
    uint64_t v122 = sub_163414(&qword_2F03B8, (void (*)(uint64_t))&type metadata accessor for LiftHoverEffect);
    uint64_t v179 = v175;
    uint64_t v180 = v177;
    unint64_t v181 = v121;
    uint64_t v182 = v122;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v117, v119);
  }
  else
  {
    uint64_t v43 = __chkstk_darwin(v42);
    *(&v123 - 2) = v38;
    __chkstk_darwin(v43);
    *(&v123 - 2) = v38;
    sub_4A98(&qword_2F2208);
    type metadata accessor for MenuContentView(0);
    sub_165004();
    sub_163414(&qword_2F2030, (void (*)(uint64_t))type metadata accessor for MenuContentView);
    uint64_t v44 = v139;
    sub_26B9A0();
    uint64_t v45 = v141;
    sub_26AAA0();
    uint64_t v46 = sub_7C18(&qword_2F2068, &qword_2F2060);
    uint64_t v47 = sub_163414(&qword_2F2070, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
    uint64_t v48 = v144;
    uint64_t v49 = v142;
    uint64_t v50 = v145;
    sub_26C0A0();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v45, v50);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v44, v49);
    uint64_t v51 = v150;
    sub_26ABF0();
    uint64_t v179 = v49;
    uint64_t v180 = v50;
    unint64_t v181 = v46;
    uint64_t v182 = v47;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    uint64_t v53 = sub_163414(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    uint64_t v54 = v147;
    uint64_t v55 = v148;
    uint64_t v56 = v156;
    sub_26BC70();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v51, v56);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v48, v55);
    uint64_t v57 = v165;
    sub_26B5E0();
    uint64_t v179 = v55;
    uint64_t v180 = v56;
    unint64_t v181 = v52;
    uint64_t v182 = v53;
    uint64_t v58 = swift_getOpaqueTypeConformance2();
    uint64_t v59 = v151;
    uint64_t v60 = v152;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v57, v167);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v54, v60);
    LOBYTE(v179) = *v38;
    SymbolImage.Kind.accessibilityLocalizable.getter();
    uint64_t v61 = v173;
    sub_C224(v173, (uint64_t)&v179);
    uint64_t v62 = sub_26BA00();
    uint64_t v64 = v63;
    LOBYTE(v55) = v65 & 1;
    uint64_t v179 = v60;
    uint64_t v180 = v58;
    swift_getOpaqueTypeConformance2();
    uint64_t v66 = (uint64_t)v157;
    uint64_t v67 = v155;
    sub_26BE30();
    sub_3A380(v62, v64, v55);
    swift_bridgeObjectRelease();
    uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v59, v67);
    __chkstk_darwin(v68);
    *(&v123 - 2) = v38;
    *(&v123 - 1) = (unsigned char *)v61;
    uint64_t v69 = sub_4A98(&qword_2ECC98);
    unint64_t v70 = sub_16345C();
    uint64_t v71 = sub_7C18(&qword_2ECCD0, &qword_2ECC98);
    int v72 = v159;
    uint64_t v73 = (uint64_t)v172;
    uint64_t v173 = v69;
    sub_26BF60();
    sub_B6DC(v66, &qword_2F2040);
    char v74 = v163;
    sub_26AD20();
    uint64_t v179 = v73;
    uint64_t v180 = v69;
    unint64_t v181 = v70;
    uint64_t v182 = v71;
    v172 = &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>;
    uint64_t v75 = swift_getOpaqueTypeConformance2();
    uint64_t v76 = sub_163414(&qword_2F03B8, (void (*)(uint64_t))&type metadata accessor for LiftHoverEffect);
    uint64_t v77 = v158;
    uint64_t v78 = v175;
    uint64_t v79 = v177;
    sub_26BCC0();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v74, v79);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v72, v78);
    uint64_t v80 = v162;
    uint64_t v81 = v161;
    uint64_t v82 = v176;
    (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v161, v77, v176);
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v174, v81, v82);
    swift_storeEnumTagMultiPayload();
    unint64_t v83 = sub_16313C();
    uint64_t v179 = v169;
    uint64_t v180 = v173;
    unint64_t v181 = v83;
    uint64_t v182 = v71;
    swift_getOpaqueTypeConformance2();
    uint64_t v179 = v78;
    uint64_t v180 = v79;
    unint64_t v181 = v75;
    uint64_t v182 = v76;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  }
}

uint64_t sub_161EA8@<X0>(uint64_t a1@<X8>)
{
  switch(*v1)
  {
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v3 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v3) {
LABEL_5:
      }
        uint64_t v4 = (unsigned int *)&enum case for Image.Scale.large(_:);
      else {
        uint64_t v4 = (unsigned int *)&enum case for Image.Scale.medium(_:);
      }
      uint64_t v5 = *v4;
      uint64_t v6 = sub_26C270();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
      return v7(a1, v5, v6);
  }
}

uint64_t sub_162058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  type metadata accessor for ProfileRestrictions();
  sub_163414((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  swift_bridgeObjectRetain();
  *(void *)a2 = sub_26AD70();
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(unsigned char *)(a2 + 56) = 0;
  uint64_t v5 = type metadata accessor for MenuContentView(0);
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(v5 + 24));
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EBC98);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)(a2 + *(int *)(v5 + 28)) = v3;
  return result;
}

uint64_t sub_16213C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v34 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier() - 8;
  __chkstk_darwin(v34);
  uint64_t v33 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_4A98(&qword_2EB038);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_26C270();
  uint64_t v8 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F2028);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F2220);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *a1;
  sub_161EA8((uint64_t)v10);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = (char *)v7 + *(int *)(v5 + 36);
  uint64_t v22 = v32;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v10, v32);
  uint64_t *v7 = KeyPath;
  sub_B678((uint64_t)v7, (uint64_t)&v14[*(int *)(v12 + 44)], &qword_2EB038);
  unsigned char *v14 = v19;
  sub_B6DC((uint64_t)v7, &qword_2EB038);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  uint64_t v23 = swift_getKeyPath();
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2F2028);
  uint64_t v24 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v24 = v23;
  v24[8] = 2;
  sub_B6DC((uint64_t)v14, &qword_2F2028);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = (uint64_t)v33;
  uint64_t v27 = v34;
  *uint64_t v33 = v25;
  *(unsigned char *)(v26 + 8) = 0;
  uint64_t v28 = (uint64_t *)(v26 + *(int *)(v27 + 28));
  *uint64_t v28 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v26 + *(int *)(v27 + 32)) = 1;
  uint64_t v29 = v35;
  sub_B678((uint64_t)v18, v35, &qword_2F2220);
  uint64_t v30 = sub_4A98(&qword_2F2208);
  sub_164DB4(v26, v29 + *(int *)(v30 + 36), (uint64_t (*)(void))type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier);
  return sub_B6DC((uint64_t)v18, &qword_2F2220);
}

uint64_t sub_1624B4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26A220();
  __chkstk_darwin(v6 - 8);
  LOBYTE(a1) = *a1;
  uint64_t v7 = sub_26C250();
  v14[0] = (_BYTE)a1;
  SymbolImage.Kind.accessibilityLocalizable.getter();
  sub_C224(a2, (uint64_t)v14);
  uint64_t v8 = sub_26BA00();
  uint64_t v10 = v9;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  LOBYTE(a1) = v11 & 1;
  *(void *)(a3 + 16) = v9;
  *(unsigned char *)(a3 + 24) = v11 & 1;
  *(void *)(a3 + 32) = v12;
  swift_retain();
  sub_45370(v8, v10, (char)a1);
  swift_bridgeObjectRetain();
  sub_3A380(v8, v10, (char)a1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1626BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1 - 8);
  sub_164BD4(v1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NavigationActionMenuButtonView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_164DB4((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, type metadata accessor for NavigationActionMenuButtonView);
  sub_4A98(&qword_2F1FE8);
  sub_26A0F0();
  sub_26A0D0();
  sub_162F88();
  sub_163414(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_163414(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_1628C8(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EDF88);
  __chkstk_darwin(v2);
  uint64_t v6 = a1;
  sub_162BC8(a1, (uint64_t)&v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_4A98(&qword_2EEE78);
  sub_164B28();
  sub_16521C((unint64_t *)&qword_2EEE70, &qword_2EEE78, (void (*)(void))sub_C1820);
  return sub_26C540();
}

uint64_t sub_1629D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarActionMenu(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  v8[1] = *(void *)(a1 + *(int *)(__chkstk_darwin(v2 - 8) + 32));
  sub_164BD4(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ToolbarActionMenu);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_164DB4((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for ToolbarActionMenu);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EEBE0);
  sub_4A98(&qword_2EEBE8);
  sub_7C18(&qword_2EEBF0, &qword_2EEBE0);
  sub_C1820();
  sub_163414(&qword_2EEC28, (void (*)(uint64_t))type metadata accessor for ToolbarActionMenuItem);
  return sub_26C500();
}

uint64_t sub_162BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_26A160();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = type metadata accessor for ToolbarActionMenu(0);
  sub_B678(a1 + *(int *)(v17 + 20), (uint64_t)v9, &qword_2EA0C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_B6DC((uint64_t)v9, &qword_2EA0C0);
    uint64_t v18 = 1;
    uint64_t v19 = v23;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v20 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23, v6, v3);
    uint64_t v18 = 0;
    uint64_t v19 = v20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v19, v18, 1, v3);
}

uint64_t sub_162E78()
{
  return sub_26C500();
}

unint64_t sub_162F88()
{
  unint64_t result = qword_2F1FF0;
  if (!qword_2F1FF0)
  {
    sub_7B0C(&qword_2F1FE8);
    sub_7B0C(&qword_2F1FF8);
    sub_7B0C(&qword_2ECC98);
    sub_16313C();
    sub_7C18(&qword_2ECCD0, &qword_2ECC98);
    swift_getOpaqueTypeConformance2();
    sub_7B0C(&qword_2F2038);
    sub_26AB80();
    sub_7B0C(&qword_2F2040);
    sub_16345C();
    swift_getOpaqueTypeConformance2();
    sub_163414(&qword_2F03B8, (void (*)(uint64_t))&type metadata accessor for LiftHoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1FF0);
  }
  return result;
}

unint64_t sub_16313C()
{
  unint64_t result = qword_2F2000;
  if (!qword_2F2000)
  {
    sub_7B0C(&qword_2F1FF8);
    sub_7B0C(&qword_2F2008);
    sub_7B0C(&qword_2F2010);
    type metadata accessor for MenuContentView(255);
    sub_1632C8();
    sub_163414(&qword_2F2030, (void (*)(uint64_t))type metadata accessor for MenuContentView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_163414((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2000);
  }
  return result;
}

uint64_t type metadata accessor for MenuContentView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2178);
}

unint64_t sub_1632C8()
{
  unint64_t result = qword_2F2018;
  if (!qword_2F2018)
  {
    sub_7B0C(&qword_2F2010);
    sub_163374();
    sub_163414((unint64_t *)&qword_2ECD18, (void (*)(uint64_t))type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2018);
  }
  return result;
}

unint64_t sub_163374()
{
  unint64_t result = qword_2F2020;
  if (!qword_2F2020)
  {
    sub_7B0C(&qword_2F2028);
    sub_68F80();
    sub_7C18((unint64_t *)&qword_2EB0D8, &qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2020);
  }
  return result;
}

uint64_t sub_163414(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_16345C()
{
  unint64_t result = qword_2F2048;
  if (!qword_2F2048)
  {
    sub_7B0C(&qword_2F2040);
    sub_7B0C(&qword_2F2050);
    sub_7B0C(&qword_2F2058);
    sub_26AC00();
    sub_7B0C(&qword_2F2060);
    sub_26AAB0();
    sub_7C18(&qword_2F2068, &qword_2F2060);
    sub_163414(&qword_2F2070, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
    swift_getOpaqueTypeConformance2();
    sub_163414(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_163414((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2048);
  }
  return result;
}

uint64_t sub_163670()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationActionMenuButtonView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_bridgeObjectRetain();
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_10E0C(*(void *)v14, v16);
    *(void *)uint64_t v13 = v15;
    v13[8] = v16;
  }
  return v4;
}

uint64_t destroy for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_C374(v7, v8);
}

uint64_t initializeWithCopy for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (void *)(a2 + v6);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_10E0C(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  return a1;
}

uint64_t assignWithCopy for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_10E0C(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  sub_C374(v15, v16);
  return a1;
}

uint64_t initializeWithTake for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t assignWithTake for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (const void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    uint64_t v9 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  sub_C374(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_163D34);
}

uint64_t sub_163D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EAB18);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NavigationActionMenuButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_163DFC);
}

uint64_t sub_163DFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EAB18);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_163EA8()
{
  sub_164A0C(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_163F70()
{
  return sub_7C18(&qword_2F2110, &qword_2F2118);
}

char *sub_163FAC(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a2 + 2;
    char v9 = *((unsigned char *)a2 + 56);
    uint64_t v10 = v5;
    if (v9)
    {
      uint64_t v11 = a1 + 16;
      uint64_t v12 = a2[5];
      if (v12)
      {
        uint64_t v13 = a2[6];
        *((void *)a1 + 5) = v12;
        *((void *)a1 + 6) = v13;
        (**((void (***)(_OWORD *, char **))v12 - 1))(v11, v8);
      }
      else
      {
        long long v14 = *((_OWORD *)v8 + 1);
        *uint64_t v11 = *(_OWORD *)v8;
        *((_OWORD *)a1 + 2) = v14;
        *((void *)a1 + 6) = v8[4];
      }
      a1[56] = 1;
    }
    else
    {
      *((void *)a1 + 2) = *v8;
      a1[56] = 0;
      swift_retain();
    }
    uint64_t v15 = *(int *)(a3 + 24);
    char v16 = &a1[v15];
    uint64_t v17 = (char **)((char *)a2 + v15);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_26A2C0();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *(void *)char v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)&a1[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_164160(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(void *)(a1 + 40)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_16423C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2 + 16;
  char v9 = *(unsigned char *)(a2 + 56);
  id v10 = v6;
  if (v9)
  {
    uint64_t v11 = (_OWORD *)(a1 + 16);
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      (**(void (***)(_OWORD *, uint64_t))(v12 - 8))(v11, v8);
    }
    else
    {
      long long v14 = *(_OWORD *)(v8 + 16);
      *uint64_t v11 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 32) = v14;
      *(void *)(a1 + 48) = *(void *)(v8 + 32);
    }
    *(unsigned char *)(a1 + 56) = 1;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v8;
    *(unsigned char *)(a1 + 56) = 0;
    swift_retain();
  }
  uint64_t v15 = *(int *)(a3 + 24);
  char v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_26A2C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1643A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    char v9 = (long long *)(a2 + 16);
    sub_B6DC(a1 + 16, &qword_2EBCA0);
    if (*(unsigned char *)(a2 + 56))
    {
      uint64_t v10 = *(void *)(a2 + 40);
      if (v10)
      {
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      }
      else
      {
        long long v11 = *v9;
        long long v12 = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v11;
        *(_OWORD *)(a1 + 32) = v12;
      }
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)v9;
      *(unsigned char *)(a1 + 56) = 0;
      swift_retain();
    }
    uint64_t v13 = *(int *)(a3 + 24);
    long long v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_B6DC(a1 + v13, &qword_2EBC98);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_164550(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_164650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    sub_B6DC(a1 + 16, &qword_2EBCA0);
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    uint64_t v8 = *(int *)(a3 + 24);
    char v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EBC98);
    uint64_t v11 = sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A2C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_164790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1647A4);
}

uint64_t sub_1647A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2F12C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_16486C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_164880);
}

uint64_t sub_164880(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2F12C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_164944()
{
  sub_164A0C(319, (unint64_t *)&qword_2EDA90, (void (*)(uint64_t))&type metadata accessor for OpaqueMetricsFieldsContext);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_164A0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_164A60()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_164A7C()
{
  unint64_t result = qword_2F21C8;
  if (!qword_2F21C8)
  {
    sub_7B0C(&qword_2F21B8);
    sub_164B28();
    sub_16521C((unint64_t *)&qword_2EEE70, &qword_2EEE78, (void (*)(void))sub_C1820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F21C8);
  }
  return result;
}

unint64_t sub_164B28()
{
  unint64_t result = qword_2F21D0;
  if (!qword_2F21D0)
  {
    sub_7B0C(&qword_2EDF88);
    sub_163414((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F21D0);
  }
  return result;
}

uint64_t sub_164BCC()
{
  return sub_1629D8(*(void *)(v0 + 16));
}

uint64_t sub_164BD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_164C3C()
{
  uint64_t v1 = (int *)type metadata accessor for ToolbarActionMenu(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[5];
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v1[7])) {
    swift_release();
  }
  if (*(void *)(v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_164DB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_164E20()
{
  uint64_t v1 = type metadata accessor for NavigationActionMenuButtonView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v2 + *(int *)(v1 + 28)), *(unsigned char *)(v2 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t sub_164F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NavigationActionMenuButtonView(0) - 8);
  uint64_t v6 = (unsigned char *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_160738(a1, v6, a2);
}

uint64_t sub_164FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_162058(*(void *)(v1 + 16), a1);
}

uint64_t sub_164FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_16213C(*(char **)(v1 + 16), a1);
}

unint64_t sub_165004()
{
  unint64_t result = qword_2F2210;
  if (!qword_2F2210)
  {
    sub_7B0C(&qword_2F2208);
    sub_1650B0();
    sub_163414((unint64_t *)&qword_2ECD18, (void (*)(uint64_t))type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2210);
  }
  return result;
}

unint64_t sub_1650B0()
{
  unint64_t result = qword_2F2218;
  if (!qword_2F2218)
  {
    sub_7B0C(&qword_2F2220);
    sub_163374();
    sub_7C18(&qword_2F2228, &qword_2F2230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2218);
  }
  return result;
}

uint64_t sub_165168@<X0>(uint64_t a1@<X8>)
{
  return sub_1624B4(*(unsigned char **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_16518C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFC0();
  *a1 = result;
  return result;
}

uint64_t sub_1651B8()
{
  return sub_26AFD0();
}

uint64_t sub_1651E0()
{
  return sub_16521C(&qword_2F2238, &qword_2F2240, (void (*)(void))sub_164A7C);
}

uint64_t sub_16521C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ThumbOpinionButtonViewModel.init(state:assetInfo:isLikedButton:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v6;
  *(unsigned char *)(a4 + 16) = v7;
  uint64_t result = sub_AD44(a2, a4 + 24);
  *(unsigned char *)(a4 + 64) = a3;
  return result;
}

uint64_t ThumbOpinionButton.init(viewModel:nextAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v63 = type metadata accessor for DelayAction();
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_269840();
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  char v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v8 - 8);
  uint64_t v54 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v52);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for AssetAction(0);
  __chkstk_darwin(v59);
  uint64_t v53 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_26CB80();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_26CBC0();
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v51 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ThumbOpinionButton();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = v17;
  uint64_t v62 = v17;
  *(void *)(a3 + v18) = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)(a3 + *(int *)(v19 + 24));
  uint64_t v60 = a3;
  *uint64_t v20 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  sub_165B54(a1, a3);
  LOBYTE(v19) = *(unsigned char *)(a1 + 64);
  sub_26CB50();
  sub_165B54(a1, (uint64_t)&v68);
  uint64_t v21 = swift_allocObject();
  long long v22 = v71;
  *(_OWORD *)(v21 + 48) = v70;
  *(_OWORD *)(v21 + 64) = v22;
  *(unsigned char *)(v21 + 80) = v72;
  long long v23 = v69;
  *(_OWORD *)(v21 + 16) = v68;
  *(_OWORD *)(v21 + 32) = v23;
  *(unsigned char *)(v21 + 81) = v19;
  uint64_t v24 = (uint64_t)v15;
  sub_26CBA0();
  sub_4ADC((void *)(a1 + 24), *(void *)(a1 + 48));
  uint64_t v50 = sub_269DB0();
  uint64_t v49 = v25;
  sub_4ADC((void *)(a1 + 24), *(void *)(a1 + 48));
  uint64_t v26 = sub_269DB0();
  uint64_t v48 = v27;
  sub_4ADC((void *)(a1 + 24), *(void *)(a1 + 48));
  LOBYTE(a3) = sub_269F30();
  sub_26CB50();
  uint64_t v28 = (uint64_t)v11;
  *uint64_t v11 = v19;
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = sub_269CE0();
  uint64_t v30 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v54, 1, 1, v29);
  sub_269830();
  uint64_t v31 = sub_269820();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v55);
  uint64_t v34 = v53;
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v31, v33, v50, v49, v26, v48, a3 & 1, v24, v53, v28, v30);
  sub_4ADC((void *)(a1 + 24), *(void *)(a1 + 48));
  uint64_t v35 = sub_269DB0();
  *(void *)&long long v68 = 0xD000000000000010;
  *((void *)&v68 + 1) = 0x800000000028A760;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  uint64_t v76 = v35;
  uint64_t v77 = v36;
  char v78 = 2;
  sub_555C((uint64_t)&v68);
  uint64_t v37 = (uint64_t)v61;
  sub_26CB50();
  uint64_t v38 = v63;
  *(void *)(v37 + *(int *)(v63 + 20)) = 0x3FD999999999999ALL;
  sub_26CB50();
  sub_4A98(&qword_2EADC8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_26FF00;
  uint64_t v40 = v57;
  *(void *)(v39 + 56) = v57;
  *(void *)(v39 + 64) = &protocol witness table for ClosureAction;
  char v41 = sub_CA1C((uint64_t *)(v39 + 32));
  uint64_t v42 = v58;
  uint64_t v43 = v51;
  (*(void (**)(uint64_t *, char *, uint64_t))(v58 + 16))(v41, v51, v40);
  *(void *)(v39 + 96) = v59;
  *(void *)(v39 + 104) = sub_168CF8(&qword_2ED9D0, (void (*)(uint64_t))type metadata accessor for AssetAction);
  uint64_t v44 = sub_CA1C((uint64_t *)(v39 + 72));
  sub_168C90(v34, (uint64_t)v44, type metadata accessor for AssetAction);
  *(void *)(v39 + 136) = v38;
  *(void *)(v39 + 144) = sub_168CF8(&qword_2F2248, (void (*)(uint64_t))type metadata accessor for DelayAction);
  uint64_t v45 = sub_CA1C((uint64_t *)(v39 + 112));
  sub_168C90(v37, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for DelayAction);
  uint64_t v46 = v64;
  sub_C224(v64, v39 + 152);
  uint64_t v66 = sub_26CC40();
  uint64_t v67 = &protocol witness table for CompoundAction;
  sub_CA1C((uint64_t *)&v65);
  sub_26CC30();
  _s7BooksUI13AnyPagedFrameVwxx_0(v46);
  sub_168D40(v37, (uint64_t (*)(void))type metadata accessor for DelayAction);
  sub_168D40(v34, type metadata accessor for AssetAction);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
  sub_165C54(a1);
  return sub_AD44(&v65, v60 + *(int *)(v62 + 28));
}

uint64_t type metadata accessor for ThumbOpinionButton()
{
  uint64_t result = qword_2F22D0;
  if (!qword_2F22D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_165B54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_165B8C()
{
  return sub_26C490();
}

uint64_t sub_165BEC()
{
  swift_release();
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_165C34()
{
  return sub_165B8C();
}

uint64_t sub_165C54(uint64_t a1)
{
  return a1;
}

uint64_t ThumbOpinionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_26AC00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  uint64_t v38 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269BA0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for ThumbOpinionButton();
  uint64_t v7 = v6 - 8;
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v34 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)sub_4A98(&qword_2F2250);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_4A98(&qword_2F2258);
  uint64_t v16 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26A630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  uint64_t v20 = *(int *)(v7 + 36);
  uint64_t v21 = v35;
  sub_C224(v35 + v20, (uint64_t)v40);
  sub_168C90(v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
  unint64_t v22 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1668BC((uint64_t)v9, v23 + v22);
  sub_269B80();
  sub_269AB0();
  uint64_t v24 = &v15[v13[9]];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[8] = 0;
  uint64_t v25 = (uint64_t *)&v15[v13[10]];
  *uint64_t v25 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = &v15[v13[11]];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[40] = 0;
  sub_19CC4((uint64_t)v12, (uint64_t)&v15[v13[12]], qword_2EA3E0);
  sub_19CC4((uint64_t)v40, (uint64_t)&v15[v13[13]], &qword_2EA818);
  uint64_t v27 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v15[v13[14]];
  *uint64_t v27 = sub_166920;
  v27[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v23;
  sub_26ABF0();
  sub_7C18(&qword_2F2260, &qword_2F2250);
  sub_168CF8(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v28 = v37;
  sub_26BC70();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v28);
  sub_B6DC((uint64_t)v15, &qword_2F2250);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v29 = v39;
  uint64_t v30 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v39, v18, v36);
  uint64_t v31 = (_OWORD *)(v29 + *(int *)(sub_4A98(&qword_2F2268) + 36));
  long long v32 = v40[1];
  *uint64_t v31 = v40[0];
  v31[1] = v32;
  v31[2] = v40[2];
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v30);
}

uint64_t sub_1661C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v49 = a2;
  uint64_t v2 = sub_26DD70();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_4A98(&qword_2EEA48) - 8;
  __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SizeConstants.Environment(0) - 8;
  __chkstk_darwin(v50);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_4A98(&qword_2EE988);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SizeConstants(0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v43 - v22;
  type metadata accessor for ThumbOpinionButton();
  sub_41378((uint64_t)v23);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, enum case for Font.TextStyle.body(_:), v7);
  sub_168C90((uint64_t)v23, (uint64_t)v21, type metadata accessor for SizeConstants);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_168C90((uint64_t)v21, (uint64_t)v17, type metadata accessor for SizeConstants);
  sub_168C90((uint64_t)v21, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
  uint64_t v24 = (uint64_t)&v6[*(int *)(v50 + 32)];
  double v25 = sub_1AB90((uint64_t)v11, v24);
  uint64_t v26 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
  double v27 = 1.0;
  if ((*(void *)&v25 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v27 = v25;
  }
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0) {
    double v25 = v27;
  }
  sub_168D40((uint64_t)v21, type metadata accessor for SizeConstants);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v11, v7);
  uint64_t v29 = *(int *)(v15 + 44);
  *(double *)&v17[v29] = v25;
  v28(v13, v7);
  sub_168D40((uint64_t)v23, type metadata accessor for SizeConstants);
  uint64_t v30 = v44;
  sub_168C90((uint64_t)v17, v44, type metadata accessor for SizeConstants.Environment);
  uint64_t v31 = *(int *)(v45 + 44);
  *(void *)(v30 + v31) = *(void *)&v17[v29];
  sub_B6DC((uint64_t)v17, &qword_2EE988);
  double v32 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v30 + v31)) * 8.0;
  double v33 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v30 + *(int *)(v50 + 36)));
  uint64_t v35 = (uint64_t)v46;
  uint64_t v34 = v47;
  uint64_t v36 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v48);
  double v52 = v32;
  sub_196FB4(v35, v33);
  double v37 = v52;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  sub_B6DC(v30, &qword_2EEA48);
  uint64_t v38 = sub_26B1C0();
  uint64_t v39 = v49;
  *uint64_t v49 = v38;
  *((double *)v39 + 1) = v37;
  *((unsigned char *)v39 + 16) = 0;
  uint64_t v40 = v39;
  uint64_t v41 = sub_4A98(&qword_2F2318);
  return sub_166990(v51, (uint64_t)v40 + *(int *)(v41 + 44));
}

uint64_t sub_1666F8()
{
  uint64_t v1 = (int *)type metadata accessor for ThumbOpinionButton();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_release();
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0(v2 + 24);
  uint64_t v3 = v2 + v1[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v2 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v2 + v1[7]);

  return swift_deallocObject();
}

uint64_t sub_1668BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThumbOpinionButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_166920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ThumbOpinionButton() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1661C4(v4, a1);
}

uint64_t sub_166990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v63 = a2;
  uint64_t v61 = sub_269920();
  uint64_t v55 = *(void *)(v61 - 8);
  uint64_t v2 = __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v53 - v4;
  uint64_t v59 = sub_26D3E0();
  uint64_t v54 = *(void *)(v59 - 8);
  uint64_t v5 = __chkstk_darwin(v59);
  uint64_t v56 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v64 = (char *)&v53 - v7;
  uint64_t v57 = (char *)sub_4A98(&qword_2F2320);
  uint64_t v8 = *((void *)v57 - 1);
  __chkstk_darwin(v57);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F2328);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v62 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v53 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = sub_26C250();
  uint64_t v21 = sub_26B7D0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v20;
  uint64_t v66 = KeyPath;
  uint64_t v67 = v21;
  sub_4A98(&qword_2EB0C0);
  sub_2E38C();
  sub_26BF70();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = sub_167078();
  uint64_t v24 = (uint64_t)v57;
  (*(void (**)(char *, char *, char *))(v8 + 16))(v17, v10, v57);
  *(void *)&v17[*(int *)(v12 + 44)] = v23;
  double v25 = v10;
  uint64_t v26 = v54;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v25, v24);
  uint64_t v27 = (uint64_t)v17;
  uint64_t v28 = v55;
  uint64_t v57 = v19;
  sub_19CC4(v27, (uint64_t)v19, &qword_2F2328);
  uint64_t v29 = v64;
  sub_26D370();
  uint64_t v30 = v60;
  sub_2698C0();
  uint64_t v31 = v59;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v56, v29, v59);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v33 = v61;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v58, v30, v61);
  sub_26D460();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v33);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v64, v31);
  sub_26B7E0();
  uint64_t v34 = sub_26BA80();
  uint64_t v36 = v35;
  char v38 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_167314()) {
    int v39 = sub_26B450();
  }
  else {
    int v39 = sub_26B470();
  }
  char v40 = v38 & 1;
  LODWORD(v65) = v39;
  uint64_t v41 = sub_26BA40();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  char v47 = v46 & 1;
  sub_3A380(v34, v36, v40);
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t)v57;
  uint64_t v49 = v62;
  sub_168C28((uint64_t)v57, v62);
  uint64_t v50 = v63;
  sub_168C28(v49, v63);
  uint64_t v51 = v50 + *(int *)(sub_4A98(&qword_2F2330) + 48);
  *(void *)uint64_t v51 = v41;
  *(void *)(v51 + 8) = v43;
  *(unsigned char *)(v51 + 16) = v47;
  *(void *)(v51 + 24) = v45;
  sub_45370(v41, v43, v47);
  swift_bridgeObjectRetain();
  sub_B6DC(v48, &qword_2F2328);
  sub_3A380(v41, v43, v47);
  swift_bridgeObjectRelease();
  return sub_B6DC(v49, &qword_2F2328);
}

uint64_t sub_167078()
{
  uint64_t v0 = sub_26A6E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_167314())
  {
    type metadata accessor for ThumbOpinionButton();
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v9);
    sub_168C90((uint64_t)v9, (uint64_t)v6, type metadata accessor for ColorConstants.Environment);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ColorScheme.dark(_:), v0);
    sub_168CF8((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    char v10 = sub_26D360();
    uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
    v11(v3, v0);
    v11(v6, v0);
    if (v10) {
      uint64_t v12 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v12 = sub_26C150();
    }
    uint64_t v15 = v12;
    sub_168D40((uint64_t)v9, type metadata accessor for ColorConstants);
    return v15;
  }
  else
  {
    id v13 = [self systemFillColor];
    return sub_26C0C0();
  }
}

BOOL sub_167314()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ThumbOpinionButton();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v19 - v7;
  __chkstk_darwin(v6);
  char v10 = (char *)&v19 - v9;
  int v11 = *(unsigned __int8 *)(v0 + 64);
  sub_168C90(v1, (uint64_t)&v19 - v9, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
  if (v11 == 1)
  {
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    uint64_t v20 = *(void *)v10;
    uint64_t v21 = v12;
    char v22 = v13;
    sub_4A98(&qword_2F2338);
    sub_26C480();
    sub_168D40((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    int v14 = v23;
    sub_168C90(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    if (!v14)
    {
      sub_168D40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
      return 1;
    }
  }
  else
  {
    sub_168D40((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    sub_168C90(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
  }
  char v16 = v8[64];
  sub_168C90((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
  if (v16)
  {
    sub_168D40((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    sub_168D40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    return 0;
  }
  else
  {
    uint64_t v17 = *((void *)v5 + 1);
    char v18 = v5[16];
    uint64_t v20 = *(void *)v5;
    uint64_t v21 = v17;
    char v22 = v18;
    sub_4A98(&qword_2F2338);
    sub_26C480();
    sub_168D40((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    sub_168D40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThumbOpinionButton);
    return v23 == 1;
  }
}

unint64_t sub_1675A4()
{
  unint64_t result = qword_2F2270;
  if (!qword_2F2270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2270);
  }
  return result;
}

uint64_t sub_1675F8()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for ThumbOpinionButtonState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1676E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbOpinionButtonState()
{
  return &type metadata for ThumbOpinionButtonState;
}

uint64_t destroy for ThumbOpinionButtonViewModel(uint64_t a1)
{
  swift_release();
  swift_release();

  return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 24);
}

uint64_t initializeWithCopy for ThumbOpinionButtonViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for ThumbOpinionButtonViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_16D58((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for ThumbOpinionButtonViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ThumbOpinionButtonViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThumbOpinionButtonViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThumbOpinionButtonViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbOpinionButtonViewModel()
{
  return &type metadata for ThumbOpinionButtonViewModel;
}

uint64_t initializeBufferWithCopyOfBuffer for ThumbOpinionButton(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2 + 3;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v9;
    uint64_t v10 = v9;
    int v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    swift_retain();
    v11(a1 + 24, v8, v10);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v12 = a3[5];
    char v13 = (_WORD *)(a1 + v12);
    int v14 = (_WORD *)((char *)a2 + v12);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v13 = *v14;
      uint64_t v15 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v16 = v15[6];
      uint64_t v17 = (char *)v13 + v16;
      char v18 = (char *)v14 + v16;
      uint64_t v19 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(void *)((char *)v13 + v15[7]) = *(void *)((char *)v14 + v15[7]);
      uint64_t v20 = v15[8];
      uint64_t v21 = (char *)v13 + v20;
      char v22 = (char *)v14 + v20;
      v21[2] = v22[2];
      *(_WORD *)uint64_t v21 = *(_WORD *)v22;
    }
    else
    {
      *(void *)char v13 = *(void *)v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[6];
    uint64_t v24 = (void *)(a1 + v23);
    double v25 = (uint64_t *)((char *)a2 + v23);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[7];
    long long v28 = *(_OWORD *)((char *)a2 + v27 + 24);
    *(_OWORD *)(a1 + v27 + 24) = v28;
    (**(void (***)(void))(v28 - 8))();
  }
  return a1;
}

uint64_t destroy for ThumbOpinionButton(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 24);
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];

  return _s7BooksUI13AnyPagedFrameVwxx_0(v9);
}

uint64_t initializeWithCopy for ThumbOpinionButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a2 + 24;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  swift_retain();
  v10(a1 + 24, v7, v9);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v11 = a3[5];
  uint64_t v12 = (_WORD *)(a1 + v11);
  char v13 = (_WORD *)(a2 + v11);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v12 = *v13;
    int v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v15 = v14[6];
    uint64_t v16 = (char *)v12 + v15;
    uint64_t v17 = (char *)v13 + v15;
    uint64_t v18 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    *(void *)((char *)v12 + v14[7]) = *(void *)((char *)v13 + v14[7]);
    uint64_t v19 = v14[8];
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    v20[2] = v21[2];
    *(_WORD *)uint64_t v20 = *(_WORD *)v21;
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[6];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[7];
  long long v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  return a1;
}

uint64_t assignWithCopy for ThumbOpinionButton(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_16D58((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (unsigned char *)(a1 + v6);
    long long v8 = (unsigned char *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v9 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v10 = v9[6];
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      uint64_t v14 = v9[8];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      char v17 = v16[2];
      *(_WORD *)uint64_t v15 = *(_WORD *)v16;
      v15[2] = v17;
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[6];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_B6DC(a1 + v18, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_16D58((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t initializeWithTake for ThumbOpinionButton(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)((char *)v9 + v12[7]) = *(void *)((char *)v10 + v12[7]);
    uint64_t v17 = v12[8];
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = (char *)v10 + v17;
    v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  return a1;
}

uint64_t assignWithTake for ThumbOpinionButton(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    long long v7 = (_WORD *)(a1 + v6);
    uint64_t v8 = (_WORD *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EB708);
    uint64_t v9 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v7 = *v8;
      uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v11 = v10[6];
      uint64_t v12 = (char *)v7 + v11;
      uint64_t v13 = (char *)v8 + v11;
      uint64_t v14 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(void *)((char *)v7 + v10[7]) = *(void *)((char *)v8 + v10[7]);
      uint64_t v15 = v10[8];
      uint64_t v16 = (char *)v7 + v15;
      uint64_t v17 = (char *)v8 + v15;
      v16[2] = v17[2];
      *(_WORD *)uint64_t v16 = *(_WORD *)v17;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_B6DC(a1 + v18, &qword_2EA968);
    uint64_t v21 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v23);
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThumbOpinionButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_168714);
}

uint64_t sub_168714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EB718);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EAB18);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ThumbOpinionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_16885C);
}

uint64_t sub_16885C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EB718);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EAB18);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_168990()
{
  sub_168AA4(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
  if (v0 <= 0x3F)
  {
    sub_168AA4(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_168AA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_168AFC()
{
  unint64_t result = qword_2F2310;
  if (!qword_2F2310)
  {
    sub_7B0C(&qword_2F2268);
    sub_7B0C(&qword_2F2250);
    sub_26AC00();
    sub_7C18(&qword_2F2260, &qword_2F2250);
    sub_168CF8(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2310);
  }
  return result;
}

uint64_t sub_168C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_168C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_168CF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_168D40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

Swift::Bool __swiftcall ListItemThumbnailViewModel.isSmallGenreStyle(isCompact:)(Swift::Bool isCompact)
{
  sub_3F274(v1, (uint64_t)v7);
  if (v9) {
    goto LABEL_5;
  }
  unsigned __int8 v3 = v7[48];
  if (!isCompact && v8 != 255) {
    unsigned __int8 v3 = v8;
  }
  if (v3)
  {
LABEL_5:
    Swift::Bool v4 = 0;
  }
  else
  {
    uint64_t v5 = 56;
    if (isCompact || v8 == 255) {
      uint64_t v5 = 40;
    }
    Swift::Bool v4 = v7[v5] == 1;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v7);
  return v4;
}

double ListItemThumbnailViewModel.unscaledThumbnailSize(isCompact:)(char a1)
{
  sub_3F274(v1, (uint64_t)v10);
  if (v14)
  {
    int v3 = v11[0];
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
    if (v3) {
      return 97.0;
    }
    else {
      return 50.0;
    }
  }
  else
  {
    uint64_t v6 = (double *)v11;
    if (!(a1 & 1 | (v13 == 255))) {
      uint64_t v6 = (double *)&v12;
    }
    double v7 = *v6;
    if (a1 & 1 | (v13 == 255)) {
      unsigned __int8 v8 = v11[8];
    }
    else {
      unsigned __int8 v8 = v13;
    }
    switch(v8)
    {
      case 1u:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
        double v4 = 52.0;
        break;
      case 2u:
        if (v7 * 0.28 <= 80.0) {
          double v4 = v7 * 0.28;
        }
        else {
          double v4 = 80.0;
        }
        goto LABEL_17;
      case 3u:
        double v9 = 130.0;
        if (a1) {
          double v9 = 115.0;
        }
        if (v7 * 0.28 <= v9) {
          double v4 = v7 * 0.28;
        }
        else {
          double v4 = v9;
        }
LABEL_17:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
        break;
      case 4u:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
        if (v7 == 0.0) {
          double v4 = 32.0;
        }
        else {
          double v4 = 48.0;
        }
        break;
      default:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
        double v4 = 26.0;
        break;
    }
  }
  return v4;
}

uint64_t static ListItemThumbnailStyle.single(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t result = sub_C224(a1, a3);
  *(void *)(a3 + 40) = v4;
  *(unsigned char *)(a3 + 48) = v5;
  *(void *)(a3 + 56) = 0;
  *(_WORD *)(a3 + 64) = 255;
  return result;
}

uint64_t ListItemThumbnailViewModel.init(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3EBA0(a1, a2);
}

double ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(char a1)
{
  sub_3F274(v1, (uint64_t)v6);
  if (v8)
  {
    int v3 = v6[40];
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v6);
    double result = 10.0;
    if (v3) {
      return 12.0;
    }
  }
  else
  {
    unsigned __int8 v5 = v6[48];
    if (!(a1 & 1 | (v7 == 255))) {
      unsigned __int8 v5 = v7;
    }
    switch(v5)
    {
      case 1u:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v6);
        double result = 12.0;
        break;
      case 2u:
      case 3u:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v6);
        double result = 16.0;
        break;
      default:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v6);
        double result = 10.0;
        break;
    }
  }
  return result;
}

uint64_t ListItemThumbnailViewModel.style.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_3F274(v1, a1);
}

unint64_t sub_16917C()
{
  unint64_t result = qword_2F2340;
  if (!qword_2F2340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2340);
  }
  return result;
}

unint64_t sub_1691D4()
{
  unint64_t result = qword_2F2348;
  if (!qword_2F2348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2348);
  }
  return result;
}

uint64_t initializeWithCopy for ListItemThumbnailViewModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 65);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
  if (v4)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 65) = v4;
  return a1;
}

uint64_t assignWithCopy for ListItemThumbnailViewModel(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_3E544(a1);
    char v4 = *(unsigned char *)(a2 + 65);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    if (v4)
    {
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    }
    else
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      LOBYTE(v6) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = v6;
    }
    *(unsigned char *)(a1 + 65) = v4;
  }
  return a1;
}

uint64_t assignWithTake for ListItemThumbnailViewModel(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_3E544(a1);
    long long v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemThumbnailViewModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 66)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 65);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemThumbnailViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 65) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemThumbnailViewModel()
{
  return &type metadata for ListItemThumbnailViewModel;
}

uint64_t initializeWithCopy for ListItemThumbnailStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 65);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  if (v4 == 1)
  {
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    char v6 = 1;
  }
  else
  {
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    char v6 = 0;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 65) = v6;
  return a1;
}

uint64_t assignWithCopy for ListItemThumbnailStyle(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 65);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if (v4 == 1)
    {
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      char v6 = 1;
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      char v6 = 0;
      uint64_t v7 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      LOBYTE(v7) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = v7;
    }
    *(unsigned char *)(a1 + 65) = v6;
  }
  return a1;
}

uint64_t assignWithTake for ListItemThumbnailStyle(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 65);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    if (v4 == 1)
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      LOBYTE(v4) = 0;
      long long v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    *(unsigned char *)(a1 + 65) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemThumbnailStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 66)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 65);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ListItemThumbnailStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 65) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_169814(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 65);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_169830(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 65) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ListItemThumbnailStyle()
{
  return &type metadata for ListItemThumbnailStyle;
}

uint64_t getEnumTagSinglePayload for SingleThumbnailStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleThumbnailStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1698F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_169910(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SingleThumbnailStyle()
{
  return &type metadata for SingleThumbnailStyle;
}

unsigned char *storeEnumTagSinglePayload for SingleThumbnailSubStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x169A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleThumbnailSubStyle()
{
  return &type metadata for SingleThumbnailSubStyle;
}

unsigned char *storeEnumTagSinglePayload for SeriesThumbnailStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x169B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesThumbnailStyle()
{
  return &type metadata for SeriesThumbnailStyle;
}

uint64_t type metadata accessor for BundleFinder()
{
  return self;
}

uint64_t Metrics.NavigationType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DBDF0;
  v9._object = a2;
  unint64_t v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 6;
  if (v6 < 6) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t Metrics.NavigationType.rawValue.getter()
{
  uint64_t result = 1801675106;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64726177726F66;
      break;
    case 2:
      uint64_t result = 1752397168;
      break;
    case 3:
      uint64_t result = 7368560;
      break;
    case 4:
      uint64_t result = 1952867692;
      break;
    case 5:
      uint64_t result = 0x7468676972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_169C5C(unsigned __int8 *a1, char *a2)
{
  return sub_1085C8(*a1, *a2);
}

Swift::Int sub_169C68()
{
  return sub_180BD8();
}

uint64_t sub_169C70()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_169D40()
{
  return sub_181D18();
}

uint64_t sub_169D48@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Metrics.NavigationType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_169D54(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1801675106;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64726177726F66;
      goto LABEL_3;
    case 2:
      *a1 = 1752397168;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 7368560;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 1952867692;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 0x7468676972;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_169E04()
{
  return sub_26D5E0();
}

uint64_t sub_169E64()
{
  return sub_26D5A0();
}

uint64_t static Metrics.createPageMetrics(pageType:pageId:navigationType:networkPerformance:includePageInstruction:includeImpressionsInstruction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v68 = a8;
  uint64_t v79 = a4;
  uint64_t v76 = a3;
  uint64_t v77 = a2;
  uint64_t v75 = a1;
  uint64_t v80 = a9;
  uint64_t v12 = sub_26CDD0();
  __chkstk_darwin(v12 - 8);
  char v78 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_26CAC0();
  uint64_t v73 = *(void *)(v74 - 8);
  uint64_t v14 = __chkstk_darwin(v74);
  uint64_t v66 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v62 - v16;
  uint64_t v17 = sub_269840();
  uint64_t v62 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F2400);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_26D090();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  long long v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_26CAA0();
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v27 = __chkstk_darwin(v72);
  uint64_t v64 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v63 = (char *)&v62 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  long long v70 = (char *)&v62 - v32;
  __chkstk_darwin(v31);
  long long v69 = (char *)&v62 - v33;
  uint64_t v34 = *a5;
  uint64_t v67 = sub_4A98(&qword_2E9F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0x697461676976616ELL;
  *(void *)(inited + 40) = 0xEA00000000006E6FLL;
  unint64_t v36 = 0xE400000000000000;
  uint64_t v37 = 1801675106;
  switch(v34)
  {
    case 1:
      unint64_t v36 = 0xE700000000000000;
      uint64_t v37 = 0x64726177726F66;
      break;
    case 2:
      uint64_t v37 = 1752397168;
      break;
    case 3:
      unint64_t v36 = 0xE300000000000000;
      uint64_t v37 = 7368560;
      break;
    case 4:
      uint64_t v37 = 1952867692;
      break;
    case 5:
      unint64_t v36 = 0xE500000000000000;
      uint64_t v37 = 0x7468676972;
      break;
    default:
      break;
  }
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v37;
  *(void *)(inited + 56) = v36;
  sub_8D70(inited);
  sub_16AA58(a6, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_269830();
    sub_269820();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v17);
    sub_26D080();
    sub_16AAC0((uint64_t)v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
  }
  char v38 = v69;
  if (qword_2E9B88 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_26CA70();
  sub_6B14(v39, (uint64_t)qword_3152B0);
  sub_26CA40();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  char v40 = _swiftEmptyArrayStorage;
  sub_8D70((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v41 = v70;
  sub_26CA30();
  swift_bridgeObjectRelease();
  uint64_t v42 = v72;
  uint64_t v43 = v71;
  if (a7)
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v63, v38, v72);
    sub_4A98(&qword_2F2408);
    uint64_t v44 = sub_26CB20();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = *(void *)(v45 + 72);
    unint64_t v47 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_270BF0;
    sub_26CB10();
    uint64_t v49 = v48 + v47 + v46;
    if (qword_2E9CA0 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_6B14(v44, (uint64_t)qword_2F23E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v49, v50, v44);
    if (*(void *)(v48 + 16)) {
      sub_3A404(v48);
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v51 = v65;
    sub_26CAB0();
    char v40 = (void *)sub_E6260(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v53 = v40[2];
    unint64_t v52 = v40[3];
    if (v53 >= v52 >> 1) {
      char v40 = (void *)sub_E6260(v52 > 1, v53 + 1, 1, (unint64_t)v40);
    }
    v40[2] = v53 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))((unint64_t)v40+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v53, v51, v74);
  }
  if (v68)
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v64, v41, v42);
    sub_4A98(&qword_2F2408);
    sub_26CB20();
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_270BF0;
    sub_26CAF0();
    sub_26CAE0();
    sub_3A404(v54);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v55 = v66;
    sub_26CAB0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v40 = (void *)sub_E6260(0, v40[2] + 1, 1, (unint64_t)v40);
    }
    unint64_t v57 = v40[2];
    unint64_t v56 = v40[3];
    if (v57 >= v56 >> 1) {
      char v40 = (void *)sub_E6260(v56 > 1, v57 + 1, 1, (unint64_t)v40);
    }
    v40[2] = v57 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))((unint64_t)v40+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v57, v55, v74);
  }
  uint64_t v58 = swift_initStackObject();
  *(_OWORD *)(v58 + 16) = xmmword_270BF0;
  *(void *)(v58 + 32) = 0x6570795465676170;
  *(void *)(v58 + 40) = 0xE800000000000000;
  *(void *)(v58 + 48) = v75;
  *(void *)(v58 + 56) = v77;
  *(void *)(v58 + 72) = &type metadata for String;
  *(void *)(v58 + 80) = 0x644965676170;
  *(void *)(v58 + 120) = &type metadata for String;
  uint64_t v59 = v76;
  *(void *)(v58 + 88) = 0xE600000000000000;
  *(void *)(v58 + 96) = v59;
  *(void *)(v58 + 104) = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8D70(v58);
  sub_26CDC0();
  sub_F32D8((uint64_t)_swiftEmptyArrayStorage);
  sub_26CAD0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v43 + 8);
  v60(v41, v42);
  return ((uint64_t (*)(char *, uint64_t))v60)(v38, v42);
}

uint64_t sub_16AA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_16AAC0(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F2400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_16AB20()
{
  uint64_t v0 = sub_26CB20();
  sub_6E18(v0, qword_2F23E8);
  sub_6B14(v0, (uint64_t)qword_2F23E8);
  return sub_26CB00();
}

uint64_t static PageMetrics.InvocationPoint.cardDidAppear.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9CA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_26CB20();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F23E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_16AC38()
{
  unint64_t result = qword_2F2410;
  if (!qword_2F2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2410);
  }
  return result;
}

unsigned char *_s14NavigationTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16AD58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.NavigationType()
{
  return &type metadata for Metrics.NavigationType;
}

unint64_t sub_16AD90()
{
  unint64_t result = qword_2F2418;
  if (!qword_2F2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2418);
  }
  return result;
}

unint64_t static SynchronousNativeIntentDispatcher.Builder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  memset(&v13[8], 0, 40);
  sub_B6DC((uint64_t)&v13[8], &qword_2F2420);
  memset(&v13[8], 0, 40);
  unint64_t result = sub_96E8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)uint64_t v13 = result;
  long long v5 = *(_OWORD *)&v13[32];
  long long v6 = *(_OWORD *)v13;
  a2[1] = *(_OWORD *)&v13[16];
  a2[2] = v5;
  *a2 = v6;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_16B480(v8, (uint64_t)v13);
      uint64_t v9 = *(void *)v13;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(void *)a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v10;
      *(void *)a2 = 0x8000000000000000;
      sub_16B11C(v9, (uint64_t)sub_16B0C8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v12);
      *(void *)a2 = v12;
      swift_bridgeObjectRelease();
      sub_16B4DC((uint64_t)v13);
      v8 += 48;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static SynchronousNativeIntentDispatcher.Builder.buildExpression<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  memset(&v9[8], 0, 40);
  sub_B6DC((uint64_t)&v9[8], &qword_2F2420);
  memset(&v9[8], 0, 40);
  *(void *)uint64_t v9 = sub_96E8((uint64_t)_swiftEmptyArrayStorage);
  v10[1] = *(_OWORD *)&v9[16];
  v10[2] = *(_OWORD *)&v9[32];
  v10[0] = *(_OWORD *)v9;
  SynchronousNativeIntentDispatcher.registering<A>(_:)(a1, a2, a3, a4);
  return sub_16B4DC((uint64_t)v10);
}

uint64_t static SynchronousNativeIntentDispatcher.Builder.buildOptional(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_16B530(a1, (uint64_t)v8);
  if (*(void *)&v8[0])
  {
    long long v4 = v8[1];
    *a2 = v8[0];
    a2[1] = v4;
    a2[2] = v8[2];
  }
  else
  {
    memset(&v7[8], 0, 40);
    sub_B6DC((uint64_t)&v7[8], &qword_2F2420);
    memset(&v7[8], 0, 40);
    *(void *)uint64_t v7 = sub_96E8((uint64_t)_swiftEmptyArrayStorage);
    long long v5 = *(_OWORD *)&v7[32];
    long long v6 = *(_OWORD *)v7;
    a2[1] = *(_OWORD *)&v7[16];
    a2[2] = v5;
    *a2 = v6;
    return sub_B6DC((uint64_t)v8, &qword_2F2428);
  }
  return result;
}

uint64_t static SynchronousNativeIntentDispatcher.Builder.buildEither(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_16B480(a1, a2);
}

uint64_t SynchronousNativeIntentDispatcher.init(implementations:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_16B0C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_C224((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_16B11C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_16B5A8((uint64_t)&v48);
  uint64_t v12 = v49;
  if (!v49) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_AD44(v50, (uint64_t)v47);
  uint64_t v14 = *(void **)a5;
  unint64_t v16 = sub_9E10(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_231BD0();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *uint64_t v25 = v13;
    v25[1] = v12;
    sub_AD44(v47, v24[7] + 40 * v16);
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_16B5A8((uint64_t)&v48);
    for (uint64_t i = v49; v49; uint64_t i = v49)
    {
      uint64_t v31 = v48;
      sub_AD44(v50, (uint64_t)v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_9E10(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_2304B8(v37, 1);
        unint64_t v39 = sub_9E10(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_C224((uint64_t)v47, (uint64_t)v46);
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(*(void *)a5 + 56) + 40 * v34;
        _s7BooksUI13AnyPagedFrameVwxx_0(v30);
        sub_AD44(v46, v30);
      }
      else
      {
        uint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        *uint64_t v42 = v31;
        v42[1] = i;
        sub_AD44(v47, v41[7] + 40 * v34);
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_16B5A8((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_BFCB4();
    return swift_release();
  }
  sub_2304B8(v19, a4 & 1);
  unint64_t v21 = sub_9E10(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_C224((uint64_t)v47, (uint64_t)v46);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(*(void *)a5 + 56) + 40 * v16;
    _s7BooksUI13AnyPagedFrameVwxx_0(v23);
    sub_AD44(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_26DE60();
  __break(1u);
  return result;
}

uint64_t sub_16B480(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_16B4DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_16B530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SynchronousNativeIntentDispatcher.Builder()
{
  return &type metadata for SynchronousNativeIntentDispatcher.Builder;
}

uint64_t sub_16B5A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_C224(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  long long v25 = 0u;
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_16B7A4((uint64_t)&v25, (uint64_t)v23);
  if (*((void *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    uint64_t v22 = v24;
    v19(v21);
    return sub_B6DC((uint64_t)v21, &qword_2F2438);
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_16B7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t View.impressionable(_:)()
{
  uint64_t v0 = sub_26CF30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26CF20();
  sub_26BB20();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_16B914()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t PDFCoverEffect.init(shadowScale:cornerRadius:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for PDFCoverEffect() + 24));
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a1 = a2;
  a1[1] = a3;
  return result;
}

uint64_t type metadata accessor for PDFCoverEffect()
{
  uint64_t result = qword_2F24E8;
  if (!qword_2F24E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PDFCoverEffect.body(cover:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PDFCoverEffect();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F2440);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_16E094(v3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PDFCoverEffect);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t result = sub_16C140((uint64_t)v9, v15 + v14);
  *a2 = sub_16C1A4;
  a2[1] = v15;
  return result;
}

uint64_t sub_16BC08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v57 = a3;
  uint64_t v4 = sub_26A6E0();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (uint64_t)&v45 - v7;
  uint64_t v49 = sub_26AC50() - 8;
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F2568);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_4A98(&qword_2F2570);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_4A98(&qword_2F2578) - 8;
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_4A98(&qword_2F2580) - 8;
  __chkstk_darwin(v52);
  uint64_t v50 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26A940();
  double v19 = v18;
  *uint64_t v11 = sub_26C610();
  v11[1] = v20;
  uint64_t v21 = sub_4A98(&qword_2F2588);
  sub_16C1A8(a1, (uint64_t)v11 + *(int *)(v21 + 44), v19);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v22 = v58;
  char v23 = v59;
  uint64_t v24 = v60;
  char v25 = v61;
  uint64_t v26 = v62;
  uint64_t v27 = v63;
  sub_B678((uint64_t)v11, (uint64_t)v15, &qword_2F2568);
  uint64_t v28 = &v15[*(int *)(v13 + 44)];
  *(_OWORD *)uint64_t v28 = xmmword_27BCF0;
  *((void *)v28 + 2) = v22;
  v28[24] = v23;
  *((void *)v28 + 4) = v24;
  v28[40] = v25;
  *((void *)v28 + 6) = v26;
  *((void *)v28 + 7) = v27;
  sub_B6DC((uint64_t)v11, &qword_2F2568);
  uint64_t v29 = *(void *)(v51 + 8);
  uint64_t v30 = v48;
  uint64_t v31 = &v48[*(int *)(v49 + 28)];
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  *uint64_t v30 = v29;
  v30[1] = v29;
  uint64_t v34 = (uint64_t)v46;
  uint64_t v35 = (uint64_t)&v46[*(int *)(v47 + 44)];
  sub_16E094((uint64_t)v30, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v15, v34, &qword_2F2570);
  sub_16E0FC((uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v15, &qword_2F2570);
  sub_26C150();
  type metadata accessor for PDFCoverEffect();
  uint64_t v36 = v53;
  sub_40FB4(v53);
  uint64_t v37 = v54;
  uint64_t v38 = v55;
  uint64_t v39 = v56;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for ColorScheme.dark(_:), v56);
  sub_26A6D0();
  char v40 = *(void (**)(char *, uint64_t))(v38 + 8);
  v40(v37, v39);
  v40((char *)v36, v39);
  uint64_t v41 = sub_26C1C0();
  swift_release();
  uint64_t v42 = v50;
  sub_B678(v34, v50, &qword_2F2578);
  uint64_t v43 = v42 + *(int *)(v52 + 44);
  *(void *)uint64_t v43 = v41;
  *(_OWORD *)(v43 + 8) = xmmword_27BD00;
  *(void *)(v43 + 24) = 0x4000000000000000;
  sub_B6DC(v34, &qword_2F2578);
  return sub_19CC4(v42, v57, &qword_2F2580);
}

uint64_t sub_16C140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PDFCoverEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_16C1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v159 = a2;
  uint64_t v154 = sub_4A98(&qword_2F2590) - 8;
  __chkstk_darwin(v154);
  uint64_t v153 = (uint64_t)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_4A98(&qword_2F2598) - 8;
  __chkstk_darwin(v152);
  uint64_t v151 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_4A98(&qword_2F25A0) - 8;
  __chkstk_darwin(v157);
  uint64_t v155 = (uint64_t)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_4A98(&qword_2F25A8) - 8;
  uint64_t v8 = __chkstk_darwin(v158);
  uint64_t v156 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v167 = (uint64_t)&v128 - v10;
  uint64_t v165 = sub_26B4A0() - 8;
  __chkstk_darwin(v165);
  uint64_t v140 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = (uint64_t (**)(void))(sub_4A98(&qword_2F25B0) - 8);
  __chkstk_darwin(v144);
  uint64_t v141 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_4A98(&qword_2F25B8) - 8;
  __chkstk_darwin(v146);
  uint64_t v142 = (uint64_t)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_4A98(&qword_2F25C0) - 8;
  __chkstk_darwin(v147);
  uint64_t v143 = (uint64_t)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v149 = sub_4A98(&qword_2F25C8) - 8;
  __chkstk_darwin(v149);
  uint64_t v145 = (uint64_t)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_4A98(&qword_2F25D0) - 8;
  uint64_t v16 = __chkstk_darwin(v148);
  uint64_t v163 = (uint64_t)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v166 = (uint64_t)&v128 - v18;
  uint64_t v161 = sub_26A6E0();
  uint64_t v168 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v160 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_26AC80();
  __chkstk_darwin(v20 - 8);
  uint64_t v139 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_26C700();
  uint64_t v137 = *(void *)(v22 - 8);
  uint64_t v138 = (void (*)(void, void, void))v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_4A98(&qword_2ECB20) - 8;
  __chkstk_darwin(v135);
  uint64_t v26 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_4A98(&qword_2F25D8) - 8;
  uint64_t v27 = __chkstk_darwin(v136);
  uint64_t v162 = (uint64_t)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v169 = (uint64_t)&v128 - v29;
  uint64_t v30 = sub_4A98(&qword_2F25E0);
  uint64_t v31 = v30 - 8;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v150 = (uint64_t)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v128 - v34;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v36 = sub_4A98(&qword_2F2440);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
  uint64_t v164 = v35;
  v37(v35, a1, v36);
  uint64_t v38 = &v35[*(int *)(v31 + 44)];
  long long v39 = v171;
  *(_OWORD *)uint64_t v38 = v170;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v172;
  uint64_t v132 = sub_4A98(&qword_2ECB40);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_270BF0;
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v40 + 32) = sub_26C560();
  *(void *)(v40 + 40) = v41;
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v40 + 48) = sub_26C560();
  *(void *)(v40 + 56) = v42;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  uint64_t v43 = v173;
  long long v134 = v174;
  uint64_t v44 = v175;
  uint64_t v45 = v176;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v133 = v177;
  LODWORD(v131) = v178;
  uint64_t v130 = v179;
  char v46 = v180;
  uint64_t v48 = v181;
  uint64_t v47 = v182;
  uint64_t v49 = v137;
  uint64_t v50 = v24;
  uint64_t v51 = v24;
  uint64_t v52 = v138;
  (*(void (**)(char *, void, void))(v137 + 104))(v51, enum case for BlendMode.multiply(_:), v138);
  uint64_t v53 = (uint64_t)v139;
  (*(void (**)(char *, char *, void))(v49 + 16))(v139, v50, v52);
  sub_16E094(v53, (uint64_t)&v26[*(int *)(v135 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v26 = v43;
  *(_OWORD *)(v26 + 8) = v134;
  *((void *)v26 + 3) = v44;
  *((void *)v26 + 4) = v45;
  *((void *)v26 + 5) = v133;
  v26[48] = v131;
  *((void *)v26 + 7) = v130;
  v26[64] = v46;
  *((void *)v26 + 9) = v48;
  *((void *)v26 + 10) = v47;
  *((void *)v26 + 11) = 0x3FD999999999999ALL;
  swift_bridgeObjectRetain();
  sub_16E0FC(v53, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, void (*)(void, void, void)))(v49 + 8))(v50, v52);
  sub_65900((uint64_t)&v173);
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v139) = enum case for ColorScheme.light(_:);
  uint64_t v55 = v168;
  uint64_t v56 = *(void (**)(void))(v168 + 104);
  uint64_t v137 = v168 + 104;
  uint64_t v138 = (void (*)(void, void, void))v56;
  uint64_t v58 = v160;
  uint64_t v57 = v161;
  v56(v160);
  uint64_t v59 = v162;
  uint64_t v60 = (uint64_t *)(v162 + *(int *)(v136 + 44));
  uint64_t v136 = sub_4A98(&qword_2EAEE8);
  char v61 = (char *)v60 + *(int *)(v136 + 28);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  *(void *)&long long v134 = v55 + 16;
  uint64_t v135 = (uint64_t)v62;
  v62(v61, v58, v57);
  *uint64_t v60 = KeyPath;
  sub_B678((uint64_t)v26, v59, &qword_2ECB20);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v168 = v55 + 8;
  uint64_t v133 = v63;
  v63(v58, v57);
  sub_B6DC((uint64_t)v26, &qword_2ECB20);
  sub_19CC4(v59, v169, &qword_2F25D8);
  uint64_t v64 = v140;
  uint64_t v65 = &v140[*(int *)(v165 + 28)];
  uint64_t v66 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v130 = sub_26B160();
  uint64_t v67 = *(void *)(v130 - 8);
  uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 104);
  uint64_t v131 = v67 + 104;
  v129(v65, v66, v130);
  sub_26B340();
  *uint64_t v64 = v68;
  v64[1] = v69;
  v64[2] = v70;
  v64[3] = v71;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v128 = &type metadata accessor for UnevenRoundedRectangle;
  uint64_t v72 = v141;
  sub_16E094((uint64_t)v64, v141, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  uint64_t v73 = (_OWORD *)(v72 + *((int *)v144 + 11));
  long long v74 = v184;
  *uint64_t v73 = v183;
  v73[1] = v74;
  v73[2] = v185;
  uint64_t v144 = &type metadata accessor for UnevenRoundedRectangle;
  sub_16E0FC((uint64_t)v64, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  sub_26C7E0();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v79 = v142;
  sub_B678(v72, v142, &qword_2F25B0);
  uint64_t v80 = (int64x2_t *)(v79 + *(int *)(v146 + 44));
  *uint64_t v80 = vdupq_n_s64(0x3FEE666666666666uLL);
  v80[1].i64[0] = v76;
  v80[1].i64[1] = v78;
  sub_B6DC(v72, &qword_2F25B0);
  sub_26C7E0();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v85 = v143;
  sub_B678(v79, v143, &qword_2F25B8);
  uint64_t v86 = v85 + *(int *)(v147 + 44);
  *(_OWORD *)uint64_t v86 = xmmword_27BD10;
  *(_OWORD *)(v86 + 16) = xmmword_27BD20;
  *(void *)(v86 + 32) = v82;
  *(void *)(v86 + 40) = v84;
  *(_OWORD *)(v86 + 48) = xmmword_27BD30;
  sub_B6DC(v79, &qword_2F25B8);
  uint64_t v87 = v145;
  sub_B678(v85, v145, &qword_2F25C0);
  uint64_t v88 = v87 + *(int *)(v149 + 44);
  *(void *)uint64_t v88 = 0x4028000000000000;
  *(unsigned char *)(v88 + 8) = 0;
  sub_B6DC(v85, &qword_2F25C0);
  uint64_t v89 = v163;
  sub_B678(v87, v163, &qword_2F25C8);
  *(void *)(v89 + *(int *)(v148 + 44)) = 0x3FD3333333333333;
  sub_B6DC(v87, &qword_2F25C8);
  sub_19CC4(v89, v166, &qword_2F25D0);
  uint64_t v90 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  uint64_t v91 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v93 = v92;
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_26F980;
  sub_26C150();
  *(void *)(v94 + 32) = sub_26C560();
  *(void *)(v94 + 40) = v95;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v94 + 48) = sub_26C560();
  *(void *)(v94 + 56) = v96;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  *(void *)(v94 + 64) = sub_26C560();
  *(void *)(v94 + 72) = v97;
  sub_26C7A0();
  sub_26C7B0();
  sub_26C570();
  sub_26AA80();
  uint64_t v98 = v186;
  long long v149 = v187;
  uint64_t v99 = v188;
  uint64_t v100 = v189;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  *(void *)&long long v195 = v90;
  *(void *)&v196[0] = v98;
  *(_OWORD *)((char *)v196 + 8) = v149;
  *((void *)&v196[1] + 1) = v99;
  *(void *)&long long v197 = v100;
  *((void *)&v197 + 1) = 0x3FC3333333333333;
  LOBYTE(v198) = 1;
  *((void *)&v198 + 1) = v91;
  *(void *)&long long v199 = v93;
  *((void *)&v199 + 1) = v190;
  LOBYTE(v200) = v191;
  *((void *)&v200 + 1) = v192;
  LOBYTE(v201[0]) = v193;
  *(_OWORD *)((char *)v201 + 8) = v194;
  uint64_t v101 = (char *)v64 + *(int *)(v165 + 28);
  WORD4(v195) = 256;
  v129(v101, v66, v130);
  sub_26B340();
  *uint64_t v64 = v102;
  v64[1] = v103;
  v64[2] = v104;
  v64[3] = v105;
  uint64_t v106 = v153;
  sub_16E094((uint64_t)v64, v153, (uint64_t (*)(void))v128);
  *(_WORD *)(v106 + *(int *)(v154 + 44)) = 256;
  uint64_t v107 = (uint64_t)v151;
  sub_B678(v106, (uint64_t)&v151[*(int *)(v152 + 44)], &qword_2F2590);
  long long v108 = v201[0];
  *(_OWORD *)(v107 + 96) = v200;
  *(_OWORD *)(v107 + 112) = v108;
  *(void *)(v107 + 128) = *(void *)&v201[1];
  long long v109 = v197;
  *(_OWORD *)(v107 + 32) = v196[1];
  *(_OWORD *)(v107 + 48) = v109;
  long long v110 = v199;
  *(_OWORD *)(v107 + 64) = v198;
  *(_OWORD *)(v107 + 80) = v110;
  long long v111 = v196[0];
  *(_OWORD *)uint64_t v107 = v195;
  *(_OWORD *)(v107 + 16) = v111;
  sub_16E15C((uint64_t)&v195);
  sub_B6DC(v106, &qword_2F2590);
  sub_16E0FC((uint64_t)v64, (uint64_t (*)(void))v144);
  swift_bridgeObjectRelease();
  swift_release();
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v112 = sub_26C1C0();
  swift_release();
  uint64_t v113 = v155;
  sub_B678(v107, v155, &qword_2F2598);
  uint64_t v114 = v113 + *(int *)(v157 + 44);
  *(void *)uint64_t v114 = v112;
  *(double *)(v114 + 8) = a3 * 0.25;
  *(void *)(v114 + 16) = 0;
  *(double *)(v114 + 24) = a3 * 0.02;
  sub_B6DC(v107, &qword_2F2598);
  uint64_t v115 = swift_getKeyPath();
  uint64_t v117 = v160;
  uint64_t v116 = v161;
  v138(v160, v139, v161);
  uint64_t v118 = (uint64_t)v156;
  uint64_t v119 = (uint64_t *)&v156[*(int *)(v158 + 44)];
  ((void (*)(char *, char *, uint64_t))v135)((char *)v119 + *(int *)(v136 + 28), v117, v116);
  *uint64_t v119 = v115;
  sub_B678(v113, v118, &qword_2F25A0);
  v133(v117, v116);
  sub_B6DC(v113, &qword_2F25A0);
  uint64_t v120 = v167;
  sub_19CC4(v118, v167, &qword_2F25A8);
  uint64_t v121 = v150;
  sub_B678((uint64_t)v164, v150, &qword_2F25E0);
  uint64_t v122 = v162;
  sub_B678(v169, v162, &qword_2F25D8);
  uint64_t v123 = v166;
  uint64_t v124 = v163;
  sub_B678(v166, v163, &qword_2F25D0);
  sub_B678(v120, v118, &qword_2F25A8);
  uint64_t v125 = v159;
  sub_B678(v121, v159, &qword_2F25E0);
  uint64_t v126 = (int *)sub_4A98(&qword_2F25E8);
  sub_B678(v122, v125 + v126[12], &qword_2F25D8);
  sub_B678(v124, v125 + v126[16], &qword_2F25D0);
  sub_B678(v118, v125 + v126[20], &qword_2F25A8);
  sub_B6DC(v167, &qword_2F25A8);
  sub_B6DC(v123, &qword_2F25D0);
  sub_B6DC(v169, &qword_2F25D8);
  sub_B6DC((uint64_t)v164, &qword_2F25E0);
  sub_B6DC(v118, &qword_2F25A8);
  sub_B6DC(v124, &qword_2F25D0);
  sub_B6DC(v122, &qword_2F25D8);
  return sub_B6DC(v121, &qword_2F25E0);
}

uint64_t sub_16D2B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_16D2CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_16D2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F2440);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_16E094(v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PDFCoverEffect);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t result = sub_16C140((uint64_t)v9, v15 + v14);
  *a3 = sub_16C1A4;
  a3[1] = v15;
  return result;
}

uint64_t sub_16D4CC(uint64_t a1)
{
  uint64_t result = sub_16D674(&qword_2F2488, (void (*)(uint64_t))type metadata accessor for PDFCoverEffect);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PDFCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16D538);
}

uint64_t sub_16D538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_4A98(&qword_2EAB20);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PDFCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_16D5C0);
}

uint64_t sub_16D5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_16D638()
{
  return sub_7C18(&qword_2F2528, &qword_2F2530);
}

uint64_t sub_16D674(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFMask()
{
  return &type metadata for PDFMask;
}

uint64_t sub_16D6CC()
{
  return sub_7C18(&qword_2F2538, &qword_2F2540);
}

double sub_16D708@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_26B9F0();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMinY(v15);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetWidth(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetWidth(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMinY(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetWidth(v19);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinY(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetWidth(v21);
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  CGRectGetWidth(v22);
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  CGRectGetMinY(v23);
  v24.origin.x = a2;
  v24.origin.y = a3;
  v24.size.width = a4;
  v24.size.height = a5;
  CGRectGetWidth(v24);
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  CGRectGetMaxX(v25);
  v26.origin.x = a2;
  v26.origin.y = a3;
  v26.size.width = a4;
  v26.size.height = a5;
  CGRectGetWidth(v26);
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  CGRectGetMaxX(v27);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGRectGetWidth(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGRectGetWidth(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  CGRectGetWidth(v30);
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  CGRectGetMaxX(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  CGRectGetWidth(v32);
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  CGRectGetWidth(v33);
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  CGRectGetMaxX(v34);
  v35.origin.x = a2;
  v35.origin.y = a3;
  v35.size.width = a4;
  v35.size.height = a5;
  CGRectGetMaxY(v35);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  CGRectGetMinX(v36);
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  CGRectGetMaxY(v37);
  sub_26B9D0();
  sub_26B9E0();
  sub_26B9C0();
  sub_26B9E0();
  sub_26B9C0();
  sub_26B9E0();
  sub_26B9E0();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

double sub_16DA74@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_16D708((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_16DAC4()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_16DADC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_26A5E0();
  return sub_16DB4C;
}

void sub_16DB4C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_16DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_16DDB4();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_16DBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_16DDB4();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_16DC60(uint64_t a1)
{
  unint64_t v2 = sub_16DDB4();

  return Shape.body.getter(a1, v2);
}

unint64_t sub_16DCB0()
{
  unint64_t result = qword_2F2548;
  if (!qword_2F2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2548);
  }
  return result;
}

unint64_t sub_16DD08()
{
  unint64_t result = qword_2F2550;
  if (!qword_2F2550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2550);
  }
  return result;
}

unint64_t sub_16DD60()
{
  unint64_t result = qword_2F2558;
  if (!qword_2F2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2558);
  }
  return result;
}

unint64_t sub_16DDB4()
{
  unint64_t result = qword_2F2560;
  if (!qword_2F2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2560);
  }
  return result;
}

uint64_t sub_16DE0C()
{
  uint64_t v1 = sub_4A98(&qword_2F2440);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)(type metadata accessor for PDFCoverEffect() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  unint64_t v7 = v0 + v5[8] + v6;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_16DFAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_4A98(&qword_2F2440) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for PDFCoverEffect() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_16BC08(v1 + v4, v7, a1);
}

uint64_t sub_16E094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_16E0FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_16E15C(uint64_t a1)
{
  return a1;
}

unint64_t static FlowActionDestinationKinds._table.getter()
{
  if (qword_2E9CA8 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2F2600);
  sub_26A310();
  unint64_t v0 = sub_16E228(v2);
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_16E228(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_4A98(&qword_2EEBC8);
    uint64_t v2 = (void *)sub_26DBD0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_2F2608;
  char v9 = (uint64_t *)&unk_2EEBD8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v17 >= v30) {
    goto LABEL_32;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v30) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v30) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v30) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v19);
        if (!v18)
        {
          int64_t v20 = i + 5;
          if (i + 5 < v30)
          {
            unint64_t v18 = *(void *)(v31 + 8 * v20);
            if (v18)
            {
              int64_t v19 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v19 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_36;
              }
              if (v19 >= v30) {
                break;
              }
              unint64_t v18 = *(void *)(v31 + 8 * v19);
              ++v20;
              if (v18) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_BFCB4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    CGRect v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_4A98(v8);
    sub_4A98(v9);
    swift_dynamicCast();
    unint64_t result = sub_9E10(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      unint64_t v32 = v5;
      uint64_t v10 = v1;
      int64_t v11 = i;
      long long v12 = v9;
      char v13 = v8;
      CGRect v14 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v14 = v23;
      v14[1] = v22;
      uint64_t v8 = v13;
      char v9 = v12;
      int64_t i = v11;
      uint64_t v1 = v10;
      unint64_t v5 = v32;
      *(void *)(v2[7] + 8 * v24) = v33;
      if (!v32) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    CGRect v26 = (uint64_t *)(v2[6] + 16 * result);
    *CGRect v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v33;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_34;
    }
    v2[2] = v29;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_16E530()
{
  if (qword_2E9CB0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F25F8;
  sub_4A98(&qword_2F2610);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = v0;
  qword_2F25F0 = v1;

  return swift_bridgeObjectRetain();
}

unint64_t sub_16E5C0()
{
  sub_4A98(&qword_2F2618);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F980;
  *(void *)(inited + 32) = 1684366694;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = &type metadata for FlowAction.FeedDestination;
  *(void *)(inited + 56) = &protocol witness table for FlowAction.FeedDestination;
  *(void *)(inited + 64) = 0x536472614377656ELL;
  *(void *)(inited + 72) = 0xEA00000000007465;
  *(void *)(inited + 80) = &type metadata for FlowAction.NewCardSetDestination;
  *(void *)(inited + 88) = &protocol witness table for FlowAction.NewCardSetDestination;
  strcpy((char *)(inited + 96), "newSingleCard");
  *(_WORD *)(inited + 110) = -4864;
  *(void *)(inited + 112) = type metadata accessor for FlowAction.NewSingleCardDestination();
  *(void *)(inited + 120) = &protocol witness table for FlowAction.NewSingleCardDestination;
  unint64_t result = sub_95C0(inited);
  qword_2F25F8 = result;
  return result;
}

void static FlowActionDestinationKinds.register<A>(_:name:)(uint64_t a1)
{
  if (qword_2E9CA8 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_16E81C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_16E774(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_B1E4(a4, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_16E81C(uint64_t *a1)
{
  return sub_16E774(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t static FlowActionDestinationKinds._decode(_:from:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_26CA10();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_26C8F0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_BF8B8(a1);
  if (v9)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    sub_C224((uint64_t)a2, (uint64_t)v29);
    *(void *)&long long v31 = v12;
    *((void *)&v31 + 1) = v13;
    uint64_t v32 = v14;
    sub_CA1C(v30);
    sub_26D730();
    if (v3) {
      return sub_BF940((uint64_t)v30);
    }
LABEL_7:
    long long v28 = v31;
    uint64_t v22 = v31;
    uint64_t v23 = sub_4ADC(v30, v31);
    *(_OWORD *)(a3 + 24) = v28;
    unint64_t v24 = sub_CA1C((uint64_t *)a3);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v24, v23, v22);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v30);
  }
  uint64_t v16 = sub_BF8B8(a1);
  if (v16)
  {
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    uint64_t v21 = v18;
    sub_C224((uint64_t)a2, (uint64_t)v29);
    uint64_t result = sub_26C8D0();
    if (v3) {
      return result;
    }
    sub_4ADC(a2, a2[3]);
    sub_26DFA0();
    sub_26CA00();
    *(void *)&long long v31 = v19;
    *((void *)&v31 + 1) = v20;
    uint64_t v32 = v21;
    sub_CA1C(v30);
    sub_26CDE0();
    goto LABEL_7;
  }
  uint64_t v25 = sub_26DAD0();
  swift_allocError();
  uint64_t v27 = v26;
  sub_4A98(&qword_2EBAB0);
  *uint64_t v27 = a1;
  sub_4ADC(a2, a2[3]);
  sub_26DF80();
  sub_26DA90(21);
  swift_bridgeObjectRelease();
  v30[0] = 60;
  v30[1] = 0xE100000000000000;
  v33._countAndFlagsBits = sub_26E0F0();
  sub_26D4E0(v33);
  swift_bridgeObjectRelease();
  v34._object = (void *)0x8000000000289370;
  v34._countAndFlagsBits = 0xD000000000000012;
  sub_26D4E0(v34);
  sub_26DAC0();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
  return swift_willThrow();
}

uint64_t sub_16EBCC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return static FlowActionDestinationKinds._decode(_:from:)(a1, a2, a3);
}

void static FlowActionDestination.registerFlowActionDestination(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

ValueMetadata *type metadata accessor for FlowActionDestinationKinds()
{
  return &type metadata for FlowActionDestinationKinds;
}

uint64_t static ListItemMetadata.recommendationsPage(assetInfo:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  uint64_t v4 = sub_26A020();
  uint64_t v6 = v5;
  sub_4ADC(a1, a1[3]);
  uint64_t v7 = sub_26A030();
  uint64_t v9 = v8;
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  v28[3] = &type metadata for ListItemMetadataTitleWithSubtitle;
  v28[4] = sub_C190();
  uint64_t v10 = swift_allocObject();
  v28[0] = v10;
  *(void *)(v10 + 16) = v4;
  *(void *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 48) = 3;
  sub_C224((uint64_t)a1, (uint64_t)v25);
  v27[3] = sub_4A98(&qword_2EA0D0);
  v27[4] = sub_7C18((unint64_t *)&qword_2EA0D8, &qword_2EA0D0);
  uint64_t v11 = swift_allocObject();
  v27[0] = v11;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  *(void *)(v11 + 16) = KeyPath;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 67) = 0u;
  *(void *)(v11 + 88) = v13;
  *(unsigned char *)(v11 + 96) = 0;
  *(void *)(v11 + 104) = v14;
  *(_WORD *)(v11 + 112) = 0;
  sub_AD44(v25, v11 + 120);
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_C224((uint64_t)a1, (uint64_t)v21);
  v22[3] = sub_4A98(&qword_2F2620);
  v22[4] = sub_7C18(&qword_2F2628, &qword_2F2620);
  uint64_t v15 = swift_allocObject();
  v22[0] = v15;
  sub_4ADC(v21, v21[3]);
  uint64_t v16 = sub_26A000();
  uint64_t v18 = v17;
  uint64_t v19 = swift_getKeyPath();
  *(void *)(v15 + 16) = v19;
  *(unsigned char *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  sub_10E0C(v19, 0);
  swift_bridgeObjectRetain();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v21);
  sub_C374(v19, 0);
  swift_bridgeObjectRelease();
  *(void *)(a2 + 272) = 0;
  *(_OWORD *)(a2 + 256) = 0u;
  *(_OWORD *)(a2 + 208) = 0u;
  *(_OWORD *)(a2 + 224) = 0u;
  *(_OWORD *)(a2 + 176) = 0u;
  *(_OWORD *)(a2 + 192) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 240) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  sub_C950((uint64_t)v29, a2, &qword_2EA0E0);
  sub_C950((uint64_t)v28, a2 + 40, &qword_2EA0E8);
  sub_C950((uint64_t)v27, a2 + 80, &qword_2EA0F0);
  sub_C950((uint64_t)v25, a2 + 160, &qword_2EA0F8);
  sub_C950((uint64_t)v23, a2 + 200, &qword_2EA100);
  return sub_C950((uint64_t)v22, a2 + 240, &qword_2EA108);
}

uint64_t sub_16EF5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_16EF9C()
{
  sub_C360(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(_WORD *)(v0 + 80), *(unsigned char *)(v0 + 82));
  sub_C374(*(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_C374(*(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 120);

  return swift_deallocObject();
}

uint64_t sub_16F02C()
{
  sub_C374(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void ShelfGridBlurEdgeMaskView.init(insets:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = 0x4028000000000000;
}

void *ShelfGridBlurEdgeMaskView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26B120();
  sub_16F110((uint64_t)__src);
  memcpy(&v5[7], __src, 0x128uLL);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return memcpy((void *)(a1 + 17), v5, 0x12FuLL);
}

double sub_16F110@<D0>(uint64_t a1@<X8>)
{
  uint64_t v7 = sub_26C170();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_4A98(&qword_2F2640);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_270BF0;
  *(void *)(v2 + 32) = sub_26C170();
  *(void *)(v2 + 40) = sub_26C150();
  sub_26D630();
  sub_26C580();
  sub_26C7F0();
  sub_26C800();
  sub_26AA80();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v6 = sub_26C150();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_270BF0;
  *(void *)(v3 + 32) = sub_26C170();
  *(void *)(v3 + 40) = sub_26C150();
  uint64_t v34 = v3;
  sub_26D630();
  sub_26C580();
  sub_26C800();
  sub_26C7F0();
  sub_26AA80();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v4 = sub_26C170();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 64) = v15;
  *(void *)(a1 + 80) = v16;
  *(void *)(a1 + 88) = v17;
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v19;
  *(void *)(a1 + 112) = v20;
  *(unsigned char *)(a1 + 120) = v21;
  *(void *)(a1 + 128) = v22;
  *(void *)(a1 + 136) = v23;
  *(void *)(a1 + 144) = v6;
  *(void *)(a1 + 152) = v24;
  *(_OWORD *)(a1 + 160) = v25;
  *(void *)(a1 + 176) = v26;
  *(void *)(a1 + 184) = v27;
  *(void *)(a1 + 192) = v28;
  *(unsigned char *)(a1 + 200) = v29;
  *(_DWORD *)(a1 + 204) = *(_DWORD *)&v42[3];
  *(_DWORD *)(a1 + 201) = *(_DWORD *)v42;
  *(void *)(a1 + 208) = v30;
  *(unsigned char *)(a1 + 216) = v31;
  *(_DWORD *)(a1 + 220) = *(_DWORD *)&v41[3];
  *(_DWORD *)(a1 + 217) = *(_DWORD *)v41;
  *(void *)(a1 + 224) = v32;
  *(void *)(a1 + 232) = v33;
  *(void *)(a1 + 240) = v4;
  *(void *)(a1 + 248) = v34;
  *(unsigned char *)(a1 + 256) = v35;
  *(_DWORD *)(a1 + 257) = *(_DWORD *)v40;
  *(_DWORD *)(a1 + 260) = *(_DWORD *)&v40[3];
  *(void *)(a1 + 264) = v36;
  *(unsigned char *)(a1 + 272) = v37;
  *(_DWORD *)(a1 + 273) = *(_DWORD *)v39;
  *(_DWORD *)(a1 + 276) = *(_DWORD *)&v39[3];
  double result = *(double *)&v38;
  *(_OWORD *)(a1 + 280) = v38;
  return result;
}

uint64_t sub_16F4DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ShelfGridBlurEdgeMaskView(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShelfGridBlurEdgeMaskView(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridBlurEdgeMaskView()
{
  return &type metadata for ShelfGridBlurEdgeMaskView;
}

unint64_t sub_16F560()
{
  unint64_t result = qword_2F2630;
  if (!qword_2F2630)
  {
    sub_7B0C(&qword_2F2638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2630);
  }
  return result;
}

uint64_t dispatch thunk of CardSetPresentable.cardInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_16F5D0()
{
  return sub_26A6A0();
}

uint64_t sub_16F5E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = sub_26B500();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((a3 & 1) == 0) {
    sub_26A640();
  }
  v13[1] = v8;
  v13[2] = v9;
  v13[3] = v10;
  v13[4] = v11;
  char v14 = a3 & 1;
  sub_26B4F0();
  sub_26C030();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_16F728(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_26DB90();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v4 = sub_26C5A0();
      uint64_t v5 = (char *)sub_26D650();
      *((void *)v5 + 2) = a2;
      uint64_t v6 = *(void *)(v4 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v8(&v5[v7], a1, v4);
      uint64_t v9 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v10 = *(void *)(v6 + 72);
        uint64_t v11 = &v5[v10 + v7];
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v12 = sub_26C5A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return (uint64_t)v5;
  }
  return result;
}

uint64_t BooksFinishedFrameViewModel.init(coverViewModels:localizedYear:userName:exposureData:lowAssetCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t *a8@<X8>)
{
  *a8 = swift_getKeyPath();
  sub_4A98(&qword_2EB3D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v17 = (uint64_t *)((char *)a8 + v16[5]);
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a8 + v16[11]) = 9;
  *(_OWORD *)((char *)a8 + v16[12]) = xmmword_27C0B0;
  *(uint64_t *)((char *)a8 + v16[6]) = a1;
  uint64_t v18 = (uint64_t *)((char *)a8 + v16[7]);
  *uint64_t v18 = a2;
  v18[1] = a3;
  char v19 = (uint64_t *)((char *)a8 + v16[8]);
  *char v19 = a4;
  v19[1] = a5;
  uint64_t v20 = (char *)a8 + v16[9];
  uint64_t v21 = sub_269BE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a6, v21);
  *((unsigned char *)a8 + v16[10]) = a7 ^ 1;
  return result;
}

uint64_t sub_16FA24()
{
  uint64_t v29 = sub_269920();
  uint64_t v1 = *(void *)(v29 - 8);
  uint64_t v2 = __chkstk_darwin(v29);
  uint64_t v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v28 = sub_26D3E0();
  uint64_t v6 = *(void *)(v28 - 8);
  uint64_t v7 = __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_26D3C0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  char v14 = v13;
  uint64_t v15 = *(void *)(v0 + v13[6]);
  if (*(unsigned char *)(v0 + v13[10]))
  {
    uint64_t v16 = (uint64_t *)(v0 + v13[8]);
    uint64_t v17 = (void *)v16[1];
    uint64_t v26 = *v16;
    sub_26D3B0();
    if (v17)
    {
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      sub_26D3A0(v31);
      v32._countAndFlagsBits = v26;
      v32._object = v17;
      sub_26D390(v32);
      v18._countAndFlagsBits = 0x657220756F79202CLL;
      v18._object = (void *)0xEB00000000206461;
    }
    else
    {
      v18._countAndFlagsBits = 0x6461657220756F59;
      v18._object = (void *)0xE900000000000020;
    }
    sub_26D3A0(v18);
    uint64_t v30 = *(void *)(v15 + 16);
    sub_26D380();
    v33._countAndFlagsBits = 0x6920736B6F6F6220;
    v33._object = (void *)0xEA0000000000206ELL;
    sub_26D3A0(v33);
    sub_26D390(*(Swift::String *)(v0 + v14[7]));
    v34._countAndFlagsBits = 46;
    v34._object = (void *)0xE100000000000000;
    sub_26D3A0(v34);
    sub_26D3D0();
    sub_2698C0();
    uint64_t v19 = v28;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v28);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v27, v5, v29);
  }
  else
  {
    if (*(void *)(v15 + 16) == 1)
    {
      sub_26D3B0();
      v22._object = (void *)0x800000000028AE90;
      v22._countAndFlagsBits = 0xD000000000000016;
    }
    else
    {
      sub_26D3B0();
      v22._countAndFlagsBits = 0xD000000000000018;
      v22._object = (void *)0x800000000028AE30;
    }
    sub_26D3A0(v22);
    sub_26D390(*(Swift::String *)(v0 + v14[7]));
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_26D3A0(v35);
    sub_26D3D0();
    sub_2698C0();
    uint64_t v19 = v28;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v28);
    type metadata accessor for BundleFinder();
    uint64_t v23 = swift_getObjCClassFromMetadata();
    [self bundleForClass:v23];
    uint64_t v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v27, v5, v29);
  }
  uint64_t v24 = sub_26D460();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v19);
  return v24;
}

uint64_t sub_170124()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v17[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v17[-v12];
  type metadata accessor for BooksFinishedFrameViewModel(0);
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v15 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t sub_170474()
{
  uint64_t v1 = sub_4A98(&qword_2F2910);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_4A98(&qword_2EB3E0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v12 = *(void *)(*(void *)(v0 + *(int *)(v11 + 24)) + 16);
  sub_41314((uint64_t)v10);
  uint64_t v13 = (uint64_t)v4 + *(int *)(v2 + 56);
  *uint64_t v4 = v12;
  sub_19CC4((uint64_t)v10, v13, &qword_2EB3E0);
  if (v12 >= *(void *)(v0 + *(int *)(v11 + 44)))
  {
    uint64_t v16 = sub_26B4B0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) != 1)
    {
      sub_B678(v13, (uint64_t)v8, &qword_2EB3E0);
      int v18 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v8, v16);
      if (v18 == enum case for UserInterfaceSizeClass.compact(_:))
      {
        sub_B6DC(v13, &qword_2EB3E0);
        return 3;
      }
      if (v18 == enum case for UserInterfaceSizeClass.regular(_:))
      {
        sub_B6DC(v13, &qword_2EB3E0);
        return 4;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
    }
    char v14 = &qword_2F2910;
    uint64_t v15 = (uint64_t)v4;
  }
  else
  {
    char v14 = &qword_2EB3E0;
    uint64_t v15 = v13;
  }
  sub_B6DC(v15, v14);
  return 2;
}

uint64_t sub_1706E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v2 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v72 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B4B0();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v60 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_4A98(&qword_2EB4C8);
  uint64_t v10 = __chkstk_darwin(v75);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v57 - v13;
  uint64_t v15 = sub_4A98(&qword_2EB3E0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v61 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v68 = (char *)&v57 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  long long v25 = (char *)&v57 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v57 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v57 - v29;
  Swift::String v31 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v32 = *(void *)(*(void *)(v1 + v31[6]) + 16);
  uint64_t v33 = *(void *)(v1 + v31[11]);
  uint64_t v71 = v12;
  uint64_t v76 = v31;
  uint64_t v67 = v20;
  if (v32 >= v33)
  {
    uint64_t v34 = 3;
  }
  else
  {
    uint64_t v34 = 1;
    if (*(unsigned char *)(v1 + v31[10])) {
      uint64_t v34 = 2;
    }
  }
  uint64_t v70 = v34;
  uint64_t v69 = sub_170474();
  uint64_t v77 = v1;
  sub_41314((uint64_t)v30);
  Swift::String v35 = (void (*)(void))v8[13];
  unsigned int v62 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v65 = (void (*)(char *, void, uint64_t))v35;
  v35(v28);
  uint64_t v63 = (void (*)(char *, void, uint64_t, uint64_t))v8[7];
  uint64_t v64 = v8 + 7;
  v63(v28, 0, 1, v7);
  uint64_t v36 = (uint64_t)&v14[*(int *)(v75 + 48)];
  sub_B678((uint64_t)v30, (uint64_t)v14, &qword_2EB3E0);
  sub_B678((uint64_t)v28, v36, &qword_2EB3E0);
  long long v74 = v8;
  char v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v8[6];
  unsigned int v38 = v37(v14, 1, v7);
  uint64_t v66 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v37;
  if (v38 == 1)
  {
    sub_B6DC((uint64_t)v28, &qword_2EB3E0);
    sub_B6DC((uint64_t)v30, &qword_2EB3E0);
    if (v37((char *)v36, 1, v7) == 1)
    {
      sub_B6DC((uint64_t)v14, &qword_2EB3E0);
      double v39 = 20.0;
      uint64_t v40 = (uint64_t)v72;
      uint64_t v41 = (uint64_t)v68;
      goto LABEL_14;
    }
  }
  else
  {
    sub_B678((uint64_t)v14, (uint64_t)v25, &qword_2EB3E0);
    if (v37((char *)v36, 1, v7) != 1)
    {
      uint64_t v42 = v60;
      ((void (*)(char *, uint64_t, uint64_t))v74[4])(v60, v36, v7);
      sub_176CC8((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      int v59 = sub_26D360();
      uint64_t v58 = v25;
      uint64_t v43 = (void (*)(char *, uint64_t))v74[1];
      v43(v42, v7);
      sub_B6DC((uint64_t)v28, &qword_2EB3E0);
      sub_B6DC((uint64_t)v30, &qword_2EB3E0);
      v43(v58, v7);
      sub_B6DC((uint64_t)v14, &qword_2EB3E0);
      double v39 = 20.0;
      uint64_t v40 = (uint64_t)v72;
      uint64_t v41 = (uint64_t)v68;
      if (v59) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    sub_B6DC((uint64_t)v28, &qword_2EB3E0);
    sub_B6DC((uint64_t)v30, &qword_2EB3E0);
    ((void (*)(char *, uint64_t))v74[1])(v25, v7);
  }
  sub_B6DC((uint64_t)v14, &qword_2EB4C8);
  uint64_t v40 = (uint64_t)v72;
  uint64_t v41 = (uint64_t)v68;
LABEL_13:
  double v39 = 24.0;
LABEL_14:
  sub_41378((uint64_t)v6);
  sub_176D18((uint64_t)v6, v40, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v6, type metadata accessor for SizeConstants);
  sub_17D390(v40, type metadata accessor for SizeConstants.Spacing);
  sub_41314(v41);
  uint64_t v44 = (uint64_t)v67;
  v65(v67, v62, v7);
  v63((char *)v44, 0, 1, v7);
  uint64_t v45 = (uint64_t)v71;
  uint64_t v46 = (uint64_t)&v71[*(int *)(v75 + 48)];
  sub_B678(v41, (uint64_t)v71, &qword_2EB3E0);
  sub_B678(v44, v46, &qword_2EB3E0);
  uint64_t v47 = v66;
  if (v66(v45, 1, v7) != 1)
  {
    uint64_t v49 = (uint64_t)v61;
    sub_B678(v45, (uint64_t)v61, &qword_2EB3E0);
    if (v47(v46, 1, v7) != 1)
    {
      uint64_t v50 = v44;
      uint64_t v51 = v74;
      uint64_t v52 = v60;
      ((void (*)(char *, uint64_t, uint64_t))v74[4])(v60, v46, v7);
      sub_176CC8((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      LODWORD(v75) = sub_26D360();
      uint64_t v53 = (void (*)(char *, uint64_t))v51[1];
      v53(v52, v7);
      sub_B6DC(v50, &qword_2EB3E0);
      sub_B6DC(v41, &qword_2EB3E0);
      v53(v61, v7);
      sub_B6DC(v45, &qword_2EB3E0);
      double v48 = 20.0;
      if (v75) {
        goto LABEL_22;
      }
LABEL_21:
      double v48 = 24.0;
      goto LABEL_22;
    }
    sub_B6DC(v44, &qword_2EB3E0);
    sub_B6DC(v41, &qword_2EB3E0);
    ((void (*)(uint64_t, uint64_t))v74[1])(v49, v7);
LABEL_19:
    sub_B6DC(v45, &qword_2EB4C8);
    goto LABEL_21;
  }
  sub_B6DC(v44, &qword_2EB3E0);
  sub_B6DC(v41, &qword_2EB3E0);
  if (v47(v46, 1, v7) != 1) {
    goto LABEL_19;
  }
  sub_B6DC(v45, &qword_2EB3E0);
  double v48 = 20.0;
LABEL_22:
  sub_41378((uint64_t)v6);
  sub_176D18((uint64_t)v6, v40, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v6, type metadata accessor for SizeConstants);
  sub_17D390(v40, type metadata accessor for SizeConstants.Spacing);
  sub_41378((uint64_t)v6);
  sub_176D18((uint64_t)v6, v40, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v6, type metadata accessor for SizeConstants);
  uint64_t result = sub_17D390(v40, type metadata accessor for SizeConstants.Spacing);
  uint64_t v55 = (double *)v73;
  uint64_t v56 = v69;
  *uint64_t v73 = v70;
  *((void *)v55 + 1) = v56;
  v55[2] = v39;
  v55[3] = v48;
  v55[4] = 32.0;
  return result;
}

uint64_t sub_171054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v1 = sub_26D3C0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_269920();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v78 - v7;
  uint64_t v9 = sub_26D3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v78 - v14;
  sub_26D370();
  sub_2698C0();
  uint64_t v16 = *(void (**)(char *, char *))(v10 + 16);
  uint64_t v94 = v10 + 16;
  uint64_t v99 = v16;
  ((void (*)(char *, char *, uint64_t))v16)(v13, v15, v9);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v97 = self;
  uint64_t v91 = ObjCClassFromMetadata;
  id v18 = [v97 bundleForClass:ObjCClassFromMetadata];
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v93 = v3 + 16;
  uint64_t v98 = v19;
  v19(v6, v8, v2);
  uint64_t v84 = v13;
  uint64_t v20 = v6;
  uint64_t v21 = sub_26D460();
  uint64_t v87 = v22;
  uint64_t v88 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v92 = v2;
  uint64_t v95 = v23;
  uint64_t v96 = v3 + 8;
  v23(v8, v2);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v90 = v9;
  uint64_t v100 = v24;
  uint64_t v101 = v10 + 8;
  v24(v15, v9);
  uint64_t v25 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v26 = v85;
  if (*(unsigned char *)(v85 + *(int *)(v25 + 40)))
  {
    uint64_t v82 = sub_171AA0(v85);
    uint64_t v81 = v27;
    sub_4A98(&qword_2F28F8);
    uint64_t v85 = type metadata accessor for BulletPointStack.Bullet(0);
    uint64_t v28 = *(void *)(v85 - 8);
    uint64_t v80 = *(void *)(v28 + 72);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_270BF0;
    uint64_t v86 = v30;
    Swift::String v31 = (void *)(v30 + v29);
    sub_26D370();
    sub_2698C0();
    uint64_t v32 = v84;
    uint64_t v33 = v90;
    v99(v84, v15);
    uint64_t v34 = v91;
    id v35 = [v97 bundleForClass];
    uint64_t v83 = v6;
    uint64_t v36 = v92;
    v98(v6, v8, v92);
    uint64_t v79 = sub_26D460();
    uint64_t v78 = v37;
    v95(v8, v36);
    v100(v15, v33);
    sub_26D370();
    sub_2698C0();
    ((void (*)(char *, char *, uint64_t))v99)(v32, v15, v33);
    uint64_t v38 = v34;
    id v39 = [v97 bundleForClass:v34];
    v98(v20, v8, v36);
    uint64_t v40 = sub_26D460();
    uint64_t v42 = v41;
    v95(v8, v36);
    uint64_t v43 = v90;
    v100(v15, v90);
    *Swift::String v31 = 0xD000000000000010;
    v31[1] = 0x800000000028A900;
    uint64_t v44 = v78;
    v31[2] = v79;
    v31[3] = v44;
    v31[4] = v40;
    v31[5] = v42;
    v85 += 28;
    sub_269830();
    uint64_t v45 = (void *)((char *)v31 + v80);
    sub_26D370();
    sub_2698C0();
    uint64_t v46 = v32;
    uint64_t v47 = v32;
    uint64_t v48 = v43;
    ((void (*)(char *, char *, uint64_t))v99)(v47, v15, v43);
    id v49 = [v97 bundleForClass:v38];
    uint64_t v50 = v92;
    v98(v83, v8, v92);
    uint64_t v80 = sub_26D460();
    uint64_t v79 = v51;
    uint64_t v52 = v50;
    uint64_t v53 = v95;
    v95(v8, v50);
    v100(v15, v48);
    sub_26D370();
    sub_2698C0();
    ((void (*)(char *, char *, uint64_t))v99)(v46, v15, v48);
    id v54 = [v97 bundleForClass:v91];
    v98(v83, v8, v50);
    uint64_t v55 = sub_26D460();
    uint64_t v57 = v56;
    uint64_t v58 = v8;
    uint64_t v59 = v81;
    v53(v58, v52);
    uint64_t v60 = v82;
    v100(v15, v48);
    *uint64_t v45 = 0x7261646E656C6163;
    v45[1] = 0xE800000000000000;
    uint64_t v61 = v79;
    v45[2] = v80;
    v45[3] = v61;
    v45[4] = v55;
    v45[5] = v57;
    uint64_t v62 = v87;
    uint64_t v63 = v88;
  }
  else
  {
    uint64_t v64 = v25;
    sub_4A98(&qword_2F28F8);
    uint64_t v65 = *(void *)(type metadata accessor for BulletPointStack.Bullet(0) - 8);
    unint64_t v66 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_26F990;
    uint64_t v86 = v67;
    uint64_t v68 = (void *)(v67 + v66);
    sub_26D3B0();
    v102._countAndFlagsBits = 0xD000000000000030;
    v102._object = (void *)0x800000000028AB60;
    sub_26D3A0(v102);
    sub_26D390(*(Swift::String *)(v26 + *(int *)(v64 + 28)));
    v103._countAndFlagsBits = 0xD000000000000066;
    v103._object = (void *)0x800000000028ABA0;
    sub_26D3A0(v103);
    sub_26D3D0();
    sub_2698C0();
    uint64_t v69 = v90;
    ((void (*)(char *, char *, uint64_t))v99)(v84, v15, v90);
    id v70 = [v97 bundleForClass:v91];
    uint64_t v71 = v92;
    v98(v6, v8, v92);
    uint64_t v72 = sub_26D460();
    uint64_t v74 = v73;
    v95(v8, v71);
    v100(v15, v69);
    uint64_t v60 = 0;
    uint64_t v59 = 0;
    *uint64_t v68 = 0xD000000000000010;
    v68[1] = 0x800000000028A900;
    uint64_t v75 = v87;
    v68[2] = v88;
    v68[3] = v75;
    v68[4] = v72;
    v68[5] = v74;
    uint64_t v63 = 0;
    uint64_t v62 = 0;
  }
  uint64_t result = sub_269830();
  uint64_t v77 = v89;
  *uint64_t v89 = v63;
  v77[1] = v62;
  v77[2] = v60;
  v77[3] = v59;
  v77[4] = v86;
  return result;
}

uint64_t sub_171AA0(uint64_t a1)
{
  uint64_t v2 = sub_269920();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v21[-v7];
  uint64_t v9 = sub_26D3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v21[-v14];
  uint64_t v16 = sub_26D3C0();
  __chkstk_darwin(v16 - 8);
  sub_26D3B0();
  v22._countAndFlagsBits = 0x72757320656B614DLL;
  v22._object = (void *)0xEF2072756F792065;
  sub_26D3A0(v22);
  Swift::String v23 = *(Swift::String *)(a1 + *(int *)(type metadata accessor for BooksFinishedFrameViewModel(0) + 28));
  sub_26D390(v23);
  v24._object = (void *)0x800000000028AC50;
  v24._countAndFlagsBits = 0x1000000000000070;
  sub_26D3A0(v24);
  sub_26D3D0();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v15, v9);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v19 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
  return v19;
}

uint64_t sub_171DB8(uint64_t a1)
{
  uint64_t v3 = sub_26C590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (_OWORD *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_26C5A0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v6 = xmmword_27C0C0;
  (*(void (**)(_OWORD *, void, uint64_t))(v4 + 104))(v6, enum case for GridItem.Size.flexible(_:), v3);
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(a1 + 68));
  sub_26C5B0();
  return sub_16F728((uint64_t)v9, *v10);
}

uint64_t sub_171F0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v77 = sub_26B5B0();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26B6E0();
  __chkstk_darwin(v4 - 8);
  uint64_t v73 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B700();
  uint64_t v74 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[2];
  uint64_t v9 = sub_26D680();
  uint64_t v71 = a1[5];
  uint64_t v70 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v69 = a1[3];
  uint64_t v11 = v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v91 = v9;
  uint64_t v92 = AssociatedTypeWitness;
  uint64_t v93 = v11;
  uint64_t v94 = (void *)WitnessTable;
  uint64_t v95 = AssociatedConformanceWitness;
  uint64_t v14 = sub_26C510();
  uint64_t v68 = a1[6];
  uint64_t v90 = v68;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v91 = v14;
  uint64_t v92 = v15;
  swift_getOpaqueTypeMetadata2();
  uint64_t v91 = v14;
  uint64_t v92 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = sub_26C720();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v91 = v16;
  uint64_t v92 = v17;
  swift_getOpaqueTypeMetadata2();
  uint64_t v56 = a1[4];
  uint64_t v78 = a1;
  uint64_t v57 = a1[7];
  uint64_t v91 = v56;
  uint64_t v92 = v57;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_26C770();
  swift_getWitnessTable();
  sub_26C3C0();
  v54[1] = swift_getWitnessTable();
  uint64_t v18 = sub_26A690();
  uint64_t v55 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v54 - v19;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v91 = v18;
  uint64_t v92 = v6;
  v54[0] = v6;
  uint64_t v93 = v21;
  uint64_t v94 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v67 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  Swift::String v24 = (char *)v54 - v23;
  uint64_t v91 = v18;
  uint64_t v92 = v6;
  uint64_t v93 = v21;
  uint64_t v94 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = OpaqueTypeMetadata2;
  uint64_t v92 = OpaqueTypeConformance2;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v60 = (char *)v54 - v27;
  uint64_t v91 = OpaqueTypeMetadata2;
  uint64_t v92 = OpaqueTypeConformance2;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = v26;
  uint64_t v92 = v28;
  uint64_t v59 = v28;
  uint64_t v29 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  Swift::String v31 = (char *)v54 - v30;
  sub_26B500();
  uint64_t v65 = v29;
  uint64_t v32 = sub_26ABD0();
  uint64_t v66 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v61 = (char *)v54 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v64 = (char *)v54 - v35;
  sub_26B720();
  uint64_t v81 = v70;
  uint64_t v82 = v69;
  uint64_t v83 = v56;
  uint64_t v84 = v71;
  uint64_t v85 = v68;
  uint64_t v86 = v57;
  uint64_t v87 = v80;
  sub_26A6A0();
  sub_26B6D0();
  uint64_t v36 = v72;
  sub_26B6F0();
  uint64_t v73 = v24;
  uint64_t v37 = v54[0];
  uint64_t v38 = v75;
  sub_26BEC0();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v18);
  sub_26B5A0();
  LOBYTE(v37) = sub_26B740();
  unsigned __int8 v39 = sub_26B720();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v37) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v39) {
    sub_26B730();
  }
  uint64_t v40 = v60;
  uint64_t v41 = v73;
  sub_26BDD0();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v77);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, OpaqueTypeMetadata2);
  uint64_t v42 = v59;
  sub_26BE70();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v26);
  uint64_t v43 = sub_26B750();
  uint64_t v44 = *(void *)(v80 + *((int *)v78 + 17) + 32);
  uint64_t v91 = v26;
  uint64_t v92 = v42;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v61;
  uint64_t v47 = v43;
  uint64_t v48 = v65;
  sub_16F5E8(v47, v44, 0);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v48);
  uint64_t v49 = sub_176CC8(&qword_2EB0F0, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v88 = v45;
  uint64_t v89 = v49;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = v64;
  sub_CCCC(v46, v32, v50);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v66 + 8);
  v52(v46, v32);
  sub_CCCC(v51, v32, v50);
  return ((uint64_t (*)(char *, uint64_t))v52)(v51, v32);
}

uint64_t sub_1729FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a8;
  sub_26D680();
  uint64_t v27 = a5;
  swift_getAssociatedTypeWitness();
  uint64_t v39 = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_26C510();
  uint64_t v43 = a6;
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_26C720();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v14 = a4;
  uint64_t v37 = a4;
  uint64_t v38 = a7;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  _OWORD v26[2] = sub_26C770();
  v26[1] = swift_getWitnessTable();
  uint64_t v15 = sub_26C3C0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v26 - v20;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v22 = v27;
  uint64_t v39 = v14;
  uint64_t WitnessTable = v27;
  uint64_t AssociatedConformanceWitness = a6;
  uint64_t v42 = a7;
  v26[0] = *(void *)(v28 + *(int *)(type metadata accessor for HorizontalScrollingGrid() + 68) + 24);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = v14;
  uint64_t v33 = v22;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v36 = v28;
  sub_26B120();
  sub_26C3B0();
  uint64_t v23 = swift_getWitnessTable();
  sub_CCCC(v19, v15, v23);
  Swift::String v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v19, v15);
  sub_CCCC(v21, v15, v23);
  return ((uint64_t (*)(char *, uint64_t))v24)(v21, v15);
}

uint64_t sub_172DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, void, void, void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void, void, void)@<X5>, void (*a7)(void, void, void, void)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v127 = a6;
  uint64_t v140 = a4;
  uint64_t v136 = a1;
  uint64_t v128 = a8;
  uint64_t v112 = sub_26B4B0();
  uint64_t v139 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v107 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_4A98(&qword_2EB4C8);
  uint64_t v14 = __chkstk_darwin(v135);
  uint64_t v124 = (uint64_t)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v131 = (uint64_t)&v105 - v16;
  uint64_t v17 = sub_4A98(&qword_2EB3E0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v106 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v119 = (char *)&v105 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v120 = (char *)&v105 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v114 = (uint64_t)&v105 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v130 = (uint64_t)&v105 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v129 = (uint64_t)&v105 - v29;
  uint64_t v138 = *(void *)(a4 - 8);
  __chkstk_darwin(v28);
  uint64_t v137 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = a4;
  uint64_t v152 = a7;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v123 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v31 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v125 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v121 = (char *)&v105 - v34;
  __chkstk_darwin(v33);
  uint64_t v122 = (char *)&v105 - v35;
  uint64_t v36 = sub_26B3D0();
  __chkstk_darwin(v36 - 8);
  uint64_t v117 = (char *)&v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_26D680();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v151 = v38;
  uint64_t v152 = (void (*)(void, void, void, void))AssociatedTypeWitness;
  uint64_t v153 = a3;
  uint64_t v154 = WitnessTable;
  uint64_t v155 = AssociatedConformanceWitness;
  uint64_t v42 = sub_26C510();
  uint64_t v43 = (uint64_t)v127;
  uint64_t v157 = v127;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v151 = v42;
  uint64_t v152 = (void (*)(void, void, void, void))v44;
  uint64_t v111 = swift_getOpaqueTypeMetadata2();
  uint64_t v151 = v42;
  uint64_t v152 = (void (*)(void, void, void, void))v44;
  uint64_t OpaqueTypeConformance2 = (void (*)(char *, void, uint64_t))swift_getOpaqueTypeConformance2();
  uint64_t v45 = sub_26C720();
  uint64_t v116 = *(uint64_t (**)(char *, uint64_t))(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v113 = (char *)&v105 - v46;
  long long v109 = (void (*)(void, void, void, void))swift_getWitnessTable();
  uint64_t v151 = v45;
  uint64_t v152 = v109;
  uint64_t v115 = &opaque type descriptor for <<opaque return type of View.scrollTargetLayout(isEnabled:)>>;
  uint64_t v134 = swift_getOpaqueTypeMetadata2();
  uint64_t v132 = *(void *)(v134 - 8);
  uint64_t v47 = __chkstk_darwin(v134);
  uint64_t v118 = (char *)&v105 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v105 - v50;
  __chkstk_darwin(v49);
  uint64_t v133 = (char *)&v105 - v52;
  uint64_t v53 = a2;
  uint64_t v151 = a2;
  uint64_t v152 = a3;
  uint64_t v54 = v140;
  uint64_t v153 = (void (*)(void, void, void, void))v140;
  uint64_t v154 = a5;
  uint64_t v155 = v43;
  uint64_t v156 = a7;
  uint64_t v55 = type metadata accessor for HorizontalScrollingGrid();
  uint64_t v56 = v136;
  uint64_t v108 = sub_171DB8(v55);
  uint64_t v141 = v53;
  uint64_t v142 = a3;
  uint64_t v143 = v54;
  uint64_t v144 = a5;
  uint64_t v145 = v43;
  uint64_t v146 = a7;
  uint64_t v127 = a7;
  uint64_t v147 = v56;
  sub_26B120();
  sub_17445C();
  uint64_t v57 = v54;
  uint64_t v58 = v113;
  uint64_t v59 = v129;
  sub_26C710();
  uint64_t v60 = v109;
  sub_26BE80();
  uint64_t v61 = v58;
  uint64_t v62 = v112;
  (*((void (**)(char *, uint64_t))v116 + 1))(v61, v45);
  uint64_t v151 = v45;
  uint64_t v152 = v60;
  uint64_t v63 = v130;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v134;
  uint64_t v115 = (void *)v64;
  sub_CCCC(v51, v134, v64);
  uint64_t v66 = *(uint64_t (**)(char *, uint64_t))(v132 + 8);
  uint64_t v117 = (char *)(v132 + 8);
  uint64_t v116 = v66;
  v66(v51, v65);
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v137, v56 + *(int *)(v55 + 80), v57);
  LODWORD(v113) = sub_26B720();
  sub_41314(v59);
  uint64_t v67 = v131;
  uint64_t v68 = v139;
  uint64_t v69 = *(void (**)(void))(v139 + 104);
  LODWORD(v111) = enum case for UserInterfaceSizeClass.regular(_:);
  uint64_t OpaqueTypeConformance2 = (void (*)(char *, void, uint64_t))v69;
  uint64_t v108 = v139 + 104;
  v69(v63);
  uint64_t v70 = v68;
  long long v109 = *(void (**)(void, void, void, void))(v68 + 56);
  v109(v63, 0, 1, v62);
  uint64_t v71 = v67 + *(int *)(v135 + 48);
  sub_B678(v59, v67, &qword_2EB3E0);
  sub_B678(v63, v71, &qword_2EB3E0);
  uint64_t v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v72(v67, 1, v62) == 1)
  {
    sub_B6DC(v63, &qword_2EB3E0);
    sub_B6DC(v59, &qword_2EB3E0);
    uint64_t v73 = v62;
    int v74 = v72(v71, 1, v62);
    uint64_t v75 = (uint64_t)v120;
    if (v74 == 1)
    {
      sub_B6DC(v67, &qword_2EB3E0);
      uint64_t v76 = 4;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_B678(v67, v114, &qword_2EB3E0);
  if (v72(v71, 1, v62) == 1)
  {
    sub_B6DC(v63, &qword_2EB3E0);
    sub_B6DC(v59, &qword_2EB3E0);
    uint64_t v73 = v62;
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v114, v62);
    uint64_t v75 = (uint64_t)v120;
LABEL_6:
    sub_B6DC(v67, &qword_2EB4C8);
    goto LABEL_9;
  }
  uint64_t v77 = v139;
  uint64_t v78 = v62;
  uint64_t v79 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v107, v71, v62);
  sub_176CC8((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  uint64_t v80 = v114;
  char v81 = sub_26D360();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v77 + 8);
  v82(v79, v78);
  sub_B6DC(v130, &qword_2EB3E0);
  sub_B6DC(v129, &qword_2EB3E0);
  uint64_t v73 = v78;
  v82((char *)v80, v78);
  sub_B6DC(v131, &qword_2EB3E0);
  uint64_t v75 = (uint64_t)v120;
  if (v81)
  {
    uint64_t v76 = 4;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v76 = 1;
LABEL_10:
  uint64_t v131 = v76;
  sub_41314(v75);
  uint64_t v83 = (uint64_t)v119;
  OpaqueTypeConformance2(v119, v111, v73);
  v109(v83, 0, 1, v73);
  uint64_t v84 = v124;
  uint64_t v85 = v124 + *(int *)(v135 + 48);
  sub_B678(v75, v124, &qword_2EB3E0);
  sub_B678(v83, v85, &qword_2EB3E0);
  if (v72(v84, 1, v73) != 1)
  {
    uint64_t v86 = v106;
    sub_B678(v84, v106, &qword_2EB3E0);
    if (v72(v85, 1, v73) != 1)
    {
      uint64_t v87 = v139;
      uint64_t v88 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v107, v85, v73);
      sub_176CC8((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      sub_26D360();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v87 + 8);
      v89(v88, v73);
      sub_B6DC(v83, &qword_2EB3E0);
      sub_B6DC(v75, &qword_2EB3E0);
      v89((char *)v86, v73);
      sub_B6DC(v84, &qword_2EB3E0);
      goto LABEL_17;
    }
    sub_B6DC(v83, &qword_2EB3E0);
    sub_B6DC(v75, &qword_2EB3E0);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v86, v73);
    goto LABEL_15;
  }
  sub_B6DC(v83, &qword_2EB3E0);
  sub_B6DC(v75, &qword_2EB3E0);
  if (v72(v85, 1, v73) != 1)
  {
LABEL_15:
    sub_B6DC(v84, &qword_2EB4C8);
    goto LABEL_17;
  }
  sub_B6DC(v84, &qword_2EB3E0);
LABEL_17:
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v90 = v121;
  uint64_t v91 = v140;
  uint64_t v92 = v127;
  uint64_t v93 = v137;
  sub_26BF10();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v93, v91);
  uint64_t v151 = v91;
  uint64_t v152 = v92;
  uint64_t v94 = swift_getOpaqueTypeConformance2();
  uint64_t v95 = v122;
  uint64_t v96 = OpaqueTypeMetadata2;
  sub_CCCC(v90, OpaqueTypeMetadata2, v94);
  uint64_t v97 = v123;
  uint64_t v98 = *(void (**)(char *, uint64_t))(v123 + 8);
  v98(v90, v96);
  uint64_t v99 = v118;
  uint64_t v100 = v133;
  uint64_t v101 = v134;
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v118, v133, v134);
  uint64_t v151 = (uint64_t)v99;
  Swift::String v102 = v125;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v125, v95, v96);
  uint64_t v152 = (void (*)(void, void, void, void))v102;
  v150[0] = v101;
  v150[1] = v96;
  uint64_t v148 = v115;
  uint64_t v149 = v94;
  sub_1212DC((uint64_t)&v151, 2uLL, (uint64_t)v150);
  v98(v95, v96);
  Swift::String v103 = v116;
  v116(v100, v101);
  v98(v102, v96);
  return v103(v99, v101);
}

uint64_t sub_173E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v54 = a4;
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v57 = a1;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v44 = a5;
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v39 = a6;
  uint64_t v11 = type metadata accessor for HorizontalScrollingGrid();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v51 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v38 - v13;
  uint64_t v14 = sub_26D680();
  uint64_t v50 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = WitnessTable;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v59 = v14;
  uint64_t v60 = AssociatedTypeWitness;
  uint64_t v61 = a3;
  uint64_t v62 = WitnessTable;
  uint64_t v63 = AssociatedConformanceWitness;
  uint64_t v18 = sub_26C510();
  uint64_t v53 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v41 = (char *)&v38 - v19;
  uint64_t v58 = a6;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v59 = v18;
  uint64_t v60 = v45;
  uint64_t v47 = &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:count:span:spacing:alignment:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v52 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v20 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v40 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v43 = (char *)&v38 - v22;
  uint64_t v59 = *(void *)(v57 + *(int *)(v11 + 72));
  uint64_t v23 = v12;
  uint64_t v24 = *(void (**)(char *))(v12 + 16);
  uint64_t v25 = v46;
  v24(v46);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = a2;
  *((void *)v27 + 3) = a3;
  uint64_t v28 = v44;
  *((void *)v27 + 4) = v54;
  *((void *)v27 + 5) = v28;
  uint64_t v29 = v55;
  *((void *)v27 + 6) = v39;
  *((void *)v27 + 7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v27[v26], v25, v11);
  swift_bridgeObjectRetain();
  uint64_t v30 = v41;
  sub_26C500();
  sub_26B720();
  sub_26C650();
  uint64_t v31 = v40;
  uint64_t v32 = v45;
  sub_26BF10();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v18);
  uint64_t v59 = v18;
  uint64_t v60 = v32;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = v43;
  uint64_t v35 = OpaqueTypeMetadata2;
  sub_CCCC(v31, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v52 + 8);
  v36(v31, v35);
  sub_CCCC(v34, v35, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v36)(v34, v35);
}

uint64_t sub_1742F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v26 - v15;
  v26[0] = v17;
  v26[1] = v18;
  _OWORD v26[2] = v19;
  void v26[3] = v20;
  v26[4] = v21;
  v26[5] = v22;
  uint64_t v23 = type metadata accessor for HorizontalScrollingGrid();
  (*(void (**)(uint64_t))(a2 + *(int *)(v23 + 76)))(a1);
  sub_CCCC(v14, a4, a7);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, a4);
  sub_CCCC(v16, a4, a7);
  return ((uint64_t (*)(char *, uint64_t))v24)(v16, a4);
}

uint64_t sub_17445C()
{
  return sub_26E0E0();
}

uint64_t BooksFinishedFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BooksFinishedFrame(0);
  return sub_176D18(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PageBackground);
}

double BooksFinishedFrame.horizontalPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for BooksFinishedFrame(0) + 24));
}

uint64_t BooksFinishedFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BooksFinishedFrame(0) + 28);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for BooksFinishedFrameViewModel(0) + 36);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_176CC8(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_176CC8(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t BooksFinishedFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (int *)type metadata accessor for BooksFinishedFrame(0);
  uint64_t v5 = (uint64_t *)((char *)a2 + v4[5]);
  uint64_t v6 = (char *)v5 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  id v7 = [self secondarySystemBackgroundColor];
  *uint64_t v5 = sub_26C0C0();
  uint64_t v8 = enum case for ColorScheme.light(_:);
  uint64_t v9 = sub_26A6E0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a2 + v4[6]) = 0;
  return sub_17CC6C(a1, (uint64_t)a2 + v4[7], type metadata accessor for BooksFinishedFrameViewModel);
}

uint64_t sub_1747D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v2 = type metadata accessor for ScrollingCardModifier(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v73 = (uint64_t *)((char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = type metadata accessor for BulletPointStack(0);
  uint64_t v4 = __chkstk_darwin(v70);
  uint64_t v6 = (uint64_t *)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v71 = (uint64_t)&v66 - v7;
  uint64_t v8 = type metadata accessor for BooksFinishedFrame(0);
  uint64_t v9 = v8 - 8;
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v68 + 64);
  __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_4A98(&qword_2F2870);
  uint64_t v11 = __chkstk_darwin(v77);
  uint64_t v13 = (uint64_t *)((char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v72 = (uint64_t)&v66 - v14;
  uint64_t v75 = sub_4A98(&qword_2F2878);
  __chkstk_darwin(v75);
  uint64_t v76 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4A98(&qword_2F2880);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_4A98(&qword_2F2888);
  uint64_t v25 = __chkstk_darwin(v74);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v67 = (uint64_t)&v66 - v28;
  uint64_t v29 = v1;
  uint64_t v30 = v1 + *(int *)(v9 + 36);
  uint64_t v31 = type metadata accessor for BooksFinishedFrameViewModel(0);
  if (*(unsigned char *)(v30 + *(int *)(v31 + 40)))
  {
    sub_1706E8((uint64_t *)v79);
    uint64_t v32 = *(void *)(v30 + *(int *)(v31 + 24));
    uint64_t v33 = v69;
    sub_176D18(v29, v69, type metadata accessor for BooksFinishedFrame);
    unint64_t v34 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v35 = swift_allocObject();
    sub_17CC6C(v33, v35 + v34, type metadata accessor for BooksFinishedFrame);
    uint64_t *v13 = swift_getKeyPath();
    sub_4A98(&qword_2EB3D8);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = (int *)v77;
    uint64_t v37 = (char *)v13 + *(int *)(v77 + 68);
    long long v38 = v79[1];
    *(_OWORD *)uint64_t v37 = v79[0];
    *((_OWORD *)v37 + 1) = v38;
    *((void *)v37 + 4) = v80;
    *(uint64_t *)((char *)v13 + v36[18]) = v32;
    uint64_t v39 = (uint64_t (**)(uint64_t))((char *)v13 + v36[19]);
    *uint64_t v39 = sub_17CCD4;
    v39[1] = (uint64_t (*)(uint64_t))v35;
    uint64_t v40 = (uint64_t)v13 + v36[20];
    swift_bridgeObjectRetain();
    sub_171054((uint64_t *)v81);
    *uint64_t v6 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v70;
    uint64_t v42 = (char *)v6 + *(int *)(v70 + 20);
    *(void *)uint64_t v42 = swift_getKeyPath();
    v42[8] = 0;
    uint64_t v43 = (uint64_t *)((char *)v6 + *(int *)(v41 + 24));
    uint64_t *v43 = swift_getKeyPath();
    sub_4A98(&qword_2EB3E8);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = (char *)v6 + *(int *)(v41 + 28);
    long long v45 = v81[1];
    *(_OWORD *)uint64_t v44 = v81[0];
    *((_OWORD *)v44 + 1) = v45;
    *((void *)v44 + 4) = v82;
    uint64_t v46 = v71;
    sub_17CC6C((uint64_t)v6, v71, type metadata accessor for BulletPointStack);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v48 = (uint64_t)v73;
    *uint64_t v73 = KeyPath;
    sub_4A98(&qword_2EA978);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = sub_4A98(&qword_2F2890);
    sub_17CC6C(v48, v40 + *(int *)(v49 + 36), type metadata accessor for ScrollingCardModifier);
    sub_17CC6C(v46, v40, type metadata accessor for BulletPointStack);
    uint64_t v50 = v72;
    sub_19CC4((uint64_t)v13, v72, &qword_2F2870);
    sub_B678(v50, v76, &qword_2F2870);
    swift_storeEnumTagMultiPayload();
    sub_17CCF8(&qword_2F2898, &qword_2F2888, &qword_2F28A0, &qword_2F2880);
    sub_7C18(&qword_2F28A8, &qword_2F2870);
    sub_26B2F0();
    uint64_t v51 = v50;
    uint64_t v52 = &qword_2F2870;
  }
  else
  {
    sub_41378((uint64_t)v21);
    sub_176D18((uint64_t)v21, (uint64_t)v18, type metadata accessor for SizeConstants.Environment);
    sub_17D390((uint64_t)v21, type metadata accessor for SizeConstants);
    sub_17D390((uint64_t)v18, type metadata accessor for SizeConstants.Spacing);
    *(void *)uint64_t v24 = sub_26B1C0();
    *((void *)v24 + 1) = 0x4040000000000000;
    v24[16] = 0;
    uint64_t v53 = sub_4A98(&qword_2F28B0);
    sub_175070(v29, &v24[*(int *)(v53 + 44)]);
    char v54 = sub_26B750();
    sub_41378((uint64_t)v21);
    sub_176D18((uint64_t)v21, (uint64_t)v18, type metadata accessor for SizeConstants.Environment);
    sub_17D390((uint64_t)v21, type metadata accessor for SizeConstants);
    sub_17D390((uint64_t)v18, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    sub_B678((uint64_t)v24, (uint64_t)v27, &qword_2F2880);
    uint64_t v63 = &v27[*(int *)(v74 + 36)];
    *uint64_t v63 = v54;
    *((void *)v63 + 1) = v56;
    *((void *)v63 + 2) = v58;
    *((void *)v63 + 3) = v60;
    *((void *)v63 + 4) = v62;
    v63[40] = 0;
    sub_B6DC((uint64_t)v24, &qword_2F2880);
    uint64_t v64 = v67;
    sub_19CC4((uint64_t)v27, v67, &qword_2F2888);
    sub_B678(v64, v76, &qword_2F2888);
    swift_storeEnumTagMultiPayload();
    sub_17CCF8(&qword_2F2898, &qword_2F2888, &qword_2F28A0, &qword_2F2880);
    sub_7C18(&qword_2F28A8, &qword_2F2870);
    sub_26B2F0();
    uint64_t v51 = v64;
    uint64_t v52 = &qword_2F2888;
  }
  return sub_B6DC(v51, v52);
}

uint64_t sub_175070@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for CardModifier(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v64 = (void *)((char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (uint64_t)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BulletPointStack(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (void *)((char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v56 = (uint64_t)v55 - v12;
  uint64_t v59 = sub_4A98(&qword_2F28B8) - 8;
  __chkstk_darwin(v59);
  uint64_t v58 = (uint64_t)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_4A98(&qword_2F28C0) - 8;
  uint64_t v14 = __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v60 = (char *)v55 - v16;
  uint64_t v17 = type metadata accessor for BooksFinishedFrame(0);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v17);
  uint64_t v21 = sub_4A98(&qword_2F28C8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v57 = (uint64_t)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v55 - v24;
  *(void *)uint64_t v25 = sub_26B120();
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  sub_4A98(&qword_2F28D0);
  uint64_t v26 = *(int *)(v18 + 36);
  v55[1] = a1;
  *(void *)&v66[0] = *(void *)(a1 + v26 + *(int *)(type metadata accessor for BooksFinishedFrameViewModel(0) + 24));
  sub_176D18(a1, (uint64_t)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BooksFinishedFrame);
  unint64_t v27 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v28 = swift_allocObject();
  sub_17CC6C((uint64_t)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for BooksFinishedFrame);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EF1F0);
  sub_4A98(&qword_2F28D8);
  sub_7C18(&qword_2EF200, &qword_2EF1F0);
  sub_17D278();
  sub_17D324();
  sub_26C500();
  sub_171054((uint64_t *)v66);
  *uint64_t v11 = swift_getKeyPath();
  sub_4A98(&qword_2EB3D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = (char *)v11 + v8[7];
  *(void *)uint64_t v29 = swift_getKeyPath();
  v29[8] = 0;
  uint64_t v30 = (uint64_t *)((char *)v11 + v8[8]);
  *uint64_t v30 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (char *)v11 + v8[9];
  long long v32 = v66[1];
  *(_OWORD *)uint64_t v31 = v66[0];
  *((_OWORD *)v31 + 1) = v32;
  *((void *)v31 + 4) = v67;
  uint64_t v33 = v56;
  sub_17CC6C((uint64_t)v11, v56, type metadata accessor for BulletPointStack);
  uint64_t v34 = v61;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v61);
  sub_17D390(v34, type metadata accessor for SizeConstants.Spacing);
  LOBYTE(v34) = sub_26B760();
  sub_26A640();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v58;
  sub_176D18(v33, v58, type metadata accessor for BulletPointStack);
  uint64_t v44 = v43 + *(int *)(v59 + 44);
  *(unsigned char *)uint64_t v44 = v34;
  *(void *)(v44 + 8) = v36;
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v40;
  *(void *)(v44 + 32) = v42;
  *(unsigned char *)(v44 + 40) = 0;
  sub_17D390(v33, type metadata accessor for BulletPointStack);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = (uint64_t)v64;
  *uint64_t v64 = KeyPath;
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = (uint64_t)v60;
  sub_17CC6C(v46, (uint64_t)&v60[*(int *)(v62 + 44)], type metadata accessor for CardModifier);
  sub_19CC4(v43, v47, &qword_2F28B8);
  uint64_t v48 = v57;
  sub_B678((uint64_t)v25, v57, &qword_2F28C8);
  uint64_t v49 = v63;
  sub_B678(v47, v63, &qword_2F28C0);
  uint64_t v50 = v65;
  *uint64_t v65 = 0;
  *((unsigned char *)v50 + 8) = 1;
  uint64_t v51 = v50;
  uint64_t v52 = (int *)sub_4A98(&qword_2F28F0);
  sub_B678(v48, (uint64_t)v51 + v52[12], &qword_2F28C8);
  uint64_t v53 = (uint64_t)v51 + v52[16];
  *(void *)uint64_t v53 = 0;
  *(unsigned char *)(v53 + 8) = 1;
  sub_B678(v49, (uint64_t)v51 + v52[20], &qword_2F28C0);
  sub_B6DC(v47, &qword_2F28C0);
  sub_B6DC((uint64_t)v25, &qword_2F28C8);
  sub_B6DC(v49, &qword_2F28C0);
  return sub_B6DC(v48, &qword_2F28C8);
}

uint64_t sub_175754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoverView();
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_4A98(&qword_2EF228);
  __chkstk_darwin(v8);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_6C0F8(a1, (uint64_t)v31);
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[40] = 0;
  *((void *)v7 + 6) = swift_getKeyPath();
  v7[56] = 0;
  uint64_t v11 = (uint64_t *)&v7[v5[8]];
  *uint64_t v11 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)&v7[v5[9]];
  uint64_t *v12 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)&v7[v5[10]];
  type metadata accessor for ProfileRestrictions();
  sub_176CC8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t *v13 = sub_26AD70();
  v13[1] = v14;
  uint64_t v15 = &v7[v5[11]];
  v29[15] = 1;
  sub_26C340();
  uint64_t v16 = v30;
  *uint64_t v15 = v29[16];
  *((void *)v15 + 1) = v16;
  uint64_t v17 = &v7[v5[12]];
  long long v18 = v31[7];
  long long v19 = v31[9];
  *((_OWORD *)v17 + 8) = v31[8];
  *((_OWORD *)v17 + 9) = v19;
  *((void *)v17 + 20) = v32;
  long long v20 = v31[5];
  *((_OWORD *)v17 + 4) = v31[4];
  *((_OWORD *)v17 + 5) = v20;
  *((_OWORD *)v17 + 6) = v31[6];
  *((_OWORD *)v17 + 7) = v18;
  long long v21 = v31[1];
  *(_OWORD *)uint64_t v17 = v31[0];
  *((_OWORD *)v17 + 1) = v21;
  long long v22 = v31[3];
  *((_OWORD *)v17 + 2) = v31[2];
  *((_OWORD *)v17 + 3) = v22;
  v7[v5[13]] = 0;
  uint64_t v23 = a2 + *(int *)(type metadata accessor for BooksFinishedFrame(0) + 28);
  uint64_t v24 = type metadata accessor for BooksFinishedFrameViewModel(0);
  double v25 = *(double *)(v23 + *(int *)(v24 + 48)) / *(double *)(v23 + *(int *)(v24 + 48) + 8);
  sub_176D18((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CoverView);
  uint64_t v26 = &v10[*(int *)(v8 + 36)];
  *(double *)uint64_t v26 = v25;
  *((_WORD *)v26 + 4) = 0;
  sub_17D390((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CoverView);
  *(void *)&v31[0] = CoverViewModel.axLabel.getter();
  *((void *)&v31[0] + 1) = v27;
  sub_DBF80();
  sub_CC78();
  sub_26BE40();
  swift_bridgeObjectRelease();
  return sub_B6DC((uint64_t)v10, &qword_2EF228);
}

uint64_t sub_175A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_26B1C0();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v6 = sub_4A98(&qword_2F2900);
  return sub_175AFC(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_175AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  v37[1] = a1;
  uint64_t v5 = type metadata accessor for CoverView();
  uint64_t v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EF228);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F28D8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v37 - v16;
  sub_6C0F8(a1, (uint64_t)v42);
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[40] = 0;
  *((void *)v8 + 6) = swift_getKeyPath();
  v8[56] = 0;
  long long v18 = (uint64_t *)&v8[v6[8]];
  *long long v18 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  long long v19 = (uint64_t *)&v8[v6[9]];
  *long long v19 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  long long v20 = (uint64_t *)&v8[v6[10]];
  type metadata accessor for ProfileRestrictions();
  sub_176CC8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *long long v20 = sub_26AD70();
  v20[1] = v21;
  long long v22 = &v8[v6[11]];
  char v39 = 1;
  sub_26C340();
  uint64_t v23 = v41;
  char *v22 = v40;
  *((void *)v22 + 1) = v23;
  uint64_t v24 = &v8[v6[12]];
  long long v25 = v42[7];
  long long v26 = v42[9];
  *((_OWORD *)v24 + 8) = v42[8];
  *((_OWORD *)v24 + 9) = v26;
  *((void *)v24 + 20) = v43;
  long long v27 = v42[5];
  *((_OWORD *)v24 + 4) = v42[4];
  *((_OWORD *)v24 + 5) = v27;
  *((_OWORD *)v24 + 6) = v42[6];
  *((_OWORD *)v24 + 7) = v25;
  long long v28 = v42[1];
  *(_OWORD *)uint64_t v24 = v42[0];
  *((_OWORD *)v24 + 1) = v28;
  long long v29 = v42[3];
  *((_OWORD *)v24 + 2) = v42[2];
  *((_OWORD *)v24 + 3) = v29;
  v8[v6[13]] = 0;
  uint64_t v30 = v38 + *(int *)(type metadata accessor for BooksFinishedFrame(0) + 28);
  uint64_t v31 = type metadata accessor for BooksFinishedFrameViewModel(0);
  double v32 = *(double *)(v30 + *(int *)(v31 + 48)) / *(double *)(v30 + *(int *)(v31 + 48) + 8);
  sub_176D18((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CoverView);
  uint64_t v33 = &v11[*(int *)(v9 + 36)];
  *(double *)uint64_t v33 = v32;
  *((_WORD *)v33 + 4) = 0;
  sub_17D390((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CoverView);
  *(void *)&v42[0] = CoverViewModel.axLabel.getter();
  *((void *)&v42[0] + 1) = v34;
  sub_DBF80();
  sub_CC78();
  sub_26BE40();
  swift_bridgeObjectRelease();
  sub_B6DC((uint64_t)v11, &qword_2EF228);
  sub_19CC4((uint64_t)v15, (uint64_t)v17, &qword_2F28D8);
  sub_B678((uint64_t)v17, (uint64_t)v15, &qword_2F28D8);
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  uint64_t v35 = sub_4A98(&qword_2F2908);
  sub_B678((uint64_t)v15, a3 + *(int *)(v35 + 48), &qword_2F28D8);
  sub_B6DC((uint64_t)v17, &qword_2F28D8);
  return sub_B6DC((uint64_t)v15, &qword_2F28D8);
}

uint64_t BooksFinishedFrame.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v41 = sub_26A6E0();
  uint64_t v2 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  char v40 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F2648);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_4A98(&qword_2F2650);
  __chkstk_darwin(v38);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4A98(&qword_2F2658);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1 + *(int *)(type metadata accessor for BooksFinishedFrame(0) + 28);
  uint64_t v18 = type metadata accessor for BooksFinishedFrameViewModel(0);
  sub_41378((uint64_t)v9);
  sub_176D18((uint64_t)v9, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v9, type metadata accessor for SizeConstants);
  sub_17D390((uint64_t)v6, type metadata accessor for SizeConstants.Spacing);
  *(void *)uint64_t v12 = sub_26B1C0();
  *((void *)v12 + 1) = 0x4040000000000000;
  v12[16] = 0;
  uint64_t v19 = sub_4A98(&qword_2F2660);
  sub_1763C8(v1, (uint64_t)&v12[*(int *)(v19 + 44)]);
  if (*(unsigned char *)(v17 + *(int *)(v18 + 40))) {
    char v20 = sub_26B7C0();
  }
  else {
    char v20 = sub_26B770();
  }
  char v21 = v20;
  sub_41378((uint64_t)v9);
  sub_176D18((uint64_t)v9, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v9, type metadata accessor for SizeConstants);
  sub_17D390((uint64_t)v6, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_B678((uint64_t)v12, (uint64_t)v14, &qword_2F2648);
  uint64_t v30 = &v14[*(int *)(v38 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_B6DC((uint64_t)v12, &qword_2F2648);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v40;
  uint64_t v32 = v41;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v40, enum case for ColorScheme.light(_:), v41);
  uint64_t v34 = (uint64_t *)&v16[*(int *)(v39 + 36)];
  uint64_t v35 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v34 + *(int *)(v35 + 28), v33, v32);
  *uint64_t v34 = KeyPath;
  sub_B678((uint64_t)v14, (uint64_t)v16, &qword_2F2650);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v33, v32);
  sub_B6DC((uint64_t)v14, &qword_2F2650);
  return sub_19CC4((uint64_t)v16, v42, &qword_2F2658);
}

uint64_t sub_1763C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = sub_4A98(&qword_2F2860);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v77 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v76 = (uint64_t)&v64 - v5;
  uint64_t v6 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26AB40();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v14;
  uint64_t v15 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TextLockup();
  uint64_t v19 = (int *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (uint64_t *)((char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_4A98(&qword_2EEEC8);
  uint64_t v23 = v22 - 8;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v74 = (uint64_t)&v64 - v27;
  type metadata accessor for BooksFinishedFrame(0);
  uint64_t v28 = sub_16FA24();
  uint64_t v71 = v29;
  uint64_t v72 = v28;
  unint64_t v70 = sub_26C1B0() | 0x8000000000000000;
  uint64_t v30 = sub_170124();
  uint64_t v68 = v31;
  uint64_t v69 = v30;
  uint64_t v32 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v17, 1, 1, v32);
  uint64_t v66 = sub_26B1D0();
  uint64_t v33 = sub_26C650();
  uint64_t v64 = v34;
  uint64_t v65 = v33;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DynamicTypeSize.accessibility2(_:), v11);
  *char v21 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = (uint64_t *)((char *)v21 + v19[7]);
  *uint64_t v35 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (char *)v21 + v19[8];
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  uint64_t v37 = (char *)v21 + v19[9];
  *(void *)uint64_t v37 = swift_getKeyPath();
  v37[8] = 0;
  uint64_t v38 = (char *)v21 + v19[10];
  *(void *)uint64_t v38 = swift_getKeyPath();
  v38[8] = 0;
  uint64_t v39 = (char *)v21 + v19[11];
  *(void *)uint64_t v39 = swift_getKeyPath();
  v39[8] = 0;
  *((unsigned char *)v21 + v19[12]) = 3;
  char v40 = (uint64_t *)((char *)v21 + v19[13]);
  *char v40 = 0;
  v40[1] = 0;
  uint64_t v41 = (uint64_t *)((char *)v21 + v19[14]);
  uint64_t v42 = v71;
  *uint64_t v41 = v72;
  v41[1] = v42;
  v41[2] = v70;
  uint64_t v43 = (uint64_t *)((char *)v21 + v19[15]);
  uint64_t v44 = v68;
  uint64_t *v43 = v69;
  v43[1] = v44;
  sub_19CC4((uint64_t)v17, (uint64_t)v21 + v19[16], &qword_2EBFC0);
  long long v45 = v67;
  *(uint64_t *)((char *)v21 + v19[17]) = v66;
  uint64_t v46 = (uint64_t *)((char *)v21 + v19[18]);
  uint64_t v47 = v64;
  *uint64_t v46 = v65;
  v46[1] = v47;
  *((unsigned char *)v21 + v19[19]) = 0;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v21 + v19[20], v45, v11);
  LOBYTE(v12) = sub_26B750();
  type metadata accessor for BooksFinishedFrameViewModel(0);
  sub_41378((uint64_t)v10);
  uint64_t v48 = v75;
  sub_176D18((uint64_t)v10, v75, type metadata accessor for SizeConstants.Environment);
  sub_17D390((uint64_t)v10, type metadata accessor for SizeConstants);
  sub_17D390(v48, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  sub_176D18((uint64_t)v21, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v57 = &v26[*(int *)(v23 + 44)];
  *uint64_t v57 = v12;
  *((void *)v57 + 1) = v50;
  *((void *)v57 + 2) = v52;
  *((void *)v57 + 3) = v54;
  *((void *)v57 + 4) = v56;
  v57[40] = 0;
  sub_17D390((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v58 = v74;
  sub_19CC4((uint64_t)v26, v74, &qword_2EEEC8);
  uint64_t v59 = v76;
  sub_1747D0(v76);
  sub_B678(v58, (uint64_t)v26, &qword_2EEEC8);
  uint64_t v60 = v77;
  sub_B678(v59, v77, &qword_2F2860);
  uint64_t v61 = v78;
  sub_B678((uint64_t)v26, v78, &qword_2EEEC8);
  uint64_t v62 = sub_4A98(&qword_2F2868);
  sub_B678(v60, v61 + *(int *)(v62 + 48), &qword_2F2860);
  sub_B6DC(v59, &qword_2F2860);
  sub_B6DC(v58, &qword_2EEEC8);
  sub_B6DC(v60, &qword_2F2860);
  return sub_B6DC((uint64_t)v26, &qword_2EEEC8);
}

uint64_t sub_176A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_176D18(v2 + *(int *)(a1 + 20), a2, type metadata accessor for PageBackground);
}

double sub_176A9C(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_176AA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for BooksFinishedFrameViewModel(0) + 36);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_176CC8(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_176CC8(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t sub_176BA4()
{
  return sub_26AF60();
}

uint64_t sub_176BC8()
{
  return sub_26AF60();
}

uint64_t sub_176BEC(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EB3E0);
  __chkstk_darwin(v2 - 8);
  sub_B678(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2EB3E0);
  return sub_26AF70();
}

uint64_t type metadata accessor for BooksFinishedFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F26D0);
}

uint64_t type metadata accessor for BooksFinishedFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2780);
}

uint64_t sub_176CC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_176D18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_176D88(uint64_t a1)
{
  uint64_t result = sub_176CC8(&qword_2F2668, (void (*)(uint64_t))type metadata accessor for BooksFinishedFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_176DE0(uint64_t a1)
{
  uint64_t result = sub_176CC8(&qword_2F2670, (void (*)(uint64_t))type metadata accessor for BooksFinishedFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_176E38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksFinishedFrameViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26B4B0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[5];
    uint64_t v12 = (_WORD *)((char *)a1 + v11);
    uint64_t v13 = (_WORD *)((char *)a2 + v11);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v12 = *v13;
      uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = (char *)v12 + v15;
      uint64_t v17 = (char *)v13 + v15;
      uint64_t v18 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(void *)((char *)v12 + v14[7]) = *(void *)((char *)v13 + v14[7]);
      uint64_t v19 = v14[8];
      uint64_t v20 = (char *)v12 + v19;
      char v21 = (char *)v13 + v19;
      v20[2] = v21[2];
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[8];
    uint64_t v27 = a3[9];
    uint64_t v28 = (uint64_t *)((char *)a1 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (char *)a1 + v27;
    uint64_t v36 = (char *)a2 + v27;
    uint64_t v32 = sub_269BE0();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v31, v36, v32);
    uint64_t v34 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v34) = *(uint64_t *)((char *)a2 + v34);
    *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  }
  return a1;
}

uint64_t destroy for BooksFinishedFrameViewModel(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26B4B0();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  uint64_t v10 = sub_269BE0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void *initializeWithCopy for BooksFinishedFrameViewModel(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26B4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_4A98(&qword_2EB3E0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = (_WORD *)((char *)a1 + v9);
  uint64_t v11 = (_WORD *)((char *)a2 + v9);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v10 = *v11;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = (char *)v11 + v13;
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
    uint64_t v17 = v12[8];
    uint64_t v18 = (char *)v10 + v17;
    uint64_t v19 = (char *)v11 + v17;
    v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
  }
  else
  {
    *(void *)uint64_t v10 = *(void *)v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  char v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *char v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)((char *)a1 + v24);
  uint64_t v27 = (void *)((char *)a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (char *)a1 + v25;
  uint64_t v34 = (char *)a2 + v25;
  uint64_t v30 = sub_269BE0();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v29, v34, v30);
  uint64_t v32 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *assignWithCopy for BooksFinishedFrameViewModel(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB3D8);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26B4B0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_B6DC((uint64_t)a1 + v9, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v10 = *v11;
      v10[1] = v11[1];
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = &v10[v13];
      uint64_t v15 = &v11[v13];
      uint64_t v16 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
      uint64_t v17 = v12[8];
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      char v20 = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
      v18[2] = v20;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  return a1;
}

char *initializeWithTake for BooksFinishedFrameViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26B4B0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4A98(&qword_2EB3E0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v11 = *(_WORD *)v12;
    uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v15 = v14[6];
    uint64_t v16 = &v11[v15];
    uint64_t v17 = &v12[v15];
    uint64_t v18 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
    uint64_t v19 = v14[8];
    char v20 = &v11[v19];
    uint64_t v21 = &v12[v19];
    v20[2] = v21[2];
    *(_WORD *)char v20 = *(_WORD *)v21;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v22 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  uint64_t v23 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

char *assignWithTake for BooksFinishedFrameViewModel(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB3D8);
    uint64_t v6 = sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26B4B0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    sub_B6DC((uint64_t)&a1[v10], &qword_2EB708);
    uint64_t v13 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v11 = *(_WORD *)v12;
      uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = &v11[v15];
      uint64_t v17 = &v12[v15];
      uint64_t v18 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
      uint64_t v19 = v14[8];
      char v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      v20[2] = v21[2];
      *(_WORD *)char v20 = *(_WORD *)v21;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[9];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[v36] = *(void *)&a2[v36];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksFinishedFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_178058);
}

uint64_t sub_178058(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB3F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_269BE0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for BooksFinishedFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1781F4);
}

uint64_t sub_1781F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB3F0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EB718);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_269BE0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_17837C()
{
  sub_3985C();
  if (v0 <= 0x3F)
  {
    sub_17ADB0(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
    if (v1 <= 0x3F)
    {
      sub_269BE0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksFinishedFrame(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[5];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v22;
      swift_bridgeObjectRetain();
      uint64_t v23 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v24 = &v18[v23];
      uint64_t v25 = &v19[v23];
      uint64_t v26 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v19[56])
      {
        long long v21 = *((_OWORD *)v19 + 1);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v21;
        *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
        *(_OWORD *)(v18 + 41) = *(_OWORD *)(v19 + 41);
      }
      else
      {
        long long v33 = *(_OWORD *)(v19 + 24);
        *(_OWORD *)(v18 + 24) = v33;
        (**(void (***)(char *, char *))(v33 - 8))(v18, v19);
        *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
        v18[56] = 0;
      }
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      v18[80] = v19[80];
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *((void *)v18 + 13) = *((void *)v19 + 13);
      uint64_t v34 = *((void *)v19 + 15);
      swift_bridgeObjectRetain();
      if (v34)
      {
        *((void *)v18 + 14) = *((void *)v19 + 14);
        *((void *)v18 + 15) = v34;
        uint64_t v35 = *((void *)v19 + 17);
        *((void *)v18 + 16) = *((void *)v19 + 16);
        *((void *)v18 + 17) = v35;
        v18[144] = v19[144];
        uint64_t v36 = *((void *)v19 + 19);
        uint64_t v37 = *((void *)v19 + 20);
        *((void *)v18 + 19) = v36;
        *((void *)v18 + 20) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v38 = *((_OWORD *)v19 + 8);
        *((_OWORD *)v18 + 7) = *((_OWORD *)v19 + 7);
        *((_OWORD *)v18 + 8) = v38;
        *((_OWORD *)v18 + 9) = *((_OWORD *)v19 + 9);
        *((void *)v18 + 20) = *((void *)v19 + 20);
      }
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      swift_retain();
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v28 = &v18[v27];
      uint64_t v29 = &v19[v27];
      uint64_t v30 = sub_26A6E0();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_4A98(&qword_2EA940);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    char v40 = (uint64_t *)((char *)a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_26B4B0();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        uint64_t v44 = sub_4A98(&qword_2EB3E0);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
    }
    else
    {
      *char v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    long long v45 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
    uint64_t v46 = v45[5];
    uint64_t v47 = (_WORD *)((char *)v40 + v46);
    uint64_t v48 = (_WORD *)((char *)v41 + v46);
    sub_4A98(&qword_2EB708);
    uint64_t v71 = a1;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v47 = *v48;
      uint64_t v49 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v50 = v49[6];
      uint64_t v51 = (char *)v47 + v50;
      uint64_t v52 = (char *)v48 + v50;
      uint64_t v53 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      *(void *)((char *)v47 + v49[7]) = *(void *)((char *)v48 + v49[7]);
      uint64_t v54 = v49[8];
      uint64_t v55 = (char *)v47 + v54;
      uint64_t v56 = (char *)v48 + v54;
      void v55[2] = v56[2];
      *(_WORD *)uint64_t v55 = *(_WORD *)v56;
    }
    else
    {
      *(void *)uint64_t v47 = *(void *)v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)v40 + v45[6]) = *(void *)((char *)v41 + v45[6]);
    uint64_t v57 = v45[7];
    uint64_t v58 = (void *)((char *)v40 + v57);
    uint64_t v59 = (void *)((char *)v41 + v57);
    uint64_t v60 = v59[1];
    void *v58 = *v59;
    v58[1] = v60;
    uint64_t v61 = v45[8];
    uint64_t v62 = (void *)((char *)v40 + v61);
    uint64_t v63 = (void *)((char *)v41 + v61);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    uint64_t v65 = v45[9];
    unint64_t v70 = (char *)v40 + v65;
    uint64_t v66 = (char *)v41 + v65;
    uint64_t v67 = sub_269BE0();
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68(v70, v66, v67);
    *((unsigned char *)v40 + v45[10]) = *((unsigned char *)v41 + v45[10]);
    *(void *)((char *)v40 + v45[11]) = *(void *)((char *)v41 + v45[11]);
    *(_OWORD *)((char *)v40 + v45[12]) = *(_OWORD *)((char *)v41 + v45[12]);
    return v71;
  }
  return (uint64_t *)v16;
}

uint64_t destroy for BooksFinishedFrame(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v11 = v6 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      break;
    case 1:
      if (!*(unsigned char *)(v6 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v6);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v8 = v6 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v9 = sub_26A6E0();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      break;
  }
  uint64_t v13 = a1 + *(int *)(a2 + 28);
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_26B4B0();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v17 = v13 + *(int *)(v16 + 20);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = v17 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v19 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v13 + *(int *)(v16 + 36);
  uint64_t v21 = sub_269BE0();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);

  return v22(v20, v21);
}

_WORD *initializeWithCopy for BooksFinishedFrame(_WORD *a1, _WORD *a2, int *a3)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[5];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v19 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v19;
    swift_bridgeObjectRetain();
    uint64_t v20 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v21 = &v15[v20];
    uint64_t v22 = &v16[v20];
    uint64_t v23 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (v16[56])
    {
      long long v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v18;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *(_OWORD *)(v15 + 41) = *(_OWORD *)(v16 + 41);
    }
    else
    {
      long long v30 = *(_OWORD *)(v16 + 24);
      *(_OWORD *)(v15 + 24) = v30;
      (**(void (***)(char *, char *))(v30 - 8))(v15, v16);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
      v15[56] = 0;
    }
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    v15[80] = v16[80];
    *(_OWORD *)(v15 + 88) = *(_OWORD *)(v16 + 88);
    *((void *)v15 + 13) = *((void *)v16 + 13);
    uint64_t v31 = *((void *)v16 + 15);
    swift_bridgeObjectRetain();
    if (v31)
    {
      *((void *)v15 + 14) = *((void *)v16 + 14);
      *((void *)v15 + 15) = v31;
      uint64_t v32 = *((void *)v16 + 17);
      *((void *)v15 + 16) = *((void *)v16 + 16);
      *((void *)v15 + 17) = v32;
      v15[144] = v16[144];
      uint64_t v33 = *((void *)v16 + 19);
      uint64_t v34 = *((void *)v16 + 20);
      *((void *)v15 + 19) = v33;
      *((void *)v15 + 20) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v35 = *((_OWORD *)v16 + 8);
      *((_OWORD *)v15 + 7) = *((_OWORD *)v16 + 7);
      *((_OWORD *)v15 + 8) = v35;
      *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
      *((void *)v15 + 20) = *((void *)v16 + 20);
    }
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
    uint64_t v24 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v25 = &v15[v24];
    uint64_t v26 = &v16[v24];
    uint64_t v27 = sub_26A6E0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_4A98(&qword_2EA940);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v37 = (void *)((char *)a1 + v36);
  long long v38 = (void *)((char *)a2 + v36);
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = sub_26B4B0();
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = sub_4A98(&qword_2EB3E0);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
  }
  else
  {
    *uint64_t v37 = *v38;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v43 = v42[5];
  uint64_t v44 = (_WORD *)((char *)v37 + v43);
  long long v45 = (_WORD *)((char *)v38 + v43);
  sub_4A98(&qword_2EB708);
  uint64_t v68 = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v44 = *v45;
    uint64_t v46 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v47 = v46[6];
    uint64_t v48 = (char *)v44 + v47;
    uint64_t v49 = (char *)v45 + v47;
    uint64_t v50 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    *(void *)((char *)v44 + v46[7]) = *(void *)((char *)v45 + v46[7]);
    uint64_t v51 = v46[8];
    uint64_t v52 = (char *)v44 + v51;
    uint64_t v53 = (char *)v45 + v51;
    v52[2] = v53[2];
    *(_WORD *)uint64_t v52 = *(_WORD *)v53;
  }
  else
  {
    *(void *)uint64_t v44 = *(void *)v45;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)v37 + v42[6]) = *(void *)((char *)v38 + v42[6]);
  uint64_t v54 = v42[7];
  uint64_t v55 = (void *)((char *)v37 + v54);
  uint64_t v56 = (void *)((char *)v38 + v54);
  uint64_t v57 = v56[1];
  void *v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = v42[8];
  uint64_t v59 = (void *)((char *)v37 + v58);
  uint64_t v60 = (void *)((char *)v38 + v58);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  uint64_t v62 = v42[9];
  uint64_t v67 = (char *)v37 + v62;
  uint64_t v63 = (char *)v38 + v62;
  uint64_t v64 = sub_269BE0();
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65(v67, v63, v64);
  *((unsigned char *)v37 + v42[10]) = *((unsigned char *)v38 + v42[10]);
  *(void *)((char *)v37 + v42[11]) = *(void *)((char *)v38 + v42[11]);
  *(_OWORD *)((char *)v37 + v42[12]) = *(_OWORD *)((char *)v38 + v42[12]);
  return v68;
}

unsigned char *assignWithCopy for BooksFinishedFrame(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 == a2)
  {
    *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    long long v18 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  }
  else
  {
    sub_B6DC((uint64_t)a1, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[5];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_17D390((uint64_t)&a1[v19], type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      swift_bridgeObjectRetain();
      uint64_t v26 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v27 = &v20[v26];
      uint64_t v28 = &v21[v26];
      uint64_t v29 = sub_26A6E0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v21[56])
      {
        long long v23 = *(_OWORD *)v21;
        long long v24 = *((_OWORD *)v21 + 1);
        long long v25 = *((_OWORD *)v21 + 2);
        *(_OWORD *)(v20 + 41) = *(_OWORD *)(v21 + 41);
        *((_OWORD *)v20 + 1) = v24;
        *((_OWORD *)v20 + 2) = v25;
        *(_OWORD *)uint64_t v20 = v23;
      }
      else
      {
        uint64_t v36 = *((void *)v21 + 3);
        *((void *)v20 + 3) = v36;
        *((void *)v20 + 4) = *((void *)v21 + 4);
        (**(void (***)(unsigned char *, unsigned char *))(v36 - 8))(v20, v21);
        *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
        v20[56] = 0;
      }
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      v20[80] = v21[80];
      *((void *)v20 + 11) = *((void *)v21 + 11);
      *((void *)v20 + 12) = *((void *)v21 + 12);
      *((void *)v20 + 13) = *((void *)v21 + 13);
      uint64_t v37 = *((void *)v21 + 15);
      swift_bridgeObjectRetain();
      if (v37)
      {
        *((void *)v20 + 14) = *((void *)v21 + 14);
        *((void *)v20 + 15) = *((void *)v21 + 15);
        *((void *)v20 + 16) = *((void *)v21 + 16);
        *((void *)v20 + 17) = *((void *)v21 + 17);
        v20[144] = v21[144];
        *((void *)v20 + 19) = *((void *)v21 + 19);
        *((void *)v20 + 20) = *((void *)v21 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v38 = *((_OWORD *)v21 + 7);
        long long v39 = *((_OWORD *)v21 + 8);
        long long v40 = *((_OWORD *)v21 + 9);
        *((void *)v20 + 20) = *((void *)v21 + 20);
        *((_OWORD *)v20 + 8) = v39;
        *((_OWORD *)v20 + 9) = v40;
        *((_OWORD *)v20 + 7) = v38;
      }
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)v21;
      swift_retain();
      uint64_t v30 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v31 = &v20[v30];
      uint64_t v32 = &v21[v30];
      uint64_t v33 = sub_26A6E0();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_4A98(&qword_2EA940);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
    }
    swift_storeEnumTagMultiPayload();
    *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
    uint64_t v41 = a3[7];
    uint64_t v16 = &a1[v41];
    uint64_t v17 = &a2[v41];
    sub_B6DC((uint64_t)&a1[v41], &qword_2EB3D8);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_26B4B0();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v17, 1, v42))
      {
        uint64_t v44 = sub_4A98(&qword_2EB3E0);
        memcpy(v16, v17, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v43 + 16))(v16, v17, v42);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v16, 0, 1, v42);
      }
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    long long v18 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
    uint64_t v45 = v18[5];
    uint64_t v46 = (char *)v16 + v45;
    uint64_t v47 = (char *)v17 + v45;
    sub_B6DC((uint64_t)v16 + v45, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v46 = *v47;
      v46[1] = v47[1];
      uint64_t v48 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v49 = v48[6];
      uint64_t v50 = &v46[v49];
      uint64_t v51 = &v47[v49];
      uint64_t v52 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      *(void *)&v46[v48[7]] = *(void *)&v47[v48[7]];
      uint64_t v53 = v48[8];
      uint64_t v54 = &v46[v53];
      uint64_t v55 = &v47[v53];
      char v56 = v55[2];
      *(_WORD *)uint64_t v54 = *(_WORD *)v55;
      void v54[2] = v56;
    }
    else
    {
      *(void *)uint64_t v46 = *(void *)v47;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)v16 + v18[6]) = *(void *)((char *)v17 + v18[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v18[7];
  uint64_t v58 = (void *)((char *)v16 + v57);
  uint64_t v59 = (void *)((char *)v17 + v57);
  void *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = v18[8];
  uint64_t v61 = (void *)((char *)v16 + v60);
  uint64_t v62 = (void *)((char *)v17 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v18[9];
  uint64_t v64 = (char *)v16 + v63;
  uint64_t v65 = (char *)v17 + v63;
  uint64_t v66 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  *((unsigned char *)v16 + v18[10]) = *((unsigned char *)v17 + v18[10]);
  *(void *)((char *)v16 + v18[11]) = *(void *)((char *)v17 + v18[11]);
  uint64_t v67 = v18[12];
  uint64_t v68 = (void *)((char *)v16 + v67);
  uint64_t v69 = (void *)((char *)v17 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  return a1;
}

_WORD *initializeWithTake for BooksFinishedFrame(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = (_OWORD *)((char *)a1 + v15);
  uint64_t v17 = (_OWORD *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    _OWORD *v16 = *v17;
    uint64_t v26 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v27 = (char *)v16 + v26;
    uint64_t v28 = (char *)v17 + v26;
    uint64_t v29 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      goto LABEL_12;
    }
    *(void *)uint64_t v16 = *(void *)v17;
    uint64_t v20 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = (char *)v17 + v20;
    uint64_t v23 = sub_26A6E0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_4A98(&qword_2EA940);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v30 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = sub_26B4B0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      uint64_t v36 = sub_4A98(&qword_2EB3E0);
      memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v31, v32, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  uint64_t v37 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v38 = v37[5];
  long long v39 = &v31[v38];
  long long v40 = &v32[v38];
  uint64_t v41 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)long long v39 = *(_WORD *)v40;
    uint64_t v42 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v43 = v42[6];
    uint64_t v44 = &v39[v43];
    uint64_t v45 = &v40[v43];
    uint64_t v46 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    *(void *)&v39[v42[7]] = *(void *)&v40[v42[7]];
    uint64_t v47 = v42[8];
    uint64_t v48 = &v39[v47];
    uint64_t v49 = &v40[v47];
    v48[2] = v49[2];
    *(_WORD *)uint64_t v48 = *(_WORD *)v49;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  *(void *)&v31[v37[6]] = *(void *)&v32[v37[6]];
  *(_OWORD *)&v31[v37[7]] = *(_OWORD *)&v32[v37[7]];
  *(_OWORD *)&v31[v37[8]] = *(_OWORD *)&v32[v37[8]];
  uint64_t v50 = v37[9];
  uint64_t v51 = &v31[v50];
  uint64_t v52 = &v32[v50];
  uint64_t v53 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
  v31[v37[10]] = v32[v37[10]];
  *(void *)&v31[v37[11]] = *(void *)&v32[v37[11]];
  *(_OWORD *)&v31[v37[12]] = *(_OWORD *)&v32[v37[12]];
  return a1;
}

_WORD *assignWithTake for BooksFinishedFrame(_WORD *a1, _WORD *a2, int *a3)
{
  if (a1 == a2)
  {
    uint64_t v15 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
    goto LABEL_23;
  }
  sub_B6DC((uint64_t)a1, &qword_2EA978);
  uint64_t v6 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v19 = a3[5];
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  uint64_t v21 = (_OWORD *)((char *)a2 + v19);
  sub_17D390((uint64_t)a1 + v19, type metadata accessor for PageBackground);
  uint64_t v22 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *uint64_t v20 = *v21;
    uint64_t v30 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v31 = (char *)v20 + v30;
    uint64_t v32 = (char *)v21 + v30;
    uint64_t v33 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)uint64_t v20 = *(void *)v21;
    uint64_t v24 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v25 = (char *)v20 + v24;
    uint64_t v26 = (char *)v21 + v24;
    uint64_t v27 = sub_26A6E0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_4A98(&qword_2EA940);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    goto LABEL_13;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_14:
  uint64_t v34 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = (char *)a1 + v34;
  uint64_t v17 = (char *)a2 + v34;
  sub_B6DC((uint64_t)a1 + v34, &qword_2EB3D8);
  uint64_t v35 = sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_26B4B0();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v17, 1, v36))
    {
      uint64_t v38 = sub_4A98(&qword_2EB3E0);
      memcpy(v16, v17, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v16, v17, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v16, 0, 1, v36);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v18 = (int *)type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v39 = v18[5];
  long long v40 = &v16[v39];
  uint64_t v41 = &v17[v39];
  sub_B6DC((uint64_t)&v16[v39], &qword_2EB708);
  uint64_t v42 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)long long v40 = *(_WORD *)v41;
    uint64_t v43 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v44 = v43[6];
    uint64_t v45 = &v40[v44];
    uint64_t v46 = &v41[v44];
    uint64_t v47 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    *(void *)&v40[v43[7]] = *(void *)&v41[v43[7]];
    uint64_t v48 = v43[8];
    uint64_t v49 = &v40[v48];
    uint64_t v50 = &v41[v48];
    v49[2] = v50[2];
    *(_WORD *)uint64_t v49 = *(_WORD *)v50;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
LABEL_23:
  *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
  swift_bridgeObjectRelease();
  uint64_t v51 = v18[7];
  uint64_t v52 = &v16[v51];
  uint64_t v53 = &v17[v51];
  uint64_t v55 = *(void *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v18[8];
  uint64_t v57 = &v16[v56];
  uint64_t v58 = &v17[v56];
  uint64_t v60 = *(void *)v58;
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = v18[9];
  uint64_t v62 = &v16[v61];
  uint64_t v63 = &v17[v61];
  uint64_t v64 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  v16[v18[10]] = v17[v18[10]];
  *(void *)&v16[v18[11]] = *(void *)&v17[v18[11]];
  *(_OWORD *)&v16[v18[12]] = *(_OWORD *)&v17[v18[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksFinishedFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17A9C4);
}

uint64_t sub_17A9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for PageBackground(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 28);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for BooksFinishedFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17AB28);
}

uint64_t sub_17AB28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB28);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for PageBackground(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 28);

  return v17(v19, a2, a2, v18);
}

void sub_17AC84()
{
  sub_17ADB0(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PageBackground(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for BooksFinishedFrameViewModel(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_17ADB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_17AE08()
{
  unint64_t result = qword_2F27C0;
  if (!qword_2F27C0)
  {
    sub_7B0C(&qword_2F2658);
    sub_17CCF8(&qword_2F27C8, &qword_2F2650, qword_2F27D0, &qword_2F2648);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F27C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BooksFinishedFrameViewModel.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17AF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksFinishedFrameViewModel.Mode()
{
  return &type metadata for BooksFinishedFrameViewModel.Mode;
}

uint64_t sub_17AFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

void sub_17AFD4()
{
  sub_3985C();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_17B0C4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_26B4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v8 = *(void *)(v7 + 64);
  }
  else {
    size_t v8 = *(void *)(v7 + 64) + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(a3 + 32);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 + 16;
  unsigned int v14 = v12 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || ((v12 + 16 + (((((v9 & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + *(void *)(*(void *)(v10 - 8) + 64) > 0x18)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v18 = v6;
    unsigned int v19 = a2[v9];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v21 = v9;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          if (v9 < 4) {
            goto LABEL_26;
          }
          goto LABEL_28;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_28;
          }
          goto LABEL_26;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_26;
          }
          goto LABEL_28;
        case 4:
          int v22 = *(_DWORD *)a2;
          if (v9 < 4) {
LABEL_26:
          }
            unsigned int v19 = (v22 | (v20 << (8 * v9))) + 2;
          else {
LABEL_28:
          }
            unsigned int v19 = v22 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v23 = ~v12;
    if (v19 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v18);
      }
      *((unsigned char *)a1 + v9) = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v9) = 0;
      swift_retain();
    }
    unint64_t v24 = ((unint64_t)a1 + v9 + 8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (unint64_t)&a2[v9 + 8] & 0xFFFFFFFFFFFFFFF8;
    long long v26 = *(_OWORD *)v25;
    long long v27 = *(_OWORD *)(v25 + 16);
    *(void *)(v24 + 32) = *(void *)(v25 + 32);
    *(_OWORD *)unint64_t v24 = v26;
    *(_OWORD *)(v24 + 16) = v27;
    uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v28 = *v29;
    uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    unint64_t v33 = ((unint64_t)v30 + v13) & v23;
    unint64_t v34 = ((unint64_t)v31 + v13) & v23;
    uint64_t v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v35(v33, v34, v10);
  }
  return a1;
}

uint64_t sub_17B3F8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_26B4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_16;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_16:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = *(void *)(*(void *)(a2 + 32) - 8);
  unsigned int v14 = *(uint64_t (**)(unint64_t))(v13 + 8);
  unint64_t v15 = (((((((unint64_t)&a1[v7 + 8] & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + *(unsigned __int8 *)(v13 + 80)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);

  return v14(v15);
}

void *sub_17B5E0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_26B4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v8 = *(void *)(v7 + 64);
  }
  else {
    size_t v8 = *(void *)(v7 + 64) + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_16;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_16:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    *((unsigned char *)a1 + v9) = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v9) = 0;
    swift_retain();
  }
  unint64_t v15 = ((unint64_t)a1 + v9 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (unint64_t)&a2[v9 + 8] & 0xFFFFFFFFFFFFFFF8;
  long long v17 = *(_OWORD *)v16;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(_OWORD *)unint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  unsigned int v19 = (void *)((v15 + 47) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v20 = (void *)((v16 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v19 = *v20;
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = *(void *)(a3 + 32);
  uint64_t v25 = *(void *)(v24 - 8);
  long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = ((unint64_t)v21 + v27 + 16) & ~v27;
  uint64_t v29 = ((unint64_t)v22 + v27 + 16) & ~v27;
  swift_bridgeObjectRetain();
  swift_retain();
  v26(v28, v29, v24);
  return a1;
}

unsigned __int8 *sub_17B85C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_26B4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    if (v8 <= 8) {
      uint64_t v9 = 8;
    }
    else {
      uint64_t v9 = v8;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          if (v9 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          if (v9 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v9 < 4) {
            goto LABEL_18;
          }
          goto LABEL_23;
        case 4:
          int v13 = *(_DWORD *)a1;
          if (v9 < 4)
          {
LABEL_18:
            unsigned int v10 = (v13 | (v11 << (8 * v9))) + 2;
            break;
          }
LABEL_23:
          if (v13 != -1) {
            goto LABEL_24;
          }
          goto LABEL_20;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
LABEL_20:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      }
    }
    else
    {
LABEL_24:
      swift_release();
    }
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          if (v9 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_35;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_35;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_35;
          }
          goto LABEL_42;
        case 4:
          int v17 = *(_DWORD *)a2;
          if (v9 < 4)
          {
LABEL_35:
            unsigned int v14 = (v17 | (v15 << (8 * v9))) + 2;
            break;
          }
LABEL_42:
          if (v17 != -1) {
            goto LABEL_43;
          }
          goto LABEL_37;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
LABEL_37:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      a1[v9] = 1;
    }
    else
    {
LABEL_43:
      *(void *)a1 = *(void *)a2;
      a1[v9] = 0;
      swift_retain();
    }
  }
  uint64_t v18 = *(void *)(sub_26B4B0() - 8);
  if (*(_DWORD *)(v18 + 84)) {
    unint64_t v19 = *(void *)(v18 + 64);
  }
  else {
    unint64_t v19 = *(void *)(v18 + 64) + 1;
  }
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  unint64_t v20 = v19 + 8;
  unint64_t v21 = (unint64_t)&a1[v20] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (unint64_t)&a2[v20] & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  v21 += 47;
  v22 += 47;
  unint64_t v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v21 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v22 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 &= 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)(v23 + 8);
  *(void *)unint64_t v24 = *(void *)v23;
  *(void *)(v24 + 8) = v25;
  swift_retain();
  swift_release();
  uint64_t v26 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v26 + 24))((*(unsigned __int8 *)(v26 + 80) + 16 + v24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80), (*(unsigned __int8 *)(v26 + 80) + 16 + v23) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  return a1;
}

void *sub_17BC78(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_26B4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v8 = *(void *)(v7 + 64);
  }
  else {
    size_t v8 = *(void *)(v7 + 64) + 1;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_16;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_16:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v8);
      char v15 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v15 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    char v15 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v9) = v15;
  unint64_t v16 = ((unint64_t)a1 + v9 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (unint64_t)&a2[v9 + 8] & 0xFFFFFFFFFFFFFFF8;
  long long v18 = *(_OWORD *)v17;
  long long v19 = *(_OWORD *)(v17 + 16);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(_OWORD *)unint64_t v16 = v18;
  *(_OWORD *)(v16 + 16) = v19;
  unint64_t v20 = (void *)((v16 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)((v17 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v20 = *v21;
  unint64_t v22 = (_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (_OWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v22 = *v23;
  uint64_t v24 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 32))(((unint64_t)v22 + *(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), ((unint64_t)v23 + *(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

unsigned __int8 *sub_17BEDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_26B4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    if (v8 <= 8) {
      uint64_t v9 = 8;
    }
    else {
      uint64_t v9 = v8;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          if (v9 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          if (v9 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v9 < 4) {
            goto LABEL_18;
          }
          goto LABEL_23;
        case 4:
          int v13 = *(_DWORD *)a1;
          if (v9 < 4)
          {
LABEL_18:
            unsigned int v10 = (v13 | (v11 << (8 * v9))) + 2;
            break;
          }
LABEL_23:
          if (v13 != -1) {
            goto LABEL_24;
          }
          goto LABEL_20;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
LABEL_20:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      }
    }
    else
    {
LABEL_24:
      swift_release();
    }
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          if (v9 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_35;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_35;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_35;
          }
          goto LABEL_41;
        case 4:
          int v17 = *(_DWORD *)a2;
          if (v9 < 4)
          {
LABEL_35:
            unsigned int v14 = (v17 | (v15 << (8 * v9))) + 2;
            break;
          }
LABEL_41:
          if (v17 != -1) {
            goto LABEL_42;
          }
          goto LABEL_37;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
LABEL_37:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v8);
        char v18 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        char v18 = 1;
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
LABEL_42:
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v9] = v18;
  }
  uint64_t v19 = *(void *)(sub_26B4B0() - 8);
  if (*(_DWORD *)(v19 + 84)) {
    unint64_t v20 = *(void *)(v19 + 64);
  }
  else {
    unint64_t v20 = *(void *)(v19 + 64) + 1;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  unint64_t v21 = v20 + 8;
  unint64_t v22 = (unint64_t)&a1[v21] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (void *)((unint64_t)&a2[v21] & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v22 = *v23;
  *(void *)(v22 + 8) = v23[1];
  *(void *)(v22 + 16) = v23[2];
  *(void *)(v22 + 24) = v23[3];
  *(void *)(v22 + 32) = v23[4];
  v22 += 47;
  uint64_t v24 = (void *)(((unint64_t)v23 + 47) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v22 & 0xFFFFFFFFFFFFFFF8) = *v24;
  unint64_t v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v25 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)unint64_t v25 = *v26;
  swift_release();
  uint64_t v27 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(unsigned __int8 *)(v27 + 80) + 16 + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), ((unint64_t)v26 + *(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_17C2E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26B4B0() - 8);
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (*(_DWORD *)(v6 + 84)) {
    unint64_t v11 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v11 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v12 = 8;
  if (v11 > 8) {
    uint64_t v12 = v11;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v9 + 16;
  if (a2 <= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = ((v13 + (((((v12 & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)
      + *(void *)(v7 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_30:
      unint64_t v22 = (unint64_t *)(((((unint64_t)a1 + v12 + 8) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
      if ((v8 & 0x80000000) != 0)
      {
        uint64_t v24 = *(uint64_t (**)(unint64_t))(v7 + 48);
        return v24((v13 + (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9);
      }
      else
      {
        unint64_t v23 = *v22;
        if (v23 >= 0xFFFFFFFF) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_30;
  }
LABEL_20:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = v14;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v10 + (v21 | v19) + 1;
}

void sub_17C564(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26B4B0() - 8);
  int v9 = *(_DWORD *)(v8 + 84);
  unint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(*(void *)(a4 + 32) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  if (v9) {
    unint64_t v15 = v10;
  }
  else {
    unint64_t v15 = v10 + 1;
  }
  uint64_t v16 = 8;
  if (v15 > 8) {
    uint64_t v16 = v15;
  }
  uint64_t v17 = v13 + 16;
  size_t v18 = ((v13 + 16 + (((((v16 & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
      + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v19 = 0;
  }
  else if (v18 <= 3)
  {
    unsigned int v23 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v23))
    {
      int v19 = 4;
    }
    else if (v23 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v23 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v18 < 4)
    {
      int v21 = (v20 >> (8 * v18)) + 1;
      if (v18)
      {
        int v24 = v20 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v18] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v21;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v18] = v21;
        return;
      default:
        return;
    }
  }
  uint64_t v22 = ~v13;
  switch(v19)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x17C85CLL);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        unint64_t v25 = (void *)((((unint64_t)&a1[v16 + 8] & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
        if ((v12 & 0x80000000) != 0)
        {
          uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v27((v17 + (((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8)) & v22, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v26 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v26 = (a2 - 1);
          }
          *unint64_t v25 = v26;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for HorizontalScrollingGrid()
{
  return swift_getGenericMetadata();
}

uint64_t sub_17C89C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_17C8EC()
{
  unint64_t result = qword_2F2858;
  if (!qword_2F2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2858);
  }
  return result;
}

uint64_t sub_17C940()
{
  return sub_17C988((uint64_t (*)(void, void, void, void, void, void, void))sub_1729FC);
}

uint64_t sub_17C958()
{
  return sub_17C988((uint64_t (*)(void, void, void, void, void, void, void))sub_172DB4);
}

uint64_t sub_17C970()
{
  return sub_17C988((uint64_t (*)(void, void, void, void, void, void, void))sub_173E08);
}

uint64_t sub_17C988(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_17C9A4()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v1 = type metadata accessor for HorizontalScrollingGrid();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26B4B0();
    uint64_t v4 = *(void *)(v3 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
    }
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2 + *(int *)(v1 + 80));
  return swift_deallocObject();
}

uint64_t sub_17CB74(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = *(void *)(type metadata accessor for HorizontalScrollingGrid() - 8);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1742F8(a1, v9, v3, v4, v5, v6, v7);
}

uint64_t sub_17CC6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_17CCD4(uint64_t a1)
{
  return sub_17D1E4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_175A9C);
}

uint64_t sub_17CCF8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_17CD98()
{
  uint64_t v1 = type metadata accessor for BooksFinishedFrame(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = v2 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v4 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 20);
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v11 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      break;
    case 1:
      if (!*(unsigned char *)(v5 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v5);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v5 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v7 = v5 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v8 = sub_26A6E0();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      break;
  }
  uint64_t v12 = v2 + *(int *)(v1 + 28);
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26B4B0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = type metadata accessor for BooksFinishedFrameViewModel(0);
  uint64_t v16 = v12 + *(int *)(v15 + 20);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v16 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v18 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v12 + *(int *)(v15 + 36);
  uint64_t v20 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);

  return swift_deallocObject();
}

uint64_t sub_17D1CC(uint64_t a1)
{
  return sub_17D1E4(a1, sub_175754);
}

uint64_t sub_17D1E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for BooksFinishedFrame(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_17D278()
{
  unint64_t result = qword_2F28E0;
  if (!qword_2F28E0)
  {
    sub_7B0C(&qword_2F28D8);
    sub_DBF80();
    sub_176CC8((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F28E0);
  }
  return result;
}

unint64_t sub_17D324()
{
  unint64_t result = qword_2F28E8;
  if (!qword_2F28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F28E8);
  }
  return result;
}

uint64_t sub_17D390(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for HorizontalScrollingGridLayoutViewModel()
{
  return &type metadata for HorizontalScrollingGridLayoutViewModel;
}

uint64_t sub_17D400()
{
  return swift_getWitnessTable();
}

uint64_t static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _OWORD *a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v40 = a1;
  uint64_t v43 = a8;
  uint64_t v13 = sub_26CDD0();
  __chkstk_darwin(v13 - 8);
  uint64_t v42 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_26CAA0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *a3;
  long long v20 = a7[9];
  v48[8] = a7[8];
  v48[9] = v20;
  v48[10] = a7[10];
  long long v21 = a7[5];
  v48[4] = a7[4];
  v48[5] = v21;
  long long v22 = a7[7];
  v48[6] = a7[6];
  v48[7] = v22;
  long long v23 = a7[1];
  v48[0] = *a7;
  long long v24 = a7[2];
  v48[3] = a7[3];
  v48[1] = v23;
  v48[2] = v24;
  unint64_t v25 = &_swiftEmptyDictionarySingleton;
  if (a4)
  {
    uint64_t v47 = (void *)sub_4A98(&qword_2E9F90);
    *(void *)&long long v46 = a4;
    sub_89B4(&v46, v45);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = &_swiftEmptyDictionarySingleton;
    sub_A7C0(v45, 0x65446E6F69746361, 0xED0000736C696174, isUniquelyReferenced_nonNull_native);
    unint64_t v25 = v44;
    swift_bridgeObjectRelease();
  }
  if (a6)
  {
    uint64_t v47 = &type metadata for String;
    *(void *)&long long v46 = a5;
    *((void *)&v46 + 1) = a6;
    sub_89B4(&v46, v45);
    swift_bridgeObjectRetain();
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = v25;
    sub_A7C0(v45, 0x72556E6F69746361, 0xE90000000000006CLL, v27);
    unint64_t v25 = v44;
    swift_bridgeObjectRelease();
  }
  LOBYTE(v46) = v19;
  unint64_t v28 = Metrics.ClickActionType.rawValue.getter();
  uint64_t v47 = &type metadata for String;
  *(void *)&long long v46 = v28;
  *((void *)&v46 + 1) = v29;
  sub_89B4(&v46, v45);
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v44 = v25;
  sub_A7C0(v45, 0x79546E6F69746361, 0xEA00000000006570, v30);
  uint64_t v31 = v44;
  swift_bridgeObjectRelease();
  sub_4A98(&qword_2EADA8);
  uint64_t v32 = swift_allocObject();
  long long v39 = xmmword_26F990;
  *(_OWORD *)(v32 + 16) = xmmword_26F990;
  sub_A3E88((uint64_t)v48);
  unint64_t v33 = sub_17EA70();
  sub_A3F40((uint64_t)v48);
  *(void *)(v32 + 32) = v33;
  uint64_t v47 = (void *)sub_4A98(&qword_2F2918);
  *(void *)&long long v46 = v32;
  sub_89B4(&v46, v45);
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v44 = v31;
  sub_A7C0(v45, 0x6E6F697461636F6CLL, 0xE800000000000000, v34);
  swift_bridgeObjectRelease();
  if (qword_2E9B88 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_26CA70();
  sub_6B14(v35, (uint64_t)qword_3152B0);
  sub_26CA50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_4A98(&qword_2E9F98);
  unint64_t v36 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 16))(v37 + v36, v18, v15);
  sub_26CDC0();
  sub_26CB60();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

unint64_t static Metrics.actionDetails(assetInfo:)(void *a1)
{
  sub_4A98(&qword_2E9F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0x5050557369;
  *(void *)(inited + 40) = 0xE500000000000000;
  sub_4ADC(a1, a1[3]);
  char v3 = sub_26A010();
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = v3 & 1;
  return sub_8D70(inited);
}

uint64_t sub_17DDF8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_4A98(&qword_2F2930);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26CB70();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = sub_26CAA0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (v6)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v4, v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  sub_26CAA0();
  uint64_t v9 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_B6DC((uint64_t)v4, &qword_2F2930);
    long long v15 = 0u;
    long long v16 = 0u;
LABEL_13:
    uint64_t result = sub_B6DC((uint64_t)&v15, &qword_2EA0B8);
    goto LABEL_14;
  }
  uint64_t v10 = sub_26CA90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v7);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_9E10(0x79546E6F69746361, 0xEA00000000006570), (v12 & 1) != 0))
  {
    sub_BEAB0(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1)) {
    goto LABEL_13;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return Metrics.ClickActionType.init(rawValue:)(a1);
  }
LABEL_14:
  *a1 = 34;
  return result;
}

uint64_t Metrics.ClickActionType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26DE30();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 0;
  char v5 = 16;
  switch(v2)
  {
    case 0:
      goto LABEL_18;
    case 1:
      char v4 = 1;
      goto LABEL_18;
    case 2:
      char v4 = 2;
      goto LABEL_18;
    case 3:
      char v4 = 3;
      goto LABEL_18;
    case 4:
      char v4 = 4;
      goto LABEL_18;
    case 5:
      char v4 = 5;
      goto LABEL_18;
    case 6:
      char v4 = 6;
      goto LABEL_18;
    case 7:
      char v4 = 7;
      goto LABEL_18;
    case 8:
      char v4 = 8;
      goto LABEL_18;
    case 9:
      char v4 = 9;
      goto LABEL_18;
    case 10:
      char v4 = 10;
      goto LABEL_18;
    case 11:
      char v4 = 11;
      goto LABEL_18;
    case 12:
      char v4 = 12;
      goto LABEL_18;
    case 13:
      char v4 = 13;
      goto LABEL_18;
    case 14:
      char v4 = 14;
      goto LABEL_18;
    case 15:
      char v4 = 15;
LABEL_18:
      char v5 = v4;
      break;
    case 16:
      break;
    case 17:
      char v5 = 17;
      break;
    case 18:
      char v5 = 18;
      break;
    case 19:
      char v5 = 19;
      break;
    case 20:
      char v5 = 20;
      break;
    case 21:
      char v5 = 21;
      break;
    case 22:
      char v5 = 22;
      break;
    case 23:
      char v5 = 23;
      break;
    case 24:
      char v5 = 24;
      break;
    case 25:
      char v5 = 25;
      break;
    case 26:
      char v5 = 26;
      break;
    case 27:
      char v5 = 27;
      break;
    case 28:
      char v5 = 28;
      break;
    case 29:
      char v5 = 29;
      break;
    case 30:
      char v5 = 30;
      break;
    case 31:
      char v5 = 31;
      break;
    case 32:
      char v5 = 32;
      break;
    case 33:
      char v5 = 33;
      break;
    default:
      char v5 = 34;
      break;
  }
  *a1 = v5;
  return result;
}

unint64_t Metrics.ClickActionType.rawValue.getter()
{
  unint64_t result = 6579297;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E61576F54646461;
      break;
    case 2:
      unint64_t result = 0x6D61536F69647561;
      break;
    case 3:
      unint64_t result = 1801675106;
      break;
    case 4:
      unint64_t result = 7959906;
      break;
    case 5:
      unint64_t result = 0x6974696E49797562;
      break;
    case 6:
      unint64_t result = 0x6F446C65636E6163;
      break;
    case 7:
      unint64_t result = 0x657461657263;
      break;
    case 8:
      unint64_t result = 0x6574656C6564;
      break;
    case 9:
      unint64_t result = 0x676F6C616964;
      break;
    case 0xA:
      unint64_t result = 0x7373696D736964;
      break;
    case 0xB:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 0xC:
      unint64_t result = 0x657469726F766166;
      break;
    case 0xD:
      unint64_t result = 0x7375636F66;
      break;
    case 0xE:
      unint64_t result = 1702125928;
      break;
    case 0xF:
      unint64_t result = 1702260588;
      break;
    case 0x10:
      unint64_t result = 1701998445;
      break;
    case 0x11:
      unint64_t result = 1702260589;
      break;
    case 0x12:
      unint64_t result = 0x657461676976616ELL;
      break;
    case 0x13:
      unint64_t result = 1954047342;
      break;
    case 0x14:
      unint64_t result = 1852141679;
      break;
    case 0x15:
      unint64_t result = 0x6573756170;
      break;
    case 0x16:
      unint64_t result = 2036427888;
      break;
    case 0x17:
      unint64_t result = 1702125938;
      break;
    case 0x18:
      unint64_t result = 0x706D615364616572;
      break;
    case 0x19:
      unint64_t result = 0x64616F6C6572;
      break;
    case 0x1A:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x1B:
      unint64_t result = 0x7463656C6573;
      break;
    case 0x1C:
      unint64_t result = 0x6572616873;
      break;
    case 0x1D:
      unint64_t result = 0x7465656873;
      break;
    case 0x1E:
      unint64_t result = 1953656691;
      break;
    case 0x1F:
      unint64_t result = 1886352499;
      break;
    case 0x20:
      unint64_t result = 0x69726F7661666E75;
      break;
    case 0x21:
      unint64_t result = 0x657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_17E624()
{
  return sub_108530();
}

Swift::Int sub_17E630()
{
  return sub_26DF20();
}

uint64_t sub_17E698()
{
  Metrics.ClickActionType.rawValue.getter();
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_17E6FC()
{
  return sub_26DF20();
}

uint64_t sub_17E760@<X0>(char *a1@<X8>)
{
  return Metrics.ClickActionType.init(rawValue:)(a1);
}

unint64_t sub_17E76C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Metrics.ClickActionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t Metrics.TargetType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DBEA0;
  v9._object = a2;
  unint64_t v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 6;
  if (v6 < 6) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t Metrics.TargetType.rawValue.getter()
{
  uint64_t result = 0x6E6F74747562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6954656C62627562;
      break;
    case 2:
      uint64_t result = 0x7265746C6966;
      break;
    case 3:
      uint64_t result = 1802398060;
      break;
    case 4:
      uint64_t result = 0x70756B636F6CLL;
      break;
    case 5:
      uint64_t result = 0x77656976657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_17E8A0(unsigned __int8 *a1, char *a2)
{
  return sub_108BFC(*a1, *a2);
}

Swift::Int sub_17E8AC()
{
  return sub_180CC0();
}

uint64_t sub_17E8B4()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_17E998()
{
  return sub_181B18();
}

uint64_t sub_17E9A0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Metrics.TargetType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_17E9AC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x6E6F74747562;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000070;
      uint64_t v3 = 0x6954656C62627562;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265746C6966;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1802398060;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x70756B636F6CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x77656976657270;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_17EA70()
{
  long long v1 = v0[9];
  long long v32 = v0[8];
  long long v33 = v1;
  long long v34 = v0[10];
  long long v2 = v0[5];
  long long v28 = v0[4];
  long long v29 = v2;
  long long v3 = v0[7];
  long long v30 = v0[6];
  long long v31 = v3;
  long long v4 = v0[1];
  long long v24 = *v0;
  long long v25 = v4;
  long long v5 = v0[3];
  long long v26 = v0[2];
  long long v27 = v5;
  sub_2694B0();
  swift_allocObject();
  sub_2694A0();
  sub_A40AC();
  uint64_t v13 = sub_269490();
  unint64_t v15 = v14;
  swift_release();
  long long v16 = self;
  Class isa = sub_2696D0().super.isa;
  v23[0] = 0;
  id v18 = [v16 JSONObjectWithData:isa options:0 error:v23];

  if (v18)
  {
    id v19 = v23[0];
    sub_26D9E0();
    swift_unknownObjectRelease();
    sub_4A98(&qword_2F2940);
    if (swift_dynamicCast())
    {
      unint64_t v12 = sub_1C2980(v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v12 = sub_8D70((uint64_t)&_swiftEmptyArrayStorage);
    }
    sub_17F770(v13, v15);
  }
  else
  {
    id v20 = v23[0];
    sub_269640();

    swift_willThrow();
    sub_17F770(v13, v15);
    if (qword_2E9AF0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_26A340();
    sub_6B14(v6, (uint64_t)qword_2E9E98);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = sub_26A320();
    os_log_type_t v8 = sub_26D840();
    if (os_log_type_enabled(v7, v8))
    {
      Swift::String v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)Swift::String v9 = 138412290;
      swift_errorRetain();
      unint64_t v11 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v23[0] = v11;
      sub_26D9A0();
      void *v10 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_5F050, v7, v8, "Failed to convert metrics model into MetricsFields: %@", v9, 0xCu);
      sub_4A98(&qword_2EA360);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v12 = sub_8D70((uint64_t)&_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
  return v12;
}

unint64_t sub_17EE08()
{
  long long v1 = v0[7];
  long long v29 = v0[6];
  long long v30 = v1;
  long long v31 = v0[8];
  uint64_t v32 = *((void *)v0 + 18);
  long long v2 = v0[3];
  long long v25 = v0[2];
  long long v26 = v2;
  long long v3 = v0[5];
  long long v27 = v0[4];
  long long v28 = v3;
  long long v4 = v0[1];
  long long v23 = *v0;
  long long v24 = v4;
  sub_2694B0();
  swift_allocObject();
  sub_2694A0();
  sub_17F71C();
  uint64_t v12 = sub_269490();
  unint64_t v14 = v13;
  swift_release();
  unint64_t v15 = self;
  Class isa = sub_2696D0().super.isa;
  v22[0] = 0;
  id v17 = [v15 JSONObjectWithData:isa options:0 error:v22];

  if (v17)
  {
    id v18 = v22[0];
    sub_26D9E0();
    swift_unknownObjectRelease();
    sub_4A98(&qword_2F2940);
    if (swift_dynamicCast())
    {
      unint64_t v11 = sub_1C2980(v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v11 = sub_8D70((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_17F770(v12, v14);
  }
  else
  {
    id v19 = v22[0];
    sub_269640();

    swift_willThrow();
    sub_17F770(v12, v14);
    if (qword_2E9AF0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_26A340();
    sub_6B14(v5, (uint64_t)qword_2E9E98);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = sub_26A320();
    os_log_type_t v7 = sub_26D840();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      Swift::String v9 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v8 = 138412290;
      swift_errorRetain();
      uint64_t v10 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v22[0] = v10;
      sub_26D9A0();
      *Swift::String v9 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_5F050, v6, v7, "Failed to convert metrics model into MetricsFields: %@", v8, 0xCu);
      sub_4A98(&qword_2EA360);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v11 = sub_8D70((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
  return v11;
}

unint64_t static Metrics.actionDetails(with:)(double a1)
{
  sub_4A98(&qword_2E9F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0x676E69746172;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = &type metadata for Double;
  *(double *)(inited + 48) = a1;
  return sub_8D70(inited);
}

unint64_t _s7BooksUI7MetricsO13actionDetails3for9assetInfoSDySSypGSgAC15ClickActionTypeO_14BookFoundation05AssetH0_ptFZ_0(uint64_t a1, void *a2)
{
  if (Metrics.ClickActionType.rawValue.getter() == 7959906 && v3 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  sub_4A98(&qword_2E9F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_270BF0;
  *(void *)(inited + 32) = 0x6D61726150797562;
  *(void *)(inited + 40) = 0xE900000000000073;
  sub_4ADC(a2, a2[3]);
  os_log_type_t v8 = (void *)sub_269DD0();
  if (!v8 || (Swift::String v9 = v8, v10 = [v8 buyParams], v9, !v10))
  {
    unint64_t v14 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = &type metadata for String;
    goto LABEL_13;
  }
  uint64_t v11 = sub_26D430();
  unint64_t v13 = v12;

  unint64_t v14 = (uint64_t *)(inited + 48);
  *(void *)(inited + 72) = &type metadata for String;
  if (!v13)
  {
LABEL_13:
    uint64_t *v14 = 0;
    unint64_t v13 = 0xE000000000000000;
    goto LABEL_14;
  }
  uint64_t *v14 = v11;
LABEL_14:
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 80) = 0x5050557369;
  *(void *)(inited + 88) = 0xE500000000000000;
  sub_4ADC(a2, a2[3]);
  char v15 = sub_26A010();
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = v15 & 1;
  return sub_8D70(inited);
}

unint64_t sub_17F3D8()
{
  unint64_t result = qword_2F2920;
  if (!qword_2F2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2920);
  }
  return result;
}

unint64_t sub_17F430()
{
  unint64_t result = qword_2F2928;
  if (!qword_2F2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2928);
  }
  return result;
}

uint64_t _s15ClickActionTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDF) {
    goto LABEL_17;
  }
  if (a2 + 33 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 33) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 33;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 33;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 33;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x22;
  int v8 = v6 - 34;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15ClickActionTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 33 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 33) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDE)
  {
    unsigned int v6 = ((a2 - 223) >> 8) + 1;
    *unint64_t result = a2 + 33;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17F5E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 33;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.ClickActionType()
{
  return &type metadata for Metrics.ClickActionType;
}

unsigned char *_s10TargetTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17F6E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.TargetType()
{
  return &type metadata for Metrics.TargetType;
}

unint64_t sub_17F71C()
{
  unint64_t result = qword_2F2938;
  if (!qword_2F2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2938);
  }
  return result;
}

uint64_t sub_17F770(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t DelayActionImplementation.perform(_:asPartOf:)(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DelayAction();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  sub_17FDE8(a1, (uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_17FE50((uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  sub_4A98(&qword_2F0340);
  uint64_t v10 = sub_26D180();
  uint64_t v11 = sub_26D6F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = &unk_2F2950;
  v12[5] = v9;
  v12[6] = v10;
  swift_retain();
  sub_105C10((uint64_t)v4, (uint64_t)&unk_2F0350, (uint64_t)v12);
  swift_release();
  return v10;
}

uint64_t sub_17F9AC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_26DB60();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_17FA6C, 0, 0);
}

uint64_t sub_17FA6C()
{
  type metadata accessor for DelayAction();
  uint64_t v1 = sub_26E0B0();
  uint64_t v3 = v2;
  sub_26DB50();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2F2960 + dword_2F2960);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_17FB58;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_17FB58()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_17FD84;
  }
  else {
    uint64_t v5 = sub_17FCC8;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v5, 0, 0);
}

uint64_t sub_17FCC8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = enum case for ActionOutcome.performed(_:);
  uint64_t v3 = sub_26CB90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_17FD84()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17FDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DelayAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_17FE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DelayAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_17FEB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DelayAction() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_12B40;
  return sub_17F9AC(a1, v5);
}

uint64_t sub_17FF8C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DelayAction();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  sub_17FDE8(a1, (uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_17FE50((uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  sub_4A98(&qword_2F0340);
  uint64_t v10 = sub_26D180();
  uint64_t v11 = sub_26D6F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = &unk_2F2958;
  v12[5] = v9;
  v12[6] = v10;
  swift_retain();
  sub_105C10((uint64_t)v4, (uint64_t)&unk_2F0368, (uint64_t)v12);
  swift_release();
  return v10;
}

uint64_t sub_180170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_26DB40();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_180274, 0, 0);
}

uint64_t sub_180274()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_26DB60();
  uint64_t v5 = sub_180850(&qword_2F2968, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_26DE70();
  sub_180850(&qword_2F2970, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_26DB70();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_180414;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_180414()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(void *)(v5 + 8);
    __asm { BRAA            X1, X16 }
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1805D0, 0, 0);
}

uint64_t sub_1805D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_180640()
{
  return sub_180850(&qword_2F2248, (void (*)(uint64_t))type metadata accessor for DelayAction);
}

ValueMetadata *type metadata accessor for DelayActionImplementation()
{
  return &type metadata for DelayActionImplementation;
}

uint64_t sub_18069C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for DelayAction() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocObject();
}

uint64_t sub_180774(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DelayAction() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_12134;
  return sub_17F9AC(a1, v5);
}

uint64_t sub_180850(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_180898()
{
  return sub_26DF20();
}

Swift::Int sub_1809C0()
{
  return sub_26DF20();
}

Swift::Int sub_180AB0()
{
  return sub_26DF20();
}

Swift::Int sub_180BD8()
{
  return sub_26DF20();
}

Swift::Int sub_180CC0()
{
  return sub_26DF20();
}

Swift::Int sub_180DBC()
{
  return sub_26DF20();
}

uint64_t sub_180E60()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_180F8C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_181068()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_18117C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1812C0()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1813D4()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1814FC()
{
  return sub_26DF20();
}

Swift::Int sub_181640()
{
  return sub_26DF20();
}

Swift::Int sub_181764()
{
  return sub_26DF20();
}

Swift::Int sub_1818B8()
{
  return sub_26DF20();
}

Swift::Int sub_1819DC()
{
  return sub_26DF20();
}

Swift::Int sub_181AC8(uint64_t a1, char a2)
{
  return sub_26DF20();
}

Swift::Int sub_181B18()
{
  return sub_26DF20();
}

Swift::Int sub_181C10()
{
  return sub_26DF20();
}

Swift::Int sub_181D18()
{
  return sub_26DF20();
}

Swift::Int sub_181DFC()
{
  return sub_26DF20();
}

uint64_t sub_181E9C(unsigned __int8 *a1, char *a2)
{
  return sub_108320(*a1, *a2);
}

Swift::Int sub_181EA8()
{
  return sub_26DF20();
}

uint64_t sub_181F70()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_182020()
{
  return sub_26DF20();
}

uint64_t sub_1820E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_184AE0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_182114(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x656C797473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702521203;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6769736564;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x746867696577;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_18219C()
{
  uint64_t result = 0x656C797473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702521203;
      break;
    case 2:
      uint64_t result = 0x6E6769736564;
      break;
    case 3:
      uint64_t result = 0x746867696577;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_182218@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_184AE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_182240(uint64_t a1)
{
  unint64_t v2 = sub_1830EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_18227C(uint64_t a1)
{
  unint64_t v2 = sub_1830EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1822B8(char *a1, unsigned __int8 *a2)
{
  return sub_10822C(*a1, *a2);
}

Swift::Int sub_1822C4()
{
  return sub_180DBC();
}

uint64_t sub_1822CC()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_18235C()
{
  return sub_181DFC();
}

uint64_t sub_182364@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_184B2C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_182394(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0x8000000000287830;
  if (v2 != 1) {
    unint64_t v4 = 0x8000000000287850;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    unint64_t v6 = 0xD000000000000012;
  }
  else {
    unint64_t v6 = 1953394534;
  }
  if (!v5) {
    unint64_t v3 = v4;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1823F4()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 1953394534;
  }
}

uint64_t sub_182450@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_184B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_182478(uint64_t a1)
{
  unint64_t v2 = sub_183098();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1824B4(uint64_t a1)
{
  unint64_t v2 = sub_183098();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FontSpec.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v74 = a2;
  uint64_t v2 = sub_4A98(&qword_2EA770);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v84 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v88 = (char *)&v66 - v5;
  uint64_t v6 = sub_26B980();
  uint64_t v78 = *(void *)(v6 - 8);
  uint64_t v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_26B820();
  uint64_t v82 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v73 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_4A98(&qword_2F2978);
  __chkstk_darwin(v77);
  uint64_t v83 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFC0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v75 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v81 = (uint64_t)&v66 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v76 = (uint64_t)&v66 - v16;
  __chkstk_darwin(v15);
  uint64_t v86 = (uint64_t)&v66 - v17;
  uint64_t v18 = sub_4A98(&qword_2F2980);
  uint64_t v85 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v90 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F2988);
  uint64_t v89 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FontSpec(0);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  long long v26 = (uint64_t *)((char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = (uint64_t)v26 + *(int *)(v24 + 28);
  uint64_t v28 = sub_26AB40();
  long long v29 = *(void (**)(void))(*(void *)(v28 - 8) + 56);
  uint64_t v91 = v27;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v27, 1, 1, v28);
  uint64_t v92 = (char *)v26 + *(int *)(v24 + 32);
  v29();
  long long v30 = v93;
  sub_4ADC(v93, v93[3]);
  sub_183098();
  uint64_t v31 = v94;
  sub_26DFC0();
  if (v31)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v30);
    uint64_t v34 = (uint64_t)v92;
    sub_B6DC(v91, &qword_2EA770);
    return sub_B6DC(v34, &qword_2EA770);
  }
  uint64_t v32 = (uint64_t)v87;
  uint64_t v72 = v26;
  uint64_t v94 = v18;
  uint64_t v33 = (uint64_t)v88;
  char v97 = 0;
  sub_1830EC();
  sub_26DC10();
  sub_183140(v86);
  uint64_t v70 = sub_18411C();
  uint64_t v71 = v22;
  int v68 = v36 & 1;
  char v96 = 1;
  char v37 = sub_26DCB0();
  if (v37)
  {
    char v95 = 1;
    sub_1845B4();
    sub_26DC90();
    uint64_t v69 = v20;
    uint64_t v40 = v81;
    uint64_t v41 = v82;
    uint64_t v42 = *(void (**)(void))(v82 + 104);
    unsigned int v67 = enum case for Font.Design.serif (_:);
    uint64_t v43 = v80;
    uint64_t v78 = v82 + 104;
    uint64_t v66 = (void (*)(uint64_t, void, uint64_t))v42;
    v42(v81);
    uint64_t v44 = v41 + 56;
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v79(v40, 0, 1, v43);
    uint64_t v45 = v83;
    uint64_t v46 = v83 + *(int *)(v77 + 48);
    sub_184608(v86, v83);
    uint64_t v87 = (char *)v46;
    sub_184608(v40, v46);
    uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v47((char *)v45, 1, v43) == 1)
    {
      sub_B6DC(v40, &qword_2EBFC0);
      int v48 = v47(v87, 1, v43);
      uint64_t v50 = (uint64_t)v84;
      uint64_t v39 = v91;
      if (v48 == 1)
      {
        uint64_t v77 = v44;
        sub_B6DC(v83, &qword_2EBFC0);
        uint64_t v38 = (uint64_t)v92;
LABEL_15:
        char v58 = _s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0();
        uint64_t v52 = v76;
        if (v58)
        {
          uint64_t v59 = v76;
          uint64_t v60 = 1;
          uint64_t v61 = v80;
        }
        else
        {
          uint64_t v62 = v80;
          v66(v76, v67, v80);
          uint64_t v59 = v52;
          uint64_t v60 = 0;
          uint64_t v61 = v62;
        }
        v79(v59, v60, 1, v61);
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v51 = (uint64_t)v75;
      sub_184608(v45, (uint64_t)v75);
      if (v47(v87, 1, v43) != 1)
      {
        uint64_t v77 = v41 + 56;
        uint64_t v53 = v82;
        uint64_t v54 = v73;
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v73, v87, v43);
        sub_184670();
        char v55 = sub_26D360();
        uint64_t v56 = v30;
        uint64_t v57 = *(void (**)(char *, uint64_t))(v53 + 8);
        v57(v54, v43);
        sub_B6DC(v81, &qword_2EBFC0);
        v57(v75, v43);
        long long v30 = v56;
        sub_B6DC(v45, &qword_2EBFC0);
        uint64_t v50 = (uint64_t)v84;
        uint64_t v39 = v91;
        uint64_t v38 = (uint64_t)v92;
        if (v55) {
          goto LABEL_15;
        }
LABEL_13:
        uint64_t v52 = v76;
        sub_184608(v86, v76);
LABEL_19:
        uint64_t v49 = sub_26B8D0();
        sub_B6DC(v52, &qword_2EBFC0);
        goto LABEL_20;
      }
      sub_B6DC(v81, &qword_2EBFC0);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v51, v43);
      uint64_t v50 = (uint64_t)v84;
      uint64_t v39 = v91;
    }
    sub_B6DC(v83, &qword_2F2978);
    uint64_t v38 = (uint64_t)v92;
    goto LABEL_13;
  }
  uint64_t v69 = v20;
  sub_1834B8(v32);
  uint64_t v39 = v91;
  uint64_t v38 = (uint64_t)v92;
  uint64_t v49 = sub_26B8E0();
  (*(void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v78 + 8))(v32, v79);
  uint64_t v50 = (uint64_t)v84;
LABEL_20:
  uint64_t v63 = v72;
  uint64_t *v72 = v49;
  uint64_t v64 = (uint64_t)v63;
  uint64_t v65 = v71;
  sub_183A80(v33);
  sub_E1FA4(v33, v39);
  sub_183A80(v50);
  sub_B6DC(v86, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v90, v94);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v69);
  sub_E1FA4(v50, v38);
  sub_184550(v64, v74);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v30);
  return sub_11E4D4(v64);
}

unint64_t sub_183098()
{
  unint64_t result = qword_2F2990;
  if (!qword_2F2990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2990);
  }
  return result;
}

unint64_t sub_1830EC()
{
  unint64_t result = qword_2F2998;
  if (!qword_2F2998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2998);
  }
  return result;
}

uint64_t sub_183140@<X0>(uint64_t a1@<X8>)
{
  sub_4A98(&qword_2F2980);
  uint64_t result = sub_26DC30();
  if (!v1)
  {
    uint64_t v5 = v4;
    if (v4)
    {
      uint64_t v6 = result;
      BOOL v7 = result == 0x746C7561666564 && v4 == 0xE700000000000000;
      if (v7 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for Font.Design.default(_:);
LABEL_9:
        uint64_t v9 = *v8;
        uint64_t v10 = sub_26B820();
        uint64_t v11 = *(void *)(v10 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v9, v10);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      if (v6 == 0x6669726573 && v5 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for Font.Design.serif (_:);
        goto LABEL_9;
      }
      if (v6 == 0x6465646E756F72 && v5 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for Font.Design.rounded(_:);
        goto LABEL_9;
      }
      if (v6 == 0x636170736F6E6F6DLL && v5 == 0xEA00000000006465)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t v8 = (unsigned int *)&enum case for Font.Design.monospaced(_:);
        goto LABEL_9;
      }
      char v13 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_24;
      }
      uint64_t v14 = sub_26DAD0();
      swift_allocError();
      uint64_t v16 = v15;
      sub_26DC20();
      sub_26DAC0();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, enum case for DecodingError.dataCorrupted(_:), v14);
      return swift_willThrow();
    }
    else
    {
      uint64_t v12 = sub_26B820();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
    }
  }
  return result;
}

uint64_t sub_1834B8@<X0>(uint64_t a1@<X8>)
{
  sub_4A98(&qword_2F2980);
  uint64_t result = sub_26DC70();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    BOOL v7 = result == 0x746954656772616CLL && v4 == 0xEA0000000000656CLL;
    if (v7 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.largeTitle(_:);
    }
    else if (v5 == 0x656C746974 && v6 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
    }
    else if (v5 == 0x32656C746974 && v6 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.title2(_:);
    }
    else if (v5 == 0x33656C746974 && v6 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
    }
    else if (v5 == 0x656E696C64616568 && v6 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.headline(_:);
    }
    else if (v5 == 0x6C64616568627573 && v6 == 0xEB00000000656E69 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.subheadline(_:);
    }
    else if (v5 == 2036625250 && v6 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
    }
    else if (v5 == 0x74756F6C6C6163 && v6 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.callout(_:);
    }
    else if (v5 == 0x65746F6E746F6F66 && v6 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.footnote(_:);
    }
    else if (v5 == 0x6E6F6974706163 && v6 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.caption(_:);
    }
    else
    {
      if (v5 == 0x326E6F6974706163 && v6 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v11 = sub_26DDB0();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          uint64_t v12 = sub_26DAD0();
          swift_allocError();
          uint64_t v14 = v13;
          sub_26DC20();
          sub_26DAC0();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, enum case for DecodingError.dataCorrupted(_:), v12);
          return swift_willThrow();
        }
      }
      uint64_t v8 = (unsigned int *)&enum case for Font.TextStyle.caption2(_:);
    }
    uint64_t v9 = *v8;
    uint64_t v10 = sub_26B980();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
  }
  return result;
}

uint64_t sub_183A80@<X0>(uint64_t a1@<X8>)
{
  sub_4A98(&qword_2F2988);
  uint64_t result = sub_26DC30();
  if (!v1)
  {
    uint64_t v5 = v4;
    if (v4)
    {
      uint64_t v6 = result;
      BOOL v7 = result == 0x6C6C616D5378 && v4 == 0xE600000000000000;
      if (v7 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.xSmall(_:);
LABEL_9:
        uint64_t v9 = *v8;
        uint64_t v10 = sub_26AB40();
        uint64_t v11 = *(void *)(v10 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v9, v10);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      if (v6 == 0x6C6C616D73 && v5 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.small(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6D756964656DLL && v5 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.medium(_:);
        goto LABEL_9;
      }
      if (v6 == 0x656772616CLL && v5 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.large(_:);
        goto LABEL_9;
      }
      if (v6 == 0x656772614C78 && v5 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.xLarge(_:);
        goto LABEL_9;
      }
      if (v6 == 0x656772614C7878 && v5 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.xxLarge(_:);
        goto LABEL_9;
      }
      if (v6 == 0x656772614C787878 && v5 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.xxxLarge(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6269737365636361 && v5 == 0xEE00317974696C69 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.accessibility1(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6269737365636361 && v5 == 0xEE00327974696C69 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.accessibility2(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6269737365636361 && v5 == 0xEE00337974696C69 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.accessibility3(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6269737365636361 && v5 == 0xEE00347974696C69 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.accessibility4(_:);
        goto LABEL_9;
      }
      if (v6 == 0x6269737365636361 && v5 == 0xEE00357974696C69)
      {
        swift_bridgeObjectRelease();
LABEL_56:
        uint64_t v8 = (unsigned int *)&enum case for DynamicTypeSize.accessibility5(_:);
        goto LABEL_9;
      }
      char v13 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_56;
      }
      uint64_t v14 = sub_26DAD0();
      swift_allocError();
      uint64_t v16 = v15;
      sub_26DC20();
      sub_26DAC0();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, enum case for DecodingError.dataCorrupted(_:), v14);
      return swift_willThrow();
    }
    else
    {
      uint64_t v12 = sub_26AB40();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
    }
  }
  return result;
}

uint64_t sub_184104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FontSpec.init(from:)(a1, a2);
}

uint64_t sub_18411C()
{
  sub_4A98(&qword_2F2980);
  uint64_t result = sub_26DC30();
  if (!v0)
  {
    uint64_t v3 = v2;
    if (v2)
    {
      uint64_t v4 = result;
      BOOL v5 = result == 0x67694C6172746C75 && v2 == 0xEA00000000007468;
      if (v5 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B830();
        return v6;
      }
      if (v4 == 1852401780 && v3 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B850();
        return v6;
      }
      if (v4 == 0x746867696CLL && v3 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B880();
        return v6;
      }
      if (v4 == 0x72616C75676572 && v3 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B8A0();
        return v6;
      }
      if (v4 == 0x6D756964656DLL && v3 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B890();
        return v6;
      }
      if (v4 == 0x646C6F62696D6573 && v3 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B8B0();
        return v6;
      }
      if (v4 == 1684828002 && v3 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B840();
        return v6;
      }
      if (v4 == 0x7976616568 && v3 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26B870();
        return v6;
      }
      if (v4 == 0x6B63616C62 && v3 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_44:
        sub_26B860();
        return v6;
      }
      char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_44;
      }
      uint64_t v8 = sub_26DAD0();
      swift_allocError();
      uint64_t v10 = v9;
      sub_26DC20();
      sub_26DAC0();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, enum case for DecodingError.dataCorrupted(_:), v8);
      return swift_willThrow();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_184550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontSpec(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1845B4()
{
  unint64_t result = qword_2F29A0;
  if (!qword_2F29A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29A0);
  }
  return result;
}

uint64_t sub_184608(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_184670()
{
  unint64_t result = qword_2F29A8;
  if (!qword_2F29A8)
  {
    sub_26B820();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29A8);
  }
  return result;
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x184794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON;
}

unsigned char *_s10CodingKeysO14FontCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x184898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysO14FontCodingKeysOMa()
{
  return &_s10CodingKeysO14FontCodingKeysON;
}

unint64_t sub_1848D4()
{
  unint64_t result = qword_2F29B0;
  if (!qword_2F29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29B0);
  }
  return result;
}

unint64_t sub_18492C()
{
  unint64_t result = qword_2F29B8;
  if (!qword_2F29B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29B8);
  }
  return result;
}

unint64_t sub_184984()
{
  unint64_t result = qword_2F29C0;
  if (!qword_2F29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29C0);
  }
  return result;
}

unint64_t sub_1849DC()
{
  unint64_t result = qword_2F29C8;
  if (!qword_2F29C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29C8);
  }
  return result;
}

unint64_t sub_184A34()
{
  unint64_t result = qword_2F29D0;
  if (!qword_2F29D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29D0);
  }
  return result;
}

unint64_t sub_184A8C()
{
  unint64_t result = qword_2F29D8;
  if (!qword_2F29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F29D8);
  }
  return result;
}

uint64_t sub_184AE0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DBF50;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_184B2C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DBFD0;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_184B78()
{
  return sub_26AED0();
}

uint64_t sub_184B9C(uint64_t a1)
{
  uint64_t v2 = sub_26AB70();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26AEE0();
}

uint64_t DeterminateProgressViewStyle.init(_:cancelIconConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *(void *)a1;
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *a5 = swift_getKeyPath();
  sub_4A98(&qword_2EBC50);
  swift_storeEnumTagMultiPayload();
  char v13 = (int *)type metadata accessor for DeterminateProgressViewStyle(0);
  uint64_t v14 = (uint64_t *)((char *)a5 + v13[5]);
  uint64_t *v14 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v16 = (char *)a5 + v13[6];
  *(void *)uint64_t v16 = a2;
  *((void *)v16 + 1) = a3;
  v16[16] = a4 & 1;
  *(uint64_t *)((char *)a5 + v13[7]) = v9;
  *((unsigned char *)a5 + v13[8]) = v10;
  *(uint64_t *)((char *)a5 + v13[9]) = v11;
  *(uint64_t *)((char *)a5 + v13[10]) = v12;
  return result;
}

uint64_t sub_184D5C()
{
  return sub_26AED0();
}

uint64_t type metadata accessor for DeterminateProgressViewStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2A60);
}

uint64_t DeterminateProgressViewStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_26C700();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F29E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_4A98(&qword_2F29E8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4A98(&qword_2F29F0);
  __chkstk_darwin(v22);
  char v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = COERCE_DOUBLE(sub_26B680());
  if (v15) {
    double v16 = 0.0;
  }
  else {
    double v16 = v14;
  }
  *uint64_t v8 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v8[1] = v17;
  uint64_t v18 = sub_4A98(&qword_2F29F8);
  sub_1850AC(v1, (char *)v8 + *(int *)(v18 + 44), v16);
  uint64_t v19 = *(int *)(type metadata accessor for DeterminateProgressViewStyle(0) + 32);
  if (*(unsigned char *)(v1 + v19) == 1) {
    sub_41340((uint64_t)v5);
  }
  else {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for BlendMode.normal(_:), v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v11[*(int *)(v9 + 36)], v5, v2);
  sub_B678((uint64_t)v8, (uint64_t)v11, &qword_2F29E0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_B6DC((uint64_t)v8, &qword_2F29E0);
  if (*(unsigned char *)(v1 + v19)) {
    double v20 = 0.7;
  }
  else {
    double v20 = 1.0;
  }
  sub_B678((uint64_t)v11, (uint64_t)v13, &qword_2F29E8);
  *(double *)&v13[*(int *)(v22 + 36)] = v20;
  sub_B6DC((uint64_t)v11, &qword_2F29E8);
  return sub_19CC4((uint64_t)v13, v23, &qword_2F29F0);
}

uint64_t sub_1850AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  uint64_t v61 = a2;
  uint64_t v50 = sub_26AC50();
  __chkstk_darwin(v50);
  uint64_t v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = (char *)sub_4A98(&qword_2F2C10);
  __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F2C18);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  uint64_t v57 = v10;
  __chkstk_darwin(v9);
  uint64_t v52 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F2C20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v60 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v16 = (char *)&v50 - v15;
  uint64_t v17 = type metadata accessor for DeterminateProgressViewStyle(0);
  uint64_t v18 = *(void *)(a1 + *(int *)(v17 + 28));
  swift_retain();
  sub_26A7B0();
  uint64_t v19 = v96;
  unsigned int v63 = v98;
  unsigned int v64 = v97;
  uint64_t v20 = v99;
  uint64_t v62 = v100;
  uint64_t v21 = v101;
  uint64_t v22 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v65 = v23;
  uint64_t v66 = v22;
  sub_185924((uint64_t)&v68, a3);
  long long v120 = v78;
  long long v121 = v79;
  long long v122 = v80;
  long long v123 = v81;
  long long v116 = v74;
  long long v117 = v75;
  long long v118 = v76;
  long long v119 = v77;
  long long v112 = v70;
  long long v113 = v71;
  long long v114 = v72;
  long long v115 = v73;
  long long v110 = v68;
  long long v111 = v69;
  uint64_t v24 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v58 = v25;
  uint64_t v59 = v24;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  long long v133 = v115;
  long long v132 = v114;
  long long v131 = v113;
  long long v130 = v112;
  long long v137 = v119;
  long long v136 = v118;
  long long v135 = v117;
  long long v134 = v116;
  long long v141 = v123;
  long long v140 = v122;
  long long v139 = v121;
  long long v138 = v120;
  long long v129 = v111;
  uint64_t v53 = v102;
  uint64_t v54 = v104;
  long long v55 = v106;
  long long v128 = v110;
  unsigned __int8 v127 = v103;
  unsigned __int8 v125 = v105;
  uint64_t v26 = a1 + *(int *)(v17 + 24);
  if (*(unsigned char *)(v26 + 16))
  {
    uint64_t v27 = 1;
    uint64_t v28 = v56;
  }
  else
  {
    uint64_t v29 = *(void *)(v26 + 8);
    long long v30 = (char *)v6 + *(int *)(v50 + 20);
    uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v32 = sub_26B160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
    *uint64_t v6 = v29;
    v6[1] = v29;
    uint64_t KeyPath = swift_getKeyPath();
    sub_189074((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v34 = (uint64_t *)&v8[*((int *)v51 + 9)];
    *uint64_t v34 = KeyPath;
    v34[1] = v18;
    swift_retain();
    sub_188E7C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v35 = v52;
    sub_B678((uint64_t)v8, v52, &qword_2F2C10);
    uint64_t v36 = v56;
    char v37 = (_OWORD *)(v35 + *(int *)(v56 + 36));
    long long v38 = v108;
    *char v37 = v107;
    v37[1] = v38;
    void v37[2] = v109;
    sub_B6DC((uint64_t)v8, &qword_2F2C10);
    sub_19CC4(v35, (uint64_t)v16, &qword_2F2C18);
    uint64_t v27 = 0;
    uint64_t v28 = v36;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v16, v27, 1, v28);
  unsigned __int8 v39 = v127;
  LODWORD(v57) = v127;
  unsigned __int8 v40 = v125;
  LODWORD(v56) = v125;
  uint64_t v41 = v60;
  sub_B678((uint64_t)v16, v60, &qword_2F2C20);
  *(void *)&v67[0] = v19;
  *((void *)&v67[0] + 1) = __PAIR64__(v63, v64);
  *(void *)&v67[1] = v20;
  *((void *)&v67[1] + 1) = v62;
  *(void *)&v67[2] = v21;
  *((void *)&v67[2] + 1) = v18;
  LOWORD(v67[3]) = 256;
  *(_DWORD *)((char *)&v67[3] + 2) = v142;
  WORD3(v67[3]) = v143;
  uint64_t v51 = v16;
  uint64_t v52 = v18;
  *((void *)&v67[3] + 1) = v66;
  *(void *)&v67[4] = v65;
  *((void *)&v67[4] + 1) = 0x3FC999999999999ALL;
  v67[6] = v129;
  v67[5] = v128;
  v67[10] = v133;
  v67[9] = v132;
  v67[8] = v131;
  v67[7] = v130;
  v67[14] = v137;
  v67[13] = v136;
  v67[12] = v135;
  v67[11] = v134;
  v67[18] = v141;
  v67[17] = v140;
  v67[16] = v139;
  v67[15] = v138;
  uint64_t v43 = v58;
  uint64_t v42 = v59;
  *(void *)&v67[19] = v59;
  *((void *)&v67[19] + 1) = v58;
  uint64_t v45 = v53;
  uint64_t v44 = v54;
  *(void *)&v67[20] = v53;
  BYTE8(v67[20]) = v39;
  *(_DWORD *)((char *)&v67[20] + 9) = *(_DWORD *)v126;
  HIDWORD(v67[20]) = *(_DWORD *)&v126[3];
  *(void *)&v67[21] = v54;
  BYTE8(v67[21]) = v40;
  *(_DWORD *)((char *)&v67[21] + 9) = *(_DWORD *)v124;
  HIDWORD(v67[21]) = *(_DWORD *)&v124[3];
  long long v46 = v55;
  v67[22] = v55;
  uint64_t v47 = v61;
  memcpy(v61, v67, 0x170uLL);
  uint64_t v48 = sub_4A98(&qword_2F2C28);
  sub_B678(v41, (uint64_t)v47 + *(int *)(v48 + 48), &qword_2F2C20);
  sub_1891D4((uint64_t)v67);
  sub_B6DC((uint64_t)v51, &qword_2F2C20);
  sub_B6DC(v41, &qword_2F2C20);
  *(void *)&long long v68 = v19;
  *((void *)&v68 + 1) = __PAIR64__(v63, v64);
  *(void *)&long long v69 = v20;
  *((void *)&v69 + 1) = v62;
  *(void *)&long long v70 = v21;
  *((void *)&v70 + 1) = v52;
  LOWORD(v71) = 256;
  *(_DWORD *)((char *)&v71 + 2) = v142;
  WORD3(v71) = v143;
  *((void *)&v71 + 1) = v66;
  *(void *)&long long v72 = v65;
  *((void *)&v72 + 1) = 0x3FC999999999999ALL;
  long long v74 = v129;
  long long v73 = v128;
  long long v78 = v133;
  long long v77 = v132;
  long long v76 = v131;
  long long v75 = v130;
  long long v82 = v137;
  long long v81 = v136;
  long long v80 = v135;
  long long v79 = v134;
  long long v86 = v141;
  long long v85 = v140;
  long long v84 = v139;
  long long v83 = v138;
  uint64_t v87 = v42;
  uint64_t v88 = v43;
  uint64_t v89 = v45;
  char v90 = v57;
  *(_DWORD *)uint64_t v91 = *(_DWORD *)v126;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v126[3];
  uint64_t v92 = v44;
  char v93 = v56;
  *(_DWORD *)uint64_t v94 = *(_DWORD *)v124;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v124[3];
  long long v95 = v46;
  return sub_18922C((uint64_t)&v68);
}

uint64_t sub_185924@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double v44 = a2;
  uint64_t v4 = sub_26AB70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v43 = *(void *)(v2 + *(int *)(type metadata accessor for DeterminateProgressViewStyle(0) + 28));
  swift_retain();
  double v11 = 0.0;
  sub_26A7B0();
  uint64_t v12 = v51;
  uint64_t v13 = v53;
  uint64_t v40 = v54;
  uint64_t v14 = v55;
  uint64_t v42 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v41 = v15;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v36 = v56;
  int v34 = v57;
  uint64_t v37 = v58;
  int v33 = v59;
  uint64_t v39 = v60;
  uint64_t v38 = v61;
  sub_41A98((uint64_t)v10);
  uint64_t v16 = enum case for LayoutDirection.leftToRight(_:);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v17 = v52;
  v35(v8, enum case for LayoutDirection.leftToRight(_:), v4);
  char v18 = sub_26AB60();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  char v48 = v34;
  char v46 = v33;
  if (v18) {
    double v20 = -1.57079633;
  }
  else {
    double v20 = -4.71238898;
  }
  sub_26C7E0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_41A98((uint64_t)v10);
  v35(v8, v16, v4);
  char v25 = sub_26AB60();
  v19(v8, v4);
  v19(v10, v4);
  if ((v25 & 1) == 0) {
    double v11 = 3.14159265;
  }
  char v26 = v48;
  char v27 = v46;
  uint64_t result = sub_26C7E0();
  *(void *)a1 = 0;
  *(double *)(a1 + 8) = v44;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v40;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v43;
  *(_WORD *)(a1 + 64) = 256;
  *(_DWORD *)(a1 + 66) = v49;
  *(_WORD *)(a1 + 70) = v50;
  uint64_t v29 = v41;
  *(void *)(a1 + 72) = v42;
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v36;
  *(unsigned char *)(a1 + 96) = v26;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a1 + 97) = *(_DWORD *)v47;
  *(void *)(a1 + 104) = v37;
  *(unsigned char *)(a1 + 112) = v27;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a1 + 113) = *(_DWORD *)v45;
  uint64_t v30 = v38;
  *(void *)(a1 + 120) = v39;
  *(void *)(a1 + 128) = v30;
  *(double *)(a1 + 136) = v20;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v24;
  *(double *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 168) = xmmword_27BD30;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = v31;
  *(void *)(a1 + 200) = v32;
  *(_OWORD *)(a1 + 208) = xmmword_27BD30;
  return result;
}

uint64_t InDeterminateProgressViewStyle.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  sub_26C340();
  *(unsigned char *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  uint64_t v7 = (int *)type metadata accessor for InDeterminateProgressViewStyle(0);
  uint64_t v8 = (uint64_t *)(a2 + v7[5]);
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)(a2 + v7[6]) = v3;
  *(unsigned char *)(a2 + v7[7]) = v4;
  *(void *)(a2 + v7[8]) = v5;
  *(void *)(a2 + v7[9]) = v6;
  return result;
}

uint64_t sub_185E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_26AC80();
  __chkstk_darwin(v3 - 8);
  unsigned int v64 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_26C700();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  unsigned int v63 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for InDeterminateProgressViewStyle(0);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  __chkstk_darwin(v7);
  int v49 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = sub_4A98(&qword_2F2B80);
  __chkstk_darwin(v62);
  char v10 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = *(void *)(v1 + *(int *)(v7 + 24));
  swift_retain();
  sub_26A7B0();
  uint64_t v11 = v85;
  uint64_t v12 = v86;
  uint64_t v13 = v87;
  uint64_t v56 = v88;
  uint64_t v14 = v89;
  uint64_t v15 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v57 = v16;
  uint64_t v58 = v15;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  unsigned __int8 v17 = v91;
  uint64_t v50 = v90;
  uint64_t v51 = v92;
  unsigned __int8 v18 = v93;
  uint64_t v52 = v95;
  uint64_t v53 = v94;
  uint64_t v20 = *(void *)(v1 + 8);
  LOBYTE(v66) = *(unsigned char *)v1;
  char v19 = v66;
  *((void *)&v66 + 1) = v20;
  sub_4A98(&qword_2F2C08);
  sub_26C350();
  int v45 = v83[0];
  unsigned __int8 v81 = v17;
  unsigned __int8 v80 = v18;
  sub_26C7E0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  int v47 = v81;
  int v48 = v80;
  sub_26C6C0();
  sub_26C670();
  swift_release();
  uint64_t v46 = sub_26C690();
  swift_release();
  LOBYTE(v66) = v19;
  *((void *)&v66 + 1) = v20;
  sub_26C350();
  char v25 = v83[0];
  char v26 = v49;
  sub_189074(v1, (uint64_t)v49, type metadata accessor for InDeterminateProgressViewStyle);
  unint64_t v27 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v28 = swift_allocObject();
  sub_188DCC((uint64_t)v26, v28 + v27, type metadata accessor for InDeterminateProgressViewStyle);
  uint64_t v29 = *(int *)(v7 + 28);
  if (*(unsigned char *)(v2 + v29) == 1)
  {
    uint64_t v30 = v63;
    sub_41340((uint64_t)v63);
    uint64_t v32 = v60;
    uint64_t v31 = v61;
  }
  else
  {
    uint64_t v32 = v60;
    uint64_t v31 = v61;
    uint64_t v30 = v63;
    (*(void (**)(unsigned char *, void, uint64_t))(v60 + 104))(v63, enum case for BlendMode.normal(_:), v61);
  }
  double v33 = -6.28318531;
  if (!v45) {
    double v33 = 0.0;
  }
  long long v66 = xmmword_27CB70;
  *(void *)&long long v67 = v11;
  *((void *)&v67 + 1) = v12;
  *(void *)&long long v68 = v13;
  *((void *)&v68 + 1) = v56;
  *(void *)&long long v69 = v14;
  *((void *)&v69 + 1) = v59;
  LOWORD(v70) = 256;
  *(_DWORD *)((char *)&v70 + 2) = *(_DWORD *)&v83[7];
  WORD3(v70) = v84;
  *((void *)&v70 + 1) = v58;
  *(void *)&long long v71 = v57;
  *((void *)&v71 + 1) = 0x3FC999999999999ALL;
  *(void *)&long long v72 = v50;
  BYTE8(v72) = v47;
  HIDWORD(v72) = *(_DWORD *)&v83[3];
  *(_DWORD *)((char *)&v72 + 9) = *(_DWORD *)v83;
  *(void *)&long long v73 = v51;
  BYTE8(v73) = v48;
  HIDWORD(v73) = *(_DWORD *)&v82[3];
  *(_DWORD *)((char *)&v73 + 9) = *(_DWORD *)v82;
  *(void *)&long long v74 = v53;
  *((void *)&v74 + 1) = v52;
  *(double *)&long long v75 = v33;
  *((void *)&v75 + 1) = v22;
  *(void *)&long long v76 = v24;
  *((void *)&v76 + 1) = v46;
  LOBYTE(v77) = v25;
  *((void *)&v77 + 1) = sub_189014;
  long long v78 = (unint64_t)v28;
  uint64_t v79 = 0;
  uint64_t v34 = (uint64_t)v64;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v32 + 16))(v64, v30, v31);
  sub_189074(v34, (uint64_t)&v10[*(int *)(v62 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  long long v35 = v77;
  *((_OWORD *)v10 + 10) = v76;
  *((_OWORD *)v10 + 11) = v35;
  *((_OWORD *)v10 + 12) = v78;
  *((void *)v10 + 26) = v79;
  long long v36 = v73;
  *((_OWORD *)v10 + 6) = v72;
  *((_OWORD *)v10 + 7) = v36;
  long long v37 = v75;
  *((_OWORD *)v10 + 8) = v74;
  *((_OWORD *)v10 + 9) = v37;
  long long v38 = v69;
  *((_OWORD *)v10 + 2) = v68;
  *((_OWORD *)v10 + 3) = v38;
  long long v39 = v71;
  *((_OWORD *)v10 + 4) = v70;
  *((_OWORD *)v10 + 5) = v39;
  long long v40 = v67;
  *(_OWORD *)char v10 = v66;
  *((_OWORD *)v10 + 1) = v40;
  sub_1890DC((uint64_t)&v66);
  sub_188E7C(v34, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v30, v31);
  sub_189158((uint64_t)&v66);
  if (*(unsigned char *)(v2 + v29)) {
    double v41 = 0.7;
  }
  else {
    double v41 = 1.0;
  }
  uint64_t v42 = v65;
  sub_B678((uint64_t)v10, v65, &qword_2F2B80);
  *(double *)(v42 + *(int *)(sub_4A98(&qword_2F2B70) + 36)) = v41;
  return sub_B6DC((uint64_t)v10, &qword_2F2B80);
}

uint64_t sub_186440()
{
  return swift_release();
}

uint64_t ProgressViewModel.init(foregroundColor:style:size:lineWidth:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  char v5 = *a2;
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  return result;
}

uint64_t sub_1864E4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v23 = a3;
  uint64_t v9 = (int *)type metadata accessor for InDeterminateProgressViewStyle(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = sub_4A98(&qword_2F2BE8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unsigned __int8 v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *a2;
  sub_26A800();
  char v24 = 1;
  swift_retain();
  sub_26C340();
  uint64_t v20 = v26;
  char *v12 = v25;
  *((void *)v12 + 1) = v20;
  uint64_t v21 = (uint64_t *)&v12[v9[5]];
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  *(void *)&v12[v9[6]] = a1;
  v12[v9[7]] = v19;
  *(double *)&v12[v9[8]] = a4;
  *(double *)&v12[v9[9]] = a5;
  sub_188DCC((uint64_t)v12, (uint64_t)v14, type metadata accessor for InDeterminateProgressViewStyle);
  sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
  sub_188E34(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
  sub_26BC00();
  sub_188E7C((uint64_t)v14, type metadata accessor for InDeterminateProgressViewStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_186788@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  int v31 = a5;
  uint64_t v30 = a4;
  uint64_t v32 = a6;
  uint64_t v15 = (int *)type metadata accessor for DeterminateProgressViewStyle(0);
  uint64_t v16 = __chkstk_darwin(v15);
  unsigned __int8 v18 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = sub_4A98(&qword_2F2BE8);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v25 = *a2;
  double v34 = a7;
  char v35 = 0;
  uint64_t v33 = 0x3FF0000000000000;
  sub_4F928();
  sub_26A7F0();
  *unsigned __int8 v18 = swift_getKeyPath();
  sub_4A98(&qword_2EBC50);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (uint64_t *)((char *)v18 + v15[5]);
  *uint64_t v26 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  unint64_t v27 = (char *)v18 + v15[6];
  uint64_t v28 = v30;
  *(void *)unint64_t v27 = a3;
  *((void *)v27 + 1) = v28;
  v27[16] = v31 & 1;
  *(uint64_t *)((char *)v18 + v15[7]) = a1;
  *((unsigned char *)v18 + v15[8]) = v25;
  *(double *)((char *)v18 + v15[9]) = a8;
  *(double *)((char *)v18 + v15[10]) = a9;
  sub_188DCC((uint64_t)v18, (uint64_t)v20, type metadata accessor for DeterminateProgressViewStyle);
  sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
  sub_188E34(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
  swift_retain();
  sub_26BC00();
  sub_188E7C((uint64_t)v20, type metadata accessor for DeterminateProgressViewStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
}

uint64_t sub_186A8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = (int *)type metadata accessor for InDeterminateProgressViewStyle(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_4A98(&qword_2F2BE8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  char v14 = *((unsigned char *)a1 + 8);
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  sub_26A800();
  char v21 = 1;
  swift_retain();
  sub_26C340();
  uint64_t v17 = v23;
  *uint64_t v6 = v22;
  *((void *)v6 + 1) = v17;
  unsigned __int8 v18 = (uint64_t *)&v6[v3[5]];
  *unsigned __int8 v18 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  *(void *)&v6[v3[6]] = v13;
  v6[v3[7]] = v14;
  *(void *)&v6[v3[8]] = v15;
  *(void *)&v6[v3[9]] = v16;
  sub_188DCC((uint64_t)v6, (uint64_t)v8, type metadata accessor for InDeterminateProgressViewStyle);
  sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
  sub_188E34(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
  sub_26BC00();
  sub_188E7C((uint64_t)v8, type metadata accessor for InDeterminateProgressViewStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_186D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int v28 = a4;
  uint64_t v27 = a3;
  uint64_t v29 = a5;
  uint64_t v9 = (int *)type metadata accessor for DeterminateProgressViewStyle(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  char v14 = (char *)&v27 - v13;
  uint64_t v15 = sub_4A98(&qword_2F2BE8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unsigned __int8 v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)a1;
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 24);
  double v31 = a6;
  char v32 = 0;
  uint64_t v30 = 0x3FF0000000000000;
  sub_4F928();
  sub_26A7F0();
  uint64_t *v12 = swift_getKeyPath();
  sub_4A98(&qword_2EBC50);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)((char *)v12 + v9[5]);
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  char v24 = (char *)v12 + v9[6];
  uint64_t v25 = v27;
  *(void *)char v24 = a2;
  *((void *)v24 + 1) = v25;
  v24[16] = v28 & 1;
  *(uint64_t *)((char *)v12 + v9[7]) = v19;
  *((unsigned char *)v12 + v9[8]) = v20;
  *(uint64_t *)((char *)v12 + v9[9]) = v22;
  *(uint64_t *)((char *)v12 + v9[10]) = v21;
  sub_188DCC((uint64_t)v12, (uint64_t)v14, type metadata accessor for DeterminateProgressViewStyle);
  sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
  sub_188E34(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
  swift_retain();
  sub_26BC00();
  sub_188E7C((uint64_t)v14, type metadata accessor for DeterminateProgressViewStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t type metadata accessor for InDeterminateProgressViewStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2B08);
}

uint64_t sub_187050()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_18706C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_18708C()
{
  unint64_t result = qword_2F2A00;
  if (!qword_2F2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2A00);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DeterminateProgressViewStyle(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    v15[16] = v16[16];
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v17 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for DeterminateProgressViewStyle(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26AB70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for DeterminateProgressViewStyle(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26AB70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  return a1;
}

void *assignWithCopy for DeterminateProgressViewStyle(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC50);
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *(_OWORD *)v13;
  v12[16] = v13[16];
  *(_OWORD *)uint64_t v12 = v14;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

char *initializeWithTake for DeterminateProgressViewStyle(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26AB70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v17 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  return a1;
}

char *assignWithTake for DeterminateProgressViewStyle(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC50);
    uint64_t v6 = sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26AB70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EB3E8);
    uint64_t v11 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_release();
  uint64_t v17 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for DeterminateProgressViewStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_187B20);
}

uint64_t sub_187B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2ECD20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB3F8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for DeterminateProgressViewStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_187C50);
}

uint64_t sub_187C50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2ECD20);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2EB3F8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_187D68()
{
  sub_187E98(319, (unint64_t *)&qword_2ECD90, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_187E98(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_187E98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for InDeterminateProgressViewStyle(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    swift_retain();
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v13) = *(void *)((char *)a2 + v13);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_retain();
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for InDeterminateProgressViewStyle(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

uint64_t assignWithTake for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EB3E8);
    uint64_t v9 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26C700();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1885AC);
}

uint64_t sub_1885AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB3F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for InDeterminateProgressViewStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_188688);
}

uint64_t sub_188688(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EB3F8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_18874C()
{
  sub_187E98(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for ProgressViewModel()
{
  return swift_release();
}

uint64_t initializeWithCopy for ProgressViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProgressViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ProgressViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for ProgressViewModel()
{
  return &type metadata for ProgressViewModel;
}

unsigned char *storeEnumTagSinglePayload for SpinnerStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1889F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpinnerStyle()
{
  return &type metadata for SpinnerStyle;
}

uint64_t sub_188A2C()
{
  return sub_188CB0(&qword_2F2B50, &qword_2F29F0, (void (*)(void))sub_188A70);
}

unint64_t sub_188A70()
{
  unint64_t result = qword_2F2B58;
  if (!qword_2F2B58)
  {
    sub_7B0C(&qword_2F29E8);
    sub_7C18(&qword_2F2B60, &qword_2F29E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2B58);
  }
  return result;
}

uint64_t sub_188B10()
{
  return sub_188CB0(&qword_2F2B68, &qword_2F2B70, (void (*)(void))sub_188B54);
}

uint64_t sub_188B54()
{
  return sub_188CB0(&qword_2F2B78, &qword_2F2B80, (void (*)(void))sub_188B84);
}

uint64_t sub_188B84()
{
  return sub_188CB0(&qword_2F2B88, &qword_2F2B90, (void (*)(void))sub_188BB4);
}

unint64_t sub_188BB4()
{
  unint64_t result = qword_2F2B98;
  if (!qword_2F2B98)
  {
    sub_7B0C(&qword_2F2BA0);
    sub_188CB0(&qword_2F2BA8, &qword_2F2BB0, (void (*)(void))sub_188C80);
    sub_7C18(&qword_2EB600, &qword_2EB608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2B98);
  }
  return result;
}

uint64_t sub_188C80()
{
  return sub_188CB0(&qword_2F2BB8, &qword_2F2BC0, (void (*)(void))sub_188D2C);
}

uint64_t sub_188CB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_188D2C()
{
  unint64_t result = qword_2F2BC8;
  if (!qword_2F2BC8)
  {
    sub_7B0C(&qword_2F2BD0);
    sub_7C18(&qword_2F2BD8, &qword_2F2BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2BC8);
  }
  return result;
}

uint64_t sub_188DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_188E34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_188E7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_188EDC()
{
  uint64_t v1 = type metadata accessor for InDeterminateProgressViewStyle(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_189014()
{
  type metadata accessor for InDeterminateProgressViewStyle(0);

  return sub_186440();
}

uint64_t sub_189074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1890DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 200);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_82C24(v2);
  sub_82C24(v3);
  return a1;
}

uint64_t sub_189158(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 200);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_82C34(v2);
  sub_82C34(v3);
  return a1;
}

uint64_t sub_1891D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_18922C(uint64_t a1)
{
  return a1;
}

uint64_t YearInReviewErrorView.init(retry:localizedYear:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = (void *)((char *)a5 + *(int *)(type metadata accessor for YearInReviewErrorView() + 24));
  uint64_t *v10 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t type metadata accessor for YearInReviewErrorView()
{
  uint64_t result = qword_2F2D08;
  if (!qword_2F2D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t YearInReviewErrorView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v103 = a1;
  uint64_t v2 = sub_26A6E0();
  uint64_t v101 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  __chkstk_darwin(v2);
  uint64_t v100 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for ToolbarButtonStyle();
  uint64_t v4 = __chkstk_darwin(v99);
  unsigned int v97 = (uint64_t *)((char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v98 = (uint64_t)&v83 - v6;
  uint64_t v7 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F2C30);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F2C38);
  __chkstk_darwin(v16);
  unsigned __int8 v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_4A98(&qword_2F2C40);
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  char v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_4A98(&qword_2F2C48);
  __chkstk_darwin(v85);
  uint64_t v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_4A98(&qword_2F2C50);
  __chkstk_darwin(v88);
  char v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_4A98(&qword_2F2C58);
  __chkstk_darwin(v90);
  uint64_t v91 = (uint64_t)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2F2C60);
  uint64_t v94 = *(void *)(v26 - 8);
  uint64_t v95 = v26;
  __chkstk_darwin(v26);
  unsigned __int8 v93 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_4A98(&qword_2F2C68);
  __chkstk_darwin(v89);
  uint64_t v92 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = sub_26B1C0();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v29 = sub_4A98(&qword_2F2C70);
  sub_189D44(v1, &v15[*(int *)(v29 + 44)]);
  char v30 = sub_26B750();
  uint64_t v31 = *(int *)(type metadata accessor for YearInReviewErrorView() + 24);
  uint64_t v96 = v1;
  uint64_t v83 = v1 + v31;
  sub_41378((uint64_t)v12);
  sub_18CF94((uint64_t)v12, (uint64_t)v9, type metadata accessor for SizeConstants.Environment);
  sub_18BED8((uint64_t)v12, type metadata accessor for SizeConstants);
  uint64_t v86 = v9;
  sub_18BED8((uint64_t)v9, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_B678((uint64_t)v15, (uint64_t)v18, &qword_2F2C30);
  long long v40 = &v18[*(int *)(v16 + 36)];
  *long long v40 = v30;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_B6DC((uint64_t)v15, &qword_2F2C30);
  unsigned __int8 v41 = sub_26B720();
  unsigned __int8 v42 = sub_26B740();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v41) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v42) {
    sub_26B730();
  }
  sub_26C620();
  sub_18BC40();
  sub_26BF20();
  sub_B6DC((uint64_t)v18, &qword_2F2C38);
  uint64_t v43 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v45 = v44;
  uint64_t v46 = Color.init(hexString:)(0x363234333230, 0xE600000000000000);
  if (!v46) {
    uint64_t v46 = sub_26C180();
  }
  uint64_t v47 = v46;
  char v48 = sub_26B760();
  uint64_t v49 = v84;
  uint64_t v50 = v87;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v22, v20, v87);
  uint64_t v51 = &v22[*(int *)(v85 + 36)];
  *(void *)uint64_t v51 = v47;
  v51[8] = v48;
  *((void *)v51 + 2) = v43;
  *((void *)v51 + 3) = v45;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v50);
  uint64_t v52 = sub_26C620();
  uint64_t v54 = v53;
  uint64_t v56 = *(void *)(v96 + 16);
  uint64_t v55 = *(void *)(v96 + 24);
  swift_bridgeObjectRetain();
  char v57 = sub_26B750();
  sub_41378((uint64_t)v12);
  uint64_t v58 = (uint64_t)v86;
  sub_18CF94((uint64_t)v12, (uint64_t)v86, type metadata accessor for SizeConstants.Environment);
  sub_18BED8((uint64_t)v12, type metadata accessor for SizeConstants);
  sub_18BED8(v58, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  sub_B678((uint64_t)v22, (uint64_t)v24, &qword_2F2C48);
  long long v67 = &v24[*(int *)(v88 + 36)];
  *(void *)long long v67 = v56;
  *((void *)v67 + 1) = v55;
  v67[16] = v57;
  *((void *)v67 + 3) = v60;
  *((void *)v67 + 4) = v62;
  *((void *)v67 + 5) = v64;
  *((void *)v67 + 6) = v66;
  v67[56] = 0;
  *((void *)v67 + 8) = v52;
  *((void *)v67 + 9) = v54;
  sub_B6DC((uint64_t)v22, &qword_2F2C48);
  uint64_t v68 = v91;
  sub_B678((uint64_t)v24, v91, &qword_2F2C50);
  sub_B6DC((uint64_t)v24, &qword_2F2C50);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v70 = (uint64_t)v97;
  uint64_t *v97 = KeyPath;
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v71 = v98;
  sub_18D12C(v70, v98, (uint64_t (*)(void))type metadata accessor for ToolbarButtonStyle);
  sub_18BCE8();
  sub_18D328((unint64_t *)&qword_2F1988, (void (*)(uint64_t))type metadata accessor for ToolbarButtonStyle);
  long long v72 = v93;
  sub_26BC80();
  sub_18BED8(v71, (uint64_t (*)(void))type metadata accessor for ToolbarButtonStyle);
  sub_B6DC(v68, &qword_2F2C58);
  uint64_t v73 = swift_getKeyPath();
  long long v75 = v100;
  uint64_t v74 = v101;
  uint64_t v76 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, enum case for ColorScheme.dark(_:), v102);
  uint64_t v77 = (uint64_t)v92;
  long long v78 = (uint64_t *)&v92[*(int *)(v89 + 36)];
  uint64_t v79 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v78 + *(int *)(v79 + 28), v75, v76);
  *long long v78 = v73;
  uint64_t v81 = v94;
  uint64_t v80 = v95;
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v77, v72, v95);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v72, v80);
  return sub_19CC4(v77, v103, &qword_2F2C68);
}

uint64_t sub_189D44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v212 = a1;
  char v229 = a2;
  uint64_t v228 = sub_26ACC0();
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  uint64_t v226 = (char *)&v191 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_26B1B0();
  uint64_t v223 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  char v221 = (char *)&v191 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_26A6F0();
  uint64_t v215 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  char v213 = (char *)&v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for YearInReviewErrorView();
  uint64_t v202 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v203 = v6;
  uint64_t v204 = (uint64_t)&v191 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_4A98(&qword_2F2D50);
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  v205 = (char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_4A98(&qword_2F2D58);
  __chkstk_darwin(v210);
  uint64_t v211 = (char *)&v191 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_4A98(&qword_2F2D60);
  uint64_t v219 = *(void *)(v220 - 8);
  __chkstk_darwin(v220);
  char v217 = (char *)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_4A98(&qword_2F2D68);
  __chkstk_darwin(v207);
  char v218 = (char *)&v191 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_4A98(&qword_2F2D70);
  uint64_t v11 = __chkstk_darwin(v214);
  uint64_t v225 = (uint64_t)&v191 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v222 = (uint64_t)&v191 - v13;
  uint64_t v201 = sub_26C700();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  long long v199 = (char *)&v191 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_4A98(&qword_2EBFD0);
  __chkstk_darwin(v248);
  uint64_t v250 = (uint64_t)&v191 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_4A98(&qword_2F2D78);
  __chkstk_darwin(v249);
  uint64_t v251 = (uint64_t)&v191 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = sub_4A98(&qword_2F2D80);
  __chkstk_darwin(v265);
  uint64_t v266 = (uint64_t)&v191 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_4A98(&qword_2F2D88);
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  long long v195 = (char *)&v191 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_4A98(&qword_2F2D90);
  uint64_t v19 = __chkstk_darwin(v194);
  uint64_t v206 = (char *)&v191 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v276 = (uint64_t)&v191 - v21;
  uint64_t v269 = sub_4A98(&qword_2EB028);
  uint64_t v22 = __chkstk_darwin(v269);
  v260 = (char *)&v191 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v259 = (char *)&v191 - v24;
  uint64_t v25 = sub_26AB40();
  uint64_t v278 = *(void **)(v25 - 8);
  uint64_t v279 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v275 = (char *)&v191 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v274 = (char *)&v191 - v28;
  uint64_t v263 = sub_4A98(&qword_2EB030);
  uint64_t v29 = __chkstk_darwin(v263);
  v261 = (char *)&v191 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v262 = (uint64_t)&v191 - v31;
  uint64_t v32 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v32 - 8);
  v258 = (char *)&v191 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_26CFD0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v191 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = sub_26CF60();
  uint64_t v38 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  long long v40 = (char *)&v191 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_26A220();
  __chkstk_darwin(v41 - 8);
  uint64_t v43 = (char *)&v191 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_26A160();
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v191 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_4A98(&qword_2EBFC8);
  __chkstk_darwin(v270);
  uint64_t v49 = (char *)&v191 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = sub_4A98(&qword_2F2D98);
  v254 = *(void **)(v256 - 8);
  __chkstk_darwin(v256);
  v252 = (char *)&v191 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_4A98(&qword_2F2DA0);
  uint64_t v255 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  uint64_t v253 = (char *)&v191 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_4A98(&qword_2F2DA8);
  __chkstk_darwin(v271);
  uint64_t v272 = (char *)&v191 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4A98(&qword_2F2DB0);
  uint64_t v267 = *(void *)(v53 - 8);
  uint64_t v268 = v53;
  uint64_t v54 = __chkstk_darwin(v53);
  long long v198 = (char *)&v191 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v238 = (char *)&v191 - v57;
  __chkstk_darwin(v56);
  uint64_t v277 = (char *)&v191 - v58;
  sub_26CF50();
  uint64_t v59 = *(void (**)(void))(v35 + 104);
  unsigned int v236 = enum case for LocalizerLookupStrategy.default(_:);
  uint64_t v237 = v35 + 104;
  char v235 = (void (*)(char *, void, uint64_t))v59;
  v59(v37);
  sub_26A1D0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v35 + 8);
  v245 = v37;
  uint64_t v247 = v34;
  uint64_t v246 = v35 + 8;
  char v234 = v60;
  v60(v37, v34);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v242 = v40;
  uint64_t v62 = v40;
  uint64_t v63 = v270;
  uint64_t v244 = v38 + 8;
  char v233 = v61;
  v61(v62, v273);
  uint64_t v64 = v252;
  uint64_t v239 = v43;
  sub_26A170();
  uint64_t v65 = sub_26B8F0();
  uint64_t KeyPath = swift_getKeyPath();
  long long v67 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v232 = v45 + 16;
  uint64_t v231 = v67;
  v67(v49, v47, v44);
  uint64_t v68 = (uint64_t *)&v49[*(int *)(v63 + 36)];
  *uint64_t v68 = KeyPath;
  v68[1] = v65;
  long long v69 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v240 = v47;
  uint64_t v264 = v44;
  uint64_t v243 = v45 + 8;
  uint64_t v230 = v69;
  v69(v47, v44);
  unint64_t v70 = sub_9EE90();
  sub_26BF70();
  uint64_t v241 = v49;
  sub_B6DC((uint64_t)v49, &qword_2EBFC8);
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v71 = sub_26B820();
    uint64_t v72 = (uint64_t)v258;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v258, 1, 1, v71);
  }
  else
  {
    uint64_t v73 = enum case for Font.Design.serif (_:);
    uint64_t v74 = sub_26B820();
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v72 = (uint64_t)v258;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v258, v73, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  uint64_t v280 = v63;
  unint64_t v281 = v70;
  swift_getOpaqueTypeConformance2();
  uint64_t v76 = v253;
  uint64_t v77 = v256;
  sub_26BC30();
  sub_B6DC(v72, &qword_2EBFC0);
  ((void (*)(char *, uint64_t))v254[1])(v64, v77);
  uint64_t v78 = swift_getKeyPath();
  uint64_t v79 = v255;
  uint64_t v80 = v272;
  uint64_t v81 = v257;
  (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v272, v76, v257);
  long long v82 = &v80[*(int *)(v271 + 36)];
  *(void *)long long v82 = v78;
  *((void *)v82 + 1) = 3;
  v82[16] = 0;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v81);
  int v83 = enum case for DynamicTypeSize.small(_:);
  uint64_t v84 = v278;
  uint64_t v86 = v278 + 13;
  uint64_t v85 = (char *)v278[13];
  uint64_t v87 = v274;
  ((void (*)(char *, void, uint64_t))v85)(v274, enum case for DynamicTypeSize.small(_:), v279);
  uint64_t v88 = v275;
  LODWORD(v257) = enum case for DynamicTypeSize.accessibility1(_:);
  v258 = v85;
  ((void (*)(char *))v85)(v275);
  uint64_t v256 = sub_18D328(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D350();
  uint64_t v90 = v269;
  if (result)
  {
    uint64_t v91 = v88;
    uint64_t v92 = v259;
    unsigned __int8 v93 = v87;
    uint64_t v94 = &v259[*(int *)(v269 + 48)];
    LODWORD(v255) = v83;
    v254 = v86;
    uint64_t v95 = (void (*)(char *, char *, uint64_t))v84[4];
    v95(v259, v93, v279);
    v95(v94, v91, v279);
    uint64_t v96 = v260;
    unsigned int v97 = &v260[*(int *)(v90 + 48)];
    uint64_t v98 = (void (*)(char *, char *, uint64_t))v84[2];
    v98(v260, v92, v279);
    v252 = (char *)(v84 + 2);
    char v193 = v98;
    v98(v97, v94, v279);
    uint64_t v99 = (uint64_t)v261;
    v95(v261, v96, v279);
    uint64_t v100 = (void (*)(char *, uint64_t))v84[1];
    v100(v97, v279);
    uint64_t v101 = &v96[*(int *)(v90 + 48)];
    v95(v96, v92, v279);
    v95(v101, v94, v279);
    uint64_t v102 = v99 + *(int *)(v263 + 36);
    uint64_t v192 = v95;
    v95((char *)v102, v101, v279);
    uint64_t v253 = (char *)v100;
    uint64_t v278 = v84 + 1;
    v100(v96, v279);
    uint64_t v103 = v279;
    uint64_t v104 = v262;
    sub_19CC4(v99, v262, &qword_2EB030);
    sub_18CD34();
    uint64_t v105 = sub_7C18(&qword_2EB118, &qword_2EB030);
    long long v106 = v238;
    uint64_t v107 = (uint64_t)v272;
    sub_26BD90();
    sub_B6DC(v104, &qword_2EB030);
    sub_B6DC(v107, &qword_2F2DA8);
    (*(void (**)(char *, char *, uint64_t))(v267 + 32))(v277, v106, v268);
    long long v108 = v242;
    sub_26CF50();
    long long v109 = v245;
    uint64_t v110 = v247;
    v235(v245, v236, v247);
    sub_26A1D0();
    v234(v109, v110);
    v233(v108, v273);
    long long v111 = v240;
    sub_26A170();
    uint64_t v112 = sub_26B7E0();
    uint64_t v113 = swift_getKeyPath();
    uint64_t v114 = (uint64_t)v241;
    uint64_t v115 = v264;
    v231(v241, v111, v264);
    long long v116 = (uint64_t *)(v114 + *(int *)(v270 + 36));
    *long long v116 = v113;
    v116[1] = v112;
    v230(v111, v115);
    uint64_t v117 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v118 = swift_getKeyPath();
    uint64_t v119 = v250;
    sub_B678(v114, v250, &qword_2EBFC8);
    long long v120 = (uint64_t *)(v119 + *(int *)(v248 + 36));
    uint64_t *v120 = v118;
    v120[1] = v117;
    sub_B6DC(v114, &qword_2EBFC8);
    uint64_t v121 = swift_getKeyPath();
    uint64_t v122 = v251;
    sub_B678(v119, v251, &qword_2EBFD0);
    uint64_t v123 = v122 + *(int *)(v249 + 36);
    *(void *)uint64_t v123 = v121;
    *(unsigned char *)(v123 + 8) = 1;
    sub_B6DC(v119, &qword_2EBFD0);
    uint64_t v124 = swift_getKeyPath();
    uint64_t v125 = v266;
    sub_B678(v122, v266, &qword_2F2D78);
    uint64_t v126 = v125 + *(int *)(v265 + 36);
    *(void *)uint64_t v126 = v124;
    *(void *)(v126 + 8) = 3;
    *(unsigned char *)(v126 + 16) = 0;
    sub_B6DC(v122, &qword_2F2D78);
    unsigned __int8 v127 = v274;
    long long v128 = v258;
    ((void (*)(char *, void, uint64_t))v258)(v274, v255, v103);
    long long v129 = v275;
    ((void (*)(char *, void, uint64_t))v128)(v275, v257, v103);
    uint64_t result = sub_26D350();
    if (result)
    {
      long long v130 = v260;
      uint64_t v273 = v105;
      long long v131 = v192;
      uint64_t v132 = v269;
      long long v133 = v259;
      long long v134 = &v259[*(int *)(v269 + 48)];
      v192(v259, v127, v103);
      uint64_t v272 = v134;
      v131(v134, v129, v103);
      long long v135 = &v130[*(int *)(v132 + 48)];
      long long v136 = v193;
      v193(v130, v133, v103);
      v136(v135, v134, v103);
      long long v137 = v261;
      v131(v261, v130, v103);
      long long v138 = (void (*)(char *, uint64_t))v253;
      ((void (*)(char *, uint64_t))v253)(v135, v103);
      long long v139 = &v130[*(int *)(v132 + 48)];
      v131(v130, v133, v103);
      v131(v139, v272, v103);
      v131(&v137[*(int *)(v263 + 36)], v139, v103);
      v138(v130, v103);
      uint64_t v140 = (uint64_t)v137;
      uint64_t v141 = v262;
      sub_19CC4(v140, v262, &qword_2EB030);
      sub_18CE54();
      int v142 = v195;
      uint64_t v143 = v266;
      sub_26BD90();
      sub_B6DC(v141, &qword_2EB030);
      sub_B6DC(v143, &qword_2F2D80);
      uint64_t v144 = v200;
      uint64_t v145 = v199;
      uint64_t v146 = v201;
      (*(void (**)(char *, void, uint64_t))(v200 + 104))(v199, enum case for BlendMode.plusLighter(_:), v201);
      uint64_t v147 = (uint64_t)v206;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(&v206[*(int *)(v194 + 36)], v145, v146);
      uint64_t v148 = v196;
      uint64_t v149 = v197;
      (*(void (**)(uint64_t, char *, uint64_t))(v196 + 16))(v147, v142, v197);
      (*(void (**)(char *, uint64_t))(v144 + 8))(v145, v146);
      (*(void (**)(char *, uint64_t))(v148 + 8))(v142, v149);
      uint64_t v150 = v147;
      sub_19CC4(v147, v276, &qword_2F2D90);
      uint64_t v151 = v212;
      uint64_t v152 = v204;
      sub_18CF94(v212, v204, (uint64_t (*)(void))type metadata accessor for YearInReviewErrorView);
      unint64_t v153 = (*(unsigned __int8 *)(v202 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80);
      uint64_t v154 = swift_allocObject();
      uint64_t v155 = sub_18D12C(v152, v154 + v153, (uint64_t (*)(void))type metadata accessor for YearInReviewErrorView);
      __chkstk_darwin(v155);
      *(&v191 - 2) = v151;
      sub_18D328((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
      uint64_t v156 = v205;
      sub_26C3A0();
      uint64_t v157 = v215;
      uint64_t v158 = v213;
      uint64_t v159 = v216;
      (*(void (**)(char *, void, uint64_t))(v215 + 104))(v213, enum case for ControlSize.regular(_:), v216);
      uint64_t v160 = swift_getKeyPath();
      uint64_t v161 = (uint64_t)v211;
      uint64_t v162 = (uint64_t *)&v211[*(int *)(v210 + 36)];
      uint64_t v163 = sub_4A98(&qword_2F2DD0);
      (*(void (**)(char *, char *, uint64_t))(v157 + 16))((char *)v162 + *(int *)(v163 + 28), v158, v159);
      uint64_t *v162 = v160;
      uint64_t v164 = v208;
      uint64_t v165 = v209;
      (*(void (**)(uint64_t, char *, uint64_t))(v208 + 16))(v161, v156, v209);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v158, v159);
      (*(void (**)(char *, uint64_t))(v164 + 8))(v156, v165);
      uint64_t v166 = v221;
      sub_26B1A0();
      sub_18D264();
      sub_18D328(&qword_2F2DF0, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
      uint64_t v167 = v217;
      uint64_t v168 = v224;
      sub_26BC70();
      (*(void (**)(char *, uint64_t))(v223 + 8))(v166, v168);
      sub_B6DC(v161, &qword_2F2D58);
      uint64_t v169 = v226;
      sub_26ACB0();
      uint64_t v170 = swift_getKeyPath();
      uint64_t v171 = (uint64_t)v218;
      long long v172 = (uint64_t *)&v218[*(int *)(v207 + 36)];
      uint64_t v173 = sub_4A98(&qword_2EEF30);
      uint64_t v174 = v227;
      uint64_t v175 = v228;
      (*(void (**)(char *, char *, uint64_t))(v227 + 16))((char *)v172 + *(int *)(v173 + 28), v169, v228);
      uint64_t *v172 = v170;
      uint64_t v176 = v219;
      uint64_t v177 = v220;
      (*(void (**)(uint64_t, char *, uint64_t))(v219 + 16))(v171, v167, v220);
      (*(void (**)(char *, uint64_t))(v174 + 8))(v169, v175);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v167, v177);
      uint64_t v178 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
      uint64_t v179 = swift_getKeyPath();
      uint64_t v180 = v225;
      sub_B678(v171, v225, &qword_2F2D68);
      uint64_t v181 = (uint64_t *)(v180 + *(int *)(v214 + 36));
      *uint64_t v181 = v179;
      v181[1] = v178;
      sub_B6DC(v171, &qword_2F2D68);
      uint64_t v182 = v222;
      sub_19CC4(v180, v222, &qword_2F2D70);
      uint64_t v184 = v267;
      uint64_t v183 = v268;
      long long v185 = *(void (**)(char *, char *, uint64_t))(v267 + 16);
      uint64_t v186 = v198;
      v185(v198, v277, v268);
      sub_B678(v276, v150, &qword_2F2D90);
      sub_B678(v182, v180, &qword_2F2D70);
      long long v187 = v229;
      *char v229 = 0;
      *((unsigned char *)v187 + 8) = 1;
      uint64_t v188 = (int *)sub_4A98(&qword_2F2DF8);
      v185((char *)v187 + v188[12], v186, v183);
      sub_B678(v150, (uint64_t)v187 + v188[16], &qword_2F2D90);
      sub_B678(v180, (uint64_t)v187 + v188[20], &qword_2F2D70);
      uint64_t v189 = (char *)v187 + v188[24];
      *(void *)uint64_t v189 = 0;
      v189[8] = 1;
      sub_B6DC(v182, &qword_2F2D70);
      sub_B6DC(v276, &qword_2F2D90);
      uint64_t v190 = *(void (**)(char *, uint64_t))(v184 + 8);
      v190(v277, v183);
      sub_B6DC(v180, &qword_2F2D70);
      sub_B6DC(v150, &qword_2F2D90);
      return ((uint64_t (*)(char *, uint64_t))v190)(v186, v183);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_18BC40()
{
  unint64_t result = qword_2F2C78;
  if (!qword_2F2C78)
  {
    sub_7B0C(&qword_2F2C38);
    sub_7C18(&qword_2F2C80, &qword_2F2C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2C78);
  }
  return result;
}

unint64_t sub_18BCE8()
{
  unint64_t result = qword_2F2C88;
  if (!qword_2F2C88)
  {
    sub_7B0C(&qword_2F2C58);
    sub_18BD64();
    sub_1360C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2C88);
  }
  return result;
}

unint64_t sub_18BD64()
{
  unint64_t result = qword_2F2C90;
  if (!qword_2F2C90)
  {
    sub_7B0C(&qword_2F2C50);
    sub_18BE04();
    sub_7C18(&qword_2F2CA0, &qword_2F2CA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2C90);
  }
  return result;
}

unint64_t sub_18BE04()
{
  unint64_t result = qword_2F2C98;
  if (!qword_2F2C98)
  {
    sub_7B0C(&qword_2F2C48);
    sub_7B0C(&qword_2F2C38);
    sub_18BC40();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F1978, &qword_2F1980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2C98);
  }
  return result;
}

uint64_t sub_18BED8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18BF38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_18BF54()
{
  uint64_t v0 = sub_26CFD0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26CF60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26A220();
  __chkstk_darwin(v8 - 8);
  sub_26CF50();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizerLookupStrategy.default(_:), v0);
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_26A170();
}

void *initializeBufferWithCopyOfBuffer for YearInReviewErrorView(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    uint64_t v7 = a2[2];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v8 = a2[3];
    a1[2] = v7;
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    uint64_t v11 = (_WORD *)((char *)a2 + v9);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v10 = *v11;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
      uint64_t v17 = v12[8];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      v18[2] = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for YearInReviewErrorView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for YearInReviewErrorView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (_WORD *)((char *)a1 + v6);
  uint64_t v8 = (_WORD *)((char *)a2 + v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v7 = *v8;
    uint64_t v9 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    uint64_t v13 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
    uint64_t v14 = v9[8];
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)v8 + v14;
    v15[2] = v16[2];
    *(_WORD *)uint64_t v15 = *(_WORD *)v16;
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for YearInReviewErrorView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v11 = v10[6];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      uint64_t v15 = v10[8];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[2];
      *(_WORD *)uint64_t v16 = *(_WORD *)v17;
      v16[2] = v18;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for YearInReviewErrorView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (_WORD *)((char *)a1 + v5);
  uint64_t v7 = (_WORD *)((char *)a2 + v5);
  uint64_t v8 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v9 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = (char *)v6 + v10;
    uint64_t v12 = (char *)v7 + v10;
    uint64_t v13 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(void *)((char *)v6 + v9[7]) = *(void *)((char *)v7 + v9[7]);
    uint64_t v14 = v9[8];
    uint64_t v15 = (char *)v6 + v14;
    uint64_t v16 = (char *)v7 + v14;
    v15[2] = v16[2];
    *(_WORD *)uint64_t v15 = *(_WORD *)v16;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for YearInReviewErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (_WORD *)(a1 + v7);
    uint64_t v9 = (_WORD *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EB708);
    uint64_t v10 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)((char *)v8 + v11[7]) = *(void *)((char *)v9 + v11[7]);
      uint64_t v16 = v11[8];
      uint64_t v17 = (char *)v8 + v16;
      char v18 = (char *)v9 + v16;
      v17[2] = v18[2];
      *(_WORD *)uint64_t v17 = *(_WORD *)v18;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18C914);
}

uint64_t sub_18C914(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EB718);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for YearInReviewErrorView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18C9DC);
}

void *sub_18C9DC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EB718);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_18CA88()
{
  sub_3EAB0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_18CB30()
{
  unint64_t result = qword_2F2D48;
  if (!qword_2F2D48)
  {
    sub_7B0C(&qword_2F2C68);
    sub_7B0C(&qword_2F2C58);
    type metadata accessor for ToolbarButtonStyle();
    sub_18BCE8();
    sub_18D328((unint64_t *)&qword_2F1988, (void (*)(uint64_t))type metadata accessor for ToolbarButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2D48);
  }
  return result;
}

uint64_t sub_18CC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

unint64_t sub_18CD34()
{
  unint64_t result = qword_2F2DB8;
  if (!qword_2F2DB8)
  {
    sub_7B0C(&qword_2F2DA8);
    sub_7B0C(&qword_2F2D98);
    sub_7B0C(&qword_2EBFC8);
    sub_9EE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2DB8);
  }
  return result;
}

unint64_t sub_18CE54()
{
  unint64_t result = qword_2F2DC0;
  if (!qword_2F2DC0)
  {
    sub_7B0C(&qword_2F2D80);
    sub_18CEF4();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2DC0);
  }
  return result;
}

unint64_t sub_18CEF4()
{
  unint64_t result = qword_2F2DC8;
  if (!qword_2F2DC8)
  {
    sub_7B0C(&qword_2F2D78);
    sub_9EDF0();
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2DC8);
  }
  return result;
}

uint64_t sub_18CF94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_18CFFC()
{
  uint64_t v1 = (int *)(type metadata accessor for YearInReviewErrorView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_18D12C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18D194()
{
  uint64_t v1 = *(void *)(type metadata accessor for YearInReviewErrorView() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))))();
}

uint64_t sub_18D1F8()
{
  return sub_18BF54();
}

uint64_t sub_18D200()
{
  return sub_26ADF0();
}

uint64_t sub_18D224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18CC5C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_18D264()
{
  unint64_t result = qword_2F2DD8;
  if (!qword_2F2DD8)
  {
    sub_7B0C(&qword_2F2D58);
    sub_7C18(&qword_2F2DE0, &qword_2F2D50);
    sub_7C18(&qword_2F2DE8, &qword_2F2DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2DD8);
  }
  return result;
}

uint64_t sub_18D328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18D370()
{
  return sub_26AF30();
}

uint64_t sub_18D394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18CC5C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_18D3D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26B070();
  *a1 = result;
  return result;
}

uint64_t sub_18D400()
{
  return sub_26B080();
}

uint64_t NothingToReviewFrameViewModel.init(localizedYear:exposureData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v6 = sub_269BE0();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t type metadata accessor for NothingToReviewFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2E80);
}

uint64_t sub_18D4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v85 = sub_269920();
  uint64_t v1 = *(void *)(v85 - 8);
  uint64_t v2 = __chkstk_darwin(v85);
  uint64_t v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v64 - v5;
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v64 - v12;
  sub_26D370();
  sub_2698C0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v83 = v8 + 16;
  uint64_t v84 = v14;
  v14(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v86 = ObjCClassFromMetadata;
  uint64_t v16 = self;
  id v82 = v16;
  id v17 = [v16 bundleForClass:ObjCClassFromMetadata];
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v87 = v1 + 16;
  uint64_t v65 = v4;
  uint64_t v18 = v85;
  v80(v4, v6, v85);
  uint64_t v19 = sub_26D460();
  uint64_t v72 = v20;
  uint64_t v73 = v19;
  uint64_t v79 = *(void (**)(char *, uint64_t))(v1 + 8);
  v79(v6, v18);
  uint64_t v81 = v1 + 8;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v13, v7);
  uint64_t v76 = v21;
  uint64_t v77 = v8 + 8;
  sub_26D370();
  sub_2698C0();
  uint64_t v66 = v11;
  v84(v11, v13, v7);
  id v22 = [v16 bundleForClass:v86];
  uint64_t v23 = v65;
  uint64_t v24 = v85;
  v80(v65, v6, v85);
  uint64_t v25 = v23;
  uint64_t v26 = sub_26D460();
  uint64_t v69 = v27;
  uint64_t v70 = v26;
  uint64_t v28 = v79;
  v79(v6, v24);
  uint64_t v75 = v7;
  v21(v13, v7);
  sub_4A98(&qword_2F28F8);
  uint64_t v29 = type metadata accessor for BulletPointStack.Bullet(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v78 = v29 - 8;
  uint64_t v67 = *(void *)(v30 + 72);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  uint64_t v68 = v32;
  *(_OWORD *)(v32 + 16) = xmmword_270BF0;
  uint64_t v33 = (void *)(v32 + v31);
  sub_26D370();
  sub_2698C0();
  uint64_t v34 = v66;
  v84(v66, v13, v7);
  id v35 = [v82 bundleForClass:v86];
  uint64_t v36 = v25;
  uint64_t v37 = v25;
  uint64_t v38 = v85;
  uint64_t v39 = v80;
  v80(v37, v6, v85);
  long long v40 = v36;
  uint64_t v41 = sub_26D460();
  uint64_t v43 = v42;
  v28(v6, v38);
  uint64_t v44 = v75;
  v76(v13, v75);
  uint64_t v45 = sub_18DC90(v71);
  *uint64_t v33 = 0xD000000000000010;
  v33[1] = 0x800000000028A900;
  v33[2] = v41;
  v33[3] = v43;
  v33[4] = v45;
  v33[5] = v46;
  sub_269830();
  uint64_t v47 = (void *)((char *)v33 + v67);
  sub_26D370();
  sub_2698C0();
  uint64_t v48 = v34;
  v84(v34, v13, v44);
  id v49 = [v82 bundleForClass:v86];
  uint64_t v50 = v40;
  uint64_t v51 = v40;
  uint64_t v52 = v85;
  v39(v51, v6, v85);
  uint64_t v71 = (uint64_t *)sub_26D460();
  uint64_t v67 = v53;
  v79(v6, v52);
  uint64_t v54 = v76;
  v76(v13, v44);
  sub_26D370();
  sub_2698C0();
  v84(v48, v13, v44);
  id v55 = [v82 bundleForClass:v86];
  v80(v50, v6, v52);
  uint64_t v56 = sub_26D460();
  uint64_t v58 = v57;
  v79(v6, v52);
  v54(v13, v75);
  *uint64_t v47 = 0x7261646E656C6163;
  v47[1] = 0xE800000000000000;
  uint64_t v59 = v67;
  long long v47[2] = v71;
  v47[3] = v59;
  v47[4] = v56;
  v47[5] = v58;
  uint64_t result = sub_269830();
  uint64_t v61 = v74;
  uint64_t v62 = v72;
  uint64_t *v74 = v73;
  v61[1] = v62;
  uint64_t v63 = v69;
  v61[2] = v70;
  v61[3] = v63;
  v61[4] = v68;
  return result;
}

uint64_t sub_18DC90(uint64_t *a1)
{
  uint64_t v2 = sub_269920();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v23[-v7];
  uint64_t v9 = sub_26D3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v23[-v14];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v15, v9);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
  sub_4A98(&qword_2EA308);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_26F990;
  uint64_t v20 = *a1;
  uint64_t v19 = a1[1];
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_720C8();
  *(void *)(v18 + 32) = v20;
  *(void *)(v18 + 40) = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_26D400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t NothingToReviewFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18DF90(v1, a1);
}

uint64_t sub_18DF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageBackground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NothingToReviewFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NothingToReviewFrame(0) + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_18E114(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_18E114(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t type metadata accessor for NothingToReviewFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2F2F10);
}

uint64_t sub_18E114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NothingToReviewFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = Color.init(hexString:)(0x363234333230, 0xE600000000000000);
  if (!v4) {
    uint64_t v4 = sub_26C180();
  }
  uint64_t v5 = v4;
  uint64_t v6 = (char *)a2 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  *a2 = v5;
  uint64_t v7 = enum case for ColorScheme.dark(_:);
  uint64_t v8 = sub_26A6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = type metadata accessor for NothingToReviewFrame(0);
  return sub_1903C4(a1, (uint64_t)a2 + *(int *)(v10 + 20), type metadata accessor for NothingToReviewFrameViewModel);
}

uint64_t NothingToReviewFrame.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F2E00);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_26B1C0();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v11 = sub_4A98(&qword_2F2E08);
  sub_18E474(v2, &v10[*(int *)(v11 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2F2E10) + 36));
  uint64_t v14 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v13 + *(int *)(v14 + 28), v7, v4);
  uint64_t *v13 = KeyPath;
  sub_B678((uint64_t)v10, a1, &qword_2F2E00);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_B6DC((uint64_t)v10, &qword_2F2E00);
}

uint64_t sub_18E474@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BulletPointStack(0);
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_4A98(&qword_2EE970);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  id v17 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NothingToReviewFrame(0) + 20));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  swift_bridgeObjectRetain();
  sub_18D4CC((uint64_t *)v29);
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EB3D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (char *)v8 + v5[7];
  *(void *)uint64_t v20 = swift_getKeyPath();
  v20[8] = 0;
  uint64_t v21 = (uint64_t *)((char *)v8 + v5[8]);
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  id v22 = (char *)v8 + v5[9];
  long long v23 = v29[1];
  *(_OWORD *)id v22 = v29[0];
  *((_OWORD *)v22 + 1) = v23;
  *((void *)v22 + 4) = v30;
  sub_1903C4((uint64_t)v8, (uint64_t)v10, type metadata accessor for BulletPointStack);
  uint64_t v24 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B06E0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v14, 0.0, 1, INFINITY, 0, v24, v25);
  sub_19042C((uint64_t)v10, type metadata accessor for BulletPointStack);
  sub_19048C((uint64_t)v14, (uint64_t)v16);
  sub_B678((uint64_t)v16, (uint64_t)v14, &qword_2EE970);
  *a2 = v19;
  a2[1] = v18;
  uint64_t v26 = sub_4A98(&qword_2F2F58);
  sub_B678((uint64_t)v14, (uint64_t)a2 + *(int *)(v26 + 48), &qword_2EE970);
  swift_bridgeObjectRetain();
  sub_B6DC((uint64_t)v16, &qword_2EE970);
  sub_B6DC((uint64_t)v14, &qword_2EE970);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18E750(uint64_t a1)
{
  uint64_t result = sub_18E114(&qword_2F2E18, (void (*)(uint64_t))type metadata accessor for NothingToReviewFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_18E7A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_18E114(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_18E114(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t sub_18E8A0(uint64_t a1)
{
  uint64_t result = sub_18E114(&qword_2F2E20, (void (*)(uint64_t))type metadata accessor for NothingToReviewFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_18E8F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for NothingToReviewFrameViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_269BE0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for NothingToReviewFrameViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_269BE0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for NothingToReviewFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_269BE0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for NothingToReviewFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for NothingToReviewFrameViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for NothingToReviewFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NothingToReviewFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18ECC4);
}

uint64_t sub_18ECC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269BE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NothingToReviewFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18ED88);
}

uint64_t sub_18ED88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269BE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_18EE30()
{
  uint64_t result = sub_269BE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NothingToReviewFrame(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v8 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      }
      else
      {
        long long v21 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v21;
        (**(void (***)(uint64_t, uint64_t *))(v21 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(void *)(a1 + 104) = a2[13];
      uint64_t v22 = a2[15];
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v22;
        uint64_t v23 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v23;
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        uint64_t v24 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 128) = v25;
        *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
        *(void *)(a1 + 160) = a2[20];
      }
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
      uint64_t v15 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v16 = (void *)(a1 + v15);
      id v17 = (char *)a2 + v15;
      uint64_t v18 = sub_26A6E0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_4A98(&qword_2EA940);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (uint64_t)a2 + v26;
    uint64_t v29 = *(uint64_t *)((char *)a2 + v26);
    uint64_t v30 = *(void *)(v28 + 8);
    *uint64_t v27 = v29;
    v27[1] = v30;
    uint64_t v31 = *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = v28 + v31;
    uint64_t v34 = sub_269BE0();
    id v35 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
  }
  return a1;
}

uint64_t destroy for NothingToReviewFrame(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v12 = sub_269BE0();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for NothingToReviewFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v8;
    swift_bridgeObjectRetain();
    uint64_t v9 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      long long v19 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v19;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    uint64_t v20 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v20;
      uint64_t v21 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v21;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v22 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v23;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    uint64_t v13 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    uint64_t v16 = sub_26A6E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EA940);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = *(int *)(a3 + 20);
  long long v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a2 + v24);
  uint64_t v28 = *(void *)(v26 + 8);
  *long long v25 = v27;
  v25[1] = v28;
  uint64_t v29 = *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v30 = (char *)v25 + v29;
  uint64_t v31 = v26 + v29;
  uint64_t v32 = sub_269BE0();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  return a1;
}

uint64_t assignWithCopy for NothingToReviewFrame(uint64_t a1, long long *a2, uint64_t a3)
{
  if ((long long *)a1 != a2)
  {
    sub_19042C(a1, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = (uint64_t)a2 + v10;
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        long long v9 = a2[2];
        *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        *(_OWORD *)a1 = v7;
      }
      else
      {
        uint64_t v20 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v20 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = a2[4];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      uint64_t v21 = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v22 = a2[7];
        long long v23 = a2[8];
        long long v24 = a2[9];
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(_OWORD *)(a1 + 128) = v23;
        *(_OWORD *)(a1 + 144) = v24;
        *(_OWORD *)(a1 + 112) = v22;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_4A98(&qword_2EA940);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t)a2 + v25;
  *uint64_t v26 = *(void *)((char *)a2 + v25);
  v26[1] = *(void *)((char *)a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  uint64_t v29 = (char *)v26 + v28;
  uint64_t v30 = v27 + v28;
  uint64_t v31 = sub_269BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

_OWORD *initializeWithTake for NothingToReviewFrame(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A6E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EA940);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_9:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v21 = *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  long long v22 = &v19[v21];
  long long v23 = &v20[v21];
  uint64_t v24 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_OWORD *assignWithTake for NothingToReviewFrame(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_19042C((uint64_t)a1, type metadata accessor for PageBackground);
    uint64_t v6 = type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      long long v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26A6E0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_4A98(&qword_2EA940);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_10:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a2 + v18 + 8);
  *uint64_t v19 = *(void *)((char *)a2 + v18);
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(type metadata accessor for NothingToReviewFrameViewModel(0) + 20);
  long long v23 = (char *)v19 + v22;
  uint64_t v24 = &v20[v22];
  uint64_t v25 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for NothingToReviewFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19000C);
}

uint64_t sub_19000C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for NothingToReviewFrameViewModel(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for NothingToReviewFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_190118);
}

uint64_t sub_190118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PageBackground(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for NothingToReviewFrameViewModel(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_19021C()
{
  uint64_t result = type metadata accessor for PageBackground(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NothingToReviewFrameViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1902E8()
{
  unint64_t result = qword_2F2F48;
  if (!qword_2F2F48)
  {
    sub_7B0C(&qword_2F2E10);
    sub_7C18(&qword_2F2F50, &qword_2F2E00);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2F48);
  }
  return result;
}

uint64_t sub_1903C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_19042C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_19048C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EE970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1904F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v1 = type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v59 = v1 - 8;
  uint64_t v63 = v2;
  __chkstk_darwin(v1 - 8);
  uint64_t v64 = v3;
  uint64_t v65 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_26AC50();
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B520();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EBEC0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F3120);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4A98(&qword_2F3128);
  __chkstk_darwin(v53);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_4A98(&qword_2F3130);
  __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4A98(&qword_2F3138);
  __chkstk_darwin(v57);
  uint64_t v58 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B530();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v7);
  uint64_t v23 = *(int *)(v12 + 44);
  uint64_t v24 = v56;
  uint64_t v25 = &v14[v23];
  long long v26 = v68;
  *(_OWORD *)uint64_t v25 = v67;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v69;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v27 = sub_190B74();
  LOBYTE(v10) = sub_26B760();
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2EBEC0);
  uint64_t v28 = *(int *)(v16 + 44);
  uint64_t v29 = (uint64_t)v54;
  uint64_t v30 = &v18[v28];
  *(void *)uint64_t v30 = v27;
  v30[8] = (char)v10;
  sub_B6DC((uint64_t)v14, &qword_2EBEC0);
  LOBYTE(v10) = sub_26B540();
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v29);
  if (v10) {
    uint64_t v31 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  else {
    uint64_t v31 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  }
  uint64_t v32 = v31;
  sub_1923A8(v29, type metadata accessor for ColorConstants);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v18, (uint64_t)v20, &qword_2F3120);
  uint64_t v34 = (uint64_t *)&v20[*(int *)(v53 + 36)];
  *uint64_t v34 = KeyPath;
  v34[1] = v32;
  sub_B6DC((uint64_t)v18, &qword_2F3120);
  id v35 = v62;
  uint64_t v36 = &v62[*(int *)(v61 + 20)];
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #6.0 }
  *id v35 = _Q0;
  uint64_t v44 = (uint64_t)v60;
  uint64_t v45 = (uint64_t)&v60[*(int *)(v55 + 36)];
  sub_193D5C((uint64_t)v35, v45, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v45 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v20, v44, &qword_2F3128);
  sub_1923A8((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v20, &qword_2F3128);
  uint64_t v46 = v65;
  sub_193D5C(v24, v65, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
  unint64_t v47 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v48 = swift_allocObject();
  sub_192340(v46, v48 + v47, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
  uint64_t v49 = v58;
  sub_B678(v44, v58, &qword_2F3130);
  uint64_t v50 = (uint64_t (**)(uint64_t))(v49 + *(int *)(v57 + 36));
  *uint64_t v50 = sub_194084;
  v50[1] = (uint64_t (*)(uint64_t))v48;
  sub_B6DC(v44, &qword_2F3130);
  return sub_19CC4(v49, v66, &qword_2F3138);
}

uint64_t sub_190B74()
{
  uint64_t v1 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v19[-v9];
  uint64_t v11 = *(void *)(v0 + 8);
  v19[8] = *(unsigned char *)v0;
  uint64_t v20 = v11;
  sub_4A98(&qword_2F2C08);
  sub_26C350();
  if (v21 != 1) {
    return sub_26C170();
  }
  type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(0);
  sub_40FB4((uint64_t)v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v8, enum case for ColorScheme.dark(_:), v4);
  char v12 = sub_26A6D0();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v3);
  uint64_t v14 = self;
  if (v12) {
    id v15 = [v14 tertiarySystemFillColor];
  }
  else {
    id v15 = [v14 quaternarySystemFillColor];
  }
  id v17 = v15;
  uint64_t v16 = sub_26C230();
  sub_1923A8((uint64_t)v3, type metadata accessor for ColorConstants);
  return v16;
}

uint64_t sub_190DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v64 = type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle(0);
  uint64_t v67 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v68 = v1;
  uint64_t v69 = (uint64_t)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_26AC50();
  __chkstk_darwin(v65);
  uint64_t v66 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v63 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_26C5F0();
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B520();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBEC0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_4A98(&qword_2F3100);
  __chkstk_darwin(v59);
  id v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_4A98(&qword_2F3108);
  __chkstk_darwin(v61);
  id v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_4A98(&qword_2F3110);
  __chkstk_darwin(v62);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4A98(&qword_2F3118);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B530();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  uint64_t v21 = *(int *)(v11 + 44);
  uint64_t v22 = v60;
  uint64_t v23 = &v13[v21];
  long long v24 = v74;
  *(_OWORD *)uint64_t v23 = v73;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v75;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v25 = *(void *)(v22 + 8);
  LOBYTE(v70) = *(unsigned char *)v22;
  uint64_t v71 = v25;
  sub_4A98(&qword_2F2C08);
  sub_26C350();
  if (v72 == 1)
  {
    char v26 = sub_26B540();
    uint64_t v27 = (uint64_t)v56;
    if (v26) {
      sub_26C5C0();
    }
    else {
      sub_26C5D0();
    }
    uint64_t v28 = sub_26A8E0();
  }
  else
  {
    uint64_t v70 = sub_26C170();
    uint64_t v28 = sub_26A8E0();
    uint64_t v27 = (uint64_t)v56;
  }
  char v29 = sub_26B760();
  sub_B678((uint64_t)v13, (uint64_t)v15, &qword_2EBEC0);
  uint64_t v30 = &v15[*(int *)(v59 + 36)];
  *(void *)uint64_t v30 = v28;
  v30[8] = v29;
  sub_B6DC((uint64_t)v13, &qword_2EBEC0);
  char v31 = sub_26B540();
  uint64_t v32 = v63;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v63);
  uint64_t v33 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  if ((v31 & 1) == 0)
  {
    uint64_t v34 = sub_26C1C0();
    swift_release();
    uint64_t v33 = v34;
  }
  uint64_t v35 = v58;
  uint64_t v36 = v57;
  sub_1923A8(v32, type metadata accessor for ColorConstants);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v15, (uint64_t)v17, &qword_2F3100);
  uint64_t v38 = (uint64_t *)&v17[*(int *)(v61 + 36)];
  *uint64_t v38 = KeyPath;
  v38[1] = v33;
  sub_B6DC((uint64_t)v15, &qword_2F3100);
  uint64_t v39 = v66;
  long long v40 = &v66[*(int *)(v65 + 20)];
  uint64_t v41 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v42 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v39 = _Q0;
  uint64_t v48 = (uint64_t)&v19[*(int *)(v62 + 36)];
  sub_193D5C((uint64_t)v39, v48, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v48 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v17, (uint64_t)v19, &qword_2F3108);
  sub_1923A8((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v17, &qword_2F3108);
  uint64_t v49 = v69;
  sub_193D5C(v22, v69, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
  unint64_t v50 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  uint64_t v51 = swift_allocObject();
  sub_192340(v49, v51 + v50, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
  sub_B678((uint64_t)v19, v27, &qword_2F3110);
  uint64_t v52 = (uint64_t (**)(uint64_t))(v27 + *(int *)(v36 + 36));
  *uint64_t v52 = sub_193EDC;
  v52[1] = (uint64_t (*)(uint64_t))v51;
  sub_B6DC((uint64_t)v19, &qword_2F3110);
  return sub_19CC4(v27, v35, &qword_2F3118);
}

uint64_t sub_191578()
{
  return sub_26C360();
}

void ShelfGridPaddleButtonView.context.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t ShelfGridPaddleButtonView.action.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  return v1;
}

unsigned char *ShelfGridPaddleButtonView.init(direction:context:action:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  *(unsigned char *)a5 = *result;
  *(unsigned char *)(a5 + 1) = v5;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = a4;
  return result;
}

uint64_t sub_191624@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26B120();
  sub_1916D4(a1 & 1, (uint64_t)&v14);
  long long v13 = v14;
  uint64_t v5 = v15;
  char v6 = v16;
  char v7 = sub_26B750();
  uint64_t result = sub_26A640();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v13;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v9;
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v11;
  *(void *)(a2 + 88) = v12;
  *(unsigned char *)(a2 + 96) = 0;
  return result;
}

double sub_1916D4@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = sub_26C250();
    uint64_t v12 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = sub_26B8D0();
    sub_B6DC((uint64_t)v6, &qword_2EBFC0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v18 = v11;
    uint64_t v19 = KeyPath;
    uint64_t v20 = v13;
    char v21 = 1;
  }
  else
  {
    uint64_t v7 = sub_26C250();
    uint64_t v8 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = sub_26B8D0();
    sub_B6DC((uint64_t)v6, &qword_2EBFC0);
    uint64_t v10 = swift_getKeyPath();
    uint64_t v18 = v7;
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    char v21 = 0;
  }
  sub_4A98(&qword_2EB0C0);
  sub_2E38C();
  sub_26B2F0();
  double result = *(double *)&v22;
  uint64_t v16 = v23;
  char v17 = v24;
  *(_OWORD *)a2 = v22;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v17;
  return result;
}

uint64_t ShelfGridPaddleButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v60 = type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle(0);
  uint64_t v2 = __chkstk_darwin(v60);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  char v6 = (char *)&v51 - v5;
  uint64_t v61 = sub_4A98(&qword_2F2F60);
  uint64_t v53 = *(void *)(v61 - 8);
  uint64_t v7 = __chkstk_darwin(v61);
  uint64_t v51 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v51 - v9;
  uint64_t v55 = sub_4A98(&qword_2F2F68);
  __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(0);
  uint64_t v11 = __chkstk_darwin(v56);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v57 = sub_4A98(&qword_2F2F70);
  uint64_t v54 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  char v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_4A98(&qword_2F2F78);
  uint64_t v18 = __chkstk_darwin(v58);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v51 - v22;
  char v24 = *v1;
  char v25 = v1[1];
  uint64_t v27 = *((void *)v1 + 1);
  uint64_t v26 = *((void *)v1 + 2);
  char v63 = v24;
  if (v25)
  {
    char v64 = 1;
    uint64_t v65 = v27;
    uint64_t v66 = v26;
    swift_retain();
    sub_4A98(&qword_2F2F80);
    sub_19222C();
    sub_26C3A0();
    char v71 = 0;
    sub_26C340();
    uint64_t v28 = v68;
    *uint64_t v4 = v67;
    *((void *)v4 + 1) = v28;
    uint64_t v29 = v60;
    uint64_t v30 = (uint64_t *)&v4[*(int *)(v60 + 20)];
    *uint64_t v30 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    sub_192340((uint64_t)v4, (uint64_t)v6, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
    uint64_t v31 = sub_7C18(&qword_2F2FA0, &qword_2F2F70);
    uint64_t v32 = sub_1922D0(&qword_2F2FA8, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
    uint64_t v33 = v51;
    uint64_t v34 = v57;
    sub_26BC80();
    sub_1923A8((uint64_t)v6, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v34);
    uint64_t v35 = v53;
    uint64_t v36 = v52;
    uint64_t v37 = v33;
    uint64_t v38 = v61;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v37, v61);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v59, v36, v38);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = sub_1922D0(&qword_2F2FB0, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
    uint64_t v67 = v34;
    uint64_t v68 = v56;
    uint64_t v69 = v31;
    uint64_t v70 = v39;
    swift_getOpaqueTypeConformance2();
    uint64_t v67 = v34;
    uint64_t v68 = v29;
    uint64_t v69 = v31;
    uint64_t v70 = v32;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v38);
  }
  else
  {
    char v64 = 0;
    uint64_t v65 = v27;
    uint64_t v66 = v26;
    uint64_t v53 = v21;
    swift_retain();
    sub_4A98(&qword_2F2F80);
    sub_19222C();
    sub_26C3A0();
    char v71 = 0;
    sub_26C340();
    uint64_t v41 = v68;
    char *v13 = v67;
    *((void *)v13 + 1) = v41;
    uint64_t v42 = v56;
    uint64_t v43 = (uint64_t *)&v13[*(int *)(v56 + 20)];
    uint64_t *v43 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = (uint64_t *)&v13[*(int *)(v42 + 24)];
    *uint64_t v44 = swift_getKeyPath();
    sub_4A98(&qword_2EA970);
    swift_storeEnumTagMultiPayload();
    sub_192340((uint64_t)v13, (uint64_t)v15, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
    uint64_t v45 = sub_7C18(&qword_2F2FA0, &qword_2F2F70);
    uint64_t v46 = sub_1922D0(&qword_2F2FB0, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
    uint64_t v47 = v57;
    sub_26BC80();
    sub_1923A8((uint64_t)v15, type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v47);
    uint64_t v48 = v53;
    uint64_t v49 = v58;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v23, v20, v58);
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v59, v23, v49);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v47;
    uint64_t v68 = v42;
    uint64_t v69 = v45;
    uint64_t v70 = v46;
    swift_getOpaqueTypeConformance2();
    uint64_t v50 = sub_1922D0(&qword_2F2FA8, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
    uint64_t v67 = v47;
    uint64_t v68 = v60;
    uint64_t v69 = v45;
    uint64_t v70 = v50;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v49);
  }
}

uint64_t type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2F30C8);
}

uint64_t type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2F3030);
}

unint64_t sub_19222C()
{
  unint64_t result = qword_2F2F88;
  if (!qword_2F2F88)
  {
    sub_7B0C(&qword_2F2F80);
    sub_7C18(&qword_2F2F90, &qword_2F2F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2F88);
  }
  return result;
}

uint64_t sub_1922D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_192318@<X0>(uint64_t a1@<X8>)
{
  return sub_191624(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_192340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1923A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_19240C()
{
  unint64_t result = qword_2F2FB8;
  if (!qword_2F2FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2FB8);
  }
  return result;
}

unint64_t sub_192464()
{
  unint64_t result = qword_2F2FC0;
  if (!qword_2F2FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2FC0);
  }
  return result;
}

uint64_t sub_1924B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1924DC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShelfGridPaddleButtonView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShelfGridPaddleButtonView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShelfGridPaddleButtonView()
{
  return &type metadata for ShelfGridPaddleButtonView;
}

ValueMetadata *type metadata accessor for ShelfGridPaddleButtonView.Context()
{
  return &type metadata for ShelfGridPaddleButtonView.Context;
}

unsigned char *_s7BooksUI25ShelfGridPaddleButtonViewV9DirectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19269CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridPaddleButtonView.Direction()
{
  return &type metadata for ShelfGridPaddleButtonView.Direction;
}

unint64_t sub_1926D8()
{
  unint64_t result = qword_2F2FC8;
  if (!qword_2F2FC8)
  {
    sub_7B0C(&qword_2F2FD0);
    sub_7B0C(&qword_2F2F70);
    type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(255);
    sub_7C18(&qword_2F2FA0, &qword_2F2F70);
    sub_1922D0(&qword_2F2FB0, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle(255);
    sub_1922D0(&qword_2F2FA8, (void (*)(uint64_t))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F2FC8);
  }
  return result;
}

uint64_t *sub_19285C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_192A24(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_192B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_retain();
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_192CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_192E68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_192FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    uint64_t v9 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_B6DC(a1 + v11, &qword_2EA970);
    uint64_t v14 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1931A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1931BC);
}

uint64_t sub_1931BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_4A98(&qword_2EAB18);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_4A98(&qword_2EAB20);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_1932FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_193310);
}

uint64_t sub_193310(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EAB18);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EAB20);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_193444()
{
  sub_4F878(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_4F878(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_193550(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    swift_retain();
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_193678(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_193730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  swift_retain();
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_193800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1938FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1939D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_B6DC(a1 + v6, &qword_2EA968);
    uint64_t v9 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_193AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_193AE8);
}

uint64_t sub_193AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_4A98(&qword_2EAB18);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_193BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_193BBC);
}

uint64_t sub_193BBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EAB18);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_193C68()
{
  sub_4F878(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_193D1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_193D38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_193D5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_193DC4()
{
  unint64_t v1 = (int *)(type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  unint64_t v3 = v0 + v2 + v1[7];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_193EDC(uint64_t a1)
{
  return sub_19409C(a1, (void (*)(void))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnArtworkButtonStyle);
}

uint64_t sub_193EF4()
{
  uint64_t v1 = type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 24);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_194084(uint64_t a1)
{
  return sub_19409C(a1, (void (*)(void))type metadata accessor for ShelfGridPaddleButtonView.PaddleOnFillButtonStyle);
}

uint64_t sub_19409C(uint64_t a1, void (*a2)(void))
{
  return sub_191578();
}

uint64_t sub_19410C()
{
  return sub_1943B8(&qword_2F3140, &qword_2F3118, (void (*)(void))sub_194148);
}

unint64_t sub_194148()
{
  unint64_t result = qword_2F3148;
  if (!qword_2F3148)
  {
    sub_7B0C(&qword_2F3110);
    sub_1941E8();
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3148);
  }
  return result;
}

unint64_t sub_1941E8()
{
  unint64_t result = qword_2F3150;
  if (!qword_2F3150)
  {
    sub_7B0C(&qword_2F3108);
    sub_194288();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3150);
  }
  return result;
}

unint64_t sub_194288()
{
  unint64_t result = qword_2F3158;
  if (!qword_2F3158)
  {
    sub_7B0C(&qword_2F3100);
    sub_4FAE8();
    sub_7C18(&qword_2F3160, &qword_2F3168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3158);
  }
  return result;
}

unint64_t sub_194328()
{
  unint64_t result = qword_2F3170;
  if (!qword_2F3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3170);
  }
  return result;
}

uint64_t sub_19437C()
{
  return sub_1943B8(&qword_2F3178, &qword_2F3138, (void (*)(void))sub_194438);
}

uint64_t sub_1943B8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    sub_194328();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_194438()
{
  unint64_t result = qword_2F3180;
  if (!qword_2F3180)
  {
    sub_7B0C(&qword_2F3130);
    sub_1944D8();
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3180);
  }
  return result;
}

unint64_t sub_1944D8()
{
  unint64_t result = qword_2F3188;
  if (!qword_2F3188)
  {
    sub_7B0C(&qword_2F3128);
    sub_194578();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3188);
  }
  return result;
}

unint64_t sub_194578()
{
  unint64_t result = qword_2F3190;
  if (!qword_2F3190)
  {
    sub_7B0C(&qword_2F3120);
    sub_4FAE8();
    sub_7C18(&qword_2EC7B0, &qword_2EC7B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3190);
  }
  return result;
}

uint64_t ListItemAccessoryMoreButtonView.init(assetInfo:contextActionMenuView:showDownloadProgress:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v25 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v22 = a1;
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0x4034000000000000;
  uint64_t v10 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v11(v9, enum case for Font.TextStyle.subheadline(_:), v6);
  sub_4F928();
  sub_26A810();
  uint64_t v12 = (int *)type metadata accessor for ListItemAccessoryMoreButtonView();
  uint64_t v26 = 0x4000000000000000;
  v11(v9, v10, v6);
  sub_26A810();
  uint64_t v13 = (uint64_t *)(a5 + v12[6]);
  uint64_t *v13 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)(a5 + v12[7]);
  uint64_t *v14 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a5 + v12[8];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_OWORD *)(v15 + 51) = 0u;
  uint64_t v16 = (uint64_t *)(a5 + v12[9]);
  type metadata accessor for ProfileRestrictions();
  sub_198CB0((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t *v16 = sub_26AD70();
  v16[1] = v17;
  uint64_t result = sub_AD44(v22, a5 + v12[10]);
  uint64_t v19 = (void *)(a5 + v12[11]);
  uint64_t v20 = v24;
  *uint64_t v19 = v23;
  v19[1] = v20;
  *(unsigned char *)(a5 + v12[12]) = v25;
  return result;
}

uint64_t type metadata accessor for ListItemAccessoryMoreButtonView()
{
  uint64_t result = qword_2F3210;
  if (!qword_2F3210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ListItemAccessoryMoreButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v66 = a1;
  uint64_t v3 = sub_26DD70();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_4A98(&qword_2EEA48);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v68);
  uint64_t v56 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = type metadata accessor for SizeConstants(0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v53 = sub_4A98(&qword_2EE988);
  __chkstk_darwin(v53);
  uint64_t v55 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_4A98(&qword_2F3198);
  __chkstk_darwin(v65);
  uint64_t v57 = (uint64_t *)((char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_4A98(&qword_2F31A0);
  __chkstk_darwin(v63);
  uint64_t v64 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ListItemAccessoryMoreButtonView();
  uint64_t v23 = __chkstk_darwin(v22);
  int v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC((void *)(v1 + *(int *)(v23 + 40)), *(void *)(v1 + *(int *)(v23 + 40) + 24));
  char v26 = sub_269F30();
  sub_1972E8(v2, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
  uint64_t v67 = v2;
  if (v26)
  {
    uint64_t v27 = *(void **)&v25[*(int *)(v22 + 36)];
    if (!v27)
    {
      type metadata accessor for ProfileRestrictions();
      sub_198CB0((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
      uint64_t result = sub_26AD60();
      __break(1u);
      return result;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v28 = v27;
    sub_26A590();

    swift_release();
    swift_release();
    char v29 = v69;
    sub_198CF8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
    if ((v29 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F31B0, &qword_2F3198);
      return sub_26B2F0();
    }
  }
  else
  {
    sub_198CF8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
  }
  sub_41378((uint64_t)v18);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v12, enum case for Font.TextStyle.subheadline(_:), v7);
  uint64_t v31 = (uint64_t)v16;
  sub_1972E8((uint64_t)v18, (uint64_t)v16, type metadata accessor for SizeConstants);
  uint64_t v32 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v54, v12, v7);
  uint64_t v33 = v55;
  sub_1972E8(v31, v55, type metadata accessor for SizeConstants);
  uint64_t v34 = v56;
  sub_1972E8(v31, v56, type metadata accessor for SizeConstants.Environment);
  uint64_t v35 = v34 + *(int *)(v68 + 24);
  double v36 = sub_1AB90(v32, v35);
  uint64_t v37 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v35, v37);
  double v38 = 1.0;
  if ((*(void *)&v36 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v38 = v36;
  }
  if ((~*(void *)&v36 & 0x7FF0000000000000) == 0) {
    double v36 = v38;
  }
  sub_198CF8(v31, type metadata accessor for SizeConstants);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v39(v32, v7);
  uint64_t v40 = *(int *)(v53 + 36);
  *(double *)(v33 + v40) = v36;
  v39((uint64_t)v12, v7);
  sub_198CF8((uint64_t)v18, type metadata accessor for SizeConstants);
  uint64_t v41 = v59;
  sub_1972E8(v33, v59, type metadata accessor for SizeConstants.Environment);
  uint64_t v42 = *(int *)(v58 + 36);
  *(void *)(v41 + v42) = *(void *)(v33 + v40);
  sub_B6DC(v33, &qword_2EE988);
  double v43 = *(double *)(v41 + v42) * 12.0;
  double v44 = *(double *)(v41 + *(int *)(v68 + 28));
  uint64_t v46 = (uint64_t)v60;
  uint64_t v45 = v61;
  uint64_t v47 = v62;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v62);
  double v70 = v43;
  sub_196FB4(v46, v44);
  double v48 = v70;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
  sub_B6DC(v41, &qword_2EEA48);
  uint64_t v49 = sub_26B120();
  uint64_t v50 = (uint64_t)v57;
  *uint64_t v57 = v49;
  *(double *)(v50 + 8) = v48;
  *(unsigned char *)(v50 + 16) = 0;
  uint64_t v51 = sub_4A98(&qword_2F31A8);
  sub_195168(v67, v50 + *(int *)(v51 + 44));
  sub_B678(v50, v64, &qword_2F3198);
  swift_storeEnumTagMultiPayload();
  sub_7C18(&qword_2F31B0, &qword_2F3198);
  sub_26B2F0();
  return sub_B6DC(v50, &qword_2F3198);
}

uint64_t sub_195168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v3 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v141 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_26B310();
  uint64_t v159 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v158 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_26AC00();
  uint64_t v149 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v147 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_4A98(&qword_2F3278);
  uint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v144 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_4A98(&qword_2F3280);
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v145 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_4A98(&qword_2F3288);
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v154 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_4A98(&qword_2F3290);
  uint64_t v10 = __chkstk_darwin(v151);
  uint64_t v150 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v156 = (uint64_t)&v119 - v12;
  uint64_t v134 = sub_4A98(&qword_2F3298);
  __chkstk_darwin(v134);
  uint64_t v14 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_4A98(&qword_2F32A0);
  __chkstk_darwin(v138);
  uint64_t v132 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_4A98(&qword_2F32A8);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_4A98(&qword_2F32B0);
  uint64_t v17 = __chkstk_darwin(v133);
  uint64_t v121 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v125 = (uint64_t)&v119 - v19;
  uint64_t v20 = type metadata accessor for ListItemAccessoryMoreButtonView();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_4A98(&qword_2F32B8);
  uint64_t v127 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v126 = (uint64_t)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_4A98(&qword_2F32C0);
  __chkstk_darwin(v135);
  uint64_t v137 = (uint64_t)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2F32C8);
  __chkstk_darwin(v25);
  long long v128 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_4A98(&qword_2F32D0);
  __chkstk_darwin(v136);
  long long v130 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_4A98(&qword_2F32D8);
  uint64_t v31 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v33 = (char *)&v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2F32E0);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v143 = (uint64_t)&v119 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v161 = (uint64_t)&v119 - v37;
  uint64_t v38 = v20;
  uint64_t v39 = *(int *)(v20 + 32);
  uint64_t v40 = a1;
  uint64_t v41 = a1 + v39;
  long long v42 = *(_OWORD *)(v41 + 48);
  v170[2] = *(_OWORD *)(v41 + 32);
  *(_OWORD *)uint64_t v171 = v42;
  *(_DWORD *)&v171[15] = *(_DWORD *)(v41 + 63);
  long long v43 = *(_OWORD *)(v41 + 16);
  v170[0] = *(_OWORD *)v41;
  v170[1] = v43;
  sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)&v166);
  sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  uint64_t v142 = v38;
  if (!*((void *)&v166 + 1)
    || (uint64_t v44 = v167, swift_bridgeObjectRelease(), v44 != 3)
    || *(unsigned char *)(v40 + *(int *)(v38 + 48)) != 1)
  {
    sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
    sub_413B8((uint64_t)&v166);
    sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
    if (*((void *)&v166 + 1))
    {
      double v56 = *(double *)&v169[8];
      char v57 = v169[16];
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0 && *(unsigned char *)(v40 + *(int *)(v38 + 48)) == 1)
      {
        _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v30);
        uint64_t v58 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
        sub_198CF8((uint64_t)v30, type metadata accessor for ColorConstants);
        LOBYTE(v162) = 0;
        sub_4A98(&qword_2EBDF0);
        sub_26A830();
        double v59 = *(double *)&v166;
        sub_26A830();
        uint64_t v60 = v126;
        sub_186788(v58, (char *)&v162, 0, 0, 1, v126, v56, v59, *(double *)&v166);
        swift_release();
        uint64_t v61 = v127;
        (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v128, v60, v131);
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = sub_7B0C(&qword_2F2BE8);
        uint64_t v63 = type metadata accessor for InDeterminateProgressViewStyle(255);
        uint64_t v64 = sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
        uint64_t v65 = sub_198CB0(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
        *(void *)&long long v166 = v62;
        *((void *)&v166 + 1) = v63;
        *(void *)&long long v167 = v64;
        *((void *)&v167 + 1) = v65;
        swift_getOpaqueTypeConformance2();
        uint64_t v66 = type metadata accessor for DeterminateProgressViewStyle(255);
        uint64_t v67 = sub_198CB0(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
        *(void *)&long long v166 = v62;
        *((void *)&v166 + 1) = v66;
        *(void *)&long long v167 = v64;
        *((void *)&v167 + 1) = v67;
        swift_getOpaqueTypeConformance2();
        uint64_t v68 = (uint64_t)v130;
        uint64_t v69 = v131;
        sub_26B2F0();
        sub_B678(v68, v137, &qword_2F32D0);
        swift_storeEnumTagMultiPayload();
        sub_198B24();
        sub_198E38(&qword_2F32F8, &qword_2F32A0);
        sub_26B2F0();
        sub_B6DC(v68, &qword_2F32D0);
        uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v69);
        goto LABEL_9;
      }
    }
    sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
    sub_413B8((uint64_t)&v166);
    sub_44FD8((uint64_t)v170, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
    if (*((void *)&v166 + 1))
    {
      uint64_t v73 = *((void *)&v167 + 1);
      char v74 = v168;
      if ((v168 & 1) == 0 || *((void *)&v167 + 1) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v75 = v40;
        sub_1972E8(v40, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
        uint64_t v72 = v139;
        if (v73 || (v74 & 1) == 0)
        {
          long long v106 = &v22[*(int *)(v38 + 32)];
          long long v107 = *((_OWORD *)v106 + 3);
          long long v168 = *((_OWORD *)v106 + 2);
          *(_OWORD *)uint64_t v169 = v107;
          *(_DWORD *)&v169[15] = *(_DWORD *)(v106 + 63);
          long long v108 = *(_OWORD *)v106;
          long long v167 = *((_OWORD *)v106 + 1);
          long long v166 = v108;
          sub_44FD8((uint64_t)&v166, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
          sub_413B8((uint64_t)&v162);
          sub_44FD8((uint64_t)&v166, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
          sub_198CF8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
          if (v163)
          {
            unint64_t v109 = v164;
            swift_bridgeObjectRelease();
            if (v109 <= 1)
            {
              uint64_t v162 = sub_26C250();
              sub_26B8B0();
              uint64_t v110 = v122;
              sub_26BC40();
              swift_release();
              _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v30);
              uint64_t v111 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
              sub_198CF8((uint64_t)v30, type metadata accessor for ColorConstants);
              uint64_t KeyPath = swift_getKeyPath();
              uint64_t v113 = v123;
              uint64_t v114 = (uint64_t)v121;
              uint64_t v115 = v124;
              (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v121, v110, v124);
              long long v116 = (uint64_t *)(v114 + *(int *)(v133 + 36));
              *long long v116 = KeyPath;
              v116[1] = v111;
              (*(void (**)(char *, uint64_t))(v113 + 8))(v110, v115);
              uint64_t v117 = v125;
              sub_19CC4(v114, v125, &qword_2F32B0);
              sub_B678(v117, (uint64_t)v14, &qword_2F32B0);
              swift_storeEnumTagMultiPayload();
              sub_198A54();
              uint64_t v118 = (uint64_t)v132;
              sub_26B2F0();
              sub_B678(v118, v137, &qword_2F32A0);
              swift_storeEnumTagMultiPayload();
              sub_198B24();
              uint64_t v40 = v75;
              sub_198E38(&qword_2F32F8, &qword_2F32A0);
              sub_26B2F0();
              sub_B6DC(v118, &qword_2F32A0);
              uint64_t v77 = v117;
              uint64_t v78 = &qword_2F32B0;
              goto LABEL_17;
            }
          }
LABEL_16:
          *(_OWORD *)uint64_t v14 = xmmword_273E30;
          v14[16] = 0;
          *((void *)v14 + 3) = _swiftEmptyArrayStorage;
          swift_storeEnumTagMultiPayload();
          sub_198A54();
          uint64_t v76 = (uint64_t)v132;
          sub_26B2F0();
          uint64_t v40 = v75;
          sub_B678(v76, v137, &qword_2F32A0);
          swift_storeEnumTagMultiPayload();
          sub_198B24();
          sub_198E38(&qword_2F32F8, &qword_2F32A0);
          sub_26B2F0();
          uint64_t v77 = v76;
          uint64_t v78 = &qword_2F32A0;
LABEL_17:
          uint64_t v55 = sub_B6DC(v77, v78);
          uint64_t v70 = (uint64_t)v141;
          uint64_t v71 = v140;
          goto LABEL_18;
        }
LABEL_15:
        sub_198CF8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v75 = v40;
    uint64_t v72 = v139;
    sub_1972E8(v40, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
    goto LABEL_15;
  }
  uint64_t v120 = v40;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v30);
  uint64_t v45 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  sub_198CF8((uint64_t)v30, type metadata accessor for ColorConstants);
  LOBYTE(v162) = 0;
  sub_4A98(&qword_2EBDF0);
  sub_26A830();
  double v46 = *(double *)&v166;
  sub_26A830();
  sub_1864E4(v45, (char *)&v162, (uint64_t)v33, v46, *(double *)&v166);
  swift_release();
  uint64_t v47 = v129;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v128, v33, v129);
  swift_storeEnumTagMultiPayload();
  uint64_t v48 = sub_7B0C(&qword_2F2BE8);
  uint64_t v49 = type metadata accessor for InDeterminateProgressViewStyle(255);
  uint64_t v50 = sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
  uint64_t v51 = sub_198CB0(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
  *(void *)&long long v166 = v48;
  *((void *)&v166 + 1) = v49;
  *(void *)&long long v167 = v50;
  *((void *)&v167 + 1) = v51;
  swift_getOpaqueTypeConformance2();
  uint64_t v52 = type metadata accessor for DeterminateProgressViewStyle(255);
  uint64_t v53 = sub_198CB0(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
  *(void *)&long long v166 = v48;
  *((void *)&v166 + 1) = v52;
  *(void *)&long long v167 = v50;
  *((void *)&v167 + 1) = v53;
  swift_getOpaqueTypeConformance2();
  uint64_t v54 = (uint64_t)v130;
  uint64_t v40 = v120;
  sub_26B2F0();
  sub_B678(v54, v137, &qword_2F32D0);
  swift_storeEnumTagMultiPayload();
  sub_198B24();
  sub_198E38(&qword_2F32F8, &qword_2F32A0);
  sub_26B2F0();
  sub_B6DC(v54, &qword_2F32D0);
  uint64_t v55 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v47);
LABEL_9:
  uint64_t v70 = (uint64_t)v141;
  uint64_t v71 = v140;
  uint64_t v72 = v139;
LABEL_18:
  __chkstk_darwin(v55);
  *(&v119 - 2) = v40;
  sub_4A98(&qword_2F3300);
  sub_7C18(&qword_2F3308, &qword_2F3300);
  uint64_t v79 = v144;
  sub_26C3A0();
  uint64_t v80 = v147;
  sub_26ABF0();
  uint64_t v81 = sub_7C18(&qword_2F3310, &qword_2F3278);
  uint64_t v82 = sub_198CB0(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v83 = v145;
  uint64_t v84 = v148;
  sub_26BC70();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v80, v72);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v79, v84);
  uint64_t v85 = v158;
  sub_26AD30();
  uint64_t v162 = v84;
  uint64_t v163 = v72;
  uint64_t v164 = v81;
  uint64_t v165 = v82;
  swift_getOpaqueTypeConformance2();
  sub_198CB0((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v86 = v154;
  uint64_t v87 = v153;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v85, v71);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v83, v87);
  sub_41378(v70);
  sub_198CF8(v70, type metadata accessor for SizeConstants);
  LOBYTE(v81) = sub_26B760();
  sub_26A640();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v96 = v155;
  uint64_t v97 = (uint64_t)v150;
  uint64_t v98 = v157;
  (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v150, v86, v157);
  uint64_t v99 = v97 + *(int *)(v151 + 36);
  *(unsigned char *)uint64_t v99 = v81;
  *(void *)(v99 + 8) = v89;
  *(void *)(v99 + 16) = v91;
  *(void *)(v99 + 24) = v93;
  *(void *)(v99 + 32) = v95;
  *(unsigned char *)(v99 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v86, v98);
  uint64_t v100 = v156;
  sub_19CC4(v97, v156, &qword_2F3290);
  uint64_t v101 = v161;
  uint64_t v102 = v143;
  sub_B678(v161, v143, &qword_2F32E0);
  sub_B678(v100, v97, &qword_2F3290);
  uint64_t v103 = v160;
  sub_B678(v102, v160, &qword_2F32E0);
  uint64_t v104 = sub_4A98(&qword_2F3318);
  sub_B678(v97, v103 + *(int *)(v104 + 48), &qword_2F3290);
  sub_B6DC(v100, &qword_2F3290);
  sub_B6DC(v101, &qword_2F32E0);
  sub_B6DC(v97, &qword_2F3290);
  return sub_B6DC(v102, &qword_2F32E0);
}

uint64_t sub_196A60()
{
  return sub_26B9A0();
}

uint64_t sub_196AF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ListItemAccessoryMoreButtonView();
  (*(void (**)(void *__return_ptr, uint64_t))(a1 + *(int *)(v4 + 44)))(v11, a1 + *(int *)(v4 + 40));
  uint64_t v5 = sub_4ADC(v11, v11[3]);
  __chkstk_darwin(v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_26C470();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v11);
  *a2 = v8;
  return result;
}

uint64_t sub_196C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v1 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F32A8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F32B0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2F3338) - 8;
  __chkstk_darwin(v31);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_26C250();
  sub_26B8B0();
  sub_26BC40();
  swift_release();
  type metadata accessor for ListItemAccessoryMoreButtonView();
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v5);
  uint64_t v16 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_198CF8((uint64_t)v5, type metadata accessor for ColorConstants);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  uint64_t v18 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v18 = KeyPath;
  v18[1] = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v19 = v32;
  sub_41378(v32);
  sub_198CF8(v19, type metadata accessor for SizeConstants);
  LOBYTE(v19) = sub_26B760();
  sub_26A640();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_B678((uint64_t)v13, (uint64_t)v15, &qword_2F32B0);
  uint64_t v28 = &v15[*(int *)(v31 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_B6DC((uint64_t)v13, &qword_2F32B0);
  uint64_t v29 = v33;
  sub_B678((uint64_t)v15, v33, &qword_2F3338);
  *(unsigned char *)(v29 + *(int *)(sub_4A98(&qword_2F3320) + 36)) = 0;
  return sub_B6DC((uint64_t)v15, &qword_2F3338);
}

uint64_t sub_196FB4(uint64_t a1, double a2)
{
  uint64_t v5 = sub_26DD70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  if (a2 != 1.0)
  {
    double v14 = *v2 / a2;
    *uint64_t v2 = v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if (result == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
    {
      double v15 = round(v14);
    }
    else if (result == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
    {
      double v15 = rint(v14);
    }
    else if (result == enum case for FloatingPointRoundingRule.up(_:))
    {
      double v15 = ceil(v14);
    }
    else if (result == enum case for FloatingPointRoundingRule.down(_:))
    {
      double v15 = floor(v14);
    }
    else if (result == enum case for FloatingPointRoundingRule.towardZero(_:))
    {
      double v15 = trunc(v14);
    }
    else if (result == enum case for FloatingPointRoundingRule.awayFromZero(_:))
    {
      double v15 = ceil(v14);
      double v17 = floor(v14);
      if (v14 < 0.0) {
        double v15 = v17;
      }
    }
    else
    {
      sub_26D720();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      double v15 = *v2;
    }
    double v13 = v15 * a2;
    goto LABEL_34;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v18 - v10, a1, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v11, v5);
  if (result != enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    if (result == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
    {
      double v13 = rint(*v2);
      goto LABEL_34;
    }
    if (result == enum case for FloatingPointRoundingRule.up(_:))
    {
      double v16 = *v2;
LABEL_12:
      double v13 = ceil(v16);
      goto LABEL_34;
    }
    if (result == enum case for FloatingPointRoundingRule.down(_:))
    {
      double v16 = *v2;
    }
    else
    {
      if (result == enum case for FloatingPointRoundingRule.towardZero(_:))
      {
        double v13 = trunc(*v2);
        goto LABEL_34;
      }
      if (result != enum case for FloatingPointRoundingRule.awayFromZero(_:))
      {
        sub_26D720();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      double v16 = *v2;
      if ((*(void *)v2 & 0x8000000000000000) == 0) {
        goto LABEL_12;
      }
    }
    double v13 = floor(v16);
    goto LABEL_34;
  }
  double v13 = round(*v2);
LABEL_34:
  *uint64_t v2 = v13;
  return result;
}

uint64_t sub_1972E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_197358()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for ListItemAccessoryMoreButtonView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v21 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    uint64_t v11 = (_WORD *)((char *)a2 + v9);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v10 = *v11;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      double v14 = (char *)v10 + v13;
      double v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
      uint64_t v17 = v12[8];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      v18[2] = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[8];
    char v57 = a3;
    uint64_t v58 = a2;
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)v28;
    uint64_t v30 = *((void *)v28 + 1);
    uint64_t v31 = *((void *)v28 + 2);
    uint64_t v32 = *((void *)v28 + 3);
    uint64_t v33 = *((void *)v28 + 4);
    uint64_t v34 = *((void *)v28 + 5);
    uint64_t v36 = *((void *)v28 + 6);
    uint64_t v35 = *((void *)v28 + 7);
    double v59 = a1;
    __int16 v37 = *((_WORD *)v28 + 32);
    sub_44FC4(*(void *)v28, v30, v31, v32, v33, v34, v36, v35, v37, v28[66]);
    *(void *)uint64_t v27 = v29;
    *((void *)v27 + 1) = v30;
    *((void *)v27 + 2) = v31;
    *((void *)v27 + 3) = v32;
    *((void *)v27 + 4) = v33;
    *((void *)v27 + 5) = v34;
    *((void *)v27 + 6) = v36;
    *((void *)v27 + 7) = v35;
    *((_WORD *)v27 + 32) = v37;
    v27[66] = v56;
    uint64_t v38 = v57[9];
    uint64_t v39 = v57[10];
    uint64_t v40 = (void *)((char *)v59 + v38);
    uint64_t v41 = (char *)v58 + v38;
    long long v43 = *(void **)v41;
    uint64_t v42 = *((void *)v41 + 1);
    *uint64_t v40 = v43;
    v40[1] = v42;
    uint64_t v44 = (char *)v59 + v39;
    uint64_t v45 = (char *)v58 + v39;
    long long v46 = *(_OWORD *)((char *)v58 + v39 + 24);
    *(_OWORD *)((char *)v59 + v39 + 24) = v46;
    uint64_t v47 = v46;
    uint64_t v48 = **(void (***)(char *, char *, uint64_t))(v46 - 8);
    id v49 = v43;
    v48(v44, v45, v47);
    uint64_t v21 = v59;
    uint64_t v50 = v57[11];
    uint64_t v51 = v57[12];
    uint64_t v52 = (void *)((char *)v59 + v50);
    uint64_t v53 = (void *)((char *)v58 + v50);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v59 + v51) = *((unsigned char *)v58 + v51);
  }
  swift_retain();
  return v21;
}

uint64_t destroy for ListItemAccessoryMoreButtonView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[8];
  sub_C360(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), *(void *)(v11 + 56), *(_WORD *)(v11 + 64), *(unsigned char *)(v11 + 66));

  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[10]);

  return swift_release();
}

uint64_t initializeWithCopy for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3;
  uint64_t v9 = a3[6];
  uint64_t v10 = (_WORD *)(a1 + v9);
  uint64_t v11 = (_WORD *)(a2 + v9);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v10 = *v11;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    double v14 = (char *)v10 + v13;
    double v15 = (char *)v11 + v13;
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
    uint64_t v17 = v12[8];
    uint64_t v18 = (char *)v10 + v17;
    uint64_t v19 = (char *)v11 + v17;
    v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
  }
  else
  {
    *(void *)uint64_t v10 = *(void *)v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[8];
  uint64_t v25 = a1;
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  uint64_t v30 = *(void *)(v27 + 16);
  uint64_t v31 = *(void *)(v27 + 24);
  uint64_t v32 = *(void *)(v27 + 32);
  uint64_t v33 = *(void *)(v27 + 40);
  char v56 = v8;
  uint64_t v57 = a2;
  uint64_t v35 = *(void *)(v27 + 48);
  uint64_t v34 = *(void *)(v27 + 56);
  __int16 v54 = *(_WORD *)(v27 + 64);
  char v55 = *(unsigned char *)(v27 + 66);
  sub_44FC4(*(void *)v27, v29, v30, v31, v32, v33, v35, v34, v54, v55);
  *(void *)uint64_t v26 = v28;
  *(void *)(v26 + 8) = v29;
  *(void *)(v26 + 16) = v30;
  *(void *)(v26 + 24) = v31;
  *(void *)(v26 + 32) = v32;
  *(void *)(v26 + 40) = v33;
  *(void *)(v26 + 48) = v35;
  *(void *)(v26 + 56) = v34;
  *(_WORD *)(v26 + 64) = v54;
  *(unsigned char *)(v26 + 66) = v55;
  uint64_t v36 = v56[9];
  uint64_t v37 = v56[10];
  uint64_t v38 = (void *)(v25 + v36);
  uint64_t v39 = v57 + v36;
  uint64_t v41 = *(void **)v39;
  uint64_t v40 = *(void *)(v39 + 8);
  *uint64_t v38 = v41;
  v38[1] = v40;
  uint64_t v42 = v25 + v37;
  uint64_t v43 = v57 + v37;
  long long v44 = *(_OWORD *)(v57 + v37 + 24);
  *(_OWORD *)(v25 + v37 + 24) = v44;
  uint64_t v45 = v44;
  long long v46 = **(void (***)(uint64_t, uint64_t, uint64_t))(v44 - 8);
  id v47 = v41;
  v46(v42, v43, v45);
  uint64_t v48 = v56[11];
  uint64_t v49 = v56[12];
  uint64_t v50 = (void *)(v25 + v48);
  uint64_t v51 = (void *)(v57 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  *(unsigned char *)(v25 + v49) = *(unsigned char *)(v57 + v49);
  swift_retain();
  return v25;
}

uint64_t assignWithCopy for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (unsigned char *)(a1 + v8);
    uint64_t v10 = (unsigned char *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = &v9[v12];
      double v14 = &v10[v12];
      uint64_t v15 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      uint64_t v16 = v11[8];
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      char v19 = v18[2];
      *(_WORD *)uint64_t v17 = *(_WORD *)v18;
      v17[2] = v19;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[7];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_B6DC(a1 + v20, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[8];
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *(void *)(v26 + 8);
  uint64_t v29 = *(void *)(v26 + 16);
  uint64_t v30 = *(void *)(v26 + 24);
  uint64_t v31 = *(void *)(v26 + 32);
  uint64_t v32 = *(void *)(v26 + 40);
  uint64_t v34 = *(void *)(v26 + 48);
  uint64_t v33 = *(void *)(v26 + 56);
  uint64_t v58 = a1;
  __int16 v35 = *(_WORD *)(v26 + 64);
  sub_44FC4(*(void *)v26, v28, v29, v30, v31, v32, v34, v33, v35, *(unsigned char *)(v26 + 66));
  uint64_t v36 = *(void *)v25;
  uint64_t v37 = *(void *)(v25 + 8);
  uint64_t v38 = *(void *)(v25 + 16);
  uint64_t v39 = *(void *)(v25 + 24);
  uint64_t v40 = *(void *)(v25 + 32);
  uint64_t v41 = *(void *)(v25 + 40);
  uint64_t v42 = *(void *)(v25 + 48);
  uint64_t v43 = *(void *)(v25 + 56);
  __int16 v44 = *(_WORD *)(v25 + 64);
  char v45 = *(unsigned char *)(v25 + 66);
  *(void *)uint64_t v25 = v27;
  *(void *)(v25 + 8) = v28;
  *(void *)(v25 + 16) = v29;
  *(void *)(v25 + 24) = v30;
  *(void *)(v25 + 32) = v31;
  *(void *)(v25 + 40) = v32;
  *(void *)(v25 + 48) = v34;
  *(void *)(v25 + 56) = v33;
  *(_WORD *)(v25 + 64) = v35;
  *(unsigned char *)(v25 + 66) = v57;
  sub_C360(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  uint64_t v46 = v60[9];
  id v47 = (void *)(v58 + v46);
  uint64_t v48 = v59 + v46;
  uint64_t v49 = *(void **)(v58 + v46);
  uint64_t v50 = *(void **)(v59 + v46);
  *id v47 = v50;
  id v51 = v50;

  v47[1] = *(void *)(v48 + 8);
  sub_16D58((uint64_t *)(v58 + v60[10]), (uint64_t *)(v59 + v60[10]));
  uint64_t v52 = v60[11];
  uint64_t v53 = (void *)(v58 + v52);
  __int16 v54 = (void *)(v59 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  swift_retain();
  swift_release();
  uint64_t result = v58;
  *(unsigned char *)(v58 + v60[12]) = *(unsigned char *)(v59 + v60[12]);
  return result;
}

uint64_t initializeWithTake for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    double v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)((char *)v9 + v12[7]) = *(void *)((char *)v10 + v12[7]);
    uint64_t v17 = v12[8];
    uint64_t v18 = (char *)v9 + v17;
    char v19 = (char *)v10 + v17;
    v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v29;
  *(_DWORD *)(v27 + 63) = *(_DWORD *)(v28 + 63);
  long long v30 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v30;
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v31 = a3[10];
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  long long v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (_WORD *)(a1 + v8);
    uint64_t v10 = (_WORD *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EB708);
    uint64_t v11 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      double v14 = (char *)v9 + v13;
      uint64_t v15 = (char *)v10 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)((char *)v9 + v12[7]) = *(void *)((char *)v10 + v12[7]);
      uint64_t v17 = v12[8];
      uint64_t v18 = (char *)v9 + v17;
      char v19 = (char *)v10 + v17;
      v18[2] = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_B6DC(a1 + v20, &qword_2EA968);
    uint64_t v23 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  __int16 v28 = *(_WORD *)(v27 + 64);
  char v29 = *(unsigned char *)(v27 + 66);
  uint64_t v30 = *(void *)v26;
  uint64_t v31 = *(void *)(v26 + 8);
  uint64_t v32 = *(void *)(v26 + 16);
  uint64_t v33 = *(void *)(v26 + 24);
  uint64_t v34 = *(void *)(v26 + 32);
  uint64_t v35 = *(void *)(v26 + 40);
  uint64_t v36 = *(void *)(v26 + 48);
  uint64_t v37 = *(void *)(v26 + 56);
  __int16 v38 = *(_WORD *)(v26 + 64);
  char v39 = *(unsigned char *)(v26 + 66);
  long long v40 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v40;
  long long v41 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v41;
  *(_WORD *)(v26 + 64) = v28;
  *(unsigned char *)(v26 + 66) = v29;
  sub_C360(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v42 = a3[9];
  uint64_t v43 = (void *)(a1 + v42);
  __int16 v44 = (void *)(a2 + v42);
  char v45 = *(void **)(a1 + v42);
  void *v43 = *v44;

  v43[1] = v44[1];
  uint64_t v46 = a3[10];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v46);
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_198550);
}

uint64_t sub_198550(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[10] + 24);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemAccessoryMoreButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1986D4);
}

uint64_t sub_1986D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_4A98(&qword_2EB718);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[6];
    }
    else
    {
      uint64_t result = sub_4A98(&qword_2EAB18);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[10] + 24) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_198840()
{
  sub_4F8CC();
  if (v0 <= 0x3F)
  {
    sub_168AA4(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
    if (v1 <= 0x3F)
    {
      sub_168AA4(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_1989B4()
{
  unint64_t result = qword_2F3268;
  if (!qword_2F3268)
  {
    sub_7B0C(&qword_2F3270);
    sub_7C18(&qword_2F31B0, &qword_2F3198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3268);
  }
  return result;
}

unint64_t sub_198A54()
{
  unint64_t result = qword_2F32E8;
  if (!qword_2F32E8)
  {
    sub_7B0C(&qword_2F32B0);
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F32E8);
  }
  return result;
}

unint64_t sub_198B24()
{
  unint64_t result = qword_2F32F0;
  if (!qword_2F32F0)
  {
    sub_7B0C(&qword_2F32D0);
    sub_7B0C(&qword_2F2BE8);
    type metadata accessor for InDeterminateProgressViewStyle(255);
    sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
    sub_198CB0(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for DeterminateProgressViewStyle(255);
    sub_198CB0(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F32F0);
  }
  return result;
}

uint64_t sub_198CA8()
{
  return sub_196A60();
}

uint64_t sub_198CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_198CF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_198D60@<X0>(uint64_t *a1@<X8>)
{
  return sub_196AF4(*(void *)(v1 + 16), a1);
}

uint64_t sub_198D68@<X0>(uint64_t a1@<X8>)
{
  return sub_196C04(a1);
}

unint64_t sub_198D70()
{
  unint64_t result = qword_2F3328;
  if (!qword_2F3328)
  {
    sub_7B0C(&qword_2F3320);
    sub_198E38(&qword_2F3330, &qword_2F3338);
    sub_7C18(&qword_2F3340, qword_2F3348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3328);
  }
  return result;
}

uint64_t sub_198E38(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_198A54();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SeriesCardCoverStackLayout.axIsSeries.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t FlowAction.PageDestination.init(intent:hidesDefaultBackButton:navigationBarTitle:)@<X0>(long long *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_AD44(a1, a5);
  *(unsigned char *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t sub_198EEC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DC038;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_198F3C(char a1)
{
  unint64_t result = 1701273968;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65746E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_198FD0(char a1)
{
  unint64_t result = 1701273968;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65746E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_199064(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DC0B8;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1990B4(char a1)
{
  if (!a1) {
    return 12383;
  }
  if (a1 == 1) {
    return 0xD000000000000016;
  }
  return 0xD000000000000012;
}

uint64_t sub_19910C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_199180(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1991EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_19925C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1992CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_198EEC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_199304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19963C(a1, (uint64_t (*)(void, void, void))sub_198F3C, a2);
}

unint64_t sub_19931C()
{
  return sub_198FD0(*v0);
}

uint64_t sub_199328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_198F38(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_199358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19A254();
  *a1 = result;
  return result;
}

uint64_t sub_199384(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1993D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_19942C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1994A0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_19950C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_19957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1995EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_199064(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_199624@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19963C(a1, (uint64_t (*)(void, void, void))sub_1990B4, a2);
}

uint64_t sub_19963C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_199674()
{
  return sub_1990B4(*v0);
}

uint64_t sub_199680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1990B0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1996B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_F8884();
  *a1 = result;
  return result;
}

uint64_t sub_1996DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_199730(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t FlowAction.PageDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  _s15PageDestinationV16LegacyCodingKeysOMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = sub_26DCC0();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)v27 - v7;
  uint64_t v33 = a2;
  v27[1] = a3;
  _s15PageDestinationV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v9 = sub_26DCC0();
  uint64_t v30 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  sub_4ADC(a1, v12);
  uint64_t v13 = v35;
  sub_26DFC0();
  if (v13) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v34);
  }
  uint64_t v14 = v8;
  uint64_t v15 = v31;
  LOBYTE(v36[0]) = 0;
  if (sub_26DCB0())
  {
    LOBYTE(v36[0]) = 0;
    sub_26DC10();
    uint64_t v35 = v11;
    type metadata accessor for CodeAnyIntentModel();
    char v41 = 0;
    swift_getWitnessTable();
    sub_26DC90();
    sub_AD44(v36, (uint64_t)v37);
    LOBYTE(v36[0]) = 1;
    char v38 = sub_26DC80() & 1;
    LOBYTE(v36[0]) = 2;
    uint64_t v18 = sub_26DC30();
    uint64_t v19 = v15;
    uint64_t v20 = v30;
    uint64_t v21 = v35;
    uint64_t v22 = v18;
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v19);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v9);
  }
  else
  {
    type metadata accessor for CodeAnyIntentModel();
    char v41 = 1;
    swift_getWitnessTable();
    sub_26DC90();
    sub_AD44(v36, (uint64_t)v37);
    LOBYTE(v36[0]) = 2;
    char v38 = sub_26DC80() & 1;
    LOBYTE(v36[0]) = 3;
    uint64_t v22 = sub_26DC30();
    uint64_t v24 = v17;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  }
  uint64_t v39 = v22;
  uint64_t v40 = v24;
  uint64_t v25 = type metadata accessor for FlowAction.PageDestination();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v26 + 16))(v28, v37, v25);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v34);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v26 + 8))(v37, v25);
}

uint64_t _s15PageDestinationV16LegacyCodingKeysOMa()
{
  return sub_129B4();
}

uint64_t _s15PageDestinationV10CodingKeysOMa()
{
  return sub_129B4();
}

uint64_t type metadata accessor for FlowAction.PageDestination()
{
  return sub_129B4();
}

uint64_t sub_199D80(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_199DBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FlowAction.PageDestination.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_199DDC(uint64_t a1)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_199E14(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_199E84(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_199ED8(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_199F2C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_199F74(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *sub_199FC4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19A090);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_19A0B8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19A184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_19A1AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A1C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A1E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A200()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A21C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A238()
{
  return swift_getWitnessTable();
}

uint64_t sub_19A254()
{
  return 4;
}

void *sub_19A25C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_2B89C(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_C224(v4, (uint64_t)v8);
      uint64_t v9 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_2B89C(v5 > 1, v6 + 1, 1);
        unint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_AD44(v8, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t _CodeAnyComponentModel_Many.description.getter()
{
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EADC0);
  uint64_t v0 = sub_26D620();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _CodeAnyComponentModel_Many.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v8);
  sub_7A234();
  uint64_t v5 = sub_26D690();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  uint64_t v7 = sub_19A25C(v5);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t _CodeAnyComponentModel_Many.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_7A234();
  uint64_t v4 = sub_26D670();
  uint64_t v5 = sub_19A25C(v4);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

ValueMetadata *type metadata accessor for _CodeAnyComponentModel_Many()
{
  return &type metadata for _CodeAnyComponentModel_Many;
}

uint64_t LocalizerRequest.init(from:)(void *a1)
{
  sub_4ADC(a1, a1[3]);
  sub_26DF90();
  if (!v1)
  {
    sub_4ADC(v4, v4[3]);
    sub_26DDC0();
    sub_26A210();
    swift_bridgeObjectRelease();
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v4);
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t static LocalizerRequest.string(forKey:with:defaultValue:macDefaultValue:comment:using:)()
{
  return sub_26A1D0();
}

uint64_t static LocalizerRequest.string(withCount:forKey:with:defaultValue:defaultOneValue:macDefaultValue:macDefaultOneValue:comment:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return static LocalizerRequest.string(withCount:forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5, a11);
}

uint64_t static LocalizerRequest.decimal(forNumber:in:)()
{
  return sub_26A1F0();
}

uint64_t SymbolImage.init(kind:)@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = (uint64_t *)&a2[*(int *)(type metadata accessor for SymbolImage() + 20)];
  *uint64_t v4 = swift_getKeyPath();
  sub_4A98(&qword_2EBC90);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a2 = v3;
  return result;
}

uint64_t type metadata accessor for SymbolImage()
{
  uint64_t result = qword_2F3550;
  if (!qword_2F3550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t SymbolImage.Kind.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x72616D6B63656863;
      break;
    case 2:
    case 3:
      unint64_t result = 0x73697370696C6C65;
      break;
    case 4:
      unint64_t result = 1937075312;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6B72616D78;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t View.symbol(imageScale:)()
{
  swift_getKeyPath();
  sub_26BCB0();

  return swift_release();
}

uint64_t SymbolImage.Kind.accessibilityText(localizer:)(uint64_t a1)
{
  uint64_t v3 = sub_26A220();
  __chkstk_darwin(v3 - 8);
  v5[0] = *v1;
  SymbolImage.Kind.accessibilityLocalizable.getter();
  sub_C224(a1, (uint64_t)v5);
  return sub_26BA00();
}

uint64_t SymbolImage.Kind.image.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

uint64_t SymbolImage.Kind.accessibilityLocalizable.getter()
{
  uint64_t v0 = sub_26CFD0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26CF60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26CF50();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizerLookupStrategy.default(_:), v0);
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

BooksUI::SymbolImage::Kind_optional __swiftcall SymbolImage.Kind.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2DC120;
  v8._object = object;
  unint64_t v5 = sub_26DC00(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_19AE10(unsigned __int8 *a1, char *a2)
{
  return sub_109C2C(*a1, *a2);
}

Swift::Int sub_19AE1C()
{
  return sub_1814FC();
}

uint64_t sub_19AE28()
{
  return sub_1813D4();
}

Swift::Int sub_19AE30()
{
  return sub_1814FC();
}

BooksUI::SymbolImage::Kind_optional sub_19AE38(Swift::String *a1)
{
  return SymbolImage.Kind.init(rawValue:)(*a1);
}

unint64_t sub_19AE44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SymbolImage.Kind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19AE6C()
{
  return sub_26D5E0();
}

uint64_t SymbolImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_4A98(&qword_2EB038);
  __chkstk_darwin(v2);
  Swift::OpaquePointer v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_26C270();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EC0C8);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_26C250();
  type metadata accessor for SymbolImage();
  sub_421B0((uint64_t)v8);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 28), v8, v5);
  *Swift::OpaquePointer v4 = KeyPath;
  sub_19B684((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36));
  *uint64_t v11 = v12;
  swift_retain();
  sub_B6DC((uint64_t)v4, &qword_2EB038);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return sub_19B6EC((uint64_t)v11, a1);
}

uint64_t sub_19B1CC()
{
  uint64_t v0 = sub_26C270();
  sub_6E18(v0, qword_2F34D0);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2F34D0);
  uint64_t v2 = enum case for Image.Scale.small(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_19B254@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9CB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_26C270();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F34D0);
  Swift::OpaquePointer v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_19B2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_19C26C();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_19B360()
{
  sub_19C208();

  return sub_26B0B0();
}

uint64_t sub_19B3A8()
{
  return sub_26B0B0();
}

uint64_t sub_19B3E8()
{
  return sub_26B0B0();
}

uint64_t sub_19B428(uint64_t a1)
{
  uint64_t v2 = sub_26C270();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  sub_19C208();
  sub_26B0C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_19B570()
{
  return sub_26ADB0();
}

uint64_t sub_19B594()
{
  return sub_26ADB0();
}

uint64_t sub_19B5B8(uint64_t a1)
{
  uint64_t v2 = sub_26C270();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26ADC0();
}

uint64_t sub_19B684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EB038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19B6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EC0C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19B758()
{
  unint64_t result = qword_2F34E8;
  if (!qword_2F34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F34E8);
  }
  return result;
}

uint64_t sub_19B7AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolImage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    sub_4A98(&qword_2EBC90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26C270();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for SymbolImage(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EBC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26C270();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *initializeWithCopy for SymbolImage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  sub_4A98(&qword_2EBC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26C270();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for SymbolImage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_B6DC((uint64_t)&a1[v4], &qword_2EBC90);
    sub_4A98(&qword_2EBC90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26C270();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for SymbolImage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_4A98(&qword_2EBC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26C270();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for SymbolImage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_B6DC((uint64_t)&a1[v4], &qword_2EBC90);
    uint64_t v7 = sub_4A98(&qword_2EBC90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26C270();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19BD00);
}

uint64_t sub_19BD00(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 248)
  {
    unsigned int v4 = *a1;
    if (v4 >= 8) {
      return v4 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2F34F0);
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19BDC0);
}

unsigned char *sub_19BDC0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 248)
  {
    *unint64_t result = a2 + 7;
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2F34F0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19BE68()
{
  sub_19BF00();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_19BF00()
{
  if (!qword_2F3560)
  {
    sub_26C270();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2F3560);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SymbolImage.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19C024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolImage.Kind()
{
  return &type metadata for SymbolImage.Kind;
}

void *sub_19C05C()
{
  return &protocol witness table for Image;
}

unint64_t sub_19C06C()
{
  unint64_t result = qword_2F3590;
  if (!qword_2F3590)
  {
    sub_7B0C(&qword_2EC0C8);
    sub_19C0E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3590);
  }
  return result;
}

unint64_t sub_19C0E8()
{
  unint64_t result = qword_2EB0D8;
  if (!qword_2EB0D8)
  {
    sub_7B0C(&qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0D8);
  }
  return result;
}

uint64_t sub_19C144()
{
  return swift_getWitnessTable();
}

unint64_t sub_19C1B4()
{
  unint64_t result = qword_2F3598;
  if (!qword_2F3598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3598);
  }
  return result;
}

unint64_t sub_19C208()
{
  unint64_t result = qword_2F35A0;
  if (!qword_2F35A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F35A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolImageScaleKey()
{
  return &type metadata for SymbolImageScaleKey;
}

unint64_t sub_19C26C()
{
  unint64_t result = qword_2F35A8[0];
  if (!qword_2F35A8[0])
  {
    sub_26C270();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F35A8);
  }
  return result;
}

uint64_t sub_19C2C8()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_19C304(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_19C344(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19C3AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_19C3F4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_19C450(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for AccessibilityHintFromPreference()
{
  return sub_129B4();
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionalTraits(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityConditionalTraits(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionalTraits()
{
  return &type metadata for AccessibilityConditionalTraits;
}

uint64_t destroy for AccessibilityConditionalHint()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s7BooksUI28AccessibilityConditionalHintVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccessibilityConditionalHint(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AccessibilityConditionalHint(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionalHint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityConditionalHint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionalHint()
{
  return &type metadata for AccessibilityConditionalHint;
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionallySelected(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessibilityConditionallySelected(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19C830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionallySelected()
{
  return &type metadata for AccessibilityConditionallySelected;
}

uint64_t sub_19C868()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19C884()
{
  return sub_26A100();
}

uint64_t sub_19C9A8@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_26B190();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v18 = sub_4A98(&qword_2F3690);
  uint64_t v10 = __chkstk_darwin(v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v17 - v13;
  if (a1)
  {
    sub_26B170();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    uint64_t v17 = sub_19E0D0(&qword_2F3668, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_4A98(&qword_2F3670);
    sub_7C18(&qword_2F3678, &qword_2F3670);
    sub_26DA10();
  }
  sub_4A98(&qword_2F3698);
  sub_7C18(&qword_2F36A0, &qword_2F3698);
  sub_26BF00();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v9, v3);
  if (a1)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_19E0D0(&qword_2F3668, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_4A98(&qword_2F3670);
    sub_7C18(&qword_2F3678, &qword_2F3670);
    sub_26DA10();
  }
  else
  {
    sub_26B170();
  }
  sub_26ABC0();
  v15(v7, v3);
  sub_B6DC((uint64_t)v12, &qword_2F3690);
  return sub_19CC4((uint64_t)v14, v19, &qword_2F3690);
}

uint64_t sub_19CD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_19C9A8(*v1, a1);
}

uint64_t sub_19CD24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19CD40@<X0>(int a1@<W1>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  int v16 = a1;
  uint64_t v5 = sub_4A98(&qword_2F3660);
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B190();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_19E0D0(&qword_2F3668, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_4A98(&qword_2F3670);
  sub_7C18(&qword_2F3678, &qword_2F3670);
  sub_26DA10();
  sub_4A98(&qword_2F3680);
  sub_7C18(&qword_2F3688, &qword_2F3680);
  sub_26BF00();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v16)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    sub_CC78();
    sub_26ABA0();
    sub_B6DC(a4, &qword_2F3660);
    return sub_19CC4((uint64_t)v7, a4, &qword_2F3660);
  }
  return result;
}

uint64_t sub_19CFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_19CD40(*v1, *((void **)v1 + 1), *((void *)v1 + 2), a1);
}

uint64_t sub_19CFC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19D00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v14[0] = a2;
  v14[1] = a1;
  uint64_t v6 = sub_4A98(&qword_2F36C0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26B190();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_19E0D0(&qword_2F3668, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_4A98(&qword_2F3670);
  sub_7C18(&qword_2F3678, &qword_2F3670);
  sub_26DA10();
  sub_4A98(&qword_2F36C8);
  sub_7C18(&qword_2F36D0, &qword_2F36C8);
  sub_26BF00();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (a3)
  {
    uint64_t v15 = (void *)v14[0];
    uint64_t v16 = a3;
    sub_CC78();
    sub_26ABA0();
    sub_B6DC(a4, &qword_2F36C0);
    return sub_19CC4((uint64_t)v8, a4, &qword_2F36C0);
  }
  return result;
}

uint64_t sub_19D27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19D00C(a1, *v2, v2[1], a2);
}

uint64_t sub_19D284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v46 = a7;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  type metadata accessor for AccessibilityHintFromPreference();
  swift_getWitnessTable();
  uint64_t v7 = sub_26B400();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v39 - v10;
  sub_26ABD0();
  sub_19DD50();
  sub_26B5C0();
  uint64_t v12 = sub_26ABD0();
  uint64_t v13 = sub_26A0F0();
  uint64_t v14 = sub_26A0D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v16 = sub_19DDF4();
  uint64_t v55 = WitnessTable;
  unint64_t v56 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v53 = v17;
  uint64_t v54 = v18;
  v39[1] = v12;
  uint64_t v19 = swift_getWitnessTable();
  v39[0] = v19;
  uint64_t v20 = sub_19E0D0(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  uint64_t v21 = sub_19E0D0(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  uint64_t v47 = v12;
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  uint64_t v50 = v19;
  uint64_t v51 = v20;
  uint64_t v52 = v21;
  uint64_t v22 = sub_26A110();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v39 - v27;
  uint64_t v29 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v42, v7);
  unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v41;
  *(void *)(v32 + 16) = v40;
  *(void *)(v32 + 24) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v32 + v30, v29, v7);
  uint64_t v34 = (void *)(v32 + v31);
  uint64_t v35 = v44;
  *uint64_t v34 = v43;
  v34[1] = v35;
  v34[2] = v45;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19C884();
  uint64_t v36 = swift_getWitnessTable();
  sub_CCCC(v26, v22, v36);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v23 + 8);
  v37(v26, v22);
  sub_CCCC(v28, v22, v36);
  return ((uint64_t (*)(char *, uint64_t))v37)(v28, v22);
}

uint64_t sub_19D6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v34 = a3;
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v44 = a8;
  uint64_t v36 = a7;
  type metadata accessor for AccessibilityHintFromPreference();
  swift_getWitnessTable();
  sub_26B400();
  uint64_t v12 = sub_26ABD0();
  uint64_t v43 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  unint64_t v39 = sub_19DD50();
  uint64_t v41 = sub_26B5C0();
  uint64_t v15 = sub_26ABD0();
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v40 = (char *)&v33 - v19;
  *(void *)&long long v49 = a3;
  *((void *)&v49 + 1) = a4;
  uint64_t v50 = a5;
  sub_4A98(&qword_2EAE70);
  sub_26C350();
  uint64_t v20 = v51;
  uint64_t v21 = v52;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v49 = v20;
  *((void *)&v49 + 1) = v21;
  sub_26C030();
  swift_bridgeObjectRelease();
  sub_C224(v38, (uint64_t)&v49);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  _OWORD v23[2] = a6;
  _OWORD v23[3] = v24;
  id v23[4] = v34;
  v23[5] = a4;
  v23[6] = v25;
  sub_AD44(&v49, (uint64_t)(v23 + 7));
  unint64_t v26 = sub_19DDF4();
  uint64_t v47 = WitnessTable;
  unint64_t v48 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v27 = swift_getWitnessTable();
  sub_26BE60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v45 = v27;
  uint64_t v46 = v28;
  uint64_t v29 = swift_getWitnessTable();
  unint64_t v30 = v40;
  sub_CCCC(v18, v15, v29);
  unint64_t v31 = *(void (**)(char *, uint64_t))(v42 + 8);
  v31(v18, v15);
  sub_CCCC(v30, v15, v29);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v15);
}

uint64_t sub_19DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C128(a1, (uint64_t)v10);
  uint64_t v11 = sub_26A220();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_B6DC((uint64_t)v10, &qword_2EA0C0);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v13 = sub_26A200();
    uint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[1] = v13;
  v17[2] = v14;
  sub_4A98(&qword_2EAE70);
  return sub_26C360();
}

uint64_t sub_19DC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19D284(a1, *v3, v3[1], v3[2], *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_19DC30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19DC4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4A98(&qword_2F3630);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *v1;
  sub_4A98(&qword_2F3638);
  sub_7C18(&qword_2F3640, &qword_2F3638);
  if (v6 == 1) {
    sub_26BEF0();
  }
  else {
    sub_26BF30();
  }
  return sub_19CC4((uint64_t)v5, a1, &qword_2F3630);
}

unint64_t sub_19DD50()
{
  unint64_t result = qword_2F3648;
  if (!qword_2F3648)
  {
    sub_7B0C(&qword_2EA0C0);
    sub_19E0D0(&qword_2F3650, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3648);
  }
  return result;
}

unint64_t sub_19DDF4()
{
  unint64_t result = qword_2F3658;
  if (!qword_2F3658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3658);
  }
  return result;
}

uint64_t sub_19DE48()
{
  type metadata accessor for AccessibilityHintFromPreference();
  swift_getWitnessTable();
  uint64_t v1 = sub_26B400();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19DF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  type metadata accessor for AccessibilityHintFromPreference();
  swift_getWitnessTable();
  uint64_t v7 = *(void *)(sub_26B400() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v2 + v9);
  uint64_t v11 = *(void *)(v2 + v9 + 8);
  uint64_t v12 = *(void *)(v2 + v9 + 16);

  return sub_19D6C8(a1, v2 + v8, v10, v11, v12, v5, v6, a2);
}

uint64_t sub_19E02C()
{
  swift_bridgeObjectRelease();
  swift_release();
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_19E074(uint64_t a1)
{
  return sub_19DAA8(a1, v1[4], v1[5], v1[6]);
}

ValueMetadata *type metadata accessor for AccessibilityOptionalHint()
{
  return &type metadata for AccessibilityOptionalHint;
}

uint64_t sub_19E098()
{
  return sub_19E350(&qword_2F36A8, &qword_2F3630, &qword_2F3640, &qword_2F3638);
}

uint64_t sub_19E0D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19E118()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E318()
{
  return sub_19E350(&qword_2F36B0, &qword_2F3660, &qword_2F3688, &qword_2F3680);
}

uint64_t sub_19E350(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    sub_19E0D0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19E41C()
{
  return sub_19E350(&qword_2F36B8, &qword_2F3690, &qword_2F36A0, &qword_2F3698);
}

uint64_t sub_19E454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19E470()
{
  return sub_19E350(&qword_2F36D8, &qword_2F36C0, &qword_2F36D0, &qword_2F36C8);
}

uint64_t NativeIntentDispatcher.withBuiltInIntentImplementations.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26CFB0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_19E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26D6F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_26D6E0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_B6DC(a1, &qword_2EA2E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_26D6B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t HighlightAttributionViewLoader.__allocating_init(id:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  HighlightAttributionViewLoader.init(id:provider:)(a1, a2, a3);
  return v6;
}

void *sub_19E718()
{
  swift_getKeyPath();
  sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
  sub_269A10();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

id sub_19E7C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
  sub_269A10();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 16);
  *a2 = v4;

  return v4;
}

uint64_t sub_19E878(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
  id v2 = v1;
  sub_269A00();

  return swift_release();
}

void *HighlightAttributionViewLoader.init(id:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3[2] = 0;
  v3[3] = &_swiftEmptySetSingleton;
  sub_269A40();
  sub_19EC14(a3, (uint64_t)&v18);
  if (v19)
  {
    sub_AD44(&v18, (uint64_t)v20);
    uint64_t v12 = sub_26D6F0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_C224((uint64_t)v20, (uint64_t)&v18);
    sub_26D6D0();
    swift_retain();
    uint64_t v13 = sub_26D6C0();
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v4;
    v14[5] = a1;
    v14[6] = a2;
    sub_AD44(&v18, (uint64_t)(v14 + 7));
    v14[12] = v8;
    sub_19E514((uint64_t)v11, (uint64_t)&unk_2F36F0, (uint64_t)v14);
    swift_release();
    sub_B6DC(a3, &qword_2EBC70);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_B6DC((uint64_t)&v18, &qword_2EBC70);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v17[-16] = v3;
    *(void *)&v17[-8] = 0;
    v20[0] = v3;
    sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
    sub_269A00();
    swift_release();
    sub_B6DC(a3, &qword_2EBC70);
  }
  return v4;
}

uint64_t sub_19EC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HighlightAttributionViewLoader()
{
  uint64_t result = qword_2F3728;
  if (!qword_2F3728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_19ECD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  sub_4A98(&qword_2F3838);
  v8[13] = swift_task_alloc();
  uint64_t v9 = sub_4A98(&qword_2F3840);
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  sub_26D6D0();
  v8[17] = sub_26D6C0();
  uint64_t v11 = sub_26D6B0();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_19EE00, v11, v10);
}

uint64_t sub_19EE00()
{
  uint64_t v1 = *(void *)(v0 + 80);
  id v2 = *(void **)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  swift_release();
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  sub_4ADC(v2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, v4, v5);
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = v2[3];
    uint64_t v11 = v2[4];
    sub_4ADC(*(void **)(v0 + 88), v10);
    uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(v8, v9, v10, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v29 = *(void *)(v0 + 120);
  uint64_t v14 = *(void **)(v0 + 88);
  uint64_t v27 = *(void *)(v0 + 96);
  uint64_t v28 = *(void *)(v0 + 112);
  uint64_t v26 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 72);
  swift_getKeyPath();
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v12;
  *(void *)(v0 + 40) = v15;
  sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
  sub_269A00();
  swift_release();

  swift_task_dealloc();
  uint64_t v17 = v2[3];
  uint64_t v18 = v2[4];
  sub_4ADC(v14, v17);
  *(void *)(v0 + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  sub_19FB34();
  *(void *)(v0 + 56) = sub_26D8B0();
  uint64_t v19 = sub_26D890();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  sub_4A98(&qword_2F3848);
  sub_7C18(&qword_2F3850, &qword_2F3848);
  sub_19FB74(&qword_2F3858, (void (*)(uint64_t))sub_19FB34);
  sub_26A5C0();
  sub_B6DC(v24, &qword_2F3838);

  swift_release();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  _OWORD v21[3] = v25;
  void v21[4] = v26;
  v21[5] = v27;
  sub_7C18(&qword_2F3860, &qword_2F3840);
  swift_bridgeObjectRetain();
  sub_26A5D0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v13, v28);
  swift_beginAccess();
  sub_26A540();
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_19F260()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_19F2B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (uint64_t)(v1 + 7);
  uint64_t v10 = v1[12];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_12134;
  return sub_19ECD0(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_19F390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    sub_4ADC(a1, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, a4, v7, v8);
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      uint64_t v13 = a1[3];
      uint64_t v14 = a1[4];
      sub_4ADC(a1, v13);
      uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 24))(v11, v12, v13, v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_19FB74((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
    sub_269A00();
    swift_release();
    swift_release();
  }
}

uint64_t HighlightAttributionViewLoader.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7BooksUI30HighlightAttributionViewLoader___observationRegistrar;
  uint64_t v2 = sub_269A50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t HighlightAttributionViewLoader.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7BooksUI30HighlightAttributionViewLoader___observationRegistrar;
  uint64_t v2 = sub_269A50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

double sub_19F680()
{
  qword_315308 = 0;
  double result = 0.0;
  xmmword_3152E8 = 0u;
  unk_3152F8 = 0u;
  return result;
}

uint64_t sub_19F698@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9CC0 != -1) {
    swift_once();
  }

  return sub_19EC14((uint64_t)&xmmword_3152E8, a1);
}

uint64_t View.sharedWithYouController(from:)()
{
  swift_getKeyPath();
  sub_4A98(&qword_2F36F8);
  sub_26CCB0();
  sub_26D150();
  sub_26BCB0();
  swift_release();
  return sub_B6DC((uint64_t)v1, &qword_2EBC70);
}

uint64_t sub_19F7C0()
{
  sub_19FAA8();

  return sub_26B0B0();
}

uint64_t sub_19F808()
{
  return sub_26B0B0();
}

uint64_t sub_19F848()
{
  return sub_26B0B0();
}

uint64_t sub_19F888(uint64_t a1)
{
  sub_19EC14(a1, (uint64_t)v3);
  sub_19EC14((uint64_t)v3, (uint64_t)&v2);
  sub_19FAA8();
  sub_26B0C0();
  return sub_B6DC((uint64_t)v3, &qword_2EBC70);
}

uint64_t dispatch thunk of HighlightAttributionViewProviding.refreshPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HighlightAttributionViewProviding.highlightIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HighlightAttributionViewProviding.createHighlightAttributionView(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_19F930()
{
  return type metadata accessor for HighlightAttributionViewLoader();
}

uint64_t sub_19F938()
{
  uint64_t result = sub_269A50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for HighlightAttributionViewLoader(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HighlightAttributionViewLoader);
}

uint64_t dispatch thunk of HighlightAttributionViewLoader.__allocating_init(id:provider:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_19FA0C()
{
  return swift_getWitnessTable();
}

unint64_t sub_19FAA8()
{
  unint64_t result = qword_2F3828;
  if (!qword_2F3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3828);
  }
  return result;
}

uint64_t sub_19FAFC()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_19FB34()
{
  unint64_t result = qword_2EA330;
  if (!qword_2EA330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2EA330);
  }
  return result;
}

uint64_t sub_19FB74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19FBBC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_19FBF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_19FC34(void *a1)
{
  sub_19F390(a1, v1[2], v1[3], v1[4]);
}

ValueMetadata *type metadata accessor for SharedWithYouControllerKey()
{
  return &type metadata for SharedWithYouControllerKey;
}

uint64_t ButtonViewModel.init(size:shape:kind:style:content:isEnabled:action:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned __int8 *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v35 = a7;
  int v34 = a6;
  uint64_t v33 = a5;
  uint64_t v13 = sub_26B980();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v15) = *a2;
  HIDWORD(v27) = *a1;
  int v28 = v15;
  int v29 = *a3;
  long long v32 = *a4;
  uint64_t v17 = *((void *)a4 + 2);
  uint64_t v30 = *((void *)a4 + 3);
  uint64_t v31 = v17;
  uint64_t v36 = 0x403C000000000000;
  uint64_t v18 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v19(v16, enum case for Font.TextStyle.subheadline(_:), v13);
  sub_4F928();
  sub_26A810();
  uint64_t v20 = (int *)type metadata accessor for ButtonViewModel(0);
  uint64_t v36 = 0x4008000000000000;
  v19(v16, v18, v13);
  sub_26A810();
  uint64_t v21 = (uint64_t *)(a8 + v20[6]);
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a8 + v20[14];
  uint64_t v23 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(unsigned char *)(a8 + v20[7]) = BYTE4(v27);
  *(unsigned char *)(a8 + v20[8]) = v28;
  *(unsigned char *)(a8 + v20[9]) = v29;
  uint64_t v24 = a8 + v20[10];
  *(_OWORD *)uint64_t v24 = v32;
  uint64_t v25 = v30;
  *(void *)(v24 + 16) = v31;
  *(void *)(v24 + 24) = v25;
  sub_1A0624(v33, a8 + v20[11], type metadata accessor for ButtonViewModel.Content);
  *(unsigned char *)(a8 + v20[12]) = v34;
  return sub_1A0624(v35, a8 + v20[13], type metadata accessor for ButtonViewModel.ActionKind);
}

uint64_t type metadata accessor for ButtonViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F38D0);
}

unint64_t ButtonViewModel.theme.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v57 = type metadata accessor for ButtonViewModel.Content(0);
  uint64_t v3 = __chkstk_darwin(v57);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v53 - v6;
  __chkstk_darwin(v5);
  uint64_t v56 = (uint64_t)&v53 - v8;
  uint64_t v9 = type metadata accessor for ColorConstants(0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v53 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = type metadata accessor for ButtonViewModel(0);
  uint64_t v25 = v24;
  uint64_t v26 = (unint64_t *)(v1 + *(int *)(v24 + 40));
  unint64_t v28 = *v26;
  unint64_t v27 = v26[1];
  uint64_t v29 = v26[3];
  unint64_t v60 = v26[2];
  uint64_t v55 = v7;
  uint64_t v61 = v29;
  uint64_t v62 = v27;
  switch(v28)
  {
    case 0uLL:
      uint64_t v33 = sub_1A08FC();
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v23);
      uint64_t v58 = ColorConstants.booksButtonBackground.getter();
      sub_1A1014((uint64_t)v23, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v21);
      uint64_t v36 = sub_1A0B60();
      uint64_t v37 = (uint64_t)v21;
      uint64_t v32 = v36;
      sub_1A1014(v37, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v18);
      id v38 = [self tertiaryLabelColor];
      uint64_t v29 = sub_26C230();
      uint64_t v35 = (uint64_t)v18;
      goto LABEL_8;
    case 1uLL:
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v23);
      uint64_t v53 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
      sub_1A1014((uint64_t)v23, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v21);
      uint64_t v58 = ColorConstants.booksSecondaryButtonBackground.getter();
      sub_1A1014((uint64_t)v21, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v18);
      uint64_t v32 = sub_1A0B60();
      sub_1A1014((uint64_t)v18, type metadata accessor for ColorConstants);
      uint64_t v33 = v53;
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v15);
      id v34 = [self tertiaryLabelColor];
      uint64_t v29 = sub_26C230();
      uint64_t v35 = (uint64_t)v15;
LABEL_8:
      sub_1A1014(v35, type metadata accessor for ColorConstants);
      unint64_t v39 = v59;
      break;
    case 2uLL:
      uint64_t v30 = *(int *)(v24 + 36);
      int v31 = *(unsigned __int8 *)(v2 + v30);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v23);
      if (v31 == 1)
      {
        _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
        uint64_t v53 = sub_26C1C0();
        swift_release();
      }
      else
      {
        uint64_t v53 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
      }
      sub_1A1014((uint64_t)v23, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v12);
      uint64_t v58 = ColorConstants.vibrantButtonBackground.getter();
      sub_1A1014((uint64_t)v12, type metadata accessor for ColorConstants);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v23);
      ColorConstants.vibrantButtonBackground.getter();
      sub_1A1014((uint64_t)v23, type metadata accessor for ColorConstants);
      uint64_t v40 = sub_26C1C0();
      swift_release();
      int v41 = *(unsigned __int8 *)(v2 + v30);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v23);
      if (v41 == 1)
      {
        _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
        sub_26C1C0();
        swift_release();
      }
      else
      {
        _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
      }
      unint64_t v39 = v59;
      uint64_t v33 = v53;
      uint64_t v32 = v40;
      sub_1A1014((uint64_t)v23, type metadata accessor for ColorConstants);
      uint64_t v29 = sub_26C1C0();
      swift_release();
      break;
    default:
      unint64_t v39 = v59;
      uint64_t v32 = v60;
      uint64_t v58 = v62;
      uint64_t v33 = v28;
      break;
  }
  if (*(unsigned char *)(v2 + *(int *)(v25 + 28)) == 2)
  {
    unint64_t v60 = v29;
    uint64_t v42 = v33;
    uint64_t v43 = v32;
    uint64_t v44 = v2 + *(int *)(v25 + 44);
    uint64_t v45 = v56;
    sub_1A6100(v44, v56, type metadata accessor for ButtonViewModel.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A0FB0(v28);
      swift_bridgeObjectRelease();
      uint64_t v33 = v42;
      uint64_t v29 = v60;
    }
    else
    {
      sub_1A0FB0(v28);
      sub_1A1014(v45, type metadata accessor for ButtonViewModel.Content);
      uint64_t v48 = (uint64_t)v55;
      sub_1A6100(v44, (uint64_t)v55, type metadata accessor for ButtonViewModel.Content);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_1A1014(v48, type metadata accessor for ButtonViewModel.Content);
      BOOL v50 = EnumCaseMultiPayload == 7;
      uint64_t v47 = v58;
      uint64_t v32 = v43;
      uint64_t v33 = v42;
      uint64_t v29 = v60;
      if (!v50)
      {
        sub_1A6100(v44, v54, type metadata accessor for ButtonViewModel.Content);
        if (swift_getEnumCaseMultiPayload() != 6)
        {
          unint64_t result = sub_1A1014(v54, type metadata accessor for ButtonViewModel.Content);
          goto LABEL_22;
        }
      }
    }
    uint64_t v51 = sub_26C170();
    swift_release();
    uint64_t v52 = sub_26C170();
    unint64_t result = swift_release();
    uint64_t v32 = v52;
    uint64_t v47 = v51;
  }
  else
  {
    unint64_t result = sub_1A0FB0(v28);
    uint64_t v47 = v58;
  }
LABEL_22:
  *unint64_t v39 = v33;
  v39[1] = v47;
  void v39[2] = v32;
  v39[3] = v29;
  return result;
}

uint64_t static ButtonViewModel.Size.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

uint64_t type metadata accessor for ButtonViewModel.Content(uint64_t a1)
{
  return sub_2A148(a1, qword_2F3A48);
}

uint64_t sub_1A0624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ButtonViewModel.ActionKind(uint64_t a1)
{
  return sub_2A148(a1, qword_2F39A0);
}

uint64_t ButtonViewModel.progressViewModel(foregroundColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ButtonViewModel(0);
  uint64_t v9 = v8;
  if ((*(unsigned char *)(v2 + v8[9]) & 1) != 0 || *(unsigned char *)(v2 + v8[7]) == 2)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v7);
    uint64_t v10 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_1A1014((uint64_t)v7, type metadata accessor for ColorConstants);
    uint64_t v11 = (unint64_t *)(v2 + v9[10]);
    unint64_t v12 = *v11;
    if (*v11 == 2)
    {
      unint64_t v13 = 2;
    }
    else
    {
      sub_1A0FB0(*v11);
      unint64_t v13 = v12;
    }
    sub_1A139C(v13);
    sub_1A139C(2uLL);
    sub_4A98(&qword_2EBDF0);
    sub_26A830();
    uint64_t v14 = v23;
    uint64_t result = sub_26A830();
    uint64_t v16 = v23;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12 == 2;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v16;
  }
  else
  {
    uint64_t v17 = (unint64_t *)(v2 + v8[10]);
    unint64_t v18 = *v17;
    if (*v17 == 2)
    {
      unint64_t v19 = 2;
    }
    else
    {
      sub_1A0FB0(*v17);
      unint64_t v19 = v18;
    }
    sub_1A139C(v19);
    sub_1A139C(2uLL);
    sub_4A98(&qword_2EBDF0);
    sub_26A830();
    uint64_t v20 = v23;
    sub_26A830();
    uint64_t v21 = v23;
    *(void *)a2 = a1;
    *(unsigned char *)(a2 + 8) = v18 == 2;
    *(void *)(a2 + 16) = v20;
    *(void *)(a2 + 24) = v21;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A08FC()
{
  uint64_t v1 = sub_26A6E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v19 - v12;
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for ButtonViewModel(0) + 36)) == 1)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v13);
    sub_1A6100((uint64_t)v13, (uint64_t)v7, type metadata accessor for ColorConstants.Environment);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ColorScheme.dark(_:), v1);
    sub_61674();
    char v14 = sub_26D360();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
    v15(v4, v1);
    v15(v7, v1);
    if (v14) {
      uint64_t v16 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v16 = ColorConstants.booksButtonBackground.getter();
    }
    uint64_t v17 = v16;
  }
  else
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v11);
    uint64_t v17 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    unint64_t v13 = v11;
  }
  sub_1A1014((uint64_t)v13, type metadata accessor for ColorConstants);
  return v17;
}

uint64_t sub_1A0B60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6100(v1, (uint64_t)v12, type metadata accessor for ColorConstants.Environment);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ButtonTheme.init(foregroundColor:backgroundColor:disabledBackgroundColor:disabledForegroundColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ButtonViewModel.useClearBackgroundColor.getter()
{
  uint64_t v1 = type metadata accessor for ButtonViewModel.Content(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v14 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = type metadata accessor for ButtonViewModel(0);
  if (*(unsigned char *)(v0 + *(int *)(v10 + 28)) == 2)
  {
    uint64_t v11 = v0 + *(int *)(v10 + 44);
    sub_1A6100(v11, (uint64_t)v9, type metadata accessor for ButtonViewModel.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    sub_1A1014((uint64_t)v9, type metadata accessor for ButtonViewModel.Content);
    sub_1A6100(v11, (uint64_t)v7, type metadata accessor for ButtonViewModel.Content);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1A1014((uint64_t)v7, type metadata accessor for ButtonViewModel.Content);
    if (EnumCaseMultiPayload == 7) {
      return 1;
    }
    sub_1A6100(v11, (uint64_t)v4, type metadata accessor for ButtonViewModel.Content);
    if (swift_getEnumCaseMultiPayload() == 6) {
      return 1;
    }
    sub_1A1014((uint64_t)v4, type metadata accessor for ButtonViewModel.Content);
  }
  return 0;
}

unint64_t sub_1A0FB0(unint64_t result)
{
  if (result >= 3)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A1014(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s7BooksUI11ButtonThemeV2eeoiySbAC_ACtFZ_0()
{
  if ((sub_26C0E0() & 1) == 0 || (sub_26C0E0() & 1) == 0 || (sub_26C0E0() & 1) == 0) {
    return 0;
  }

  return sub_26C0E0();
}

BOOL _s7BooksUI15ButtonViewModelV5StyleO2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      sub_1A139C(0);
      unint64_t v4 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    if (v3 == 1)
    {
      uint64_t v5 = 1;
      sub_1A139C(1uLL);
      sub_1A139C(1uLL);
      return v5;
    }
    goto LABEL_12;
  }
  if (v2 != 2)
  {
    if (v3 >= 3)
    {
      sub_1A0FB0(*a2);
      sub_1A0FB0(v2);
      sub_1A0FB0(v3);
      sub_1A0FB0(v2);
      if (sub_26C0E0() & 1) != 0 && (sub_26C0E0() & 1) != 0 && (sub_26C0E0())
      {
        char v8 = sub_26C0E0();
        sub_1A139C(v2);
        sub_1A139C(v3);
        sub_1A139C(v3);
        sub_1A139C(v2);
        return (v8 & 1) != 0;
      }
      sub_1A139C(v2);
      sub_1A139C(v3);
      sub_1A139C(v3);
      unint64_t v6 = v2;
LABEL_13:
      sub_1A139C(v6);
      return 0;
    }
LABEL_12:
    sub_1A0FB0(*a2);
    sub_1A0FB0(v2);
    sub_1A139C(v2);
    unint64_t v6 = v3;
    goto LABEL_13;
  }
  if (v3 != 2) {
    goto LABEL_12;
  }
  sub_1A139C(2uLL);
  unint64_t v4 = 2;
LABEL_8:
  sub_1A139C(v4);
  return 1;
}

unint64_t sub_1A139C(unint64_t result)
{
  if (result >= 3)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1A1404()
{
  unint64_t result = qword_2F3868;
  if (!qword_2F3868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3868);
  }
  return result;
}

unint64_t sub_1A145C()
{
  unint64_t result = qword_2F3870;
  if (!qword_2F3870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3870);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ButtonViewModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    char v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    if (*v17 >= 3uLL)
    {
      uint64_t v19 = v17[1];
      uint64_t v20 = v17[2];
      void *v16 = *v17;
      v16[1] = v19;
      uint64_t v21 = v17[3];
      v16[2] = v20;
      v16[3] = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
    }
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v26 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
        goto LABEL_17;
      case 1u:
        uint64_t v27 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v27;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v28 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v28;
        uint64_t v29 = (void *)v24[2];
        _OWORD v23[2] = v29;
        swift_bridgeObjectRetain();
        id v30 = v29;
        uint64_t v31 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v32 = (char *)v23 + v31;
        uint64_t v33 = (char *)v24 + v31;
        uint64_t v34 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_17;
      case 3u:
        uint64_t v35 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v35;
        swift_bridgeObjectRetain();
        uint64_t v36 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v37 = (char *)v23 + v36;
        id v38 = (char *)v24 + v36;
        uint64_t v39 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_17;
      case 4u:
        uint64_t v40 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v23, v24, v40);
        uint64_t v41 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v42 = (void *)((char *)v23 + v41);
        uint64_t v43 = (void *)((char *)v24 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 5u:
        uint64_t v45 = sub_26A220();
        uint64_t v46 = *(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16);
        v46(v23, v24, v45);
        uint64_t v47 = sub_4A98(&qword_2EE448);
        v46((void *)((char *)v23 + *(int *)(v47 + 48)), (void *)((char *)v24 + *(int *)(v47 + 48)), v45);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
        break;
    }
    uint64_t v48 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    long long v49 = (char *)a1 + v48;
    BOOL v50 = (char *)a2 + v48;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      uint64_t v52 = *((void *)v50 + 3);
      if (v52)
      {
        uint64_t v53 = *((void *)v50 + 4);
        *((void *)v49 + 3) = v52;
        *((void *)v49 + 4) = v53;
        (**(void (***)(char *, char *))(v52 - 8))(v49, v50);
      }
      else
      {
        long long v54 = *((_OWORD *)v50 + 1);
        *(_OWORD *)long long v49 = *(_OWORD *)v50;
        *((_OWORD *)v49 + 1) = v54;
        *((void *)v49 + 4) = *((void *)v50 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = a3[14];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = sub_26A220();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_4A98(&qword_2EA0C0);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
  }
  return a1;
}

uint64_t destroy for ButtonViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(a1 + a2[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v8 = a1 + a2[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_11;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v9 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_10;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v9 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_10:
      v8 += v9;
LABEL_11:
      uint64_t v10 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
      break;
    case 4u:
      uint64_t v11 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v12 = sub_26A220();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      v13(v8, v12);
      uint64_t v14 = sub_4A98(&qword_2EE448);
      v13(v8 + *(int *)(v14 + 48), v12);
      break;
    default:
      break;
  }
  uint64_t v15 = a1 + a2[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else if (*(void *)(v15 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v15);
  }
  uint64_t v17 = a1 + a2[14];
  uint64_t v18 = sub_26A220();
  uint64_t v21 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v18);
  if (!result)
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    return v20(v17, v18);
  }
  return result;
}

uint64_t initializeWithCopy for ButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  if (*v15 >= 3uLL)
  {
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    void *v14 = *v15;
    v14[1] = v17;
    uint64_t v19 = v15[3];
    void v14[2] = v18;
    v14[3] = v19;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
  }
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v24 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
      goto LABEL_15;
    case 1u:
      uint64_t v25 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v25;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      uint64_t v26 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v26;
      uint64_t v27 = (void *)v22[2];
      v21[2] = v27;
      swift_bridgeObjectRetain();
      id v28 = v27;
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v30 = (char *)v21 + v29;
      uint64_t v31 = (char *)v22 + v29;
      uint64_t v32 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_15;
    case 3u:
      uint64_t v33 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v33;
      swift_bridgeObjectRetain();
      uint64_t v34 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v35 = (char *)v21 + v34;
      uint64_t v36 = (char *)v22 + v34;
      uint64_t v37 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      goto LABEL_15;
    case 4u:
      uint64_t v38 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v21, v22, v38);
      uint64_t v39 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v40 = (void *)((char *)v21 + v39);
      uint64_t v41 = (void *)((char *)v22 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 5u:
      uint64_t v43 = sub_26A220();
      uint64_t v44 = *(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16);
      v44(v21, v22, v43);
      uint64_t v45 = sub_4A98(&qword_2EE448);
      v44((void *)((char *)v21 + *(int *)(v45 + 48)), (void *)((char *)v22 + *(int *)(v45 + 48)), v43);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      break;
  }
  uint64_t v46 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  }
  else
  {
    uint64_t v50 = *(void *)(v48 + 24);
    if (v50)
    {
      uint64_t v51 = *(void *)(v48 + 32);
      *(void *)(v47 + 24) = v50;
      *(void *)(v47 + 32) = v51;
      (**(void (***)(uint64_t, uint64_t))(v50 - 8))(v47, v48);
    }
    else
    {
      long long v52 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v52;
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = a3[14];
  long long v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  uint64_t v56 = sub_26A220();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_4A98(&qword_2EA0C0);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  return a1;
}

uint64_t assignWithCopy for ButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  unint64_t v15 = *(void *)(a2 + v12);
  if (*(void *)(a1 + v12) >= 3uLL)
  {
    if (v15 < 3)
    {
      sub_B6DC(a1 + v12, &qword_2EE748);
      long long v17 = *(_OWORD *)(v14 + 16);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *(_OWORD *)(v13 + 16) = v17;
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    *(void *)uint64_t v13 = v15;
    swift_retain();
    swift_release();
    *(void *)(v13 + 8) = *(void *)(v14 + 8);
    swift_retain();
    swift_release();
    *(void *)(v13 + 16) = *(void *)(v14 + 16);
    swift_retain();
    swift_release();
    *(void *)(v13 + 24) = *(void *)(v14 + 24);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_14;
    }
LABEL_17:
    *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
    goto LABEL_30;
  }
  if (v15 >= 3)
  {
    *(void *)uint64_t v13 = v15;
    *(void *)(v13 + 8) = *(void *)(v14 + 8);
    *(void *)(v13 + 16) = *(void *)(v14 + 16);
    *(void *)(v13 + 24) = *(void *)(v14 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  if (a1 == a2) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_1A1014(a1 + v18, type metadata accessor for ButtonViewModel.Content);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
      goto LABEL_23;
    case 1u:
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      uint64_t v23 = (void *)v20[2];
      v19[2] = v23;
      swift_bridgeObjectRetain();
      id v24 = v23;
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = (char *)v20 + v25;
      uint64_t v28 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      goto LABEL_23;
    case 3u:
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v30 = (char *)v19 + v29;
      uint64_t v31 = (char *)v20 + v29;
      uint64_t v32 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_23;
    case 4u:
      uint64_t v33 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v19, v20, v33);
      uint64_t v34 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v35 = (void *)((char *)v19 + v34);
      uint64_t v36 = (void *)((char *)v20 + v34);
      *uint64_t v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 5u:
      uint64_t v37 = sub_26A220();
      uint64_t v38 = *(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16);
      v38(v19, v20, v37);
      uint64_t v39 = sub_4A98(&qword_2EE448);
      v38((void *)((char *)v19 + *(int *)(v39 + 48)), (void *)((char *)v20 + *(int *)(v39 + 48)), v37);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (long long *)(a2 + v40);
  sub_1A1014(a1 + v40, type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = sub_2696C0();
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  else
  {
    uint64_t v44 = *((void *)v42 + 3);
    if (v44)
    {
      *(void *)(v41 + 24) = v44;
      *(void *)(v41 + 32) = *((void *)v42 + 4);
      (**(void (***)(uint64_t, long long *))(v44 - 8))(v41, v42);
    }
    else
    {
      long long v45 = *v42;
      long long v46 = v42[1];
      *(void *)(v41 + 32) = *((void *)v42 + 4);
      *(_OWORD *)uint64_t v41 = v45;
      *(_OWORD *)(v41 + 16) = v46;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v47 = a3[14];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = sub_26A220();
  uint64_t v51 = *(void *)(v50 - 8);
  long long v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(void *, void *, uint64_t))(v51 + 24))(v48, v49, v50);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_35;
  }
  if (v54)
  {
LABEL_35:
    uint64_t v55 = sub_4A98(&qword_2EA0C0);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v51 + 16))(v48, v49, v50);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t initializeWithTake for ButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  unint64_t v15 = (_OWORD *)(a1 + v14);
  long long v16 = (_OWORD *)(a2 + v14);
  long long v17 = v16[1];
  *unint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      goto LABEL_11;
    case 2u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[2] = v20[2];
      uint64_t v23 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_11;
    case 3u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_11;
    case 4u:
      uint64_t v31 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v19, v20, v31);
      uint64_t v32 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v19 + *(int *)(v32 + 48)) = *(_OWORD *)((char *)v20 + *(int *)(v32 + 48));
      goto LABEL_11;
    case 5u:
      uint64_t v33 = sub_26A220();
      uint64_t v34 = *(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32);
      v34(v19, v20, v33);
      uint64_t v35 = sub_4A98(&qword_2EE448);
      v34((void *)((char *)v19 + *(int *)(v35 + 48)), (void *)((char *)v20 + *(int *)(v35 + 48)), v33);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  uint64_t v36 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  uint64_t v41 = a3[14];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  uint64_t v44 = sub_26A220();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = sub_4A98(&qword_2EA0C0);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  return a1;
}

uint64_t assignWithTake for ButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EA968);
    uint64_t v11 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  unint64_t v15 = (void *)(a1 + v14);
  long long v16 = (void *)(a2 + v14);
  if (*(void *)(a1 + v14) >= 3uLL)
  {
    if (*v16 >= 3uLL)
    {
      *unint64_t v15 = *v16;
      swift_release();
      v15[1] = v16[1];
      swift_release();
      v15[2] = v16[2];
      swift_release();
      v15[3] = v16[3];
      swift_release();
      if (a1 != a2) {
        goto LABEL_9;
      }
LABEL_12:
      *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
      goto LABEL_22;
    }
    sub_B6DC(a1 + v14, &qword_2EE748);
  }
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_1A1014(a1 + v18, type metadata accessor for ButtonViewModel.Content);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      goto LABEL_18;
    case 2u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[2] = v20[2];
      uint64_t v23 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_18;
    case 3u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_18;
    case 4u:
      uint64_t v31 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v19, v20, v31);
      uint64_t v32 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v19 + *(int *)(v32 + 48)) = *(_OWORD *)((char *)v20 + *(int *)(v32 + 48));
      goto LABEL_18;
    case 5u:
      uint64_t v33 = sub_26A220();
      uint64_t v34 = *(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32);
      v34(v19, v20, v33);
      uint64_t v35 = sub_4A98(&qword_2EE448);
      v34((void *)((char *)v19 + *(int *)(v35 + 48)), (void *)((char *)v20 + *(int *)(v35 + 48)), v33);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  uint64_t v36 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  sub_1A1014(a1 + v36, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v39 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
LABEL_22:
  uint64_t v41 = a3[14];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = sub_26A220();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v45 + 40))(v42, v43, v44);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_27;
  }
  if (v48)
  {
LABEL_27:
    uint64_t v49 = sub_4A98(&qword_2EA0C0);
    memcpy(v42, v43, *(void *)(*(void *)(v49 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v45 + 32))(v42, v43, v44);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A39B8);
}

uint64_t sub_1A39B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  if (a2 == 2147483644)
  {
    unint64_t v14 = *(void *)(a1 + a3[10]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 3;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v17 = type metadata accessor for ButtonViewModel.Content(0);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[11];
      goto LABEL_15;
    }
    uint64_t v18 = type metadata accessor for ButtonViewModel.ActionKind(0);
    if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
    {
      uint64_t v8 = v18;
      uint64_t v12 = *(void *)(v18 - 8);
      uint64_t v13 = a3[13];
      goto LABEL_15;
    }
    uint64_t v19 = sub_4A98(&qword_2EA0C0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
    uint64_t v21 = v19;
    uint64_t v22 = a1 + a3[14];
    return v20(v22, a2, v21);
  }
}

uint64_t storeEnumTagSinglePayload for ButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A3BFC);
}

uint64_t sub_1A3BFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  if (a3 == 2147483644)
  {
    *(void *)(a1 + a4[10]) = (a2 + 2);
    return result;
  }
  uint64_t v16 = type metadata accessor for ButtonViewModel.Content(0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_11;
  }
  uint64_t v17 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4A98(&qword_2EA0C0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[14];

  return v19(v21, a2, a2, v20);
}

void sub_1A3E20()
{
  sub_4F8CC();
  if (v0 <= 0x3F)
  {
    sub_1A401C(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ButtonViewModel.Content(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for ButtonViewModel.ActionKind(319);
        if (v3 <= 0x3F)
        {
          sub_1A401C(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1A401C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonViewModel.ActionKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2696C0();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[3];
      if (v8)
      {
        uint64_t v9 = a2[4];
        *(void *)(a1 + 24) = v8;
        *(void *)(a1 + 32) = v9;
        (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = a2[4];
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ButtonViewModel.ActionKind(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_2696C0();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (*(void *)(a1 + 24))
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  return result;
}

uint64_t initializeWithCopy for ButtonViewModel.ActionKind(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    }
    else
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ButtonViewModel.ActionKind(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_1A1014(a1, type metadata accessor for ButtonViewModel.ActionKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2696C0();
      (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v5 = *((void *)a2 + 3);
      if (v5)
      {
        *(void *)(a1 + 24) = v5;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v5 - 8))(a1, a2);
      }
      else
      {
        long long v6 = *a2;
        long long v7 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v6;
        *(_OWORD *)(a1 + 16) = v7;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ButtonViewModel.ActionKind(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ButtonViewModel.ActionKind(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A1014((uint64_t)a1, type metadata accessor for ButtonViewModel.ActionKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2696C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A4620()
{
  uint64_t result = sub_2696C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonViewModel.Shape()
{
  return &type metadata for ButtonViewModel.Shape;
}

uint64_t getEnumTagSinglePayload for ButtonViewModel.Size(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A4784);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ButtonViewModel.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A486CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1A4894(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1A48B0(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonViewModel.Size()
{
  return &type metadata for ButtonViewModel.Size;
}

unsigned char *_s7BooksUI15ButtonViewModelV5ShapeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A49A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonViewModel.Kind()
{
  return &type metadata for ButtonViewModel.Kind;
}

unint64_t destroy for ButtonViewModel.Style(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ButtonViewModel.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for ButtonViewModel.Style(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ButtonViewModel.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_5:
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonViewModel.Style(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ButtonViewModel.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1A4D20(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A4D38(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[2] = 0;
    result[3] = 0;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ButtonViewModel.Style()
{
  return &type metadata for ButtonViewModel.Style;
}

uint64_t *initializeBufferWithCopyOfBuffer for ButtonViewModel.Content(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_26A220();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = (void *)a2[2];
        a1[2] = (uint64_t)v12;
        swift_bridgeObjectRetain();
        id v13 = v12;
        uint64_t v14 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        swift_bridgeObjectRetain();
        uint64_t v19 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v23 = sub_26A220();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v25 = (uint64_t *)((char *)a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        uint64_t v27 = v26[1];
        *uint64_t v25 = *v26;
        v25[1] = v27;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v28 = sub_26A220();
        uint64_t v29 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(a1, a2, v28);
        uint64_t v30 = sub_4A98(&qword_2EE448);
        v29((uint64_t *)((char *)a1 + *(int *)(v30 + 48)), (uint64_t *)((char *)a2 + *(int *)(v30 + 48)), v28);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ButtonViewModel.Content(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_5;
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();

      uint64_t v3 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_4;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_4:
      a1 += v3;
LABEL_5:
      uint64_t v4 = sub_26A220();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t v6 = v4;
      uint64_t v7 = a1;
      goto LABEL_11;
    case 4:
      uint64_t v8 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      sub_4A98(&qword_2EE440);
LABEL_7:
      return swift_bridgeObjectRelease();
    case 5:
      uint64_t v9 = sub_26A220();
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v9 - 8), a1, v9);
      uint64_t v7 = a1 + *(int *)(sub_4A98(&qword_2EE448) + 48);
      uint64_t v6 = v9;
      int v5 = v10;
LABEL_11:
      uint64_t result = v5(v7, v6);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for ButtonViewModel.Content(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_9;
    case 1u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = (void *)a2[2];
      a1[2] = v9;
      swift_bridgeObjectRetain();
      id v10 = v9;
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v12 = (char *)a1 + v11;
      id v13 = (char *)a2 + v11;
      uint64_t v14 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      goto LABEL_9;
    case 3u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      goto LABEL_9;
    case 4u:
      uint64_t v20 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v22 = (void *)((char *)a1 + v21);
      uint64_t v23 = (void *)((char *)a2 + v21);
      uint64_t v24 = v23[1];
      void *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 5u:
      uint64_t v25 = sub_26A220();
      uint64_t v26 = *(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(a1, a2, v25);
      uint64_t v27 = sub_4A98(&qword_2EE448);
      v26((void *)((char *)a1 + *(int *)(v27 + 48)), (void *)((char *)a2 + *(int *)(v27 + 48)), v25);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for ButtonViewModel.Content(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A1014((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v7 = (void *)a2[2];
        a1[2] = v7;
        swift_bridgeObjectRetain();
        id v8 = v7;
        uint64_t v9 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        id v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v13 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v17 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v19 = (void *)((char *)a1 + v18);
        uint64_t v20 = (void *)((char *)a2 + v18);
        *uint64_t v19 = *v20;
        v19[1] = v20[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v21 = sub_26A220();
        uint64_t v22 = *(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16);
        v22(a1, a2, v21);
        uint64_t v23 = sub_4A98(&qword_2EE448);
        v22((void *)((char *)a1 + *(int *)(v23 + 48)), (void *)((char *)a2 + *(int *)(v23 + 48)), v21);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for ButtonViewModel.Content(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_8;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v7 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      goto LABEL_8;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      goto LABEL_8;
    case 4u:
      uint64_t v15 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      uint64_t v16 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v16 + 48));
      goto LABEL_8;
    case 5u:
      uint64_t v17 = sub_26A220();
      uint64_t v18 = *(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32);
      v18(a1, a2, v17);
      uint64_t v19 = sub_4A98(&qword_2EE448);
      v18((void *)((char *)a1 + *(int *)(v19 + 48)), (void *)((char *)a2 + *(int *)(v19 + 48)), v17);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for ButtonViewModel.Content(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A1014((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_9;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v7 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        id v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        goto LABEL_9;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v11 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_9;
      case 4u:
        uint64_t v15 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        uint64_t v16 = sub_4A98(&qword_2EE440);
        *(_OWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v16 + 48));
        goto LABEL_9;
      case 5u:
        uint64_t v17 = sub_26A220();
        uint64_t v18 = *(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(a1, a2, v17);
        uint64_t v19 = sub_4A98(&qword_2EE448);
        v18((void *)((char *)a1 + *(int *)(v19 + 48)), (void *)((char *)a2 + *(int *)(v19 + 48)), v17);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A5E54()
{
  uint64_t result = sub_26A220();
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(result - 8) + 64;
    uint64_t v7 = &unk_27E328;
    swift_getTupleTypeLayout3();
    id v8 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v10 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v2;
    uint64_t v12 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ButtonTheme()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for ButtonTheme(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ButtonTheme(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ButtonTheme(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ButtonTheme()
{
  return &type metadata for ButtonTheme;
}

uint64_t sub_1A6100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ListItemMetadataEditionsDescriptor.init<>(authorName:assetInfo:additionalDescriptors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for ListItemEditionsDescriptorExternals();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  a5[5] = a1;
  a5[6] = a2;
  sub_AD44(a3, (uint64_t)a5);
  a5[7] = a4;
  uint64_t v14 = (uint64_t)a5 + *(int *)(sub_4A98(&qword_2F0548) + 44);
  uint64_t *v13 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (uint64_t *)((char *)v13 + *(int *)(v11 + 28));
  *uint64_t v15 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  return sub_1AB100((uint64_t)v13, v14, (uint64_t (*)(void))type metadata accessor for ListItemEditionsDescriptorExternals);
}

uint64_t ListItemEditionsDescriptorExternals.fonts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4040C(a1);
}

uint64_t ListItemEditionsDescriptorExternals.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  char v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ListItemEditionsDescriptorExternals() + 20));
  *char v2 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);

  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for ListItemEditionsDescriptorExternals()
{
  uint64_t result = qword_2F3B70;
  if (!qword_2F3B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A63D0@<X0>(uint64_t a1@<X8>)
{
  return sub_4040C(a1);
}

uint64_t ListItemMetadataEditionsDescriptor.externals.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t ListItemMetadataEditionsDescriptor.content(localizer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26B1D0();
  uint64_t v12 = *(void *)(a2 + 24);
  v16[0] = *(void *)(a2 + 16);
  uint64_t v11 = v16[0];
  v16[1] = v12;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  sub_1AB168((uint64_t)v9, type metadata accessor for SizeConstants.Spacing);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = 0x4000000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v14 = sub_4A98(&qword_2F3A80);
  return sub_1A65C8(v3, a1, v11, v12, a3 + *(int *)(v14 + 44));
}

uint64_t sub_1A6570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 16))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_1A65B0()
{
  return 16;
}

__n128 sub_1A65BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A65C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v108 = a5;
  uint64_t v109 = a4;
  uint64_t v7 = type metadata accessor for ListItemMetadataEditionsDescriptor();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v98 = *(void *)(v102 + 64);
  __chkstk_darwin(v7);
  uint64_t v101 = (char *)v88 - v8;
  uint64_t v107 = sub_4A98(&qword_2F3CD0);
  uint64_t v100 = *(void *)(v107 - 8);
  uint64_t v9 = __chkstk_darwin(v107);
  long long v106 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v105 = (char *)v88 - v11;
  uint64_t v12 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v92 = (void *)((char *)v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v88 - v15;
  uint64_t v17 = sub_26B910();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2ED898);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v25 = (char *)v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2ED890);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v99 = (uint64_t)v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v110 = (uint64_t)v88 - v30;
  uint64_t v31 = *(void *)(a1 + 48);
  uint64_t v104 = a3;
  uint64_t v103 = v7;
  uint64_t v97 = v17;
  uint64_t v96 = v18;
  uint64_t v95 = v20;
  uint64_t v90 = v23;
  if (v31)
  {
    uint64_t v89 = v16;
    v88[1] = *(void *)(a1 + 40);
    __chkstk_darwin(v29);
    uint64_t v32 = a1;
    uint64_t KeyPath = (void *)swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    ViewModelWithExternals.subscript.getter(KeyPath);
    swift_release();
    sub_26B950();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Font.Leading.tight(_:), v17);
    sub_26B930();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    sub_1AB168((uint64_t)v23, type metadata accessor for FontConstants.ListItem);
    uint64_t v34 = sub_26BA80();
    uint64_t v36 = v35;
    char v38 = v37;
    swift_release();
    swift_bridgeObjectRelease();
    char v39 = v38 & 1;
    LODWORD(v118) = sub_26B470();
    uint64_t v40 = sub_26BA40();
    uint64_t v42 = v41;
    char v44 = v43;
    uint64_t v46 = v45;
    uint64_t v47 = v36;
    a1 = v32;
    sub_3A380(v34, v47, v39);
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_getKeyPath();
    uint64_t v49 = swift_getKeyPath();
    uint64_t v50 = (uint64_t)v92;
    *uint64_t v92 = v49;
    sub_4A98(&qword_2EB3E8);
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = (uint64_t)v89;
    sub_1AB100(v50, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
    uint64_t v52 = v94;
    sub_67B54(v51, (uint64_t)&v25[*(int *)(v94 + 36)]);
    *(void *)uint64_t v25 = v40;
    *((void *)v25 + 1) = v42;
    uint64_t v53 = v110;
    v25[16] = v44 & 1;
    *((void *)v25 + 3) = v46;
    *((void *)v25 + 4) = v48;
    *((void *)v25 + 5) = 2;
    v25[48] = 0;
    sub_1AB168(v51, (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
    sub_19CC4((uint64_t)v25, v53, &qword_2ED898);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v53, 0, 1, v52);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v110, 1, 1, v94);
  }
  uint64_t v54 = a1;
  uint64_t v55 = sub_1A71DC();
  uint64_t v57 = v97;
  uint64_t v58 = v96;
  uint64_t v59 = v95;
  if (v60) {
    goto LABEL_10;
  }
  uint64_t v61 = v55;
  uint64_t v62 = v56;
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v63 = [self standardUserDefaults],
        NSString v64 = sub_26D3F0(),
        unsigned __int8 v65 = [v63 integerForKey:v64],
        v63,
        v64,
        (v65 & 0x10) != 0))
  {
LABEL_10:
    uint64_t v123 = 0;
    long long v121 = 0u;
    long long v122 = 0u;
    long long v119 = 0u;
    long long v120 = 0u;
    long long v118 = 0u;
    uint64_t v67 = v104;
    uint64_t v69 = v103;
  }
  else
  {
    sub_C224(v91, (uint64_t)v111);
    *(void *)&long long v112 = swift_getKeyPath();
    BYTE8(v112) = 0;
    *(void *)&long long v113 = v61;
    *((void *)&v113 + 1) = v62;
    uint64_t v66 = sub_AD44(v111, (uint64_t)&v114);
    long long v120 = v114;
    long long v121 = v115;
    *(void *)&long long v122 = v116;
    long long v118 = v112;
    long long v119 = v113;
    __chkstk_darwin(v66);
    uint64_t v67 = v104;
    uint64_t v68 = (void *)swift_getKeyPath();
    uint64_t v69 = v103;
    swift_getWitnessTable();
    uint64_t v70 = (uint64_t)v90;
    ViewModelWithExternals.subscript.getter(v68);
    swift_release();
    sub_26B940();
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v59, enum case for Font.Leading.tight(_:), v57);
    uint64_t v71 = sub_26B930();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
    sub_1AB168(v70, type metadata accessor for FontConstants.ListItem);
    uint64_t v72 = swift_getKeyPath();
    sub_452C0((uint64_t)&v118, (uint64_t)&v112);
    *((void *)&v116 + 1) = v72;
    uint64_t v117 = v71;
    sub_4531C((uint64_t)&v118);
    long long v120 = v114;
    long long v121 = v115;
    long long v122 = v116;
    uint64_t v123 = v117;
    long long v118 = v112;
    long long v119 = v113;
  }
  *(void *)&long long v112 = *(void *)(v54 + 56);
  uint64_t v73 = v102;
  char v74 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v54, v69);
  unint64_t v75 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  uint64_t v76 = swift_allocObject();
  uint64_t v77 = v109;
  *(void *)(v76 + 16) = v67;
  *(void *)(v76 + 24) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v76 + v75, v74, v69);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2F0538);
  sub_4A98(&qword_2F3CD8);
  sub_7C18(&qword_2F3CE0, &qword_2F0538);
  sub_1AAF14();
  sub_1AB038();
  uint64_t v78 = v105;
  sub_26C500();
  uint64_t v79 = v99;
  sub_B678(v110, v99, &qword_2ED890);
  sub_B678((uint64_t)&v118, (uint64_t)&v112, &qword_2F3CF8);
  uint64_t v80 = v100;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  uint64_t v82 = v106;
  uint64_t v83 = v107;
  v81(v106, v78, v107);
  uint64_t v84 = v108;
  sub_B678(v79, v108, &qword_2ED890);
  uint64_t v85 = sub_4A98(&qword_2F3D00);
  sub_B678((uint64_t)&v112, v84 + *(int *)(v85 + 48), &qword_2F3CF8);
  v81((char *)(v84 + *(int *)(v85 + 64)), v82, v83);
  uint64_t v86 = *(void (**)(char *, uint64_t))(v80 + 8);
  v86(v78, v83);
  sub_B6DC((uint64_t)&v118, &qword_2F3CF8);
  sub_B6DC(v110, &qword_2ED890);
  v86(v82, v83);
  sub_B6DC((uint64_t)&v112, &qword_2F3CF8);
  return sub_B6DC(v79, &qword_2ED890);
}

uint64_t sub_1A71DC()
{
  unint64_t v1 = v0;
  sub_4ADC(v0, v0[3]);
  uint64_t v2 = (void *)sub_269DD0();
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 averageRating];
    double v5 = v4;

    BOOL v6 = v5 == 0.0;
    if (v5 == 0.0) {
      double v7 = 0.0;
    }
    else {
      double v7 = v5 * 5.0;
    }
  }
  else
  {
    double v7 = 0.0;
    BOOL v6 = 1;
  }
  sub_4ADC(v1, v1[3]);
  uint64_t v8 = (void *)sub_269DD0();
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 ratingCount];

    BOOL v11 = v10 == 0;
  }
  else
  {
    BOOL v11 = 1;
  }
  if (v6 || v11) {
    return 0;
  }
  else {
    return *(void *)&v7;
  }
}

uint64_t sub_1A72E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v56 = a3;
  uint64_t v63 = a2;
  uint64_t v70 = a5;
  uint64_t v66 = sub_26B600();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  NSString v64 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_26B910();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v57 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v55 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(qword_2F3D08);
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F3CD8);
  __chkstk_darwin(v12 - 8);
  uint64_t v67 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[2];
  uint64_t v14 = a1[3];
  void v54[2] = a1[4];
  uint64_t v62 = a1[5];
  swift_bridgeObjectRetain();
  sub_26C250();
  uint64_t v16 = sub_26BB10();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = sub_26BA60();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_3A380(v16, v18, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v54[1] = v15;
  uint64_t v26 = sub_26BA60();
  uint64_t v28 = v27;
  LODWORD(v15) = v29;
  uint64_t v31 = v30;
  uint64_t v71 = v14;
  swift_bridgeObjectRelease();
  sub_3A380(v21, v23, v25);
  swift_bridgeObjectRelease();
  uint64_t v72 = v56;
  uint64_t v73 = v59;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  type metadata accessor for ListItemMetadataEditionsDescriptor();
  swift_getWitnessTable();
  uint64_t v33 = (uint64_t)v55;
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  sub_26B940();
  uint64_t v34 = v60;
  uint64_t v35 = v57;
  uint64_t v36 = v61;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v57, enum case for Font.Leading.tight(_:), v61);
  sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_1AB168(v33, type metadata accessor for FontConstants.ListItem);
  LODWORD(v59) = v15;
  uint64_t v61 = v26;
  uint64_t v60 = v28;
  uint64_t v63 = v31;
  uint64_t v37 = sub_26BA80();
  uint64_t v39 = v38;
  LOBYTE(v36) = v40;
  swift_release();
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v41 = sub_26BA30();
  uint64_t v43 = v42;
  LOBYTE(v35) = v44;
  uint64_t v46 = v45;
  swift_release();
  uint64_t v47 = v39;
  uint64_t v48 = v58;
  sub_3A380(v37, v47, v36 & 1);
  swift_bridgeObjectRelease();
  uint64_t v76 = v41;
  uint64_t v77 = v43;
  char v78 = v35 & 1;
  uint64_t v79 = v46;
  uint64_t v49 = v64;
  sub_26B5D0();
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v66);
  sub_3A380(v76, v77, v78);
  swift_bridgeObjectRelease();
  if (v62)
  {
    uint64_t v71 = v62;
    uint64_t v50 = &v81;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = &v80;
  }
  uint64_t v76 = *((void *)v50 - 32);
  uint64_t v77 = v71;
  swift_bridgeObjectRetain();
  char v74 = &type metadata for Text;
  unint64_t v75 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  sub_CC78();
  uint64_t v51 = (uint64_t)v67;
  uint64_t v52 = v69;
  sub_26BE40();
  sub_3A380(v61, v60, v59 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v52);
  return sub_19CC4(v51, v70, &qword_2F3CD8);
}

uint64_t sub_1A7994(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DC200;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1A79E4(char a1)
{
  if (!a1) {
    return 0x614E726F68747561;
  }
  if (a1 == 1) {
    return 0x666E497465737361;
  }
  return 0xD000000000000015;
}

uint64_t sub_1A7A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1A7AC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1A7B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1A7BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1A7C10@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A7994(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1A7C48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A79E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A7C78()
{
  return sub_1A79E4(*v0);
}

uint64_t sub_1A7C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1A79E0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A7CB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1A7D08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ListItemMetadataEditionsDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v56 = a3;
  uint64_t v4 = type metadata accessor for ListItemMetadataEditionsDescriptor.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v62 = v4;
  uint64_t v5 = sub_26DCC0();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v54 - v6;
  uint64_t v7 = sub_26D980();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = (char *)v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = type metadata accessor for ListItemEditionsDescriptorExternals();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = *(void *)(a2 - 8);
  __chkstk_darwin(v14);
  char v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for ListItemMetadataEditionsDescriptor();
  uint64_t v55 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v21 = (char *)&v54 - v20;
  uint64_t *v13 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)((char *)v13 + *(int *)(v10 + 20));
  uint64_t *v22 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  uint64_t v23 = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t)v13;
  uint64_t v25 = v17;
  sub_1AB100(v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ListItemEditionsDescriptorExternals);
  char v26 = swift_dynamicCast();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v26)
  {
    v27(v9, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v9, a2);
    uint64_t v28 = *(void (**)(void))(v17 + 16);
    uint64_t v60 = &v21[*(int *)(v64 + 44)];
    v28();
    int v29 = v66;
    sub_4ADC(v66, v66[3]);
    uint64_t v30 = v65;
    uint64_t v31 = v63;
    sub_26DFC0();
    uint64_t v32 = v19;
    if (v31)
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v25 + 8);
      v34(v19, a2);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
      return ((uint64_t (*)(char *, uint64_t))v34)(v60, a2);
    }
    else
    {
      uint64_t v39 = v30;
      uint64_t v40 = (uint64_t)v21;
      uint64_t v41 = v23;
      uint64_t v63 = v32;
      LOBYTE(v69[0]) = 0;
      uint64_t v42 = v58;
      *((void *)v21 + 5) = sub_26DC30();
      *((void *)v21 + 6) = v43;
      sub_4A98(&qword_2EBAB8);
      LOBYTE(v67) = 1;
      sub_7C18((unint64_t *)&qword_2EBAC0, &qword_2EBAB8);
      sub_26DC90();
      uint64_t v46 = (void *)v69[0];
      sub_269EF0();
      uint64_t v54 = v40;
      if (v68)
      {
        sub_AD44(&v67, (uint64_t)v69);
        sub_C224((uint64_t)v69, v40);
        sub_4A98(&qword_2F0538);
        char v70 = 2;
        sub_1A8B84(&qword_2F3A88, &qword_2F0538, (void (*)(void))sub_10E990);
        sub_26DC90();

        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v69);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v42);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v63, v41);
        uint64_t v51 = v54;
        *(void *)(v54 + 56) = v67;
        uint64_t v52 = v55;
        uint64_t v53 = v64;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v51, v64);
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
      }
      else
      {
        sub_B6DC((uint64_t)&v67, &qword_2EBAC8);
        uint64_t v47 = sub_26DAD0();
        swift_allocError();
        uint64_t v49 = v48;
        sub_26DC20();
        sub_4581C();
        swift_allocError();
        *uint64_t v50 = 0;
        sub_26DAC0();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, enum case for DecodingError.dataCorrupted(_:), v47);
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v57 + 8))(v65, v42);
        char v44 = *(void (**)(char *, uint64_t))(v25 + 8);
        v44(v63, v41);
        uint64_t v45 = v60;
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v44)(v45, v41);
      }
    }
  }
  else
  {
    v27(v9, 1, 1, a2);
    (*(void (**)(char *, char *))(v59 + 8))(v9, v60);
    uint64_t v35 = sub_26DAD0();
    swift_allocError();
    uint64_t v37 = v36;
    uint64_t v65 = (char *)v36 + *(int *)(sub_4A98(&qword_2EBAB0) + 48);
    *uint64_t v37 = a2;
    uint64_t v38 = v66;
    sub_4ADC(v66, v66[3]);
    sub_26DF80();
    v69[0] = 0;
    v69[1] = 0xE000000000000000;
    sub_26DA90(88);
    v71._countAndFlagsBits = 0xD000000000000056;
    v71._object = (void *)0x800000000028B5E0;
    sub_26D4E0(v71);
    v72._countAndFlagsBits = sub_26E0F0();
    sub_26D4E0(v72);
    swift_bridgeObjectRelease();
    sub_26DAC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, enum case for DecodingError.typeMismatch(_:), v35);
    swift_willThrow();
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v38);
  }
}

uint64_t type metadata accessor for ListItemMetadataEditionsDescriptor.CodingKeys()
{
  return sub_129B4();
}

uint64_t type metadata accessor for ListItemMetadataEditionsDescriptor()
{
  return sub_129B4();
}

uint64_t sub_1A8718@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ListItemMetadataEditionsDescriptor.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1A8738()
{
  unint64_t v1 = 1954047348;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x614E6C6F626D7973;
  }
}

uint64_t sub_1A8794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AAC28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A87BC(uint64_t a1)
{
  unint64_t v2 = sub_1A8B30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A87F8(uint64_t a1)
{
  unint64_t v2 = sub_1A8B30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListItemMetadataDescriptorModel.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2F3A90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_1A8B30();
  sub_26DFC0();
  if (v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v23) = 0;
    uint64_t v9 = sub_26DC70();
    uint64_t v12 = v11;
    uint64_t v22 = v9;
    LOBYTE(v23) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_26DC70();
    uint64_t v15 = v14;
    uint64_t v20 = v13;
    sub_4A98(&qword_2F3AA0);
    char v25 = 2;
    sub_1A8B84(&qword_2F3AA8, &qword_2F3AA0, (void (*)(void))sub_1A8BF0);
    uint64_t v21 = v15;
    swift_bridgeObjectRetain();
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v21;
    *a2 = v22;
    a2[1] = v12;
    a2[2] = v20;
    a2[3] = v18;
    a2[4] = v17;
    a2[5] = v16;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A8B30()
{
  unint64_t result = qword_2F3A98;
  if (!qword_2F3A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3A98);
  }
  return result;
}

uint64_t sub_1A8B84(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A8BF0()
{
  unint64_t result = qword_2F3AB0;
  if (!qword_2F3AB0)
  {
    sub_7B0C(&qword_2EA980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3AB0);
  }
  return result;
}

uint64_t sub_1A8C5C(uint64_t a1)
{
  uint64_t result = sub_1AAFF0(&qword_2F3AB8, (void (*)(uint64_t))type metadata accessor for ListItemEditionsDescriptorExternals);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A8CB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1A8CF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A8D34(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 24) + 8);
}

uint64_t sub_1A8D40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A8D7C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A8DB8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A8DF4(uint64_t a1)
{
  unint64_t result = sub_10E990();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A8E1C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A8E28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ListItemMetadataDescriptorModel.init(from:)(a1, a2);
}

uint64_t sub_1A8E40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A8E4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t dispatch thunk of ListItemMetadataDescriptorExternalsProtocol.spacing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ListItemMetadataDescriptorExternalsProtocol.fonts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ListItemEditionsDescriptorExternals(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (_WORD *)((char *)a1 + v16);
    uint64_t v18 = (_WORD *)((char *)a2 + v16);
    sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v18;
      uint64_t v19 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = (char *)v17 + v20;
      uint64_t v22 = (char *)v18 + v20;
      uint64_t v23 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(void *)((char *)v17 + *(int *)(v19 + 28)) = *(void *)((char *)v18 + *(int *)(v19 + 28));
    }
    else
    {
      *(void *)uint64_t v17 = *(void *)v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ListItemEditionsDescriptorExternals(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

_WORD *initializeWithCopy for ListItemEditionsDescriptorExternals(_WORD *a1, _WORD *a2, uint64_t a3)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (_WORD *)((char *)a1 + v14);
  uint64_t v16 = (_WORD *)((char *)a2 + v14);
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v15 = *v16;
    uint64_t v17 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = (char *)v15 + v18;
    uint64_t v20 = (char *)v16 + v18;
    uint64_t v21 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)((char *)v15 + *(int *)(v17 + 28)) = *(void *)((char *)v16 + *(int *)(v17 + 28));
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for ListItemEditionsDescriptorExternals(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_B6DC((uint64_t)&a1[v15], &qword_2EBC88);
    sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v16 = *v17;
      v16[1] = v17[1];
      uint64_t v18 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v19 = *(int *)(v18 + 24);
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(void *)&v16[*(int *)(v18 + 28)] = *(void *)&v17[*(int *)(v18 + 28)];
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *initializeWithTake for ListItemEditionsDescriptorExternals(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (_WORD *)((char *)a1 + v15);
  uint64_t v17 = (_WORD *)((char *)a2 + v15);
  uint64_t v18 = sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v16 = *v17;
    uint64_t v19 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v20 = *(int *)(v19 + 24);
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = (char *)v17 + v20;
    uint64_t v23 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)((char *)v16 + *(int *)(v19 + 28)) = *(void *)((char *)v17 + *(int *)(v19 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

_WORD *assignWithTake for ListItemEditionsDescriptorExternals(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA978);
    uint64_t v6 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      char v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (_WORD *)((char *)a1 + v15);
    uint64_t v17 = (_WORD *)((char *)a2 + v15);
    sub_B6DC((uint64_t)a1 + v15, &qword_2EBC88);
    uint64_t v18 = sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v16 = *v17;
      uint64_t v19 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = (char *)v16 + v20;
      uint64_t v22 = (char *)v17 + v20;
      uint64_t v23 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)((char *)v16 + *(int *)(v19 + 28)) = *(void *)((char *)v17 + *(int *)(v19 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemEditionsDescriptorExternals(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A9A00);
}

uint64_t sub_1A9A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2F3B10);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ListItemEditionsDescriptorExternals(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A9B14);
}

uint64_t sub_1A9B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB28);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2F3B10);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1A9C20()
{
  sub_1A9D20(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
  if (v0 <= 0x3F)
  {
    sub_1A9D20(319, (unint64_t *)&qword_2ECC28, (void (*)(uint64_t))type metadata accessor for FontConstants.ListItem);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A9D20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A9D74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1A9E28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 64) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = ~v7;
    long long v12 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v12;
    (**(void (***)(uint64_t, uint64_t *))(v12 - 8))(a1, a2);
    uint64_t v13 = (void *)(((unint64_t)v4 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
    void *v13 = *v14;
    v13[1] = v14[1];
    uint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    uint64_t v17 = (char *)v16 + v7;
    uint64_t v18 = ((unint64_t)v15 + v7 + 8) & ~v7;
    uint64_t v19 = (unint64_t)(v17 + 8) & v11;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v18, v19, v5);
  }
  return v4;
}

uint64_t sub_1A9FB4(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((((a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_1AA044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = (void *)((a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v9 + v14 + 8) & ~v14;
  uint64_t v16 = ((unint64_t)v10 + v14 + 8) & ~v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v16, v11);
  return a1;
}

uint64_t *sub_1AA150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_16D58(a1, a2);
  long long v6 = (void *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  *long long v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1AA22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = (_OWORD *)((a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  long long v6 = (_OWORD *)((a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1AA2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (void *)((a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))(((unint64_t)v9 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1AA3A0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 64) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                        + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v15 = *((void *)a1 + 3);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1AA550(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 64) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1AA7CCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((((unint64_t)(a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(a1 + 8) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 3) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t destroy for ListItemMetadataDescriptorModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ListItemMetadataDescriptorModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ListItemMetadataDescriptorModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ListItemMetadataDescriptorModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ListItemMetadataDescriptorModel()
{
  return &type metadata for ListItemMetadataDescriptorModel;
}

uint64_t sub_1AA988()
{
  return sub_7C18(&qword_2F3C28, qword_2F3C30);
}

ValueMetadata *type metadata accessor for ListItemMetadataDescriptorModel.CodingKeys()
{
  return &type metadata for ListItemMetadataDescriptorModel.CodingKeys;
}

unsigned char *_s7BooksUI31ListItemMetadataDescriptorModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AAAA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1AAACC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1AAAEC()
{
  unint64_t result = qword_2F3CB8;
  if (!qword_2F3CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3CB8);
  }
  return result;
}

unint64_t sub_1AAB44()
{
  unint64_t result = qword_2F3CC0;
  if (!qword_2F3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3CC0);
  }
  return result;
}

unint64_t sub_1AAB9C()
{
  unint64_t result = qword_2F3CC8;
  if (!qword_2F3CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3CC8);
  }
  return result;
}

uint64_t sub_1AABF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AAC0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AAC28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E6C6F626D7973 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000000028B640)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AAD78()
{
  uint64_t v1 = *(void *)(v0 + 16);
  BOOL v2 = (int *)(type metadata accessor for ListItemMetadataEditionsDescriptor() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  _s7BooksUI13AnyPagedFrameVwxx_0(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[13], v1);

  return swift_deallocObject();
}

uint64_t sub_1AAE78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ListItemMetadataEditionsDescriptor() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1A72E0(a1, v8, v5, v6, a2);
}

unint64_t sub_1AAF14()
{
  unint64_t result = qword_2F3CE8;
  if (!qword_2F3CE8)
  {
    sub_7B0C(&qword_2F3CD8);
    swift_getOpaqueTypeConformance2();
    sub_1AAFF0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3CE8);
  }
  return result;
}

uint64_t sub_1AAFF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AB038()
{
  unint64_t result = qword_2F3CF0;
  if (!qword_2F3CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3CF0);
  }
  return result;
}

uint64_t sub_1AB094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 24))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_1AB0D4()
{
  return 16;
}

__n128 sub_1AB0E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1AB100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AB168(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t static SynchronousStaticIntent.kind.getter()
{
  return 0xD000000000000012;
}

uint64_t SynchronousStaticIntent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1AB220(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AB25C@<X0>(void *a1@<X8>)
{
  unint64_t result = static SynchronousStaticIntent.kind.getter();
  *a1 = 0xD000000000000012;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AB298()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AB328(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1AB3E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1AB40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AB45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AB4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AB4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AB54C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1AB6A8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1AB8C0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for SynchronousStaticIntent()
{
  return sub_129B4();
}

uint64_t sub_1AB900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  sub_B678(a1, (uint64_t)&v30, &qword_2ECDF0);
  if (*((void *)&v36 + 1))
  {
    long long v26 = v38;
    long long v27 = v39;
    uint64_t v28 = v40;
    long long v22 = v34;
    long long v23 = v35;
    long long v24 = v36;
    long long v25 = v37;
    long long v18 = v30;
    long long v19 = v31;
    long long v20 = v32;
    long long v21 = v33;
    char v29 = 0;
  }
  else
  {
    sub_B6DC((uint64_t)&v30, &qword_2ECDF0);
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v28 = 0;
    char v29 = -1;
  }
  sub_19CC4((uint64_t)&v18, (uint64_t)&v30, &qword_2EDAE8);
  *(void *)&long long v41 = a2;
  BYTE8(v41) = a3 & 1;
  *(void *)&long long v42 = swift_getKeyPath();
  v44[8] = 0;
  *(void *)&v44[16] = swift_getKeyPath();
  v44[24] = 0;
  sub_B678(v5, a4, &qword_2F3D90);
  BOOL v9 = (_OWORD *)(a4 + *(int *)(sub_4A98(&qword_2F3D98) + 36));
  long long v10 = v43;
  v9[12] = v42;
  v9[13] = v10;
  v9[14] = *(_OWORD *)v44;
  *(_OWORD *)((char *)v9 + 233) = *(_OWORD *)&v44[9];
  long long v11 = v39;
  v9[8] = v38;
  v9[9] = v11;
  long long v12 = v41;
  v9[10] = v40;
  v9[11] = v12;
  long long v13 = v35;
  v9[4] = v34;
  v9[5] = v13;
  long long v14 = v37;
  v9[6] = v36;
  v9[7] = v14;
  long long v15 = v31;
  *BOOL v9 = v30;
  v9[1] = v15;
  long long v16 = v33;
  v9[2] = v32;
  v9[3] = v16;
  return swift_retain();
}

uint64_t SeriesEntityCardView.init(seriesIDForLogging:preheader:title:subtitle:footnote:coverViewModels:allowDoubleWide:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v28 = a8;
  uint64_t v27 = a7;
  uint64_t v16 = sub_26B980();
  __chkstk_darwin(v16);
  uint64_t v29 = 0x3FF0000000000000;
  (*(void (**)(char *, void))(v18 + 104))((char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Font.TextStyle.largeTitle(_:));
  sub_803B4();
  sub_26A810();
  long long v19 = (int *)type metadata accessor for SeriesEntityCardView(0);
  long long v20 = (uint64_t *)(a9 + v19[5]);
  *long long v20 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  long long v21 = (void *)(a9 + v19[6]);
  *long long v21 = a1;
  v21[1] = a2;
  uint64_t v22 = a9 + v19[7];
  uint64_t v23 = sub_26A220();
  long long v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v22, a3, v23);
  v24(a9 + v19[8], a4, v23);
  sub_19CC4(a5, a9 + v19[9], &qword_2EA0C0);
  uint64_t result = sub_19CC4(a6, a9 + v19[10], &qword_2EA0C0);
  *(void *)(a9 + v19[11]) = v27;
  *(unsigned char *)(a9 + v19[12]) = v28;
  return result;
}

uint64_t type metadata accessor for SeriesEntityCardView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F3E70);
}

uint64_t sub_1ABCD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SeriesEntityCardView(0);
  uint64_t v6 = __chkstk_darwin(v5);
  size_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for SizeConstants(0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  long long v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v25 - v15;
  sub_41378((uint64_t)&v25 - v15);
  uint64_t v17 = &v16[*(int *)(v2 + 32)];
  int v18 = *(unsigned __int16 *)v17 | (v17[2] << 16);
  if (*(_WORD *)v17 != 2)
  {
    sub_1AD0DC((uint64_t)v16, type metadata accessor for SizeConstants.Environment);
    sub_1AD13C(v1, (uint64_t)v10, type metadata accessor for SeriesEntityCardView);
    if ((v18 & 0x10000) != 0)
    {
      int v19 = v10[*(int *)(v5 + 48)];
      sub_1AD0DC((uint64_t)v10, type metadata accessor for SeriesEntityCardView);
      sub_1AD13C(v1, (uint64_t)v8, type metadata accessor for SeriesEntityCardView);
      if (v19 == 1)
      {
        sub_41378((uint64_t)v14);
        sub_1B2274((uint64_t)v14, (uint64_t)v4, type metadata accessor for SizeConstants.Environment);
        long long v20 = &v4[*(int *)(v2 + 24)];
        char v21 = sub_26AB10();
        sub_1AD0DC((uint64_t)v8, type metadata accessor for SeriesEntityCardView);
        uint64_t v22 = sub_26AB40();
        (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
        char v23 = v21 ^ 1;
        return v23 & 1;
      }
    }
    else
    {
      sub_1AD0DC((uint64_t)v10, type metadata accessor for SeriesEntityCardView);
      sub_1AD13C(v1, (uint64_t)v8, type metadata accessor for SeriesEntityCardView);
    }
    sub_1AD0DC((uint64_t)v8, type metadata accessor for SeriesEntityCardView);
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t result = sub_26DBA0();
  __break(1u);
  return result;
}

uint64_t SeriesEntityCardView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v117 = a1;
  uint64_t v115 = sub_26B130();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  long long v113 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SizeConstants.CornerRadius(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v126 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v112 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_26AC50();
  __chkstk_darwin(v128);
  long long v116 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_26ACF0();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  __chkstk_darwin(v118);
  long long v120 = (BOOL *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v119 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  __chkstk_darwin(v119);
  long long v121 = (uint8_t **)((char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_4A98(&qword_2EE968);
  __chkstk_darwin(v12 - 8);
  long long v14 = (uint64_t (*)(uint64_t))((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = sub_4A98(&qword_2F3D90);
  __chkstk_darwin(v122);
  uint64_t v125 = (uint64_t (*)(uint64_t))((char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_4A98(&qword_2F3D98);
  __chkstk_darwin(v16 - 8);
  uint64_t v100 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = (uint64_t (**)(void))sub_4A98(&qword_2F3DA0);
  __chkstk_darwin(v123);
  uint64_t v102 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_4A98(&qword_2F3DA8);
  __chkstk_darwin(v103);
  uint64_t v104 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_4A98(&qword_2F3DB0);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_4A98(&qword_2F3DB8);
  __chkstk_darwin(v101);
  uint64_t v108 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t (*)(uint64_t))type metadata accessor for SeriesEntityCardView(0);
  __chkstk_darwin(v22);
  long long v24 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9B10 != -1) {
    swift_once();
  }
  uint64_t v124 = v14;
  uint64_t v25 = sub_26A340();
  sub_6B14(v25, (uint64_t)qword_2E9EF8);
  sub_1AD13C(v1, (uint64_t)v24, type metadata accessor for SeriesEntityCardView);
  uint64_t v26 = sub_26A320();
  os_log_type_t v27 = sub_26D830();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v127 = v22;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    *(void *)&v130[0] = v30;
    uint64_t v99 = v29 + 4;
    long long v31 = (uint64_t *)&v24[*((int *)v22 + 6)];
    uint64_t v32 = v2;
    uint64_t v34 = *v31;
    unint64_t v33 = v31[1];
    swift_bridgeObjectRetain();
    uint64_t v35 = v34;
    uint64_t v2 = v32;
    uint64_t v22 = v127;
    uint64_t v129 = sub_1B1A8C(v35, v33, (uint64_t *)v130);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    sub_1AD0DC((uint64_t)v24, type metadata accessor for SeriesEntityCardView);
    _os_log_impl(&def_5F050, v26, v27, "SwiftUI::SeriesEntityCardView::body evaluated, series=%s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1AD0DC((uint64_t)v24, type metadata accessor for SeriesEntityCardView);
  }

  long long v36 = (uint8_t **)(v2 + *((int *)v22 + 6));
  long long v37 = v36[1];
  uint64_t v99 = *v36;
  swift_bridgeObjectRetain();
  char v38 = sub_1ABCD0();
  uint64_t v39 = v2 + *((int *)v22 + 7);
  long long v40 = (int *)v118;
  long long v41 = v120;
  long long v42 = (char *)&v120[*(int *)(v118 + 20)];
  uint64_t v43 = sub_26A220();
  char v44 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
  v44(v42, v39, v43);
  v44((char *)&v41[v40[6]], v2 + *((int *)v127 + 8), v43);
  uint64_t v45 = (int *)v127;
  sub_B678(v2 + *((int *)v127 + 9), (uint64_t)&v41[v40[7]], &qword_2EA0C0);
  sub_B678(v2 + v45[10], (uint64_t)&v41[v40[8]], &qword_2EA0C0);
  *long long v41 = (v38 & 1) == 0;
  uint64_t v46 = v45[11];
  uint64_t v47 = *(void *)(v2 + v46);
  swift_bridgeObjectRetain();
  LOBYTE(v39) = sub_1ABCD0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = (uint64_t)v121;
  *long long v121 = KeyPath;
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = (int *)v119;
  uint64_t v51 = (uint8_t **)(v49 + *(int *)(v119 + 20));
  *uint64_t v51 = v99;
  v51[1] = v37;
  sub_1B2274((uint64_t)v41, v49 + v50[6], type metadata accessor for SeriesEntityCardView.TextLockupViewModel);
  *(void *)(v49 + v50[7]) = v47;
  *(unsigned char *)(v49 + v50[8]) = v39 & 1;
  uint64_t v52 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v53 = v124;
  sub_B0758(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v124, 0.0, 1, 0.0, 1, v52, v54);
  sub_1AD0DC(v49, type metadata accessor for SeriesEntityCardView.CardContents);
  if (sub_1ABCD0())
  {
    sub_4A98(&qword_2ED8F8);
    sub_26A830();
    double v55 = *(double *)v130;
    double v56 = 2.0;
  }
  else
  {
    sub_4A98(&qword_2ED8F8);
    sub_26A830();
    double v55 = *(double *)v130 * 4.0;
    double v56 = 3.0;
  }
  double v57 = v56 / v55;
  uint64_t v58 = v125;
  sub_B678((uint64_t)v53, (uint64_t)v125, &qword_2EE968);
  uint64_t v59 = (char *)v58 + *(int *)(v122 + 36);
  *(double *)uint64_t v59 = v57;
  *((_WORD *)v59 + 4) = 0;
  sub_B6DC((uint64_t)v53, &qword_2EE968);
  uint64_t v60 = *(void *)(v2 + v46);
  if (*(void *)(v60 + 16))
  {
    sub_6C0F8(v60 + 32, (uint64_t)v130);
  }
  else
  {
    uint64_t v131 = 0;
    memset(v130, 0, sizeof(v130));
  }
  id v61 = [self systemGroupedBackgroundColor];
  uint64_t v62 = sub_26C0C0();
  uint64_t v63 = v100;
  uint64_t v64 = v125;
  sub_1AB900((uint64_t)v130, v62, 1, v100);
  swift_release();
  sub_B6DC((uint64_t)v130, &qword_2ECDF0);
  sub_B6DC((uint64_t)v64, &qword_2F3D90);
  uint64_t v65 = v105;
  sub_26ACE0();
  uint64_t v118 = v2 + v45[5];
  uint64_t v66 = v112;
  sub_41378(v112);
  uint64_t v127 = type metadata accessor for SizeConstants.Environment;
  uint64_t v67 = v126;
  sub_1AD13C(v66, v126, type metadata accessor for SizeConstants.Environment);
  uint64_t v125 = type metadata accessor for SizeConstants;
  sub_1AD0DC(v66, type metadata accessor for SizeConstants);
  uint64_t v124 = type metadata accessor for SizeConstants.CornerRadius;
  sub_1AD0DC(v67, type metadata accessor for SizeConstants.CornerRadius);
  uint64_t v68 = v116;
  uint64_t v69 = &v116[*(int *)(v128 + 20)];
  uint64_t v70 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v122) = enum case for RoundedCornerStyle.continuous(_:);
  long long v121 = (void *)sub_26B160();
  uint64_t v71 = *(v121 - 1);
  long long v120 = *(BOOL **)(v71 + 104);
  Swift::String v72 = (uint8_t *)(v71 + 104);
  ((void (*)(char *, uint64_t, void *))v120)(v69, v70, v121);
  uint64_t v99 = v72;
  __asm { FMOV            V0.2D, #16.0 }
  long long v119 = _Q0;
  *uint64_t v68 = _Q0;
  uint64_t v78 = (uint64_t)v102;
  uint64_t v79 = (uint64_t)&v102[*((int *)v123 + 9)];
  uint64_t v123 = &type metadata accessor for RoundedRectangle;
  sub_1AD13C((uint64_t)v68, v79, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v80 = sub_4A98(&qword_2F3DC0);
  uint64_t v81 = v106;
  uint64_t v82 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v79 + *(int *)(v80 + 40), v65, v107);
  *(unsigned char *)(v79 + *(int *)(v80 + 36)) = 0;
  sub_B678(v63, v78, &qword_2F3D98);
  sub_1AD0DC((uint64_t)v68, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v65, v82);
  sub_B6DC(v63, &qword_2F3D98);
  sub_41378(v66);
  uint64_t v83 = v126;
  sub_1AD13C(v66, v126, v127);
  sub_1AD0DC(v66, v125);
  sub_1AD0DC(v83, v124);
  ((void (*)(char *, void, void *))v120)((char *)v68 + *(int *)(v128 + 20), v122, v121);
  *uint64_t v68 = v119;
  uint64_t v84 = (uint64_t)v104;
  uint64_t v85 = (uint64_t)&v104[*(int *)(v103 + 36)];
  sub_1AD13C((uint64_t)v68, v85, (uint64_t (*)(void))v123);
  *(_WORD *)(v85 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678(v78, v84, &qword_2F3DA0);
  sub_1AD0DC((uint64_t)v68, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC(v78, &qword_2F3DA0);
  uint64_t v86 = v114;
  uint64_t v87 = v113;
  uint64_t v88 = v115;
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v113, enum case for ColorRenderingMode.nonLinear(_:), v115);
  sub_1AD1A4();
  uint64_t v89 = v109;
  sub_26BCF0();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
  sub_B6DC(v84, &qword_2F3DA8);
  uint64_t v90 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v92 = v91;
  uint64_t v93 = (uint64_t)v108;
  uint64_t v94 = (uint64_t)&v108[*(int *)(v101 + 36)];
  sub_41378(v66);
  sub_1AD13C(v66, v83, v127);
  sub_1AD0DC(v66, v125);
  sub_1AD0DC(v83, v124);
  ((void (*)(char *, void, void *))v120)((char *)v68 + *(int *)(v128 + 20), v122, v121);
  *uint64_t v68 = v119;
  sub_26C150();
  uint64_t v95 = sub_26C1C0();
  swift_release();
  sub_1AD13C((uint64_t)v68, v94, (uint64_t (*)(void))v123);
  uint64_t v96 = v94 + *(int *)(sub_4A98(&qword_2F3E00) + 36);
  *(void *)uint64_t v96 = v95;
  *(_OWORD *)(v96 + 8) = xmmword_27BD00;
  *(void *)(v96 + 24) = 0x4018000000000000;
  sub_1AD0DC((uint64_t)v68, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v97 = (uint64_t *)(v94 + *(int *)(sub_4A98(&qword_2F3E08) + 36));
  uint64_t *v97 = v90;
  v97[1] = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v93, v89, v111);
  return sub_19CC4(v93, v117, &qword_2F3DB8);
}

uint64_t type metadata accessor for SeriesEntityCardView.TextLockupViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F3FD0);
}

uint64_t type metadata accessor for SeriesEntityCardView.CardContents(uint64_t a1)
{
  return sub_2A148(a1, qword_2F3F30);
}

uint64_t sub_1AD0DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD13C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AD1A4()
{
  unint64_t result = qword_2F3DC8;
  if (!qword_2F3DC8)
  {
    sub_7B0C(&qword_2F3DA8);
    sub_1AD244();
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3DC8);
  }
  return result;
}

unint64_t sub_1AD244()
{
  unint64_t result = qword_2F3DD0;
  if (!qword_2F3DD0)
  {
    sub_7B0C(&qword_2F3DA0);
    sub_1AD2E4();
    sub_7C18(&qword_2F3DF8, &qword_2F3DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3DD0);
  }
  return result;
}

unint64_t sub_1AD2E4()
{
  unint64_t result = qword_2F3DD8;
  if (!qword_2F3DD8)
  {
    sub_7B0C(&qword_2F3D98);
    sub_1AD360();
    sub_87ED8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3DD8);
  }
  return result;
}

unint64_t sub_1AD360()
{
  unint64_t result = qword_2F3DE0;
  if (!qword_2F3DE0)
  {
    sub_7B0C(&qword_2F3D90);
    sub_1AD3DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3DE0);
  }
  return result;
}

unint64_t sub_1AD3DC()
{
  unint64_t result = qword_2F3DE8;
  if (!qword_2F3DE8)
  {
    sub_7B0C(&qword_2EE968);
    sub_1B91F8(&qword_2F3DF0, (void (*)(uint64_t))type metadata accessor for SeriesEntityCardView.CardContents);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3DE8);
  }
  return result;
}

uint64_t sub_1AD48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v2 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  uint64_t v3 = v2 - 8;
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v34 + 64);
  __chkstk_darwin(v2);
  uint64_t v36 = sub_4A98(&qword_2F4018);
  __chkstk_darwin(v36);
  uint64_t v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F4020);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2F4028);
  uint64_t v16 = __chkstk_darwin(v35);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v34 - v19;
  if (*(unsigned char *)(v1 + *(int *)(v3 + 40)) == 1)
  {
    sub_41378((uint64_t)v12);
    sub_1AD13C((uint64_t)v12, (uint64_t)v9, type metadata accessor for SizeConstants.Environment);
    sub_1AD0DC((uint64_t)v12, type metadata accessor for SizeConstants);
    sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants.Spacing);
    *(void *)uint64_t v15 = sub_26B120();
    *((void *)v15 + 1) = 0x4034000000000000;
    v15[16] = 0;
    uint64_t v21 = sub_4A98(&qword_2F4050);
    sub_1AD9B4(v1, (uint64_t)&v15[*(int *)(v21 + 44)]);
    LODWORD(v34) = sub_26B790();
    sub_41378((uint64_t)v12);
    sub_1AD13C((uint64_t)v12, (uint64_t)v9, type metadata accessor for SizeConstants.Environment);
    sub_1AD0DC((uint64_t)v12, type metadata accessor for SizeConstants);
    sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    sub_B678((uint64_t)v15, (uint64_t)v18, &qword_2F4020);
    uint64_t v30 = &v18[*(int *)(v35 + 36)];
    *uint64_t v30 = v34;
    *((void *)v30 + 1) = v23;
    *((void *)v30 + 2) = v25;
    *((void *)v30 + 3) = v27;
    *((void *)v30 + 4) = v29;
    v30[40] = 0;
    sub_B6DC((uint64_t)v15, &qword_2F4020);
    sub_19CC4((uint64_t)v18, (uint64_t)v20, &qword_2F4028);
    sub_B678((uint64_t)v20, (uint64_t)v6, &qword_2F4028);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F4030);
    sub_1B6944();
    sub_7C18(&qword_2F4048, &qword_2F4030);
    sub_26B2F0();
    return sub_B6DC((uint64_t)v20, &qword_2F4028);
  }
  else
  {
    sub_1AD13C(v1, (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SeriesEntityCardView.CardContents);
    unint64_t v32 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v33 = swift_allocObject();
    sub_1B2274((uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, type metadata accessor for SeriesEntityCardView.CardContents);
    *uint64_t v6 = sub_1B68C4;
    v6[1] = v33;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F4030);
    sub_1B6944();
    sub_7C18(&qword_2F4048, &qword_2F4030);
    return sub_26B2F0();
  }
}

uint64_t sub_1AD9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  uint64_t v4 = v3 - 8;
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  __chkstk_darwin(v3);
  uint64_t v53 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v52 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SeriesEntityCardView.TextLockupView(0);
  uint64_t v15 = (int *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_4A98(&qword_2EE8B8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v51 - v22;
  uint64_t v24 = sub_4A98(&qword_2F4058);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v51 = (uint64_t)&v51 - v29;
  sub_1AD13C(a1 + *(int *)(v4 + 32), (uint64_t)v13, type metadata accessor for SeriesEntityCardView.TextLockupViewModel);
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)((char *)v17 + v15[7]);
  *uint64_t v30 = swift_getKeyPath();
  sub_4A98(&qword_2EBC58);
  swift_storeEnumTagMultiPayload();
  long long v31 = (uint64_t *)((char *)v17 + v15[8]);
  *long long v31 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  sub_1B2274((uint64_t)v13, (uint64_t)v17 + v15[9], type metadata accessor for SeriesEntityCardView.TextLockupViewModel);
  uint64_t v32 = sub_26C650();
  sub_B07D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v32, v33);
  sub_1AD0DC((uint64_t)v17, type metadata accessor for SeriesEntityCardView.TextLockupView);
  sub_26C130();
  sub_B678((uint64_t)v21, (uint64_t)v23, &qword_2EE8B8);
  swift_release();
  sub_B6DC((uint64_t)v21, &qword_2EE8B8);
  LOBYTE(v31) = sub_26B7C0();
  sub_41378((uint64_t)v10);
  uint64_t v34 = v52;
  sub_1AD13C((uint64_t)v10, v52, type metadata accessor for SizeConstants.Environment);
  sub_1AD0DC((uint64_t)v10, type metadata accessor for SizeConstants);
  sub_1AD0DC(v34, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_B678((uint64_t)v23, (uint64_t)v28, &qword_2EE8B8);
  uint64_t v43 = &v28[*(int *)(v25 + 44)];
  char *v43 = (char)v31;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_B6DC((uint64_t)v23, &qword_2EE8B8);
  uint64_t v44 = v51;
  sub_19CC4((uint64_t)v28, v51, &qword_2F4058);
  uint64_t v45 = v53;
  sub_1AD13C(a1, v53, type metadata accessor for SeriesEntityCardView.CardContents);
  unint64_t v46 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v47 = swift_allocObject();
  sub_1B2274(v45, v47 + v46, type metadata accessor for SeriesEntityCardView.CardContents);
  sub_B678(v44, (uint64_t)v28, &qword_2F4058);
  uint64_t v48 = v56;
  sub_B678((uint64_t)v28, v56, &qword_2F4058);
  uint64_t v49 = (double (**)@<D0>(uint64_t@<X8>))(v48 + *(int *)(sub_4A98(&qword_2F4060) + 48));
  *uint64_t v49 = sub_1B6C74;
  v49[1] = (double (*)@<D0>(uint64_t@<X8>))v47;
  swift_retain();
  sub_B6DC(v44, &qword_2F4058);
  swift_release();
  return sub_B6DC((uint64_t)v28, &qword_2F4058);
}

double sub_1ADFB4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for SeriesEntityCardView.CardContents(0) + 28));
  swift_bridgeObjectRetain();
  sub_26A940();
  if (v11 <= 50.0) {
    double v11 = 50.0;
  }
  SeriesCardCoverStackLayout.init(covers:containingWidth:)(v10, (uint64_t)&v46, v11);
  uint64_t v12 = v47;
  if ((void)v47)
  {
    long long v36 = v49;
    uint64_t v34 = (void *)*((void *)&v47 + 1);
    uint64_t v35 = v48;
    long long v13 = v46;
    uint64_t v33 = BYTE8(v48) & 1;
    unsigned __int8 v14 = sub_26B770();
    sub_41378((uint64_t)v9);
    sub_1AD13C((uint64_t)v9, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
    sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants);
    sub_1AD0DC((uint64_t)v6, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    sub_26C100();
    swift_release();
    long long v37 = v13;
    uint64_t v38 = v12;
    uint64_t v39 = v34;
    *(void *)&long long v40 = v35;
    *((void *)&v40 + 1) = v33;
    long long v41 = v36;
    *(void *)&long long v42 = 0;
    *((void *)&v42 + 1) = v14;
    *(void *)&long long v43 = v16;
    *((void *)&v43 + 1) = v18;
    *(void *)&long long v44 = v20;
    *((void *)&v44 + 1) = v22;
    __int16 v45 = 0;
  }
  else
  {
    long long v37 = xmmword_273E30;
    uint64_t v38 = 0;
    uint64_t v39 = _swiftEmptyArrayStorage;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    __int16 v45 = 256;
  }
  sub_4A98(&qword_2F4068);
  sub_1B6CF4();
  sub_26B2F0();
  double result = *(double *)&v46;
  long long v24 = v47;
  long long v25 = v48;
  long long v26 = v49;
  long long v27 = v50;
  long long v28 = v51;
  long long v29 = v52;
  char v30 = v53;
  char v31 = v54;
  *(_OWORD *)a2 = v46;
  *(_OWORD *)(a2 + 16) = v24;
  *(_OWORD *)(a2 + 32) = v25;
  *(_OWORD *)(a2 + 48) = v26;
  *(_OWORD *)(a2 + 64) = v27;
  *(_OWORD *)(a2 + 80) = v28;
  *(_OWORD *)(a2 + 96) = v29;
  *(unsigned char *)(a2 + 112) = v30;
  *(unsigned char *)(a2 + 113) = v31;
  return result;
}

uint64_t sub_1AE268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v27 = a3;
  uint64_t v5 = sub_26A970();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  __chkstk_darwin(v9);
  double v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9B10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_26A340();
  sub_6B14(v12, (uint64_t)qword_2E9EF8);
  sub_1AD13C(a2, (uint64_t)v11, type metadata accessor for SeriesEntityCardView.CardContents);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  long long v13 = sub_26A320();
  os_log_type_t v14 = sub_26D830();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = a2;
    uint64_t v16 = v15;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v29 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = (uint64_t *)&v11[*(int *)(v9 + 20)];
    uint64_t v26 = a1;
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1B1A8C(v19, v18, &v29);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    sub_1AD0DC((uint64_t)v11, type metadata accessor for SeriesEntityCardView.CardContents);
    *(_WORD *)(v16 + 12) = 2048;
    sub_26A940();
    uint64_t v28 = v20;
    a1 = v26;
    sub_26D9A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&def_5F050, v13, v14, "SwiftUI::SeriesEntityCardView::body evaluated, series=%s, width=%f", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v25;
    swift_slowDealloc();
  }
  else
  {
    sub_1AD0DC((uint64_t)v11, type metadata accessor for SeriesEntityCardView.CardContents);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  uint64_t v21 = v27;
  *long long v27 = xmmword_27EAD0;
  *((void *)v21 + 2) = 0x4018000000000000;
  uint64_t v22 = sub_4A98(&qword_2F4088);
  return sub_1AE5E8(a2, a1, (uint64_t)v21 + *(int *)(v22 + 44));
}

uint64_t sub_1AE5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((void *)&v89 + 1) = a2;
  uint64_t v90 = a3;
  uint64_t v4 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SeriesEntityCardView.TextLockupView(0);
  os_log_type_t v14 = (int *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (uint64_t *)((char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v75 - v18;
  uint64_t v87 = (uint64_t)&v75 - v18;
  uint64_t v88 = sub_4A98(&qword_2F4090) - 8;
  uint64_t v20 = __chkstk_darwin(v88);
  uint64_t v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v92 = (uint64_t)&v75 - v23;
  *(void *)&long long v89 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  sub_1AD13C(a1 + *(int *)(v89 + 24), (uint64_t)v12, type metadata accessor for SeriesEntityCardView.TextLockupViewModel);
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)((char *)v17 + v14[7]);
  *uint64_t v24 = swift_getKeyPath();
  sub_4A98(&qword_2EBC58);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (uint64_t *)((char *)v17 + v14[8]);
  *uint64_t v25 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  sub_1B2274((uint64_t)v12, (uint64_t)v17 + v14[9], type metadata accessor for SeriesEntityCardView.TextLockupViewModel);
  sub_26C130();
  sub_1AD13C((uint64_t)v17, (uint64_t)v19, type metadata accessor for SeriesEntityCardView.TextLockupView);
  swift_release();
  sub_1AD0DC((uint64_t)v17, type metadata accessor for SeriesEntityCardView.TextLockupView);
  LODWORD(v86) = sub_26B750();
  sub_41378((uint64_t)v9);
  sub_1AD13C((uint64_t)v9, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
  sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants);
  sub_1AD0DC((uint64_t)v6, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v87;
  sub_1AD13C(v87, (uint64_t)v22, type metadata accessor for SeriesEntityCardView.TextLockupView);
  uint64_t v35 = &v22[*(int *)(v88 + 44)];
  *uint64_t v35 = v86;
  *((void *)v35 + 1) = v27;
  *((void *)v35 + 2) = v29;
  *((void *)v35 + 3) = v31;
  *((void *)v35 + 4) = v33;
  v35[40] = 0;
  sub_1AD0DC(v34, type metadata accessor for SeriesEntityCardView.TextLockupView);
  uint64_t v91 = v22;
  sub_19CC4((uint64_t)v22, v92, &qword_2F4090);
  sub_26A940();
  double v37 = v36;
  sub_41378((uint64_t)v9);
  sub_1AD13C((uint64_t)v9, (uint64_t)v6, type metadata accessor for SizeConstants.Environment);
  sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants);
  uint64_t v38 = (uint64_t)v6;
  sub_1AD0DC((uint64_t)v6, type metadata accessor for SizeConstants.Spacing);
  if (v37 + -48.0 > 50.0) {
    double v39 = v37 + -48.0;
  }
  else {
    double v39 = 50.0;
  }
  uint64_t v40 = swift_bridgeObjectRetain();
  SeriesCardCoverStackLayout.init(covers:containingWidth:)(v40, (uint64_t)&v102, v39);
  uint64_t v41 = v104;
  if (v104)
  {
    long long v89 = v108;
    uint64_t v42 = v106;
    long long v43 = (void *)v105;
    uint64_t v45 = v102;
    uint64_t v44 = v103;
    uint64_t v46 = v107 & 1;
    sub_26C100();
    swift_release();
    unsigned __int8 v47 = sub_26B750();
    sub_41378((uint64_t)v9);
    sub_1AD13C((uint64_t)v9, v38, type metadata accessor for SizeConstants.Environment);
    sub_1AD0DC((uint64_t)v9, type metadata accessor for SizeConstants);
    sub_1AD0DC(v38, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    *(void *)&long long v93 = v45;
    *((void *)&v93 + 1) = v44;
    uint64_t v94 = v41;
    uint64_t v95 = v43;
    *(void *)&long long v96 = v42;
    *((void *)&v96 + 1) = v46;
    long long v97 = v89;
    *(void *)&long long v98 = 0;
    *((void *)&v98 + 1) = v47;
    *(void *)&long long v99 = v48;
    *((void *)&v99 + 1) = v49;
    *(void *)&long long v100 = v50;
    *((void *)&v100 + 1) = v51;
    __int16 v101 = 0;
  }
  else
  {
    long long v93 = xmmword_273E30;
    uint64_t v94 = 0;
    uint64_t v95 = _swiftEmptyArrayStorage;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    __int16 v101 = 256;
  }
  sub_4A98(&qword_2F4068);
  sub_1B6CF4();
  sub_26B2F0();
  uint64_t v52 = v103;
  *((void *)&v89 + 1) = v102;
  uint64_t v53 = v104;
  uint64_t v54 = v105;
  uint64_t v55 = v106;
  uint64_t v56 = v107;
  long long v57 = v108;
  *(void *)&long long v89 = v109;
  uint64_t v88 = v110;
  uint64_t v87 = v111;
  uint64_t v86 = v112;
  uint64_t v85 = v113;
  uint64_t v84 = v114;
  int v83 = v115;
  int v82 = v116;
  uint64_t v58 = (uint64_t)v91;
  sub_B678(v92, (uint64_t)v91, &qword_2F4090);
  uint64_t v59 = v90;
  sub_B678(v58, v90, &qword_2F4090);
  uint64_t v60 = v59 + *(int *)(sub_4A98(&qword_2F4098) + 48);
  uint64_t v61 = *((void *)&v89 + 1);
  *(void *)uint64_t v60 = *((void *)&v89 + 1);
  *(void *)(v60 + 8) = v52;
  uint64_t v62 = v52;
  uint64_t v81 = v52;
  *(void *)(v60 + 16) = v53;
  *(void *)(v60 + 24) = v54;
  char v63 = v53;
  uint64_t v80 = v53;
  uint64_t v64 = v54;
  uint64_t v79 = v54;
  *(void *)(v60 + 32) = v55;
  *(void *)(v60 + 40) = v56;
  uint64_t v65 = v55;
  uint64_t v78 = v55;
  uint64_t v66 = v56;
  uint64_t v77 = v56;
  *(_OWORD *)(v60 + 48) = v57;
  uint64_t v76 = v57;
  uint64_t v67 = v89;
  uint64_t v68 = v88;
  *(void *)(v60 + 64) = v89;
  *(void *)(v60 + 72) = v68;
  uint64_t v69 = v87;
  uint64_t v70 = v86;
  *(void *)(v60 + 80) = v87;
  *(void *)(v60 + 88) = v70;
  uint64_t v71 = v85;
  uint64_t v72 = v84;
  *(void *)(v60 + 96) = v85;
  *(void *)(v60 + 104) = v72;
  LOBYTE(v56) = v83;
  *(unsigned char *)(v60 + 112) = v83;
  char v73 = v82;
  *(unsigned char *)(v60 + 113) = v82;
  sub_1B6D94(v61, v62, v63, v64, v65, v66, v57, *((uint64_t *)&v57 + 1), v67, v68, v69, v70, v71, v72, v56, v73);
  sub_B6DC(v92, &qword_2F4090);
  sub_1B6DEC(v61, v81, v80, v79, v78, v77, v76, *((uint64_t *)&v57 + 1), v67, v68, v69, v70, v71, v72, v56, v73);
  return sub_B6DC((uint64_t)v91, &qword_2F4090);
}

void sub_1AEEC4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7, uint64_t a8, char a9)
{
  uint64_t v16 = sub_26A9A0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26AA60();
  sub_1B91F8(&qword_2F4160, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_26D790();
  sub_26D7C0();
  if (sub_26D7B0() == 2)
  {
    v28.origin.x = a1;
    v28.origin.y = a2;
    v28.size.width = a3;
    v28.size.height = a4;
    if (CGRectGetHeight(v28) > 0.0)
    {
      sub_26AA70();
      char v20 = a9 & 1;
      char v27 = v20;
      char v26 = 0;
      sub_26A980();
      long long v25[2] = v21;
      *(double *)&v25[4] = a7;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v17 + 8);
      v22(v19, v16);
      sub_26AA70();
      char v27 = v20;
      char v26 = 0;
      sub_26A980();
      v25[5] = v23;
      v25[3] = v24;
      v22(v19, v16);
      sub_26AA70();
      v29.origin.x = a1;
      v29.origin.y = a2;
      v29.size.width = a3;
      v29.size.height = a4;
      CGRectGetMidX(v29);
      *(double *)&v25[1] = a6;
      v30.origin.x = a1;
      v30.origin.y = a2;
      v30.size.width = a3;
      v30.size.height = a4;
      CGRectGetMinY(v30);
      sub_26C7C0();
      char v27 = 0;
      char v26 = 0;
      sub_26A990();
      v22(v19, v16);
      v31.origin.x = a1;
      v31.origin.y = a2;
      v31.size.width = a3;
      v31.size.height = a4;
      CGRectGetHeight(v31);
      sub_26AA70();
      v32.origin.x = a1;
      v32.origin.y = a2;
      v32.size.width = a3;
      v32.size.height = a4;
      CGRectGetMidX(v32);
      v33.origin.x = a1;
      v33.origin.y = a2;
      v33.size.width = a3;
      v33.size.height = a4;
      CGRectGetMinY(v33);
      sub_26C7C0();
      char v27 = 0;
      char v26 = 0;
      sub_26A990();
      v22(v19, v16);
    }
  }
}

double sub_1AF264(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

void sub_1AF284(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  sub_1AEEC4(a3, a4, a5, a6, *v6, v6[1], v6[2], a1, a2 & 1);
}

uint64_t sub_1AF2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1AF314(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1AF2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1AF314(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1AF314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t sub_1AF35C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v25 = sub_26A6E0();
  uint64_t v3 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F4168);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F4170);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F4178);
  __chkstk_darwin(v12);
  os_log_type_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for SeriesEntityCardView.TextLockupView(0) + 28));
  if (v15) {
    uint64_t v16 = sub_26B1C0();
  }
  else {
    uint64_t v16 = sub_26B1D0();
  }
  *(void *)uint64_t v8 = v16;
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v17 = sub_4A98(&qword_2F4180);
  sub_1AF658(v2, (uint64_t)&v8[*(int *)(v17 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v8, (uint64_t)v11, &qword_2F4168);
  uint64_t v19 = &v11[*(int *)(v9 + 36)];
  *(void *)uint64_t v19 = KeyPath;
  v19[8] = v15;
  sub_B6DC((uint64_t)v8, &qword_2F4168);
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = v25;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v25);
  uint64_t v22 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  uint64_t v23 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v22 + *(int *)(v23 + 28), v5, v21);
  uint64_t *v22 = v20;
  sub_B678((uint64_t)v11, (uint64_t)v14, &qword_2F4170);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  sub_B6DC((uint64_t)v11, &qword_2F4170);
  return sub_19CC4((uint64_t)v14, v26, &qword_2F4178);
}

uint64_t sub_1AF658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v195 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v190 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F4188);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v194 = (uint64_t)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v192 = (uint64_t)&v151 - v8;
  uint64_t v9 = sub_4A98(&qword_2F4190);
  __chkstk_darwin(v9 - 8);
  uint64_t v185 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_4A98(&qword_2F4198) - 8;
  __chkstk_darwin(v187);
  uint64_t v186 = (uint64_t)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_4A98(&qword_2F41A0) - 8;
  uint64_t v12 = __chkstk_darwin(v189);
  uint64_t v193 = (uint64_t)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v188 = (uint64_t)&v151 - v15;
  __chkstk_darwin(v14);
  uint64_t v208 = (uint64_t)&v151 - v16;
  uint64_t v17 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v184 = (uint64_t)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v183 = (uint64_t)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v196 = (uint64_t)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_26B910();
  uint64_t v213 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v203 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_26B980();
  uint64_t v212 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  CGRect v28 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v29 - 8);
  CGRect v31 = (char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_26A220();
  uint64_t v206 = *(void *)(v32 - 8);
  uint64_t v207 = v32;
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v176 = (char *)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  double v36 = (char *)&v151 - v35;
  uint64_t v200 = sub_26A160();
  uint64_t v37 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  double v39 = (char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_4A98(&qword_2EBFC8);
  __chkstk_darwin(v197);
  long long v199 = (char *)&v151 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_4A98(&qword_2F41A8);
  __chkstk_darwin(v198);
  uint64_t v42 = (char *)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_4A98(&qword_2F41B0);
  uint64_t v191 = *(void *)(v210 - 8);
  uint64_t v43 = __chkstk_darwin(v210);
  uint64_t v173 = (uint64_t)&v151 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v202 = (uint64_t)&v151 - v45;
  uint64_t v180 = sub_4A98(&qword_2F41B8) - 8;
  uint64_t v46 = __chkstk_darwin(v180);
  uint64_t v179 = (uint64_t)&v151 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v211 = (uint64_t)&v151 - v49;
  __chkstk_darwin(v48);
  uint64_t v209 = (uint64_t)&v151 - v50;
  uint64_t v51 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupView(0);
  uint64_t v52 = v51[7];
  uint64_t v205 = a1;
  uint64_t v53 = a1 + v52;
  uint64_t v181 = (unsigned __int8 *)(a1 + v52);
  uint64_t v182 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v54 = (char *)(v53 + *(int *)(v182 + 20));
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v206 + 16);
  uint64_t v167 = v206 + 16;
  long long v166 = v55;
  v55(v36, v54, v207);
  long long v168 = v36;
  sub_26A170();
  uint64_t v165 = a1 + v51[5];
  sub_4204C((uint64_t)v31);
  uint64_t v56 = v212;
  long long v57 = *(void (**)(void))(v212 + 104);
  unsigned int v163 = enum case for Font.TextStyle.footnote(_:);
  uint64_t v58 = v201;
  uint64_t v164 = v212 + 104;
  uint64_t v162 = (void (*)(char *, void, uint64_t))v57;
  v57(v28);
  uint64_t v59 = sub_26B820();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
  uint64_t v161 = v59;
  uint64_t v160 = v61;
  uint64_t v159 = v60 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v26, 1, 1);
  sub_26B8B0();
  sub_26B8E0();
  uint64_t v175 = v26;
  sub_B6DC((uint64_t)v26, &qword_2EBFC0);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v171 = v28;
  uint64_t v212 = v56 + 8;
  uint64_t v158 = v62;
  v62(v28, v58);
  uint64_t v63 = v213;
  uint64_t v64 = *(void (**)(void))(v213 + 104);
  uint64_t v65 = v203;
  unsigned int v156 = enum case for Font.Leading.tight(_:);
  uint64_t v66 = v204;
  uint64_t v157 = v213 + 104;
  uint64_t v155 = (void (*)(char *, void, uint64_t))v64;
  v64(v203);
  uint64_t v67 = sub_26B930();
  swift_release();
  uint64_t v69 = v63 + 8;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v70 = (uint64_t)v199;
  uint64_t v213 = v69;
  uint64_t v154 = v68;
  v68(v65, v66);
  long long v172 = v31;
  sub_1AD0DC((uint64_t)v31, type metadata accessor for FontConstants);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v73 = v200;
  uint64_t v153 = v37 + 16;
  uint64_t v152 = v72;
  v72((char *)v70, v39, v200);
  char v74 = (uint64_t *)(v70 + *(int *)(v197 + 36));
  uint64_t *v74 = KeyPath;
  v74[1] = v67;
  uint64_t v75 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v169 = v39;
  uint64_t v170 = v37 + 8;
  uint64_t v151 = v75;
  v75(v39, v73);
  uint64_t v76 = swift_getKeyPath();
  sub_B678(v70, (uint64_t)v42, &qword_2EBFC8);
  uint64_t v77 = &v42[*(int *)(v198 + 36)];
  *(void *)uint64_t v77 = v76;
  *((void *)v77 + 1) = 1;
  v77[16] = 0;
  sub_B6DC(v70, &qword_2EBFC8);
  uint64_t v78 = v205 + v51[6];
  uint64_t v79 = v196;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v196);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v80 = sub_26C1C0();
  swift_release();
  uint64_t v178 = type metadata accessor for ColorConstants;
  sub_1AD0DC(v79, type metadata accessor for ColorConstants);
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v202;
  sub_B678((uint64_t)v42, v202, &qword_2F41A8);
  int v83 = (uint64_t *)(v82 + *(int *)(v210 + 36));
  uint64_t *v83 = v81;
  v83[1] = v80;
  uint64_t v174 = v42;
  sub_B6DC((uint64_t)v42, &qword_2F41A8);
  LOBYTE(v37) = sub_26B780();
  uint64_t v84 = v183;
  sub_41378(v183);
  uint64_t v177 = type metadata accessor for SizeConstants.Environment;
  uint64_t v85 = v184;
  sub_1AD13C(v84, v184, type metadata accessor for SizeConstants.Environment);
  sub_1AD0DC(v84, type metadata accessor for SizeConstants);
  sub_1AD0DC(v85, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v94 = v179;
  sub_B678(v82, v179, &qword_2F41B0);
  uint64_t v95 = v94 + *(int *)(v180 + 44);
  *(unsigned char *)uint64_t v95 = v37;
  *(void *)(v95 + 8) = v87;
  *(void *)(v95 + 16) = v89;
  *(void *)(v95 + 24) = v91;
  *(void *)(v95 + 32) = v93;
  *(unsigned char *)(v95 + 40) = 0;
  sub_B6DC(v82, &qword_2F41B0);
  sub_26C160();
  uint64_t v96 = v211;
  sub_B678(v94, v211, &qword_2F41B8);
  swift_release();
  sub_B6DC(v94, &qword_2F41B8);
  sub_19CC4(v96, v209, &qword_2F41B8);
  uint64_t v97 = v185;
  sub_1B0A1C(v205, v185);
  uint64_t v180 = v78;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v79);
  uint64_t v98 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  sub_1AD0DC(v79, v178);
  uint64_t v99 = swift_getKeyPath();
  uint64_t v100 = v186;
  sub_B678(v97, v186, &qword_2F4190);
  __int16 v101 = (uint64_t *)(v100 + *(int *)(v187 + 44));
  *__int16 v101 = v99;
  v101[1] = v98;
  sub_B6DC(v97, &qword_2F4190);
  LOBYTE(v99) = sub_26B780();
  sub_41378(v84);
  uint64_t v102 = v207;
  sub_1AD13C(v84, v85, v177);
  uint64_t v103 = (uint64_t)v190;
  sub_1AD0DC(v84, type metadata accessor for SizeConstants);
  uint64_t v104 = v206;
  sub_1AD0DC(v85, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v113 = v188;
  sub_B678(v100, v188, &qword_2F4198);
  uint64_t v114 = v113 + *(int *)(v189 + 44);
  *(unsigned char *)uint64_t v114 = v99;
  *(void *)(v114 + 8) = v106;
  *(void *)(v114 + 16) = v108;
  *(void *)(v114 + 24) = v110;
  *(void *)(v114 + 32) = v112;
  *(unsigned char *)(v114 + 40) = 0;
  sub_B6DC(v100, &qword_2F4198);
  sub_19CC4(v113, v208, &qword_2F41A0);
  LODWORD(v205) = *v181;
  sub_B678((uint64_t)&v181[*(int *)(v182 + 32)], v103, &qword_2EA0C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v103, 1, v102) == 1)
  {
    sub_B6DC(v103, &qword_2EA0C0);
    uint64_t v115 = 1;
    uint64_t v116 = v192;
    uint64_t v117 = v210;
  }
  else
  {
    uint64_t v118 = v176;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v176, v103, v102);
    v166(v168, v118, v102);
    long long v119 = v169;
    sub_26A170();
    uint64_t v120 = (uint64_t)v172;
    sub_4204C((uint64_t)v172);
    long long v121 = v171;
    uint64_t v122 = v201;
    v162(v171, v163, v201);
    uint64_t v123 = (uint64_t)v175;
    v160(v175, 1, 1, v161);
    sub_26B890();
    sub_26B8E0();
    sub_B6DC(v123, &qword_2EBFC0);
    v158(v121, v122);
    uint64_t v125 = v203;
    uint64_t v124 = v204;
    v155(v203, v156, v204);
    uint64_t v126 = sub_26B930();
    swift_release();
    v154(v125, v124);
    sub_1AD0DC(v120, type metadata accessor for FontConstants);
    uint64_t v127 = swift_getKeyPath();
    uint64_t v129 = (uint64_t)v199;
    uint64_t v128 = v200;
    v152(v199, v119, v200);
    long long v130 = (uint64_t *)(v129 + *(int *)(v197 + 36));
    *long long v130 = v127;
    v130[1] = v126;
    v151(v119, v128);
    uint64_t v131 = swift_getKeyPath();
    uint64_t v132 = (uint64_t)v174;
    sub_B678(v129, (uint64_t)v174, &qword_2EBFC8);
    uint64_t v133 = v132 + *(int *)(v198 + 36);
    *(void *)uint64_t v133 = v131;
    *(void *)(v133 + 8) = 1;
    *(unsigned char *)(v133 + 16) = 0;
    sub_B6DC(v129, &qword_2EBFC8);
    uint64_t v134 = v196;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v196);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v135 = sub_26C1C0();
    swift_release();
    sub_1AD0DC(v134, type metadata accessor for ColorConstants);
    uint64_t v136 = swift_getKeyPath();
    uint64_t v137 = v173;
    sub_B678(v132, v173, &qword_2F41A8);
    uint64_t v138 = v210;
    uint64_t v139 = (uint64_t *)(v137 + *(int *)(v210 + 36));
    *uint64_t v139 = v136;
    v139[1] = v135;
    sub_B6DC(v132, &qword_2F41A8);
    sub_26C160();
    uint64_t v140 = v202;
    sub_B678(v137, v202, &qword_2F41B0);
    swift_release();
    sub_B6DC(v137, &qword_2F41B0);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v118, v102);
    uint64_t v116 = v192;
    sub_19CC4(v140, v192, &qword_2F41B0);
    uint64_t v115 = 0;
    uint64_t v117 = v138;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v116, v115, 1, v117);
  char v141 = v205;
  LODWORD(v213) = v205 ^ 1;
  uint64_t v142 = v209;
  uint64_t v143 = v211;
  sub_B678(v209, v211, &qword_2F41B8);
  uint64_t v144 = v208;
  uint64_t v145 = v193;
  sub_B678(v208, v193, &qword_2F41A0);
  uint64_t v146 = v194;
  sub_B678(v116, v194, &qword_2F4188);
  uint64_t v147 = v195;
  sub_B678(v143, v195, &qword_2F41B8);
  uint64_t v148 = (int *)sub_4A98(&qword_2F41C0);
  sub_B678(v145, v147 + v148[12], &qword_2F41A0);
  uint64_t v149 = v147 + v148[16];
  *(void *)uint64_t v149 = 0;
  *(unsigned char *)(v149 + 8) = v213;
  *(unsigned char *)(v149 + 9) = v141;
  sub_B678(v146, v147 + v148[20], &qword_2F4188);
  sub_B6DC(v116, &qword_2F4188);
  sub_B6DC(v144, &qword_2F41A0);
  sub_B6DC(v142, &qword_2F41B8);
  sub_B6DC(v146, &qword_2F4188);
  sub_B6DC(v145, &qword_2F41A0);
  return sub_B6DC(v143, &qword_2F41B8);
}

uint64_t sub_1B0A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v116 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F41C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v120 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v119 = (uint64_t)&v90 - v8;
  uint64_t v126 = sub_26B910();
  uint64_t v131 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v125 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_26B980();
  uint64_t v13 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v132 = (uint64_t)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_26A220();
  uint64_t v128 = *(void *)(v18 - 8);
  uint64_t v129 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v90 - v21;
  uint64_t v123 = sub_26A160();
  uint64_t v130 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_4A98(&qword_2EBFC8);
  __chkstk_darwin(v122);
  uint64_t v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2F41A8);
  uint64_t v117 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113);
  uint64_t v29 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v112 = (char *)&v90 - v31;
  __chkstk_darwin(v30);
  uint64_t v127 = (uint64_t)&v90 - v32;
  uint64_t v33 = type metadata accessor for SeriesEntityCardView.TextLockupView(0);
  uint64_t v115 = a1 + *(int *)(v33 + 28);
  uint64_t v34 = v115;
  uint64_t v114 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v35 = (char *)(v34 + *(int *)(v114 + 24));
  double v36 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
  uint64_t v105 = v128 + 16;
  uint64_t v104 = v36;
  v36(v22, v35, v129);
  uint64_t v106 = v22;
  sub_26A170();
  uint64_t v102 = a1 + *(int *)(v33 + 20);
  sub_4204C(v132);
  uint64_t v37 = v13;
  uint64_t v38 = v13 + 104;
  double v39 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  uint64_t v40 = v15;
  uint64_t v41 = v124;
  uint64_t v103 = v38;
  __int16 v101 = v39;
  v39(v15, enum case for Font.TextStyle.title3(_:), v124);
  uint64_t v42 = enum case for Font.Design.serif (_:);
  uint64_t v43 = sub_26B820();
  uint64_t v44 = *(void *)(v43 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 104))(v12, v42, v43);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  uint64_t v100 = v43;
  uint64_t v99 = v44 + 56;
  uint64_t v97 = v45;
  v45(v12, 0, 1, v43);
  sub_26B8E0();
  uint64_t v111 = v12;
  sub_B6DC((uint64_t)v12, &qword_2EBFC0);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v109 = v40;
  uint64_t v110 = v37 + 8;
  uint64_t v98 = v46;
  v46(v40, v41);
  uint64_t v47 = v131;
  uint64_t v48 = *(void (**)(void))(v131 + 104);
  uint64_t v49 = v125;
  unsigned int v95 = enum case for Font.Leading.tight(_:);
  uint64_t v50 = v126;
  uint64_t v96 = v131 + 104;
  uint64_t v94 = (void (*)(char *, void, uint64_t))v48;
  v48(v125);
  uint64_t v51 = sub_26B930();
  swift_release();
  uint64_t v52 = v47 + 8;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v54 = v113;
  uint64_t v131 = v52;
  uint64_t v93 = v53;
  v53(v49, v50);
  uint64_t v55 = (uint64_t)v112;
  sub_1AD0DC(v132, type metadata accessor for FontConstants);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v57 = v130;
  uint64_t v58 = v123;
  uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
  v92(v26, v24, v123);
  uint64_t v59 = (uint64_t *)&v26[*(int *)(v122 + 36)];
  *uint64_t v59 = KeyPath;
  v59[1] = v51;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v130 = v57 + 8;
  uint64_t v91 = v60;
  v60(v24, v58);
  uint64_t v61 = swift_getKeyPath();
  sub_B678((uint64_t)v26, (uint64_t)v29, &qword_2EBFC8);
  uint64_t v62 = v54;
  uint64_t v63 = &v29[*(int *)(v54 + 36)];
  *(void *)uint64_t v63 = v61;
  *((void *)v63 + 1) = 3;
  v63[16] = 0;
  uint64_t v108 = v26;
  sub_B6DC((uint64_t)v26, &qword_2EBFC8);
  sub_26C160();
  sub_B678((uint64_t)v29, v55, &qword_2F41A8);
  swift_release();
  uint64_t v107 = v29;
  sub_B6DC((uint64_t)v29, &qword_2F41A8);
  uint64_t v64 = (uint64_t)v116;
  sub_19CC4(v55, v127, &qword_2F41A8);
  sub_B678(v115 + *(int *)(v114 + 28), v64, &qword_2EA0C0);
  uint64_t v65 = v128;
  uint64_t v66 = v129;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v128 + 48))(v64, 1) == 1)
  {
    sub_B6DC(v64, &qword_2EA0C0);
    uint64_t v67 = 1;
    uint64_t v68 = v119;
  }
  else
  {
    uint64_t v69 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v118, v64, v66);
    v104(v106, v69, v66);
    uint64_t v70 = v24;
    sub_26A170();
    sub_4204C(v132);
    uint64_t v71 = v109;
    uint64_t v72 = v124;
    v101(v109, enum case for Font.TextStyle.subheadline(_:), v124);
    uint64_t v73 = (uint64_t)v111;
    v97(v111, 1, 1, v100);
    sub_26B890();
    sub_26B8E0();
    sub_B6DC(v73, &qword_2EBFC0);
    v98(v71, v72);
    char v74 = v125;
    uint64_t v75 = v62;
    uint64_t v76 = v126;
    v94(v125, v95, v126);
    uint64_t v77 = sub_26B930();
    swift_release();
    v93(v74, v76);
    sub_1AD0DC(v132, type metadata accessor for FontConstants);
    uint64_t v78 = swift_getKeyPath();
    uint64_t v79 = (uint64_t)v108;
    uint64_t v80 = v123;
    v92(v108, v70, v123);
    uint64_t v81 = (uint64_t *)(v79 + *(int *)(v122 + 36));
    *uint64_t v81 = v78;
    v81[1] = v77;
    v91(v70, v80);
    uint64_t v82 = swift_getKeyPath();
    uint64_t v83 = (uint64_t)v107;
    sub_B678(v79, (uint64_t)v107, &qword_2EBFC8);
    uint64_t v62 = v75;
    uint64_t v84 = v83 + *(int *)(v75 + 36);
    *(void *)uint64_t v84 = v82;
    *(void *)(v84 + 8) = 2;
    *(unsigned char *)(v84 + 16) = 0;
    sub_B6DC(v79, &qword_2EBFC8);
    sub_26C160();
    sub_B678(v83, v55, &qword_2F41A8);
    swift_release();
    sub_B6DC(v83, &qword_2F41A8);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v118, v129);
    uint64_t v68 = v119;
    sub_19CC4(v55, v119, &qword_2F41A8);
    uint64_t v67 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v68, v67, 1, v62);
  uint64_t v85 = v127;
  sub_B678(v127, v55, &qword_2F41A8);
  uint64_t v86 = v120;
  sub_B678(v68, v120, &qword_2F41C8);
  uint64_t v87 = v121;
  sub_B678(v55, v121, &qword_2F41A8);
  uint64_t v88 = sub_4A98(&qword_2F41D0);
  sub_B678(v86, v87 + *(int *)(v88 + 48), &qword_2F41C8);
  sub_B6DC(v68, &qword_2F41C8);
  sub_B6DC(v85, &qword_2F41A8);
  sub_B6DC(v86, &qword_2F41C8);
  return sub_B6DC(v55, &qword_2F41A8);
}

uint64_t static ShelfGridLayout.seriesEntityCard(context:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShelfGridLayoutContext();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_1AD13C(a1, (uint64_t)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1B2274((uint64_t)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
  char v19 = *(unsigned char *)(a1 + 8);
  long long v9 = *(_OWORD *)(a1 + 32);
  v18[0] = *(_OWORD *)(a1 + 16);
  v18[1] = v9;
  uint64_t v10 = ShelfGridBreakpoint.resolveColumns(for:dynamicTypeSize:)((uint64_t *)v18);
  uint64_t v11 = (uint64_t (**)@<X0>(double *@<X8>))((char *)a2 + *(int *)(sub_4A98(&qword_2F3E10) + 48));
  *a2 = 1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = sub_1B22DC;
  *(void *)(v12 + 32) = v8;
  *(unsigned char *)(v12 + 40) = 1;
  *uint64_t v11 = sub_1B23A8;
  v11[1] = (uint64_t (*)@<X0>(double *@<X8>))v12;
  uint64_t v13 = enum case for ShelfGridItemWidth.calculate(_:);
  uint64_t v14 = sub_26A2B0();
  (*(void (**)(uint64_t (**)@<X0>(double *@<X8>), uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v11, v13, v14);
  uint64_t v15 = enum case for ShelfGridLayout.horizontal(_:);
  uint64_t v16 = sub_26A190();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
}

uint64_t sub_1B189C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShelfGridLayoutContext();
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v15 - v9;
  if (*(unsigned char *)(a1 + 8) == 2) {
    goto LABEL_10;
  }
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v12 = *(void *)a1;
    sub_1AD13C(a1, (uint64_t)&v15 - v9, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
    if (v12 > 3)
    {
      sub_1AD0DC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
      sub_1AD13C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
LABEL_11:
      uint64_t result = sub_1AD0DC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
      goto LABEL_12;
    }
    int v13 = v10[*(int *)(v4 + 32) + 2];
    sub_1AD0DC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
    sub_1AD13C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
    if (v13 != 1) {
      goto LABEL_11;
    }
    char v14 = sub_26AB10();
    uint64_t result = sub_1AD0DC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShelfGridLayoutContext);
    if (v14)
    {
LABEL_12:
      uint64_t v11 = 0x3FF0000000000000;
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v11 = 0x4000000000000000;
    goto LABEL_13;
  }
  uint64_t result = sub_26AB10();
  uint64_t v11 = 0x4008000000000000;
  if (result) {
    uint64_t v11 = 0x3FF0000000000000;
  }
LABEL_13:
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1B1A8C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1B1B60(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_BEAB0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_BEAB0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1B1B60(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_26D9B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1B1D1C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_26DAE0();
  if (!v8)
  {
    sub_26DB90();
    __break(1u);
LABEL_17:
    uint64_t result = sub_26DBE0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1B1D1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1B1DB4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B2010(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1B2010(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1B1DB4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1B1F2C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_26DAA0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_26DB90();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_26D4F0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_26DBE0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_26DB90();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1B1F2C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_4A98(&qword_2F40A0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B1F94(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_26D540();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_26D510();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1B2010(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2F40A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_1B2160()
{
  uint64_t v1 = type metadata accessor for ShelfGridLayoutContext();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v2 + *(int *)(v1 + 28);
  uint64_t v4 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_1B2274(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B22DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShelfGridLayoutContext() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1B189C(v4, a1);
}

uint64_t sub_1B235C()
{
  sub_1B2398(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_1B2398(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B23A8@<X0>(double *a1@<X8>)
{
  return sub_24C9F4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

uint64_t sub_1B23B8()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for SeriesEntityCardView(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2ED8F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    int64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)int64_t v9 = *(_WORD *)v10;
      size_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v12 = v11[6];
      unint64_t v13 = &v9[v12];
      char v14 = &v10[v12];
      uint64_t v15 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      uint64_t v16 = v11[8];
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      v17[2] = v18[2];
      *(_WORD *)uint64_t v17 = *(_WORD *)v18;
    }
    else
    {
      *(void *)int64_t v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[6];
    uint64_t v21 = a3[7];
    uint64_t v22 = &a1[v20];
    uint64_t v23 = &a2[v20];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = &a1[v21];
    uint64_t v26 = &a2[v21];
    uint64_t v27 = sub_26A220();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    swift_bridgeObjectRetain();
    v29(v25, v26, v27);
    v29(&a1[a3[8]], &a2[a3[8]], v27);
    uint64_t v30 = a3[9];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v40(&a2[v30], 1, v27))
    {
      uint64_t v33 = sub_4A98(&qword_2EA0C0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    }
    uint64_t v34 = a3[10];
    uint64_t v35 = &a1[v34];
    double v36 = &a2[v34];
    if (v40(&a2[v34], 1, v27))
    {
      uint64_t v37 = sub_4A98(&qword_2EA0C0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v29(v35, v36, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v35, 0, 1, v27);
    }
    uint64_t v38 = a3[12];
    *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
    a1[v38] = a2[v38];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SeriesEntityCardView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  size_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(a1 + a2[8], v9);
  uint64_t v12 = a1 + a2[9];
  unint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9)) {
    v11(v12, v9);
  }
  uint64_t v14 = a1 + a2[10];
  if (!v13(v14, 1, v9)) {
    v11(v14, v9);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeriesEntityCardView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_WORD *)(a1 + v7);
  uint64_t v9 = (_WORD *)(a2 + v7);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = (char *)v8 + v11;
    unint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    uint64_t v15 = v10[8];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    void v16[2] = v17[2];
    *(_WORD *)uint64_t v16 = *(_WORD *)v17;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = a3;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  swift_bridgeObjectRetain();
  v28(v23, v24, v25);
  v28(a1 + v27[8], a2 + v27[8], v25);
  uint64_t v40 = v27;
  uint64_t v29 = v27[9];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v32(a2 + v29, 1, v25))
  {
    uint64_t v33 = sub_4A98(&qword_2EA0C0);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v28((uint64_t)v30, (uint64_t)v31, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  uint64_t v34 = v40[10];
  uint64_t v35 = (void *)(a1 + v34);
  double v36 = (const void *)(a2 + v34);
  if (v32(a2 + v34, 1, v25))
  {
    uint64_t v37 = sub_4A98(&qword_2EA0C0);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    v28((uint64_t)v35, (uint64_t)v36, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v35, 0, 1, v25);
  }
  uint64_t v38 = v40[12];
  *(void *)(a1 + v40[11]) = *(void *)(a2 + v40[11]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeriesEntityCardView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (unsigned char *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v11 = v10[6];
      uint64_t v12 = &v8[v11];
      unint64_t v13 = &v9[v11];
      uint64_t v14 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      uint64_t v15 = v10[8];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[2];
      *(_WORD *)uint64_t v16 = *(_WORD *)v17;
      void v16[2] = v18;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(void *, const void *, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  uint64_t v41 = v27;
  v27((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v25);
  uint64_t v42 = a3;
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v27) = v31(a1 + v28, 1, v25);
  int v32 = v31((uint64_t)v30, 1, v25);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v29, v30, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v29, v25);
LABEL_11:
    uint64_t v33 = sub_4A98(&qword_2EA0C0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_12;
  }
  v41(v29, v30, v25);
LABEL_12:
  uint64_t v34 = v42[10];
  uint64_t v35 = (void *)(a1 + v34);
  double v36 = (const void *)(a2 + v34);
  int v37 = v31(a1 + v34, 1, v25);
  int v38 = v31((uint64_t)v36, 1, v25);
  if (!v37)
  {
    if (!v38)
    {
      v41(v35, v36, v25);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v35, v25);
    goto LABEL_17;
  }
  if (v38)
  {
LABEL_17:
    uint64_t v39 = sub_4A98(&qword_2EA0C0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v35, v36, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v35, 0, 1, v25);
LABEL_18:
  *(void *)(a1 + v42[11]) = *(void *)(a2 + v42[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v42[12]) = *(unsigned char *)(a2 + v42[12]);
  return a1;
}

uint64_t initializeWithTake for SeriesEntityCardView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_WORD *)(a1 + v7);
  uint64_t v9 = (_WORD *)(a2 + v7);
  uint64_t v10 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v12 = v11[6];
    unint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)((char *)v8 + v11[7]) = *(void *)((char *)v9 + v11[7]);
    uint64_t v16 = v11[8];
    uint64_t v17 = (char *)v8 + v16;
    char v18 = (char *)v9 + v16;
    v17[2] = v18[2];
    *(_WORD *)uint64_t v17 = *(_WORD *)v18;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v19 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_26A220();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = a3;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
  v25(v20, v21, v22);
  v25(a1 + v24[8], a2 + v24[8], v22);
  int v37 = v24;
  uint64_t v26 = v24[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v29(a2 + v26, 1, v22))
  {
    uint64_t v30 = sub_4A98(&qword_2EA0C0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v27, (uint64_t)v28, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
  }
  uint64_t v31 = v37[10];
  int v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v29(a2 + v31, 1, v22))
  {
    uint64_t v34 = sub_4A98(&qword_2EA0C0);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v32, (uint64_t)v33, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v22);
  }
  uint64_t v35 = v37[12];
  *(void *)(a1 + v37[11]) = *(void *)(a2 + v37[11]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  return a1;
}

uint64_t assignWithTake for SeriesEntityCardView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (_WORD *)(a1 + v7);
    uint64_t v9 = (_WORD *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EB708);
    uint64_t v10 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v12 = v11[6];
      unint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)((char *)v8 + v11[7]) = *(void *)((char *)v9 + v11[7]);
      uint64_t v16 = v11[8];
      uint64_t v17 = (char *)v8 + v16;
      char v18 = (char *)v9 + v16;
      v17[2] = v18[2];
      *(_WORD *)uint64_t v17 = *(_WORD *)v18;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_26A220();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40);
  v29(v25, v26, v27);
  uint64_t v43 = (void (*)(void *, const void *, uint64_t))v29;
  v29(a1 + a3[8], a2 + a3[8], v27);
  uint64_t v44 = a3;
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  int v32 = (const void *)(a2 + v30);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v29) = v33(a1 + v30, 1, v27);
  int v34 = v33((uint64_t)v32, 1, v27);
  if (v29)
  {
    if (!v34)
    {
      (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v31, v32, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v31, v27);
LABEL_10:
    uint64_t v35 = sub_4A98(&qword_2EA0C0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_11;
  }
  v43(v31, v32, v27);
LABEL_11:
  uint64_t v36 = v44[10];
  int v37 = (void *)(a1 + v36);
  int v38 = (const void *)(a2 + v36);
  int v39 = v33(a1 + v36, 1, v27);
  int v40 = v33((uint64_t)v38, 1, v27);
  if (!v39)
  {
    if (!v40)
    {
      v43(v37, v38, v27);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v37, v27);
    goto LABEL_16;
  }
  if (v40)
  {
LABEL_16:
    uint64_t v41 = sub_4A98(&qword_2EA0C0);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v37, v38, v27);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v37, 0, 1, v27);
LABEL_17:
  *(void *)(a1 + v44[11]) = *(void *)(a2 + v44[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v44[12]) = *(unsigned char *)(a2 + v44[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesEntityCardView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B3908);
}

uint64_t sub_1B3908(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED8F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = sub_26A220();
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[7];
      goto LABEL_11;
    }
    uint64_t v17 = sub_4A98(&qword_2EA0C0);
    char v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[9];
    return v18(v20, a2, v19);
  }
}

uint64_t storeEnumTagSinglePayload for SeriesEntityCardView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B3AF8);
}

uint64_t sub_1B3AF8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2ED8F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v16 = sub_26A220();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4A98(&qword_2EA0C0);
  char v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];

  return v18(v20, a2, a2, v19);
}

void sub_1B3CD4()
{
  sub_80358();
  if (v0 <= 0x3F)
  {
    sub_1B8F20(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_26A220();
      if (v2 <= 0x3F)
      {
        sub_1B8F20(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unint64_t sub_1B3E98()
{
  unint64_t result = qword_2F3EC8;
  if (!qword_2F3EC8)
  {
    sub_7B0C(&qword_2F3DB8);
    sub_7B0C(&qword_2F3DA8);
    sub_1AD1A4();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F3ED0, &qword_2F3E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F3EC8);
  }
  return result;
}

void *sub_1B3F6C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v43 = a2;
    uint64_t v44 = a3;
    char v18 = (void *)((char *)a1 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v23 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
    uint64_t v24 = v23[5];
    uint64_t v41 = &v21[v24];
    uint64_t v25 = &v22[v24];
    uint64_t v26 = sub_26A220();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    v28(v41, v25, v26);
    v28(&v21[v23[6]], &v22[v23[6]], v26);
    uint64_t v42 = v23;
    uint64_t v29 = v23[7];
    uint64_t v30 = &v21[v29];
    uint64_t v31 = &v22[v29];
    int v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v40(&v22[v29], 1, v26))
    {
      uint64_t v32 = sub_4A98(&qword_2EA0C0);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v28(v30, v31, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v30, 0, 1, v26);
    }
    uint64_t v33 = v28;
    uint64_t v34 = v42[8];
    uint64_t v35 = &v21[v34];
    uint64_t v36 = &v22[v34];
    if (v40(&v22[v34], 1, v26))
    {
      uint64_t v37 = sub_4A98(&qword_2EA0C0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v33(v35, v36, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v35, 0, 1, v26);
    }
    uint64_t v38 = *(int *)(v44 + 32);
    *(void *)((char *)a1 + *(int *)(v44 + 28)) = *(void *)((char *)v43 + *(int *)(v44 + 28));
    *((unsigned char *)a1 + v38) = *((unsigned char *)v43 + v38);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1B42F8(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[6], v9);
  uint64_t v12 = v6 + v7[7];
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9)) {
    v11(v12, v9);
  }
  uint64_t v14 = v6 + v7[8];
  if (!v13(v14, 1, v9)) {
    v11(v14, v9);
  }

  return swift_bridgeObjectRelease();
}

_WORD *sub_1B44D4(_WORD *a1, _WORD *a2, uint64_t a3)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(int *)(a3 + 24);
  int v39 = a1;
  uint64_t v40 = a3;
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v41 = a2;
  uint64_t v20 = (char *)a2 + v15;
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v21 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v22 = v21[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  swift_bridgeObjectRetain();
  v27(v23, v24, v25);
  v27(&v19[v21[6]], &v20[v21[6]], v25);
  uint64_t v28 = v21[7];
  uint64_t v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v38(&v20[v28], 1, v25))
  {
    uint64_t v31 = sub_4A98(&qword_2EA0C0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v27(v29, v30, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
  }
  uint64_t v32 = v21[8];
  uint64_t v33 = &v19[v32];
  uint64_t v34 = &v20[v32];
  if (v38(&v20[v32], 1, v25))
  {
    uint64_t v35 = sub_4A98(&qword_2EA0C0);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v27(v33, v34, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v33, 0, 1, v25);
  }
  uint64_t v36 = *(int *)(v40 + 32);
  *(void *)((char *)v39 + *(int *)(v40 + 28)) = *(void *)((char *)v41 + *(int *)(v40 + 28));
  *((unsigned char *)v39 + v36) = *((unsigned char *)v41 + v36);
  swift_bridgeObjectRetain();
  return v39;
}

unsigned char *sub_1B4808(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v47 = a1;
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  a1[v18] = *v20;
  uint64_t v21 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v22 = v21[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  uint64_t v44 = v27;
  v27(&v19[v21[6]], &v20[v21[6]], v25);
  uint64_t v28 = v21[7];
  uint64_t v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  uint64_t v31 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48);
  int v32 = v31(&v19[v28], 1, v25);
  int v33 = v31(v30, 1, v25);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 16))(v29, v30, v25);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v33)
  {
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v29, v25);
LABEL_11:
    uint64_t v34 = sub_4A98(&qword_2EA0C0);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  v44(v29, v30, v25);
LABEL_12:
  uint64_t v35 = v21[8];
  uint64_t v36 = &v19[v35];
  uint64_t v37 = &v20[v35];
  int v38 = v31(&v19[v35], 1, v25);
  int v39 = v31(v37, 1, v25);
  if (!v38)
  {
    uint64_t v41 = v46;
    uint64_t v40 = v47;
    if (!v39)
    {
      v44(v36, v37, v25);
      goto LABEL_18;
    }
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v36, v25);
    goto LABEL_17;
  }
  uint64_t v41 = v46;
  uint64_t v40 = v47;
  if (v39)
  {
LABEL_17:
    uint64_t v42 = sub_4A98(&qword_2EA0C0);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 16))(v36, v37, v25);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
LABEL_18:
  *(void *)&v40[*(int *)(v45 + 28)] = *(void *)&v41[*(int *)(v45 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40[*(int *)(v45 + 32)] = v41[*(int *)(v45 + 32)];
  return v40;
}

_WORD *sub_1B4C58(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v36 = a2;
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v37 = a1;
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v16[v19];
  uint64_t v21 = &v17[v19];
  uint64_t v22 = sub_26A220();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v24(v20, v21, v22);
  v24(&v16[v18[6]], &v17[v18[6]], v22);
  uint64_t v25 = v18[7];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = &v17[v25];
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v35(&v17[v25], 1, v22))
  {
    uint64_t v28 = sub_4A98(&qword_2EA0C0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v24(v26, v27, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
  }
  uint64_t v29 = v18[8];
  uint64_t v30 = &v16[v29];
  uint64_t v31 = &v17[v29];
  if (v35(&v17[v29], 1, v22))
  {
    uint64_t v32 = sub_4A98(&qword_2EA0C0);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v24(v30, v31, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v30, 0, 1, v22);
  }
  unint64_t result = v37;
  uint64_t v34 = a3[8];
  *(void *)((char *)v37 + a3[7]) = *(void *)((char *)v36 + a3[7]);
  *((unsigned char *)v37 + v34) = *((unsigned char *)v36 + v34);
  return result;
}

_WORD *sub_1B4F84(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    uint64_t v6 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      char v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v49 = a1;
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *((unsigned char *)a1 + v20) = *v22;
  uint64_t v23 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v24 = v23[5];
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v27 = sub_26A220();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 40);
  v29(v25, v26, v27);
  uint64_t v46 = v29;
  v29(&v21[v23[6]], &v22[v23[6]], v27);
  uint64_t v30 = v23[7];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  int v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v34 = v33(&v21[v30], 1, v27);
  int v35 = v33(v32, 1, v27);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v32, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
LABEL_10:
    uint64_t v36 = sub_4A98(&qword_2EA0C0);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_11;
  }
  v46(v31, v32, v27);
LABEL_11:
  uint64_t v37 = v23[8];
  int v38 = &v21[v37];
  int v39 = &v22[v37];
  int v40 = v33(&v21[v37], 1, v27);
  int v41 = v33(v39, 1, v27);
  if (!v40)
  {
    uint64_t v43 = v48;
    uint64_t v42 = v49;
    if (!v41)
    {
      v46(v38, v39, v27);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v38, v27);
    goto LABEL_16;
  }
  uint64_t v43 = v48;
  uint64_t v42 = v49;
  if (v41)
  {
LABEL_16:
    uint64_t v44 = sub_4A98(&qword_2EA0C0);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v38, v39, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v38, 0, 1, v27);
LABEL_17:
  *(void *)((char *)v42 + *(int *)(v47 + 28)) = *(void *)((char *)v43 + *(int *)(v47 + 28));
  swift_bridgeObjectRelease();
  *((unsigned char *)v42 + *(int *)(v47 + 32)) = *((unsigned char *)v43 + *(int *)(v47 + 32));
  return v42;
}

uint64_t sub_1B53C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B53D8);
}

uint64_t sub_1B53D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB718);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1B550C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B5520);
}

uint64_t sub_1B5520(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EB718);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1B5654()
{
  sub_1B8F20(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SeriesEntityCardView.TextLockupViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1B576C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26A220();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    v12((char *)v4 + a3[6], (char *)a2 + a3[6], v10);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v23((char *)a2 + v13, 1, v10))
    {
      uint64_t v16 = sub_4A98(&qword_2EA0C0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v23(v20, 1, v10))
    {
      uint64_t v21 = sub_4A98(&qword_2EA0C0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v12(v19, v20, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_1B59CC(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_26A220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v4, v5);
  v11(a1 + a2[6], v5);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v8(v7, 1, v5)) {
    v11(v7, v5);
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v5);
  }
  return result;
}

unsigned char *sub_1B5B3C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v21 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v21(&a2[v12], 1, v9))
  {
    uint64_t v15 = sub_4A98(&qword_2EA0C0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (v21(v18, 1, v9))
  {
    uint64_t v19 = sub_4A98(&qword_2EA0C0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  return a1;
}

unsigned char *sub_1B5D4C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v25 = v11;
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v11) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (v11)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v14, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    uint64_t v17 = sub_4A98(&qword_2EA0C0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v25(v13, v14, v9);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v15(&a1[v18], 1, v9);
  int v22 = v15(v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      v25(v19, v20, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_4A98(&qword_2EA0C0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

unsigned char *sub_1B6030(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v21 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v21(&a2[v12], 1, v9))
  {
    uint64_t v15 = sub_4A98(&qword_2EA0C0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (v21(v18, 1, v9))
  {
    uint64_t v19 = sub_4A98(&qword_2EA0C0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  return a1;
}

unsigned char *sub_1B6240(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v25 = v11;
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v11) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (v11)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v14, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    uint64_t v17 = sub_4A98(&qword_2EA0C0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v25(v13, v14, v9);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v15(&a1[v18], 1, v9);
  int v22 = v15(v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      v25(v19, v20, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_4A98(&qword_2EA0C0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v19, v20, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

uint64_t sub_1B6524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B6538);
}

uint64_t sub_1B6538(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = &a1[*(int *)(a3 + 28)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1B6660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B6674);
}

unsigned char *sub_1B6674(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = &v5[*(int *)(a4 + 28)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1B67A0()
{
  sub_26A220();
  if (v0 <= 0x3F)
  {
    sub_1B8F20(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1B68A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B68C4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SeriesEntityCardView.CardContents(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1AE268(a1, v6, a2);
}

unint64_t sub_1B6944()
{
  unint64_t result = qword_2F4038;
  if (!qword_2F4038)
  {
    sub_7B0C(&qword_2F4028);
    sub_7C18(&qword_2F4040, &qword_2F4020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4038);
  }
  return result;
}

uint64_t type metadata accessor for SeriesEntityCardView.TextLockupView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F4100);
}

uint64_t sub_1B6A10()
{
  uint64_t v1 = type metadata accessor for SeriesEntityCardView.CardContents(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v3 + *(int *)(v1 + 24);
  uint64_t v7 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[6], v9);
  uint64_t v12 = v6 + v7[7];
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9)) {
    v11(v12, v9);
  }
  uint64_t v14 = v6 + v7[8];
  if (!v13(v14, 1, v9)) {
    v11(v14, v9);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

double sub_1B6C74@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SeriesEntityCardView.CardContents(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1ADFB4(v4, a1);
}

unint64_t sub_1B6CF4()
{
  unint64_t result = qword_2F4070;
  if (!qword_2F4070)
  {
    sub_7B0C(&qword_2F4068);
    sub_7C18(&qword_2F4078, &qword_2F4080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4070);
  }
  return result;
}

uint64_t sub_1B6D94(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if (a16) {
    sub_45370(a1, a2, a3 & 1);
  }
  else {
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6DEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if (a16) {
    sub_3A380(a1, a2, a3 & 1);
  }
  else {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for SeriesEntityCardView.RegularCardLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SeriesEntityCardView.RegularCardLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SeriesEntityCardView.RegularCardLayout()
{
  return &type metadata for SeriesEntityCardView.RegularCardLayout;
}

void *sub_1B6EB0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[5];
    uint64_t v18 = (_WORD *)((char *)a1 + v17);
    uint64_t v19 = (_WORD *)((char *)a2 + v17);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v18 = *v19;
      uint64_t v20 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v21 = *(int *)(v20 + 24);
      int v22 = (char *)v18 + v21;
      uint64_t v23 = (char *)v19 + v21;
      uint64_t v24 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(void *)((char *)v18 + *(int *)(v20 + 28)) = *(void *)((char *)v19 + *(int *)(v20 + 28));
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[6];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = a3[7];
    uint64_t v49 = a1;
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v32 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
    uint64_t v33 = v32[5];
    int v34 = &v30[v33];
    int v35 = &v31[v33];
    uint64_t v36 = sub_26A220();
    uint64_t v37 = *(void *)(v36 - 8);
    int v38 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v38(v34, v35, v36);
    v38(&v30[v32[6]], &v31[v32[6]], v36);
    uint64_t v39 = v32[7];
    int v40 = &v30[v39];
    int v41 = &v31[v39];
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    if (v48(&v31[v39], 1, v36))
    {
      uint64_t v42 = sub_4A98(&qword_2EA0C0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v38(v40, v41, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
    }
    uint64_t v43 = v32[8];
    uint64_t v44 = &v30[v43];
    uint64_t v45 = &v31[v43];
    if (v48(&v31[v43], 1, v36))
    {
      uint64_t v46 = sub_4A98(&qword_2EA0C0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      v38(v44, v45, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v36);
    }
    return v49;
  }
  return (void *)v16;
}

uint64_t sub_1B7350(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[5];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v13 = v11 + v12[5];
  uint64_t v14 = sub_26A220();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v20(v13, v14);
  v20(v11 + v12[6], v14);
  uint64_t v16 = v11 + v12[7];
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v17(v16, 1, v14)) {
    v20(v16, v14);
  }
  uint64_t v18 = v11 + v12[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18, 1, v14);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v18, v14);
  }
  return result;
}

_WORD *sub_1B761C(_WORD *a1, _WORD *a2, int *a3)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[5];
  uint64_t v15 = (_WORD *)((char *)a1 + v14);
  uint64_t v16 = (_WORD *)((char *)a2 + v14);
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v15 = *v16;
    uint64_t v17 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = (char *)v15 + v18;
    uint64_t v20 = (char *)v16 + v18;
    uint64_t v21 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)((char *)v15 + *(int *)(v17 + 28)) = *(void *)((char *)v16 + *(int *)(v17 + 28));
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[6];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[7];
  uint64_t v46 = a1;
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
  uint64_t v29 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v30 = v29[5];
  uint64_t v31 = &v27[v30];
  uint64_t v32 = &v28[v30];
  uint64_t v33 = sub_26A220();
  uint64_t v34 = *(void *)(v33 - 8);
  int v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v35(v31, v32, v33);
  v35(&v27[v29[6]], &v28[v29[6]], v33);
  uint64_t v36 = v29[7];
  uint64_t v37 = &v27[v36];
  int v38 = &v28[v36];
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v45(&v28[v36], 1, v33))
  {
    uint64_t v39 = sub_4A98(&qword_2EA0C0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    v35(v37, v38, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
  }
  uint64_t v40 = v29[8];
  int v41 = &v27[v40];
  uint64_t v42 = &v28[v40];
  if (v45(&v28[v40], 1, v33))
  {
    uint64_t v43 = sub_4A98(&qword_2EA0C0);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v35(v41, v42, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v33);
  }
  return v46;
}

unsigned char *sub_1B7A68(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[5];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_B6DC((uint64_t)&a1[v15], &qword_2EBC58);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v16 = *v17;
      v16[1] = v17[1];
      uint64_t v18 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v19 = *(int *)(v18 + 24);
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(void *)&v16[*(int *)(v18 + 28)] = *(void *)&v17[*(int *)(v18 + 28)];
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[6];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_B6DC((uint64_t)&a1[v23], &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[7];
  uint64_t v52 = a1;
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *uint64_t v28 = a2[v27];
  uint64_t v30 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = &v28[v31];
  uint64_t v33 = &v29[v31];
  uint64_t v34 = sub_26A220();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 24);
  v36(v32, v33, v34);
  uint64_t v51 = v36;
  v36(&v28[v30[6]], &v29[v30[6]], v34);
  uint64_t v37 = v30[7];
  int v38 = &v28[v37];
  uint64_t v39 = &v29[v37];
  uint64_t v40 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v36) = v40(&v28[v37], 1, v34);
  int v41 = v40(v39, 1, v34);
  if (v36)
  {
    if (!v41)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v38, v39, v34);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v41)
  {
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v38, v34);
LABEL_17:
    uint64_t v42 = sub_4A98(&qword_2EA0C0);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_18;
  }
  v51(v38, v39, v34);
LABEL_18:
  uint64_t v43 = v30[8];
  uint64_t v44 = &v28[v43];
  uint64_t v45 = &v29[v43];
  int v46 = v40(&v28[v43], 1, v34);
  int v47 = v40(v45, 1, v34);
  if (!v46)
  {
    uint64_t v48 = v52;
    if (!v47)
    {
      v51(v44, v45, v34);
      return v48;
    }
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v44, v34);
    goto LABEL_23;
  }
  uint64_t v48 = v52;
  if (v47)
  {
LABEL_23:
    uint64_t v49 = sub_4A98(&qword_2EA0C0);
    memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    return v48;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v44, v45, v34);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v44, 0, 1, v34);
  return v48;
}

_WORD *sub_1B7FD8(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = (_WORD *)((char *)a1 + v15);
  uint64_t v17 = (_WORD *)((char *)a2 + v15);
  uint64_t v18 = sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v16 = *v17;
    uint64_t v19 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v20 = *(int *)(v19 + 24);
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = (char *)v17 + v20;
    uint64_t v23 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)((char *)v16 + *(int *)(v19 + 28)) = *(void *)((char *)v17 + *(int *)(v19 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v29 = a3[7];
  uint64_t v49 = a1;
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  uint64_t v32 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v33 = v32[5];
  uint64_t v34 = &v30[v33];
  uint64_t v35 = &v31[v33];
  uint64_t v36 = sub_26A220();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v38(v34, v35, v36);
  v38(&v30[v32[6]], &v31[v32[6]], v36);
  uint64_t v39 = v32[7];
  uint64_t v40 = &v30[v39];
  int v41 = &v31[v39];
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v48(&v31[v39], 1, v36))
  {
    uint64_t v42 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    v38(v40, v41, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
  }
  uint64_t v43 = v32[8];
  uint64_t v44 = &v30[v43];
  uint64_t v45 = &v31[v43];
  if (v48(&v31[v43], 1, v36))
  {
    uint64_t v46 = sub_4A98(&qword_2EA0C0);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    v38(v44, v45, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v36);
  }
  return v49;
}

_WORD *sub_1B844C(_WORD *a1, _WORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    uint64_t v6 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      char v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v15 = a3[5];
    uint64_t v16 = (_WORD *)((char *)a1 + v15);
    uint64_t v17 = (_WORD *)((char *)a2 + v15);
    sub_B6DC((uint64_t)a1 + v15, &qword_2EBC58);
    uint64_t v18 = sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v16 = *v17;
      uint64_t v19 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = (char *)v16 + v20;
      uint64_t v22 = (char *)v17 + v20;
      uint64_t v23 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)((char *)v16 + *(int *)(v19 + 28)) = *(void *)((char *)v17 + *(int *)(v19 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v24 = a3[6];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_B6DC((uint64_t)a1 + v24, &qword_2EA968);
    uint64_t v27 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  uint64_t v29 = a3[7];
  uint64_t v54 = a1;
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *uint64_t v30 = *((unsigned char *)a2 + v29);
  uint64_t v32 = (int *)type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v33 = v32[5];
  uint64_t v34 = &v30[v33];
  uint64_t v35 = &v31[v33];
  uint64_t v36 = sub_26A220();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = *(void (**)(unsigned char *, char *, uint64_t))(v37 + 40);
  v38(v34, v35, v36);
  uint64_t v53 = v38;
  v38(&v30[v32[6]], &v31[v32[6]], v36);
  uint64_t v39 = v32[7];
  uint64_t v40 = &v30[v39];
  int v41 = &v31[v39];
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  LODWORD(v38) = v42(&v30[v39], 1, v36);
  int v43 = v42(v41, 1, v36);
  if (v38)
  {
    if (!v43)
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v37 + 32))(v40, v41, v36);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v43)
  {
    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v40, v36);
LABEL_16:
    uint64_t v44 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_17;
  }
  v53(v40, v41, v36);
LABEL_17:
  uint64_t v45 = v32[8];
  uint64_t v46 = &v30[v45];
  int v47 = &v31[v45];
  int v48 = v42(&v30[v45], 1, v36);
  int v49 = v42(v47, 1, v36);
  if (!v48)
  {
    uint64_t v50 = v54;
    if (!v49)
    {
      v53(v46, v47, v36);
      return v50;
    }
    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v46, v36);
    goto LABEL_22;
  }
  uint64_t v50 = v54;
  if (v49)
  {
LABEL_22:
    uint64_t v51 = sub_4A98(&qword_2EA0C0);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    return v50;
  }
  (*(void (**)(unsigned char *, char *, uint64_t))(v37 + 32))(v46, v47, v36);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(v46, 0, 1, v36);
  return v50;
}

uint64_t sub_1B89D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B89E8);
}

uint64_t sub_1B89E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB718);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t sub_1B8B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B8BA0);
}

uint64_t sub_1B8BA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB718);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = type metadata accessor for SeriesEntityCardView.TextLockupViewModel(0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1B8D50()
{
  sub_1B8F20(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1B8F20(319, &qword_2EDD48, type metadata accessor for FontConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1B8F20(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SeriesEntityCardView.TextLockupViewModel(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1B8F20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SeriesEntityCardView.TextLockupViewModel.LayoutDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B9050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesEntityCardView.TextLockupViewModel.LayoutDirection()
{
  return &type metadata for SeriesEntityCardView.TextLockupViewModel.LayoutDirection;
}

unint64_t sub_1B908C()
{
  unint64_t result = qword_2F4140;
  if (!qword_2F4140)
  {
    sub_7B0C(&qword_2F4148);
    sub_1B6944();
    sub_7C18(&qword_2F4048, &qword_2F4030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4140);
  }
  return result;
}

unint64_t sub_1B9130()
{
  unint64_t result = qword_2F4150;
  if (!qword_2F4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4150);
  }
  return result;
}

uint64_t sub_1B9184()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B91A4()
{
  unint64_t result = qword_2F4158;
  if (!qword_2F4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4158);
  }
  return result;
}

uint64_t sub_1B91F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B926C()
{
  unint64_t result = qword_2F41D8;
  if (!qword_2F41D8)
  {
    sub_7B0C(&qword_2F4178);
    sub_1B930C();
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F41D8);
  }
  return result;
}

unint64_t sub_1B930C()
{
  unint64_t result = qword_2F41E0;
  if (!qword_2F41E0)
  {
    sub_7B0C(&qword_2F4170);
    sub_7C18(qword_2F41E8, &qword_2F4168);
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F41E0);
  }
  return result;
}

uint64_t _CodeAnyActionModel_KeyedBy.description.getter()
{
  return 0;
}

uint64_t _CodeAnyActionModel_KeyedBy.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_3FBD4();
  sub_26D2B0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  sub_4A98(&qword_2EA840);
  uint64_t v6 = sub_26D290();
  swift_bridgeObjectRelease();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *a2 = v6;
  return result;
}

uint64_t sub_1B9560@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return _CodeAnyActionModel_KeyedBy.init(from:)(a1, a2);
}

uint64_t _CodeAnyActionModel_KeyedBy<>.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_3FBD4();
  uint64_t v4 = sub_26D260();
  uint64_t v5 = sub_1B95FC(v4);
  swift_bridgeObjectRelease();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1B95FC(uint64_t a1)
{
  sub_4A98(&qword_2F4270);
  uint64_t result = sub_26DBB0();
  int v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_C1A5C(*(void *)(v26 + 56) + 40 * i, (uint64_t)v25);
    sub_C224((uint64_t)v25, (uint64_t)v24);
    swift_bridgeObjectRetain();
    sub_3FC5C((uint64_t)v25);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v18 = (void *)(v3[6] + 16 * i);
    *uint64_t v18 = v17;
    v18[1] = v16;
    uint64_t result = sub_AD44(v24, v3[7] + 40 * i);
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v23) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v23) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v23) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _CodeAnyActionModel_KeyedBy()
{
  return sub_129B4();
}

uint64_t ViewModelWithExternals.subscript.getter(void *a1)
{
  uint64_t v1 = *(void *)(*a1 + class metadata base offset for KeyPath);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(a1);
  int64_t v4 = (char *)&v8 - v3;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v6, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t dispatch thunk of ViewModelWithExternals.externals.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1B9968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v2 = sub_4A98(&qword_2F4328);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F4330);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F4338);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EFE60);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9C30 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_6B14(v12, (uint64_t)qword_2EFE48);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_269E10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v27 == 1)
  {
    uint64_t v17 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v19 = v18;
    uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 36)];
    sub_1B9D60(v24, v20);
    uint64_t v21 = (uint64_t *)(v20 + *(int *)(sub_4A98(&qword_2F4358) + 36));
    *uint64_t v21 = v17;
    v21[1] = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v11, v25, v2);
    sub_B678((uint64_t)v11, (uint64_t)v8, &qword_2F4338);
    swift_storeEnumTagMultiPayload();
    sub_1BB79C();
    sub_7C18(&qword_2F4348, &qword_2F4328);
    sub_26B2F0();
    return sub_B6DC((uint64_t)v11, &qword_2F4338);
  }
  else
  {
    int64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v23(v5, v25, v2);
    v23(v8, (uint64_t)v5, v2);
    swift_storeEnumTagMultiPayload();
    sub_1BB79C();
    sub_7C18(&qword_2F4348, &qword_2F4328);
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1B9D60@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EE8C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EE8C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F4360);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_26B120();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v14 = sub_4A98(&qword_2F4368);
  sub_1B9F58(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  uint64_t v15 = &a1[*(int *)(type metadata accessor for ShelfGridDebugOverlayViewModifier() + 36)];
  if (v15[8]) {
    double v16 = INFINITY;
  }
  else {
    double v16 = *(double *)v15;
  }
  uint64_t v17 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B0848(0.0, 1, 0.0, 1, v16, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v17, v18);
  sub_B6DC((uint64_t)v6, &qword_2EE8C0);
  sub_B678((uint64_t)v9, (uint64_t)v13, &qword_2EE8C8);
  v13[*(int *)(v11 + 44)] = 0;
  sub_B6DC((uint64_t)v9, &qword_2EE8C8);
  return sub_1BB860((uint64_t)v13, a2);
}

uint64_t sub_1B9F58@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2F4370);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = sub_26C1B0();
  type metadata accessor for ShelfGridDebugOverlayViewModifier();
  sub_26A230();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v11 = v37;
  int v35 = v38;
  uint64_t v34 = v39;
  int v33 = v40;
  uint64_t v31 = v42;
  uint64_t v32 = v41;
  uint64_t v12 = sub_26A260();
  char v14 = v13;
  *(void *)uint64_t v9 = sub_26B120();
  *((void *)v9 + 1) = v12;
  v9[16] = v14 & 1;
  sub_4A98(&qword_2F4378);
  char v36 = *a1;
  long long v15 = *(_OWORD *)(a1 + 24);
  long long v43 = *(_OWORD *)(a1 + 8);
  long long v44 = v15;
  uint64_t result = ShelfGridBreakpoint.resolveColumns(for:dynamicTypeSize:)((uint64_t *)&v43);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)&long long v43 = 0;
    *((void *)&v43 + 1) = result;
    swift_getKeyPath();
    sub_4A98(&qword_2EF1B8);
    sub_4A98(&qword_2F4380);
    sub_DBD38();
    uint64_t v30 = v11;
    sub_1BB8C8();
    sub_26C4F0();
    uint64_t v17 = sub_26C1B0();
    sub_26A240();
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v18 = v43;
    char v19 = BYTE8(v43);
    uint64_t v20 = v44;
    int v29 = BYTE8(v44);
    uint64_t v28 = v45;
    uint64_t v27 = v46;
    sub_B678((uint64_t)v9, (uint64_t)v7, &qword_2F4370);
    *(void *)a2 = v10;
    *(_WORD *)(a2 + 8) = 256;
    uint64_t v21 = v30;
    *(void *)(a2 + 16) = 0x3FE0000000000000;
    *(void *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 32) = v35;
    *(void *)(a2 + 40) = v34;
    *(unsigned char *)(a2 + 48) = v33;
    uint64_t v22 = v31;
    *(void *)(a2 + 56) = v32;
    *(void *)(a2 + 64) = v22;
    uint64_t v23 = sub_4A98(&qword_2F4390);
    sub_B678((uint64_t)v7, a2 + *(int *)(v23 + 48), &qword_2F4370);
    uint64_t v24 = a2 + *(int *)(v23 + 64);
    *(void *)uint64_t v24 = v17;
    *(_WORD *)(v24 + 8) = 256;
    *(void *)(v24 + 16) = 0x3FE0000000000000;
    *(void *)(v24 + 24) = v18;
    *(unsigned char *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v20;
    *(unsigned char *)(v24 + 48) = v29;
    uint64_t v25 = v27;
    *(void *)(v24 + 56) = v28;
    *(void *)(v24 + 64) = v25;
    swift_retain();
    swift_retain();
    sub_B6DC((uint64_t)v9, &qword_2F4370);
    swift_release();
    sub_B6DC((uint64_t)v7, &qword_2F4370);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA2C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_26C140();
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = 0x3FE0000000000000;
  return result;
}

uint64_t sub_1BA300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = sub_4A98(&qword_2F4398);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F43A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F43A8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EFE60);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9C30 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_6B14(v12, (uint64_t)qword_2EFE48);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_269E10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (LOBYTE(v31) == 1)
  {
    uint64_t v17 = sub_26C0F0();
    sub_26A7B0();
    double v18 = v31;
    uint64_t v19 = v33;
    uint64_t v20 = v34;
    uint64_t v21 = v35;
    swift_retain();
    uint64_t v22 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v11, v29, v2);
    swift_release();
    uint64_t v25 = &v11[*(int *)(v9 + 36)];
    *(double *)uint64_t v25 = v18 * 0.5;
    *((double *)v25 + 1) = v18;
    *((void *)v25 + 2) = v32;
    *((void *)v25 + 3) = v19;
    *((void *)v25 + 4) = v20;
    *((void *)v25 + 5) = v21;
    *((void *)v25 + 6) = v17;
    *((_WORD *)v25 + 28) = 256;
    *((void *)v25 + 8) = v22;
    *((void *)v25 + 9) = v24;
    sub_B678((uint64_t)v11, (uint64_t)v8, &qword_2F43A8);
    swift_storeEnumTagMultiPayload();
    sub_1BB968();
    sub_7C18(&qword_2F43B8, &qword_2F4398);
    sub_26B2F0();
    return sub_B6DC((uint64_t)v11, &qword_2F43A8);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v27(v5, v29, v2);
    v27(v8, (uint64_t)v5, v2);
    swift_storeEnumTagMultiPayload();
    sub_1BB968();
    sub_7C18(&qword_2F43B8, &qword_2F4398);
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t View.shelfGridDebugOverlay(breakpoint:gridType:dynamicTypeSize:padding:spacing:maxContentWidth:)@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  type metadata accessor for ShelfGridDebugOverlayViewModifier();
  sub_26ABD0();
  sub_1BA86C();
  swift_getWitnessTable();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);

  return v5(a2, v2, a1);
}

uint64_t type metadata accessor for ShelfGridDebugOverlayViewModifier()
{
  uint64_t result = qword_2F42E0;
  if (!qword_2F42E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BA86C()
{
  unint64_t result = qword_2F4278;
  if (!qword_2F4278)
  {
    type metadata accessor for ShelfGridDebugOverlayViewModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4278);
  }
  return result;
}

uint64_t View.shelfItemDebugBorder()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_26ABD0();
  sub_1BA984();
  swift_getWitnessTable();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);

  return v5(a2, v2, a1);
}

unint64_t sub_1BA984()
{
  unint64_t result = qword_2F4280;
  if (!qword_2F4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4280);
  }
  return result;
}

uint64_t sub_1BA9D8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

ValueMetadata *type metadata accessor for ShelfGridItemDebugBorder()
{
  return &type metadata for ShelfGridItemDebugBorder;
}

void *sub_1BA9F0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v9 = a2 + 3;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v10 = a2[4];
      v4[3] = v8;
      void v4[4] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *v9;
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    double v18 = (char *)a2 + v16;
    uint64_t v19 = sub_26A250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_26A270();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
  }
  return v4;
}

uint64_t sub_1BABC0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_26A250();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_26A270();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t sub_1BACDC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v8;
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_26A250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_26A270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  return a1;
}

uint64_t sub_1BAE5C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  if (!v6)
  {
    sub_B6DC(a1 + 24, &qword_2ED0D0);
    goto LABEL_7;
  }
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_26A250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_26A270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  return a1;
}

uint64_t sub_1BB040(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_26A250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_26A270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  return a1;
}

uint64_t sub_1BB188(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_B6DC(a1 + 24, &qword_2ED0D0);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_26A250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_26A270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  return a1;
}

uint64_t sub_1BB32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BB340);
}

uint64_t sub_1BB340(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_26AB40();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_26A250();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = sub_26A270();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_1BB4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BB4CC);
}

uint64_t sub_1BB4CC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_26AB40();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_26A250();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = sub_26A270();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

uint64_t sub_1BB644()
{
  uint64_t result = sub_26AB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26A250();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_26A270();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BB764()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BB780()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1BB79C()
{
  unint64_t result = qword_2F4340;
  if (!qword_2F4340)
  {
    sub_7B0C(&qword_2F4338);
    sub_7C18(&qword_2F4348, &qword_2F4328);
    sub_7C18(&qword_2F4350, &qword_2F4358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4340);
  }
  return result;
}

uint64_t sub_1BB860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F4360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB8C8()
{
  unint64_t result = qword_2F4388;
  if (!qword_2F4388)
  {
    sub_7B0C(&qword_2F4380);
    sub_7C18(&qword_2EF530, &qword_2EF538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4388);
  }
  return result;
}

unint64_t sub_1BB968()
{
  unint64_t result = qword_2F43B0;
  if (!qword_2F43B0)
  {
    sub_7B0C(&qword_2F43A8);
    sub_7C18(&qword_2F43B8, &qword_2F4398);
    sub_7C18(&qword_2F43C0, &qword_2F43C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F43B0);
  }
  return result;
}

unint64_t sub_1BBA30()
{
  unint64_t result = qword_2F43D0;
  if (!qword_2F43D0)
  {
    sub_7B0C(&qword_2F43D8);
    sub_1BB79C();
    sub_7C18(&qword_2F4348, &qword_2F4328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F43D0);
  }
  return result;
}

unint64_t sub_1BBAD4()
{
  unint64_t result = qword_2F43E0;
  if (!qword_2F43E0)
  {
    sub_7B0C(&qword_2F43E8);
    sub_1BB968();
    sub_7C18(&qword_2F43B8, &qword_2F4398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F43E0);
  }
  return result;
}

uint64_t static FlowActionDestination<>.newSingleCard(cardInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_F3030(a1, a2);
}

uint64_t FlowAction.NewSingleCardDestination.cardInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_F3030(v1, a1);
}

uint64_t FlowAction.NewSingleCardDestination.init(cardInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BCAE4(a1, a2, (uint64_t (*)(void))type metadata accessor for CardInfo);
}

uint64_t sub_1BBBB8(char *a1, char *a2)
{
  return sub_109F7C(*a1, *a2);
}

Swift::Int sub_1BBBC4()
{
  return sub_26DF20();
}

uint64_t sub_1BBC4C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1BBCC0()
{
  return sub_26DF20();
}

uint64_t sub_1BBD44@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DC268;
  v8._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1BBDA4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x536472614377656ELL;
  if (*v1) {
    uint64_t v2 = 0x6F666E4964726163;
  }
  unint64_t v3 = 0xEA00000000007465;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BBDE8()
{
  if (*v0) {
    return 0x6F666E4964726163;
  }
  else {
    return 0x536472614377656ELL;
  }
}

uint64_t sub_1BBE28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DC268;
  v9._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1BBE8C(uint64_t a1)
{
  unint64_t v2 = sub_1BCA30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BBEC8(uint64_t a1)
{
  unint64_t v2 = sub_1BCA30();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1BBF04()
{
  return sub_26DF20();
}

uint64_t sub_1BBF58()
{
  return sub_26D4B0();
}

Swift::Int sub_1BBF70()
{
  return sub_26DF20();
}

uint64_t sub_1BBFC0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DC2B8;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_1BC014(void *a1@<X8>)
{
  *a1 = 0x6F666E4964726163;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BC030()
{
  return 0x6F666E4964726163;
}

uint64_t sub_1BC048@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_2DC2F0;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_1BC0A0(uint64_t a1)
{
  unint64_t v2 = sub_1BCB4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BC0DC(uint64_t a1)
{
  unint64_t v2 = sub_1BCB4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowAction.NewSingleCardDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v58 = a2;
  uint64_t v62 = type metadata accessor for CardInfo();
  __chkstk_darwin(v62);
  uint64_t v53 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_26C8F0();
  uint64_t v57 = *(void *)(v61 - 8);
  uint64_t v4 = __chkstk_darwin(v61);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)&v49 - v6;
  uint64_t v7 = sub_4A98(&qword_2F43F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v56 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = sub_4A98(&qword_2F43F8);
  uint64_t v54 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F4400);
  uint64_t v59 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FlowAction.NewSingleCardDestination();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_1BCA30();
  uint64_t v21 = v63;
  sub_26DFC0();
  if (!v21)
  {
    uint64_t v50 = v11;
    uint64_t v51 = v20;
    char v22 = v60;
    uint64_t v23 = v61;
    uint64_t v63 = v14;
    uint64_t v52 = v12;
    char v67 = 0;
    if (sub_26DCB0())
    {
      char v65 = 0;
      sub_1BCB4C();
      sub_26DC10();
      uint64_t v60 = (char *)v15;
      sub_1BCBF8((unint64_t *)&qword_2F4410, (void (*)(uint64_t))&type metadata accessor for JSONObject);
      uint64_t v24 = v55;
      sub_26DC90();
      uint64_t v39 = (uint64_t)v50;
      sub_26C8C0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v23);
      uint64_t v40 = sub_26CC60();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
      {
        sub_1BCA84(v39);
        uint64_t v34 = v59;
        uint64_t v15 = (uint64_t)v60;
LABEL_16:
        uint64_t v44 = sub_26DAD0();
        swift_allocError();
        uint64_t v46 = v45;
        uint64_t v47 = v52;
        int v48 = v63;
        sub_26DC20();
        sub_26DAC0();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v44 - 8) + 104))(v46, enum case for DecodingError.dataCorrupted(_:), v44);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v47);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v15);
        return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v64);
      }
      sub_4A98(&qword_2F4418);
      uint64_t v42 = sub_26CC50();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      uint64_t v34 = v59;
      uint64_t v15 = (uint64_t)v60;
      if (!v42) {
        goto LABEL_16;
      }
      uint64_t v33 = v53;
      sub_269830();
      *uint64_t v33 = v42;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v52);
      uint64_t v27 = v58;
      goto LABEL_15;
    }
    char v66 = 1;
    sub_1BCBF8((unint64_t *)&qword_2F4410, (void (*)(uint64_t))&type metadata accessor for JSONObject);
    uint64_t v25 = v22;
    uint64_t v26 = v23;
    sub_26DC90();
    uint64_t v27 = v58;
    uint64_t v63 = v17;
    uint64_t v29 = (uint64_t)v56;
    sub_26C8C0();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v25, v26);
    uint64_t v30 = sub_26CC60();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
    {
      sub_1BCA84(v29);
    }
    else
    {
      sub_4A98(&qword_2F4418);
      uint64_t v32 = sub_26CC50();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      if (v32)
      {
        uint64_t v33 = v53;
        sub_269830();
        *uint64_t v33 = v32;
        uint64_t v34 = v59;
        uint64_t v17 = v63;
LABEL_15:
        (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v15);
        uint64_t v43 = (uint64_t)v51;
        sub_1BCAE4((uint64_t)v33, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for CardInfo);
        sub_1BCAE4(v43, v27, (uint64_t (*)(void))type metadata accessor for FlowAction.NewSingleCardDestination);
        return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v64);
      }
    }
    uint64_t v35 = sub_26DAD0();
    swift_allocError();
    uint64_t v37 = v36;
    unsigned __int8 v38 = v63;
    sub_26DC20();
    sub_26DAC0();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, enum case for DecodingError.dataCorrupted(_:), v35);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v15);
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v64);
}

uint64_t type metadata accessor for FlowAction.NewSingleCardDestination()
{
  uint64_t result = qword_2F4488;
  if (!qword_2F4488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BCA30()
{
  unint64_t result = qword_2F4408;
  if (!qword_2F4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4408);
  }
  return result;
}

uint64_t sub_1BCA84(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F43F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BCAE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BCB4C()
{
  unint64_t result = qword_2F4420;
  if (!qword_2F4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4420);
  }
  return result;
}

uint64_t sub_1BCBA0(uint64_t a1)
{
  uint64_t result = sub_1BCBF8(&qword_2F4428, (void (*)(uint64_t))type metadata accessor for FlowAction.NewSingleCardDestination);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BCBF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BCC40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FlowAction.NewSingleCardDestination.init(from:)(a1, a2);
}

uint64_t *_s24NewSingleCardDestinationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CardInfo();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_269840();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s24NewSingleCardDestinationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for CardInfo() + 20);
  uint64_t v3 = sub_269840();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *_s24NewSingleCardDestinationVwcp(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for CardInfo() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *_s24NewSingleCardDestinationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for CardInfo() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *_s24NewSingleCardDestinationVwtk(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for CardInfo() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s24NewSingleCardDestinationVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for CardInfo() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s24NewSingleCardDestinationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BD02C);
}

uint64_t sub_1BD02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardInfo();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t _s24NewSingleCardDestinationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BD0AC);
}

uint64_t sub_1BD0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardInfo();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1BD11C()
{
  uint64_t result = type metadata accessor for CardInfo();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s24NewSingleCardDestinationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BD274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s24NewSingleCardDestinationV10CodingKeysOMa()
{
  return &_s24NewSingleCardDestinationV10CodingKeysON;
}

unsigned char *_s24NewSingleCardDestinationV16LegacyCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BD348);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s24NewSingleCardDestinationV16LegacyCodingKeysOMa()
{
  return &_s24NewSingleCardDestinationV16LegacyCodingKeysON;
}

unint64_t sub_1BD384()
{
  unint64_t result = qword_2F44C0;
  if (!qword_2F44C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44C0);
  }
  return result;
}

unint64_t sub_1BD3DC()
{
  unint64_t result = qword_2F44C8;
  if (!qword_2F44C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44C8);
  }
  return result;
}

unint64_t sub_1BD434()
{
  unint64_t result = qword_2F44D0;
  if (!qword_2F44D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44D0);
  }
  return result;
}

unint64_t sub_1BD48C()
{
  unint64_t result = qword_2F44D8;
  if (!qword_2F44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44D8);
  }
  return result;
}

unint64_t sub_1BD4E4()
{
  unint64_t result = qword_2F44E0;
  if (!qword_2F44E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44E0);
  }
  return result;
}

unint64_t sub_1BD53C()
{
  unint64_t result = qword_2F44E8;
  if (!qword_2F44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F44E8);
  }
  return result;
}

unint64_t static Models.FlowBackAction.Dismissal.cardSetCloseTappedDismiss.getter()
{
  return 0xD000000000000019;
}

uint64_t static Models.FlowBackAction.Dismissal.cardSetDismiss.getter()
{
  return 0x4474655364726163;
}

unint64_t static Models.FlowBackAction.Dismissal.cardStackDismiss.getter()
{
  return 0xD000000000000010;
}

uint64_t PageScrollAction.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10AC60(v1, a1);
}

uint64_t PageScrollAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageScrollAction() + 20);
  uint64_t v4 = sub_26CB80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PageScrollAction()
{
  uint64_t result = qword_2F4548;
  if (!qword_2F4548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PageScrollAction.location.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for PageScrollAction();
  *a1 = *(void *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PageScrollAction.init(location:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_269CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = type metadata accessor for PageScrollAction();
  uint64_t result = sub_26CB50();
  *(void *)(a2 + *(int *)(v5 + 24)) = v3;
  return result;
}

unint64_t sub_1BD77C(uint64_t a1)
{
  unint64_t result = sub_105DB8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PageScrollAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_269CE0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4A98(&qword_2EA820);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_26CB80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for PageScrollAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_269CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_26CB80();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *initializeWithCopy for PageScrollAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_269CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2EA820);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for PageScrollAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_269CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA820);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for PageScrollAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_269CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2EA820);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for PageScrollAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_269CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA820);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for PageScrollAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BE100);
}

uint64_t sub_1BE100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA820);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_26CB80();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PageScrollAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BE210);
}

uint64_t sub_1BE210(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EA820);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_26CB80();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1BE318()
{
  sub_141A10();
  if (v0 <= 0x3F)
  {
    sub_26CB80();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PageScrollAction.Location(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PageScrollAction.Location(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PageScrollAction.Location(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PageScrollAction.Location()
{
  return &type metadata for PageScrollAction.Location;
}

uint64_t sub_1BE454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = sub_4A98(&qword_2F4590);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v52 = v1;
  uint64_t v53 = v2;
  __chkstk_darwin(v1);
  uint64_t v50 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2F4598);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F45A0);
  uint64_t v45 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F1D70);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v47 = (char *)v44 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v59 = (char *)v44 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v60 = (char *)v44 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  char v22 = (char *)v44 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v44 - v23;
  v61[3] = sub_26CE70();
  v61[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  sub_CA1C(v61);
  sub_26CE60();
  uint64_t v25 = sub_26CCB0();
  sub_26D070();
  sub_26CD00();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v57 = v24;
  v26(v24, v22, v10);
  v44[0] = v26;
  sub_7C18(&qword_2F45A8, &qword_2F45A0);
  sub_26CCD0();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v11 + 8);
  v58(v22, v10);
  uint64_t v55 = v11 + 8;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v7);
  uint64_t v27 = v46;
  sub_26D0A0();
  uint64_t v28 = v60;
  sub_26CD00();
  uint64_t v56 = v22;
  v26(v22, v28, v10);
  sub_7C18(&qword_2F45B0, &qword_2F4598);
  uint64_t v29 = v48;
  sub_26CCD0();
  v58(v28, v10);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v29);
  uint64_t v30 = v50;
  sub_26D030();
  uint64_t v31 = v59;
  sub_26CD00();
  uint64_t v32 = (void (*)(char *, char *, uint64_t))v44[0];
  ((void (*)(char *, char *, uint64_t))v44[0])(v28, v31, v10);
  sub_7C18(&qword_2F45B8, &qword_2F4590);
  uint64_t v33 = v30;
  uint64_t v34 = v52;
  sub_26CCD0();
  uint64_t v35 = v55;
  uint64_t v36 = v58;
  v58(v31, v10);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v34);
  uint64_t v37 = v47;
  v44[1] = v25;
  sub_26CD00();
  v32(v31, v37, v10);
  sub_1BEEAC();
  sub_26CCD0();
  v36(v37, v10);
  unsigned __int8 v38 = v51;
  sub_26CD00();
  v32(v37, v38, v10);
  sub_1BEF00();
  sub_26CCD0();
  v36(v38, v10);
  sub_4A98((uint64_t *)&unk_2F45D0);
  uint64_t v39 = *(void *)(v35 + 64);
  unint64_t v40 = (*(unsigned __int8 *)(v35 + 72) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 72);
  uint64_t v53 = swift_allocObject();
  unint64_t v41 = v53 + v40;
  v32((char *)(v53 + v40), v57, v10);
  v32((char *)(v41 + v39), v56, v10);
  v32((char *)(v41 + 2 * v39), v60, v10);
  v32((char *)(v41 + 3 * v39), v59, v10);
  v32((char *)(v41 + 4 * v39), v37, v10);
  sub_26CD00();
  sub_26CCC0();
  sub_26CCC0();
  sub_26CCC0();
  sub_26CCC0();
  sub_26CCC0();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v42 = v58;
  v58(v37, v10);
  v42(v59, v10);
  v42(v60, v10);
  v42(v56, v10);
  return ((uint64_t (*)(char *, uint64_t))v42)(v57, v10);
}

uint64_t ActionDispatcher<>.withBuiltInActionImplementations.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_4A98(&qword_2F4588);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = sub_4A98(&qword_2F1D70);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE454((uint64_t)v13);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v14(v9, v2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v14(a1, (uint64_t)v13, v10);
  sub_1BEDE4((uint64_t)v9, (uint64_t)v7);
  sub_26CCE0();
  sub_1BEE4C((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1BEDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F4588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BEE4C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F4588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BEEAC()
{
  unint64_t result = qword_2F45C0;
  if (!qword_2F45C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F45C0);
  }
  return result;
}

unint64_t sub_1BEF00()
{
  unint64_t result = qword_2F45C8;
  if (!qword_2F45C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F45C8);
  }
  return result;
}

uint64_t AttributedString.init(html:font:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  objc_allocWithZone((Class)type metadata accessor for BooksHTMLConverter());
  swift_retain();
  uint64_t v8 = sub_1BF094(a1, a2, a3);
  [*(id *)&v8[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_parser] parse];
  uint64_t v9 = &v8[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_currentString];
  swift_beginAccess();
  uint64_t v10 = sub_2695D0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a4, v9, v10);

  return swift_release();
}

uint64_t type metadata accessor for BooksHTMLConverter()
{
  uint64_t result = qword_2F4630;
  if (!qword_2F4630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1BF094(uint64_t a1, void *a2, uint64_t a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_2695D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0x3E79646F623CLL;
  unint64_t v25 = 0xE600000000000000;
  uint64_t v11 = v3;
  v26._countAndFlagsBits = a1;
  v26._object = a2;
  sub_26D4E0(v26);
  v27._countAndFlagsBits = 0x3E79646F622F3CLL;
  v27._object = (void *)0xE700000000000000;
  sub_26D4E0(v27);
  id v12 = objc_allocWithZone((Class)BUINQMLParser);
  NSString v13 = sub_26D3F0();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithString:v13];

  *(void *)&v11[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_parser] = v14;
  *(void *)&v11[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_tagStack] = _swiftEmptyArrayStorage;
  uint64_t v15 = (uint64_t *)&v11[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_html];
  *uint64_t v15 = a1;
  v15[1] = (uint64_t)a2;
  *(void *)&v11[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_font] = a3;
  swift_retain();
  sub_2695A0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v11[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_currentString], v10, v7);

  v23.receiver = v11;
  v23.super_class = ObjectType;
  uint64_t v16 = (char *)[super init];
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_parser];
  uint64_t v18 = v16;
  id v19 = v17;
  [v19 setDelegate:v18];

  swift_release();
  return v18;
}

id sub_1BF2F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super dealloc];
}

uint64_t sub_1BF3E0()
{
  return type metadata accessor for BooksHTMLConverter();
}

uint64_t sub_1BF3E8()
{
  uint64_t result = sub_2695D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BF600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_26D360() & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for BooksHTMLConverter.TagElement(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BooksHTMLConverter.TagElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BooksHTMLConverter.TagElement(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksHTMLConverter.TagElement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksHTMLConverter.TagElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksHTMLConverter.TagElement()
{
  return &type metadata for BooksHTMLConverter.TagElement;
}

uint64_t sub_1BF9EC(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_231FE8(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[3 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 7, 24 * v6);
      v3[2] = v5;
      unsigned char *v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_1BFADC()
{
  unint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v3 = v1[2];
    if (v3)
    {
LABEL_3:
      uint64_t v4 = v3 - 1;
      uint64_t result = v1[3 * v4 + 4];
      v1[2] = v4;
      *unint64_t v0 = v1;
      return result;
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_231FE8(v1);
    unint64_t v1 = (void *)result;
    uint64_t v3 = *(void *)(result + 16);
    if (v3) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1 == 4)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = @"href";
      unint64_t v6 = sub_A04C((uint64_t)v5);
      if (v7)
      {
        uint64_t v8 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v6);
        uint64_t v10 = *v8;
        uint64_t v9 = v8[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v9 = 0;
      }
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v9 = 0;
    }
    uint64_t v18 = (void **)(v3 + OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_tagStack);
    swift_beginAccess();
    id v19 = *v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v18 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v19 = sub_E6630(0, v19[2] + 1, 1, v19);
      *uint64_t v18 = v19;
    }
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      id v19 = sub_E6630((void *)(v21 > 1), v22 + 1, 1, v19);
      *uint64_t v18 = v19;
    }
    v19[2] = v22 + 1;
    objc_super v23 = &v19[3 * v22];
    id v23[4] = 4;
    v23[5] = v10;
    v23[6] = v9;
  }
  else
  {
    id v12 = (void **)(v2 + OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_tagStack);
    swift_beginAccess();
    NSString v13 = *v12;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    char *v12 = v13;
    if ((v14 & 1) == 0)
    {
      NSString v13 = sub_E6630(0, v13[2] + 1, 1, v13);
      char *v12 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      NSString v13 = sub_E6630((void *)(v15 > 1), v16 + 1, 1, v13);
      char *v12 = v13;
    }
    v13[2] = v16 + 1;
    uint64_t v17 = &v13[3 * v16];
    v17[5] = 0;
    void v17[6] = 0;
    v17[4] = a1;
  }
  return swift_endAccess();
}

uint64_t sub_1BFD30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2F46A8);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_269600();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_2695D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_2695F0();
  sub_2695E0();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_font);
  sub_1C062C();
  swift_retain();
  sub_269590();
  uint64_t v12 = v1 + OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_tagStack;
  swift_beginAccess();
  uint64_t v13 = *(void *)(*(void *)v12 + 16);
  if (v13)
  {
    uint64_t v29 = v9;
    uint64_t v30 = v8;
    uint64_t v31 = v1;
    uint64_t v28 = swift_bridgeObjectRetain();
    char v14 = (void *)(v28 + 48);
    while (2)
    {
      switch(*(v14 - 2))
      {
        case 0:
          uint64_t v17 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v17);
          swift_getKeyPath();
          uint64_t v18 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v18);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          sub_269580();
          swift_release();
          if (!v34) {
            goto LABEL_15;
          }
          uint64_t v19 = sub_26B800();
          goto LABEL_11;
        case 1:
          uint64_t v20 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v20);
          swift_getKeyPath();
          uint64_t v21 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v21);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          sub_269580();
          swift_release();
          if (v34)
          {
            uint64_t v19 = sub_26B8C0();
LABEL_11:
            uint64_t v22 = v19;
            swift_release();
          }
          else
          {
LABEL_15:
            uint64_t v22 = 0;
          }
          uint64_t v34 = v22;
          goto LABEL_4;
        case 2:
          uint64_t v23 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v23);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          sub_26BAB0();
          uint64_t v24 = sub_26BAE0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 0, 1, v24);
          sub_1C07FC();
          goto LABEL_4;
        case 3:
          uint64_t v15 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v15);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          sub_26BAB0();
          uint64_t v16 = sub_26BAE0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
          sub_1C08D4();
          goto LABEL_4;
        case 4:
          if (!*v14) {
            goto LABEL_5;
          }
          uint64_t v25 = swift_getKeyPath();
          *(&v27 - 2) = __chkstk_darwin(v25);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          sub_2696B0();
          sub_1C0724();
LABEL_4:
          sub_269590();
          swift_bridgeObjectRelease();
LABEL_5:
          v14 += 3;
          if (--v13) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v8 = v30;
          uint64_t v9 = v29;
          break;
        default:
          goto LABEL_5;
      }
      break;
    }
  }
  swift_beginAccess();
  sub_2695C0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1C03B4()
{
  if (qword_2E9AE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_26A340();
  sub_6B14(v1, (uint64_t)qword_2E9E80);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = v0;
  oslog = sub_26A320();
  os_log_type_t v3 = sub_26D840();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_html];
    unint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_html + 8];
    swift_bridgeObjectRetain();
    sub_1B1A8C(v5, v6, &v10);
    sub_26D9A0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v7 = sub_26DE90();
    sub_1B1A8C(v7, v8, &v10);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_5F050, oslog, v3, "Failed to parse the provided HTML string \"%s\" with error: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_1C060C()
{
}

unint64_t sub_1C062C()
{
  unint64_t result = qword_2F46B0;
  if (!qword_2F46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F46B0);
  }
  return result;
}

void sub_1C0680()
{
}

uint64_t sub_1C06A8()
{
  return 8;
}

uint64_t sub_1C06B4()
{
  return swift_release();
}

uint64_t sub_1C06BC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C06C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BF600(a1, a2, a3, &qword_2F46E8) & 1;
}

uint64_t sub_1C06EC(uint64_t a1, uint64_t a2)
{
  return sub_1C098C(a1, a2, &qword_2F46E8);
}

void *sub_1C06F8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1C0704()
{
}

unint64_t sub_1C0724()
{
  unint64_t result = qword_2F46B8;
  if (!qword_2F46B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F46B8);
  }
  return result;
}

void sub_1C0778()
{
}

uint64_t sub_1C07A0()
{
  return 8;
}

uint64_t sub_1C07AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BF600(a1, a2, a3, &qword_2F46E0) & 1;
}

uint64_t sub_1C07D0(uint64_t a1, uint64_t a2)
{
  return sub_1C098C(a1, a2, &qword_2F46E0);
}

void sub_1C07DC()
{
}

unint64_t sub_1C07FC()
{
  unint64_t result = qword_2F46C0;
  if (!qword_2F46C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F46C0);
  }
  return result;
}

void sub_1C0850()
{
}

uint64_t sub_1C0878()
{
  return 8;
}

uint64_t sub_1C0884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BF600(a1, a2, a3, &qword_2F46D8) & 1;
}

uint64_t sub_1C08A8(uint64_t a1, uint64_t a2)
{
  return sub_1C098C(a1, a2, &qword_2F46D8);
}

void sub_1C08B4()
{
}

unint64_t sub_1C08D4()
{
  unint64_t result = qword_2F46C8;
  if (!qword_2F46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F46C8);
  }
  return result;
}

void sub_1C0928()
{
}

uint64_t sub_1C0950()
{
  return 8;
}

uint64_t sub_1C095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BF600(a1, a2, a3, &qword_2F46D0) & 1;
}

uint64_t sub_1C0980(uint64_t a1, uint64_t a2)
{
  return sub_1C098C(a1, a2, &qword_2F46D0);
}

uint64_t sub_1C098C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_26D300();
}

unint64_t sub_1C09D0()
{
  unint64_t result = qword_2F46F0;
  if (!qword_2F46F0)
  {
    type metadata accessor for NQMLAttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F46F0);
  }
  return result;
}

uint64_t View.synchronousNativeIntentDispatcher(_:with:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  sub_C224(a1, (uint64_t)v6);
  uint64_t v4 = swift_allocObject();
  sub_AD44(v6, v4 + 16);
  *(void *)(v4 + 56) = a2;
  swift_retain();
  sub_26BED0();
  swift_release();
  return swift_release();
}

uint64_t EnvironmentValues.dispatchSynchronousNativeIntent.getter()
{
  sub_1C0E6C();

  return sub_26B0B0();
}

uint64_t sub_1C0B70@<X0>(void *a1@<X8>)
{
  sub_1C0E6C();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1C0BC0@<X0>(void *a1@<X8>)
{
  sub_1C0E6C();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1C0C10()
{
  return sub_26B0C0();
}

uint64_t sub_1C0C74(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_26C8B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224(a2, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_AD44(v14, v8 + 16);
  uint64_t v9 = *a1;
  sub_4A98(&qword_2F4768);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1C159C;
  _OWORD v10[3] = v8;
  v10[4] = v9;
  swift_retain();
  swift_retain();
  sub_26C8A0();
  uint64_t v11 = sub_26CCA0();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v11;
  return result;
}

uint64_t sub_1C0E20()
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0E60(uint64_t *a1)
{
  return sub_1C0C74(a1, v1 + 16);
}

unint64_t sub_1C0E6C()
{
  unint64_t result = qword_2F4760;
  if (!qword_2F4760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4760);
  }
  return result;
}

uint64_t View.synchronousNativeIntentDispatcher(from:)()
{
  swift_getKeyPath();
  swift_retain();
  sub_26BED0();
  swift_release();

  return swift_release();
}

uint64_t sub_1C0F5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_26C8B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_4A98(&qword_2F4768);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_1C14EC;
  v9[3] = a2;
  v9[4] = v8;
  swift_retain_n();
  sub_26C8A0();
  uint64_t v10 = sub_26CCA0();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v10;
  return result;
}

uint64_t sub_1C10BC(uint64_t *a1)
{
  return sub_1C0F5C(a1, v1);
}

uint64_t sub_1C10C4()
{
  sub_4A98(&qword_2F4768);
  sub_26CCB0();

  return sub_26D150();
}

uint64_t View.synchronousNativeIntentDispatcher(with:implementations:)(uint64_t a1, void (*a2)(void))
{
  v5[3] = &type metadata for SynchronousNativeIntentDispatcher;
  v5[4] = &protocol witness table for SynchronousNativeIntentDispatcher;
  v5[0] = swift_allocObject();
  a2();
  View.synchronousNativeIntentDispatcher(_:with:)((uint64_t)v5, a1);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v5);
}

uint64_t sub_1C11E0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t sub_1C1228@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t result = a1();
  if (a2)
  {
    sub_4A98(&qword_2F4768);
    sub_26CCB0();
    swift_retain();
    sub_26D150();
    uint64_t v6 = a3[3];
    uint64_t v7 = a3[4];
    sub_4ADC(a3, v6);
    sub_C224((uint64_t)v10, (uint64_t)v8);
    (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v8, v6, v7);
    swift_release();
    sub_1C1504((uint64_t)v8);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a3);
    return sub_AD44(v9, (uint64_t)a3);
  }
  return result;
}

uint64_t SynchronousNativeIntentDispatchAction.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_4A98(&qword_2F4768);
  sub_26CCB0();
  sub_26D150();
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  sub_4ADC(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, v7, a2, a3, v8, v9);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v11);
}

ValueMetadata *type metadata accessor for SynchronousNativeIntentDispatchAction()
{
  return &type metadata for SynchronousNativeIntentDispatchAction;
}

uint64_t sub_1C1410()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C1480()
{
  unint64_t result = qword_2F4778;
  if (!qword_2F4778)
  {
    sub_7B0C(&qword_2F4770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4778);
  }
  return result;
}

ValueMetadata *type metadata accessor for SynchronousNativeIntentDispatchActionKey()
{
  return &type metadata for SynchronousNativeIntentDispatchActionKey;
}

uint64_t sub_1C14EC()
{
  return sub_1C10C4();
}

uint64_t sub_1C14F8@<X0>(void *a1@<X8>)
{
  return sub_1C1228(*(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 32), a1);
}

uint64_t sub_1C1504(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F2420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1564()
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C159C@<X0>(uint64_t a1@<X8>)
{
  return sub_C224(v1 + 16, a1);
}

uint64_t sub_1C15AC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t View.defaultBlendMode()()
{
  uint64_t v0 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v7 - v4;
  *uint64_t v3 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  sub_67AF0((uint64_t)v3, (uint64_t)v5);
  sub_26C030();
  return sub_7D5B0((uint64_t)v5);
}

uint64_t type metadata accessor for DefaultBlendModeModifier()
{
  uint64_t result = qword_2F47D8;
  if (!qword_2F47D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26C700();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_41340((uint64_t)v7);
  uint64_t v8 = sub_4A98(&qword_2F4810);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2 + *(int *)(v8 + 36), v7, v4);
  uint64_t v9 = sub_4A98(&qword_2F4818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1888()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C18F4()
{
  unint64_t result = qword_2ECC70;
  if (!qword_2ECC70)
  {
    type metadata accessor for DefaultBlendModeModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECC70);
  }
  return result;
}

uint64_t *sub_1C194C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_4A98(&qword_2EB3E8) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26C700();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C1A58(uint64_t a1)
{
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_26C700();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1C1AFC(void *a1, void *a2)
{
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C1BB8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C1C84((uint64_t)a1);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C1C84(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EB3E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C1CE4(void *a1, const void *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26C700();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1C1DA8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1C1C84((uint64_t)a1);
    uint64_t v4 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26C700();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C1E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C1E90);
}

uint64_t sub_1C1E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EB3F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1C1F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C1F14);
}

uint64_t sub_1C1F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EB3F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1C1F88()
{
  sub_1C2014();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C2014()
{
  if (!qword_2EB470)
  {
    sub_26C700();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EB470);
    }
  }
}

uint64_t sub_1C206C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C208C()
{
  unint64_t result = qword_2F4820;
  if (!qword_2F4820)
  {
    sub_7B0C(&qword_2F4810);
    sub_1C2108();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4820);
  }
  return result;
}

unint64_t sub_1C2108()
{
  unint64_t result = qword_2F4828;
  if (!qword_2F4828)
  {
    sub_7B0C(&qword_2F4818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4828);
  }
  return result;
}

uint64_t IntentResult.dispatchState.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_26D980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - v6;
  sub_26A140();
  char v8 = 1;
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v7, 1, v3);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v3 == 1)
  {
    BOOL v10 = sub_26A150() != 0;
    uint64_t result = swift_errorRelease();
    char v8 = 2 * v10;
  }
  *a2 = v8;
  return result;
}

uint64_t sub_1C22A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1C25A8();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.pageIntentDispatchState.getter()
{
  sub_CB48();

  return sub_26B0B0();
}

uint64_t EnvironmentValues.pageIntentDispatchState.setter()
{
  return sub_26B0C0();
}

uint64_t (*EnvironmentValues.pageIntentDispatchState.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_CB48();
  sub_26B0B0();
  return sub_1C23FC;
}

uint64_t sub_1C23FC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_26B0C0();
}

unint64_t sub_1C2438()
{
  unint64_t result = qword_2F4830;
  if (!qword_2F4830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4830);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IntentDispatchState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentDispatchState()
{
  return &type metadata for IntentDispatchState;
}

ValueMetadata *type metadata accessor for PageIntentDispatchStateKey()
{
  return &type metadata for PageIntentDispatchStateKey;
}

unint64_t sub_1C25A8()
{
  unint64_t result = qword_2F4838;
  if (!qword_2F4838)
  {
    sub_7B0C(qword_2F4840);
    sub_1C2438();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4838);
  }
  return result;
}

unint64_t MetricsFieldsConvertible.metricsFields.getter()
{
  sub_2694B0();
  swift_allocObject();
  sub_2694A0();
  uint64_t v7 = sub_269490();
  unint64_t v9 = v8;
  swift_release();
  BOOL v10 = self;
  Class isa = sub_2696D0().super.isa;
  v17[0] = 0;
  id v12 = [v10 JSONObjectWithData:isa options:0 error:v17];

  if (v12)
  {
    id v13 = v17[0];
    sub_26D9E0();
    swift_unknownObjectRelease();
    sub_4A98(&qword_2F2940);
    if (swift_dynamicCast())
    {
      unint64_t v6 = sub_1C2980(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v6 = sub_8D70((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_17F770(v7, v9);
  }
  else
  {
    id v14 = v17[0];
    sub_269640();

    swift_willThrow();
    sub_17F770(v7, v9);
    if (qword_2E9AF0 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_26A340();
    sub_6B14(v0, (uint64_t)qword_2E9E98);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v1 = sub_26A320();
    os_log_type_t v2 = sub_26D840();
    if (os_log_type_enabled(v1, v2))
    {
      int v3 = (uint8_t *)swift_slowAlloc();
      unsigned int v4 = (void *)swift_slowAlloc();
      *(_DWORD *)int v3 = 138412290;
      swift_errorRetain();
      uint64_t v5 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v17[0] = v5;
      sub_26D9A0();
      *unsigned int v4 = v5;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_5F050, v1, v2, "Failed to convert metrics model into MetricsFields: %@", v3, 0xCu);
      sub_4A98(&qword_2EA360);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v6 = sub_8D70((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
  return v6;
}

uint64_t sub_1C2980(uint64_t a1)
{
  os_log_type_t v2 = &_swiftEmptyDictionarySingleton;
  unint64_t v41 = &_swiftEmptyDictionarySingleton;
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  uint64_t v42 = &v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v30) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v31 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v30) {
          goto LABEL_40;
        }
        unint64_t v12 = *(void *)(v31 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v30) {
            goto LABEL_40;
          }
          unint64_t v12 = *(void *)(v31 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1C40DC(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v40);
    *(void *)&long long v39 = v17;
    *((void *)&v39 + 1) = v16;
    long long v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_1C40DC((uint64_t)v38, (uint64_t)&v32);
    if (v33)
    {
      sub_89B4(&v32, v36);
      long long v18 = v37;
      v34[2] = v37;
      sub_1C4144((uint64_t)v38, (uint64_t)v42);
      sub_89B4(v36, v34);
      unint64_t v19 = v2[2];
      if (v2[3] <= v19)
      {
        uint64_t v20 = v19 + 1;
        swift_bridgeObjectRetain();
        sub_22F5FC(v20, 1);
        os_log_type_t v2 = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_26DEF0();
      sub_26D4B0();
      uint64_t result = sub_26DF20();
      uint64_t v21 = (char *)(v2 + 8);
      uint64_t v22 = -1 << *((unsigned char *)v2 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~v2[(v23 >> 6) + 8]) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~v2[(v23 >> 6) + 8])) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)&v21[8 * v24];
        }
        while (v29 == -1);
        unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(void *)&v21[(v25 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v25;
      *(_OWORD *)(v2[6] + 16 * v25) = v18;
      sub_89B4(v34, (_OWORD *)(v2[7] + 32 * v25));
      ++v2[2];
      unint64_t v8 = (long long *)v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_B6DC((uint64_t)&v37, &qword_2F4948);
      unint64_t v8 = &v32;
    }
    uint64_t result = sub_B6DC((uint64_t)v8, &qword_2EA0B8);
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v30)
  {
LABEL_40:
    sub_BFCB4();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v31 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t NotEncoded.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t NotEncoded.encode(to:)(void *a1)
{
  return sub_1C3130(a1);
}

uint64_t NotEncoded<A>.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  unint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_C224(v8, (uint64_t)v13);
  sub_26D730();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (!v3) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, a2);
  }
  return result;
}

uint64_t sub_1C2E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return NotEncoded<A>.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t NotDecoded.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26D980();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t NotDecoded.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = sub_26D980();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t NotDecoded.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  uint64_t v5 = sub_26D980();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(a3, a1, v5);
}

uint64_t NotDecoded.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  v5(a3, 1, 1, a2);
  uint64_t v6 = sub_26D980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a3, v6);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(a3, 1, 1, a2);
}

uint64_t sub_1C3114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return NotDecoded.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1C3130(void *a1)
{
  sub_4ADC(a1, a1[3]);
  sub_26DFD0();
  sub_14714((uint64_t)v2, v3);
  sub_26DE00();
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v2);
}

uint64_t sub_1C31B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C3310(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C3528);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for NotEncoded()
{
  return sub_129B4();
}

uint64_t sub_1C3568()
{
  uint64_t result = sub_26D980();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C35F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1C3734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1C37F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C38F0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1C3A5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C3B54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1C3CC0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C3E60(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C409CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NotDecoded()
{
  return sub_129B4();
}

uint64_t sub_1C40DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C4144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C41AC(void (*a1)(uint64_t *__return_ptr, void *), void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  int v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  uint64_t v7 = a3;
  char v74 = _swiftEmptyArrayStorage;
  sub_2B94C(0, v5, 0);
  int v6 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1C7830(v7);
  int64_t v9 = result;
  int v11 = v10;
  char v13 = v12 & 1;
  uint64_t v50 = v7;
  uint64_t v51 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v51 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_16;
    }
    unsigned int v14 = v6;
    int v15 = (void *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v16 = v15[1];
    v56[0] = *v15;
    v56[1] = v16;
    swift_bridgeObjectRetain();
    int v6 = a2;
    a1(&v57, v56);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
    char v54 = v13;
    int v55 = v11;
    swift_bridgeObjectRelease();
    uint64_t v17 = v57;
    uint64_t v18 = v58;
    uint64_t v19 = v59;
    uint64_t v20 = v60;
    char v21 = v61;
    uint64_t v22 = v62;
    char v23 = v63;
    char v24 = v64;
    uint64_t v25 = v65;
    char v26 = v66;
    char v27 = v67;
    char v28 = v68;
    char v29 = v69;
    char v30 = v70;
    uint64_t v31 = v71;
    int v6 = v14;
    unint64_t v32 = v14[2];
    unint64_t v33 = v6[3];
    char v34 = v72;
    char v35 = v73;
    char v74 = v6;
    if (v32 >= v33 >> 1)
    {
      char v40 = v70;
      uint64_t v39 = v71;
      uint64_t v48 = v58;
      uint64_t v49 = v57;
      uint64_t v46 = v62;
      uint64_t v47 = v59;
      char v44 = v64;
      char v45 = v63;
      char v42 = v67;
      char v43 = v66;
      char v41 = v68;
      sub_2B94C(v33 > 1, v32 + 1, 1);
      uint64_t v31 = v39;
      char v30 = v40;
      char v28 = v41;
      char v27 = v42;
      char v26 = v43;
      char v24 = v44;
      char v23 = v45;
      uint64_t v22 = v46;
      uint64_t v19 = v47;
      uint64_t v18 = v48;
      uint64_t v17 = v49;
      int v6 = v74;
    }
    long long v6[2] = v32 + 1;
    uint64_t v36 = &v6[11 * v32];
    v36[4] = v17;
    v36[5] = v18;
    v36[6] = v19;
    v36[7] = v20;
    *((unsigned char *)v36 + 64) = v21;
    v36[9] = v22;
    *((unsigned char *)v36 + 80) = v23;
    *((unsigned char *)v36 + 81) = v24;
    v36[11] = v25;
    *((unsigned char *)v36 + 96) = v26;
    *((unsigned char *)v36 + 97) = v27;
    *((unsigned char *)v36 + 98) = v28;
    *((unsigned char *)v36 + 99) = v29;
    *((unsigned char *)v36 + 100) = v30;
    v36[13] = v31;
    *((unsigned char *)v36 + 112) = v34;
    *((unsigned char *)v36 + 113) = v35;
    uint64_t v7 = v50;
    uint64_t result = sub_1C78D0(v9, v55, v54 & 1, v50);
    int64_t v9 = result;
    int v11 = v37;
    char v13 = v38 & 1;
    --v5;
    uint64_t v4 = 0;
    if (!v5)
    {
      sub_1C819C(result, v37, v38 & 1);
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C443C(void (*a1)(_OWORD *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  int v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  uint64_t v7 = a3;
  char v30 = _swiftEmptyArrayStorage;
  sub_2B96C(0, v5, 0);
  int v6 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1C7830(v7);
  int64_t v9 = result;
  int v11 = v10;
  char v13 = v12 & 1;
  uint64_t v25 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v25 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_16;
    }
    unsigned int v14 = (void *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v15 = v14[1];
    v27[0] = *v14;
    v27[1] = v15;
    swift_bridgeObjectRetain();
    a1(v28, v27);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
    uint64_t v16 = v7;
    swift_bridgeObjectRelease();
    char v30 = v6;
    unint64_t v18 = v6[2];
    unint64_t v17 = v6[3];
    if (v18 >= v17 >> 1)
    {
      sub_2B96C(v17 > 1, v18 + 1, 1);
      int v6 = v30;
    }
    long long v6[2] = v18 + 1;
    uint64_t v19 = &v6[7 * v18];
    long long v20 = v28[0];
    long long v21 = v28[1];
    long long v22 = v28[2];
    v19[10] = v29;
    *((_OWORD *)v19 + 3) = v21;
    *((_OWORD *)v19 + 4) = v22;
    *((_OWORD *)v19 + 2) = v20;
    uint64_t v7 = v16;
    uint64_t result = sub_1C78D0(v9, v11, v13 & 1, v16);
    int64_t v9 = result;
    int v11 = v23;
    char v13 = v24 & 1;
    --v5;
    uint64_t v4 = 0;
    if (!v5)
    {
      sub_1C819C(result, v23, v24 & 1);
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void *sub_1C4620(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_2B8CC(0, v1, 0);
  uint64_t result = (void *)sub_1C76A4(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  uint64_t v23 = a1 + 80;
  int64_t v24 = v1;
  uint64_t v8 = a1;
  int v25 = v4;
  uint64_t v26 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v8 + 32))
  {
    unint64_t v11 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v8 + 36) != v4) {
      goto LABEL_24;
    }
    char v12 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v5);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v15 = _swiftEmptyArrayStorage[3];
    if (v16 >= v15 >> 1) {
      uint64_t result = (void *)sub_2B8CC(v15 > 1, v16 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    unint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
    id v17[4] = v13;
    v17[5] = v14;
    int64_t v9 = 1 << *(unsigned char *)(v8 + 32);
    if (v5 >= v9) {
      goto LABEL_25;
    }
    uint64_t v7 = v26;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v25;
    if (*(_DWORD *)(v8 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v5 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(v23 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v9;
    if (v6 == v10) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C4830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C76A4(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(_WORD *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    uint64_t result = sub_1C772C((uint64_t)v23, result, v5, 0, a1);
    uint64_t v7 = v23[0];
    uint64_t v8 = v23[1];
    char v9 = v24;
    uint64_t v10 = v25;
    char v11 = v26;
    char v12 = v27;
    uint64_t v13 = v28;
    char v14 = v29;
    char v15 = v30;
    char v16 = v31;
    char v17 = v32;
    char v18 = v33;
    uint64_t v19 = v34;
    char v20 = v35;
    char v21 = v36;
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v22;
    *(void *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v8;
    *(unsigned char *)(a2 + 32) = v9;
    *(void *)(a2 + 40) = v10;
    *(unsigned char *)(a2 + 48) = v11;
    *(unsigned char *)(a2 + 49) = v12;
    *(void *)(a2 + 56) = v13;
    *(unsigned char *)(a2 + 64) = v14;
    *(unsigned char *)(a2 + 65) = v15;
    *(unsigned char *)(a2 + 66) = v16;
    *(unsigned char *)(a2 + 67) = v17;
    *(unsigned char *)(a2 + 68) = v18;
    *(void *)(a2 + 72) = v19;
    *(unsigned char *)(a2 + 80) = v20;
    *(unsigned char *)(a2 + 81) = v21;
  }
  return result;
}

double EnvironmentValues.libraryAssetState.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1C51C0();
  sub_26B0B0();
  uint64_t v2 = *(void *)(v13[0] + 16);
  swift_bridgeObjectRelease();
  if (v2 == 1 && (sub_26B0B0(), sub_1C4830(v13[0], (uint64_t)v13), swift_bridgeObjectRelease(), v13[1]))
  {
    __int16 v3 = v20;
    uint64_t v5 = v18;
    uint64_t v4 = v19;
    unsigned __int16 v7 = v16;
    uint64_t v6 = v17;
    uint64_t v8 = v15;
    uint64_t v9 = v14;
    uint64_t v11 = v13[2];
    uint64_t v10 = v13[3];
    swift_bridgeObjectRelease();
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v7 & 0xFF01;
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v5 & 0x101010101;
    *(void *)(a1 + 56) = v4;
    *(_WORD *)(a1 + 64) = v3 & 0x101;
  }
  else
  {
    *(_WORD *)(a1 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t View.observeLibraryAssetState(for:libraryAssetStateObserverProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _OWORD v23[3] = a6;
  v23[0] = a3;
  v23[1] = sub_26ABD0();
  uint64_t v10 = sub_26B300();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unsigned __int8 v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v23 - v15;
  sub_4A98(&qword_2EADB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_13A4C0(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  View.observeLibraryAssetStates(for:libraryAssetStateObserverProvider:)(v18, v23[0], a4, a5, (uint64_t)v14);
  swift_bridgeObjectRelease();
  unint64_t v19 = sub_1381F4();
  v23[6] = a5;
  v23[7] = v19;
  id v23[4] = swift_getWitnessTable();
  v23[5] = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v14, v10, WitnessTable);
  char v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  sub_CCCC(v16, v10, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v10);
}

uint64_t LibraryAssetStateRequiring.assetIDsToObserveState.getter(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EADB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  *(void *)(inited + 40) = v5;
  uint64_t v6 = sub_13A4C0(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_1C4D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v11[5] = 0;
  sub_4A98(&qword_2F49D0);
  sub_26C340();
  *(_OWORD *)(a3 + 24) = v12;
  *(void *)(a3 + 40) = swift_getKeyPath();
  *(unsigned char *)(a3 + 80) = 0;
  *(void *)a3 = a1;
  v11[2] = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C41AC((void (*)(uint64_t *__return_ptr, void *))sub_1C81B0, v11, a1);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    sub_4A98(&qword_2E9FB0);
    unsigned __int16 v7 = (void *)sub_26DBD0();
  }
  else
  {
    unsigned __int16 v7 = &_swiftEmptyDictionarySingleton;
  }
  *(void *)&long long v12 = v7;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1C68E0(v8, 1, &v12);
  swift_bridgeObjectRelease();
  uint64_t v9 = v12;
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a2);
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1C4E78@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  sub_4ADC(a2, v5);
  unsigned __int16 v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  return v7(v3, v4, v5, v6);
}

uint64_t sub_1C4F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_4A98(&qword_2F49A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F49A8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  long long v25 = *(_OWORD *)(v2 + 24);
  sub_4A98(&qword_2F49B0);
  sub_26C350();
  if (!v22)
  {
    sub_1C8060(v2, (uint64_t)&v25);
    goto LABEL_5;
  }
  uint64_t v13 = sub_1C6624(v22);
  swift_bridgeObjectRelease();
  sub_1C8060(v3, (uint64_t)&v25);
  if (!v13)
  {
LABEL_5:
    uint64_t v22 = *((void *)&v25 + 1);
    uint64_t v23 = v26;
    sub_4A98(&qword_2F49B8);
    sub_26C350();
    sub_1C79B4((uint64_t)&v25);
    uint64_t v13 = v24;
    goto LABEL_6;
  }
  sub_1C79B4((uint64_t)&v25);
LABEL_6:
  uint64_t v14 = sub_4A98(&qword_2F49C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  uint64_t v15 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *uint64_t v15 = KeyPath;
  v15[1] = v13;
  sub_1C8060(v3, (uint64_t)&v25);
  uint64_t v16 = swift_allocObject();
  long long v17 = v28;
  *(_OWORD *)(v16 + 48) = v27;
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = v29;
  *(unsigned char *)(v16 + 96) = v30;
  long long v18 = v26;
  *(_OWORD *)(v16 + 16) = v25;
  *(_OWORD *)(v16 + 32) = v18;
  sub_B678((uint64_t)v8, (uint64_t)v11, &qword_2F49A0);
  unint64_t v19 = (uint64_t (**)())&v11[*(int *)(v9 + 36)];
  *unint64_t v19 = sub_1C810C;
  v19[1] = (uint64_t (*)())v16;
  v19[2] = 0;
  v19[3] = 0;
  sub_B6DC((uint64_t)v8, &qword_2F49A0);
  return sub_1C8114((uint64_t)v11, a2);
}

uint64_t EnvironmentValues.libraryAssetStates.getter()
{
  sub_1C51C0();
  sub_26B0B0();
  return v1;
}

unint64_t sub_1C51C0()
{
  unint64_t result = qword_2F4978;
  if (!qword_2F4978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4978);
  }
  return result;
}

uint64_t sub_1C5214@<X0>(void *a1@<X8>)
{
  sub_1C51C0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1C5264()
{
  return sub_26B0C0();
}

uint64_t EnvironmentValues.libraryAssetStates.setter()
{
  return sub_26B0C0();
}

uint64_t sub_1C5300(uint64_t a1)
{
  long long v9 = *(_OWORD *)(a1 + 24);
  sub_4A98(&qword_2F49B0);
  sub_26C350();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10)
  {
    uint64_t v3 = *(void *)a1;
    __chkstk_darwin(result);
    long long v8[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C443C((void (*)(_OWORD *__return_ptr, void *))sub_1C817C, (uint64_t)v8, v3);
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 16))
    {
      sub_4A98(&qword_2F49C8);
      uint64_t v5 = (void *)sub_26DBD0();
    }
    else
    {
      uint64_t v5 = &_swiftEmptyDictionarySingleton;
    }
    *(void *)&long long v9 = v5;
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1C6C94(v6, 1, &v9);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    long long v9 = *(_OWORD *)(a1 + 24);
    uint64_t v10 = v7;
    return sub_26C360();
  }
  return result;
}

uint64_t sub_1C546C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *a3 = *a1;
  a3[1] = v5;
  swift_bridgeObjectRetain();
  sub_421E0((uint64_t)v45);
  uint64_t v27 = v47;
  uint64_t v28 = v46;
  sub_4ADC(v45, v46);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v29 = *(void *)(a2 + 8);
  uint64_t v30 = v6;
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2F49B8);
  sub_26C350();
  if (*(void *)(v44 + 16) && (unint64_t v7 = sub_9E10(v4, v5), (v8 & 1) != 0))
  {
    uint64_t v26 = v4;
    uint64_t v9 = *(void *)(v44 + 56) + 72 * v7;
    uint64_t v10 = *(void *)v9;
    uint64_t v11 = *(void *)(v9 + 8);
    char v12 = *(unsigned char *)(v9 + 16);
    uint64_t v13 = *(void *)(v9 + 24);
    char v14 = *(unsigned char *)(v9 + 32);
    char v15 = *(unsigned char *)(v9 + 33);
    uint64_t v16 = *(void *)(v9 + 40);
    char v17 = *(unsigned char *)(v9 + 48);
    char v24 = *(unsigned char *)(v9 + 50);
    char v25 = *(unsigned char *)(v9 + 49);
    char v22 = *(unsigned char *)(v9 + 52);
    char v23 = *(unsigned char *)(v9 + 51);
    uint64_t v21 = *(void *)(v9 + 56);
    char v19 = *(unsigned char *)(v9 + 65);
    char v20 = *(unsigned char *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v10;
    uint64_t v30 = v11;
    char v31 = v12;
    uint64_t v32 = v13;
    char v33 = v14;
    char v34 = v15;
    uint64_t v35 = v16;
    char v36 = v17;
    char v37 = v25;
    char v38 = v24;
    char v39 = v23;
    char v40 = v22;
    uint64_t v41 = v21;
    char v42 = v20;
    char v43 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v27 + 8))(v26, v5, &v29, v28);
    swift_bridgeObjectRelease();
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v45);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t View.observeLibraryAssetStates(for:libraryAssetStateObserverProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  uint64_t v53 = a5;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v45 - v12;
  uint64_t v13 = sub_26ABD0();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v45 - v17;
  uint64_t v52 = sub_26B300();
  uint64_t v18 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  char v20 = (char *)&v45 - v19;
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 != 1) {
    goto LABEL_5;
  }
  id v21 = [self standardUserDefaults];
  uint64_t v45 = v5;
  id v22 = v21;
  NSString v23 = sub_26D3F0();
  uint64_t v46 = a3;
  char v24 = v20;
  uint64_t v25 = v18;
  uint64_t v26 = a4;
  uint64_t v27 = v11;
  uint64_t v28 = v23;
  unsigned __int8 v29 = [v22 integerForKey:v23];

  uint64_t v30 = v45;
  uint64_t v31 = (uint64_t)v27;
  a4 = v26;
  uint64_t v18 = v25;
  char v20 = v24;
  uint64_t v32 = v46;
  if ((v29 & 0x20) != 0)
  {
    char v38 = v47;
    sub_CCCC(v30, v46, a4);
    sub_CCCC(v38, v32, a4);
    unint64_t v39 = sub_1381F4();
    uint64_t v54 = a4;
    unint64_t v55 = v39;
    swift_getWitnessTable();
    sub_1B98C(v31, v13, v32);
    char v40 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v40(v31, v32);
    v40((uint64_t)v38, v32);
  }
  else
  {
LABEL_5:
    sub_C224(v48, (uint64_t)v62);
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1C4D34(v33, (uint64_t)v62, (uint64_t)v63);
    sub_26C030();
    sub_1C79B4((uint64_t)v63);
    unint64_t v34 = sub_1381F4();
    uint64_t v60 = a4;
    unint64_t v61 = v34;
    uint64_t WitnessTable = swift_getWitnessTable();
    char v36 = v50;
    sub_CCCC(v16, v13, WitnessTable);
    char v37 = *(void (**)(char *, uint64_t))(v51 + 8);
    v37(v16, v13);
    sub_CCCC(v36, v13, WitnessTable);
    sub_1B894((uint64_t)v16, v13);
    v37(v16, v13);
    v37(v36, v13);
  }
  unint64_t v41 = sub_1381F4();
  uint64_t v58 = a4;
  unint64_t v59 = v41;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = a4;
  uint64_t v42 = v52;
  uint64_t v43 = swift_getWitnessTable();
  sub_CCCC(v20, v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v42);
}

{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  NSString v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t WitnessTable;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unsigned char v50[40];
  long long v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  uint64_t v42 = a2;
  uint64_t v46 = a5;
  uint64_t v45 = *(void *)(a3 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_26ABD0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v43 = (char *)&v38 - v18;
  uint64_t v19 = sub_26B300();
  uint64_t v47 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v21 = (char *)&v38 - v20;
  sub_B678(a1, (uint64_t)&v51, &qword_2F4980);
  if (!v52)
  {
    sub_B6DC((uint64_t)&v51, &qword_2F4980);
LABEL_9:
    sub_CCCC(v5, a3, a4);
    uint64_t v32 = (uint64_t)v44;
    sub_CCCC(v12, a3, a4);
    uint64_t v33 = sub_1381F4();
    uint64_t v57 = a4;
    uint64_t v58 = v33;
    swift_getWitnessTable();
    sub_1B98C(v32, v13, a3);
    unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v34(v32, a3);
    v34((uint64_t)v12, a3);
    goto LABEL_10;
  }
  unint64_t v39 = v14;
  char v40 = v5;
  unint64_t v41 = v19;
  sub_AD44(&v51, (uint64_t)&v59);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1)
  {
    id v22 = [self standardUserDefaults];
    NSString v23 = sub_26D3F0();
    char v24 = [v22 integerForKey:v23];

    if ((v24 & 0x20) != 0)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v59);
      uint64_t v19 = v41;
      uint64_t v5 = v40;
      goto LABEL_9;
    }
  }
  uint64_t v25 = v60;
  uint64_t v26 = v61;
  sub_4ADC(&v59, v60);
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
  sub_C224(v42, (uint64_t)v50);
  sub_1C4D34(v27, (uint64_t)v50, (uint64_t)&v51);
  sub_26C030();
  sub_1C79B4((uint64_t)&v51);
  uint64_t v28 = sub_1381F4();
  uint64_t v48 = a4;
  uint64_t v49 = v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = v43;
  sub_CCCC(v17, v13, WitnessTable);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v39 + 8);
  v31(v17, v13);
  sub_CCCC(v30, v13, WitnessTable);
  sub_1B894((uint64_t)v17, v13);
  v31(v17, v13);
  v31(v30, v13);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v59);
  uint64_t v19 = v41;
LABEL_10:
  uint64_t v35 = sub_1381F4();
  unint64_t v55 = a4;
  uint64_t v56 = v35;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = a4;
  char v36 = swift_getWitnessTable();
  sub_CCCC(v21, v19, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v21, v19);
}

unint64_t sub_1C6170@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_982C((uint64_t)_swiftEmptyArrayStorage);
  *a1 = result;
  return result;
}

uint64_t sub_1C61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1C7F98();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.libraryAssetStates.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_1C51C0();
  sub_26B0B0();
  return sub_1C6264;
}

uint64_t sub_1C6264(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_26B0C0();
  }
  swift_bridgeObjectRetain();
  sub_26B0C0();

  return swift_bridgeObjectRelease();
}

uint64_t EnvironmentValues.ownedAssetIDs.getter()
{
  sub_1C51C0();
  sub_26B0B0();
  uint64_t v0 = sub_1C7070(v4);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C4620((uint64_t)v0);
  swift_release();
  uint64_t v2 = sub_13A4C0((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

double sub_1C638C()
{
  qword_2F4970 = 0;
  double result = 0.0;
  xmmword_2F4950 = 0u;
  unk_2F4960 = 0u;
  return result;
}

uint64_t sub_1C63A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9CC8 != -1) {
    swift_once();
  }
  return sub_B678((uint64_t)&xmmword_2F4950, a1, &qword_2EBCB8);
}

uint64_t EnvironmentValues.libraryAssetStateObserverProvider.getter()
{
  sub_13D82C();

  return sub_26B0B0();
}

uint64_t EnvironmentValues.libraryAssetStateObserverProvider.setter(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v3, &qword_2EBCB8);
  sub_13D82C();
  sub_26B0C0();
  return sub_B6DC(a1, &qword_2EBCB8);
}

void (*EnvironmentValues.libraryAssetStateObserverProvider.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v3[16] = sub_13D82C();
  sub_26B0B0();
  return sub_1C6538;
}

void sub_1C6538(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_B678(*a1, v3, &qword_2EBCB8);
    sub_B678(v3, (uint64_t)v2 + 80, &qword_2EBCB8);
    sub_26B0C0();
    sub_B6DC(v3, &qword_2EBCB8);
  }
  else
  {
    sub_B678(*a1, v3, &qword_2EBCB8);
    sub_26B0C0();
  }
  sub_B6DC((uint64_t)v2, &qword_2EBCB8);

  free(v2);
}

uint64_t sub_1C6624(uint64_t a1)
{
  void (*v21)(void *__return_ptr, uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void v46[2];
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  void v60[3];
  uint64_t v61;
  uint64_t v62;
  int64_t v63;

  sub_4A98(&qword_2E9FB0);
  uint64_t result = sub_26DBB0();
  int64_t v3 = 0;
  uint64_t v44 = (void *)result;
  uint64_t v45 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  unint64_t v41 = v5;
  uint64_t v42 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v43 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  char v63 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v45 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_C224(*(void *)(v45 + 56) + 40 * i, (uint64_t)v60);
    uint64_t v19 = v61;
    uint64_t v20 = v62;
    sub_4ADC(v60, v61);
    id v21 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    v21(v46, v19, v20);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v60);
    uint64_t result = (uint64_t)v44;
    *(void *)(v43 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    id v22 = (void *)(v44[6] + 16 * i);
    char *v22 = v17;
    v22[1] = v18;
    NSString v23 = v44[7] + 72 * i;
    char v24 = v46[1];
    uint64_t v25 = v47;
    uint64_t v26 = v48;
    uint64_t v27 = v49;
    uint64_t v28 = v50;
    unsigned __int8 v29 = v51;
    uint64_t v30 = v52;
    uint64_t v31 = v53;
    uint64_t v32 = v54;
    uint64_t v33 = v55;
    unint64_t v34 = v56;
    uint64_t v35 = v57;
    char v36 = v58;
    char v37 = v59;
    *(void *)NSString v23 = v46[0];
    *(void *)(v23 + 8) = v24;
    *(unsigned char *)(v23 + 16) = v25;
    *(void *)(v23 + 24) = v26;
    *(unsigned char *)(v23 + 32) = v27;
    *(unsigned char *)(v23 + 33) = v28;
    *(void *)(v23 + 40) = v29;
    *(unsigned char *)(v23 + 48) = v30;
    *(unsigned char *)(v23 + 49) = v31;
    *(unsigned char *)(v23 + 50) = v32;
    *(unsigned char *)(v23 + 51) = v33;
    *(unsigned char *)(v23 + 52) = v34;
    *(void *)(v23 + 56) = v35;
    *(unsigned char *)(v23 + 64) = v36;
    *(unsigned char *)(v23 + 65) = v37;
    char v38 = v44[2];
    unint64_t v39 = __OFADD__(v38, 1);
    char v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v44[2] = v40;
    int64_t v3 = v63;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v42) {
      return result;
    }
    unint64_t v13 = *(void *)(v41 + 8 * v12);
    int64_t v14 = v3 + 1;
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v42) {
        return result;
      }
      unint64_t v13 = *(void *)(v41 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v3 + 3;
        if (v3 + 3 >= v42) {
          return result;
        }
        unint64_t v13 = *(void *)(v41 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    char v63 = v14;
  }
  uint64_t v15 = v3 + 4;
  if (v3 + 4 >= v42) {
    return result;
  }
  unint64_t v13 = *(void *)(v41 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v42) {
      return result;
    }
    unint64_t v13 = *(void *)(v41 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C68E0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v31 = v4;
  if (!v4) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v30 = v3;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_26DE60();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *(void *)(v3 + v5 + 32);
    uint64_t v7 = *(void *)(v3 + v5 + 40);
    uint64_t v10 = *(void *)(v3 + v5 + 48);
    uint64_t v9 = *(void *)(v3 + v5 + 56);
    char v11 = *(unsigned char *)(v3 + v5 + 64);
    uint64_t v12 = *(void *)(v3 + v5 + 72);
    char v13 = *(unsigned char *)(v3 + v5 + 80);
    char v44 = *(unsigned char *)(v3 + v5 + 81);
    uint64_t v43 = *(void *)(v3 + v5 + 88);
    char v41 = *(unsigned char *)(v3 + v5 + 97);
    char v42 = *(unsigned char *)(v3 + v5 + 96);
    char v39 = *(unsigned char *)(v3 + v5 + 99);
    char v40 = *(unsigned char *)(v3 + v5 + 98);
    char v38 = *(unsigned char *)(v3 + v5 + 100);
    uint64_t v37 = *(void *)(v3 + v5 + 104);
    char v35 = *(unsigned char *)(v3 + v5 + 113);
    char v36 = *(unsigned char *)(v3 + v5 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v7) {
      return swift_bridgeObjectRelease_n();
    }
    char v32 = v13;
    uint64_t v33 = v12;
    uint64_t v34 = v9;
    int64_t v14 = (void *)*a3;
    unint64_t v16 = sub_9E10(v8, v7);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_21;
    }
    char v20 = v15;
    if (v14[3] < v19) {
      break;
    }
    if (a2)
    {
      if (v15) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_231998();
      if (v20) {
        goto LABEL_16;
      }
    }
LABEL_12:
    NSString v23 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    char v24 = (uint64_t *)(v23[6] + 16 * v16);
    *char v24 = v8;
    v24[1] = v7;
    uint64_t v25 = v23[7] + 72 * v16;
    *(void *)uint64_t v25 = v10;
    *(void *)(v25 + 8) = v34;
    *(unsigned char *)(v25 + 16) = v11;
    *(void *)(v25 + 24) = v33;
    *(unsigned char *)(v25 + 32) = v32;
    *(unsigned char *)(v25 + 33) = v44;
    *(void *)(v25 + 40) = v43;
    *(unsigned char *)(v25 + 48) = v42;
    *(unsigned char *)(v25 + 49) = v41;
    *(unsigned char *)(v25 + 50) = v40;
    *(unsigned char *)(v25 + 51) = v39;
    *(unsigned char *)(v25 + 52) = v38;
    *(void *)(v25 + 56) = v37;
    *(unsigned char *)(v25 + 64) = v36;
    *(unsigned char *)(v25 + 65) = v35;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_22;
    }
    ++v6;
    void v23[2] = v28;
    v5 += 88;
    a2 = 1;
    uint64_t v3 = v30;
    if (v31 == v6) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_2300D4(v19, a2 & 1);
  unint64_t v21 = sub_9E10(v8, v7);
  if ((v20 & 1) != (v22 & 1)) {
    goto LABEL_23;
  }
  unint64_t v16 = v21;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  swift_allocError();
  swift_willThrow();
  swift_errorRetain();
  sub_4A98(&qword_2F1D78);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_errorRelease();
  }
LABEL_24:
  sub_26DA90(30);
  v47._object = (void *)0x800000000028BA60;
  v47._countAndFlagsBits = 0xD00000000000001BLL;
  sub_26D4E0(v47);
  sub_26DB80();
  v48._countAndFlagsBits = 39;
  v48._object = (void *)0xE100000000000000;
  sub_26D4E0(v48);
  uint64_t result = sub_26DBA0();
  __break(1u);
  return result;
}

uint64_t sub_1C6C94(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_B678(a1 + 32, (uint64_t)&v44, &qword_2EAD38);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_AD44(v46, (uint64_t)v41);
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_9E10(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_231BFC();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    char v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *unint64_t v21 = v7;
    v21[1] = v8;
    sub_AD44(v41, v20[7] + 40 * v11);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 88; ; i += 56)
    {
      sub_B678(i, (uint64_t)&v44, &qword_2EAD38);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_AD44(v46, (uint64_t)v41);
      unsigned __int8 v29 = (void *)*a3;
      unint64_t v30 = sub_9E10(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_2304E4(v34, 1);
        unint64_t v30 = sub_9E10(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      char v38 = (uint64_t *)(v37[6] + 16 * v30);
      *char v38 = v27;
      v38[1] = v28;
      sub_AD44(v41, v37[7] + 40 * v30);
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      void v37[2] = v40;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2304E4(v14, a2 & 1);
  unint64_t v16 = sub_9E10(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = swift_allocError();
    swift_willThrow();
    uint64_t v47 = v19;
    swift_errorRetain();
    sub_4A98(&qword_2F1D78);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_26DE60();
  __break(1u);
LABEL_26:
  sub_26DA90(30);
  v48._object = (void *)0x800000000028BA60;
  v48._countAndFlagsBits = 0xD00000000000001BLL;
  sub_26D4E0(v48);
  sub_26DB80();
  v49._countAndFlagsBits = 39;
  v49._object = (void *)0xE100000000000000;
  sub_26D4E0(v49);
  uint64_t result = sub_26DBA0();
  __break(1u);
  return result;
}

unint64_t *sub_1C7070(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    unint64_t v6 = sub_1C71C8((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1C71C8((unint64_t *)v7, v4, (uint64_t)v2);
    swift_slowDealloc();
  }
  return v2;
}

unint64_t *sub_1C71C8(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1C7320(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1C7320(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1C7320(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(unsigned __int8 *)(*(void *)(a3 + 56) + 72 * v12 + 16) <= 1u)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1C7320(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1C7320(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1C7320(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C7320(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_4A98(&qword_2E9FB0);
  uint64_t result = sub_26DBD0();
  uint64_t v8 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v39 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v40 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v37) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v37) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v37) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v37) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v37) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v40 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    BOOL v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(v4 + 56) + 72 * v13;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 24);
    char v50 = *(unsigned char *)(v21 + 32);
    char v51 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 40);
    char v48 = *(unsigned char *)(v21 + 48);
    char v49 = *(unsigned char *)(v21 + 33);
    char v46 = *(unsigned char *)(v21 + 50);
    char v47 = *(unsigned char *)(v21 + 49);
    char v44 = *(unsigned char *)(v21 + 52);
    char v45 = *(unsigned char *)(v21 + 51);
    uint64_t v43 = *(void *)(v21 + 56);
    char v41 = *(unsigned char *)(v21 + 65);
    char v42 = *(unsigned char *)(v21 + 64);
    sub_26DEF0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_26D4B0();
    uint64_t result = sub_26DF20();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v8 + 48) + 16 * v29);
    *uint64_t v34 = v20;
    v34[1] = v19;
    uint64_t v35 = *(void *)(v8 + 56) + 72 * v29;
    *(void *)uint64_t v35 = v22;
    *(void *)(v35 + 8) = v23;
    *(unsigned char *)(v35 + 16) = v51;
    *(void *)(v35 + 24) = v24;
    *(unsigned char *)(v35 + 32) = v50;
    *(unsigned char *)(v35 + 33) = v49;
    *(void *)(v35 + 40) = v25;
    *(unsigned char *)(v35 + 48) = v48;
    *(unsigned char *)(v35 + 49) = v47;
    *(unsigned char *)(v35 + 50) = v46;
    *(unsigned char *)(v35 + 51) = v45;
    *(unsigned char *)(v35 + 52) = v44;
    *(void *)(v35 + 56) = v43;
    *(unsigned char *)(v35 + 64) = v42;
    *(unsigned char *)(v35 + 65) = v41;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v39;
    uint64_t v10 = v40;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C76A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C772C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 72 * a2;
    uint64_t v7 = *(void *)v6;
    uint64_t v8 = *(void *)(v6 + 8);
    char v9 = *(unsigned char *)(v6 + 16);
    uint64_t v10 = *(void *)(v6 + 24);
    char v11 = *(unsigned char *)(v6 + 32);
    char v12 = *(unsigned char *)(v6 + 33);
    uint64_t v13 = *(void *)(v6 + 40);
    char v14 = *(unsigned char *)(v6 + 48);
    char v15 = *(unsigned char *)(v6 + 49);
    char v16 = *(unsigned char *)(v6 + 50);
    char v17 = *(unsigned char *)(v6 + 51);
    char v18 = *(unsigned char *)(v6 + 52);
    uint64_t v19 = *(void *)(v6 + 56);
    char v20 = *(unsigned char *)(v6 + 64);
    LOBYTE(v6) = *(unsigned char *)(v6 + 65);
    *(void *)uint64_t result = v7;
    *(void *)(result + 8) = v8;
    *(unsigned char *)(result + 16) = v9;
    *(void *)(result + 24) = v10;
    *(unsigned char *)(result + 32) = v11;
    *(unsigned char *)(result + 33) = v12;
    *(void *)(result + 40) = v13;
    *(unsigned char *)(result + 48) = v14;
    *(unsigned char *)(result + 49) = v15;
    *(unsigned char *)(result + 50) = v16;
    *(unsigned char *)(result + 51) = v17;
    *(unsigned char *)(result + 52) = v18;
    *(void *)(result + 56) = v19;
    *(unsigned char *)(result + 64) = v20;
    *(unsigned char *)(result + 65) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C7830(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1C78D0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C79B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C79E4@<X0>(void *a1@<X8>)
{
  sub_1C51C0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t dispatch thunk of LibraryAssetStateObserverProviding.libraryAssetStateObserver(for:initialState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of LibraryAssetStateObserverProviding.libraryAssetState(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of LibraryAssetStateObserving.libraryAssetState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LibraryAssetStateRequiring.assetIDToObserveState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LibraryAssetStatesRequiring.assetIDsToObserveState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C7AA4()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for LibraryAssetStateObserverProviderKey()
{
  return &type metadata for LibraryAssetStateObserverProviderKey;
}

uint64_t destroy for ObserveLibraryAssetStateViewModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(unsigned char *)(a1 + 80))
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 40);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ObserveLibraryAssetStateViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = (void *)(a1 + 40);
  unint64_t v7 = (void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8)
  {
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, void *))(v9 - 8))(a1 + 40, v7);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  *(unsigned char *)(a1 + 80) = v8;
  return a1;
}

uint64_t assignWithCopy for ObserveLibraryAssetStateViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    sub_B6DC(a1 + 40, &qword_2EBC48);
    if (*(unsigned char *)(a2 + 80))
    {
      uint64_t v4 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v4;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      *(unsigned char *)(a1 + 80) = 1;
    }
    else
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 80) = 0;
      swift_retain();
    }
  }
  return a1;
}

__n128 initializeWithTake for ObserveLibraryAssetStateViewModifier(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ObserveLibraryAssetStateViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    sub_B6DC(a1 + 40, &qword_2EBC48);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ObserveLibraryAssetStateViewModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObserveLibraryAssetStateViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObserveLibraryAssetStateViewModifier()
{
  return &type metadata for ObserveLibraryAssetStateViewModifier;
}

ValueMetadata *type metadata accessor for LibraryAssetStatesKey()
{
  return &type metadata for LibraryAssetStatesKey;
}

uint64_t sub_1C7F7C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C7F98()
{
  unint64_t result = qword_2F4988;
  if (!qword_2F4988)
  {
    sub_7B0C(&qword_2F4990);
    sub_1C800C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4988);
  }
  return result;
}

unint64_t sub_1C800C()
{
  unint64_t result = qword_2F4998;
  if (!qword_2F4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4998);
  }
  return result;
}

uint64_t sub_1C8060(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8098()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(unsigned char *)(v0 + 96)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 56);
  }
  else {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1C810C()
{
  return sub_1C5300(v0 + 16);
}

uint64_t sub_1C8114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F49A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C817C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C546C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C819C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C81B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C4E78(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1C81D4()
{
  unint64_t result = qword_2F49D8;
  if (!qword_2F49D8)
  {
    sub_7B0C(&qword_2F49A8);
    sub_1C8250();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F49D8);
  }
  return result;
}

unint64_t sub_1C8250()
{
  unint64_t result = qword_2F49E0;
  if (!qword_2F49E0)
  {
    sub_7B0C(&qword_2F49A0);
    sub_7C18(&qword_2F49E8, &qword_2F49C0);
    sub_7C18(&qword_2F49F0, qword_2F49F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F49E0);
  }
  return result;
}

uint64_t sub_1C8314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ListItemMetadataFormatAndDescriptorView() + 36);
  unint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t type metadata accessor for ListItemMetadataFormatAndDescriptorView()
{
  return sub_129B4();
}

uint64_t sub_1C83E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26AB40() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v11 + v8 + 1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v10 > 0xFE)
      {
        uint64_t v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v23(((unint64_t)a1 + v13) & ~v11);
      }
      else
      {
        unsigned int v22 = *((unsigned __int8 *)a1 + v8);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_1C8644(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26AB40() - 8);
  unint64_t v9 = ((*(void *)(v8 + 64)
       + ((*(unsigned __int8 *)(v8 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = v10 | 1;
  uint64_t v16 = (v10 | 1) + v13;
  size_t v17 = (v16 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v13;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1C895CLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v12 > 0xFE)
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v24((unint64_t)&a1[v16] & v21, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v15 < 4) {
            int v25 = ~(-1 << (8 * v15));
          }
          else {
            int v25 = -1;
          }
          int v26 = v25 & (a2 - 255);
          bzero(a1, v15);
          if (v15 == 1) {
            *a1 = v26;
          }
          else {
            *(_DWORD *)a1 = v26;
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_1C8984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C89C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v37 = *(void *)(v3 + 64);
  uint64_t v4 = __chkstk_darwin(a1);
  char v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v34 = *(void *)(v4 + 16);
  uint64_t v35 = v6;
  swift_getAssociatedTypeWitness();
  sub_7B0C(&qword_2EB0D0);
  sub_26ABD0();
  sub_7B0C(&qword_2EC690);
  sub_26ABD0();
  type metadata accessor for DefaultBlendModeModifier();
  uint64_t v7 = sub_26ABD0();
  uint64_t v33 = sub_26A0F0();
  uint64_t v32 = sub_26A0D0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_1C9468((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v51 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1C9468(&qword_2EC688, &qword_2EC690);
  uint64_t v48 = WitnessTable;
  uint64_t v49 = v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = sub_15B160((unint64_t *)&qword_2ECC70, (void (*)(uint64_t))type metadata accessor for DefaultBlendModeModifier);
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  uint64_t v31 = v7;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_15B160(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  uint64_t v16 = sub_15B160(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  uint64_t v40 = v7;
  uint64_t v41 = v33;
  uint64_t v42 = v32;
  uint64_t v43 = v14;
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  uint64_t v17 = sub_26A110();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v23 = (char *)&v31 - v22;
  uint64_t v24 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v36, v38, a1);
  unint64_t v25 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v35;
  *(void *)(v26 + 16) = v34;
  *(void *)(v26 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v26 + v25, v24, a1);
  sub_19C884();
  uint64_t v28 = swift_getWitnessTable();
  sub_CCCC(v21, v17, v28);
  unint64_t v29 = *(void (**)(char *, uint64_t))(v18 + 8);
  v29(v21, v17);
  sub_CCCC(v23, v17, v28);
  return ((uint64_t (*)(char *, uint64_t))v29)(v23, v17);
}

uint64_t sub_1C8E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v47 = sub_26B910();
  uint64_t v7 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v40 = (char *)&v39 - v13;
  sub_7B0C(&qword_2EB0D0);
  uint64_t v45 = sub_26ABD0();
  uint64_t v50 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = (char *)&v39 - v14;
  sub_7B0C(&qword_2EC690);
  uint64_t v46 = sub_26ABD0();
  uint64_t v51 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v39 - v15;
  type metadata accessor for DefaultBlendModeModifier();
  uint64_t v16 = sub_26ABD0();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v44 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v48 = (char *)&v39 - v19;
  type metadata accessor for ListItemMetadataFormatAndDescriptorView();
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a1, a2);
  uint64_t v20 = (uint64_t)v12;
  sub_4040C((uint64_t)v12);
  sub_26B950();
  uint64_t v21 = v47;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.Leading.tight(_:), v47);
  sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  sub_1C96BC(v20);
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = v40;
  unint64_t v25 = v41;
  sub_26BF80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v22);
  uint64_t v26 = sub_1C9468((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
  uint64_t v58 = AssociatedConformanceWitness;
  uint64_t v59 = v26;
  uint64_t v27 = v45;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v29 = v43;
  sub_26C090();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v27);
  uint64_t v30 = sub_1C9468(&qword_2EC688, &qword_2EC690);
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v30;
  uint64_t v31 = v46;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v44;
  View.defaultBlendMode()();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v31);
  uint64_t v34 = sub_15B160((unint64_t *)&qword_2ECC70, (void (*)(uint64_t))type metadata accessor for DefaultBlendModeModifier);
  uint64_t v54 = v32;
  uint64_t v55 = v34;
  uint64_t v35 = swift_getWitnessTable();
  char v36 = v48;
  sub_CCCC(v33, v16, v35);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v52 + 8);
  v37(v33, v16);
  sub_CCCC(v36, v16, v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v16);
}

uint64_t sub_1C9468(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C94B8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ListItemMetadataFormatAndDescriptorView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_1C9620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  type metadata accessor for ListItemMetadataFormatAndDescriptorView();

  return sub_1C8E34(a1, v5, v6, a2);
}

uint64_t sub_1C96BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FontConstants.ListItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C9718()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9978(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_26D7A0();
  if (!v20) {
    return sub_26D640();
  }
  Swift::Int v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_26DB20();
  uint64_t v35 = sub_26DB30();
  sub_26DB00(v21);
  uint64_t v41 = v19;
  uint64_t result = sub_26D790();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    int v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      unint64_t v25 = (void (*)(char *, void))sub_26D7F0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_26DB10();
      sub_26D7D0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

id MResourceDecoder.wrappedValue.getter()
{
  uint64_t v0 = (void *)ShelfGridItemColumnSpan.Context.offset.getter();

  return v0;
}

void _MResourceDecoder_OrNil.wrappedValue.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t sub_1C9DC8()
{
  uint64_t v0 = sub_4A98(&qword_2F4A98);
  sub_6E18(v0, qword_2F4A80);
  sub_6B14(v0, (uint64_t)qword_2F4A80);
  sub_269F00();
  return sub_26C9F0();
}

uint64_t static JSONContext.Property<A>.catalogServiceConfig.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4A98(&qword_2F4A98);
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F4A80);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void MResourceDecoder.MResourceDecoderError.hash(into:)()
{
}

Swift::Int MResourceDecoder.MResourceDecoderError.hashValue.getter()
{
  return sub_26DF20();
}

Swift::Int sub_1C9F58()
{
  return sub_26DF20();
}

uint64_t MResourceDecoder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v43 = a3;
  uint64_t v50 = sub_26D190();
  uint64_t v47 = *(void *)(v50 - 8);
  uint64_t v4 = __chkstk_darwin(v50);
  uint64_t v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v42 - v6;
  uint64_t v7 = sub_4A98(&qword_2F43F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26C8F0();
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F4AA0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_269F00();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v52 = a1;
  sub_4ADC(a1, v19);
  sub_26DFA0();
  if (qword_2E9CD0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_4A98(&qword_2F4A98);
  sub_6B14(v20, (uint64_t)qword_2F4A80);
  sub_26D280();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    uint64_t v22 = v52;
    sub_4ADC(v52, v52[3]);
    uint64_t v23 = v48;
    sub_26DF90();
    uint64_t v21 = v23;
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      goto LABEL_7;
    }
    uint64_t v48 = (uint64_t)v9;
    sub_4ADC(v53, v53[3]);
    sub_1CACB8((unint64_t *)&qword_2F4410, (void (*)(uint64_t))&type metadata accessor for JSONObject);
    sub_26DDD0();
    uint64_t v33 = v48;
    sub_26C8C0();
    uint64_t v34 = sub_26CC60();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
    {
      sub_B6DC(v33, &qword_2F43F0);
      uint64_t v22 = v52;
      uint64_t v36 = v10;
    }
    else
    {
      uint64_t v37 = sub_26CC50();
      uint64_t v38 = v33;
      uint64_t v39 = v37;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v34);
      uint64_t v22 = v52;
      uint64_t v36 = v10;
      if (v39)
      {
LABEL_15:
        uint64_t v40 = v44;
        sub_26A080();
        uint64_t v41 = sub_26A070();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v36);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v53);
        uint64_t *v43 = v41;
        return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v22);
      }
    }
    sub_9224((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_B6DC((uint64_t)v14, &qword_2F4AA0);
  type metadata accessor for MResourceDecoder.MResourceDecoderError();
  swift_getWitnessTable();
  uint64_t v21 = swift_allocError();
  swift_willThrow();
  uint64_t v22 = v52;
LABEL_7:
  v53[6] = v21;
  swift_errorRetain();
  sub_4A98(&qword_2F1D78);
  uint64_t v24 = v49;
  uint64_t v25 = v50;
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v26 = v46;
    uint64_t v27 = v47;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v24, v25);
    uint64_t v28 = sub_26DAD0();
    swift_allocError();
    uint64_t v49 = v29;
    sub_4ADC(v22, v22[3]);
    uint64_t v48 = sub_26DF80();
    v53[0] = 0;
    v53[1] = 0xE000000000000000;
    sub_26DA90(23);
    v54._object = (void *)0x800000000028BA80;
    v54._countAndFlagsBits = 0xD000000000000011;
    sub_26D4E0(v54);
    v55._countAndFlagsBits = sub_26E0F0();
    sub_26D4E0(v55);
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 8250;
    v56._object = (void *)0xE200000000000000;
    sub_26D4E0(v56);
    sub_26DB80();
    sub_1CACB8(qword_2F4AA8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v30, v26, v25);
    uint64_t v31 = v49;
    uint64_t v22 = v52;
    sub_26DAC0();
    (*(void (**)(char *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v31, enum case for DecodingError.dataCorrupted(_:), v28);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v25);
  }
  swift_errorRelease();
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v22);
}

uint64_t sub_1CA80C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MResourceDecoder.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t _MResourceDecoder_Many.init(from:)(uint64_t a1, uint64_t a2)
{
  sub_C224(a1, (uint64_t)v12);
  uint64_t v5 = type metadata accessor for MResourceDecoder();
  swift_getWitnessTable();
  uint64_t v6 = sub_26D690();
  if (v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  else
  {
    v12[0] = v6;
    __chkstk_darwin(v6);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v8 = sub_26D680();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v5 = sub_1C9978((void (*)(char *, char *))sub_11F904, KeyPath, v8, a2, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v5;
}

id sub_1CA9A8@<X0>(void *a1@<X8>)
{
  type metadata accessor for MResourceDecoder();
  uint64_t v2 = (void *)ShelfGridItemColumnSpan.Context.offset.getter();
  *a1 = v2;

  return v2;
}

void sub_1CA9F4(id *a1)
{
}

uint64_t _MResourceDecoder_Many.init(_partiallyFrom:)(uint64_t a1, uint64_t a2)
{
  sub_C224(a1, (uint64_t)v10);
  type metadata accessor for MResourceDecoder();
  swift_getWitnessTable();
  v10[0] = sub_26D670();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_26D680();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1C9978((void (*)(char *, char *))sub_11F904, KeyPath, v5, a2, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v7);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_1CAB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _MResourceDecoder_Many.init(from:)(a1, *(void *)(a2 + 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1CAB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _MResourceDecoder_Many.init(_partiallyFrom:)(a1, *(void *)(a2 + 16));
  *a3 = result;
  return result;
}

void *_MResourceDecoder_OrNil.wrappedValue.getter(void *a1)
{
  id v2 = a1;
  return a1;
}

uint64_t _MResourceDecoder_OrNil.init(from:)(uint64_t a1)
{
  sub_C224(a1, (uint64_t)v4);
  type metadata accessor for MResourceDecoder();
  swift_getWitnessTable();
  sub_26D990();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (!v1) {
    return v5;
  }
  return result;
}

uint64_t sub_1CAC70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _MResourceDecoder_OrNil.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t type metadata accessor for MResourceDecoder.MResourceDecoderError()
{
  return sub_129B4();
}

uint64_t sub_1CACB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MResourceDecoder()
{
  return sub_129B4();
}

uint64_t sub_1CAD20()
{
  return 8;
}

void *sub_1CAD2C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1CAD38()
{
  return swift_getWitnessTable();
}

unsigned char *sub_1CAD54(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1CADF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for _MResourceDecoder_Many()
{
  return sub_129B4();
}

void **sub_1CAE30(void **a1, void **a2)
{
  int v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for SharedWithYouView(id *a1)
{
}

void **sub_1CAE68(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **sub_1CAEA0(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_1CAED4(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1CAF30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for _MResourceDecoder_OrNil()
{
  return sub_129B4();
}

uint64_t CircularIconView.init(kind:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  int v4 = (int *)type metadata accessor for CircularIconView();
  id v5 = (uint64_t *)((char *)a2 + v4[5]);
  *id v5 = swift_getKeyPath();
  sub_4A98(&qword_2EBC80);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a2 + v4[6];
  *(void *)uint64_t v6 = swift_getKeyPath();
  v6[8] = 0;
  uint64_t v7 = (uint64_t *)((char *)a2 + v4[7]);
  uint64_t *v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)((char *)a2 + v4[8]);
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (char *)a2 + v4[9];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = (char *)a2 + v4[11];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v10 = result;
  v10[8] = 0;
  *((unsigned char *)a2 + v4[10]) = v3;
  return result;
}

uint64_t type metadata accessor for CircularIconView()
{
  uint64_t result = qword_2F4D38;
  if (!qword_2F4D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CircularIconView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v35 = sub_26AB40();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  int v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2F4CB0);
  __chkstk_darwin(v34);
  uint64_t v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_4A98(&qword_2F4CB8);
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F4CC0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v6 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v6[1] = v13;
  uint64_t v14 = (uint64_t)v6 + *(int *)(sub_4A98(&qword_2F4CC8) + 44);
  uint64_t v32 = v1;
  sub_1CB540(v1, v14);
  uint64_t v15 = type metadata accessor for CircularIconView();
  uint64_t v16 = &v1[*(int *)(v15 + 24)];
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_46AF8(*(void *)v16, v18);
  char v19 = sub_40900(v17, v18);
  sub_46AFC(v17, v18);
  uint64_t v20 = (unsigned int *)&enum case for DynamicTypeSize.large(_:);
  if ((v19 & 1) == 0) {
    uint64_t v20 = (unsigned int *)&enum case for DynamicTypeSize.medium(_:);
  }
  uint64_t v21 = v35;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *v20, v35);
  sub_7C18(&qword_2F4CD0, &qword_2F4CB0);
  uint64_t v22 = v33;
  sub_26BD80();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  sub_B6DC((uint64_t)v6, &qword_2F4CB0);
  uint64_t v23 = &v32[*(int *)(v15 + 36)];
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_46AF8(*(void *)v23, v25);
  sub_42450(v24, v25, v39);
  sub_46AFC(v24, v25);
  sub_46AF8(v24, v25);
  sub_42450(v24, v25, v39);
  sub_46AFC(v24, v25);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v22, v37);
  uint64_t v28 = &v12[*(int *)(v10 + 44)];
  long long v29 = v39[1];
  *(_OWORD *)uint64_t v28 = v39[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v39[2];
  (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
  return sub_19CC4((uint64_t)v12, v38, &qword_2F4CC0);
}

uint64_t sub_1CB540@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v3 = sub_4A98(&qword_2EC968);
  __chkstk_darwin(v3 - 8);
  uint64_t v107 = (uint64_t)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_4A98(&qword_2EC970);
  uint64_t v5 = __chkstk_darwin(v105);
  uint64_t v109 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v106 = (char *)&v88 - v8;
  __chkstk_darwin(v7);
  uint64_t v108 = (uint64_t)&v88 - v9;
  uint64_t v10 = sub_26AC80();
  __chkstk_darwin(v10 - 8);
  uint64_t v96 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26A6E0();
  uint64_t v111 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v103 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v17 - 8);
  char v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_26C700();
  uint64_t v91 = *(void **)(v114 - 8);
  uint64_t v113 = v91;
  uint64_t v23 = __chkstk_darwin(v114);
  uint64_t v102 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v88 - v25;
  uint64_t v93 = sub_4A98(&qword_2F4DA0);
  __chkstk_darwin(v93);
  uint64_t v112 = (uint64_t)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_4A98(&qword_2F4DA8);
  uint64_t v28 = __chkstk_darwin(v97);
  uint64_t v104 = (uint64_t)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v99 = (char *)&v88 - v31;
  __chkstk_darwin(v30);
  uint64_t v101 = (uint64_t)&v88 - v32;
  uint64_t v92 = sub_1CBFD0();
  uint64_t v98 = type metadata accessor for CircularIconView();
  uint64_t v33 = a1;
  uint64_t v34 = &a1[*(int *)(v98 + 44)];
  uint64_t v35 = *(void *)v34;
  char v36 = v34[8];
  sub_46AF8(*(void *)v34, v36);
  char v37 = sub_40900(v35, v36);
  sub_46AFC(v35, v36);
  uint64_t v90 = v16;
  uint64_t v89 = v19;
  uint64_t v100 = v12;
  if (v37)
  {
    uint64_t v38 = v113;
    uint64_t v88 = (void (*)(char *, void, uint64_t))v113[13];
    v88(v26, enum case for BlendMode.normal(_:), v114);
    uint64_t v39 = v33;
    uint64_t v40 = v111;
    uint64_t v41 = (uint64_t)v22;
  }
  else
  {
    unsigned int v95 = v26;
    uint64_t v42 = v33;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v22);
    sub_1CEA98((uint64_t)v22, (uint64_t)v19, type metadata accessor for ColorConstants.Environment);
    uint64_t v40 = v111;
    (*(void (**)(char *, void, uint64_t))(v111 + 104))(v16, enum case for ColorScheme.dark(_:), v12);
    sub_61674();
    char v43 = sub_26D360();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
    v44(v16, v12);
    v44(v19, v12);
    uint64_t v38 = v113;
    sub_1CEB08((uint64_t)v22, type metadata accessor for ColorConstants);
    uint64_t v45 = (void (*)(char *, void, uint64_t))v38[13];
    uint64_t v39 = v42;
    uint64_t v41 = (uint64_t)v22;
    uint64_t v88 = v45;
    if (v43) {
      uint64_t v46 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      uint64_t v46 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    uint64_t v26 = v95;
    v45(v95, *v46, v114);
  }
  uint64_t v47 = (char *)v38[2];
  uint64_t v48 = (uint64_t)v96;
  uint64_t v49 = v26;
  uint64_t v50 = v26;
  uint64_t v51 = v114;
  uint64_t v94 = v38 + 2;
  unsigned int v95 = v47;
  ((void (*)(char *, char *, uint64_t))v47)(v96, v49, v114);
  uint64_t v52 = v112;
  sub_1CEA98(v48, v112 + *(int *)(v93 + 36), (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v52 = v92;
  *(_WORD *)(v52 + 8) = 256;
  swift_retain();
  sub_1CEB08(v48, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v53 = v50;
  Swift::String v54 = (void (*)(char *, uint64_t))v38[1];
  uint64_t v113 = v38 + 1;
  v54(v53, v51);
  swift_release();
  uint64_t v55 = *(void *)v34;
  char v56 = v34[8];
  sub_46AF8(*(void *)v34, v56);
  char v57 = sub_40900(v55, v56);
  sub_46AFC(v55, v56);
  if (v57)
  {
    uint64_t v96 = v39;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v41);
    uint64_t v58 = (uint64_t)v89;
    sub_1CEA98(v41, (uint64_t)v89, type metadata accessor for ColorConstants.Environment);
    uint64_t v59 = enum case for ColorScheme.dark(_:);
    uint64_t v93 = v41;
    uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 104);
    unint64_t v61 = v90;
    uint64_t v62 = v100;
    v60(v90, enum case for ColorScheme.dark(_:), v100);
    sub_61674();
    char v63 = sub_26D360();
    char v64 = *(void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v65 = v61;
    uint64_t v66 = v62;
    v64(v65, v62);
    v64((char *)v58, v62);
    sub_1CEB08(v93, type metadata accessor for ColorConstants);
    if (v63)
    {
      uint64_t v67 = (uint64_t)v103;
      v60(v103, enum case for ColorScheme.light(_:), v62);
      uint64_t v68 = v67;
    }
    else
    {
      uint64_t v70 = (uint64_t)v103;
      v60(v103, v59, v66);
      uint64_t v68 = v70;
    }
    uint64_t v39 = v96;
    uint64_t v40 = v111;
    uint64_t v69 = v98;
  }
  else
  {
    uint64_t v69 = v98;
    uint64_t v68 = (uint64_t)v103;
    sub_40FB4((uint64_t)v103);
    uint64_t v66 = v100;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = (uint64_t)v99;
  char v73 = (uint64_t *)&v99[*(int *)(v97 + 36)];
  uint64_t v74 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))((char *)v73 + *(int *)(v74 + 28), v68, v66);
  *char v73 = KeyPath;
  uint64_t v75 = v112;
  sub_B678(v112, v72, &qword_2F4DA0);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v68, v66);
  sub_B6DC(v75, &qword_2F4DA0);
  uint64_t v76 = v72;
  uint64_t v77 = v101;
  sub_19CC4(v76, v101, &qword_2F4DA8);
  uint64_t v78 = v107;
  sub_1CC234(v107);
  if (v39[*(int *)(v69 + 40)] == 6)
  {
    uint64_t v79 = (uint64_t)v102;
    sub_41340((uint64_t)v102);
  }
  else
  {
    uint64_t v79 = (uint64_t)v102;
    v88(v102, enum case for BlendMode.normal(_:), v114);
  }
  uint64_t v80 = (uint64_t)v106;
  uint64_t v81 = v114;
  ((void (*)(char *, uint64_t, uint64_t))v95)(&v106[*(int *)(v105 + 36)], v79, v114);
  sub_B678(v78, v80, &qword_2EC968);
  v54((char *)v79, v81);
  sub_B6DC(v78, &qword_2EC968);
  uint64_t v82 = v108;
  sub_19CC4(v80, v108, &qword_2EC970);
  uint64_t v83 = v104;
  sub_B678(v77, v104, &qword_2F4DA8);
  uint64_t v84 = v109;
  sub_B678(v82, v109, &qword_2EC970);
  uint64_t v85 = v110;
  sub_B678(v83, v110, &qword_2F4DA8);
  uint64_t v86 = sub_4A98(&qword_2F4DB0);
  sub_B678(v84, v85 + *(int *)(v86 + 48), &qword_2EC970);
  sub_B6DC(v82, &qword_2EC970);
  sub_B6DC(v77, &qword_2F4DA8);
  sub_B6DC(v84, &qword_2EC970);
  return sub_B6DC(v83, &qword_2F4DA8);
}

uint64_t sub_1CBFD0()
{
  uint64_t v1 = sub_26C5F0();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for CircularIconView();
  switch(*(unsigned char *)(v0 + *(int *)(v2 + 40)))
  {
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    default:
      char v3 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_7:
        sub_26C170();
      }
      else
      {
        uint64_t v4 = v0 + *(int *)(v2 + 44);
        uint64_t v5 = *(void *)v4;
        char v6 = *(unsigned char *)(v4 + 8);
        sub_46AF8(*(void *)v4, v6);
        char v7 = sub_40900(v5, v6);
        sub_46AFC(v5, v6);
        if (v7)
        {
          sub_26C5E0();
        }
        else
        {
          id v8 = [self tertiarySystemFillColor];
          sub_26C230();
        }
      }
      return sub_26A8E0();
  }
}

uint64_t sub_1CC234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolImage();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  char v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_4A98(&qword_2EC990);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EC998);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for CircularIconView() + 40));
  char v19 = (uint64_t *)&v7[*(int *)(v4 + 28)];
  *char v19 = swift_getKeyPath();
  sub_4A98(&qword_2EBC90);
  swift_storeEnumTagMultiPayload();
  unsigned char *v7 = v18;
  sub_616D4((uint64_t)v7, (uint64_t)v9);
  uint64_t v20 = sub_1CC4D4();
  sub_1CEA98((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SymbolImage);
  *(void *)&v13[*(int *)(v11 + 44)] = v20;
  sub_1CEB08((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SymbolImage);
  uint64_t v21 = sub_1CC7AC();
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v13, (uint64_t)v17, &qword_2EC990);
  uint64_t v23 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *uint64_t v23 = KeyPath;
  v23[1] = v21;
  sub_B6DC((uint64_t)v13, &qword_2EC990);
  sub_1CCA04();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v32 = sub_26B760();
  sub_B678((uint64_t)v17, a1, &qword_2EC998);
  uint64_t v33 = a1 + *(int *)(sub_4A98(&qword_2EC968) + 36);
  *(unsigned char *)uint64_t v33 = v32;
  *(void *)(v33 + 8) = v25;
  *(void *)(v33 + 16) = v27;
  *(void *)(v33 + 24) = v29;
  *(void *)(v33 + 32) = v31;
  *(unsigned char *)(v33 + 40) = 0;
  return sub_B6DC((uint64_t)v17, &qword_2EC998);
}

uint64_t sub_1CC4D4()
{
  uint64_t v1 = sub_26A6E0();
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for CircularIconView();
  uint64_t v14 = *(int *)(v13 + 44);
  int v15 = *(unsigned __int8 *)(v0 + *(int *)(v13 + 40));
  uint64_t v16 = *(void *)(v0 + v14);
  char v17 = *(unsigned char *)(v0 + v14 + 8);
  sub_46AF8(v16, v17);
  char v18 = sub_40900(v16, v17);
  sub_46AFC(v16, v17);
  if (v15 == 6)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v12);
    uint64_t v19 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    if (v18)
    {
      uint64_t v20 = sub_26C1C0();
      swift_release();
      uint64_t v19 = v20;
    }
  }
  else if (v18)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v12);
    uint64_t v19 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v10);
    sub_1CEA98((uint64_t)v10, (uint64_t)v6, type metadata accessor for ColorConstants.Environment);
    uint64_t v21 = v27;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v3, enum case for ColorScheme.dark(_:), v1);
    sub_61674();
    char v22 = sub_26D360();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 8);
    v23(v3, v1);
    v23(v6, v1);
    if (v22) {
      uint64_t v24 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v24 = sub_26C150();
    }
    uint64_t v19 = v24;
    uint64_t v12 = v10;
  }
  sub_1CEB08((uint64_t)v12, type metadata accessor for ColorConstants);
  return v19;
}

uint64_t sub_1CC7AC()
{
  uint64_t v1 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26B980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FontConstants.Navigation(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for CircularIconView() + 40)) == 6)
  {
    return static Font.headline.getter();
  }
  else
  {
    sub_42178((uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.callout(_:), v4);
    uint64_t v11 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
    sub_26B8B0();
    uint64_t v12 = sub_26B8E0();
    sub_B6DC((uint64_t)v3, &qword_2EBFC0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1CEB08((uint64_t)v10, type metadata accessor for FontConstants.Navigation);
    return v12;
  }
}

void sub_1CCA04()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CircularIconView() + 40));
  switch(v1)
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v2 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v2)
      {
        switch((int)v1)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
            break;
          default:
            JUMPOUT(0);
        }
LABEL_5:
        NSString v3 = sub_26D3F0();
        swift_bridgeObjectRelease();
        id v4 = [self systemImageNamed:v3];

        if (v4)
        {
          [v4 alignmentRectInsets];
        }
      }
      return;
  }
}

uint64_t sub_1CCCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1CCE48();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1CCD5C()
{
  sub_10B984();

  return sub_26B0B0();
}

uint64_t View.circularIcon(size:)()
{
  return swift_release();
}

unint64_t sub_1CCE48()
{
  unint64_t result = qword_2F4CD8;
  if (!qword_2F4CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4CD8);
  }
  return result;
}

uint64_t sub_1CCE9C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for CircularIconView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    uint64_t v11 = (_WORD *)((char *)a2 + v9);
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v10 = *v11;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = (char *)v10 + v13;
      int v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + *(int *)(v12 + 28)) = *(void *)((char *)v11 + *(int *)(v12 + 28));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    char v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = v19[8];
    sub_46AF8(*(void *)v19, v21);
    *(void *)char v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[8];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)a1 + v30;
    char v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = v32[8];
    sub_46AF8(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    v31[8] = v34;
    uint64_t v35 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    char v36 = (char *)a1 + v35;
    char v37 = (char *)a2 + v35;
    uint64_t v38 = *(void *)((char *)a2 + v35);
    char v39 = v37[8];
    sub_46AF8(v38, v39);
    *(void *)char v36 = v38;
    v36[8] = v39;
  }
  return a1;
}

uint64_t destroy for CircularIconView(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_46AFC(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v8 = a1 + a2[7];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_46AFC(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v12 = a1 + a2[11];
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);

  return sub_46AFC(v13, v14);
}

void *initializeWithCopy for CircularIconView(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (_WORD *)((char *)a1 + v7);
  uint64_t v9 = (_WORD *)((char *)a2 + v7);
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(void *)((char *)v8 + *(int *)(v10 + 28)) = *(void *)((char *)v9 + *(int *)(v10 + 28));
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_46AF8(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  uint64_t v20 = a3[7];
  char v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *char v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *uint64_t v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = v30[8];
  sub_46AF8(*(void *)v30, v32);
  *(void *)uint64_t v29 = v31;
  v29[8] = v32;
  uint64_t v33 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  char v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)((char *)a2 + v33);
  char v37 = v35[8];
  sub_46AF8(v36, v37);
  *(void *)char v34 = v36;
  v34[8] = v37;
  return a1;
}

void *assignWithCopy for CircularIconView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC80);
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)&v8[*(int *)(v10 + 28)] = *(void *)&v9[*(int *)(v10 + 28)];
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_46AF8(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = v16[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  sub_46AFC(v20, v21);
  if (a1 != a2)
  {
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_B6DC((uint64_t)a1 + v22, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[8];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    sub_B6DC((uint64_t)a1 + v26, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  char v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  char v34 = v32[8];
  sub_46AF8(*(void *)v32, v34);
  uint64_t v35 = *(void *)v31;
  char v36 = v31[8];
  *(void *)uint64_t v31 = v33;
  v31[8] = v34;
  sub_46AFC(v35, v36);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v37 = a3[11];
  uint64_t v38 = (char *)a1 + v37;
  char v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)v39;
  char v41 = v39[8];
  sub_46AF8(*(void *)v39, v41);
  uint64_t v42 = *(void *)v38;
  char v43 = v38[8];
  *(void *)uint64_t v38 = v40;
  v38[8] = v41;
  sub_46AFC(v42, v43);
  return a1;
}

char *initializeWithTake for CircularIconView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v9 = *(_WORD *)v10;
    uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  char v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)char v19 = *(void *)v20;
  v19[8] = v20[8];
  char v21 = &a1[v18];
  uint64_t v22 = &a2[v18];
  uint64_t v23 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = a3[10];
  char v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  *(void *)char v32 = *(void *)v33;
  v32[8] = v33[8];
  a1[v31] = a2[v31];
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  char v36 = &a2[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  return a1;
}

char *assignWithTake for CircularIconView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EBC80);
    uint64_t v11 = sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v9 = *(_WORD *)v10;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  char v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_46AFC(v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[7];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_B6DC((uint64_t)&a1[v23], &qword_2EA970);
    uint64_t v26 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    sub_B6DC((uint64_t)&a1[v28], &qword_2EB3E8);
    uint64_t v31 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  uint64_t v33 = a3[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  LOBYTE(v35) = v35[8];
  uint64_t v37 = *(void *)v34;
  char v38 = v34[8];
  *(void *)uint64_t v34 = v36;
  v34[8] = (char)v35;
  sub_46AFC(v37, v38);
  uint64_t v39 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v40 = &a1[v39];
  char v41 = &a2[v39];
  uint64_t v42 = *(void *)v41;
  LOBYTE(v41) = v41[8];
  uint64_t v43 = *(void *)v40;
  char v44 = v40[8];
  *(void *)uint64_t v40 = v42;
  v40[8] = (char)v41;
  sub_46AFC(v43, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircularIconView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CE27C);
}

uint64_t sub_1CE27C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EC890);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v16 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4A98(&qword_2EB3F8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for CircularIconView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CE468);
}

uint64_t sub_1CE468(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EC890);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
    return result;
  }
  uint64_t v16 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4A98(&qword_2EB3F8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[8];

  return v18(v20, a2, a2, v19);
}

void sub_1CE644()
{
  sub_61398(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_61398(319, (unint64_t *)&unk_2EC900, (void (*)(uint64_t))type metadata accessor for FontConstants.Navigation);
    if (v1 <= 0x3F)
    {
      sub_61398(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v2 <= 0x3F)
      {
        sub_61398(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CircularIconView.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CE8D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularIconView.Size()
{
  return &type metadata for CircularIconView.Size;
}

unint64_t sub_1CE910()
{
  unint64_t result = qword_2F4D88;
  if (!qword_2F4D88)
  {
    sub_7B0C(&qword_2F4CC0);
    sub_7B0C(&qword_2F4CB0);
    sub_7C18(&qword_2F4CD0, &qword_2F4CB0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4D88);
  }
  return result;
}

uint64_t sub_1CE9EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1CEA98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CEB08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for CircularIconSizeKey()
{
  return &type metadata for CircularIconSizeKey;
}

uint64_t SeriesHeaderCoverStackCoverLayout.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6C0F8(v1 + 64, a1);
}

double SeriesHeaderCoverStackCoverLayout.zIndex.getter()
{
  return (double)-(uint64_t)*v0;
}

double sub_1CEB98()
{
  double result = 0.0;
  switch(*(unsigned char *)v0)
  {
    case 1:
      double v2 = *(double *)(v0 + 24);
      double v3 = v2 * 0.86;
      goto LABEL_7;
    case 2:
      unint64_t v5 = *(void *)(v0 + 32) - 3;
      if (v5 <= 2) {
        double result = dbl_280550[v5];
      }
      double v2 = *(double *)(v0 + 24);
      double v3 = result * v2;
LABEL_7:
      double v4 = 0.25;
      goto LABEL_8;
    case 3:
    case 4:
      double v2 = *(double *)(v0 + 24);
      double v3 = v2 * 0.7;
      double v4 = 0.45;
LABEL_8:
      double v6 = (v2 * *(double *)(v0 + 16) - v3 * *(double *)(v0 + 8)) * 0.5 + v2 * *(double *)(v0 + 56) * v4;
      double v7 = -1.0;
      switch(*(unsigned char *)v0)
      {
        case 2:
          double v7 = 1.0;
          goto LABEL_10;
        case 3:
          goto LABEL_12;
        case 4:
          double v7 = 1.0;
LABEL_12:
          double result = v6 * v7;
          break;
        default:
LABEL_10:
          double result = v6 * v7;
          break;
      }
      break;
    default:
      return result;
  }
  return result;
}

double sub_1CECC8()
{
  switch(*(unsigned char *)v0)
  {
    case 1:
      double result = *(double *)(v0 + 24) * 0.86;
      break;
    case 2:
      unint64_t v2 = *(void *)(v0 + 32) - 3;
      double v3 = 0.0;
      if (v2 <= 2) {
        double v3 = dbl_280550[v2];
      }
      double result = v3 * *(double *)(v0 + 24);
      break;
    case 3:
    case 4:
      double result = *(double *)(v0 + 24) * 0.7;
      break;
    default:
      double result = *(double *)(v0 + 24);
      break;
  }
  return result;
}

uint64_t SeriesHeaderCoverStackCoverLayout.scale(forOverscrollOffset:)()
{
  if (*(double *)(v0 + 40) < 0.0)
  {
    __break(1u);
  }
  else
  {
    sub_103FB4();
    return sub_26D320();
  }
  return result;
}

void SeriesHeaderCoverStackCoverLayout.offset(forOverscrollOffset:)()
{
  if (v0[5] < 0.0)
  {
    __break(1u);
  }
  else
  {
    sub_103FB4();
    sub_26D320();
    int v1 = *(unsigned __int8 *)v0;
    sub_1CEB98();
    if (v1) {
      sub_1CECC8();
    }
  }
}

unint64_t sub_1CEED8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1CEFA4(*a1);
  *a2 = result;
  return result;
}

void sub_1CEF04(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL _s7BooksUI022SeriesHeaderCoverStackE6LayoutV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && *((void *)a1 + 4) == *((void *)a2 + 4)
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && _s7BooksUI14CoverViewModelV2eeoiySbAC_ACtFZ_0((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
}

unint64_t sub_1CEFA4(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

double _s7BooksUI022SeriesHeaderCoverStackE6LayoutV6height3for12CoreGraphics7CGFloatVSo6CGSizeV_tF_0()
{
  switch(*(unsigned char *)v0)
  {
    case 1:
      double result = *(double *)(v0 + 24) * 0.86;
      break;
    case 2:
      unint64_t v2 = *(void *)(v0 + 32) - 3;
      double v3 = 0.0;
      if (v2 < 3) {
        double v3 = dbl_280550[v2];
      }
      double result = v3 * *(double *)(v0 + 24);
      break;
    case 3:
    case 4:
      double result = *(double *)(v0 + 24) * 0.7;
      break;
    default:
      double result = *(double *)(v0 + 24);
      break;
  }
  return result;
}

unint64_t sub_1CF04C(uint64_t a1)
{
  unint64_t result = sub_1CF074();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1CF074()
{
  unint64_t result = qword_2F4DB8;
  if (!qword_2F4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4DB8);
  }
  return result;
}

uint64_t destroy for SeriesHeaderCoverStackCoverLayout(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 64);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 184);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SeriesHeaderCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  double v4 = (_OWORD *)(a1 + 64);
  unint64_t v5 = (_OWORD *)(a2 + 64);
  if (*(unsigned char *)(a2 + 120))
  {
    long long v6 = v5[1];
    *double v4 = *v5;
    v4[1] = v6;
    v4[2] = v5[2];
    *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)((char *)v5 + 41);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 88) = v7;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v4, v5);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = 0;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v8;
    uint64_t v9 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v9;
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    uint64_t v10 = *(void *)(a2 + 216);
    uint64_t v11 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = v10;
    *(void *)(a1 + 224) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v12;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
  }
  return a1;
}

uint64_t assignWithCopy for SeriesHeaderCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  if (a1 != a2)
  {
    double v4 = (_OWORD *)(a1 + 64);
    unint64_t v5 = (long long *)(a2 + 64);
    sub_106954(a1 + 64);
    if (*(unsigned char *)(a2 + 120))
    {
      long long v6 = *v5;
      long long v7 = *(_OWORD *)(a2 + 80);
      long long v8 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
      *(_OWORD *)(a1 + 80) = v7;
      *(_OWORD *)(a1 + 96) = v8;
      *double v4 = v6;
    }
    else
    {
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 88) = v9;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = 0;
    }
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(a1 + 176);
  uint64_t v11 = (long long *)(a2 + 176);
  uint64_t v12 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v12)
    {
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_107A64(a1 + 176);
      long long v14 = *(_OWORD *)(a2 + 192);
      long long v13 = *(_OWORD *)(a2 + 208);
      long long v15 = *v11;
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(_OWORD *)(a1 + 192) = v14;
      *(_OWORD *)(a1 + 208) = v13;
      _OWORD *v10 = v15;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v11;
    long long v17 = *(_OWORD *)(a2 + 192);
    long long v18 = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(_OWORD *)(a1 + 192) = v17;
    *(_OWORD *)(a1 + 208) = v18;
    _OWORD *v10 = v16;
  }
  return a1;
}

__n128 initializeWithTake for SeriesHeaderCoverStackCoverLayout(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for SeriesHeaderCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  if (a1 != a2)
  {
    sub_106954(a1 + 64);
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 184)) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 184);
  if (!v6)
  {
    sub_107A64(a1 + 176);
LABEL_7:
    long long v9 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v9;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    return a1;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v8 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesHeaderCoverStackCoverLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 232)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesHeaderCoverStackCoverLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesHeaderCoverStackCoverLayout()
{
  return &type metadata for SeriesHeaderCoverStackCoverLayout;
}

unsigned char *storeEnumTagSinglePayload for SeriesHeaderCoverStackCoverLayout.Position(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CF7D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesHeaderCoverStackCoverLayout.Position()
{
  return &type metadata for SeriesHeaderCoverStackCoverLayout.Position;
}

unint64_t sub_1CF814()
{
  unint64_t result = qword_2F4DC0;
  if (!qword_2F4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4DC0);
  }
  return result;
}

uint64_t ReadingSummaryFrameViewModel.init(longestStreak:totalCompletedGoalDays:exposureData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v7 = sub_269970();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
  uint64_t v12 = v11[7];
  id v13 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  sub_269930();
  Class isa = sub_269940().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  [v13 setCalendar:isa];

  [v13 setAllowedUnits:16];
  [v13 setMaximumUnitCount:1];
  [v13 setUnitsStyle:3];
  *(void *)(a4 + v12) = v13;
  sub_19CC4(a1, a4, &qword_2F4DF8);
  *(void *)(a4 + v11[5]) = a2;
  uint64_t v15 = a4 + v11[6];
  uint64_t v16 = sub_269BE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v19, v16);
}

uint64_t type metadata accessor for ReadingSummaryFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2F4E80);
}

uint64_t sub_1CFA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a3;
  v22[2] = a4;
  uint64_t v4 = sub_269920();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = sub_26D3E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)v22 - v16;
  sub_26D370();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v20 = sub_26D460();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v20;
}

id sub_1CFCD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_4A98(&qword_2F5140);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EB628);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_269520();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_269970();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_269960();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F4DF8);
  __chkstk_darwin(v15 - 8);
  long long v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2694F0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v1, (uint64_t)v17, &qword_2F4DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_B6DC((uint64_t)v17, &qword_2F4DF8);
    return 0;
  }
  else
  {
    uint64_t v35 = v1;
    uint64_t v23 = v40;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Calendar.Component.day(_:), v11);
    sub_269930();
    sub_2694C0();
    char v25 = v24;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      return 0;
    }
    else
    {
      uint64_t v26 = *(void **)(v35 + *(int *)(type metadata accessor for ReadingSummaryFrameViewModel(0) + 28));
      uint64_t v27 = v37;
      sub_269930();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v27, 0, 1, v42);
      uint64_t v28 = sub_269990();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 1, 1, v28);
      uint64_t v29 = v36;
      sub_269510();
      Class isa = sub_269500().super.isa;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
      id v22 = [v26 stringFromDateComponents:isa];

      if (v22)
      {
        uint64_t v31 = sub_26D430();
        uint64_t v33 = v32;

        uint64_t v47 = v31;
        uint64_t v48 = v33;
        uint64_t v45 = 32;
        unint64_t v46 = 0xE100000000000000;
        uint64_t v43 = 10;
        unint64_t v44 = 0xE100000000000000;
        sub_CC78();
        id v22 = (id)sub_26D9D0();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      }
    }
  }
  return v22;
}

uint64_t sub_1D030C()
{
  uint64_t v53 = sub_26D3E0();
  uint64_t v56 = *(void *)(v53 - 8);
  uint64_t v1 = __chkstk_darwin(v53);
  Swift::String v54 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v55 = (char *)&v43 - v3;
  uint64_t v51 = sub_269810();
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_269920();
  uint64_t v7 = *(void *)(v57 - 8);
  uint64_t v8 = __chkstk_darwin(v57);
  uint64_t v52 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = sub_4A98(&qword_2F4DF8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2694F0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v0, (uint64_t)v14, &qword_2F4DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_B6DC((uint64_t)v14, &qword_2F4DF8);
    return 0;
  }
  else
  {
    uint64_t v49 = v15;
    uint64_t v50 = v16;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    id v20 = [objc_allocWithZone((Class)NSDateFormatter) init];
    sub_2698C0();
    Class isa = sub_2698A0().super.isa;
    id v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v47 = v7 + 8;
    uint64_t v48 = v22;
    v22(v11, v57);
    [v20 setLocale:isa];

    NSString v23 = sub_26D3F0();
    [v20 setLocalizedDateFormatFromTemplate:v23];

    sub_2694E0();
    Class v24 = sub_2697C0().super.isa;
    char v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v26 = v51;
    v25(v6, v51);
    id v46 = v20;
    id v27 = [v20 stringFromDate:v24];

    uint64_t v28 = sub_26D430();
    uint64_t v44 = v29;
    uint64_t v45 = v28;

    sub_2694D0();
    Class v30 = sub_2697C0().super.isa;
    v25(v6, v26);
    id v31 = [v20 stringFromDate:v30];

    uint64_t v51 = sub_26D430();
    uint64_t v43 = v32;

    uint64_t v33 = v55;
    sub_26D370();
    sub_2698C0();
    uint64_t v34 = v56;
    uint64_t v35 = v53;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v33, v53);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v37 = [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v38 = v57;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v52, v11, v57);
    uint64_t v39 = sub_26D460();
    uint64_t v41 = v40;
    v48(v11, v38);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
    uint64_t v58 = v45;
    uint64_t v59 = v44;
    v60._countAndFlagsBits = 32;
    v60._object = (void *)0xE100000000000000;
    sub_26D4E0(v60);
    v61._countAndFlagsBits = v39;
    v61._object = v41;
    sub_26D4E0(v61);
    swift_bridgeObjectRelease();
    v62._countAndFlagsBits = 32;
    v62._object = (void *)0xE100000000000000;
    sub_26D4E0(v62);
    v63._countAndFlagsBits = v51;
    v63._object = v43;
    sub_26D4E0(v63);

    swift_bridgeObjectRelease();
    uint64_t v19 = v58;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v49);
  }
  return v19;
}

uint64_t sub_1D092C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_4A98(&qword_2F5140);
  __chkstk_darwin(v1 - 8);
  uint64_t v42 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2EB628);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269520();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_269920();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_26D3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - v20;
  sub_26D370();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v40 = sub_26D460();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  uint64_t v26 = *(void **)(v41 + *(int *)(type metadata accessor for ReadingSummaryFrameViewModel(0) + 28));
  id v27 = v39;
  sub_269930();
  uint64_t v28 = sub_269970();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  uint64_t v29 = sub_269990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v42, 1, 1, v29);
  sub_269510();
  Class isa = sub_269500().super.isa;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
  id v31 = [v26 stringFromDateComponents:isa];

  if (v31)
  {
    uint64_t v32 = sub_26D430();
    uint64_t v34 = v33;

    uint64_t v50 = v32;
    uint64_t v51 = v34;
    uint64_t v48 = 32;
    unint64_t v49 = 0xE100000000000000;
    uint64_t v46 = 10;
    unint64_t v47 = 0xE100000000000000;
    sub_CC78();
    id v31 = (id)sub_26D9D0();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = 0;
  }
  id v37 = v45;
  *uint64_t v45 = v40;
  v37[1] = v25;
  void v37[2] = (uint64_t)v31;
  v37[3] = v36;
  type metadata accessor for PlatterItem.Configuration(0);
  v37[4] = 0;
  void v37[5] = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D0EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_269920();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v27 - v7;
  uint64_t v9 = sub_26D3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - v14;
  sub_26D370();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v18 = sub_26D460();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  id v21 = sub_1CFCD0();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1D030C();
  *a1 = v18;
  a1[1] = v20;
  a1[2] = (uint64_t)v21;
  a1[3] = v23;
  a1[4] = v24;
  a1[5] = v25;
  type metadata accessor for PlatterItem.Configuration(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D11A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v50 = sub_4A98(&qword_2F50B0);
  __chkstk_darwin(v50);
  uint64_t v48 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v2 = sub_4A98(&qword_2EB3F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v44 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = type metadata accessor for PlatterModifier(0);
  __chkstk_darwin(v43);
  uint64_t v5 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_26C260();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_4A98(&qword_2F50B8);
  uint64_t v10 = __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v45 = (uint64_t)&v42 - v13;
  *(void *)&long long v47 = sub_26A2F0();
  uint64_t v14 = *(void *)(v47 - 8);
  uint64_t v15 = __chkstk_darwin(v47);
  id v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = type metadata accessor for PlatterItem.Configuration(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3660(v46, (uint64_t)v22, type metadata accessor for PlatterItem.Configuration);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v23 = *(_OWORD *)v22;
    long long v46 = *((_OWORD *)v22 + 1);
    long long v47 = v23;
    uint64_t v24 = *((void *)v22 + 4);
    uint64_t v25 = *((void *)v22 + 5);
    uint64_t v26 = swift_allocObject();
    long long v27 = v46;
    *(_OWORD *)(v26 + 16) = v47;
    *(_OWORD *)(v26 + 32) = v27;
    *(void *)(v26 + 48) = v24;
    *(void *)(v26 + 56) = v25;
    uint64_t v28 = v48;
    char *v48 = sub_1D6FE8;
    v28[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v26;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F50C0);
    sub_1D6FF8();
    sub_7C18(&qword_2F50F8, &qword_2F50C0);
    return sub_26B2F0();
  }
  else
  {
    Class v30 = v22;
    uint64_t v31 = v47;
    (*(void (**)(char *, char *, void))(v14 + 32))(v19, v30, v47);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v31);
    sub_26C2A0();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
    uint64_t v32 = sub_26C280();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    int v33 = sub_26B450();
    uint64_t v34 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v36 = v35;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v38 = (uint64_t)v44;
    *uint64_t v44 = KeyPath;
    sub_4A98(&qword_2EB3E8);
    swift_storeEnumTagMultiPayload();
    *uint64_t v5 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v43;
    sub_19CC4(v38, (uint64_t)v5 + *(int *)(v43 + 20), &qword_2EB3F8);
    uint64_t v40 = (uint64_t *)((char *)v5 + *(int *)(v39 + 24));
    *uint64_t v40 = v34;
    v40[1] = v36;
    sub_1D3660((uint64_t)v5, (uint64_t)&v12[*(int *)(v49 + 36)], type metadata accessor for PlatterModifier);
    *(void *)uint64_t v12 = v32;
    *((void *)v12 + 1) = 0;
    *((_WORD *)v12 + 8) = 1;
    *((_DWORD *)v12 + 5) = v33;
    sub_1D6600((uint64_t)v5, type metadata accessor for PlatterModifier);
    uint64_t v41 = v45;
    sub_19CC4((uint64_t)v12, v45, &qword_2F50B8);
    sub_B678(v41, (uint64_t)v48, &qword_2F50B8);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F50C0);
    sub_1D6FF8();
    sub_7C18(&qword_2F50F8, &qword_2F50C0);
    sub_26B2F0();
    sub_B6DC(v41, &qword_2F50B8);
    return (*(uint64_t (**)(char *, void))(v14 + 8))(v19, v47);
  }
}

uint64_t sub_1D1808@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a5;
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v54 = a7;
  uint64_t v9 = sub_4A98(&qword_2EB3F8);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for PlatterModifier(0) - 8;
  __chkstk_darwin(v53);
  uint64_t v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_26AB40();
  uint64_t v13 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TextLockup();
  __chkstk_darwin(v19 - 8);
  uint64_t v45 = (uint64_t *)((char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_4A98(&qword_2F5100);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v47 = (uint64_t)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26A940();
  double v25 = v24;
  uint64_t v26 = enum case for Font.Design.default(_:);
  uint64_t v27 = sub_26B820();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v18, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_26B1D0();
  uint64_t v30 = sub_26C650();
  uint64_t v32 = v31;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.accessibility2(_:), v46);
  uint64_t v44 = (uint64_t)v15;
  if (v25 <= 200.0) {
    char v33 = 2;
  }
  else {
    char v33 = 3;
  }
  uint64_t v34 = v45;
  sub_1DC1D0(v33, v48, v49, v51, a4, v52, a6, (uint64_t)v18, v45, v29, v30, v32, 0, v44);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_26C600();
  uint64_t v37 = v36;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = (uint64_t)v50;
  *uint64_t v50 = KeyPath;
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t *v12 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v53;
  sub_19CC4(v39, (uint64_t)v12 + *(int *)(v53 + 28), &qword_2EB3F8);
  uint64_t v41 = (uint64_t *)((char *)v12 + *(int *)(v40 + 32));
  *uint64_t v41 = v35;
  v41[1] = v37;
  uint64_t v42 = v47;
  sub_1D3660((uint64_t)v34, v47, (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_1D714C((uint64_t)v12, v42 + *(int *)(v22 + 44), type metadata accessor for PlatterModifier);
  sub_1D6600((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for TextLockup);
  return sub_19CC4(v42, v54, &qword_2F5100);
}

void sub_1D1C94()
{
  qword_2F4DC8 = 0x4028000000000000;
}

void sub_1D1CA4()
{
  qword_2F4DD0 = 0x4030000000000000;
}

uint64_t sub_1D1CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v52 = sub_26AC50();
  __chkstk_darwin(v52);
  uint64_t v4 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = sub_26C700();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EEB30);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EEB38);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_4A98(&qword_2F51F0);
  __chkstk_darwin(v48);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_4A98(&qword_2F51F8);
  __chkstk_darwin(v47);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9CE0 != -1) {
    swift_once();
  }
  char v20 = sub_26B760();
  sub_26A640();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = sub_4A98(&qword_2F5200);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v12, a1, v29);
  uint64_t v30 = &v12[*(int *)(v10 + 36)];
  *uint64_t v30 = v20;
  *((void *)v30 + 1) = v22;
  *((void *)v30 + 2) = v24;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v28;
  v30[40] = 0;
  uint64_t v31 = type metadata accessor for PlatterModifier(0);
  sub_B08B8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, *(void *)(v50 + *(int *)(v31 + 24)), *(void *)(v50 + *(int *)(v31 + 24) + 8));
  sub_B6DC((uint64_t)v12, &qword_2EEB30);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v9);
  id v32 = [self quaternaryLabelColor];
  sub_26C230();
  sub_26C1C0();
  swift_release();
  sub_1D6600((uint64_t)v9, type metadata accessor for ColorConstants);
  uint64_t v33 = sub_26C1C0();
  swift_release();
  char v34 = sub_26B760();
  sub_B678((uint64_t)v15, (uint64_t)v17, &qword_2EEB38);
  uint64_t v35 = &v17[*(int *)(v48 + 36)];
  *(void *)uint64_t v35 = v33;
  v35[8] = v34;
  sub_B6DC((uint64_t)v15, &qword_2EEB38);
  sub_41340((uint64_t)v6);
  uint64_t v36 = v49;
  uint64_t v37 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(&v19[*(int *)(v47 + 36)], v6, v51);
  sub_B678((uint64_t)v17, (uint64_t)v19, &qword_2F51F0);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v37);
  sub_B6DC((uint64_t)v17, &qword_2F51F0);
  if (qword_2E9CD8 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_2F4DC8;
  uint64_t v39 = (char *)v4 + *(int *)(v52 + 20);
  uint64_t v40 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v41 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  *uint64_t v4 = v38;
  v4[1] = v38;
  uint64_t v42 = sub_4A98(&qword_2F5208);
  uint64_t v43 = v53;
  uint64_t v44 = v53 + *(int *)(v42 + 36);
  sub_1D3660((uint64_t)v4, v44, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v44 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v19, v43, &qword_2F51F8);
  sub_1D6600((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_B6DC((uint64_t)v19, &qword_2F51F8);
}

uint64_t ReadingSummaryFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReadingSummaryFrame(0);
  return sub_1D3660(v1 + *(int *)(v3 + 28), a1, type metadata accessor for PageBackground);
}

uint64_t ReadingSummaryFrame.sharableView.getter()
{
  uint64_t v1 = type metadata accessor for ReadingSummaryFrame(0);
  __chkstk_darwin(v1);
  sub_1D3660(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingSummaryFrame);
  sub_1D36C8(&qword_2F4E00, (void (*)(uint64_t))type metadata accessor for ReadingSummaryFrame);
  return sub_26C470();
}

uint64_t ReadingSummaryFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingSummaryFrame(0) + 32);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for ReadingSummaryFrameViewModel(0) + 24);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_1D36C8(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_1D36C8(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t ReadingSummaryFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = swift_getKeyPath();
  *(unsigned char *)(a2 + 40) = 0;
  uint64_t v4 = type metadata accessor for ReadingSummaryFrame(0);
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(v4 + 28));
  uint64_t v6 = (char *)v5 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  *uint64_t v5 = sub_26C110();
  uint64_t v7 = enum case for ColorScheme.light(_:);
  uint64_t v8 = sub_26A6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  return sub_1D714C(a1, a2 + *(int *)(v4 + 32), type metadata accessor for ReadingSummaryFrameViewModel);
}

void sub_1D2668()
{
  qword_2F4DD8 = 0x3FF0000000000000;
}

void sub_1D2678()
{
  qword_2F4DE0 = 0x4030000000000000;
}

void sub_1D2688()
{
  qword_2F4DE8 = 0x4030000000000000;
}

void sub_1D2698()
{
  qword_2F4DF0 = 0x4040000000000000;
}

uint64_t ReadingSummaryFrame.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F4E08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9D00 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_2F4DF0;
  *(void *)uint64_t v10 = sub_26B1C0();
  *((void *)v10 + 1) = v11;
  v10[16] = 0;
  uint64_t v12 = sub_4A98(&qword_2F4E10);
  sub_1D28C4(v2, &v10[*(int *)(v12 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2F4E18) + 36));
  uint64_t v15 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v14 + *(int *)(v15 + 28), v7, v4);
  uint64_t *v14 = KeyPath;
  sub_B678((uint64_t)v10, a1, &qword_2F4E08);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_B6DC((uint64_t)v10, &qword_2F4E08);
}

uint64_t sub_1D28C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_4A98(&qword_2F5108);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v45 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - v6;
  uint64_t v42 = sub_26AB40();
  uint64_t v8 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TextLockup();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v39 - v17);
  type metadata accessor for ReadingSummaryFrame(0);
  uint64_t v44 = a1;
  uint64_t v19 = sub_1CFA60(0x20676E6964616552, 0xED0000736C616F47, (uint64_t)"Year in Review: Reading Summary Frame reading goals title", 57);
  uint64_t v40 = v20;
  uint64_t v41 = v19;
  uint64_t v21 = sub_1CFA60(0x1000000000000016, 0x800000000028BBC0, (uint64_t)"Year in Review: Reading Summary Frame summary subtitle", 54);
  uint64_t v23 = v22;
  uint64_t v24 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
  uint64_t v25 = sub_26B1D0();
  uint64_t v26 = sub_26C650();
  uint64_t v28 = v27;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DynamicTypeSize.accessibility2(_:), v42);
  sub_1DC1D0(5, 0, 0, v41, v40, v21, v23, (uint64_t)v13, v18, v25, v26, v28, 0, (uint64_t)v10);
  if (qword_2E9CF0 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_2F4DE0;
  if (qword_2E9CF8 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_2F4DE8;
  *(void *)uint64_t v7 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  *((void *)v7 + 1) = v31;
  *((void *)v7 + 2) = v29;
  v7[24] = 0;
  *((void *)v7 + 4) = v30;
  unsigned char v7[40] = 0;
  uint64_t v32 = sub_4A98(&qword_2F5110);
  sub_1D2D54(v44, (uint64_t)&v7[*(int *)(v32 + 44)]);
  uint64_t v33 = v43;
  sub_1D3660((uint64_t)v18, v43, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v34 = v45;
  sub_B678((uint64_t)v7, v45, &qword_2F5108);
  uint64_t v35 = v46;
  *uint64_t v46 = 0;
  *((unsigned char *)v35 + 8) = 1;
  uint64_t v36 = (int *)sub_4A98(&qword_2F5118);
  sub_1D3660(v33, (uint64_t)v35 + v36[12], (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_B678(v34, (uint64_t)v35 + v36[16], &qword_2F5108);
  uint64_t v37 = (char *)v35 + v36[20];
  *(void *)uint64_t v37 = 0;
  v37[8] = 1;
  sub_B6DC((uint64_t)v7, &qword_2F5108);
  sub_1D6600((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_B6DC(v34, &qword_2F5108);
  return sub_1D6600(v33, (uint64_t (*)(void))type metadata accessor for TextLockup);
}

uint64_t sub_1D2D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2F5120);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F5128);
  uint64_t v18 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)a1;
  char v11 = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v11);
  char v12 = sub_40900(v10, v11);
  sub_C374(v10, v11);
  if (v12)
  {
    *(void *)uint64_t v6 = 0;
    v6[8] = 1;
    sub_1D2FB0((uint64_t)&v6[*(int *)(v4 + 36)]);
    if (qword_2E9CE8 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_2F4DD8;
    sub_B678((uint64_t)v6, (uint64_t)v9, &qword_2F5120);
    uint64_t v14 = &v9[*(int *)(v7 + 36)];
    *(void *)uint64_t v14 = v13;
    *((_WORD *)v14 + 4) = 0;
    sub_B6DC((uint64_t)v6, &qword_2F5120);
    sub_19CC4((uint64_t)v9, a2, &qword_2F5128);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v7);
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    return v16(a2, 1, 1, v7);
  }
}

uint64_t sub_1D2FB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = type metadata accessor for PlatterItem(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_4A98(&qword_2F5130);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v22 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  type metadata accessor for ReadingSummaryFrame(0);
  sub_1D092C(v3);
  uint64_t v16 = sub_1D3264();
  sub_1D3660((uint64_t)v3, (uint64_t)v13, type metadata accessor for PlatterItem);
  *(void *)&v13[*(int *)(v5 + 44)] = v16;
  sub_1D6600((uint64_t)v3, type metadata accessor for PlatterItem);
  sub_19CC4((uint64_t)v13, (uint64_t)v15, &qword_2F5130);
  sub_1D0EEC(v3);
  uint64_t v17 = sub_1D3264();
  sub_1D3660((uint64_t)v3, (uint64_t)v10, type metadata accessor for PlatterItem);
  *(void *)&v10[*(int *)(v5 + 44)] = v17;
  sub_1D6600((uint64_t)v3, type metadata accessor for PlatterItem);
  sub_19CC4((uint64_t)v10, (uint64_t)v13, &qword_2F5130);
  sub_B678((uint64_t)v15, (uint64_t)v10, &qword_2F5130);
  uint64_t v18 = v22;
  sub_B678((uint64_t)v13, v22, &qword_2F5130);
  uint64_t v19 = v23;
  sub_B678((uint64_t)v10, v23, &qword_2F5130);
  uint64_t v20 = sub_4A98(&qword_2F5138);
  sub_B678(v18, v19 + *(int *)(v20 + 48), &qword_2F5130);
  sub_B6DC((uint64_t)v13, &qword_2F5130);
  sub_B6DC((uint64_t)v15, &qword_2F5130);
  sub_B6DC(v18, &qword_2F5130);
  return sub_B6DC((uint64_t)v10, &qword_2F5130);
}

uint64_t sub_1D3264()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ReadingSummaryFrame(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26C7E0();
  sub_26A8F0();
  sub_26A900();
  sub_26A910();
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  sub_10E0C(v5, v6);
  char v7 = sub_40900(v5, v6);
  sub_C374(v5, v6);
  sub_1D3660(v1, (uint64_t)v4, type metadata accessor for ReadingSummaryFrame);
  if (v7)
  {
    sub_1D6600((uint64_t)v4, type metadata accessor for ReadingSummaryFrame);
  }
  else
  {
    uint64_t v8 = *((void *)v4 + 4);
    char v9 = v4[40];
    sub_10E0C(v8, v9);
    char v10 = sub_40900(v8, v9);
    sub_C374(v8, v9);
    sub_1D6600((uint64_t)v4, type metadata accessor for ReadingSummaryFrame);
    if ((v10 & 1) == 0 && !UIAccessibilityIsReduceMotionEnabled())
    {
      sub_26C6F0();
      sub_26C680();
      swift_release();
    }
  }
  uint64_t v11 = sub_26A920();
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1D3448()
{
  uint64_t v1 = __chkstk_darwin(v0);
  sub_1D3660(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingSummaryFrame);
  sub_1D36C8(&qword_2F4E00, (void (*)(uint64_t))type metadata accessor for ReadingSummaryFrame);
  return sub_26C470();
}

uint64_t sub_1D3510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D3660(v2 + *(int *)(a1 + 28), a2, type metadata accessor for PageBackground);
}

uint64_t sub_1D3548@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ReadingSummaryFrameViewModel(0) + 24);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_1D36C8(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_1D36C8(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  char v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t type metadata accessor for ReadingSummaryFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2F4F20);
}

uint64_t sub_1D3660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D36C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D3728(uint64_t a1)
{
  uint64_t result = sub_1D36C8(&qword_2F4E20, (void (*)(uint64_t))type metadata accessor for ReadingSummaryFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D3780(uint64_t a1)
{
  uint64_t result = sub_1D36C8(&qword_2F4E00, (void (*)(uint64_t))type metadata accessor for ReadingSummaryFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D37D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingSummaryFrameViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2694F0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4A98(&qword_2F4DF8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_269BE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
    id v17 = v16;
  }
  return a1;
}

void destroy for ReadingSummaryFrameViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2694F0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 28));
}

char *initializeWithCopy for ReadingSummaryFrameViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2694F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2F4DF8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)&a2[v13];
  *(void *)&a1[v13] = v14;
  id v15 = v14;
  return a1;
}

char *assignWithCopy for ReadingSummaryFrameViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2694F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2F4DF8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  id v17 = *(void **)&a2[v16];
  uint64_t v18 = *(void **)&a1[v16];
  *(void *)&a1[v16] = v17;
  id v19 = v17;

  return a1;
}

char *initializeWithTake for ReadingSummaryFrameViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2694F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2F4DF8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for ReadingSummaryFrameViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2694F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2F4DF8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  id v17 = *(void **)&a1[v16];
  *(void *)&a1[v16] = *(void *)&a2[v16];

  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingSummaryFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D41A4);
}

uint64_t sub_1D41A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2F4DF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_269BE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingSummaryFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D42D0);
}

uint64_t sub_1D42D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2F4DF8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_269BE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1D43E4()
{
  sub_1D7E18(319, (unint64_t *)&unk_2F4E90, (uint64_t (*)(uint64_t))&type metadata accessor for DateInterval, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_269BE0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t initializeBufferWithCopyOfBuffer for ReadingSummaryFrame(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_10E0C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(void *)(a2 + 32);
    char v12 = *(unsigned char *)(a2 + 40);
    sub_10E0C(v11, v12);
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v12;
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = a2 + v13;
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v19 = *(void *)(v15 + 8);
      *(void *)uint64_t v14 = *(void *)v15;
      *(void *)(v14 + 8) = v19;
      swift_bridgeObjectRetain();
      uint64_t v20 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v21 = v14 + v20;
      uint64_t v22 = v15 + v20;
      uint64_t v23 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*(unsigned char *)(v15 + 56))
      {
        long long v17 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *(_OWORD *)(v14 + 16) = v17;
        *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
        *(_OWORD *)(v14 + 41) = *(_OWORD *)(v15 + 41);
      }
      else
      {
        long long v30 = *(_OWORD *)(v15 + 24);
        *(_OWORD *)(v14 + 24) = v30;
        (**(void (***)(uint64_t, uint64_t))(v30 - 8))(v14, v15);
        *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
        *(unsigned char *)(v14 + 56) = 0;
      }
      *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
      *(unsigned char *)(v14 + 80) = *(unsigned char *)(v15 + 80);
      *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
      *(void *)(v14 + 104) = *(void *)(v15 + 104);
      uint64_t v31 = *(void *)(v15 + 120);
      swift_bridgeObjectRetain();
      if (v31)
      {
        *(void *)(v14 + 112) = *(void *)(v15 + 112);
        *(void *)(v14 + 120) = v31;
        uint64_t v32 = *(void *)(v15 + 136);
        *(void *)(v14 + 128) = *(void *)(v15 + 128);
        *(void *)(v14 + 136) = v32;
        *(unsigned char *)(v14 + 144) = *(unsigned char *)(v15 + 144);
        uint64_t v33 = *(void *)(v15 + 152);
        uint64_t v34 = *(void *)(v15 + 160);
        *(void *)(v14 + 152) = v33;
        *(void *)(v14 + 160) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v35 = *(_OWORD *)(v15 + 128);
        *(_OWORD *)(v14 + 112) = *(_OWORD *)(v15 + 112);
        *(_OWORD *)(v14 + 128) = v35;
        *(_OWORD *)(v14 + 144) = *(_OWORD *)(v15 + 144);
        *(void *)(v14 + 160) = *(void *)(v15 + 160);
      }
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      swift_retain();
      uint64_t v24 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v25 = (void *)(v14 + v24);
      uint64_t v26 = (const void *)(v15 + v24);
      uint64_t v27 = sub_26A6E0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_4A98(&qword_2EA940);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = *(int *)(a3 + 32);
    uint64_t v37 = (char *)(a1 + v36);
    uint64_t v38 = (char *)(a2 + v36);
    uint64_t v39 = sub_2694F0();
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = sub_4A98(&qword_2F4DF8);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    uint64_t v42 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
    *(void *)&v37[v42[5]] = *(void *)&v38[v42[5]];
    uint64_t v43 = v42[6];
    uint64_t v44 = &v37[v43];
    uint64_t v45 = &v38[v43];
    uint64_t v46 = sub_269BE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = v42[7];
    uint64_t v48 = *(void **)&v38[v47];
    *(void *)&v37[v47] = v48;
    id v49 = v48;
  }
  return a1;
}

void destroy for ReadingSummaryFrame(uint64_t a1, uint64_t a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_C374(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_C374(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v9 = v4 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
    case 1:
      if (!*(unsigned char *)(v4 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v4);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v6 = v4 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v7 = sub_26A6E0();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      break;
  }
  uint64_t v11 = a1 + *(int *)(a2 + 32);
  uint64_t v12 = sub_2694F0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = type metadata accessor for ReadingSummaryFrameViewModel(0);
  uint64_t v15 = v11 + *(int *)(v14 + 24);
  uint64_t v16 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  long long v17 = *(void **)(v11 + *(int *)(v14 + 28));
}

uint64_t initializeWithCopy for ReadingSummaryFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_10E0C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(void *)(a2 + 32);
  char v11 = *(unsigned char *)(a2 + 40);
  sub_10E0C(v10, v11);
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v17 = *(void *)(v14 + 8);
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v19 = v13 + v18;
    uint64_t v20 = v14 + v18;
    uint64_t v21 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(v14 + 56))
    {
      long long v16 = *(_OWORD *)(v14 + 16);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *(_OWORD *)(v13 + 16) = v16;
      *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
      *(_OWORD *)(v13 + 41) = *(_OWORD *)(v14 + 41);
    }
    else
    {
      long long v28 = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 24) = v28;
      (**(void (***)(uint64_t, uint64_t))(v28 - 8))(v13, v14);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      *(unsigned char *)(v13 + 56) = 0;
    }
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
    *(unsigned char *)(v13 + 80) = *(unsigned char *)(v14 + 80);
    *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
    *(void *)(v13 + 104) = *(void *)(v14 + 104);
    uint64_t v29 = *(void *)(v14 + 120);
    swift_bridgeObjectRetain();
    if (v29)
    {
      *(void *)(v13 + 112) = *(void *)(v14 + 112);
      *(void *)(v13 + 120) = v29;
      uint64_t v30 = *(void *)(v14 + 136);
      *(void *)(v13 + 128) = *(void *)(v14 + 128);
      *(void *)(v13 + 136) = v30;
      *(unsigned char *)(v13 + 144) = *(unsigned char *)(v14 + 144);
      uint64_t v31 = *(void *)(v14 + 152);
      uint64_t v32 = *(void *)(v14 + 160);
      *(void *)(v13 + 152) = v31;
      *(void *)(v13 + 160) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v33 = *(_OWORD *)(v14 + 128);
      *(_OWORD *)(v13 + 112) = *(_OWORD *)(v14 + 112);
      *(_OWORD *)(v13 + 128) = v33;
      *(_OWORD *)(v13 + 144) = *(_OWORD *)(v14 + 144);
      *(void *)(v13 + 160) = *(void *)(v14 + 160);
    }
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    swift_retain();
    uint64_t v22 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v23 = (void *)(v13 + v22);
    uint64_t v24 = (const void *)(v14 + v22);
    uint64_t v25 = sub_26A6E0();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_4A98(&qword_2EA940);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = *(int *)(a3 + 32);
  long long v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = sub_2694F0();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_4A98(&qword_2F4DF8);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  uint64_t v40 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
  *(void *)&v35[v40[5]] = *(void *)&v36[v40[5]];
  uint64_t v41 = v40[6];
  uint64_t v42 = &v35[v41];
  uint64_t v43 = &v36[v41];
  uint64_t v44 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  uint64_t v45 = v40[7];
  uint64_t v46 = *(void **)&v36[v45];
  *(void *)&v35[v45] = v46;
  id v47 = v46;
  return a1;
}

uint64_t assignWithCopy for ReadingSummaryFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_10E0C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_C374(v12, v13);
  uint64_t v14 = *(void *)(a2 + 32);
  char v15 = *(unsigned char *)(a2 + 40);
  sub_10E0C(v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  char v17 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 40) = v15;
  sub_C374(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (long long *)(a2 + v18);
    sub_1D6600(a1 + v18, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v26 = v19 + v25;
      uint64_t v27 = (uint64_t)v20 + v25;
      uint64_t v28 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)v20 + 56))
      {
        long long v22 = *v20;
        long long v23 = v20[1];
        long long v24 = v20[2];
        *(_OWORD *)(v19 + 41) = *(long long *)((char *)v20 + 41);
        *(_OWORD *)(v19 + 16) = v23;
        *(_OWORD *)(v19 + 32) = v24;
        *(_OWORD *)uint64_t v19 = v22;
      }
      else
      {
        uint64_t v35 = *((void *)v20 + 3);
        *(void *)(v19 + 24) = v35;
        *(void *)(v19 + 32) = *((void *)v20 + 4);
        (**(void (***)(uint64_t, long long *))(v35 - 8))(v19, v20);
        *(_OWORD *)(v19 + 40) = *(long long *)((char *)v20 + 40);
        *(unsigned char *)(v19 + 56) = 0;
      }
      *(_OWORD *)(v19 + 64) = v20[4];
      *(unsigned char *)(v19 + 80) = *((unsigned char *)v20 + 80);
      *(void *)(v19 + 88) = *((void *)v20 + 11);
      *(void *)(v19 + 96) = *((void *)v20 + 12);
      *(void *)(v19 + 104) = *((void *)v20 + 13);
      uint64_t v36 = *((void *)v20 + 15);
      swift_bridgeObjectRetain();
      if (v36)
      {
        *(void *)(v19 + 112) = *((void *)v20 + 14);
        *(void *)(v19 + 120) = *((void *)v20 + 15);
        *(void *)(v19 + 128) = *((void *)v20 + 16);
        *(void *)(v19 + 136) = *((void *)v20 + 17);
        *(unsigned char *)(v19 + 144) = *((unsigned char *)v20 + 144);
        *(void *)(v19 + 152) = *((void *)v20 + 19);
        *(void *)(v19 + 160) = *((void *)v20 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v37 = v20[7];
        long long v38 = v20[8];
        long long v39 = v20[9];
        *(void *)(v19 + 160) = *((void *)v20 + 20);
        *(_OWORD *)(v19 + 128) = v38;
        *(_OWORD *)(v19 + 144) = v39;
        *(_OWORD *)(v19 + 112) = v37;
      }
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_retain();
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v30 = (void *)(v19 + v29);
      uint64_t v31 = (char *)v20 + v29;
      uint64_t v32 = sub_26A6E0();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_4A98(&qword_2EA940);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = *(int *)(a3 + 32);
  uint64_t v41 = (char *)(a1 + v40);
  uint64_t v42 = (char *)(a2 + v40);
  uint64_t v43 = sub_2694F0();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
    goto LABEL_20;
  }
  if (v47)
  {
LABEL_20:
    uint64_t v48 = sub_4A98(&qword_2F4DF8);
    memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
LABEL_21:
  id v49 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
  *(void *)&v41[v49[5]] = *(void *)&v42[v49[5]];
  uint64_t v50 = v49[6];
  uint64_t v51 = &v41[v50];
  uint64_t v52 = &v42[v50];
  uint64_t v53 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
  uint64_t v54 = v49[7];
  uint64_t v55 = *(void **)&v42[v54];
  uint64_t v56 = *(void **)&v41[v54];
  *(void *)&v41[v54] = v55;
  id v57 = v55;

  return a1;
}

uint64_t initializeWithTake for ReadingSummaryFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  char v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    _OWORD *v7 = *v8;
    uint64_t v17 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)v8 + v17;
    uint64_t v20 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_9;
    }
    *(void *)char v7 = *(void *)v8;
    uint64_t v11 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v12 = (char *)v7 + v11;
    char v13 = (char *)v8 + v11;
    uint64_t v14 = sub_26A6E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_4A98(&qword_2EA940);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v21 = *(int *)(a3 + 32);
  long long v22 = (char *)(a1 + v21);
  long long v23 = (char *)(a2 + v21);
  uint64_t v24 = sub_2694F0();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_4A98(&qword_2F4DF8);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
  *(void *)&v22[v27[5]] = *(void *)&v23[v27[5]];
  uint64_t v28 = v27[6];
  uint64_t v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  uint64_t v31 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  *(void *)&v22[v27[7]] = *(void *)&v23[v27[7]];
  return a1;
}

uint64_t assignWithTake for ReadingSummaryFrame(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_C374(v11, v12);
  char v13 = *((unsigned char *)a2 + 40);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = v13;
  sub_C374(v14, v15);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (_OWORD *)(a1 + v16);
    uint64_t v18 = (_OWORD *)((char *)a2 + v16);
    sub_1D6600(a1 + v16, type metadata accessor for PageBackground);
    uint64_t v19 = type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *uint64_t v17 = *v18;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v28 = (char *)v17 + v27;
      uint64_t v29 = (char *)v18 + v27;
      uint64_t v30 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_10;
      }
      *(void *)uint64_t v17 = *(void *)v18;
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      long long v22 = (char *)v17 + v21;
      long long v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26A6E0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_4A98(&qword_2EA940);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_10:
  uint64_t v31 = *(int *)(a3 + 32);
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_2694F0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_15;
  }
  if (v38)
  {
LABEL_15:
    uint64_t v39 = sub_4A98(&qword_2F4DF8);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_16:
  uint64_t v40 = (int *)type metadata accessor for ReadingSummaryFrameViewModel(0);
  *(void *)&v32[v40[5]] = *(void *)&v33[v40[5]];
  uint64_t v41 = v40[6];
  uint64_t v42 = &v32[v41];
  uint64_t v43 = &v33[v41];
  uint64_t v44 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = v40[7];
  int v46 = *(void **)&v32[v45];
  *(void *)&v32[v45] = *(void *)&v33[v45];

  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingSummaryFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D5E1C);
}

uint64_t sub_1D5E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for PageBackground(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ReadingSummaryFrameViewModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ReadingSummaryFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D5F54);
}

uint64_t sub_1D5F54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for PageBackground(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ReadingSummaryFrameViewModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1D607C()
{
  uint64_t result = type metadata accessor for PageBackground(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ReadingSummaryFrameViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1D6158()
{
  unint64_t result = qword_2F4F68;
  if (!qword_2F4F68)
  {
    sub_7B0C(&qword_2F4E18);
    sub_7C18(&qword_2F4F70, &qword_2F4E08);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4F68);
  }
  return result;
}

uint64_t *sub_1D621C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for PlatterItem.Configuration(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      uint64_t v7 = a2[4];
      uint64_t v8 = a2[5];
      a1[4] = v7;
      a1[5] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_26A2F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for PlatterItem.Configuration(uint64_t a1)
{
  return sub_2A148(a1, qword_2F5078);
}

uint64_t sub_1D6364(uint64_t a1)
{
  type metadata accessor for PlatterItem.Configuration(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_26A2F0();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_1D6414(void *a1, void *a2)
{
  type metadata accessor for PlatterItem.Configuration(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[4];
    uint64_t v7 = a2[5];
    a1[4] = v6;
    a1[5] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = sub_26A2F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1D64EC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D6600((uint64_t)a1, type metadata accessor for PlatterItem.Configuration);
    type metadata accessor for PlatterItem.Configuration(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_26A2F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D6600(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1D6660(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for PlatterItem.Configuration(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_26A2F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1D671C(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1D6600((uint64_t)a1, type metadata accessor for PlatterItem.Configuration);
    uint64_t v4 = type metadata accessor for PlatterItem.Configuration(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_26A2F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D67FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D6810);
}

uint64_t sub_1D6810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlatterItem.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1D687C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D6890);
}

uint64_t sub_1D6890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlatterItem.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlatterItem(uint64_t a1)
{
  return sub_2A148(a1, qword_2F4FD0);
}

uint64_t sub_1D6920()
{
  uint64_t result = type metadata accessor for PlatterItem.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D69AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[4];
      uint64_t v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = sub_26A2F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D6ACC(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_26A2F0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_1D6B6C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[4];
    uint64_t v7 = a2[5];
    a1[4] = v6;
    a1[5] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = sub_26A2F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1D6C3C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D6600((uint64_t)a1, type metadata accessor for PlatterItem.Configuration);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_26A2F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1D6D48(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_26A2F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1D6DFC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D6600((uint64_t)a1, type metadata accessor for PlatterItem.Configuration);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_26A2F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D6ED4()
{
  uint64_t result = sub_26A2F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D6F64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PlatterModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2F51A0);
}

uint64_t sub_1D6FA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D6FE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D1808(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

unint64_t sub_1D6FF8()
{
  unint64_t result = qword_2F50C8;
  if (!qword_2F50C8)
  {
    sub_7B0C(&qword_2F50B8);
    sub_1D70A4();
    sub_1D36C8(&qword_2F50F0, (void (*)(uint64_t))type metadata accessor for PlatterModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F50C8);
  }
  return result;
}

unint64_t sub_1D70A4()
{
  unint64_t result = qword_2F50D0;
  if (!qword_2F50D0)
  {
    sub_7B0C(&qword_2F50D8);
    sub_2D384();
    sub_7C18(&qword_2F50E0, &qword_2F50E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F50D0);
  }
  return result;
}

uint64_t sub_1D714C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1D71B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_1D7370(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26C700();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1D7484(void *a1, void *a2, uint64_t a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1D75F0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  return a1;
}

char *sub_1D7794(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1D7910(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EB3E8);
    uint64_t v11 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1D7AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D7AC8);
}

uint64_t sub_1D7AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2EB3F8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1D7BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D7BDC);
}

uint64_t sub_1D7BDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2EB3F8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1D7CE8()
{
  sub_1D7E18(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1D7E18(319, (unint64_t *)&qword_2EB470, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1D7E18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1D7E80()
{
  unint64_t result = qword_2F51E0;
  if (!qword_2F51E0)
  {
    sub_7B0C(&qword_2F51E8);
    sub_1D6FF8();
    sub_7C18(&qword_2F50F8, &qword_2F50C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F51E0);
  }
  return result;
}

uint64_t sub_1D7F20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D7F40()
{
  unint64_t result = qword_2F5210;
  if (!qword_2F5210)
  {
    sub_7B0C(&qword_2F5208);
    sub_1D80D8(&qword_2F5218, &qword_2F51F8, (void (*)(void))sub_1D800C);
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5210);
  }
  return result;
}

unint64_t sub_1D800C()
{
  unint64_t result = qword_2F5220;
  if (!qword_2F5220)
  {
    sub_7B0C(&qword_2F51F0);
    sub_1D80D8(&qword_2F5228, &qword_2EEB38, (void (*)(void))sub_1D8154);
    sub_7C18(&qword_2EC7B0, &qword_2EC7B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5220);
  }
  return result;
}

uint64_t sub_1D80D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D8154()
{
  unint64_t result = qword_2F5230;
  if (!qword_2F5230)
  {
    sub_7B0C(&qword_2EEB30);
    sub_7C18(&qword_2F5238, &qword_2F5200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5230);
  }
  return result;
}

uint64_t Metrics.Impression.init(artistName:id:idType:impressionIndex:impressionType:isSG:kind:name:narratorName:parentId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17 = *a5;
  unint64_t v18 = 0xE600000000000000;
  uint64_t v19 = 0x6E6F74747562;
  switch(*a7)
  {
    case 1:
      uint64_t v19 = 0x7265746C6966;
      break;
    case 2:
      unint64_t v18 = 0xE400000000000000;
      uint64_t v19 = 1802398060;
      break;
    case 3:
      uint64_t v19 = 0x70756B636F6CLL;
      break;
    case 4:
      unint64_t v18 = 0xE400000000000000;
      uint64_t v19 = 1701273968;
      break;
    case 5:
      unint64_t v18 = 0xE700000000000000;
      uint64_t v19 = 0x77656976657270;
      break;
    case 6:
      unint64_t v18 = 0xE700000000000000;
      uint64_t v19 = 0x6E6F6974636573;
      break;
    case 7:
      uint64_t v19 = 0x68736F6F7773;
      break;
    case 8:
      unint64_t v18 = 0xEA00000000007075;
      uint64_t v19 = 0x6B636F6C5F707075;
      break;
    default:
      break;
  }
  unint64_t v20 = 0xE600000000000000;
  if (v17) {
    unint64_t v20 = 0xEA00000000006C61;
  }
  *a9 = a1;
  a9[1] = a2;
  uint64_t v21 = 0x64695F737469;
  if (v17) {
    uint64_t v21 = 0x69746E6575716573;
  }
  a9[2] = a3;
  a9[3] = a4;
  uint64_t result = 0x696F56736B6F6F42;
  if ((a8 & 1) == 0) {
    uint64_t result = 0;
  }
  unint64_t v23 = 0xEB00000000736563;
  if ((a8 & 1) == 0) {
    unint64_t v23 = 0;
  }
  a9[4] = v21;
  a9[5] = v20;
  a9[6] = a6;
  a9[7] = v19;
  a9[8] = v18;
  a9[9] = a10;
  a9[10] = a11;
  a9[11] = a12;
  a9[12] = a13;
  a9[13] = a14;
  a9[14] = a15;
  a9[15] = result;
  a9[16] = v23;
  a9[17] = a16;
  a9[18] = a17;
  return result;
}

uint64_t static Metrics.createImpressionMetrics(impression:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[1] = a2;
  uint64_t v3 = sub_26CDD0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_269840();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26CE10();
  __chkstk_darwin(v8 - 8);
  long long v9 = *(_OWORD *)(a1 + 112);
  v15[6] = *(_OWORD *)(a1 + 96);
  v15[7] = v9;
  v15[8] = *(_OWORD *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 144);
  long long v10 = *(_OWORD *)(a1 + 48);
  v15[2] = *(_OWORD *)(a1 + 32);
  v15[3] = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  v15[4] = *(_OWORD *)(a1 + 64);
  v15[5] = v11;
  long long v12 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v12;
  if (*((void *)&v12 + 1))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_269830();
    sub_269820();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRetain();
  sub_26CE00();
  sub_F3180((uint64_t)v15);
  sub_17EE08();
  sub_F322C((uint64_t)v15);
  sub_26CDC0();
  sub_F32D8((uint64_t)_swiftEmptyArrayStorage);
  sub_F32D8((uint64_t)_swiftEmptyArrayStorage);
  return sub_26CE20();
}

uint64_t Metrics.Impression.impressionIndex.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Metrics.Impression.impressionIndex.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t Metrics.Impression.impressionType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.impressionType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*Metrics.Impression.impressionType.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Impression.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.kind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*Metrics.Impression.kind.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Impression.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*Metrics.Impression.name.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Impression.narratorName.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.narratorName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*Metrics.Impression.narratorName.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Impression.narratorType.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.narratorType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t Metrics.Impression.parentId.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Impression.parentId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

uint64_t (*Metrics.Impression.parentId.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.ImpressionType.rawValue.getter()
{
  uint64_t result = 0x6E6F74747562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265746C6966;
      break;
    case 2:
      uint64_t result = 1802398060;
      break;
    case 3:
      uint64_t result = 0x70756B636F6CLL;
      break;
    case 4:
      uint64_t result = 1701273968;
      break;
    case 5:
      uint64_t result = 0x77656976657270;
      break;
    case 6:
      uint64_t result = 0x6E6F6974636573;
      break;
    case 7:
      uint64_t result = 0x68736F6F7773;
      break;
    case 8:
      uint64_t result = 0x6B636F6C5F707075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D89FC(char a1)
{
  uint64_t result = 0x614E747369747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 0x657079546469;
      break;
    case 3:
    case 4:
      uint64_t result = 0x6973736572706D69;
      break;
    case 5:
      uint64_t result = 1684957547;
      break;
    case 6:
      uint64_t result = 1701667182;
      break;
    case 7:
    case 8:
      uint64_t result = 0x726F74617272616ELL;
      break;
    case 9:
      uint64_t result = 0x6449746E65726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D8B20()
{
  return sub_1D89FC(*v0);
}

uint64_t sub_1D8B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D9A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D8B50(uint64_t a1)
{
  unint64_t v2 = sub_1D90FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D8B8C(uint64_t a1)
{
  unint64_t v2 = sub_1D90FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Metrics.Impression.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2F5240);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v20[12] = v1[3];
  v20[13] = v7;
  uint64_t v8 = v1[4];
  v20[10] = v1[5];
  v20[11] = v8;
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  v20[8] = v1[8];
  v20[9] = v9;
  uint64_t v11 = v1[9];
  void v20[5] = v1[10];
  v20[6] = v10;
  uint64_t v12 = v1[11];
  v20[3] = v1[12];
  v20[4] = v11;
  v20[0] = v1[13];
  v20[1] = v1[14];
  v20[2] = v12;
  uint64_t v13 = v1[16];
  v20[7] = v1[15];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1;
  uint64_t v17 = v16;
  sub_4ADC(v15, v14);
  sub_1D90FC();
  sub_26DFE0();
  char v30 = 0;
  uint64_t v18 = v21;
  sub_26DCE0();
  if (!v18)
  {
    uint64_t v21 = v13;
    char v29 = 1;
    sub_26DCE0();
    char v28 = 2;
    sub_26DD10();
    char v27 = 3;
    sub_26DD20();
    char v26 = 4;
    sub_26DD10();
    char v25 = 5;
    sub_26DCE0();
    char v24 = 6;
    sub_26DCE0();
    char v23 = 7;
    sub_26DCE0();
    char v22 = 8;
    sub_26DCE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
}

uint64_t sub_1D8EA4(void *a1)
{
  return Metrics.Impression.encode(to:)(a1);
}

uint64_t Metrics.ImpressionType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DC328;
  v9._object = a2;
  unint64_t v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 9;
  if (v6 < 9) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1D8F18(unsigned __int8 *a1, char *a2)
{
  return sub_10877C(*a1, *a2);
}

Swift::Int sub_1D8F24()
{
  return sub_26DF20();
}

uint64_t sub_1D8F6C()
{
  return sub_180E60();
}

Swift::Int sub_1D8F74()
{
  return sub_26DF20();
}

uint64_t sub_1D8FB8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Metrics.ImpressionType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

uint64_t sub_1D8FC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Metrics.ImpressionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ImpressionMetrics.withImpressionIndex(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_26CE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v2, v5);
  unint64_t v6 = (void (*)(void *, void))sub_26CE30();
  sub_26CDF0();
  v6(v10, 0);
  _OWORD v10[3] = &type metadata for Int;
  v10[0] = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t *, void))sub_26CE40();
  sub_88DC((uint64_t)v10, 0x6973736572706D69, 0xEF7865646E496E6FLL);
  return v7(&v9, 0);
}

unint64_t sub_1D90FC()
{
  unint64_t result = qword_2F5248;
  if (!qword_2F5248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5248);
  }
  return result;
}

unint64_t sub_1D9150(uint64_t a1)
{
  unint64_t result = sub_17F71C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D917C()
{
  unint64_t result = qword_2F5250;
  if (!qword_2F5250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5250);
  }
  return result;
}

uint64_t sub_1D91D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D91DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 136) = v4;
  *(void *)(a2 + 144) = v3;
  return result;
}

uint64_t _s10ImpressionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s10ImpressionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s10ImpressionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s10ImpressionVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s10ImpressionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10ImpressionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10ImpressionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.Impression()
{
  return &type metadata for Metrics.Impression;
}

uint64_t _s14ImpressionTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14ImpressionTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D97D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.ImpressionType()
{
  return &type metadata for Metrics.ImpressionType;
}

unsigned char *_s10ImpressionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D98D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10ImpressionV10CodingKeysOMa()
{
  return &_s10ImpressionV10CodingKeysON;
}

unint64_t sub_1D9910()
{
  unint64_t result = qword_2F5258;
  if (!qword_2F5258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5258);
  }
  return result;
}

unint64_t sub_1D9968()
{
  unint64_t result = qword_2F5260;
  if (!qword_2F5260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5260);
  }
  return result;
}

unint64_t sub_1D99C0()
{
  unint64_t result = qword_2F5268;
  if (!qword_2F5268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5268);
  }
  return result;
}

uint64_t sub_1D9A14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657079546469 && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEF7865646E496E6FLL || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEE00657079546E6FLL || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F74617272616ELL && a2 == 0xEC000000656D614ELL || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F74617272616ELL && a2 == 0xEC00000065707954 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6449746E65726170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1D9E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[1] = a1;
  uint64_t v4 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  char v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(*(void *)(v7 + 16) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_26DE40();
  sub_26DDA0();
  char v9 = sub_26D360();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a3);
  if (v9) {
    return sub_26D2D0();
  }
  sub_26D2C0();
  sub_26D2D0();
  return sub_26D770();
}

uint64_t sub_1DA070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, v4);
  return sub_1D9E54(a1, a2, a3);
}

void *sub_1DA0F8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_10E0C(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    unint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_10E0C(*(void *)v20, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
    uint64_t v23 = a3[8];
    char v24 = (char *)a1 + v23;
    char v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_10E0C(*(void *)v25, v27);
    *(void *)char v24 = v26;
    v24[8] = v27;
    uint64_t v28 = a3[9];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)v30;
    char v32 = v30[8];
    sub_10E0C(*(void *)v30, v32);
    *(void *)char v29 = v31;
    v29[8] = v32;
    uint64_t v33 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v34 = (void *)((char *)a1 + v33);
    uint64_t v35 = (void *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    int v38 = (void *)((char *)a1 + v37);
    uint64_t v39 = (void *)((char *)a2 + v37);
    uint64_t v40 = *(void *)((char *)a2 + v37 + 16);
    swift_bridgeObjectRetain();
    if ((~v40 & 0xF000000000000007) != 0)
    {
      uint64_t v41 = *v39;
      uint64_t v42 = v39[1];
      sub_1DA518(v41, v42, v40);
      *int v38 = v41;
      v38[1] = v42;
      _OWORD v38[2] = v40;
    }
    else
    {
      *(_OWORD *)int v38 = *(_OWORD *)v39;
      _OWORD v38[2] = v39[2];
    }
    uint64_t v43 = a3[13];
    uint64_t v44 = a3[14];
    uint64_t v45 = (void *)((char *)a1 + v43);
    int v46 = (void *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = (char *)a1 + v44;
    id v49 = (char *)a2 + v44;
    uint64_t v50 = sub_26B820();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      uint64_t v53 = sub_4A98(&qword_2EBFC0);
      memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    uint64_t v54 = a3[16];
    *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *(_OWORD *)((char *)a1 + v54) = *(_OWORD *)((char *)a2 + v54);
    uint64_t v55 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v56 = (char *)a1 + v55;
    id v57 = (char *)a2 + v55;
    uint64_t v58 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  }
  return a1;
}

uint64_t sub_1DA518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DA568(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_C374(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_C374(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a1 + a2[12]);
  uint64_t v8 = v7[2];
  if ((~v8 & 0xF000000000000007) != 0) {
    sub_1DA7C4(*v7, v7[1], v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[14];
  uint64_t v10 = sub_26B820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[18];
  uint64_t v13 = sub_26AB40();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

uint64_t sub_1DA7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1DA814(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_10E0C(*(void *)v18, v20);
  *(void *)char v17 = v19;
  v17[8] = v20;
  uint64_t v21 = a3[8];
  char v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_10E0C(*(void *)v23, v25);
  *(void *)char v22 = v24;
  v22[8] = v25;
  uint64_t v26 = a3[9];
  char v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = v28[8];
  sub_10E0C(*(void *)v28, v30);
  *(void *)char v27 = v29;
  v27[8] = v30;
  uint64_t v31 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  char v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *char v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = *(void *)((char *)a2 + v35 + 16);
  swift_bridgeObjectRetain();
  if ((~v38 & 0xF000000000000007) != 0)
  {
    uint64_t v39 = *v37;
    uint64_t v40 = v37[1];
    sub_1DA518(v39, v40, v38);
    *uint64_t v36 = v39;
    v36[1] = v40;
    _OWORD v36[2] = v38;
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    _OWORD v36[2] = v37[2];
  }
  uint64_t v41 = a3[13];
  uint64_t v42 = a3[14];
  uint64_t v43 = (void *)((char *)a1 + v41);
  uint64_t v44 = (void *)((char *)a2 + v41);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  int v46 = (char *)a1 + v42;
  uint64_t v47 = (char *)a2 + v42;
  uint64_t v48 = sub_26B820();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  if (v50(v47, 1, v48))
  {
    uint64_t v51 = sub_4A98(&qword_2EBFC0);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v52 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(_OWORD *)((char *)a1 + v52) = *(_OWORD *)((char *)a2 + v52);
  uint64_t v53 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  return a1;
}

void *sub_1DABE4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_C374(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_10E0C(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  sub_C374(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = v27[8];
  sub_10E0C(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = v29;
  sub_C374(v30, v31);
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = v34[8];
  sub_10E0C(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = v33[8];
  *(void *)uint64_t v33 = v35;
  v33[8] = v36;
  sub_C374(v37, v38);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[12];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = *(void *)((char *)a2 + v42 + 16);
  unint64_t v46 = v45 & 0xF000000000000007;
  if ((~*(void *)((char *)a1 + v42 + 16) & 0xF000000000000007) != 0)
  {
    if (v46 == 0xF000000000000007)
    {
      sub_1DB10C(v43);
      uint64_t v48 = v44[2];
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      v43[2] = v48;
    }
    else
    {
      uint64_t v51 = *v44;
      uint64_t v52 = v44[1];
      sub_1DA518(v51, v52, v45);
      uint64_t v53 = *v43;
      uint64_t v54 = v43[1];
      uint64_t v55 = v43[2];
      uint64_t *v43 = v51;
      v43[1] = v52;
      v43[2] = v45;
      sub_1DA7C4(v53, v54, v55);
    }
  }
  else if (v46 == 0xF000000000000007)
  {
    long long v47 = *(_OWORD *)v44;
    v43[2] = v44[2];
    *(_OWORD *)uint64_t v43 = v47;
  }
  else
  {
    uint64_t v49 = *v44;
    uint64_t v50 = v44[1];
    sub_1DA518(v49, v50, v45);
    uint64_t *v43 = v49;
    v43[1] = v50;
    v43[2] = v45;
  }
  uint64_t v56 = a3[13];
  id v57 = (void *)((char *)a1 + v56);
  uint64_t v58 = (void *)((char *)a2 + v56);
  *id v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[14];
  Swift::String v60 = (char *)a1 + v59;
  Swift::String v61 = (char *)a2 + v59;
  uint64_t v62 = sub_26B820();
  uint64_t v63 = *(void *)(v62 - 8);
  char v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v60, v61, v62);
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_21;
  }
  if (v66)
  {
LABEL_21:
    uint64_t v67 = sub_4A98(&qword_2EBFC0);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_22:
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v68 = a3[16];
  uint64_t v69 = (void *)((char *)a1 + v68);
  uint64_t v70 = (void *)((char *)a2 + v68);
  *uint64_t v69 = *v70;
  v69[1] = v70[1];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  uint64_t v71 = a3[18];
  uint64_t v72 = (char *)a1 + v71;
  char v73 = (char *)a2 + v71;
  uint64_t v74 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
  return a1;
}

uint64_t *sub_1DB10C(uint64_t *a1)
{
  return a1;
}

char *sub_1DB13C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  *(void *)char v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v19];
  char v22 = &a2[v19];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = &a1[v20];
  char v24 = &a2[v20];
  uint64_t v23[8] = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  uint64_t v25 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  uint64_t v26 = a3[12];
  uint64_t v27 = a3[13];
  uint64_t v28 = &a1[v26];
  char v29 = &a2[v26];
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *((void *)v28 + 2) = *((void *)v29 + 2);
  uint64_t v30 = a3[14];
  char v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  uint64_t v33 = sub_26B820();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_4A98(&qword_2EBFC0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v36 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  uint64_t v37 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  char v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
  return a1;
}

char *sub_1DB490(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EB3E8);
    uint64_t v11 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_C374(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)v21;
  LOBYTE(v21) = v21[8];
  uint64_t v23 = *(void *)v20;
  char v24 = v20[8];
  *(void *)uint64_t v20 = v22;
  v20[8] = (char)v21;
  sub_C374(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  LOBYTE(v27) = v27[8];
  uint64_t v29 = *(void *)v26;
  char v30 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  sub_C374(v29, v30);
  uint64_t v31 = a3[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)v33;
  LOBYTE(v33) = v33[8];
  uint64_t v35 = *(void *)v32;
  char v36 = v32[8];
  *(void *)uint64_t v32 = v34;
  v32[8] = (char)v33;
  sub_C374(v35, v36);
  uint64_t v37 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  char v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)char v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[12];
  uint64_t v43 = (uint64_t *)&a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = *(void *)&a1[v42 + 16];
  if ((~v45 & 0xF000000000000007) == 0) {
    goto LABEL_11;
  }
  uint64_t v46 = *((void *)v44 + 2);
  if ((~v46 & 0xF000000000000007) == 0)
  {
    sub_1DB10C(v43);
LABEL_11:
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    v43[2] = *((void *)v44 + 2);
    goto LABEL_13;
  }
  uint64_t v47 = *v43;
  uint64_t v48 = v43[1];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  v43[2] = v46;
  sub_1DA7C4(v47, v48, v45);
LABEL_13:
  uint64_t v49 = a3[13];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v53 = *(void *)v51;
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[14];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = sub_26B820();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_18;
  }
  if (v61)
  {
LABEL_18:
    uint64_t v62 = sub_4A98(&qword_2EBFC0);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_19:
  uint64_t v63 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(_OWORD *)&a1[v63] = *(_OWORD *)&a2[v63];
  uint64_t v64 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  int v65 = &a1[v64];
  int v66 = &a2[v64];
  uint64_t v67 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  return a1;
}

uint64_t sub_1DB908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DB91C);
}

uint64_t sub_1DB91C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB3F8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[11] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v17 = sub_4A98(&qword_2EBFC0);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[14];
      goto LABEL_13;
    }
    uint64_t v18 = sub_26AB40();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[18];
    return v19(v21, a2, v20);
  }
}

uint64_t sub_1DBB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DBB18);
}

uint64_t sub_1DBB18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EB3F8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[11] + 8) = a2;
    return result;
  }
  uint64_t v16 = sub_4A98(&qword_2EBFC0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_9;
  }
  uint64_t v17 = sub_26AB40();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[18];

  return v18(v20, a2, a2, v19);
}

uint64_t type metadata accessor for TextLockup()
{
  uint64_t result = qword_2F52C8;
  if (!qword_2F52C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DBD40()
{
  sub_1DBF60(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1DBF60(319, (unint64_t *)&qword_2EB470, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1DBF60(319, (unint64_t *)&unk_2F52D8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        sub_26AB40();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1DBF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for TextLockup.TitleViewModel(uint64_t *a1)
{
  return sub_1DA7C4(*a1, a1[1], a1[2]);
}

uint64_t *_s7BooksUI10TextLockupV14TitleViewModelOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1DA518(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for TextLockup.TitleViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1DA518(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1DA7C4(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for TextLockup.TitleViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1DA7C4(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextLockup.TitleViewModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 57) >> 6) | (2
                                                           * ((*(void *)(a1 + 16) >> 57) & 0x38 | *(void *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TextLockup.TitleViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1DC174(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 63;
}

uint64_t sub_1DC180(uint64_t result)
{
  *(void *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1DC190(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for TextLockup.TitleViewModel()
{
  return &type metadata for TextLockup.TitleViewModel;
}

uint64_t sub_1DC1B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DC1D0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14)
{
  *a9 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (int *)type metadata accessor for TextLockup();
  uint64_t v23 = (uint64_t *)((char *)a9 + v22[5]);
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  char v24 = (char *)a9 + v22[6];
  *(void *)char v24 = swift_getKeyPath();
  v24[8] = 0;
  uint64_t v25 = (char *)a9 + v22[7];
  *(void *)uint64_t v25 = swift_getKeyPath();
  v25[8] = 0;
  uint64_t v26 = (char *)a9 + v22[8];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[8] = 0;
  uint64_t v27 = (char *)a9 + v22[9];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  *((unsigned char *)a9 + v22[10]) = a1;
  uint64_t v28 = (uint64_t *)((char *)a9 + v22[11]);
  *uint64_t v28 = a2;
  v28[1] = a3;
  uint64_t v29 = (uint64_t *)((char *)a9 + v22[12]);
  *uint64_t v29 = a4;
  v29[1] = a5;
  _OWORD v29[2] = 0;
  char v30 = (uint64_t *)((char *)a9 + v22[13]);
  *char v30 = a6;
  v30[1] = a7;
  sub_19CC4(a8, (uint64_t)a9 + v22[14], &qword_2EBFC0);
  *(uint64_t *)((char *)a9 + v22[15]) = a10;
  uint64_t v31 = (uint64_t *)((char *)a9 + v22[16]);
  *uint64_t v31 = a11;
  v31[1] = a12;
  *((unsigned char *)a9 + v22[17]) = a13;
  uint64_t v32 = (char *)a9 + v22[18];
  uint64_t v33 = sub_26AB40();
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);

  return v34(v32, a14, v33);
}

BOOL sub_1DC400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1DC414(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1DC428(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1DC43C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

BOOL sub_1DC450()
{
  uint64_t v1 = v0;
  unint64_t v2 = (int *)type metadata accessor for TextLockup();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = v1 + *(int *)(v9 + 28);
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_10E0C(*(void *)v12, v14);
  char v15 = sub_40900(v13, v14);
  sub_C374(v13, v14);
  sub_1E0924(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextLockup);
  if ((v15 & 1) == 0)
  {
    sub_1E098C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextLockup);
    sub_1E0924(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextLockup);
    goto LABEL_6;
  }
  unsigned int v16 = v11[v2[10]];
  sub_1E098C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_1E0924(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextLockup);
  if (v16 <= 3)
  {
LABEL_6:
    BOOL v21 = 0;
    goto LABEL_7;
  }
  uint64_t v17 = &v8[v2[8]];
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_10E0C(*(void *)v17, v19);
  char v20 = sub_40900(v18, v19);
  sub_C374(v18, v19);
  sub_1E0924((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TextLockup);
  if ((v20 & 1) == 0)
  {
    uint64_t v23 = &v5[v2[9]];
    uint64_t v24 = *(void *)v23;
    char v25 = v23[8];
    sub_10E0C(*(void *)v23, v25);
    char v26 = sub_40900(v24, v25);
    sub_C374(v24, v25);
    sub_1E098C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TextLockup);
    if ((v26 & 1) == 0)
    {
      BOOL v21 = !UIAccessibilityIsReduceMotionEnabled();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_1E098C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TextLockup);
  BOOL v21 = 0;
LABEL_7:
  sub_1E098C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextLockup);
  return v21;
}

uint64_t sub_1DC704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v112 = a1;
  uint64_t v111 = sub_26B600();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_4A98(&qword_2EB028);
  uint64_t v4 = __chkstk_darwin(v123);
  uint64_t v107 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v105 = (char *)&v97 - v6;
  uint64_t v120 = (void *)sub_26AB40();
  uint64_t v122 = *(v120 - 1);
  uint64_t v7 = __chkstk_darwin(v120);
  uint64_t v121 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v97 - v9;
  uint64_t v108 = sub_4A98(&qword_2EB030);
  uint64_t v11 = __chkstk_darwin(v108);
  uint64_t v104 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v106 = (uint64_t)&v97 - v13;
  char v14 = (int *)type metadata accessor for TextLockup();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v115 = (uint64_t)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v97 - v17;
  uint64_t v19 = sub_4A98(&qword_2EE8F0);
  __chkstk_darwin(v19 - 8);
  BOOL v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4A98(&qword_2EE8F8);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2F5340);
  __chkstk_darwin(v113);
  char v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_4A98(&qword_2F5348);
  __chkstk_darwin(v114);
  uint64_t v28 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_4A98(&qword_2F5350);
  __chkstk_darwin(v116);
  char v30 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2F5358);
  __chkstk_darwin(v117);
  uint64_t v118 = (uint64_t)&v97 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_4A98(&qword_2F5360);
  __chkstk_darwin(v125);
  uint64_t v124 = (char *)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_4A98(&qword_2F5368);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v100 = (char *)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_4A98(&qword_2F5370);
  uint64_t v99 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v98 = (char *)&v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = 0x4024000000000000;
  if (*(unsigned __int8 *)(v2 + v14[10]) < 4u) {
    uint64_t v35 = 0x4010000000000000;
  }
  *(void *)BOOL v21 = *(void *)(v2 + v14[15]);
  *((void *)v21 + 1) = v35;
  unsigned char v21[16] = 0;
  uint64_t v36 = sub_4A98(&qword_2F5378);
  sub_1DD460(v2, (uint64_t)&v21[*(int *)(v36 + 44)]);
  sub_B0928(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, *(void *)(v2 + v14[16]), *(void *)(v2 + v14[16] + 8));
  sub_B6DC((uint64_t)v21, &qword_2EE8F0);
  BOOL v37 = sub_1DC450();
  sub_1E0924(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v119 = v10;
  if (v37)
  {
    char v38 = v14;
    uint64_t v39 = &v18[v14[6]];
    uint64_t v40 = *(void *)v39;
    char v41 = v39[8];
    sub_10E0C(*(void *)v39, v41);
    char v42 = sub_40900(v40, v41);
    sub_C374(v40, v41);
    sub_1E098C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TextLockup);
    if ((v42 & 1) == 0)
    {
      uint64_t v43 = 0x4054000000000000;
      goto LABEL_8;
    }
  }
  else
  {
    char v38 = v14;
    sub_1E098C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TextLockup);
  }
  uint64_t v43 = 0;
LABEL_8:
  uint64_t v44 = (uint64_t)v124;
  sub_B678((uint64_t)v24, (uint64_t)v26, &qword_2EE8F8);
  uint64_t v45 = &v26[*(int *)(v113 + 36)];
  *(void *)uint64_t v45 = 0;
  *((void *)v45 + 1) = v43;
  sub_B6DC((uint64_t)v24, &qword_2EE8F8);
  BOOL v46 = sub_1DC450();
  uint64_t v47 = v115;
  sub_1E0924(v2, v115, (uint64_t (*)(void))type metadata accessor for TextLockup);
  if (!v46)
  {
    sub_1E098C(v47, (uint64_t (*)(void))type metadata accessor for TextLockup);
    uint64_t v53 = v120;
    goto LABEL_12;
  }
  uint64_t v48 = v47 + v38[6];
  uint64_t v49 = *(void *)v48;
  char v50 = *(unsigned char *)(v48 + 8);
  sub_10E0C(*(void *)v48, v50);
  char v51 = sub_40900(v49, v50);
  sub_C374(v49, v50);
  sub_1E098C(v47, (uint64_t (*)(void))type metadata accessor for TextLockup);
  double v52 = 0.0;
  uint64_t v53 = v120;
  if (v51) {
LABEL_12:
  }
    double v52 = 1.0;
  sub_B678((uint64_t)v26, (uint64_t)v28, &qword_2F5340);
  *(double *)&v28[*(int *)(v114 + 36)] = v52;
  sub_B6DC((uint64_t)v26, &qword_2F5340);
  if (sub_1DC450())
  {
    sub_26C6D0();
    uint64_t v54 = sub_26C680();
    swift_release();
  }
  else
  {
    uint64_t v54 = 0;
  }
  uint64_t v55 = v2 + v38[6];
  uint64_t v56 = *(void *)v55;
  char v57 = *(unsigned char *)(v55 + 8);
  sub_10E0C(*(void *)v55, v57);
  char v58 = sub_40900(v56, v57);
  sub_C374(v56, v57);
  sub_B678((uint64_t)v28, (uint64_t)v30, &qword_2F5348);
  uint64_t v59 = &v30[*(int *)(v116 + 36)];
  *(void *)uint64_t v59 = v54;
  v59[8] = v58 & 1;
  sub_B6DC((uint64_t)v28, &qword_2F5348);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = v118;
  sub_B678((uint64_t)v30, v118, &qword_2F5350);
  uint64_t v62 = (uint64_t *)(v61 + *(int *)(v117 + 36));
  *uint64_t v62 = KeyPath;
  v62[1] = 0x3FE0000000000000;
  sub_B6DC((uint64_t)v30, &qword_2F5350);
  uint64_t v63 = swift_getKeyPath();
  sub_B678(v61, v44, &qword_2F5358);
  uint64_t v64 = v44 + *(int *)(v125 + 36);
  *(void *)uint64_t v64 = v63;
  *(void *)(v64 + 8) = 6;
  *(unsigned char *)(v64 + 16) = 0;
  sub_B6DC(v61, &qword_2F5358);
  uint64_t v65 = v122;
  int v66 = v119;
  (*(void (**)(char *, void, void *))(v122 + 104))(v119, enum case for DynamicTypeSize.small(_:), v53);
  uint64_t v67 = *(void **)(v65 + 16);
  uint64_t v68 = v53;
  uint64_t v69 = v121;
  ((void (*)(char *, uint64_t, void *))v67)(v121, v2 + v38[18], v53);
  sub_1E16C0(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D350();
  if (result)
  {
    uint64_t v71 = v66;
    uint64_t v120 = v67;
    uint64_t v72 = v123;
    char v73 = v105;
    uint64_t v74 = v69;
    uint64_t v75 = &v105[*(int *)(v123 + 48)];
    uint64_t v76 = *(void (**)(char *, char *, void *))(v65 + 32);
    v76(v105, v71, v68);
    uint64_t v77 = v65;
    uint64_t v78 = v75;
    v76(v75, v74, v68);
    uint64_t v79 = *(int *)(v72 + 48);
    uint64_t v80 = v68;
    uint64_t v81 = v107;
    uint64_t v82 = &v107[v79];
    uint64_t v83 = (void (*)(char *, char *, void *))v120;
    ((void (*)(char *, char *, void *))v120)(v107, v73, v80);
    v83(v82, v78, v80);
    uint64_t v84 = (uint64_t)v104;
    v76(v104, v81, v80);
    uint64_t v85 = *(void (**)(char *, void *))(v77 + 8);
    v85(v82, v80);
    uint64_t v86 = &v81[*(int *)(v123 + 48)];
    v76(v81, v73, v80);
    v76(v86, v78, v80);
    uint64_t v87 = v108;
    v76((char *)(v84 + *(int *)(v108 + 36)), v86, v80);
    v85(v81, v80);
    uint64_t v88 = v106;
    sub_19CC4(v84, v106, &qword_2EB030);
    unint64_t v89 = sub_1E0588();
    uint64_t v90 = sub_7C18(&qword_2EB118, &qword_2EB030);
    uint64_t v91 = v100;
    uint64_t v92 = (uint64_t)v124;
    uint64_t v93 = v125;
    sub_26BD90();
    sub_B6DC(v88, &qword_2EB030);
    sub_B6DC(v92, &qword_2F5360);
    uint64_t v94 = v109;
    sub_26B5E0();
    uint64_t v126 = v93;
    uint64_t v127 = v87;
    unint64_t v128 = v89;
    uint64_t v129 = v90;
    swift_getOpaqueTypeConformance2();
    unsigned int v95 = v98;
    uint64_t v96 = v103;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v94, v111);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v91, v96);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v99 + 32))(v112, v95, v101);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v298 = a2;
  uint64_t v260 = sub_4A98(&qword_2F53B8);
  uint64_t v256 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v254 = (char *)&v251 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = sub_4A98(&qword_2F53C0);
  uint64_t v258 = *(void *)(v261 - 8);
  __chkstk_darwin(v261);
  uint64_t v255 = (char *)&v251 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_4A98(&qword_2EE900);
  uint64_t v252 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  uint64_t v257 = (char *)&v251 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EE908);
  __chkstk_darwin(v6 - 8);
  uint64_t v262 = (uint64_t)&v251 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = sub_4A98(&qword_2F53C8);
  __chkstk_darwin(v265);
  uint64_t v263 = (uint64_t)&v251 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = sub_4A98(&qword_2F53D0);
  uint64_t v9 = __chkstk_darwin(v278);
  v259 = (char *)&v251 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v266 = (uint64_t)&v251 - v11;
  uint64_t v276 = sub_4A98(&qword_2F53D8);
  __chkstk_darwin(v276);
  uint64_t v277 = (uint64_t)&v251 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EBFC0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v253 = (uint64_t)&v251 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v251 = (char *)&v251 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v273 = (uint64_t)&v251 - v19;
  __chkstk_darwin(v18);
  uint64_t v267 = (char *)&v251 - v20;
  uint64_t v21 = sub_4A98(&qword_2F53E0);
  uint64_t v271 = *(void *)(v21 - 8);
  uint64_t v272 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v269 = (char *)&v251 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v268 = (uint64_t)&v251 - v24;
  uint64_t v274 = sub_4A98(&qword_2F53E8);
  __chkstk_darwin(v274);
  char v26 = (char *)&v251 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2F53F0);
  uint64_t v296 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v275 = (char *)&v251 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_4A98(&qword_2F53F8);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  v295 = (char *)&v251 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v251 - v32;
  uint64_t v34 = sub_26AC80();
  __chkstk_darwin(v34 - 8);
  double v305 = (char *)&v251 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_26C700();
  uint64_t v303 = *(void *)(v36 - 8);
  uint64_t v304 = v36;
  __chkstk_darwin(v36);
  uint64_t v302 = (uint64_t)&v251 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v38 - 8);
  uint64_t v299 = (uint64_t)&v251 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_26B910();
  uint64_t v290 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v291 = (char *)&v251 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v300 = sub_4A98(&qword_2EE910);
  uint64_t v42 = __chkstk_darwin(v300);
  v288 = (char *)&v251 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  *((void *)&v282 + 1) = (char *)&v251 - v44;
  uint64_t v45 = sub_4A98(&qword_2EE918);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v286 = (uint64_t)&v251 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  unint64_t v281 = (char **)((char *)&v251 - v48);
  uint64_t v301 = sub_4A98(&qword_2F5400);
  uint64_t v49 = __chkstk_darwin(v301);
  uint64_t v287 = (uint64_t)&v251 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  *(void *)&long long v282 = (char *)&v251 - v51;
  uint64_t v52 = sub_4A98(&qword_2F5408);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v285 = (char *)&v251 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v284 = (uint64_t)&v251 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v280 = (uint64_t)&v251 - v59;
  __chkstk_darwin(v58);
  uint64_t v279 = (uint64_t)&v251 - v60;
  uint64_t v61 = sub_4A98(&qword_2F5410);
  uint64_t v62 = __chkstk_darwin(v61 - 8);
  char v293 = (char *)&v251 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v294 = (uint64_t)&v251 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v292 = (uint64_t)&v251 - v67;
  __chkstk_darwin(v66);
  uint64_t v69 = (char *)&v251 - v68;
  uint64_t v70 = type metadata accessor for TextLockup();
  uint64_t v71 = v53;
  uint64_t v72 = (int *)v70;
  uint64_t v73 = *(int *)(v70 + 44);
  uint64_t v310 = (int *)v70;
  uint64_t v311 = a1;
  uint64_t v74 = (uint64_t *)(a1 + v73);
  uint64_t v75 = v74[1];
  char v308 = v69;
  uint64_t v309 = v33;
  uint64_t v306 = v52;
  uint64_t v307 = v71;
  uint64_t v297 = v27;
  uint64_t v283 = v40;
  if (v75)
  {
    uint64_t v76 = *v74;
    unsigned int v77 = *(unsigned __int8 *)(v311 + v72[10]);
    uint64_t v78 = v75;
    swift_bridgeObjectRetain();
    uint64_t v289 = v26;
    if (v77 >= 3)
    {
      sub_26B7F0();
    }
    else
    {
      sub_26B950();
      uint64_t v80 = v290;
      uint64_t v79 = v291;
      (*(void (**)(char *, void, uint64_t))(v290 + 104))(v291, enum case for Font.Leading.tight(_:), v40);
      sub_26B930();
      swift_release();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v40);
    }
    *((void *)&v270 + 1) = v78;
    uint64_t v83 = sub_26BA80();
    uint64_t v85 = v84;
    char v87 = v86;
    swift_bridgeObjectRelease();
    swift_release();
    char v88 = v87 & 1;
    sub_26B890();
    uint64_t v89 = sub_26BA20();
    *(void *)&long long v270 = v76;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    char v94 = v93 & 1;
    sub_3A380(v83, v85, v88);
    swift_bridgeObjectRelease();
    uint64_t v95 = v299;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v299);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v96 = sub_26C1C0();
    swift_release();
    sub_1E098C(v95, type metadata accessor for ColorConstants);
    *(void *)&long long v322 = v96;
    uint64_t v97 = sub_26BA40();
    uint64_t v99 = v98;
    uint64_t v101 = v100;
    LOBYTE(v95) = v102 & 1;
    sub_3A380(v90, v92, v94);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v103 = v302;
    sub_41340(v302);
    uint64_t v105 = v303;
    uint64_t v104 = v304;
    uint64_t v106 = (uint64_t)v305;
    (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v305, v103, v304);
    uint64_t v107 = *((void *)&v282 + 1);
    sub_1E0924(v106, *((void *)&v282 + 1) + *(int *)(v300 + 36), (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)uint64_t v107 = v97;
    *(void *)(v107 + 8) = v99;
    *(unsigned char *)(v107 + 16) = v95;
    *(void *)(v107 + 24) = v101;
    sub_45370(v97, v99, v95);
    swift_bridgeObjectRetain();
    sub_1E098C(v106, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v104);
    uint64_t v108 = v99;
    uint64_t v72 = v310;
    uint64_t v109 = v311;
    sub_3A380(v97, v108, v95);
    swift_bridgeObjectRelease();
    uint64_t v110 = (uint64_t)v281;
    sub_B0998(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v281, 0.0, 1, 0.0, 1, *(void *)(v109 + v72[16]), *(void *)(v109 + v72[16] + 8));
    sub_B6DC(v107, &qword_2EE910);
    LOBYTE(v101) = *(unsigned char *)(v109 + v72[17]);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v112 = v282;
    sub_B678(v110, v282, &qword_2EE918);
    uint64_t v113 = v112 + *(int *)(v301 + 36);
    *(void *)uint64_t v113 = KeyPath;
    *(unsigned char *)(v113 + 8) = v101;
    sub_B6DC(v110, &qword_2EE918);
    long long v322 = v270;
    sub_1E09F4();
    sub_CC78();
    uint64_t v114 = v280;
    sub_26BE40();
    sub_B6DC(v112, &qword_2F5400);
    uint64_t v115 = v114;
    uint64_t v116 = v279;
    sub_19CC4(v115, v279, &qword_2F5408);
    uint64_t v117 = v116;
    uint64_t v118 = (uint64_t)v308;
    sub_19CC4(v117, (uint64_t)v308, &qword_2F5408);
    uint64_t v52 = v306;
    uint64_t v81 = *(char ***)(v307 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v81)(v118, 0, 1, v306);
    uint64_t v82 = (uint64_t)v309;
    uint64_t v27 = v297;
    char v26 = v289;
  }
  else
  {
    uint64_t v81 = *(char ***)(v71 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v81)(v69, 1, 1, v52);
    uint64_t v82 = (uint64_t)v33;
  }
  uint64_t v119 = (uint64_t *)(v311 + v72[12]);
  uint64_t v120 = v119[2];
  if ((~v120 & 0xF000000000000007) != 0)
  {
    uint64_t v123 = *v119;
    uint64_t v122 = v119[1];
    uint64_t v280 = v119[2];
    unint64_t v281 = v81;
    *(void *)&long long v282 = v123;
    *((void *)&v282 + 1) = v122;
    if (v120 < 0)
    {
      uint64_t v137 = v120 & 0x7FFFFFFFFFFFFFFFLL;
      sub_1E0B28(v123, v122, v120);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v138 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
      swift_retain();
      uint64_t v139 = v311;
      uint64_t v140 = sub_1DF350();
      uint64_t v141 = swift_getKeyPath();
      *(void *)&long long v322 = v123;
      *((void *)&v322 + 1) = v122;
      *(void *)&long long v323 = v138;
      *((void *)&v323 + 1) = v137;
      *(void *)&long long v324 = v141;
      *((void *)&v324 + 1) = v140;
      uint64_t v142 = v253;
      sub_B678(v139 + v72[14], v253, &qword_2EBFC0);
      uint64_t v143 = sub_26B820();
      uint64_t v144 = *(void *)(v143 - 8);
      int v145 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143);
      uint64_t v289 = (char *)v137;
      if (v145 == 1)
      {
        if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
        {
          uint64_t v146 = 1;
          uint64_t v147 = (uint64_t)v251;
          uint64_t v148 = v252;
        }
        else
        {
          uint64_t v147 = (uint64_t)v251;
          (*(void (**)(char *, void, uint64_t))(v144 + 104))(v251, enum case for Font.Design.serif (_:), v143);
          uint64_t v146 = 0;
          uint64_t v148 = v252;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v147, v146, 1, v143);
        sub_B6DC(v142, &qword_2EBFC0);
      }
      else
      {
        uint64_t v147 = (uint64_t)v251;
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v251, v142, v143);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v144 + 56))(v147, 0, 1, v143);
        uint64_t v148 = v252;
      }
      uint64_t v182 = sub_4A98(&qword_2F5430);
      unint64_t v183 = sub_1E0B44();
      uint64_t v184 = v254;
      sub_26BC30();
      sub_B6DC(v147, &qword_2EBFC0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_26B840();
      *(void *)&long long v322 = v182;
      *((void *)&v322 + 1) = v183;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v186 = v255;
      uint64_t v187 = v260;
      sub_26BC40();
      (*(void (**)(char *, uint64_t))(v256 + 8))(v184, v187);
      uint64_t v189 = v310;
      uint64_t v188 = v311;
      *(void *)&long long v322 = v187;
      *((void *)&v322 + 1) = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      uint64_t v190 = v257;
      uint64_t v191 = v261;
      sub_26BFF0();
      (*(void (**)(char *, uint64_t))(v258 + 8))(v186, v191);
      uint64_t v192 = v262;
      double v193 = sub_B0A08(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v262, 0.0, 1, 0.0, 1, *(void *)(v188 + v189[16]), *(void *)(v188 + v189[16] + 8));
      (*(void (**)(char *, uint64_t, double))(v148 + 8))(v190, v264, v193);
      LOBYTE(v186) = *(unsigned char *)(v188 + v189[17]);
      uint64_t v194 = swift_getKeyPath();
      uint64_t v195 = v263;
      sub_B678(v192, v263, &qword_2EE908);
      uint64_t v196 = v195 + *(int *)(v265 + 36);
      *(void *)uint64_t v196 = v194;
      *(unsigned char *)(v196 + 8) = (_BYTE)v186;
      sub_B6DC(v192, &qword_2EE908);
      uint64_t v197 = *((void *)&v282 + 1);
      uint64_t v198 = v282;
      long long v322 = v282;
      sub_1E0C38();
      sub_CC78();
      uint64_t v199 = (uint64_t)v259;
      sub_26BE40();
      sub_B6DC(v195, &qword_2F53C8);
      uint64_t v200 = v266;
      sub_19CC4(v199, v266, &qword_2F53D0);
      sub_B678(v200, v277, &qword_2F53D0);
      swift_storeEnumTagMultiPayload();
      sub_1E0DF8();
      sub_1E103C();
      uint64_t v201 = v275;
      sub_26B2F0();
      sub_1E10E8(v198, v197, v280);
      uint64_t v72 = v189;
      swift_release();
      sub_B6DC(v200, &qword_2F53D0);
      uint64_t v181 = (uint64_t)v201;
      uint64_t v81 = v281;
      uint64_t v27 = v297;
      uint64_t v82 = (uint64_t)v309;
    }
    else
    {
      if (v122)
      {
        uint64_t v289 = v26;
        uint64_t v124 = v120;
        sub_1DA518(v123, v122, v120);
        sub_1DA518(v123, v122, v124);
        uint64_t v125 = v311;
        sub_1DF350();
        uint64_t v126 = sub_26BA80();
        uint64_t v128 = v127;
        DWORD2(v270) = v129;
        uint64_t v279 = v130;
        swift_release();
        sub_1E10E8(v123, v122, v124);
        uint64_t v131 = v125 + v72[14];
        uint64_t v132 = v273;
        sub_B678(v131, v273, &qword_2EBFC0);
        uint64_t v133 = sub_26B820();
        uint64_t v134 = *(void *)(v133 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133) == 1)
        {
          if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
          {
            uint64_t v135 = 1;
            uint64_t v136 = (uint64_t)v267;
          }
          else
          {
            uint64_t v136 = (uint64_t)v267;
            (*(void (**)(char *, void, uint64_t))(v134 + 104))(v267, enum case for Font.Design.serif (_:), v133);
            uint64_t v135 = 0;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v136, v135, 1, v133);
          sub_B6DC(v273, &qword_2EBFC0);
        }
        else
        {
          uint64_t v136 = (uint64_t)v267;
          (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v267, v273, v133);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v134 + 56))(v136, 0, 1, v133);
        }
        char v151 = BYTE8(v270) & 1;
        uint64_t v152 = sub_26BA10();
        uint64_t v154 = v153;
        char v156 = v155 & 1;
        sub_3A380(v126, v128, v151);
        swift_bridgeObjectRelease();
        sub_B6DC(v136, &qword_2EBFC0);
        sub_26B840();
        uint64_t v157 = sub_26BA20();
        uint64_t v159 = v158;
        char v161 = v160 & 1;
        sub_3A380(v152, v154, v156);
        swift_bridgeObjectRelease();
        uint64_t v162 = v310;
        uint64_t v163 = sub_26BA90();
        uint64_t v165 = v164;
        char v167 = v166 & 1;
        sub_3A380(v157, v159, v161);
        swift_bridgeObjectRelease();
        LODWORD(v322) = sub_26B450();
        uint64_t v168 = sub_26BA40();
        uint64_t v170 = v169;
        uint64_t v172 = v171;
        char v174 = v173 & 1;
        uint64_t v175 = v165;
        uint64_t v72 = v162;
        sub_3A380(v163, v175, v167);
        uint64_t v176 = v311;
        swift_bridgeObjectRelease();
        sub_AFD90(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v331, 0.0, 1, 0.0, 1, *(void *)(v176 + v162[16]), *(void *)(v176 + v162[16] + 8), v168, v170, v174, v172);
        sub_3A380(v168, v170, v174);
        swift_bridgeObjectRelease();
        LOBYTE(v168) = *(unsigned char *)(v176 + v162[17]);
        uint64_t v177 = swift_getKeyPath();
        long long v328 = v337;
        long long v329 = v338;
        v330[0] = v339;
        long long v324 = v333;
        long long v325 = v334;
        long long v326 = v335;
        long long v327 = v336;
        long long v322 = v331;
        long long v323 = v332;
        *(void *)&v330[1] = v177;
        BYTE8(v330[1]) = v168;
        long long v319 = v337;
        long long v320 = v338;
        v321[0] = v339;
        *(_OWORD *)((char *)v321 + 9) = *(_OWORD *)((char *)v330 + 9);
        long long v315 = v333;
        long long v316 = v334;
        long long v317 = v335;
        long long v318 = v336;
        long long v313 = v331;
        long long v314 = v332;
        long long v312 = v282;
        sub_4A98(&qword_2F5470);
        sub_1E0F18();
        sub_CC78();
        uint64_t v178 = (uint64_t)v269;
        sub_26BE40();
        sub_1E10FC((uint64_t)&v322);
        uint64_t v179 = v268;
        sub_19CC4(v178, v268, &qword_2F53E0);
        char v26 = v289;
        sub_19CC4(v179, (uint64_t)v289, &qword_2F53E0);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v271 + 56))(v26, 0, 1, v272);
        uint64_t v149 = (uint64_t)v309;
        uint64_t v52 = v306;
        uint64_t v150 = v297;
      }
      else
      {
        uint64_t v149 = v82;
        uint64_t v150 = v27;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v271 + 56))(v26, 1, 1, v272);
      }
      sub_B678((uint64_t)v26, v277, &qword_2F53E8);
      swift_storeEnumTagMultiPayload();
      sub_1E0DF8();
      sub_1E103C();
      uint64_t v180 = v275;
      sub_26B2F0();
      sub_1E10E8(v282, *((uint64_t *)&v282 + 1), v280);
      sub_B6DC((uint64_t)v26, &qword_2F53E8);
      uint64_t v181 = (uint64_t)v180;
      uint64_t v81 = v281;
      uint64_t v27 = v150;
      uint64_t v82 = v149;
    }
    sub_19CC4(v181, v82, &qword_2F53F0);
    uint64_t v121 = 0;
  }
  else
  {
    uint64_t v121 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v296 + 56))(v82, v121, 1, v27);
  uint64_t v202 = (uint64_t *)(v311 + v72[13]);
  if (v202[1])
  {
    uint64_t v203 = v202[1];
    uint64_t v204 = *v202;
    unsigned int v205 = *(unsigned __int8 *)(v311 + v72[10]);
    swift_bridgeObjectRetain();
    uint64_t v206 = (void (**)(char *, void, uint64_t))(v290 + 104);
    uint64_t v207 = (void (**)(char *, uint64_t))(v290 + 8);
    if (v205 >= 3) {
      sub_26B7F0();
    }
    else {
      sub_26B7E0();
    }
    uint64_t v211 = v291;
    uint64_t v212 = v283;
    (*v206)(v291, enum case for Font.Leading.tight(_:), v283);
    sub_26B930();
    swift_release();
    (*v207)(v211, v212);
    uint64_t v296 = v203;
    uint64_t v213 = sub_26BA80();
    uint64_t v215 = v214;
    LOBYTE(v212) = v216;
    swift_bridgeObjectRelease();
    swift_release();
    char v217 = v212 & 1;
    sub_26B8A0();
    uint64_t v218 = sub_26BA20();
    uint64_t v297 = v204;
    uint64_t v219 = v218;
    uint64_t v221 = v220;
    LOBYTE(v212) = v222 & 1;
    sub_3A380(v213, v215, v217);
    swift_bridgeObjectRelease();
    uint64_t v223 = v299;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v299);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v224 = sub_26C1C0();
    swift_release();
    sub_1E098C(v223, type metadata accessor for ColorConstants);
    *(void *)&long long v322 = v224;
    uint64_t v225 = sub_26BA40();
    uint64_t v227 = v226;
    uint64_t v299 = v228;
    char v230 = v229 & 1;
    sub_3A380(v219, v221, v212);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v231 = v302;
    sub_41340(v302);
    uint64_t v233 = v303;
    uint64_t v232 = v304;
    uint64_t v234 = (uint64_t)v305;
    (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v305, v231, v304);
    uint64_t v235 = (uint64_t)v288;
    sub_1E0924(v234, (uint64_t)&v288[*(int *)(v300 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)uint64_t v235 = v225;
    *(void *)(v235 + 8) = v227;
    *(unsigned char *)(v235 + 16) = v230;
    *(void *)(v235 + 24) = v299;
    sub_45370(v225, v227, v230);
    swift_bridgeObjectRetain();
    sub_1E098C(v234, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v231, v232);
    sub_3A380(v225, v227, v230);
    swift_bridgeObjectRelease();
    uint64_t v237 = v310;
    uint64_t v236 = v311;
    uint64_t v238 = v286;
    sub_B0998(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v286, 0.0, 1, 0.0, 1, *(void *)(v311 + v310[16]), *(void *)(v311 + v310[16] + 8));
    sub_B6DC(v235, &qword_2EE910);
    LOBYTE(v237) = *(unsigned char *)(v236 + v237[17]);
    uint64_t v239 = swift_getKeyPath();
    uint64_t v240 = v287;
    sub_B678(v238, v287, &qword_2EE918);
    uint64_t v241 = v240 + *(int *)(v301 + 36);
    *(void *)uint64_t v241 = v239;
    *(unsigned char *)(v241 + 8) = (_BYTE)v237;
    sub_B6DC(v238, &qword_2EE918);
    *(void *)&long long v322 = v297;
    *((void *)&v322 + 1) = v296;
    sub_1E09F4();
    sub_CC78();
    uint64_t v242 = v285;
    sub_26BE40();
    sub_B6DC(v240, &qword_2F5400);
    uint64_t v243 = (uint64_t)v242;
    uint64_t v244 = v284;
    sub_19CC4(v243, v284, &qword_2F5408);
    uint64_t v208 = v292;
    sub_19CC4(v244, v292, &qword_2F5408);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v307 + 56))(v208, 0, 1, v306);
    uint64_t v210 = (uint64_t)v295;
    uint64_t v209 = (uint64_t)v309;
  }
  else
  {
    uint64_t v208 = v292;
    uint64_t v209 = v82;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81)(v292, 1, 1, v52);
    uint64_t v210 = (uint64_t)v295;
  }
  uint64_t v246 = (uint64_t)v293;
  uint64_t v245 = v294;
  uint64_t v247 = (uint64_t)v308;
  sub_B678((uint64_t)v308, v294, &qword_2F5410);
  sub_B678(v209, v210, &qword_2F53F8);
  sub_B678(v208, v246, &qword_2F5410);
  uint64_t v248 = v298;
  sub_B678(v245, v298, &qword_2F5410);
  uint64_t v249 = sub_4A98(&qword_2F5418);
  sub_B678(v210, v248 + *(int *)(v249 + 48), &qword_2F53F8);
  sub_B678(v246, v248 + *(int *)(v249 + 64), &qword_2F5410);
  sub_B6DC(v208, &qword_2F5410);
  sub_B6DC(v209, &qword_2F53F8);
  sub_B6DC(v247, &qword_2F5410);
  sub_B6DC(v246, &qword_2F5410);
  sub_B6DC(v210, &qword_2F53F8);
  return sub_B6DC(v245, &qword_2F5410);
}

uint64_t sub_1DF350()
{
  uint64_t v1 = sub_4A98(&qword_2EBFC0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v36 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v37 = sub_26B910();
  uint64_t v19 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TextLockup();
  switch(*(unsigned char *)(v0 + *(int *)(v22 + 40)))
  {
    case 1:
      sub_26B8F0();
      goto LABEL_22;
    case 2:
      sub_26B810();
      goto LABEL_22;
    case 3:
      sub_26B7D0();
      goto LABEL_22;
    case 4:
      sub_26B840();
      sub_B678(v0 + *(int *)(v22 + 56), (uint64_t)v16, &qword_2EBFC0);
      uint64_t v23 = sub_26B820();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v16, 1, v23) == 1)
      {
        if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
        {
          uint64_t v25 = 1;
        }
        else
        {
          (*(void (**)(char *, void, uint64_t))(v24 + 104))(v18, enum case for Font.Design.serif (_:), v23);
          uint64_t v25 = 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v18, v25, 1, v23);
        sub_B6DC((uint64_t)v16, &qword_2EBFC0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v16, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
      }
      sub_26B8D0();
      sub_B6DC((uint64_t)v18, &qword_2EBFC0);
      goto LABEL_22;
    case 5:
      sub_26B840();
      sub_B678(v0 + *(int *)(v22 + 56), (uint64_t)v10, &qword_2EBFC0);
      uint64_t v26 = sub_26B820();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26) == 1)
      {
        if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
        {
          uint64_t v28 = 1;
        }
        else
        {
          (*(void (**)(char *, void, uint64_t))(v27 + 104))(v13, enum case for Font.Design.serif (_:), v26);
          uint64_t v28 = 0;
        }
        uint64_t v32 = v37;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v13, v28, 1, v26);
        sub_B6DC((uint64_t)v10, &qword_2EBFC0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v13, v10, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v13, 0, 1, v26);
        uint64_t v32 = v37;
      }
      sub_26B8D0();
      uint64_t v33 = (uint64_t)v13;
      goto LABEL_29;
    case 6:
      sub_26B840();
      sub_B678(v0 + *(int *)(v22 + 56), (uint64_t)v4, &qword_2EBFC0);
      uint64_t v29 = sub_26B820();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v4, 1, v29) == 1)
      {
        if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
        {
          uint64_t v31 = 1;
        }
        else
        {
          (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, enum case for Font.Design.serif (_:), v29);
          uint64_t v31 = 0;
        }
        uint64_t v32 = v37;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v7, v31, 1, v29);
        sub_B6DC((uint64_t)v4, &qword_2EBFC0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v7, v4, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v7, 0, 1, v29);
        uint64_t v32 = v37;
      }
      sub_26B8D0();
      uint64_t v33 = (uint64_t)v7;
LABEL_29:
      sub_B6DC(v33, &qword_2EBFC0);
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for Font.Leading.tight(_:), v32);
      break;
    default:
      sub_26B900();
LABEL_22:
      uint64_t v32 = v37;
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for Font.Leading.tight(_:), v37);
      break;
  }
  uint64_t v34 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v32);
  return v34;
}

unint64_t sub_1DFA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v65 = sub_2695D0();
  uint64_t v60 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v59 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EA130);
  __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F5498);
  __chkstk_darwin(v12 - 8);
  uint64_t v64 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4A98(&qword_2F54A0);
  uint64_t v62 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v61 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F54A8);
  __chkstk_darwin(v15 - 8);
  uint64_t v67 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2F54B0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v70 = v17;
  uint64_t v71 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2F54B8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2F54C0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_269600();
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_2695F0();
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  sub_2695E0();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v73 = a4;
  unint64_t v31 = sub_1E15CC();
  swift_retain();
  sub_269590();
  sub_26A0B0();
  unint64_t v54 = v31;
  uint64_t v53 = v30;
  uint64_t v32 = v70;
  uint64_t v55 = a5;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  uint64_t v57 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
  uint64_t v33 = v67;
  uint64_t v56 = v24;
  sub_26A090();
  uint64_t v34 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v33, 1, v32) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v56);
    uint64_t v35 = &qword_2F54A8;
    uint64_t v36 = (uint64_t)v33;
    return sub_B6DC(v36, v35);
  }
  uint64_t v51 = v27;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v52 = v20;
  v38(v20, v33, v32);
  uint64_t v73 = 0x3F2B2E282A5C2A5CLL;
  unint64_t v74 = 0xEF292A5C2A5C2829;
  uint64_t v39 = sub_269920();
  uint64_t v40 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v63, 1, 1, v39);
  sub_1E16C0(&qword_2F54D0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_CC78();
  uint64_t v41 = v64;
  uint64_t v42 = v65;
  sub_269650();
  uint64_t v43 = (uint64_t)v41;
  sub_B6DC(v40, &qword_2EA130);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v41, 1, v66);
  uint64_t v45 = v57;
  if (v44 == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v32);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v51, v56);
    uint64_t v35 = &qword_2F5498;
    uint64_t v36 = v43;
    return sub_B6DC(v36, v35);
  }
  uint64_t v46 = v61;
  sub_19CC4(v43, v61, &qword_2F54A0);
  sub_26A0A0();
  unint64_t v47 = sub_26D4D0();
  unint64_t result = sub_26D4D0();
  if (result >> 14 < v47 >> 14)
  {
    __break(1u);
  }
  else
  {
    sub_26D570();
    sub_26D490();
    swift_bridgeObjectRelease();
    sub_2695F0();
    uint64_t v48 = v59;
    sub_2695E0();
    uint64_t v49 = swift_getKeyPath();
    *(&v50 - 2) = __chkstk_darwin(v49);
    swift_getKeyPath();
    uint64_t v73 = v58;
    swift_retain();
    sub_269590();
    sub_7C18(&qword_2F54D8, &qword_2F54A0);
    sub_2695B0();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v48, v42);
    sub_B6DC(v46, &qword_2F54A0);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v70);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v51, v56);
  }
  return result;
}

uint64_t sub_1E0324()
{
  return sub_26D360() & 1;
}

uint64_t sub_1E0380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = sub_2695D0();
  uint64_t v24 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  sub_1DFA0C(*v1, v9, v1[3], v1[2], (uint64_t)&v23 - v7);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v11 = sub_26BAF0();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v26 = v10;
  uint64_t v27 = v9;
  sub_CC78();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_26BA50();
  uint64_t v18 = v17;
  LOBYTE(v2) = v19;
  uint64_t v23 = v20;
  sub_3A380(v11, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v24);
  uint64_t v22 = v25;
  *uint64_t v25 = v16;
  v22[1] = v18;
  *((unsigned char *)v22 + 16) = v2 & 1;
  v22[3] = v23;
  return result;
}

unint64_t sub_1E0588()
{
  unint64_t result = qword_2F5380;
  if (!qword_2F5380)
  {
    sub_7B0C(&qword_2F5360);
    sub_1E0628();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5380);
  }
  return result;
}

unint64_t sub_1E0628()
{
  unint64_t result = qword_2F5388;
  if (!qword_2F5388)
  {
    sub_7B0C(&qword_2F5358);
    sub_1E06C8();
    sub_7C18(&qword_2EC7C8, &qword_2EC7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5388);
  }
  return result;
}

unint64_t sub_1E06C8()
{
  unint64_t result = qword_2F5390;
  if (!qword_2F5390)
  {
    sub_7B0C(&qword_2F5350);
    sub_1E0768();
    sub_7C18(&qword_2EB600, &qword_2EB608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5390);
  }
  return result;
}

unint64_t sub_1E0768()
{
  unint64_t result = qword_2F5398;
  if (!qword_2F5398)
  {
    sub_7B0C(&qword_2F5348);
    sub_1E07E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5398);
  }
  return result;
}

unint64_t sub_1E07E4()
{
  unint64_t result = qword_2F53A0;
  if (!qword_2F53A0)
  {
    sub_7B0C(&qword_2F5340);
    sub_1E0884();
    sub_7C18(&qword_2EB0F8, &qword_2EB100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F53A0);
  }
  return result;
}

unint64_t sub_1E0884()
{
  unint64_t result = qword_2F53A8;
  if (!qword_2F53A8)
  {
    sub_7B0C(&qword_2EE8F8);
    sub_7C18(&qword_2F53B0, &qword_2EE8F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F53A8);
  }
  return result;
}

uint64_t sub_1E0924(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E098C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E09F4()
{
  unint64_t result = qword_2F5420;
  if (!qword_2F5420)
  {
    sub_7B0C(&qword_2F5400);
    sub_1E0A94();
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5420);
  }
  return result;
}

unint64_t sub_1E0A94()
{
  unint64_t result = qword_2F5428;
  if (!qword_2F5428)
  {
    sub_7B0C(&qword_2EE918);
    sub_1E0FD0((unint64_t *)&qword_2F1CB8, &qword_2EE910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5428);
  }
  return result;
}

uint64_t sub_1E0B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~a3 & 0xF000000000000007) != 0) {
    return sub_1DA518(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_1E0B44()
{
  unint64_t result = qword_2F5438;
  if (!qword_2F5438)
  {
    sub_7B0C(&qword_2F5430);
    sub_1E0BE4();
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5438);
  }
  return result;
}

unint64_t sub_1E0BE4()
{
  unint64_t result = qword_2F5440;
  if (!qword_2F5440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5440);
  }
  return result;
}

unint64_t sub_1E0C38()
{
  unint64_t result = qword_2F5448;
  if (!qword_2F5448)
  {
    sub_7B0C(&qword_2F53C8);
    sub_1E0CD8();
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5448);
  }
  return result;
}

unint64_t sub_1E0CD8()
{
  unint64_t result = qword_2F5450;
  if (!qword_2F5450)
  {
    sub_7B0C(&qword_2EE908);
    sub_7B0C(&qword_2F53C0);
    sub_7B0C(&qword_2F53B8);
    sub_7B0C(&qword_2F5430);
    sub_1E0B44();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5450);
  }
  return result;
}

unint64_t sub_1E0DF8()
{
  unint64_t result = qword_2F5458;
  if (!qword_2F5458)
  {
    sub_7B0C(&qword_2F53E8);
    sub_1E0E6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5458);
  }
  return result;
}

unint64_t sub_1E0E6C()
{
  unint64_t result = qword_2F5460;
  if (!qword_2F5460)
  {
    sub_7B0C(&qword_2F53E0);
    sub_1E0F18();
    sub_1E16C0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5460);
  }
  return result;
}

unint64_t sub_1E0F18()
{
  unint64_t result = qword_2F5468;
  if (!qword_2F5468)
  {
    sub_7B0C(&qword_2F5470);
    sub_1E0FD0(&qword_2F5478, &qword_2F5480);
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5468);
  }
  return result;
}

uint64_t sub_1E0FD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E103C()
{
  unint64_t result = qword_2F5488;
  if (!qword_2F5488)
  {
    sub_7B0C(&qword_2F53D0);
    sub_1E0C38();
    sub_1E16C0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5488);
  }
  return result;
}

uint64_t sub_1E10E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~a3 & 0xF000000000000007) != 0) {
    return sub_1DA7C4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1E10FC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for AccentedTextView()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for AccentedTextView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AccentedTextView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AccentedTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccentedTextView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccentedTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccentedTextView()
{
  return &type metadata for AccentedTextView;
}

unsigned char *storeEnumTagSinglePayload for TextLockup.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E1420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextLockup.Size()
{
  return &type metadata for TextLockup.Size;
}

uint64_t sub_1E1458()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1E153C()
{
  unint64_t result = qword_2F5490;
  if (!qword_2F5490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5490);
  }
  return result;
}

uint64_t sub_1E1590()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1E15AC()
{
}

unint64_t sub_1E15CC()
{
  unint64_t result = qword_2F54C8;
  if (!qword_2F54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F54C8);
  }
  return result;
}

void sub_1E1620()
{
}

uint64_t sub_1E1648()
{
  return 8;
}

uint64_t sub_1E1654()
{
  return swift_release();
}

uint64_t sub_1E165C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1E166C()
{
  return sub_26D300();
}

void *sub_1E16B4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1E16C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1E1708()
{
  return &protocol witness table for Text;
}

uint64_t View.frame(fitting:withAspectRatio:)()
{
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();

  return sub_26BFA0();
}

uint64_t sub_1E17BC()
{
  return swift_getWitnessTable();
}

uint64_t BuyButton.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CC4(a1, a2, &qword_2EDB38);
}

uint64_t BuyButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v35 = (uint64_t)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2EDB38) - 8;
  __chkstk_darwin(v34);
  uint64_t v33 = (uint64_t)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26B980();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ButtonViewModel(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[0] = (uint64_t)v11;
  uint64_t v12 = sub_4A98(&qword_2F54E8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  char v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E86A4(v1, (uint64_t)v11, type metadata accessor for ButtonViewModel);
  *(void *)&long long v39 = 0x4020000000000000;
  uint64_t v16 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for Font.TextStyle.subheadline(_:), v5);
  sub_4F928();
  sub_26A810();
  uint64_t v18 = type metadata accessor for ButtonView();
  *(void *)&long long v39 = 0x3FF8000000000000;
  v17(v8, v16, v5);
  sub_26A810();
  char v19 = (uint64_t *)&v15[*(int *)(v18 + 24)];
  *char v19 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD8);
  swift_storeEnumTagMultiPayload();
  sub_1E8710(v32[0], (uint64_t)&v15[*(int *)(v18 + 28)], type metadata accessor for ButtonViewModel);
  uint64_t v20 = v33;
  sub_B678(v32[1], v33, &qword_2EDB38);
  uint64_t v21 = (uint64_t)&v15[*(int *)(v13 + 44)];
  uint64_t v22 = (int *)type metadata accessor for BuyButtonCaptionViewModifier(0);
  uint64_t v23 = (uint64_t *)(v21 + v22[6]);
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v21 + v22[7];
  type metadata accessor for CGSize(0);
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  sub_26C340();
  uint64_t v25 = v40;
  *(_OWORD *)uint64_t v24 = v39;
  *(void *)(v24 + 16) = v25;
  uint64_t v26 = v21 + v22[8];
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  sub_26C340();
  uint64_t v27 = v40;
  *(_OWORD *)uint64_t v26 = v39;
  *(void *)(v26 + 16) = v27;
  sub_1E2164(v21);
  LOBYTE(v26) = *(unsigned char *)(v20 + *(int *)(v34 + 48));
  sub_B6DC(v20, &qword_2EDB38);
  *(unsigned char *)(v21 + v22[5]) = v26;
  uint64_t v28 = v35;
  sub_1E1CB8(v35);
  uint64_t v29 = sub_4A98(&qword_2F54F0);
  uint64_t v30 = v36;
  sub_B678(v28, v36 + *(int *)(v29 + 36), &qword_2EA0C0);
  sub_B678((uint64_t)v15, v30, &qword_2F54E8);
  sub_B6DC(v28, &qword_2EA0C0);
  return sub_B6DC((uint64_t)v15, &qword_2F54E8);
}

uint64_t sub_1E1CB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_26CFD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 56;
  uint64_t v8 = sub_26CF60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 56;
  if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for ButtonViewModel(0) + 48)) != 1) {
    goto LABEL_8;
  }
  uint64_t v30 = v9;
  uint64_t v12 = sub_4A98(&qword_2EDB38);
  uint64_t v13 = *(int *)(v12 + 48);
  uint64_t v14 = (long long *)(v2 + *(int *)(type metadata accessor for BuyButtonExternals() + 28) + v13);
  long long v15 = v14[3];
  long long v36 = v14[2];
  v37[0] = v15;
  *(_DWORD *)((char *)v37 + 15) = *(_DWORD *)((char *)v14 + 63);
  long long v16 = v14[1];
  long long v34 = *v14;
  long long v35 = v16;
  sub_413B8((uint64_t)v31);
  if (!v32) {
    goto LABEL_8;
  }
  uint64_t v17 = v33;
  swift_bridgeObjectRelease();
  if (v17 == 5)
  {
    uint64_t v18 = (void *)(v2 + *(int *)(v12 + 44));
    sub_4ADC(v18, v18[3]);
    if ((sub_26A040() & 1) == 0
      && (sub_4ADC(v18, v18[3]), (char v19 = (void *)sub_269DD0()) != 0)
      && (uint64_t v20 = v19,
          id v21 = [v19 priceFormatted],
          v20,
          v21))
    {
      uint64_t v22 = sub_26D430();
      uint64_t v24 = v23;

      sub_4A98(&qword_2EE240);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_26F990;
      *(void *)(inited + 32) = 0x6563697270;
      *(void *)(inited + 40) = 0xE500000000000000;
      *(void *)(inited + 48) = v22;
      *(void *)(inited + 56) = v24;
      sub_9368(inited);
      sub_26CF50();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizerLookupStrategy.default(_:), v4);
      sub_26A1D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_26CF50();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizerLookupStrategy.default(_:), v4);
      sub_26A1D0();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v29 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a1, 0, 1, v29);
  }
  else
  {
LABEL_8:
    uint64_t v26 = sub_26A220();
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    return v27(a1, 1, 1, v26);
  }
}

uint64_t sub_1E2164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v3 = sub_4A98(&qword_2EDA00);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269810();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v6 = *(void *)(v46 + 64);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v44 = (char *)&v42 - v8;
  uint64_t v9 = sub_26CFD0();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26CF60();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EDB38);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = (void *)(v1 + *(int *)(v16 + 44));
  sub_4ADC(v19, v19[3]);
  char v20 = sub_269F30();
  sub_B678(v2, (uint64_t)v18, &qword_2EDB38);
  if ((v20 & 1) == 0)
  {
    sub_B6DC((uint64_t)v18, &qword_2EDB38);
    goto LABEL_6;
  }
  uint64_t v21 = *(int *)(v15 + 48);
  uint64_t v22 = *(void **)&v18[v21 + *(int *)(type metadata accessor for BuyButtonExternals() + 20)];
  if (!v22)
  {
    type metadata accessor for ProfileRestrictions();
    sub_1E725C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    uint64_t result = sub_26AD60();
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v23 = v22;
  sub_26A590();

  swift_release();
  swift_release();
  char v24 = v53;
  sub_B6DC((uint64_t)v18, &qword_2EDB38);
  if (v24)
  {
LABEL_6:
    sub_4ADC(v19, v19[3]);
    uint64_t v28 = (void *)sub_269DD0();
    if (v28)
    {
      uint64_t v29 = v28;
      unsigned int v30 = [v28 isPreorder];

      if (v30)
      {
        sub_4ADC(v19, v19[3]);
        uint64_t v31 = (uint64_t)v45;
        sub_269F70();
        uint64_t v33 = v46;
        uint64_t v32 = v47;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v31, 1, v47) != 1)
        {
          long long v36 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
          uint64_t v37 = v44;
          v36(v44, v31, v32);
          uint64_t v38 = v43;
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v43, v37, v32);
          unint64_t v39 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          uint64_t v40 = swift_allocObject();
          v36((char *)(v40 + v39), (uint64_t)v38, v32);
          uint64_t v27 = v52;
          sub_26A1C0();
          swift_release();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v32);
          goto LABEL_12;
        }
        sub_B6DC(v31, &qword_2EDA00);
      }
    }
    uint64_t v34 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v52, 1, 1, v34);
  }
  sub_26CF50();
  uint64_t v26 = v50;
  uint64_t v25 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v11, enum case for LocalizerLookupStrategy.default(_:), v51);
  uint64_t v27 = v52;
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
LABEL_12:
  uint64_t v41 = sub_26A220();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v27, 0, 1, v41);
}

uint64_t sub_1E2794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v52 = a2;
  uint64_t v53 = sub_4A98(&qword_2F5660);
  uint64_t v48 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v45 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_4A98(&qword_2F5668);
  __chkstk_darwin(v50);
  uint64_t v51 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v44 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BuyButtonCaptionViewModifier(0);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  uint64_t v10 = *(void *)(v42 + 64);
  __chkstk_darwin(v9);
  uint64_t v49 = sub_4A98(&qword_2F5670);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_26A220();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  sub_B678(v2, (uint64_t)v15, &qword_2EA0C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_B6DC((uint64_t)v15, &qword_2EA0C0);
    uint64_t v21 = v48;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
    id v23 = v45;
    uint64_t v24 = v53;
    v22(v45, v47, v53);
    v22(v51, (uint64_t)v23, v24);
    swift_storeEnumTagMultiPayload();
    sub_1E8540();
    sub_7C18(&qword_2F5690, &qword_2F5660);
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v24);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v41 = v19;
    v26(v19, v15, v16);
    sub_1E86A4(v2, (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BuyButtonCaptionViewModifier);
    unint64_t v27 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v28 = swift_allocObject();
    sub_1E8710((uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for BuyButtonCaptionViewModifier);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v12, v47, v53);
    uint64_t v29 = &v12[*(int *)(sub_4A98(&qword_2F5688) + 36)];
    *(void *)uint64_t v29 = sub_1E8C14;
    *((void *)v29 + 1) = 0;
    *((void *)v29 + 2) = sub_1E8778;
    *((void *)v29 + 3) = v28;
    uint64_t v30 = sub_1E2EA4();
    uint64_t v32 = v31;
    uint64_t v33 = &v12[*(int *)(v49 + 36)];
    uint64_t v34 = v44;
    sub_41378(v44);
    uint64_t v35 = v46;
    sub_1E86A4(v34, v46, type metadata accessor for SizeConstants.Environment);
    sub_1E8790(v34, type metadata accessor for SizeConstants);
    sub_1E8790(v35, type metadata accessor for SizeConstants.Spacing);
    *(void *)uint64_t v33 = sub_26B1C0();
    *((void *)v33 + 1) = 0x4000000000000000;
    v33[16] = 0;
    uint64_t v36 = (uint64_t)&v33[*(int *)(sub_4A98(&qword_2F56A8) + 44)];
    uint64_t v37 = v20;
    uint64_t v38 = (uint64_t)v41;
    sub_1E2F7C(v37, (uint64_t)v41, v36);
    unint64_t v39 = (uint64_t *)&v33[*(int *)(sub_4A98(&qword_2F56A0) + 36)];
    *unint64_t v39 = v30;
    v39[1] = v32;
    sub_B678((uint64_t)v12, (uint64_t)v51, &qword_2F5670);
    swift_storeEnumTagMultiPayload();
    sub_1E8540();
    sub_7C18(&qword_2F5690, &qword_2F5660);
    sub_26B2F0();
    sub_B6DC((uint64_t)v12, &qword_2F5670);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v38, v16);
  }
}

uint64_t sub_1E2E30()
{
  return sub_26C360();
}

uint64_t sub_1E2EA4()
{
  return sub_26C620();
}

uint64_t sub_1E2F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = type metadata accessor for BuyButtonCaptionViewModifier(0);
  uint64_t v6 = v5 - 8;
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v77 = *(void *)(v78 + 64);
  __chkstk_darwin(v5);
  uint64_t v76 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B910();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v64 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_26A220();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26A160();
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_4A98(&qword_2EBFC8) - 8;
  __chkstk_darwin(v65);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_4A98(&qword_2EBFD0) - 8;
  __chkstk_darwin(v67);
  char v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4A98(&qword_2F56B0) - 8;
  __chkstk_darwin(v66);
  uint64_t v63 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_4A98(&qword_2F56B8) - 8;
  uint64_t v21 = __chkstk_darwin(v70);
  id v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v72 = (uint64_t)&v52 - v24;
  uint64_t v25 = (uint64_t *)(a1 + *(int *)(v6 + 36));
  uint64_t v27 = v25[1];
  uint64_t v28 = v25[2];
  uint64_t v79 = *v25;
  uint64_t v26 = v79;
  uint64_t v80 = v27;
  uint64_t v81 = v28;
  sub_4A98(&qword_2EA370);
  sub_26C350();
  uint64_t v79 = v26;
  uint64_t v80 = v27;
  uint64_t v81 = v28;
  sub_26C350();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v62 = v79;
  int v61 = v80;
  uint64_t v60 = v81;
  int v59 = v82;
  uint64_t v58 = v83;
  uint64_t v57 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v13, v71, v55);
  uint64_t v29 = v53;
  sub_26A170();
  sub_26B890();
  uint64_t v30 = sub_26B820();
  uint64_t v31 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v64, 1, 1, v30);
  sub_26B8D0();
  sub_B6DC(v31, &qword_2EBFC0);
  uint64_t v32 = v73;
  uint64_t v33 = v74;
  uint64_t v34 = v75;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, enum case for Font.Leading.tight(_:), v75);
  uint64_t v35 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v68;
  uint64_t v37 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v17, v29, v69);
  unint64_t v39 = (uint64_t *)&v17[*(int *)(v65 + 44)];
  *unint64_t v39 = KeyPath;
  v39[1] = v35;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v37);
  uint64_t v40 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v41 = swift_getKeyPath();
  sub_B678((uint64_t)v17, (uint64_t)v19, &qword_2EBFC8);
  uint64_t v42 = (uint64_t *)&v19[*(int *)(v67 + 44)];
  *uint64_t v42 = v41;
  v42[1] = v40;
  sub_B6DC((uint64_t)v17, &qword_2EBFC8);
  uint64_t v43 = v63;
  sub_B678((uint64_t)v19, v63, &qword_2EBFD0);
  *(_WORD *)(v43 + *(int *)(v66 + 44)) = 1;
  sub_B6DC((uint64_t)v19, &qword_2EBFD0);
  uint64_t v44 = v76;
  sub_1E86A4(v56, v76, type metadata accessor for BuyButtonCaptionViewModifier);
  unint64_t v45 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v46 = swift_allocObject();
  sub_1E8710(v44, v46 + v45, type metadata accessor for BuyButtonCaptionViewModifier);
  sub_B678(v43, (uint64_t)v23, &qword_2F56B0);
  uint64_t v47 = &v23[*(int *)(v70 + 44)];
  *(void *)uint64_t v47 = sub_733C;
  *((void *)v47 + 1) = 0;
  *((void *)v47 + 2) = sub_1E89CC;
  *((void *)v47 + 3) = v46;
  sub_B6DC(v43, &qword_2F56B0);
  uint64_t v48 = v72;
  sub_19CC4((uint64_t)v23, v72, &qword_2F56B8);
  sub_B678(v48, (uint64_t)v23, &qword_2F56B8);
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  *(void *)(a3 + 16) = v62;
  *(unsigned char *)(a3 + 24) = v61;
  *(void *)(a3 + 32) = v60;
  *(unsigned char *)(a3 + 40) = v59;
  uint64_t v49 = v57;
  *(void *)(a3 + 48) = v58;
  *(void *)(a3 + 56) = v49;
  uint64_t v50 = sub_4A98(&qword_2F56C0);
  sub_B678((uint64_t)v23, a3 + *(int *)(v50 + 48), &qword_2F56B8);
  sub_B6DC(v48, &qword_2F56B8);
  return sub_B6DC((uint64_t)v23, &qword_2F56B8);
}

uint64_t sub_1E37C0()
{
  return sub_26C360();
}

uint64_t sub_1E3838()
{
  uint64_t v0 = sub_4A98(&qword_2EA0C0);
  sub_6E18(v0, qword_315310);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_315310);
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_1E38D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4A98(&qword_2EA0C0);
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_315310);
  return sub_B678(v3, a1, &qword_2EA0C0);
}

uint64_t sub_1E3948(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_B6DC(a1, &qword_2EA0C0);
  return a2(v3);
}

uint64_t type metadata accessor for BuyButtonCaptionViewModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2F5618);
}

uint64_t sub_1E39C0()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for BuyButton(void *a1, void *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB38);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for ButtonViewModel(0);
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
    uint64_t v16 = v9[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    if (*v18 >= 3uLL)
    {
      uint64_t v20 = v18[1];
      uint64_t v21 = v18[2];
      *uint64_t v17 = *v18;
      v17[1] = v20;
      uint64_t v22 = v18[3];
      v17[2] = v21;
      v17[3] = v22;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
    }
    uint64_t v23 = v9[11];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v27 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
        goto LABEL_17;
      case 1u:
        uint64_t v28 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v29 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v29;
        uint64_t v30 = (void *)v25[2];
        long long v24[2] = v30;
        swift_bridgeObjectRetain();
        id v31 = v30;
        uint64_t v32 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v33 = (char *)v24 + v32;
        uint64_t v34 = (char *)v25 + v32;
        uint64_t v35 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_17;
      case 3u:
        uint64_t v36 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v36;
        swift_bridgeObjectRetain();
        uint64_t v37 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v38 = (char *)v24 + v37;
        unint64_t v39 = (char *)v25 + v37;
        uint64_t v40 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        goto LABEL_17;
      case 4u:
        uint64_t v41 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v24, v25, v41);
        uint64_t v42 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v43 = (void *)((char *)v24 + v42);
        uint64_t v44 = (void *)((char *)v25 + v42);
        uint64_t v45 = v44[1];
        void *v43 = *v44;
        v43[1] = v45;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 5u:
        uint64_t v46 = sub_26A220();
        uint64_t v47 = *(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16);
        v47(v24, v25, v46);
        uint64_t v48 = sub_4A98(&qword_2EE448);
        v47((void *)((char *)v24 + *(int *)(v48 + 48)), (void *)((char *)v25 + *(int *)(v48 + 48)), v46);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + v9[12]) = *((unsigned char *)a2 + v9[12]);
    uint64_t v49 = v9[13];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    else
    {
      uint64_t v53 = *((void *)v51 + 3);
      if (v53)
      {
        uint64_t v54 = *((void *)v51 + 4);
        *((void *)v50 + 3) = v53;
        *((void *)v50 + 4) = v54;
        (**(void (***)(char *, char *))(v53 - 8))(v50, v51);
      }
      else
      {
        long long v55 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v55;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = v9[14];
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    uint64_t v59 = sub_26A220();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      uint64_t v61 = sub_4A98(&qword_2EA0C0);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    *(_WORD *)((char *)a1 + v6[9]) = *(_WORD *)((char *)a2 + v6[9]);
    *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    uint64_t v62 = v6[11];
    long long v63 = *(_OWORD *)((char *)a2 + v62 + 24);
    *(_OWORD *)((char *)a1 + v62 + 24) = v63;
    (**(void (***)(void))(v63 - 8))();
    uint64_t v64 = v6[12];
    uint64_t v65 = (void *)((char *)a1 + v64);
    uint64_t v66 = (void *)((char *)a2 + v64);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v67 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
    }
    else
    {
      *uint64_t v65 = *v66;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = (int *)type metadata accessor for BuyButtonExternals();
    uint64_t v69 = v68[5];
    uint64_t v70 = (void *)((char *)v65 + v69);
    uint64_t v71 = (char *)v66 + v69;
    uint64_t v73 = *(void **)v71;
    uint64_t v72 = *((void *)v71 + 1);
    *uint64_t v70 = v73;
    v70[1] = v72;
    uint64_t v74 = v68[6];
    uint64_t v75 = (void *)((char *)v65 + v74);
    uint64_t v76 = (void *)((char *)v66 + v74);
    id v77 = v73;
    sub_4A98(&qword_2EB918);
    uint64_t v95 = a1;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v78 = sub_269840();
      uint64_t v79 = *(void *)(v78 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v78))
      {
        uint64_t v80 = sub_4A98(&qword_2EBC78);
        memcpy(v75, v76, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v79 + 16))(v75, v76, v78);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
      }
    }
    else
    {
      *uint64_t v75 = *v76;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v68[7];
    unsigned __int8 v82 = (char *)v65 + v81;
    uint64_t v83 = (char *)v66 + v81;
    uint64_t v84 = *(void *)v83;
    uint64_t v85 = *((void *)v83 + 1);
    uint64_t v86 = *((void *)v83 + 2);
    uint64_t v87 = *((void *)v83 + 3);
    uint64_t v88 = *((void *)v83 + 4);
    uint64_t v89 = *((void *)v83 + 5);
    uint64_t v90 = *((void *)v83 + 6);
    uint64_t v91 = *((void *)v83 + 7);
    __int16 v92 = *((_WORD *)v83 + 32);
    char v94 = v83[66];
    sub_44FC4(*(void *)v83, v85, v86, v87, v88, v89, v90, v91, v92, v94);
    *(void *)unsigned __int8 v82 = v84;
    *((void *)v82 + 1) = v85;
    *((void *)v82 + 2) = v86;
    *((void *)v82 + 3) = v87;
    *((void *)v82 + 4) = v88;
    *((void *)v82 + 5) = v89;
    *((void *)v82 + 6) = v90;
    *((void *)v82 + 7) = v91;
    *((_WORD *)v82 + 32) = v92;
    v82[66] = v94;
    return v95;
  }
  return (void *)v15;
}

uint64_t destroy for BuyButton(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBDF0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = (int *)type metadata accessor for ButtonViewModel(0);
  v3(a1 + v4[5], v2);
  uint64_t v5 = a1 + v4[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(a1 + v4[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v7 = a1 + v4[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_11;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v8 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_10;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_10:
      v7 += v8;
LABEL_11:
      uint64_t v9 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      break;
    case 4u:
      uint64_t v10 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v11 = sub_26A220();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v7, v11);
      uint64_t v13 = sub_4A98(&qword_2EE448);
      v12(v7 + *(int *)(v13 + 48), v11);
      break;
    default:
      break;
  }
  uint64_t v14 = a1 + v4[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else if (*(void *)(v14 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v14);
  }
  uint64_t v16 = a1 + v4[14];
  uint64_t v17 = sub_26A220();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  uint64_t v19 = sub_4A98(&qword_2EDB38);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + *(int *)(v19 + 44));
  uint64_t v20 = a1 + *(int *)(v19 + 48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }
  uint64_t v22 = (int *)type metadata accessor for BuyButtonExternals();

  uint64_t v23 = v20 + v22[6];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_269840();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v26 = v20 + v22[7];
  return sub_C360(*(void *)v26, *(void *)(v26 + 8), *(void *)(v26 + 16), *(void *)(v26 + 24), *(void *)(v26 + 32), *(void *)(v26 + 40), *(void *)(v26 + 48), *(void *)(v26 + 56), *(_WORD *)(v26 + 64), *(unsigned char *)(v26 + 66));
}

uint64_t initializeWithCopy for BuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  if (*v13 >= 3uLL)
  {
    uint64_t v15 = v13[1];
    uint64_t v16 = v13[2];
    void *v12 = *v13;
    v12[1] = v15;
    uint64_t v17 = v13[3];
    v12[2] = v16;
    uint64_t v12[3] = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
  }
  uint64_t v18 = v6[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
      goto LABEL_15;
    case 1u:
      uint64_t v23 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v23;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      uint64_t v24 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v24;
      uint64_t v25 = (void *)v20[2];
      v19[2] = v25;
      swift_bridgeObjectRetain();
      id v26 = v25;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      goto LABEL_15;
    case 3u:
      uint64_t v31 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v31;
      swift_bridgeObjectRetain();
      uint64_t v32 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v33 = (char *)v19 + v32;
      uint64_t v34 = (char *)v20 + v32;
      uint64_t v35 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      goto LABEL_15;
    case 4u:
      uint64_t v36 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v19, v20, v36);
      uint64_t v37 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v38 = (void *)((char *)v19 + v37);
      unint64_t v39 = (void *)((char *)v20 + v37);
      uint64_t v40 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 5u:
      uint64_t v41 = sub_26A220();
      uint64_t v42 = *(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16);
      v42(v19, v20, v41);
      uint64_t v43 = sub_4A98(&qword_2EE448);
      v42((void *)((char *)v19 + *(int *)(v43 + 48)), (void *)((char *)v20 + *(int *)(v43 + 48)), v41);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v44 = v6[13];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  else
  {
    uint64_t v48 = *(void *)(v46 + 24);
    if (v48)
    {
      uint64_t v49 = *(void *)(v46 + 32);
      *(void *)(v45 + 24) = v48;
      *(void *)(v45 + 32) = v49;
      (**(void (***)(uint64_t, uint64_t))(v48 - 8))(v45, v46);
    }
    else
    {
      long long v50 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *(_OWORD *)(v45 + 16) = v50;
      *(void *)(v45 + 32) = *(void *)(v46 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v6[14];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = sub_26A220();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    uint64_t v56 = sub_4A98(&qword_2EA0C0);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  uint64_t v57 = (int *)sub_4A98(&qword_2EDB38);
  *(_WORD *)(a1 + v57[9]) = *(_WORD *)(a2 + v57[9]);
  *(unsigned char *)(a1 + v57[10]) = *(unsigned char *)(a2 + v57[10]);
  uint64_t v58 = v57[11];
  long long v59 = *(_OWORD *)(a2 + v58 + 24);
  *(_OWORD *)(a1 + v58 + 24) = v59;
  (**(void (***)(void))(v59 - 8))();
  uint64_t v60 = v57[12];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v63 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  }
  else
  {
    *uint64_t v61 = *v62;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = (int *)type metadata accessor for BuyButtonExternals();
  uint64_t v65 = v64[5];
  uint64_t v66 = (void *)((char *)v61 + v65);
  uint64_t v67 = (char *)v62 + v65;
  uint64_t v69 = *(void **)v67;
  uint64_t v68 = *((void *)v67 + 1);
  *uint64_t v66 = v69;
  v66[1] = v68;
  uint64_t v70 = v64[6];
  uint64_t v71 = (void *)((char *)v61 + v70);
  uint64_t v72 = (void *)((char *)v62 + v70);
  id v73 = v69;
  sub_4A98(&qword_2EB918);
  uint64_t v91 = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v74 = sub_269840();
    uint64_t v75 = *(void *)(v74 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v75 + 48))(v72, 1, v74))
    {
      uint64_t v76 = sub_4A98(&qword_2EBC78);
      memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v75 + 16))(v71, v72, v74);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v71, 0, 1, v74);
    }
  }
  else
  {
    *uint64_t v71 = *v72;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = v64[7];
  uint64_t v78 = (char *)v61 + v77;
  uint64_t v79 = (char *)v62 + v77;
  uint64_t v80 = *(void *)v79;
  uint64_t v81 = *((void *)v79 + 1);
  uint64_t v82 = *((void *)v79 + 2);
  uint64_t v83 = *((void *)v79 + 3);
  uint64_t v84 = *((void *)v79 + 4);
  uint64_t v85 = *((void *)v79 + 5);
  uint64_t v86 = *((void *)v79 + 6);
  uint64_t v87 = *((void *)v79 + 7);
  __int16 v88 = *((_WORD *)v79 + 32);
  sub_44FC4(*(void *)v79, v81, v82, v83, v84, v85, v86, v87, v88, v79[66]);
  *(void *)uint64_t v78 = v80;
  *((void *)v78 + 1) = v81;
  *((void *)v78 + 2) = v82;
  *((void *)v78 + 3) = v83;
  *((void *)v78 + 4) = v84;
  *((void *)v78 + 5) = v85;
  *((void *)v78 + 6) = v86;
  *((void *)v78 + 7) = v87;
  *((_WORD *)v78 + 32) = v88;
  v78[66] = v90;
  return v91;
}

uint64_t assignWithCopy for BuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  if (a1 != a2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  unint64_t v14 = *(void *)(a2 + v11);
  if (*(void *)(a1 + v11) >= 3uLL)
  {
    if (v14 < 3)
    {
      sub_B6DC(a1 + v11, &qword_2EE748);
      long long v16 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v16;
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    *(void *)uint64_t v12 = v14;
    swift_retain();
    swift_release();
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    swift_retain();
    swift_release();
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    swift_retain();
    swift_release();
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_14;
    }
LABEL_17:
    *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
    goto LABEL_30;
  }
  if (v14 >= 3)
  {
    *(void *)uint64_t v12 = v14;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  long long v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  if (a1 == a2) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v17 = v6[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  sub_1E8790(a1 + v17, type metadata accessor for ButtonViewModel.Content);
  uint64_t v20 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v21 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
      goto LABEL_23;
    case 1u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v22 = (void *)v19[2];
      _OWORD v18[2] = v22;
      swift_bridgeObjectRetain();
      id v23 = v22;
      uint64_t v24 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v25 = (char *)v18 + v24;
      id v26 = (char *)v19 + v24;
      uint64_t v27 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      goto LABEL_23;
    case 3u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      swift_bridgeObjectRetain();
      uint64_t v28 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v29 = (char *)v18 + v28;
      uint64_t v30 = (char *)v19 + v28;
      uint64_t v31 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      goto LABEL_23;
    case 4u:
      uint64_t v32 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v18, v19, v32);
      uint64_t v33 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v34 = (void *)((char *)v18 + v33);
      uint64_t v35 = (void *)((char *)v19 + v33);
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 5u:
      uint64_t v36 = sub_26A220();
      uint64_t v37 = *(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16);
      v37(v18, v19, v36);
      uint64_t v38 = sub_4A98(&qword_2EE448);
      v37((void *)((char *)v18 + *(int *)(v38 + 48)), (void *)((char *)v19 + *(int *)(v38 + 48)), v36);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v39 = v6[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (long long *)(a2 + v39);
  sub_1E8790(a1 + v39, type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v42 = sub_2696C0();
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  }
  else
  {
    uint64_t v43 = *((void *)v41 + 3);
    if (v43)
    {
      *(void *)(v40 + 24) = v43;
      *(void *)(v40 + 32) = *((void *)v41 + 4);
      (**(void (***)(uint64_t, long long *))(v43 - 8))(v40, v41);
    }
    else
    {
      long long v44 = *v41;
      long long v45 = v41[1];
      *(void *)(v40 + 32) = *((void *)v41 + 4);
      *(_OWORD *)uint64_t v40 = v44;
      *(_OWORD *)(v40 + 16) = v45;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v46 = v6[14];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_26A220();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
LABEL_35:
    uint64_t v54 = sub_4A98(&qword_2EA0C0);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_36:
  uint64_t v55 = (int *)sub_4A98(&qword_2EDB38);
  *(_WORD *)(a1 + v55[9]) = *(_WORD *)(a2 + v55[9]);
  *(unsigned char *)(a1 + v55[10]) = *(unsigned char *)(a2 + v55[10]);
  sub_16D58((uint64_t *)(a1 + v55[11]), (uint64_t *)(a2 + v55[11]));
  uint64_t v56 = v55[12];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void *)(a2 + v56);
  if (a1 != a2)
  {
    sub_B6DC(a1 + v56, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v59 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    }
    else
    {
      *uint64_t v57 = *v58;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v60 = (int *)type metadata accessor for BuyButtonExternals();
  uint64_t v61 = v60[5];
  uint64_t v62 = (void *)((char *)v57 + v61);
  uint64_t v63 = (char *)v58 + v61;
  uint64_t v64 = *(void **)((char *)v57 + v61);
  uint64_t v65 = *(void **)((char *)v58 + v61);
  *uint64_t v62 = v65;
  id v66 = v65;

  v62[1] = *((void *)v63 + 1);
  uint64_t v97 = a1;
  if (a1 != a2)
  {
    uint64_t v67 = v60[6];
    uint64_t v68 = (void *)((char *)v57 + v67);
    uint64_t v69 = (void *)((char *)v58 + v67);
    sub_B6DC((uint64_t)v57 + v67, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = sub_269840();
      uint64_t v71 = *(void *)(v70 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        uint64_t v72 = sub_4A98(&qword_2EBC78);
        memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v71 + 16))(v68, v69, v70);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
    }
    else
    {
      *uint64_t v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v73 = v60[7];
  uint64_t v74 = (char *)v57 + v73;
  uint64_t v75 = (char *)v58 + v73;
  uint64_t v76 = *(void *)v75;
  uint64_t v77 = *((void *)v75 + 1);
  uint64_t v78 = *((void *)v75 + 2);
  uint64_t v79 = *((void *)v75 + 3);
  uint64_t v80 = *((void *)v75 + 4);
  uint64_t v81 = *((void *)v75 + 5);
  uint64_t v82 = *((void *)v75 + 6);
  uint64_t v83 = *((void *)v75 + 7);
  __int16 v84 = *((_WORD *)v75 + 32);
  sub_44FC4(*(void *)v75, v77, v78, v79, v80, v81, v82, v83, v84, v75[66]);
  uint64_t v85 = *(void *)v74;
  uint64_t v86 = *((void *)v74 + 1);
  uint64_t v87 = *((void *)v74 + 2);
  uint64_t v88 = *((void *)v74 + 3);
  uint64_t v89 = *((void *)v74 + 4);
  uint64_t v90 = *((void *)v74 + 5);
  uint64_t v91 = *((void *)v74 + 6);
  uint64_t v92 = *((void *)v74 + 7);
  __int16 v93 = *((_WORD *)v74 + 32);
  char v94 = v74[66];
  *(void *)uint64_t v74 = v76;
  *((void *)v74 + 1) = v77;
  *((void *)v74 + 2) = v78;
  *((void *)v74 + 3) = v79;
  *((void *)v74 + 4) = v80;
  *((void *)v74 + 5) = v81;
  *((void *)v74 + 6) = v82;
  *((void *)v74 + 7) = v83;
  *((_WORD *)v74 + 32) = v84;
  v74[66] = v96;
  sub_C360(v85, v86, v87, v88, v89, v90, v91, v92, v93, v94);
  return v97;
}

uint64_t initializeWithTake for BuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  unint64_t v14 = (_OWORD *)(a2 + v12);
  long long v15 = v14[1];
  _OWORD *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      goto LABEL_11;
    case 2u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      v17[2] = v18[2];
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v22 = (char *)v17 + v21;
      id v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_11;
    case 3u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_11;
    case 4u:
      uint64_t v29 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(v17, v18, v29);
      uint64_t v30 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v17 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)v18 + *(int *)(v30 + 48));
      goto LABEL_11;
    case 5u:
      uint64_t v31 = sub_26A220();
      uint64_t v32 = *(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v17, v18, v31);
      uint64_t v33 = sub_4A98(&qword_2EE448);
      v32((void *)((char *)v17 + *(int *)(v33 + 48)), (void *)((char *)v18 + *(int *)(v33 + 48)), v31);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v34 = v6[13];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  uint64_t v39 = v6[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_26A220();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  long long v45 = (int *)sub_4A98(&qword_2EDB38);
  *(_WORD *)(a1 + v45[9]) = *(_WORD *)(a2 + v45[9]);
  *(unsigned char *)(a1 + v45[10]) = *(unsigned char *)(a2 + v45[10]);
  uint64_t v46 = v45[11];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  uint64_t v50 = v45[12];
  uint64_t v51 = (char *)(a1 + v50);
  int v52 = (char *)(a2 + v50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v51, v52, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v54 = (int *)type metadata accessor for BuyButtonExternals();
  *(_OWORD *)&v51[v54[5]] = *(_OWORD *)&v52[v54[5]];
  uint64_t v55 = v54[6];
  uint64_t v56 = &v51[v55];
  uint64_t v57 = &v52[v55];
  uint64_t v58 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v59 = sub_269840();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59))
    {
      uint64_t v61 = sub_4A98(&qword_2EBC78);
      memcpy(v56, v57, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v56, v57, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v59);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  uint64_t v62 = v54[7];
  uint64_t v63 = &v51[v62];
  uint64_t v64 = &v52[v62];
  long long v65 = *((_OWORD *)v64 + 3);
  *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
  *((_OWORD *)v63 + 3) = v65;
  *(_DWORD *)(v63 + 63) = *(_DWORD *)(v64 + 63);
  long long v66 = *((_OWORD *)v64 + 1);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v66;
  return a1;
}

uint64_t assignWithTake for BuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  if (a1 != a2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EA968);
    uint64_t v10 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (void *)(a1 + v12);
  unint64_t v14 = (void *)(a2 + v12);
  if (*(void *)(a1 + v12) >= 3uLL)
  {
    if (*v14 >= 3uLL)
    {
      void *v13 = *v14;
      swift_release();
      v13[1] = v14[1];
      swift_release();
      v13[2] = v14[2];
      swift_release();
      v13[3] = v14[3];
      swift_release();
      if (a1 != a2) {
        goto LABEL_9;
      }
LABEL_12:
      *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
      goto LABEL_22;
    }
    sub_B6DC((uint64_t)v13, &qword_2EE748);
  }
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v16 = v6[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_1E8790(a1 + v16, type metadata accessor for ButtonViewModel.Content);
  uint64_t v19 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      goto LABEL_18;
    case 2u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      v17[2] = v18[2];
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v22 = (char *)v17 + v21;
      id v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_18;
    case 3u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_18;
    case 4u:
      uint64_t v29 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(v17, v18, v29);
      uint64_t v30 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v17 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)v18 + *(int *)(v30 + 48));
      goto LABEL_18;
    case 5u:
      uint64_t v31 = sub_26A220();
      uint64_t v32 = *(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v17, v18, v31);
      uint64_t v33 = sub_4A98(&qword_2EE448);
      v32((void *)((char *)v17 + *(int *)(v33 + 48)), (void *)((char *)v18 + *(int *)(v33 + 48)), v31);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v34 = v6[13];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  sub_1E8790(a1 + v34, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v37 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
LABEL_22:
  uint64_t v39 = v6[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = sub_26A220();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v40, 1, v42);
  int v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
LABEL_27:
    uint64_t v47 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 40))(v40, v41, v42);
LABEL_28:
  uint64_t v48 = (int *)sub_4A98(&qword_2EDB38);
  *(_WORD *)(a1 + v48[9]) = *(_WORD *)(a2 + v48[9]);
  *(unsigned char *)(a1 + v48[10]) = *(unsigned char *)(a2 + v48[10]);
  uint64_t v49 = v48[11];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v49);
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  uint64_t v53 = v48[12];
  uint64_t v54 = (char *)(a1 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  if (a1 != a2)
  {
    sub_B6DC(a1 + v53, &qword_2EA968);
    uint64_t v56 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v57 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
  }
  uint64_t v58 = (int *)type metadata accessor for BuyButtonExternals();
  uint64_t v59 = v58[5];
  uint64_t v60 = &v54[v59];
  uint64_t v61 = &v55[v59];
  uint64_t v62 = *(void **)&v54[v59];
  *(void *)uint64_t v60 = *(void *)v61;

  *((void *)v60 + 1) = *((void *)v61 + 1);
  if (a1 != a2)
  {
    uint64_t v63 = v58[6];
    uint64_t v64 = &v54[v63];
    long long v65 = &v55[v63];
    sub_B6DC((uint64_t)&v54[v63], &qword_2EB918);
    uint64_t v66 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v67 = sub_269840();
      uint64_t v68 = *(void *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v67))
      {
        uint64_t v69 = sub_4A98(&qword_2EBC78);
        memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v64, v65, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v64, 0, 1, v67);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
  }
  uint64_t v70 = v58[7];
  uint64_t v71 = &v54[v70];
  uint64_t v72 = &v55[v70];
  __int16 v73 = *((_WORD *)v72 + 32);
  char v74 = v72[66];
  uint64_t v75 = *(void *)v71;
  uint64_t v76 = *((void *)v71 + 1);
  uint64_t v77 = *((void *)v71 + 2);
  uint64_t v78 = *((void *)v71 + 3);
  uint64_t v79 = *((void *)v71 + 4);
  uint64_t v80 = *((void *)v71 + 5);
  uint64_t v81 = *((void *)v71 + 6);
  uint64_t v82 = *((void *)v71 + 7);
  __int16 v83 = *((_WORD *)v71 + 32);
  char v84 = v71[66];
  long long v85 = *((_OWORD *)v72 + 1);
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v85;
  long long v86 = *((_OWORD *)v72 + 3);
  *((_OWORD *)v71 + 2) = *((_OWORD *)v72 + 2);
  *((_OWORD *)v71 + 3) = v86;
  *((_WORD *)v71 + 32) = v73;
  v71[66] = v74;
  sub_C360(v75, v76, v77, v78, v79, v80, v81, v82, v83, v84);
  return a1;
}

uint64_t getEnumTagSinglePayload for BuyButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E6EA4);
}

uint64_t sub_1E6EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BuyButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E6F28);
}

uint64_t sub_1E6F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BuyButton(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2F5550);
}

void sub_1E6FBC()
{
  sub_1E7048();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1E7048()
{
  if (!qword_2F5560)
  {
    type metadata accessor for BuyButtonExternals();
    sub_1E725C((unint64_t *)&unk_2F5568, (void (*)(uint64_t))type metadata accessor for BuyButtonExternals);
    unint64_t v0 = type metadata accessor for BuyButtonViewModelBase();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2F5560);
    }
  }
}

unint64_t sub_1E70E0()
{
  unint64_t result = qword_2F5598;
  if (!qword_2F5598)
  {
    sub_7B0C(&qword_2F54F0);
    sub_1E7180();
    sub_7C18(&qword_2F55B0, &qword_2F55B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5598);
  }
  return result;
}

unint64_t sub_1E7180()
{
  unint64_t result = qword_2F55A0;
  if (!qword_2F55A0)
  {
    sub_7B0C(&qword_2F54E8);
    sub_1E725C(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    sub_1E725C(&qword_2F55A8, (void (*)(uint64_t))type metadata accessor for BuyButtonCaptionViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F55A0);
  }
  return result;
}

uint64_t sub_1E725C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BuyButtonAccessibilityHintKey()
{
  return &type metadata for BuyButtonAccessibilityHintKey;
}

char *sub_1E72B4(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_26A220();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4A98(&qword_2EA0C0);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    v4[a3[5]] = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = &v4[v11];
    uint64_t v13 = (_WORD *)((char *)a2 + v11);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v12 = *v13;
      unint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = &v12[v15];
      uint64_t v17 = (char *)v13 + v15;
      uint64_t v18 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(void *)&v12[v14[7]] = *(void *)((char *)v13 + v14[7]);
      uint64_t v19 = v14[8];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = (char *)v13 + v19;
      v20[2] = v21[2];
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = &v4[v22];
    uint64_t v25 = (char *)a2 + v22;
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((void *)v24 + 2) = *((void *)v25 + 2);
    id v26 = &v4[v23];
    uint64_t v27 = (char *)a2 + v23;
    *(_OWORD *)id v26 = *(_OWORD *)v27;
    *((void *)v26 + 2) = *((void *)v27 + 2);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1E754C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

char *sub_1E76A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2EA0C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v10 = *(_WORD *)v11;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    unint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
    uint64_t v17 = v12[8];
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    _OWORD v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
  }
  else
  {
    *(void *)uint64_t v10 = *(void *)v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((void *)v22 + 2) = *((void *)v23 + 2);
  uint64_t v24 = &a1[v21];
  uint64_t v25 = &a2[v21];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((void *)v24 + 2) = *((void *)v25 + 2);
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_1E78F4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA0C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    unint64_t v14 = &a2[v12];
    sub_B6DC((uint64_t)&a1[v12], &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char *v13 = *v14;
      v13[1] = v14[1];
      uint64_t v15 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v16 = v15[6];
      uint64_t v17 = &v13[v16];
      uint64_t v18 = &v14[v16];
      uint64_t v19 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(void *)&v13[v15[7]] = *(void *)&v14[v15[7]];
      uint64_t v20 = v15[8];
      uint64_t v21 = &v13[v20];
      uint64_t v22 = &v14[v20];
      char v23 = v22[2];
      *(_WORD *)uint64_t v21 = *(_WORD *)v22;
      v21[2] = v23;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  *((void *)v25 + 2) = *((void *)v26 + 2);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  *((void *)v28 + 2) = *((void *)v29 + 2);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1E7BE8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4A98(&qword_2EA0C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)int v10 = *(_WORD *)v11;
    uint64_t v13 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v14 = v13[6];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(void *)&v10[v13[7]] = *(void *)&v11[v13[7]];
    uint64_t v18 = v13[8];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    v19[2] = v20[2];
    *(_WORD *)uint64_t v19 = *(_WORD *)v20;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  char v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  *(_OWORD *)char v23 = *(_OWORD *)v24;
  *((void *)v23 + 2) = *((void *)v24 + 2);
  uint64_t v25 = &a1[v22];
  id v26 = &a2[v22];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((void *)v25 + 2) = *((void *)v26 + 2);
  return a1;
}

char *sub_1E7E38(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA0C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    sub_B6DC((uint64_t)&a1[v12], &qword_2EB708);
    uint64_t v15 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = &v13[v17];
      uint64_t v19 = &v14[v17];
      uint64_t v20 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
      uint64_t v21 = v16[8];
      uint64_t v22 = &v13[v21];
      char v23 = &v14[v21];
      v22[2] = v23[2];
      *(_WORD *)uint64_t v22 = *(_WORD *)v23;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((void *)v25 + 2) = *((void *)v26 + 2);
  swift_release();
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *((void *)v28 + 2) = *((void *)v29 + 2);
  swift_release();
  return a1;
}

uint64_t sub_1E8114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E8128);
}

uint64_t sub_1E8128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA0C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1E8254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E8268);
}

uint64_t sub_1E8268(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EA0C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2EB718);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 16) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1E8384()
{
  sub_1E84C0(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_1E84C0(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E84C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E8524()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1E8540()
{
  unint64_t result = qword_2F5678;
  if (!qword_2F5678)
  {
    sub_7B0C(&qword_2F5670);
    sub_1E85E0();
    sub_7C18(&qword_2F5698, &qword_2F56A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5678);
  }
  return result;
}

unint64_t sub_1E85E0()
{
  unint64_t result = qword_2F5680;
  if (!qword_2F5680)
  {
    sub_7B0C(&qword_2F5688);
    sub_7C18(&qword_2F5690, &qword_2F5660);
    sub_7C18(&qword_2E9F58, &qword_2E9F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5680);
  }
  return result;
}

uint64_t sub_1E86A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E8710(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E8778(uint64_t a1)
{
  return sub_1E89E4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1E2E30);
}

uint64_t sub_1E8790(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E8804()
{
  uint64_t v1 = type metadata accessor for BuyButtonCaptionViewModifier(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_26A220();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  unint64_t v5 = v0 + v2 + *(int *)(v1 + 24);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v6 = v5 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E89CC(uint64_t a1)
{
  return sub_1E89E4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1E37C0);
}

uint64_t sub_1E89E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for BuyButtonCaptionViewModifier(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1E8A68()
{
  uint64_t v1 = sub_269810();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1E8AF8(void *a1)
{
  sub_269810();

  return sub_2026A8(a1);
}

unint64_t sub_1E8B74()
{
  unint64_t result = qword_2F56C8;
  if (!qword_2F56C8)
  {
    sub_7B0C(&qword_2F56D0);
    sub_1E8540();
    sub_7C18(&qword_2F5690, &qword_2F5660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F56C8);
  }
  return result;
}

__n128 SeeAllView.init(model:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for SeeAllView() + 20);
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v6;
  *((void *)v4 + 4) = *(void *)(a1 + 32);
  return result;
}

uint64_t type metadata accessor for SeeAllView()
{
  uint64_t result = qword_2F5748;
  if (!qword_2F5748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SeeAllView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = sub_26B310();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  uint64_t v45 = v4;
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26AC00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_269BA0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for SeeAllView();
  uint64_t v12 = v11 - 8;
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v38 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)sub_4A98(&qword_2F56D8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F56E0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v39 = v20;
  uint64_t v40 = v21;
  __chkstk_darwin(v20);
  char v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_26A630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 1, 1, v24);
  sub_1E92CC(v2 + *(int *)(v12 + 28), (uint64_t)v47);
  sub_AD44(v47, (uint64_t)v48);
  sub_1E9594(v2, (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v25 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1E95FC((uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_269B80();
  sub_269AB0();
  uint64_t v27 = &v19[v17[9]];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  uint64_t v28 = (uint64_t *)&v19[v17[10]];
  *uint64_t v28 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = &v19[v17[11]];
  *(void *)uint64_t v29 = swift_getKeyPath();
  unsigned char v29[40] = 0;
  sub_19CC4((uint64_t)v16, (uint64_t)&v19[v17[12]], qword_2EA3E0);
  sub_19CC4((uint64_t)v48, (uint64_t)&v19[v17[13]], &qword_2EA818);
  uint64_t v30 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v19[v17[14]];
  *uint64_t v30 = sub_1E9660;
  v30[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v26;
  sub_26ABF0();
  uint64_t v31 = sub_7C18(&qword_2F56E8, &qword_2F56D8);
  uint64_t v32 = sub_1EB148(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v33 = v41;
  sub_26BC70();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v33);
  sub_B6DC((uint64_t)v19, &qword_2F56D8);
  uint64_t v34 = v43;
  sub_26AD30();
  v48[0] = v17;
  v48[1] = v33;
  v48[2] = v31;
  v48[3] = v32;
  swift_getOpaqueTypeConformance2();
  sub_1EB148((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v35 = v39;
  uint64_t v36 = v44;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v23, v35);
}

uint64_t sub_1E92CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E9328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F5780);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_26B120();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v14 = sub_4A98(&qword_2F5788);
  sub_1E96D0(a1, (uint64_t)&v13[*(int *)(v14 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.body(_:), v7);
  uint64_t v15 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_26B890();
  uint64_t v16 = sub_26B8E0();
  sub_B6DC((uint64_t)v6, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v13, a2, &qword_2F5780);
  uint64_t v18 = (uint64_t *)(a2 + *(int *)(sub_4A98(&qword_2F5790) + 36));
  *uint64_t v18 = KeyPath;
  v18[1] = v16;
  return sub_B6DC((uint64_t)v13, &qword_2F5780);
}

uint64_t sub_1E9594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeeAllView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E95FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeeAllView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E9660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SeeAllView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1E9328(v4, a1);
}

uint64_t sub_1E96D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_26C270();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  uint64_t v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SeeAllView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = sub_4A98(&qword_2F5798);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F57A0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F57A8);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v40 = (uint64_t)&v37 - v20;
  sub_1E9594(a1, (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1E95FC((uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  uint64_t v37 = sub_4A98(&qword_2F57B0);
  sub_26A0F0();
  sub_26A0D0();
  sub_1EB0A8();
  sub_1EB148(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_1EB148(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  sub_26A100();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v14, v10, v39);
  uint64_t v26 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v26 = KeyPath;
  v26[8] = 0;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  uint64_t v28 = v41;
  uint64_t v27 = v42;
  uint64_t v29 = v43;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v41, enum case for Image.Scale.small(_:), v43);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)&v19[*(int *)(v16 + 44)];
  uint64_t v32 = sub_4A98(&qword_2EB038);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v31 + *(int *)(v32 + 28), v28, v29);
  *uint64_t v31 = v30;
  sub_B678((uint64_t)v14, (uint64_t)v19, &qword_2F57A0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  sub_B6DC((uint64_t)v14, &qword_2F57A0);
  uint64_t v33 = v40;
  sub_19CC4((uint64_t)v19, v40, &qword_2F57A8);
  sub_B678(v33, (uint64_t)v19, &qword_2F57A8);
  uint64_t v34 = v44;
  sub_B678((uint64_t)v19, v44, &qword_2F57A8);
  uint64_t v35 = v34 + *(int *)(sub_4A98(&qword_2F57C0) + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  sub_B6DC(v33, &qword_2F57A8);
  return sub_B6DC((uint64_t)v19, &qword_2F57A8);
}

uint64_t sub_1E9C0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v54 = a1;
  uint64_t v52 = sub_4A98(&qword_2EE0A0) - 8;
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t *)((char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_269900();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_269920();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_26AB70();
  uint64_t v44 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EE058);
  __chkstk_darwin(v7 - 8);
  uint64_t v55 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_4A98(&qword_2F57B0) - 8;
  __chkstk_darwin(v42);
  uint64_t v40 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26CFD0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26CF60();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_26A220();
  __chkstk_darwin(v18 - 8);
  sub_26CF50();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizerLookupStrategy.default(_:), v10);
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_C224((uint64_t)v54, (uint64_t)v56);
  uint64_t v38 = sub_26BA00();
  uint64_t v20 = v19;
  int v39 = v21 & 1;
  sub_1EA2FC(v56);
  uint64_t v23 = v56[0];
  uint64_t v22 = v56[1];
  char v24 = v57;
  sub_4A98(&qword_2EE070);
  sub_9F180();
  uint64_t v25 = v20;
  sub_26BE30();
  sub_3A380(v23, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_4ADC(v54, v54[3]);
  uint64_t v27 = v41;
  sub_26D1B0();
  uint64_t v28 = v46;
  sub_269910();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v47);
  uint64_t v29 = sub_2698F0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  uint64_t v32 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if (v29 != 2) {
    uint64_t v32 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v33 = v48;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *v32, v48);
  uint64_t v34 = v51;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v51 + *(int *)(v52 + 36), v31, v33);
  *uint64_t v34 = KeyPath;
  uint64_t v35 = v55;
  uint64_t v36 = v40;
  sub_B678(v55, v40, &qword_2EE058);
  sub_B678((uint64_t)v34, v36 + *(int *)(v42 + 44), &qword_2EE0A0);
  swift_retain();
  sub_B6DC((uint64_t)v34, &qword_2EE0A0);
  sub_3A380(v38, v25, v39);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v33);
  sub_B6DC(v35, &qword_2EE058);
  return sub_19CC4(v36, v53, &qword_2F57B0);
}

uint64_t sub_1EA2FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  uint64_t v4 = sub_26BA30();
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  uint64_t v9 = sub_26BA60();
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  uint64_t v40 = v11;
  int v37 = v12 & 1;
  sub_3A380(v4, v6, v8 & 1);
  swift_bridgeObjectRelease();
  sub_26C250();
  uint64_t v13 = sub_26BB10();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v3);
  id v18 = [self tertiaryLabelColor];
  sub_26C230();
  sub_1EB1A8((uint64_t)v3);
  uint64_t v19 = sub_26BA30();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_3A380(v13, v15, v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  char v26 = v37;
  uint64_t v35 = sub_26BA60();
  uint64_t v36 = v27;
  uint64_t v29 = v28;
  char v31 = v30;
  sub_3A380(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_3A380(v24, v25, v26);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v33 = v41;
  *uint64_t v41 = v35;
  v33[1] = v29;
  *((unsigned char *)v33 + 16) = v31 & 1;
  v33[3] = v36;
  return result;
}

uint64_t sub_1EA584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for SeeAllView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)a1 + v9 + 24) = v10;
    (**(void (***)(void))(v10 - 8))();
  }
  return a1;
}

uint64_t destroy for SeeAllView(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return _s7BooksUI13AnyPagedFrameVwxx_0(v5);
}

void *initializeWithCopy for SeeAllView(void *a1, void *a2, uint64_t a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = *(_OWORD *)((char *)a2 + v7 + 24);
  *(_OWORD *)((char *)a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

void *assignWithCopy for SeeAllView(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_16D58((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20)));
  return a1;
}

char *initializeWithTake for SeeAllView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  long long v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  return a1;
}

char *assignWithTake for SeeAllView(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  long long v10 = &a2[v8];
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&a1[v8]);
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeeAllView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1EAB74);
}

uint64_t sub_1EAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SeeAllView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1EAC50);
}

uint64_t sub_1EAC50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

void sub_1EAD14()
{
  sub_E0D90();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1EADA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1EAF08()
{
  uint64_t v1 = type metadata accessor for SeeAllView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2 + *(int *)(v1 + 20));

  return swift_deallocObject();
}

uint64_t sub_1EB028@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for SeeAllView();

  return sub_1E9C0C(a1, a2);
}

unint64_t sub_1EB0A8()
{
  unint64_t result = qword_2F57B8;
  if (!qword_2F57B8)
  {
    sub_7B0C(&qword_2F57B0);
    sub_9F0D4();
    sub_7C18(&qword_2EE098, &qword_2EE0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F57B8);
  }
  return result;
}

uint64_t sub_1EB148(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1EB1A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorConstants(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ShelfHeaderView.init(title:subtitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC58);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for ShelfHeaderView();
  uint64_t v7 = (uint64_t *)((char *)a3 + v6[5]);
  uint64_t *v7 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (char *)a3 + v6[6];
  uint64_t v9 = sub_26A220();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  return sub_19CC4(a2, (uint64_t)a3 + v6[7], &qword_2EA0C0);
}

uint64_t type metadata accessor for ShelfHeaderView()
{
  uint64_t result = qword_2F5840;
  if (!qword_2F5840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShelfHeaderView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v3 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EE958);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EE960);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F57C8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  id v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2F57D0);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  char v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v11 = sub_26B1D0();
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 1;
  uint64_t v23 = sub_4A98(&qword_2F57D8);
  sub_1EB788(v2, (uint64_t)&v11[*(int *)(v23 + 44)]);
  uint64_t v24 = sub_26C650();
  sub_B0C60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v24, v25);
  sub_B6DC((uint64_t)v11, &qword_2EE958);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2EE960);
  uint64_t v27 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v27 = KeyPath;
  *((void *)v27 + 1) = 2;
  v27[16] = 0;
  sub_B6DC((uint64_t)v14, &qword_2EE960);
  LOBYTE(v14) = sub_26B770();
  type metadata accessor for ShelfHeaderView();
  sub_41378((uint64_t)v8);
  sub_14FB94((uint64_t)v8, (uint64_t)v5);
  sub_1ED8A0((uint64_t)v8, type metadata accessor for SizeConstants);
  sub_1ED8A0((uint64_t)v5, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_B678((uint64_t)v18, (uint64_t)v22, &qword_2F57C8);
  uint64_t v36 = &v22[*(int *)(v20 + 44)];
  *uint64_t v36 = (char)v14;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_B6DC((uint64_t)v18, &qword_2F57C8);
  LOBYTE(v14) = sub_26B780();
  sub_41378((uint64_t)v8);
  sub_14FB94((uint64_t)v8, (uint64_t)v5);
  sub_1ED8A0((uint64_t)v8, type metadata accessor for SizeConstants);
  sub_1ED8A0((uint64_t)v5, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v49;
  sub_B678((uint64_t)v22, v49, &qword_2F57D0);
  uint64_t v46 = v45 + *(int *)(sub_4A98(&qword_2F57E0) + 36);
  *(unsigned char *)uint64_t v46 = (_BYTE)v14;
  *(void *)(v46 + 8) = v38;
  *(void *)(v46 + 16) = v40;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 40) = 0;
  return sub_B6DC((uint64_t)v22, &qword_2F57D0);
}

uint64_t sub_1EB788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v3 - 8);
  long long v65 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2EDF88);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v67 = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v66 = (char *)v54 - v8;
  uint64_t v9 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26B980();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v57 = v16;
  uint64_t v17 = sub_26A220();
  uint64_t v58 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v56 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v22 = (char *)v54 - v21;
  uint64_t v23 = sub_26A160();
  uint64_t v63 = *(void *)(v23 - 8);
  uint64_t v64 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EBFC8);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v60 = (char *)v54 - v31;
  uint64_t v61 = type metadata accessor for ShelfHeaderView();
  uint64_t v32 = *(int *)(v61 + 24);
  uint64_t v59 = a1;
  v54[0] = *(void *)(v18 + 16);
  v54[1] = v18 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v54[0])(v22, a1 + v32, v17);
  uint64_t v55 = v22;
  sub_26A170();
  sub_4204C((uint64_t)v16);
  uint64_t v33 = v62;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v62, enum case for Font.TextStyle.title2(_:), v70);
  uint64_t v34 = enum case for Font.Design.serif (_:);
  uint64_t v35 = sub_26B820();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v11, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v35);
  uint64_t v37 = v18;
  sub_26B8B0();
  uint64_t v38 = sub_26B8E0();
  sub_B6DC((uint64_t)v11, &qword_2EBFC0);
  uint64_t v39 = v58;
  uint64_t v40 = v63;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v70);
  sub_1ED8A0((uint64_t)v57, type metadata accessor for FontConstants);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v64;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v30, v25, v64);
  uint64_t v43 = *(int *)(v27 + 44);
  uint64_t v44 = (uint64_t)v60;
  uint64_t v45 = (uint64_t *)&v30[v43];
  *uint64_t v45 = KeyPath;
  v45[1] = v38;
  uint64_t v46 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v42);
  sub_19CC4((uint64_t)v30, v44, &qword_2EBFC8);
  sub_B678(v59 + *(int *)(v61 + 28), v46, &qword_2EA0C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v46, 1, v39) == 1)
  {
    sub_B6DC(v46, &qword_2EA0C0);
    uint64_t v47 = 1;
    uint64_t v48 = (uint64_t)v66;
  }
  else
  {
    uint64_t v49 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v56, v46, v39);
    ((void (*)(char *, char *, uint64_t))v54[0])(v55, v49, v39);
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v39);
    uint64_t v48 = (uint64_t)v66;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v66, v25, v42);
    uint64_t v47 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v48, v47, 1, v42);
  sub_B678(v44, (uint64_t)v30, &qword_2EBFC8);
  uint64_t v50 = v67;
  sub_B678(v48, v67, &qword_2EDF88);
  uint64_t v51 = v68;
  sub_B678((uint64_t)v30, v68, &qword_2EBFC8);
  uint64_t v52 = sub_4A98(&qword_2F58A8);
  sub_B678(v50, v51 + *(int *)(v52 + 48), &qword_2EDF88);
  sub_B6DC(v48, &qword_2EDF88);
  sub_B6DC(v44, &qword_2EBFC8);
  sub_B6DC(v50, &qword_2EDF88);
  return sub_B6DC((uint64_t)v30, &qword_2EBFC8);
}

uint64_t sub_1EBEB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ShelfHeaderView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v8 = *(int *)(v7 + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 28));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = (_WORD *)((char *)a1 + v13);
    uint64_t v15 = (_WORD *)((char *)a2 + v13);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v14 = *v15;
      uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = (char *)v14 + v17;
      uint64_t v19 = (char *)v15 + v17;
      uint64_t v20 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *(void *)((char *)v14 + v16[7]) = *(void *)((char *)v15 + v16[7]);
      uint64_t v21 = v16[8];
      char v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      v22[2] = v23[2];
      *(_WORD *)char v22 = *(_WORD *)v23;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[6];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_26A220();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v29(v25, v26, v27);
    uint64_t v30 = a3[7];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27))
    {
      uint64_t v33 = sub_4A98(&qword_2EA0C0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t destroy for ShelfHeaderView(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v9, v10);
  uint64_t v12 = a1 + a2[7];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v10);
  }
  return result;
}

_WORD *initializeWithCopy for ShelfHeaderView(_WORD *a1, _WORD *a2, int *a3)
{
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v7 = *(int *)(v6 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + *(int *)(v6 + 28)) = *(void *)((char *)a2 + *(int *)(v6 + 28));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (_WORD *)((char *)a1 + v11);
  uint64_t v13 = (_WORD *)((char *)a2 + v11);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v12 = *v13;
    uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v15 = v14[6];
    uint64_t v16 = (char *)v12 + v15;
    uint64_t v17 = (char *)v13 + v15;
    uint64_t v18 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    *(void *)((char *)v12 + v14[7]) = *(void *)((char *)v13 + v14[7]);
    uint64_t v19 = v14[8];
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    v20[2] = v21[2];
    *(_WORD *)uint64_t v20 = *(_WORD *)v21;
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[6];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v27(v23, v24, v25);
  uint64_t v28 = a3[7];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v30, 1, v25))
  {
    uint64_t v31 = sub_4A98(&qword_2EA0C0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v27(v29, v30, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
  }
  return a1;
}

unsigned char *assignWithCopy for ShelfHeaderView(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC58);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v7 = *(int *)(v6 + 24);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[*(int *)(v6 + 28)] = *(void *)&a2[*(int *)(v6 + 28)];
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    sub_B6DC((uint64_t)&a1[v11], &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v12 = *v13;
      v12[1] = v13[1];
      uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v18 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
      uint64_t v19 = v14[8];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = &v13[v19];
      char v22 = v21[2];
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
      v20[2] = v22;
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_26A220();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24);
  v28(v24, v25, v26);
  uint64_t v29 = a3[7];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v24) = v32(&a1[v29], 1, v26);
  int v33 = v32(v31, 1, v26);
  if (!v24)
  {
    if (!v33)
    {
      v28(v30, v31, v26);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v30, v26);
    goto LABEL_14;
  }
  if (v33)
  {
LABEL_14:
    uint64_t v34 = sub_4A98(&qword_2EA0C0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v30, v31, v26);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v30, 0, 1, v26);
  return a1;
}

_WORD *initializeWithTake for ShelfHeaderView(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + *(int *)(v7 + 28)) = *(void *)((char *)a2 + *(int *)(v7 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (_WORD *)((char *)a1 + v12);
  uint64_t v14 = (_WORD *)((char *)a2 + v12);
  uint64_t v15 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v13 = *v14;
    uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    uint64_t v20 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(void *)((char *)v13 + v16[7]) = *(void *)((char *)v14 + v16[7]);
    uint64_t v21 = v16[8];
    char v22 = (char *)v13 + v21;
    uint64_t v23 = (char *)v14 + v21;
    v22[2] = v23[2];
    *(_WORD *)char v22 = *(_WORD *)v23;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_26A220();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v29(v25, v26, v27);
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27))
  {
    uint64_t v33 = sub_4A98(&qword_2EA0C0);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v29(v31, v32, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
  }
  return a1;
}

_WORD *assignWithTake for ShelfHeaderView(_WORD *a1, _WORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC58);
    uint64_t v6 = sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v8 = *(int *)(v7 + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + *(int *)(v7 + 28)) = *(void *)((char *)a2 + *(int *)(v7 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (_WORD *)((char *)a1 + v12);
    uint64_t v14 = (_WORD *)((char *)a2 + v12);
    sub_B6DC((uint64_t)a1 + v12, &qword_2EB708);
    uint64_t v15 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v13 = *v14;
      uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      uint64_t v20 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      *(void *)((char *)v13 + v16[7]) = *(void *)((char *)v14 + v16[7]);
      uint64_t v21 = v16[8];
      char v22 = (char *)v13 + v21;
      uint64_t v23 = (char *)v14 + v21;
      v22[2] = v23[2];
      *(_WORD *)char v22 = *(_WORD *)v23;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_26A220();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 40);
  v29(v25, v26, v27);
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v25) = v33((char *)a1 + v30, 1, v27);
  int v34 = v33(v32, 1, v27);
  if (!v25)
  {
    if (!v34)
    {
      v29(v31, v32, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
    goto LABEL_13;
  }
  if (v34)
  {
LABEL_13:
    uint64_t v35 = sub_4A98(&qword_2EA0C0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v32, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfHeaderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1ED0E0);
}

uint64_t sub_1ED0E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EDCD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_26A220();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4A98(&qword_2EA0C0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ShelfHeaderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1ED298);
}

uint64_t sub_1ED298(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EDCD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_26A220();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4A98(&qword_2EA0C0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1ED448()
{
  sub_1ED618(319, &qword_2EDD48, type metadata accessor for FontConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1ED618(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_26A220();
      if (v2 <= 0x3F)
      {
        sub_1ED618(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1ED618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1ED67C()
{
  return sub_1ED6E0(&qword_2F5880, &qword_2F57E0, (void (*)(void))sub_1ED6B8);
}

uint64_t sub_1ED6B8()
{
  return sub_1ED6E0(&qword_2F5888, &qword_2F57D0, (void (*)(void))sub_1ED760);
}

uint64_t sub_1ED6E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ED760()
{
  unint64_t result = qword_2F5890;
  if (!qword_2F5890)
  {
    sub_7B0C(&qword_2F57C8);
    sub_1ED800();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5890);
  }
  return result;
}

unint64_t sub_1ED800()
{
  unint64_t result = qword_2F5898;
  if (!qword_2F5898)
  {
    sub_7B0C(&qword_2EE960);
    sub_7C18(&qword_2F58A0, &qword_2EE958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5898);
  }
  return result;
}

uint64_t sub_1ED8A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _DecodeDefault_Wrapper.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v19 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = type metadata accessor for _DecodeDefault_Wrapper();
  uint64_t v9 = sub_26D980();
  uint64_t v17 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - v10;
  swift_getWitnessTable();
  uint64_t v12 = v21;
  uint64_t result = sub_26DC60();
  if (!v12)
  {
    uint64_t v20 = v7;
    uint64_t v21 = v9;
    uint64_t v14 = v19;
    uint64_t v15 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v8) == 1)
    {
      uint64_t v16 = v20;
      (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v14, v16, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v21);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v11, v8);
    }
  }
  return result;
}

uint64_t type metadata accessor for _DecodeDefault_Wrapper()
{
  return sub_129B4();
}

uint64_t _DecodeDefault_Wrapper.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t _DecodeDefault_Wrapper.wrappedValue.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t _DecodeDefault_Wrapper.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for _DecodeDefault_Wrapper();
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - v10;
  sub_4ADC(a1, a1[3]);
  uint64_t v12 = v27;
  sub_26DF90();
  if (v12)
  {
    uint64_t v13 = (uint64_t)a1;
  }
  else
  {
    uint64_t v27 = a1;
    uint64_t v19 = v11;
    uint64_t v20 = v9;
    uint64_t v14 = AssociatedTypeWitness;
    sub_4ADC(v25, v26);
    if (sub_26DDE0())
    {
      uint64_t v15 = v19;
      (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
      uint64_t v16 = v24;
    }
    else
    {
      sub_4ADC(v25, v26);
      swift_getAssociatedConformanceWitness();
      sub_26DDD0();
      uint64_t v16 = v24;
      uint64_t v15 = v19;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v8, v14);
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v25);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v22, v15, v20);
    uint64_t v13 = (uint64_t)v27;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0(v13);
}

uint64_t sub_1EE000@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _DecodeDefault_Wrapper.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t static _DecodeDefault_Wrapper<>.== infix(_:_:)()
{
  return sub_26D360() & 1;
}

uint64_t sub_1EE088()
{
  return static _DecodeDefault_Wrapper<>.== infix(_:_:)();
}

uint64_t _DecodeDefault_Wrapper<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();

  return sub_26D2F0();
}

Swift::Int _DecodeDefault_Wrapper<>.hashValue.getter()
{
  return sub_26DF20();
}

Swift::Int sub_1EE16C()
{
  return _DecodeDefault_Wrapper<>.hashValue.getter();
}

uint64_t sub_1EE174()
{
  return _DecodeDefault_Wrapper<>.hash(into:)();
}

Swift::Int sub_1EE17C()
{
  return sub_26DF20();
}

uint64_t _DecodeDefault_Wrapper<>.encode(to:)(void *a1)
{
  sub_4ADC(a1, a1[3]);
  sub_26DFD0();
  sub_14714((uint64_t)v2, v3);
  swift_getAssociatedTypeWitness();
  sub_26DDF0();
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v2);
}

uint64_t sub_1EE294(void *a1)
{
  return _DecodeDefault_Wrapper<>.encode(to:)(a1);
}

void sub_1EE2B0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t static DecodeDefault.Providers.UUIDString.defaultValue.getter()
{
  uint64_t v0 = sub_269840();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_269830();
  uint64_t v4 = sub_269820();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1EE398()
{
  return swift_getWitnessTable();
}

void *sub_1EE3E0()
{
  return &protocol witness table for Bool;
}

void *sub_1EE3EC()
{
  return &protocol witness table for String;
}

uint64_t sub_1EE3F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_269840();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_269830();
  uint64_t v6 = sub_269820();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

ValueMetadata *type metadata accessor for DecodeDefault()
{
  return &type metadata for DecodeDefault;
}

uint64_t dispatch thunk of static DecodeDefault.DefaultValueProviding.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for DecodeDefault.Providers()
{
  return &type metadata for DecodeDefault.Providers;
}

uint64_t sub_1EE508()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1EE5A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1EE684(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1EE700(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1EE778(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1EE7F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1EE868(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1EE8E0(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        uint64_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_1EEA90(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1EECCCLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

ValueMetadata *type metadata accessor for DecodeDefault.Providers.True()
{
  return &type metadata for DecodeDefault.Providers.True;
}

ValueMetadata *type metadata accessor for DecodeDefault.Providers.False()
{
  return &type metadata for DecodeDefault.Providers.False;
}

ValueMetadata *type metadata accessor for DecodeDefault.Providers.EmptyString()
{
  return &type metadata for DecodeDefault.Providers.EmptyString;
}

ValueMetadata *type metadata accessor for DecodeDefault.Providers.UUIDString()
{
  return &type metadata for DecodeDefault.Providers.UUIDString;
}

uint64_t static ComponentKinds.table.getter()
{
  if (qword_2E9D10 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2F59C0);
  sub_26A310();
  return v1;
}

uint64_t sub_1EEDB0()
{
  if (qword_2E9D18 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F59B8;
  sub_4A98(&qword_2F59D0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = v0;
  qword_2F59B0 = v1;

  return swift_bridgeObjectRetain();
}

unint64_t sub_1EEE40()
{
  unint64_t result = sub_95B4((uint64_t)_swiftEmptyArrayStorage);
  qword_2F59B8 = result;
  return result;
}

void static ComponentKinds.register<A>(_:name:)(uint64_t a1)
{
  if (qword_2E9D10 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1EEFE0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1EEF38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_B224(a4, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1EEFE0(uint64_t *a1)
{
  return sub_1EEF38(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

unint64_t sub_1EF004()
{
  if (qword_2E9D10 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2F59C0);
  sub_26A310();
  unint64_t v0 = sub_BF994(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1EF098@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_BF240(a1, a2, a3);
}

void static ComponentModel.registerComponentKind(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_1EF0CC()
{
  unint64_t result = qword_2F59C8;
  if (!qword_2F59C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F59C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentKinds()
{
  return &type metadata for ComponentKinds;
}

__n128 PageUpdateInstruction.ShelfItemUpdateDescriptor.init(items:shelfID:paginationUpdate:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __n128 result = *(__n128 *)a4;
  long long v6 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a4;
  uint64_t v7 = *(void *)(a4 + 32);
  char v8 = *(unsigned char *)(a4 + 40);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(_OWORD *)(a5 + 40) = v6;
  *(void *)(a5 + 56) = v7;
  *(unsigned char *)(a5 + 64) = v8;
  return result;
}

uint64_t PageUpdateInstruction.ShelfItemRemovalDescriptor.init(itemIDs:shelfID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.init(model:shelfID:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_AD44(a1, a4);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t PageUpdateAction.instructionIntent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 32);
  v8[0] = *(_OWORD *)(a1 + 16);
  v8[1] = v5;
  type metadata accessor for PageUpdateInstruction();
  uint64_t v6 = type metadata accessor for CodeAnyIntentModel();
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v8, v4, v6);
  return sub_AD44(v8, a2);
}

uint64_t type metadata accessor for PageUpdateInstruction()
{
  return swift_getGenericMetadata();
}

uint64_t PageUpdateAction.clickData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10AC60(v2 + *(int *)(a1 + 52), a2);
}

uint64_t sub_1EF258@<X0>(uint64_t a1@<X8>)
{
  uint64_t updated = type metadata accessor for PageUpdateAction();
  return PageUpdateAction.instructionIntent.getter(updated, a1);
}

uint64_t sub_1EF2A4(uint64_t a1)
{
  sub_C224(a1, (uint64_t)v3);
  uint64_t updated = type metadata accessor for PageUpdateAction();
  return sub_1EF308(v3, updated);
}

uint64_t sub_1EF308(long long *a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 56);
  _s7BooksUI13AnyPagedFrameVwxx_0(v4);

  return sub_AD44(a1, v4);
}

uint64_t PageUpdateAction.animated.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t PageUpdateAction.init(actionMetrics:instructionIntent:animated:clickData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t updated = (int *)type metadata accessor for PageUpdateAction();
  uint64_t v12 = a5 + updated[14];
  type metadata accessor for PageUpdateInstruction();
  ListItemAccessoryMoreButton.init(assetInfo:)(a2, v12);
  *(unsigned char *)(a5 + updated[15]) = a3;
  return sub_10ABF8(a4, a5 + updated[13]);
}

uint64_t type metadata accessor for PageUpdateAction()
{
  return swift_getGenericMetadata();
}

uint64_t PageUpdateAction.init(actionMetrics:instruction:animated:clickData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v20[1] = a7;
  v20[2] = a8;
  uint64_t v22 = a4;
  *(void *)&long long v23 = a5;
  int v21 = a3;
  v20[0] = a9;
  *((void *)&v23 + 1) = a6;
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t updated = type metadata accessor for PageUpdateInstruction();
  uint64_t v12 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v14 = (char *)v20 - v13;
  uint64_t v15 = sub_26CB80();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, updated);
  uint64_t v25 = sub_26CB30();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CA1C((uint64_t *)&v23);
  sub_26CB40();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, updated);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return PageUpdateAction.init(actionMetrics:instructionIntent:animated:clickData:)((uint64_t)v18, &v23, v21, v22, v20[0]);
}

BOOL sub_1EF6AC(char a1, char a2)
{
  return a1 == a2;
}

void sub_1EF6BC(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_1EF6E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446B63696C63 && a2 == 0xE900000000000061 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000000028BF30 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646574616D696E61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

Swift::Int sub_1EF8C8(unsigned __int8 a1)
{
  return sub_26DF20();
}

unint64_t sub_1EF910(char a1)
{
  unint64_t result = 0x654D6E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461446B63696C63;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x646574616D696E61;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1EF9B8(char *a1, char *a2)
{
  return sub_1EF6AC(*a1, *a2);
}

Swift::Int sub_1EF9D0()
{
  return sub_1EF8C8(*v0);
}

void sub_1EF9E0(uint64_t a1)
{
  sub_1EF6BC(a1, *v1);
}

Swift::Int sub_1EF9F0()
{
  sub_26DEF0();
  sub_1EF6BC((uint64_t)v2, *v0);
  return sub_26DF20();
}

unint64_t sub_1EFA3C()
{
  return sub_1EF910(*v0);
}

uint64_t sub_1EFA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EF6E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1EFA80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19A254();
  *a1 = result;
  return result;
}

uint64_t sub_1EFAB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1EFB08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PageUpdateAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v39 = a6;
  uint64_t v11 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v11 - 8);
  uint64_t v43 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_26CB80();
  uint64_t v41 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v48 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v55 = a2;
  *((void *)&v55 + 1) = a3;
  *(void *)&long long v56 = a4;
  *((void *)&v56 + 1) = a5;
  type metadata accessor for PageUpdateAction.CodingKeys();
  swift_getWitnessTable();
  uint64_t v49 = sub_26DCC0();
  uint64_t v42 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v40 = a2;
  *(void *)&long long v55 = a2;
  *((void *)&v55 + 1) = a3;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  *(void *)&long long v56 = a4;
  *((void *)&v56 + 1) = a5;
  uint64_t v46 = a5;
  uint64_t updated = type metadata accessor for PageUpdateAction();
  uint64_t v17 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v19 = (char *)&v35 - v18;
  sub_4ADC(a1, a1[3]);
  uint64_t v50 = v15;
  uint64_t v20 = (uint64_t)v58;
  sub_26DFC0();
  if (v20) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  uint64_t v21 = (uint64_t)v43;
  uint64_t v37 = v17;
  uint64_t v22 = v19;
  uint64_t v38 = updated;
  uint64_t v24 = v44;
  uint64_t v23 = v45;
  uint64_t v58 = a1;
  uint64_t v25 = v46;
  LOBYTE(v55) = 0;
  sub_1F01D4(&qword_2EF918, (void (*)(uint64_t))&type metadata accessor for ActionMetrics);
  uint64_t v26 = v47;
  sub_26DC90();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v36 = v22;
  v27(v22, v48, v26);
  sub_269CE0();
  LOBYTE(v55) = 1;
  sub_1F01D4(&qword_2F13B0, (void (*)(uint64_t))&type metadata accessor for ClickData);
  sub_26DC60();
  uint64_t v28 = v38;
  sub_10ABF8(v21, (uint64_t)&v36[*(int *)(v38 + 52)]);
  uint64_t v51 = v40;
  uint64_t v52 = v24;
  uint64_t v53 = v23;
  uint64_t v54 = v25;
  type metadata accessor for PageUpdateInstruction();
  type metadata accessor for CodeAnyIntentModel();
  LOBYTE(v51) = 2;
  swift_getWitnessTable();
  sub_26DC90();
  uint64_t v29 = &v36[*(int *)(v28 + 56)];
  long long v30 = v56;
  *(_OWORD *)uint64_t v29 = v55;
  *((_OWORD *)v29 + 1) = v30;
  *((void *)v29 + 4) = v57;
  LOBYTE(v55) = 3;
  char v31 = sub_26DC80();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v50, v49);
  uint64_t v32 = v36;
  v36[*(int *)(v28 + 60)] = v31 & 1;
  uint64_t v33 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v39, v32, v28);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v58);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v32, v28);
}

uint64_t type metadata accessor for PageUpdateAction.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1F01D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F021C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA820);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1F0280@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PageUpdateAction.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t PageUpdateInstruction.ShelfItemRemovalDescriptor.shelfID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void PageUpdateInstruction.ShelfItemUpdateDescriptor.paginationUpdate.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 40) = v7;
  sub_1F02FC(v2, v3, v4, v5, v6, v7);
}

void sub_1F02FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3 != -1)
  {
    sub_1F0360();
    sub_1F036C(a4, a5, a6);
  }
}

uint64_t sub_1F0360()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1F036C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1F0360();
  }
  return result;
}

BOOL PageUpdateInstruction.affectsPageVisibility.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  BOOL v5 = swift_getEnumCaseMultiPayload() == 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t PaginationUpdate.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_1F0360();
}

uint64_t PaginationUpdate.next.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1F036C(v2, v3, v4);
}

__n128 PaginationUpdate.init(source:next:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 16);
  unsigned __int8 v4 = a2[1].n128_u8[0];
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(unsigned char *)(a3 + 16) = v3;
  __n128 result = *a2;
  *(__n128 *)(a3 + 24) = *a2;
  *(unsigned char *)(a3 + 40) = v4;
  return result;
}

uint64_t sub_1F04B8()
{
  if (*v0) {
    return 1954047342;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_1F04E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F6118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F0510(uint64_t a1)
{
  unint64_t v2 = sub_1F0748();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F054C(uint64_t a1)
{
  unint64_t v2 = sub_1F0748();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PaginationUpdate.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2F59D8);
  uint64_t v16 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  char v8 = *((unsigned char *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v14 = v9;
  int v20 = *((unsigned __int8 *)v1 + 40);
  sub_4ADC(a1, a1[3]);
  sub_1F0748();
  sub_26DFE0();
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  char v19 = v8;
  char v21 = 0;
  sub_1F079C();
  uint64_t v10 = v15;
  sub_26DD30();
  if (!v10)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v13;
    char v19 = v20;
    char v21 = 1;
    sub_26DD00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

unint64_t sub_1F0748()
{
  unint64_t result = qword_2F59E0;
  if (!qword_2F59E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F59E0);
  }
  return result;
}

unint64_t sub_1F079C()
{
  unint64_t result = qword_2F59E8;
  if (!qword_2F59E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F59E8);
  }
  return result;
}

uint64_t PaginationUpdate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2F59F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_1F0748();
  sub_26DFC0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  char v21 = 0;
  sub_1F0A78();
  sub_26DC90();
  uint64_t v9 = v18;
  char v21 = 1;
  uint64_t v16 = v17;
  int v20 = v19;
  sub_1F0360();
  sub_26DC60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  unsigned __int8 v12 = v19;
  uint64_t v13 = v16;
  char v14 = v20;
  sub_1F0360();
  sub_1F036C(v10, v11, v12);
  sub_1F0ACC();
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = v12;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  sub_1F0ACC();
  return sub_1F0AD8(v10, v11, v12);
}

unint64_t sub_1F0A78()
{
  unint64_t result = qword_2F59F8;
  if (!qword_2F59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F59F8);
  }
  return result;
}

uint64_t sub_1F0ACC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1F0AD8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1F0ACC();
  }
  return result;
}

uint64_t sub_1F0AF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PaginationUpdate.init(from:)(a1, a2);
}

uint64_t sub_1F0B08(void *a1)
{
  return PaginationUpdate.encode(to:)(a1);
}

uint64_t sub_1F0B24()
{
  if (*v0) {
    return 0x657373417478656ELL;
  }
  else {
    return 0x666572487478656ELL;
  }
}

uint64_t sub_1F0B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F61F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F0B90(uint64_t a1)
{
  unint64_t v2 = sub_1F2924();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F0BCC(uint64_t a1)
{
  unint64_t v2 = sub_1F2924();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F0C10()
{
  return 12383;
}

uint64_t sub_1F0C20(uint64_t a1)
{
  unint64_t v2 = sub_1F2978();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F0C5C(uint64_t a1)
{
  unint64_t v2 = sub_1F2978();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F0C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_26DDB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1F0D18(uint64_t a1)
{
  unint64_t v2 = sub_1F29CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F0D54(uint64_t a1)
{
  unint64_t v2 = sub_1F29CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PaginationInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2F5A00);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  __chkstk_darwin(v3);
  char v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F5A08);
  uint64_t v17 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F5A10);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  v16[1] = v1[1];
  char v12 = *((unsigned char *)v1 + 16);
  sub_4ADC(a1, a1[3]);
  sub_1F2924();
  sub_26DFE0();
  if (v12)
  {
    char v25 = 1;
    sub_1F2978();
    uint64_t v13 = v22;
    sub_26DCD0();
    uint64_t v23 = v20;
    sub_4A98(&qword_2E9F78);
    sub_1F2A20(&qword_2F5A28);
    uint64_t v14 = v19;
    sub_26DD30();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v14);
  }
  else
  {
    char v24 = 0;
    sub_1F29CC();
    uint64_t v13 = v22;
    sub_26DCD0();
    sub_26DD10();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v13);
}

uint64_t PaginationInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_4A98(&qword_2F5A38);
  uint64_t v32 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F5A40);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F5A48);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v33 = a1;
  sub_4ADC(a1, v12);
  sub_1F2924();
  uint64_t v13 = v34;
  sub_26DFC0();
  if (v13) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
  }
  uint64_t v34 = v9;
  uint64_t v14 = sub_26DCA0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v19 = sub_26DAD0();
    swift_allocError();
    uint64_t v21 = v20;
    sub_4A98(&qword_2EBAB0);
    *uint64_t v21 = &type metadata for PaginationInfo;
    sub_26DC20();
    sub_26DAC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
  }
  uint64_t v28 = v14;
  char v15 = *(unsigned char *)(v14 + 32);
  if (v15)
  {
    char v37 = 1;
    sub_1F2978();
    sub_26DC10();
    sub_4A98(&qword_2E9F78);
    sub_1F2A20((unint64_t *)&qword_2EFC30);
    uint64_t v16 = v30;
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    uint64_t v17 = 0;
    uint64_t v18 = v35;
  }
  else
  {
    char v36 = 0;
    sub_1F29CC();
    sub_26DC10();
    uint64_t v23 = sub_26DC70();
    uint64_t v24 = v34;
    uint64_t v18 = v23;
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v8);
    uint64_t v17 = v26;
  }
  uint64_t v27 = v29;
  *uint64_t v29 = v18;
  v27[1] = v17;
  *((unsigned char *)v27 + 16) = v15;
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
}

uint64_t sub_1F1618@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PaginationInfo.init(from:)(a1, a2);
}

uint64_t sub_1F1630(void *a1)
{
  return PaginationInfo.encode(to:)(a1);
}

unint64_t PageUpdateAction.description.getter(uint64_t a1)
{
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_26DA90(46);
  swift_bridgeObjectRelease();
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x800000000028BDC0;
  v7._countAndFlagsBits = sub_26E0F0();
  sub_26D4E0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  sub_26D4E0(v8);
  v9._countAndFlagsBits = sub_26E0F0();
  sub_26D4E0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0xD000000000000015;
  v10._object = (void *)0x800000000028BDE0;
  sub_26D4E0(v10);
  PageUpdateAction.instructionIntent.getter(a1, (uint64_t)v4);
  sub_4ADC(v4, v4[3]);
  sub_26C930();
  sub_4ADC(v3, v3[3]);
  v11._countAndFlagsBits = sub_26C950();
  sub_26D4E0(v11);
  swift_bridgeObjectRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v3);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v4);
  return v5;
}

unint64_t PageUpdateInstruction.description.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BooksAlertAction.Button(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  unint64_t v6 = (uint64_t *)((char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v7 = (int *)type metadata accessor for BooksAlertAction(0);
  uint64_t v8 = __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v1, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v15 = 0xD000000000000010;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v16 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(17);
      v87._countAndFlagsBits = 0x6853646E65707061;
      v87._object = (void *)0xEE00287365766C65;
      sub_26D4E0(v87);
      *(void *)&long long v78 = v16;
      __chkstk_darwin(v17);
      uint64_t v18 = &v74 - 6;
      *(&v74 - 4) = *(void *)(a1 + 16);
      *(_OWORD *)(&v74 - 3) = *(_OWORD *)(a1 + 24);
      *(&v74 - 1) = *(void *)(a1 + 40);
      uint64_t v19 = sub_26D680();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t WitnessTable = swift_getWitnessTable();
      goto LABEL_5;
    case 2:
      uint64_t v23 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(18);
      v88._countAndFlagsBits = 0x536563616C706572;
      v88._object = (void *)0xEF287365766C6568;
      sub_26D4E0(v88);
      *(void *)&long long v78 = v23;
      __chkstk_darwin(v24);
      uint64_t v18 = &v74 - 6;
      *(&v74 - 4) = *(void *)(a1 + 16);
      *(_OWORD *)(&v74 - 3) = *(_OWORD *)(a1 + 24);
      *(&v74 - 1) = *(void *)(a1 + 40);
      uint64_t v19 = sub_26D680();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t WitnessTable = swift_getWitnessTable();
LABEL_5:
      uint64_t v25 = sub_1C9978((void (*)(char *, char *))sub_1F2C50, (uint64_t)v18, v19, AssociatedTypeWitness, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v22);
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = v25;
      sub_26D680();
      swift_getWitnessTable();
      sub_26DD90();
      goto LABEL_8;
    case 3:
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(17);
      swift_bridgeObjectRelease();
      strcpy((char *)&v80, "removeShelves(");
      HIBYTE(v80) = -18;
      v89._countAndFlagsBits = sub_26D620();
      sub_26D4E0(v89);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 4:
      uint64_t v26 = *(void *)v12;
      uint64_t v27 = (void *)*((void *)v12 + 1);
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(24);
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = 0xD000000000000015;
      *((void *)&v80 + 1) = 0x800000000028BE80;
      v90._countAndFlagsBits = v26;
      v90._object = v27;
      sub_26D4E0(v90);
LABEL_8:
      swift_bridgeObjectRelease();
      v91._countAndFlagsBits = 41;
      v91._object = (void *)0xE100000000000000;
      sub_26D4E0(v91);
      goto LABEL_9;
    case 5:
      unint64_t v28 = *(void *)v12;
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      v29._countAndFlagsBits = 0x7449646E65707061;
      v29._object = (void *)0xEC00000028736D65;
      goto LABEL_13;
    case 6:
      unint64_t v30 = *(void *)v12;
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      v92._countAndFlagsBits = 0x744965766F6D6572;
      v92._object = (void *)0xEC00000028736D65;
      sub_26D4E0(v92);
      unint64_t v83 = v30;
      long long v31 = *(_OWORD *)(a1 + 32);
      long long v80 = *(_OWORD *)(a1 + 16);
      long long v81 = v31;
      type metadata accessor for PageUpdateInstruction.ShelfItemRemovalDescriptor();
      goto LABEL_33;
    case 7:
      unint64_t v28 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(16);
      long long v78 = v80;
      v29._countAndFlagsBits = 0x496563616C706572;
      v29._object = (void *)0xED000028736D6574;
LABEL_13:
      sub_26D4E0(v29);
      unint64_t v83 = v28;
      long long v32 = *(_OWORD *)(a1 + 32);
      long long v80 = *(_OWORD *)(a1 + 16);
      long long v81 = v32;
      type metadata accessor for PageUpdateInstruction.ShelfItemUpdateDescriptor();
      goto LABEL_33;
    case 8:
      uint64_t v33 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(31);
      swift_bridgeObjectRelease();
      unint64_t v83 = 0xD00000000000001CLL;
      unint64_t v84 = 0x800000000028BE60;
      int64_t v34 = *(void *)(v33 + 16);
      if (v34)
      {
        uint64_t v82 = _swiftEmptyArrayStorage;
        sub_2B8CC(0, v34, 0);
        uint64_t v35 = v33 + 32;
        uint64_t v76 = v79;
        uint64_t v77 = (uint64_t)&v78 + 8;
        uint64_t v74 = v33;
        unint64_t v75 = (unint64_t)"uikitCloseButton";
        do
        {
          sub_C3100(v35, (uint64_t)&v80);
          sub_C3100((uint64_t)&v80, (uint64_t)&v78);
          switch(v79[185])
          {
            case 1:
              swift_bridgeObjectRelease();
              swift_release();
              _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v76);
              uint64_t v38 = 0x6C7469546874;
              goto LABEL_20;
            case 2:
              swift_bridgeObjectRelease();
              _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v76);
              uint64_t v38 = 0x67616D496874;
LABEL_20:
              unint64_t v36 = v38 & 0xFFFFFFFFFFFFLL | 0xEF65000000000000;
              unint64_t v37 = 0x69576E6F74747562;
              break;
            case 3:
              _s7BooksUI13AnyPagedFrameVwxx_0(v77);
              unint64_t v36 = 0xEB000000006E6F74;
              unint64_t v37 = 0x74754274696B6975;
              break;
            case 4:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2D738((uint64_t)&v78);
              unint64_t v36 = 0xE600000000000000;
              unint64_t v37 = 0x70756B636F6CLL;
              break;
            case 5:
              _s7BooksUI13AnyPagedFrameVwxx_0(v77);
              unint64_t v37 = 0xD000000000000016;
              unint64_t v36 = v75 | 0x8000000000000000;
              break;
            default:
              sub_C3138((uint64_t)&v78);
              unint64_t v36 = 0xEB00000000756E65;
              unint64_t v37 = 0x4D747865746E6F63;
              break;
          }
          sub_C3138((uint64_t)&v80);
          uint64_t v39 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2B8CC(0, v39[2] + 1, 1);
            uint64_t v39 = v82;
          }
          unint64_t v41 = v39[2];
          unint64_t v40 = v39[3];
          if (v41 >= v40 >> 1)
          {
            sub_2B8CC(v40 > 1, v41 + 1, 1);
            uint64_t v39 = v82;
          }
          void v39[2] = v41 + 1;
          uint64_t v42 = &v39[2 * v41];
          v42[4] = v37;
          v42[5] = v36;
          v35 += 208;
          --v34;
        }
        while (v34);
      }
      swift_bridgeObjectRelease();
      v96._countAndFlagsBits = sub_26D620();
      sub_26D4E0(v96);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97._countAndFlagsBits = 41;
      v97._object = (void *)0xE100000000000000;
      sub_26D4E0(v97);
      return v83;
    case 9:
      unint64_t v43 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(23);
      long long v78 = v80;
      uint64_t v44 = "replaceShelfHeaders(";
      goto LABEL_32;
    case 10:
      unint64_t v43 = *(void *)v12;
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(23);
      long long v78 = v80;
      uint64_t v44 = "replaceShelfFooters(";
LABEL_32:
      v93._object = (void *)((unint64_t)(v44 - 32) | 0x8000000000000000);
      v93._countAndFlagsBits = 0xD000000000000014;
      sub_26D4E0(v93);
      unint64_t v83 = v43;
      long long v45 = *(_OWORD *)(a1 + 32);
      long long v80 = *(_OWORD *)(a1 + 16);
      long long v81 = v45;
      type metadata accessor for PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor();
LABEL_33:
      sub_26D680();
      swift_getWitnessTable();
      sub_26DD90();
      swift_bridgeObjectRelease();
      v94._countAndFlagsBits = 41;
      v94._object = (void *)0xE100000000000000;
      sub_26D4E0(v94);
      unint64_t v15 = v78;
      break;
    case 11:
      sub_1F2AE0((uint64_t)v12, (uint64_t)v10);
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_26DA90(50);
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = 0xD000000000000014;
      *((void *)&v80 + 1) = 0x800000000028BE00;
      uint64_t v47 = (uint64_t *)&v10[v7[5]];
      uint64_t v48 = (void *)v47[1];
      uint64_t v76 = v10;
      if (v48)
      {
        uint64_t v49 = *v47;
        uint64_t v50 = v48;
      }
      else
      {
        uint64_t v49 = 0x6E776F6E6B6E753CLL;
        uint64_t v50 = (void *)0xE90000000000003ELL;
      }
      swift_bridgeObjectRetain();
      v98._countAndFlagsBits = v49;
      v98._object = v50;
      sub_26D4E0(v98);
      swift_bridgeObjectRelease();
      v99._countAndFlagsBits = 0x67617373656D202CLL;
      v99._object = (void *)0xEB00000000203A65;
      sub_26D4E0(v99);
      long long v56 = (uint64_t *)&v76[v7[6]];
      if (v56[1])
      {
        uint64_t v57 = *v56;
        uint64_t v58 = (void *)v56[1];
      }
      else
      {
        uint64_t v57 = 0x6E776F6E6B6E753CLL;
        uint64_t v58 = (void *)0xE90000000000003ELL;
      }
      swift_bridgeObjectRetain();
      v100._countAndFlagsBits = v57;
      v100._object = v58;
      sub_26D4E0(v100);
      swift_bridgeObjectRelease();
      v101._object = (void *)0xEB00000000203A73;
      v101._countAndFlagsBits = 0x6E6F74747562202CLL;
      sub_26D4E0(v101);
      uint64_t v59 = (uint64_t)v76;
      unint64_t v60 = *(void *)&v76[v7[7]];
      int64_t v61 = *(void *)(v60 + 16);
      uint64_t v62 = _swiftEmptyArrayStorage;
      if (v61)
      {
        *(void *)&long long v78 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_2B8CC(0, v61, 0);
        uint64_t v63 = *(unsigned __int8 *)(v4 + 80);
        unint64_t v75 = v60;
        uint64_t v64 = v60 + ((v63 + 32) & ~v63);
        uint64_t v65 = *(void *)(v4 + 72);
        uint64_t v62 = (void *)v78;
        uint64_t v77 = v65;
        do
        {
          sub_1F2B44(v64, (uint64_t)v6);
          uint64_t v66 = *v6;
          uint64_t v67 = v6[1];
          swift_bridgeObjectRetain();
          sub_1F2BA8((uint64_t)v6, type metadata accessor for BooksAlertAction.Button);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2B8CC(0, v62[2] + 1, 1);
            uint64_t v65 = v77;
            uint64_t v62 = (void *)v78;
          }
          unint64_t v69 = v62[2];
          unint64_t v68 = v62[3];
          if (v69 >= v68 >> 1)
          {
            sub_2B8CC(v68 > 1, v69 + 1, 1);
            uint64_t v65 = v77;
            uint64_t v62 = (void *)v78;
          }
          v62[2] = v69 + 1;
          uint64_t v70 = &v62[2 * v69];
          v70[4] = v66;
          v70[5] = v67;
          v64 += v65;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)v76;
      }
      *(void *)&long long v78 = v62;
      sub_4A98(&qword_2E9F78);
      sub_A914();
      uint64_t v71 = sub_26D310();
      __int16 v73 = v72;
      swift_bridgeObjectRelease();
      v102._countAndFlagsBits = v71;
      v102._object = v73;
      sub_26D4E0(v102);
      swift_bridgeObjectRelease();
      v103._countAndFlagsBits = 10528;
      v103._object = (void *)0xE200000000000000;
      sub_26D4E0(v103);
      unint64_t v15 = v80;
      sub_1F2BA8(v59, type metadata accessor for BooksAlertAction);
      break;
    case 12:
      uint64_t v51 = *(void *)v12;
      strcpy((char *)&v80, "compound(");
      WORD5(v80) = 0;
      HIDWORD(v80) = -385875968;
      *(void *)&long long v78 = v51;
      __chkstk_darwin(EnumCaseMultiPayload);
      long long v52 = *(_OWORD *)(a1 + 32);
      *((_OWORD *)&v74 - 2) = *(_OWORD *)(a1 + 16);
      *((_OWORD *)&v74 - 1) = v52;
      uint64_t v53 = sub_26D680();
      uint64_t v54 = swift_getWitnessTable();
      sub_1C9978((void (*)(char *, char *))sub_1F2A84, (uint64_t)(&v74 - 6), v53, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v54, (uint64_t)&protocol witness table for Never, v55);
      swift_bridgeObjectRelease();
      v95._countAndFlagsBits = sub_26D620();
      sub_26D4E0(v95);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      unint64_t v15 = v80;
      break;
    case 13:
      return v15;
    case 14:
      unint64_t v15 = 0x646E6550706F7473;
      break;
    default:
      sub_AD44((long long *)v12, (uint64_t)&v80);
      strcpy((char *)&v78, "replacePage(");
      BYTE13(v78) = 0;
      HIWORD(v78) = -5120;
      sub_4ADC(&v80, *((uint64_t *)&v81 + 1));
      v85._countAndFlagsBits = sub_26C950();
      sub_26D4E0(v85);
      swift_bridgeObjectRelease();
      v86._countAndFlagsBits = 41;
      v86._object = (void *)0xE100000000000000;
      sub_26D4E0(v86);
      unint64_t v15 = v78;
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v80);
      break;
  }
  return v15;
}

uint64_t PageUpdateInstruction.ShelfItemUpdateDescriptor.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  unsigned __int8 v8 = *(unsigned char *)(v0 + 64);
  sub_26DA90(70);
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  v10._object = (void *)0x800000000028BEA0;
  sub_26D4E0(v10);
  v11._countAndFlagsBits = sub_26DD50();
  sub_26D4E0(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x800000000028BEC0;
  v12._countAndFlagsBits = 0xD000000000000011;
  sub_26D4E0(v12);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v1;
  v13._object = v3;
  sub_26D4E0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000014;
  v14._object = (void *)0x800000000028BEE0;
  sub_26D4E0(v14);
  sub_1F02FC(v2, v4, v5, v6, v7, v8);
  sub_4A98(qword_2F5A50);
  v15._countAndFlagsBits = sub_26D470();
  sub_26D4E0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 41;
  v16._object = (void *)0xE100000000000000;
  sub_26D4E0(v16);
  return 0;
}

unint64_t PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.description.getter()
{
  sub_26DA90(46);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v1;
  sub_26D4E0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_26D4E0(v5);
  return 0xD00000000000002BLL;
}

uint64_t _s7BooksUI14PaginationInfoO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16))
    {
      char v2 = sub_E5B9C(*(void **)a1, *(void **)a2);
      goto LABEL_12;
    }
LABEL_5:
    char v2 = 0;
    goto LABEL_12;
  }
  if (*(unsigned char *)(a2 + 16)) {
    goto LABEL_5;
  }
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    char v2 = 1;
  }
  else {
    char v2 = sub_26DDB0();
  }
LABEL_12:
  sub_1F0360();
  sub_1F0360();
  sub_1F0ACC();
  sub_1F0ACC();
  return v2 & 1;
}

unint64_t sub_1F2924()
{
  unint64_t result = qword_2F5A18;
  if (!qword_2F5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5A18);
  }
  return result;
}

unint64_t sub_1F2978()
{
  unint64_t result = qword_2F5A20;
  if (!qword_2F5A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5A20);
  }
  return result;
}

unint64_t sub_1F29CC()
{
  unint64_t result = qword_2F5A30;
  if (!qword_2F5A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5A30);
  }
  return result;
}

uint64_t sub_1F2A20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(&qword_2E9F78);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F2A84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t updated = type metadata accessor for PageUpdateInstruction();
  uint64_t result = PageUpdateInstruction.description.getter(updated);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1F2AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BooksAlertAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F2B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BooksAlertAction.Button(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F2BA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PageUpdateInstruction.ShelfItemUpdateDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PageUpdateInstruction.ShelfItemRemovalDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1F2C50()
{
  return sub_1F2C68();
}

uint64_t sub_1F2C68()
{
  return sub_26DAB0();
}

uint64_t sub_1F2CA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1F2CE8()
{
  return 32;
}

__n128 sub_1F2CF4(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_1F2D00()
{
  sub_26CB80();
  if (v0 <= 0x3F)
  {
    sub_141A10();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1F2DDC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26CB80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[13];
    uint64_t v9 = (char *)a1 + v8;
    Swift::String v10 = (char *)a2 + v8;
    uint64_t v11 = sub_269CE0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EA820);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[14];
    long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)a1 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  }
  return a1;
}

uint64_t sub_1F2FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 52);
  uint64_t v6 = sub_269CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 56);

  return _s7BooksUI13AnyPagedFrameVwxx_0(v8);
}

uint64_t sub_1F30D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_269CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_4A98(&qword_2EA820);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[14];
  long long v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1F3274(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_269CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_4A98(&qword_2EA820);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  sub_16D58((uint64_t *)(a1 + a3[14]), (uint64_t *)(a2 + a3[14]));
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1F344C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_269CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_4A98(&qword_2EA820);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[14];
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1F35C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_269CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_4A98(&qword_2EA820);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[14];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1F37B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F37C8);
}

uint64_t sub_1F37C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EA820);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 52);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 56) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1F38E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F38F8);
}

uint64_t sub_1F38F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_26CB80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2EA820);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 56) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 52);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1F3A10()
{
  uint64_t result = type metadata accessor for BooksAlertAction(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1F3ACC(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v7 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v10 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v11 = sub_26CB80();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = (int *)type metadata accessor for BooksAlertAction(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v16;
        uint64_t v17 = v12[6];
        uint64_t v18 = &a1[v17];
        long long v19 = &a2[v17];
        uint64_t v20 = *((void *)v19 + 1);
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = v20;
        *(void *)&a1[v12[7]] = *(void *)&a2[v12[7]];
        uint64_t v21 = v12[8];
        unint64_t v36 = &a2[v21];
        unint64_t v37 = &a1[v21];
        uint64_t v22 = sub_269B00();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23(v37, v36, v22);
        uint64_t v24 = v12[9];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = *((void *)v26 + 1);
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        uint64_t v28 = *((void *)v26 + 3);
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *((void *)v25 + 3) = v28;
        uint64_t v29 = *((void *)v26 + 5);
        *((void *)v25 + 4) = *((void *)v26 + 4);
        *((void *)v25 + 5) = v29;
        uint64_t v30 = *((void *)v26 + 7);
        *((void *)v25 + 6) = *((void *)v26 + 6);
        *((void *)v25 + 7) = v30;
        uint64_t v31 = *((void *)v26 + 9);
        *((void *)v25 + 8) = *((void *)v26 + 8);
        *((void *)v25 + 9) = v31;
        uint64_t v32 = *((void *)v26 + 11);
        *((void *)v25 + 10) = *((void *)v26 + 10);
        *((void *)v25 + 11) = v32;
        uint64_t v33 = *((void *)v26 + 13);
        *((void *)v25 + 12) = *((void *)v26 + 12);
        *((void *)v25 + 13) = v33;
        uint64_t v34 = *((void *)v26 + 15);
        *((void *)v25 + 14) = *((void *)v26 + 14);
        *((void *)v25 + 15) = v34;
        uint64_t v35 = *((void *)v26 + 17);
        *((void *)v25 + 16) = *((void *)v26 + 16);
        *((void *)v25 + 17) = v35;
        v25[144] = v26[144];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1F3F34(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
      goto LABEL_2;
    case 11:
      uint64_t v3 = sub_26CB80();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = type metadata accessor for BooksAlertAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(v4 + 32);
      uint64_t v6 = sub_269B00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1F4110(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_7;
    case 1u:
    case 2u:
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      uint64_t v7 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 0xBu:
      uint64_t v8 = sub_26CB80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for BooksAlertAction(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = *((void *)v12 + 1);
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = v13;
      uint64_t v14 = v9[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
      uint64_t v18 = v9[8];
      uint64_t v34 = &a2[v18];
      uint64_t v35 = &a1[v18];
      uint64_t v19 = sub_269B00();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v35, v34, v19);
      uint64_t v21 = v9[9];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      uint64_t v25 = *((void *)v23 + 3);
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((void *)v22 + 3) = v25;
      uint64_t v26 = *((void *)v23 + 5);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      *((void *)v22 + 5) = v26;
      uint64_t v27 = *((void *)v23 + 7);
      *((void *)v22 + 6) = *((void *)v23 + 6);
      *((void *)v22 + 7) = v27;
      uint64_t v28 = *((void *)v23 + 9);
      *((void *)v22 + 8) = *((void *)v23 + 8);
      *((void *)v22 + 9) = v28;
      uint64_t v29 = *((void *)v23 + 11);
      *((void *)v22 + 10) = *((void *)v23 + 10);
      *((void *)v22 + 11) = v29;
      uint64_t v30 = *((void *)v23 + 13);
      *((void *)v22 + 12) = *((void *)v23 + 12);
      *((void *)v22 + 13) = v30;
      uint64_t v31 = *((void *)v23 + 15);
      *((void *)v22 + 14) = *((void *)v23 + 14);
      *((void *)v22 + 15) = v31;
      uint64_t v32 = *((void *)v23 + 17);
      *((void *)v22 + 16) = *((void *)v23 + 16);
      *((void *)v22 + 17) = v32;
      v22[144] = v23[144];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1F4504(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v6 - 8))(a1, a2);
        goto LABEL_8;
      case 1u:
      case 2u:
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 0xBu:
        uint64_t v7 = sub_26CB80();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = (int *)type metadata accessor for BooksAlertAction(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = (void *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        void *v10 = *v11;
        v10[1] = v11[1];
        uint64_t v12 = v8[6];
        uint64_t v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        void *v13 = *v14;
        v13[1] = v14[1];
        *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
        uint64_t v15 = v8[8];
        uint64_t v22 = (char *)a2 + v15;
        uint64_t v23 = (char *)a1 + v15;
        uint64_t v16 = sub_269B00();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v23, v22, v16);
        uint64_t v18 = v8[9];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *((void *)v19 + 5) = *((void *)v20 + 5);
        *((void *)v19 + 6) = *((void *)v20 + 6);
        *((void *)v19 + 7) = *((void *)v20 + 7);
        *((void *)v19 + 8) = *((void *)v20 + 8);
        *((void *)v19 + 9) = *((void *)v20 + 9);
        *((void *)v19 + 10) = *((void *)v20 + 10);
        *((void *)v19 + 11) = *((void *)v20 + 11);
        *((void *)v19 + 12) = *((void *)v20 + 12);
        *((void *)v19 + 13) = *((void *)v20 + 13);
        *((void *)v19 + 14) = *((void *)v20 + 14);
        *((void *)v19 + 15) = *((void *)v20 + 15);
        *((void *)v19 + 16) = *((void *)v20 + 16);
        *((void *)v19 + 17) = *((void *)v20 + 17);
        v19[144] = v20[144];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }
  return a1;
}

char *sub_1F49B0(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 11)
  {
    uint64_t v6 = sub_26CB80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for BooksAlertAction(0);
    *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
    *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    uint64_t v8 = v7[8];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_269B00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    uint64_t v12 = v7[9];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    long long v15 = *((_OWORD *)v14 + 7);
    *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
    *((_OWORD *)v13 + 7) = v15;
    *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
    v13[144] = v14[144];
    long long v16 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v13 + 3) = v16;
    long long v17 = *((_OWORD *)v14 + 5);
    *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
    *((_OWORD *)v13 + 5) = v17;
    long long v18 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v18;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1F4B24(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      uint64_t v6 = sub_26CB80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for BooksAlertAction(0);
      *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      uint64_t v8 = v7[8];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_269B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      uint64_t v12 = v7[9];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v15;
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      v13[144] = v14[144];
      long long v16 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v16;
      long long v17 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v17;
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_1F4CEC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    uint64_t result = sub_1F0ACC();
    if (*(unsigned __int8 *)(a1 + 64) != 255)
    {
      return sub_1F0ACC();
    }
  }
  return result;
}

uint64_t sub_1F4D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    char v7 = v5 & 1;
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    sub_1F0360();
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v7;
    int v10 = *(unsigned __int8 *)(a2 + 64);
    if (v10 == 255)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    }
    else
    {
      char v11 = v10 & 1;
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v12 = *(void *)(a2 + 56);
      sub_1F0360();
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = v11;
    }
  }
  return a1;
}

uint64_t sub_1F4E48(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) == 0xFF)
  {
    if (v6 == 255)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      *(_OWORD *)(a1 + 40) = v8;
LABEL_4:
      *uint64_t v4 = v7;
      return a1;
    }
    char v11 = v6 & 1;
    uint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = *(void *)(a2 + 32);
    sub_1F0360();
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 40) = v11;
    int v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 == 255)
    {
      long long v15 = *(_OWORD *)(a2 + 48);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = v15;
      return a1;
    }
    goto LABEL_14;
  }
  if (v6 == 255)
  {
    sub_1F5064(a1 + 24);
    long long v9 = *(_OWORD *)(a2 + 49);
    long long v10 = *(_OWORD *)(a2 + 40);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 49) = v9;
    return a1;
  }
  char v16 = v6 & 1;
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  sub_1F0360();
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v18;
  *(unsigned char *)(a1 + 40) = v16;
  sub_1F0ACC();
  uint64_t v4 = (long long *)(a1 + 48);
  uint64_t v19 = (long long *)(a2 + 48);
  int v14 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v14 == 255)
    {
      long long v7 = *v19;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      goto LABEL_4;
    }
LABEL_14:
    char v21 = v14 & 1;
    uint64_t v23 = *(void *)(a2 + 48);
    uint64_t v22 = *(void *)(a2 + 56);
    sub_1F0360();
    *(void *)(a1 + 48) = v23;
    *(void *)(a1 + 56) = v22;
    *(unsigned char *)(a1 + 64) = v21;
    return a1;
  }
  if (v14 == 255)
  {
    sub_1F5030(a1 + 48);
    char v20 = *(unsigned char *)(a2 + 64);
    *uint64_t v4 = *v19;
    *(unsigned char *)(a1 + 64) = v20;
  }
  else
  {
    char v24 = v14 & 1;
    uint64_t v26 = *(void *)(a2 + 48);
    uint64_t v25 = *(void *)(a2 + 56);
    sub_1F0360();
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v25;
    *(unsigned char *)(a1 + 64) = v24;
    sub_1F0ACC();
  }
  return a1;
}

uint64_t sub_1F5030(uint64_t a1)
{
  return a1;
}

uint64_t sub_1F5064(uint64_t a1)
{
  return a1;
}

uint64_t sub_1F5094(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) == 255) {
    goto LABEL_4;
  }
  uint64_t v5 = *(unsigned __int8 *)(a2 + 40);
  if (v5 == 255)
  {
    sub_1F5064(a1 + 24);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    return a1;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5 & 1;
  sub_1F0ACC();
  long long v7 = (_OWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 64) != 255)
  {
    int v8 = *(unsigned __int8 *)(a2 + 64);
    if (v8 != 255)
    {
      *(_OWORD *)(a1 + 48) = *v7;
      *(unsigned char *)(a1 + 64) = v8 & 1;
      sub_1F0ACC();
      return a1;
    }
    sub_1F5030(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_1F5194(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1F51DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1F5234()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1F5270(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1F52B0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1F5318(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1F5360(uint64_t a1)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1F5398(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1F5400(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1F544C(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1F5498(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1F54E0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for PaginationUpdate(uint64_t a1)
{
  uint64_t result = sub_1F0ACC();
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    return sub_1F0ACC();
  }
  return result;
}

uint64_t initializeWithCopy for PaginationUpdate(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_1F0360();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  int v7 = *((unsigned __int8 *)a2 + 40);
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  }
  else
  {
    char v8 = v7 & 1;
    uint64_t v10 = a2[3];
    uint64_t v9 = a2[4];
    sub_1F0360();
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t assignWithCopy for PaginationUpdate(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_1F0360();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1F0ACC();
  int v7 = (long long *)(a1 + 24);
  char v8 = (long long *)(a2 + 3);
  int v9 = *((unsigned __int8 *)a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v9 == 255)
    {
      long long v11 = *v8;
      *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
      long long *v7 = v11;
    }
    else
    {
      char v15 = v9 & 1;
      uint64_t v17 = a2[3];
      uint64_t v16 = a2[4];
      sub_1F0360();
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = v16;
      *(unsigned char *)(a1 + 40) = v15;
    }
  }
  else if (v9 == 255)
  {
    sub_1F5030(a1 + 24);
    char v10 = *((unsigned char *)a2 + 40);
    long long *v7 = *v8;
    *(unsigned char *)(a1 + 40) = v10;
  }
  else
  {
    char v12 = v9 & 1;
    uint64_t v14 = a2[3];
    uint64_t v13 = a2[4];
    sub_1F0360();
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 40) = v12;
    sub_1F0ACC();
  }
  return a1;
}

__n128 initializeWithTake for PaginationUpdate(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PaginationUpdate(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1F0ACC();
  uint64_t v5 = (_OWORD *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      *(_OWORD *)(a1 + 24) = *v5;
      *(unsigned char *)(a1 + 40) = v6 & 1;
      sub_1F0ACC();
      return a1;
    }
    sub_1F5030(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaginationUpdate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaginationUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationUpdate()
{
  return &type metadata for PaginationUpdate;
}

uint64_t destroy for PaginationInfo()
{
  return sub_1F0ACC();
}

uint64_t _s7BooksUI14PaginationInfoOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1F0360();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PaginationInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1F0360();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1F0ACC();
  return a1;
}

uint64_t assignWithTake for PaginationInfo(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1F0ACC();
  return a1;
}

ValueMetadata *type metadata accessor for PaginationInfo()
{
  return &type metadata for PaginationInfo;
}

ValueMetadata *type metadata accessor for PaginationInfo.CodingKeys()
{
  return &type metadata for PaginationInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for PaginationInfo.NextHrefCodingKeys()
{
  return &type metadata for PaginationInfo.NextHrefCodingKeys;
}

unsigned char *_s7BooksUI14PaginationInfoO18NextHrefCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1F5A74);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationInfo.NextAssetIDsCodingKeys()
{
  return &type metadata for PaginationInfo.NextAssetIDsCodingKeys;
}

unsigned char *_s7BooksUI14PaginationInfoO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F5B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationUpdate.CodingKeys()
{
  return &type metadata for PaginationUpdate.CodingKeys;
}

unsigned char *sub_1F5BB0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F5C7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1F5CA4()
{
  return swift_getWitnessTable();
}

unint64_t sub_1F5CC4()
{
  unint64_t result = qword_2F5D58;
  if (!qword_2F5D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D58);
  }
  return result;
}

unint64_t sub_1F5D1C()
{
  unint64_t result = qword_2F5D60;
  if (!qword_2F5D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D60);
  }
  return result;
}

unint64_t sub_1F5D74()
{
  unint64_t result = qword_2F5D68;
  if (!qword_2F5D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D68);
  }
  return result;
}

unint64_t sub_1F5DCC()
{
  unint64_t result = qword_2F5D70;
  if (!qword_2F5D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D70);
  }
  return result;
}

unint64_t sub_1F5E24()
{
  unint64_t result = qword_2F5D78;
  if (!qword_2F5D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D78);
  }
  return result;
}

unint64_t sub_1F5E7C()
{
  unint64_t result = qword_2F5D80;
  if (!qword_2F5D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D80);
  }
  return result;
}

unint64_t sub_1F5ED4()
{
  unint64_t result = qword_2F5D88;
  if (!qword_2F5D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D88);
  }
  return result;
}

unint64_t sub_1F5F2C()
{
  unint64_t result = qword_2F5D90;
  if (!qword_2F5D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D90);
  }
  return result;
}

unint64_t sub_1F5F84()
{
  unint64_t result = qword_2F5D98;
  if (!qword_2F5D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5D98);
  }
  return result;
}

unint64_t sub_1F5FDC()
{
  unint64_t result = qword_2F5DA0;
  if (!qword_2F5DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DA0);
  }
  return result;
}

unint64_t sub_1F6034()
{
  unint64_t result = qword_2F5DA8;
  if (!qword_2F5DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DA8);
  }
  return result;
}

unint64_t sub_1F608C()
{
  unint64_t result = qword_2F5DB0;
  if (!qword_2F5DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DB0);
  }
  return result;
}

uint64_t sub_1F60E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1F60FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1F6118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047342 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1F61F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x666572487478656ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657373417478656ELL && a2 == 0xEC00000073444974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1F6304@<X0>(uint64_t a1@<X0>, __int16 a2@<W2>, uint64_t a3@<X8>)
{
  v19[0] = a1;
  v19[1] = a3;
  uint64_t v4 = sub_4A98(&qword_2F5DC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F5DC8);
  __chkstk_darwin(v8);
  char v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F5DD0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) != 0)
  {
    unint64_t v18 = sub_1F67F8();
    sub_26BB50();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v14, v11);
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = v4;
    unint64_t v21 = v18;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    char v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v7, (char *)v19[0], v4);
    v15(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    unint64_t v16 = sub_1F67F8();
    uint64_t v20 = v4;
    unint64_t v21 = v16;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1F65FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1F6304(a1, v3 | *(unsigned __int8 *)(v2 + 8), a2);
}

uint64_t View.shelfGridContentMaxWidth(_:isActive:)()
{
  return sub_26C030();
}

uint64_t sub_1F6668()
{
  return swift_getWitnessTable();
}

unint64_t sub_1F66CC()
{
  unint64_t result = qword_2F5DB8;
  if (!qword_2F5DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DB8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ShelfGridMaxWidthViewModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfGridMaxWidthViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridMaxWidthViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridMaxWidthViewModifier()
{
  return &type metadata for ShelfGridMaxWidthViewModifier;
}

uint64_t sub_1F67DC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1F67F8()
{
  unint64_t result = qword_2F5DD8;
  if (!qword_2F5DD8)
  {
    sub_7B0C(&qword_2F5DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DD8);
  }
  return result;
}

unint64_t sub_1F6858()
{
  unint64_t result = qword_2F5DE0;
  if (!qword_2F5DE0)
  {
    sub_7B0C(&qword_2F5DE8);
    sub_7B0C(&qword_2F5DC0);
    sub_1F67F8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5DE0);
  }
  return result;
}

uint64_t static FlowActionDestination<>.newCardSet(focusedAdamID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1F6918(char *a1, char *a2)
{
  return sub_10A028(*a1, *a2);
}

Swift::Int sub_1F6924()
{
  return sub_26DF20();
}

uint64_t sub_1F69B8()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1F6A38()
{
  return sub_26DF20();
}

uint64_t sub_1F6AC8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  unsigned int v3 = (void *)a1[1];
  v4._rawValue = &off_2DC420;
  v8._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1F6B28(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x536472614377656ELL;
  if (*v1) {
    uint64_t v2 = 0x4164657375636F66;
  }
  unint64_t v3 = 0xEA00000000007465;
  if (*v1) {
    unint64_t v3 = 0xED000044496D6164;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1F6B78()
{
  if (*v0) {
    return 0x4164657375636F66;
  }
  else {
    return 0x536472614377656ELL;
  }
}

uint64_t sub_1F6BC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DC420;
  v9._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1F6C28(uint64_t a1)
{
  unint64_t v2 = sub_1F71A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F6C64(uint64_t a1)
{
  unint64_t v2 = sub_1F71A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1F6CA0()
{
  return sub_26DF20();
}

uint64_t sub_1F6D00()
{
  return sub_26D4B0();
}

Swift::Int sub_1F6D24()
{
  return sub_26DF20();
}

uint64_t sub_1F6D80@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DC470;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_1F6DD4(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1F6DFC()
{
  return 0x4164657375636F66;
}

uint64_t sub_1F6E20@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_2DC4A8;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_1F6E78(uint64_t a1)
{
  unint64_t v2 = sub_1F71F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F6EB4(uint64_t a1)
{
  unint64_t v2 = sub_1F71F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowAction.NewCardSetDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v21 = a2;
  uint64_t v4 = sub_4A98(&qword_2F5DF0);
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::Int v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2F5DF8);
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  Swift::String v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_1F71A0();
  sub_26DFC0();
  if (!v2)
  {
    uint64_t v10 = v22;
    uint64_t v11 = v7;
    char v26 = 0;
    if (sub_26DCB0())
    {
      char v24 = 0;
      sub_1F71F4();
      sub_26DC10();
      uint64_t v16 = v4;
      uint64_t v17 = sub_26DC70();
      uint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v16);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v23);
    }
    else
    {
      char v25 = 1;
      uint64_t v12 = v23;
      uint64_t v17 = sub_26DC70();
      uint64_t v19 = v13;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
    }
    uint64_t v14 = v21;
    *unint64_t v21 = v17;
    v14[1] = v19;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

unint64_t sub_1F71A0()
{
  unint64_t result = qword_2F5E00;
  if (!qword_2F5E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E00);
  }
  return result;
}

unint64_t sub_1F71F4()
{
  unint64_t result = qword_2F5E08;
  if (!qword_2F5E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E08);
  }
  return result;
}

unint64_t sub_1F7248(uint64_t a1)
{
  unint64_t result = sub_1F7270();
  *(void *)(a1 + 8) = result;
  return result;
}