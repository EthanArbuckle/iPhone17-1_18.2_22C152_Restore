void sub_3688(void *a1)
{
  id v1;
  id v2;
  uint64_t vars8;

  v1 = a1;
  v2 = [v1 delegate];
  [v2 parserDidStartDocument:v1];
}

void sub_36E0(void *a1)
{
  id v1 = a1;
  id v2 = [v1 delegate];
  [v2 parserDidEndDocument:v1];
}

void sub_3738(void *a1, const xmlChar *a2, xmlChar **a3)
{
  id v16 = a1;
  uint64_t v17 = 0;
  if (sub_3A88(a2, &v17))
  {
    v5 = [v16 delegate];
    uint64_t v6 = v17;
    if (a3)
    {
      id v7 = objc_alloc_init((Class)NSMutableDictionary);
      v8 = *a3;
      if (*a3)
      {
        v9 = a3 + 2;
        do
        {
          v10 = *(v9 - 1);
          int v11 = xmlStrlen(v8);
          v12 = sub_3B74((__CFString *)v8, v11);
          int v13 = xmlStrlen(v10);
          v14 = sub_3B74((__CFString *)v10, v13);
          [v7 setObject:v14 forKeyedSubscript:v12];

          v15 = *v9;
          v9 += 2;
          v8 = v15;
        }
        while (v15);
      }
    }
    else
    {
      id v7 = &__NSDictionary0__struct;
    }
    [v5 parser:v16 didStartElement:v6 attributes:v7];
  }
}

uint64_t sub_3858(void *a1, const xmlChar *a2)
{
  id v5 = a1;
  if (xmlStrEqual(a2, (const xmlChar *)"br"))
  {
    v3 = [v5 delegate];
    [v3 parserDidFindNewline:v5];
  }
  else
  {
    uint64_t v6 = 0;
    if (!sub_3A88(a2, &v6)) {
      goto LABEL_6;
    }
    v3 = [v5 delegate];
    [v3 parser:v5 didEndElement:v6];
  }

LABEL_6:

  return _objc_release_x1();
}

void sub_3900(void *a1, __CFString *a2, int a3)
{
  id v7 = a1;
  id v5 = sub_3B74(a2, a3);
  if (v5)
  {
    uint64_t v6 = [v7 delegate];
    [v6 parser:v7 didFindCharacters:v5];
  }
}

void sub_3984(void *a1)
{
  id v3 = a1;
  xmlErrorPtr LastError = xmlCtxtGetLastError([v3 _parserContext]);
  if (LastError)
  {
    xmlErrorPtr v2 = LastError;
    [v3 reportParseError:LastError];
    if (v2->level == XML_ERR_FATAL) {
      xmlStopParser((xmlParserCtxtPtr)[v3 _parserContext]);
    }
  }
}

uint64_t sub_3A88(const xmlChar *a1, uint64_t *a2)
{
  if (xmlStrEqual(a1, (const xmlChar *)"b") || xmlStrEqual(a1, (const xmlChar *)"strong"))
  {
    uint64_t v4 = 0;
LABEL_4:
    *a2 = v4;
    return 1;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"i") || xmlStrEqual(a1, (const xmlChar *)"em"))
  {
    uint64_t v4 = 1;
    goto LABEL_4;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"u"))
  {
    uint64_t v4 = 2;
    goto LABEL_4;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"strike") || xmlStrEqual(a1, (const xmlChar *)"del"))
  {
    uint64_t v4 = 3;
    goto LABEL_4;
  }
  uint64_t result = xmlStrEqual(a1, (const xmlChar *)"a");
  if (result)
  {
    uint64_t v4 = 4;
    goto LABEL_4;
  }
  return result;
}

__CFString *sub_3B74(__CFString *a1, uint64_t a2)
{
  if (a1)
  {
    if (a2) {
      a1 = (__CFString *)[objc_alloc((Class)NSString) initWithBytes:a1 length:a2 encoding:4];
    }
    else {
      a1 = &stru_2E7EB8;
    }
    uint64_t v2 = vars8;
  }
  return a1;
}

BooksUI::ActionOrigin::Kind_optional __swiftcall ActionOrigin.Kind.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  id v3 = v1;
  v4._rawValue = &off_2DAEC0;
  v8._object = object;
  unint64_t v5 = sub_26DC00(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ActionOrigin.Kind.rawValue.getter()
{
  uint64_t result = 0x726564616568;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265746F6F66;
      break;
    case 2:
      uint64_t result = 0x70756B636F6CLL;
      break;
    case 3:
      uint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_3CAC(unsigned __int8 *a1, char *a2)
{
  return sub_10A180(*a1, *a2);
}

Swift::Int sub_3CB8()
{
  return sub_26DF20();
}

uint64_t sub_3D7C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3E28()
{
  return sub_26DF20();
}

BooksUI::ActionOrigin::Kind_optional sub_3EE8(Swift::String *a1)
{
  return ActionOrigin.Kind.init(rawValue:)(*a1);
}

void sub_3EF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x726564616568;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7265746F6F66;
      goto LABEL_3;
    case 2:
      *a1 = 0x70756B636F6CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x726568746FLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE600000000000000;
      break;
  }
}

uint64_t sub_3F78()
{
  return sub_26D5E0();
}

uint64_t sub_3FD8()
{
  return sub_26D5A0();
}

uint64_t Metrics.Location.adamId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.artistName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.fcKind.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.idType.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoverViewModel.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.locationType.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

void ActionOrigin.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 144);
}

void __swiftcall ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(BooksUI::ActionOrigin *__return_ptr retstr, Swift::String_optional sectionID, Swift::String_optional sectionName, Swift::String_optional contentID, BooksUI::ActionOrigin::Kind kind, Swift::String_optional seriesID, Swift::String_optional genreID, Swift::String_optional collectionID, Swift::String_optional authorID, Swift::String_optional flowcaseID, Swift::String_optional brickID)
{
  BooksUI::ActionOrigin::Kind v11 = *(unsigned char *)kind;
  retstr->sectionID = sectionID;
  retstr->sectionName = sectionName;
  retstr->seriesID.value._countAndFlagsBits = seriesID.value._countAndFlagsBits;
  *(Swift::String_optional *)&retstr->seriesID.value._object = *(Swift::String_optional *)&seriesID.value._object;
  *(Swift::String_optional *)&retstr->genreID.value._object = *(Swift::String_optional *)((char *)&collectionID - 8);
  *(Swift::String_optional *)&retstr->collectionID.value._object = *(Swift::String_optional *)&collectionID.value._object;
  *(Swift::String_optional *)&retstr->authorID.value._object = *(Swift::String_optional *)&authorID.value._object;
  *(Swift::String_optional *)&retstr->flowcaseID.value._object = *(Swift::String_optional *)((char *)&brickID - 8);
  retstr->brickID.value._object = brickID.value._object;
  retstr->contentID = contentID;
  retstr->kind = v11;
}

uint64_t sub_4228(char a1)
{
  uint64_t result = 0x496E6F6974636573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4E6E6F6974636573;
      break;
    case 2:
      uint64_t result = 0x49746E65746E6F63;
      break;
    case 3:
      uint64_t result = 0x646E696B24;
      break;
    case 4:
      uint64_t result = 0x4449736569726573;
      break;
    case 5:
      uint64_t result = 0x444965726E6567;
      break;
    case 6:
      uint64_t result = 0x697463656C6C6F63;
      break;
    case 7:
      uint64_t result = 0x4449726F68747561;
      break;
    case 8:
      uint64_t result = 0x65736163776F6C66;
      break;
    case 9:
      uint64_t result = 0x44496B63697262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_4374(char a1)
{
  uint64_t result = 0x496E6F6974636573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4E6E6F6974636573;
      break;
    case 2:
      uint64_t result = 0x49746E65746E6F63;
      break;
    case 3:
      uint64_t result = 0x646E696B24;
      break;
    case 4:
      uint64_t result = 0x4449736569726573;
      break;
    case 5:
      uint64_t result = 0x444965726E6567;
      break;
    case 6:
      uint64_t result = 0x697463656C6C6F63;
      break;
    case 7:
      uint64_t result = 0x4449726F68747561;
      break;
    case 8:
      uint64_t result = 0x65736163776F6C66;
      break;
    case 9:
      uint64_t result = 0x44496B63697262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_44C0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_4228(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_4228(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_454C()
{
  char v1 = *v0;
  sub_26DEF0();
  sub_4228(v1);
  sub_26D4B0();
  swift_bridgeObjectRelease();
  return sub_26DF20();
}

uint64_t sub_45B0()
{
  sub_4228(*v0);
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_4604()
{
  char v1 = *v0;
  sub_26DEF0();
  sub_4228(v1);
  sub_26D4B0();
  swift_bridgeObjectRelease();
  return sub_26DF20();
}

uint64_t sub_4664@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_6708(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4228(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_46C0()
{
  return sub_4374(*v0);
}

uint64_t sub_46C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_6708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_46F0()
{
  return 0;
}

void sub_46FC(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_4708(uint64_t a1)
{
  unint64_t v2 = sub_4B20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_4744(uint64_t a1)
{
  unint64_t v2 = sub_4B20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ActionOrigin.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2E9D70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v22[14] = *(void *)(v1 + 24);
  v22[15] = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  v22[12] = *(void *)(v1 + 40);
  v22[13] = v8;
  uint64_t v9 = *(void *)(v1 + 56);
  v22[8] = *(void *)(v1 + 48);
  v22[9] = v9;
  uint64_t v10 = *(void *)(v1 + 72);
  v22[6] = *(void *)(v1 + 64);
  v22[7] = v10;
  uint64_t v11 = *(void *)(v1 + 88);
  v22[4] = *(void *)(v1 + 80);
  v22[5] = v11;
  uint64_t v12 = *(void *)(v1 + 104);
  v22[2] = *(void *)(v1 + 96);
  v22[3] = v12;
  uint64_t v13 = *(void *)(v1 + 120);
  v22[0] = *(void *)(v1 + 112);
  v22[1] = v13;
  uint64_t v14 = *(void *)(v1 + 128);
  v22[10] = *(void *)(v1 + 136);
  v22[11] = v14;
  char v15 = *(unsigned char *)(v1 + 144);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1;
  uint64_t v19 = v18;
  sub_4ADC(v17, v16);
  sub_4B20();
  sub_26DFE0();
  char v33 = 0;
  uint64_t v20 = v22[16];
  sub_26DCE0();
  if (!v20)
  {
    char v32 = 1;
    sub_26DCE0();
    char v31 = 2;
    sub_26DCE0();
    char v30 = v15;
    char v29 = 3;
    sub_4B74();
    sub_26DD30();
    char v28 = 4;
    sub_26DCE0();
    char v27 = 5;
    sub_26DCE0();
    char v26 = 6;
    sub_26DCE0();
    char v25 = 7;
    sub_26DCE0();
    char v24 = 8;
    sub_26DCE0();
    char v23 = 9;
    sub_26DCE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

uint64_t sub_4A98(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_4ADC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_4B20()
{
  unint64_t result = qword_2E9D78;
  if (!qword_2E9D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9D78);
  }
  return result;
}

unint64_t sub_4B74()
{
  unint64_t result = qword_2E9D80;
  if (!qword_2E9D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9D80);
  }
  return result;
}

uint64_t ActionOrigin.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2E9D88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v59 = a1;
  sub_4ADC(a1, v9);
  sub_4B20();
  sub_26DFC0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v59);
  }
  uint64_t v10 = v6;
  uint64_t v56 = a2;
  LOBYTE(v70[0]) = 0;
  uint64_t v11 = sub_26DC30();
  uint64_t v13 = v12;
  LOBYTE(v70[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_26DC30();
  LOBYTE(v70[0]) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_26DC30();
  uint64_t v58 = v15;
  uint64_t v54 = v16;
  LOBYTE(v60) = 3;
  uint64_t v18 = v17;
  sub_545C();
  swift_bridgeObjectRetain();
  sub_26DC90();
  uint64_t v57 = v18;
  LODWORD(v18) = LOBYTE(v70[0]);
  LOBYTE(v70[0]) = 4;
  uint64_t v53 = sub_26DC30();
  int v72 = v18;
  LOBYTE(v70[0]) = 5;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_26DC30();
  uint64_t v52 = v20;
  LOBYTE(v70[0]) = 6;
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_26DC30();
  uint64_t v51 = v24;
  uint64_t v46 = v23;
  LOBYTE(v70[0]) = 7;
  swift_bridgeObjectRetain();
  uint64_t v48 = 0;
  uint64_t v44 = sub_26DC30();
  uint64_t v45 = v22;
  LOBYTE(v70[0]) = 8;
  uint64_t v49 = v25;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_26DC30();
  char v73 = 9;
  uint64_t v47 = v26;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_26DC30();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  *(void *)&long long v60 = v11;
  *((void *)&v60 + 1) = v13;
  *(void *)&long long v61 = v55;
  *((void *)&v61 + 1) = v58;
  *(void *)&long long v62 = v53;
  *((void *)&v62 + 1) = v52;
  uint64_t v30 = v49;
  *(void *)&long long v63 = v50;
  *((void *)&v63 + 1) = v45;
  *(void *)&long long v64 = v46;
  *((void *)&v64 + 1) = v51;
  *(void *)&long long v65 = v44;
  *((void *)&v65 + 1) = v49;
  *(void *)&long long v66 = v43;
  *((void *)&v66 + 1) = v47;
  uint64_t v41 = v29;
  uint64_t v42 = v27;
  *(void *)&long long v67 = v27;
  *((void *)&v67 + 1) = v29;
  uint64_t v31 = v57;
  *(void *)&long long v68 = v54;
  *((void *)&v68 + 1) = v57;
  char v69 = v72;
  sub_54B0((uint64_t)&v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v35 = v67;
  uint64_t v36 = v56;
  *(_OWORD *)(v56 + 96) = v66;
  *(_OWORD *)(v36 + 112) = v35;
  *(_OWORD *)(v36 + 128) = v68;
  *(unsigned char *)(v36 + 144) = v69;
  long long v37 = v63;
  *(_OWORD *)(v36 + 32) = v62;
  *(_OWORD *)(v36 + 48) = v37;
  long long v38 = v65;
  *(_OWORD *)(v36 + 64) = v64;
  *(_OWORD *)(v36 + 80) = v38;
  long long v39 = v61;
  *(_OWORD *)uint64_t v36 = v60;
  *(_OWORD *)(v36 + 16) = v39;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v59);
  v70[0] = v11;
  v70[1] = v13;
  v70[2] = v55;
  v70[3] = v58;
  v70[4] = v53;
  v70[5] = v32;
  v70[6] = v50;
  v70[7] = v45;
  v70[8] = v46;
  v70[9] = v33;
  v70[10] = v44;
  v70[11] = v30;
  v70[12] = v43;
  v70[13] = v34;
  v70[14] = v42;
  v70[15] = v41;
  v70[16] = v54;
  v70[17] = v31;
  char v71 = v72;
  return sub_555C((uint64_t)v70);
}

uint64_t _s7BooksUI13AnyPagedFrameVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_545C()
{
  unint64_t result = qword_2E9D90;
  if (!qword_2E9D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9D90);
  }
  return result;
}

uint64_t sub_54B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_555C(uint64_t a1)
{
  return a1;
}

unint64_t sub_560C()
{
  unint64_t result = qword_2E9D98;
  if (!qword_2E9D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9D98);
  }
  return result;
}

uint64_t sub_5660@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionOrigin.init(from:)(a1, a2);
}

uint64_t sub_5678(void *a1)
{
  return ActionOrigin.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for ActionOrigin(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ActionOrigin()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionOrigin(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionOrigin(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

__n128 initializeWithTake for ActionOrigin(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ActionOrigin(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionOrigin(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 145)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionOrigin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 145) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionOrigin()
{
  return &type metadata for ActionOrigin;
}

unsigned char *initializeBufferWithCopyOfBuffer for ActionOrigin.Kind(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActionOrigin.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionOrigin.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionOrigin.Kind()
{
  return &type metadata for ActionOrigin.Kind;
}

void type metadata accessor for HorizontalAlignment(uint64_t a1)
{
}

void type metadata accessor for ButtonType(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

__n128 initializeWithCopy for GenericGeometryReference(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for GenericGeometryReference(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GenericGeometryReference(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 initializeWithTake for ViewSizeConditionsViewModifier(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for TranslationEffect(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranslationEffect(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for ActionOrigin.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionOrigin.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5F80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_5FA8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_5FB0(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActionOrigin.CodingKeys()
{
  return &type metadata for ActionOrigin.CodingKeys;
}

unint64_t sub_5FCC()
{
  unint64_t result = qword_2E9DD8;
  if (!qword_2E9DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9DD8);
  }
  return result;
}

unint64_t sub_6024()
{
  unint64_t result = qword_2E9DE0;
  if (!qword_2E9DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9DE0);
  }
  return result;
}

unint64_t sub_607C()
{
  unint64_t result = qword_2E9DE8;
  if (!qword_2E9DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9DE8);
  }
  return result;
}

NSNumber sub_60D0()
{
  return UInt64._bridgeToObjectiveC()();
}

uint64_t sub_60D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_26DF40();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_612C(uint64_t a1, uint64_t a2)
{
  char v3 = sub_26DF50();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_6184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26DF60();
  *a1 = result;
  return result;
}

uint64_t sub_61AC(uint64_t a1, uint64_t a2)
{
  return sub_6318(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_61C4(uint64_t a1, id *a2)
{
  uint64_t result = sub_26D410();
  *a2 = 0;
  return result;
}

uint64_t sub_623C(uint64_t a1, id *a2)
{
  char v3 = sub_26D420();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_62BC@<X0>(void *a1@<X8>)
{
  sub_26D430();
  NSString v2 = sub_26D3F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_6300(uint64_t a1, uint64_t a2)
{
  return sub_6318(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_6318(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_26D430();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_635C()
{
  sub_26D430();
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_63B0()
{
  sub_26D430();
  sub_26DEF0();
  sub_26D4B0();
  Swift::Int v0 = sub_26DF20();
  swift_bridgeObjectRelease();
  return v0;
}

void *sub_6424@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_6434(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_6440(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_6454()
{
  uint64_t v0 = sub_26D430();
  uint64_t v2 = v1;
  if (v0 == sub_26D430() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_64E0()
{
  return sub_26DBF0();
}

uint64_t sub_659C@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_26D3F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_65E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26D430();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_6610()
{
  sub_6944((unint64_t *)&qword_2F46F0, type metadata accessor for NQMLAttributeName);
  sub_6944(&qword_2E9E50, type metadata accessor for NQMLAttributeName);

  return sub_26DBF0();
}

uint64_t sub_66CC()
{
  return UInt64.hashValue.getter(*v0);
}

void sub_66D4()
{
  sub_26DF10(*v0);
}

uint64_t sub_6700(uint64_t a1)
{
  return static Hasher._hash(seed:_:)(a1, *v1);
}

uint64_t sub_6708(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DAF40;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

unint64_t sub_6754()
{
  unint64_t result = qword_2E9DF0;
  if (!qword_2E9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9DF0);
  }
  return result;
}

__n128 sub_67A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_67BC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_67DC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
}

void type metadata accessor for NQMLAttributeName(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for UIAccessibilityTraits(uint64_t a1)
{
}

void type metadata accessor for NQMLTextElement(uint64_t a1)
{
}

void sub_686C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_68B4()
{
  return sub_6944(&qword_2E9E20, type metadata accessor for UIAccessibilityTraits);
}

uint64_t sub_68FC()
{
  return sub_6944(&qword_2E9E28, type metadata accessor for UIAccessibilityTraits);
}

uint64_t sub_6944(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_698C()
{
  return sub_6944(&qword_2E9E30, type metadata accessor for UIAccessibilityTraits);
}

uint64_t sub_69D4()
{
  return sub_6944(&qword_2E9E38, type metadata accessor for NQMLAttributeName);
}

uint64_t sub_6A1C()
{
  return sub_6944(&qword_2E9E40, type metadata accessor for NQMLAttributeName);
}

uint64_t sub_6A64()
{
  return sub_6944(&qword_2E9E48, type metadata accessor for NQMLAttributeName);
}

uint64_t sub_6ACC(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9E68);
}

uint64_t static Logger.backdrop.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9AE0, (uint64_t)qword_2E9E68, a1);
}

uint64_t sub_6B14(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_6B4C(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9E80);
}

uint64_t static Logger.booksHTMLConverter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9AE8, (uint64_t)qword_2E9E80, a1);
}

uint64_t sub_6B94(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9E98);
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9AF0, (uint64_t)qword_2E9E98, a1);
}

uint64_t sub_6BE4(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9EB0);
}

uint64_t static Logger.pageUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9AF8, (uint64_t)qword_2E9EB0, a1);
}

uint64_t sub_6C2C(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9EC8);
}

uint64_t static Logger.synchronousNativeIntentDispatcher.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9B00, (uint64_t)qword_2E9EC8, a1);
}

uint64_t sub_6C74(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9EE0);
}

uint64_t static Logger.toolbarItemType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9B08, (uint64_t)qword_2E9EE0, a1);
}

uint64_t sub_6CBC(uint64_t a1)
{
  return sub_6CE4(a1, qword_2E9EF8);
}

uint64_t sub_6CE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_26A340();
  sub_6E18(v3, a2);
  sub_6B14(v3, (uint64_t)a2);
  return sub_26A330();
}

uint64_t static Logger.view.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6D80(&qword_2E9B10, (uint64_t)qword_2E9EF8, a1);
}

uint64_t sub_6D80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_26A340();
  uint64_t v6 = sub_6B14(v5, a2);
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t *sub_6E18(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t ShelfBackgroundViewModel.ignoreShelf.getter()
{
  return *v0;
}

uint64_t ViewSizeConditions.isNarrow.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FontSpec.font.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ViewSizeConditions.isWide.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ViewSizeConditions.isWide.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ViewSizeConditions.isWide.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ViewSizeConditions.isSuperWide.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ViewSizeConditions.isSuperWide.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*ViewSizeConditions.isSuperWide.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

void sub_6F0C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 2) = 0;
  *(_WORD *)a1 = 2;
}

uint64_t EnvironmentValues.viewSizeConditions.getter()
{
  sub_6F68();

  return sub_26B0B0();
}

unint64_t sub_6F68()
{
  unint64_t result = qword_2E9F10;
  if (!qword_2E9F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9F10);
  }
  return result;
}

uint64_t sub_6FBC@<X0>(uint64_t a1@<X8>)
{
  sub_6F68();
  uint64_t result = sub_26B0B0();
  *(unsigned char *)(a1 + 2) = v4;
  *(_WORD *)a1 = v3;
  return result;
}

uint64_t sub_7014()
{
  return sub_26B0C0();
}

uint64_t EnvironmentValues.viewSizeConditions.setter()
{
  return sub_26B0C0();
}

uint64_t (*EnvironmentValues.viewSizeConditions.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_6F68();
  sub_26B0B0();
  return sub_711C;
}

uint64_t sub_711C(uint64_t a1)
{
  __int16 v1 = *(_WORD *)(a1 + 16);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a1 + 18);
  *(_WORD *)(a1 + 20) = v1;
  return sub_26B0C0();
}

uint64_t sub_715C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2E9F20);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  int v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = *v2;
  char v10 = v2[1];
  char v11 = v2[2];
  uint64_t v12 = *((void *)v2 + 1);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v9;
  *(unsigned char *)(v13 + 17) = v10;
  *(unsigned char *)(v13 + 18) = v11;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = sub_4A98(&qword_2E9F28);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  uint64_t v15 = &v8[*(int *)(v6 + 44)];
  void *v15 = sub_733C;
  v15[1] = 0;
  v15[2] = sub_796C;
  v15[3] = v13;
  uint64_t KeyPath = swift_getKeyPath();
  v22[8] = v9;
  v22[9] = v10;
  v22[10] = v11;
  uint64_t v23 = v12;
  swift_retain();
  sub_4A98(&qword_2E9F30);
  sub_26C350();
  if (v25) {
    __int16 v17 = 256;
  }
  else {
    __int16 v17 = 0;
  }
  __int16 v18 = v17 | v24;
  BOOL v19 = v26 != 0;
  sub_79A0((uint64_t)v8, a2);
  uint64_t v20 = a2 + *(int *)(sub_4A98(&qword_2E9F38) + 36);
  *(void *)uint64_t v20 = KeyPath;
  *(unsigned char *)(v20 + 10) = v19;
  *(_WORD *)(v20 + 8) = v18;
  return sub_7A08((uint64_t)v8);
}

uint64_t sub_733C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26A940();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_7368()
{
  return sub_26C360();
}

uint64_t sub_7410()
{
  return sub_26A880();
}

uint64_t View.rootForViewSizeConditions()()
{
  return swift_release();
}

uint64_t sub_74D0@<X0>(uint64_t a1@<X8>)
{
  sub_6F68();
  uint64_t result = sub_26B0B0();
  *(unsigned char *)(a1 + 2) = v4;
  *(_WORD *)a1 = v3;
  return result;
}

uint64_t sub_7528()
{
  return sub_26B0C0();
}

uint64_t initializeBufferWithCopyOfBuffer for ViewSizeConditions(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ViewSizeConditions(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewSizeConditions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSizeConditions()
{
  return &type metadata for ViewSizeConditions;
}

uint64_t sub_76AC()
{
  return swift_getWitnessTable();
}

unint64_t sub_7710()
{
  unint64_t result = qword_2E9F18;
  if (!qword_2E9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9F18);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ViewSizeConditionsViewModifier(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for ViewSizeConditionsViewModifier()
{
  return swift_release();
}

uint64_t assignWithCopy for ViewSizeConditionsViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ViewSizeConditionsViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewSizeConditionsViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewSizeConditionsViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSizeConditionsViewModifier()
{
  return &type metadata for ViewSizeConditionsViewModifier;
}

ValueMetadata *type metadata accessor for ViewSizeConditionsKey()
{
  return &type metadata for ViewSizeConditionsKey;
}

uint64_t sub_7918()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7934()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_796C()
{
  return sub_7368();
}

uint64_t sub_79A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2E9F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7A08(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2E9F20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_7A6C()
{
  unint64_t result = qword_2E9F40;
  if (!qword_2E9F40)
  {
    sub_7B0C(&qword_2E9F38);
    sub_7B54();
    sub_7C18(&qword_2E9F68, &qword_2E9F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9F40);
  }
  return result;
}

uint64_t sub_7B0C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_7B54()
{
  unint64_t result = qword_2E9F48;
  if (!qword_2E9F48)
  {
    sub_7B0C(&qword_2E9F20);
    sub_7C18(&qword_2E9F50, &qword_2E9F28);
    sub_7C18(&qword_2E9F58, &qword_2E9F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9F48);
  }
  return result;
}

uint64_t sub_7C18(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Metrics.DialogActionType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_2DB050;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t Metrics.DialogActionType.rawValue.getter()
{
  return 27503;
}

uint64_t static GenericGeometryReferenceBuilder.== infix(_:_:)()
{
  return 1;
}

Swift::Int sub_7CCC()
{
  return sub_26DF20();
}

uint64_t sub_7D14()
{
  return sub_26D4B0();
}

Swift::Int sub_7D20()
{
  return sub_26DF20();
}

uint64_t sub_7D64@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DB088;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_7DB8(void *a1@<X8>)
{
  *a1 = 27503;
  a1[1] = 0xE200000000000000;
}

uint64_t Metrics.DialogType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DB0C0;
  v9._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t Metrics.DialogType.rawValue.getter()
{
  if (*v0) {
    return 0x7472656C61;
  }
  else {
    return 0x68536E6F69746361;
  }
}

uint64_t sub_7E6C(char *a1, char *a2)
{
  return sub_108DD8(*a1, *a2);
}

Swift::Int sub_7E78()
{
  return sub_26DF20();
}

uint64_t sub_7F00()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7F74()
{
  return sub_26DF20();
}

uint64_t sub_7FF8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Metrics.DialogType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_8004(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x68536E6F69746361;
  if (*v1) {
    uint64_t v2 = 0x7472656C61;
  }
  unint64_t v3 = 0xEB00000000746565;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static Metrics.createDialogMetrics(actionType:dialogType:message:options:result:targetID:title:)@<X0>(unsigned __int8 *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9)
{
  uint64_t v58 = a6;
  int v57 = a5;
  uint64_t v51 = a4;
  uint64_t v56 = a8;
  uint64_t v13 = sub_26CDD0();
  __chkstk_darwin(v13 - 8);
  uint64_t v55 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_269810();
  uint64_t v15 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  __int16 v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_26CDB0();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  BOOL v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *a1;
  sub_26CD80();
  long long v62 = &type metadata for String;
  *(void *)&long long v61 = 27503;
  *((void *)&v61 + 1) = 0xE200000000000000;
  sub_89B4(&v61, &v60);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v59 = &_swiftEmptyDictionarySingleton;
  sub_A7C0(&v60, 0x79546E6F69746361, 0xEA00000000006570, isUniquelyReferenced_nonNull_native);
  uint64_t v22 = v59;
  swift_bridgeObjectRelease();
  uint64_t v23 = 0x68536E6F69746361;
  if (v20) {
    uint64_t v23 = 0x7472656C61;
  }
  unint64_t v24 = 0xEB00000000746565;
  long long v62 = &type metadata for String;
  if (v20) {
    unint64_t v24 = 0xE500000000000000;
  }
  *(void *)&long long v61 = v23;
  *((void *)&v61 + 1) = v24;
  sub_89B4(&v61, &v60);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v22;
  sub_A7C0(&v60, 0x7954676F6C616964, 0xEA00000000006570, v25);
  char v26 = v59;
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_26CDA0();
  long long v62 = &type metadata for String;
  *(void *)&long long v61 = v27;
  *((void *)&v61 + 1) = v28;
  sub_89B4(&v61, &v60);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v26;
  sub_A7C0(&v60, 0x707954746E657665, 0xE900000000000065, v29);
  uint64_t v30 = v59;
  swift_bridgeObjectRelease();
  if (a3)
  {
    long long v62 = &type metadata for String;
    *(void *)&long long v61 = a2;
    *((void *)&v61 + 1) = a3;
    sub_89B4(&v61, &v60);
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v30;
    sub_A7C0(&v60, 0x6567617373656DLL, 0xE700000000000000, v31);
    uint64_t v30 = v59;
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v61 = v51;
  sub_4A98(&qword_2E9F78);
  sub_A914();
  uint64_t v32 = sub_26D310();
  long long v62 = &type metadata for String;
  *(void *)&long long v61 = v32;
  *((void *)&v61 + 1) = v33;
  sub_89B4(&v61, &v60);
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v30;
  sub_A7C0(&v60, 0x736E6F6974706FLL, 0xE700000000000000, v34);
  long long v35 = v59;
  swift_bridgeObjectRelease();
  uint64_t v36 = 0x6572756C696166;
  long long v62 = &type metadata for String;
  if (v57) {
    uint64_t v36 = 0x73736563637573;
  }
  *(void *)&long long v61 = v36;
  *((void *)&v61 + 1) = 0xE700000000000000;
  sub_89B4(&v61, &v60);
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v35;
  sub_A7C0(&v60, 0x746C75736572, 0xE600000000000000, v37);
  long long v38 = v59;
  swift_bridgeObjectRelease();
  long long v62 = &type metadata for String;
  *(void *)&long long v61 = v58;
  *((void *)&v61 + 1) = a7;
  sub_89B4(&v61, &v60);
  swift_bridgeObjectRetain();
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v38;
  sub_A7C0(&v60, 0x6449746567726174, 0xE800000000000000, v39);
  v40 = v59;
  swift_bridgeObjectRelease();
  if (*((void *)&a9 + 1))
  {
    long long v62 = &type metadata for String;
    long long v61 = a9;
    sub_89B4(&v61, &v60);
    swift_bridgeObjectRetain();
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v40;
    sub_A7C0(&v60, 0x656C746974, 0xE500000000000000, v41);
    v40 = v59;
    swift_bridgeObjectRelease();
  }
  sub_4A98(&qword_2E9F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F980;
  strcpy((char *)(inited + 32), "responseTime");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  sub_269800();
  sub_2697D0();
  double v44 = v43;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v52);
  *(double *)(inited + 48) = v44 * 1000.0;
  *(void *)(inited + 72) = &type metadata for Double;
  *(void *)(inited + 80) = 0x746C75736572;
  *(void *)(inited + 88) = 0xE600000000000000;
  *(unsigned char *)(inited + 96) = v57 & 1;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 0x6449746567726174;
  *(void *)(inited + 168) = &type metadata for String;
  uint64_t v45 = v58;
  *(void *)(inited + 136) = 0xE800000000000000;
  *(void *)(inited + 144) = v45;
  *(void *)(inited + 152) = a7;
  swift_bridgeObjectRetain();
  unint64_t v46 = sub_8DC0(inited, &qword_2EA0A8, &qword_2EA0B0, (uint64_t (*)(uint64_t *, unint64_t))sub_89B4);
  long long v62 = (void *)sub_4A98(&qword_2E9F90);
  *(void *)&long long v61 = v46;
  sub_89B4(&v61, &v60);
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  v59 = v40;
  sub_A7C0(&v60, 0x6974634172657375, 0xEB00000000736E6FLL, v47);
  swift_bridgeObjectRelease();
  sub_4A98(&qword_2E9F98);
  sub_26CAA0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_26F990;
  if (qword_2E9B78 != -1) {
    swift_once();
  }
  if (*(void *)(qword_3152A0 + 16))
  {
    sub_9D78((uint64_t)v19);
    if (v48) {
      swift_bridgeObjectRetain();
    }
  }
  if (qword_2E9B80 != -1) {
    swift_once();
  }
  if (*(void *)(qword_3152A8 + 16))
  {
    sub_9D78((uint64_t)v19);
    if (v49) {
      swift_bridgeObjectRetain();
    }
  }
  sub_26CA80();
  sub_26CDC0();
  sub_26CB60();
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v19, v54);
}

uint64_t sub_88DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_89B4((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_A7C0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_B6DC(a1, &qword_2EA0B8);
    sub_22F2B0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_B6DC((uint64_t)v9, &qword_2EA0B8);
  }
}

_OWORD *sub_89B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_89C4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_AD44((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *long long v2 = 0x8000000000000000;
    sub_AD5C(v7, a2, isUniquelyReferenced_nonNull_native);
    *long long v2 = v6;
    swift_bridgeObjectRelease();
    return sub_ACF0(a2);
  }
  else
  {
    sub_B6DC(a1, &qword_2E9FC8);
    sub_22F3D0(a2, (uint64_t)v7);
    sub_ACF0(a2);
    return sub_B6DC((uint64_t)v7, &qword_2E9FC8);
  }
}

uint64_t sub_8A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_AD44((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_B08C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_B6DC(a1, &qword_2E9FE0);
    sub_22F4D4(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_B6DC((uint64_t)v9, &qword_2E9FE0);
  }
}

unint64_t sub_8B5C(uint64_t a1)
{
  return sub_8B84(a1, &qword_2EA098, &qword_2EA0A0);
}

unint64_t sub_8B70(uint64_t a1)
{
  return sub_8B84(a1, &qword_2EA078, &qword_2EA080);
}

unint64_t sub_8B84(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_4A98(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v11 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(a3);
  uint64_t v10 = sub_26DBD0();
  char v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_B678(v16, (uint64_t)v9, a2);
    unint64_t result = sub_9D78((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_26CDB0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_8D70(uint64_t a1)
{
  return sub_8DC0(a1, &qword_2EA0A8, &qword_2EA0B0, (uint64_t (*)(uint64_t *, unint64_t))sub_89B4);
}

unint64_t sub_8D98(uint64_t a1)
{
  return sub_8DC0(a1, &qword_2EA068, &qword_2EA070, (uint64_t (*)(uint64_t *, unint64_t))sub_89B4);
}

unint64_t sub_8DC0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(a2);
  uint64_t v7 = sub_26DBD0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_B678(v11, (uint64_t)&v20, a3);
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    unint64_t result = sub_9E10(v20, v21);
    if (v15) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v16 = v12;
    v16[1] = v13;
    unint64_t result = a4(&v22, v8[7] + 32 * result);
    uint64_t v17 = v8[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_8F00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2EA058);
  long long v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_B678(v4, (uint64_t)v13, &qword_2EA060);
    unint64_t result = sub_9E88((uint64_t)v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)(v7 + 32) = v14;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    unint64_t result = sub_AD44(&v15, v2[7] + 40 * result);
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 80;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_903C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA048);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::OpaquePointer v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2EA050);
  uint64_t v6 = sub_26DBD0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_B678(v12, (uint64_t)v5, &qword_2EA048);
    unint64_t result = sub_9ECC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = _s8RatioKeyVMa();
    unint64_t result = sub_B5CC((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    long long v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9218(uint64_t a1)
{
  return sub_95CC(a1, &qword_2E9FC0);
}

unint64_t sub_9224(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FF8);
  uint64_t v2 = sub_26DBD0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_B678(v6, (uint64_t)v15, &qword_2EA000);
    unint64_t result = sub_9E88((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_89B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9368(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FF0);
  uint64_t v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_9E10(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_948C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2EA030);
  uint64_t v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_9E10(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_95A8(uint64_t a1)
{
  return sub_95CC(a1, &qword_2EA020);
}

unint64_t sub_95B4(uint64_t a1)
{
  return sub_95CC(a1, &qword_2E9FB8);
}

unint64_t sub_95C0(uint64_t a1)
{
  return sub_95CC(a1, &qword_2EA008);
}

unint64_t sub_95CC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(a2);
  uint64_t v3 = (void *)sub_26DBD0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 2);
    uint64_t v7 = *((void *)v5 - 1);
    long long v14 = *v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_9E10(v6, v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_96E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2EA010);
  uint64_t v2 = sub_26DBD0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_B678(v6, (uint64_t)&v15, &qword_2EA018);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_9E10(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_AD44(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_982C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FB0);
  uint64_t v2 = sub_26DBD0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v22 = v2 + 64;
  swift_retain();
  uint64_t v5 = (char *)(a1 + 113);
  while (1)
  {
    uint64_t v23 = v4;
    uint64_t v6 = *(void *)(v5 - 81);
    uint64_t v7 = *(void *)(v5 - 73);
    uint64_t v8 = *(void *)(v5 - 65);
    uint64_t v9 = *(void *)(v5 - 57);
    char v10 = *(v5 - 49);
    uint64_t v11 = *(void *)(v5 - 41);
    char v12 = *(v5 - 33);
    char v13 = *(v5 - 32);
    uint64_t v14 = *(void *)(v5 - 25);
    char v30 = *(v5 - 16);
    char v31 = *(v5 - 17);
    char v28 = *(v5 - 14);
    char v29 = *(v5 - 15);
    char v27 = *(v5 - 13);
    uint64_t v26 = *(void *)(v5 - 9);
    char v24 = *v5;
    char v25 = *(v5 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_9E10(v6, v7);
    if (v16) {
      break;
    }
    *(void *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v17 = (uint64_t *)(v3[6] + 16 * result);
    *long long v17 = v6;
    v17[1] = v7;
    uint64_t v18 = v3[7] + 72 * result;
    *(void *)uint64_t v18 = v8;
    *(void *)(v18 + 8) = v9;
    *(unsigned char *)(v18 + 16) = v10;
    *(void *)(v18 + 24) = v11;
    *(unsigned char *)(v18 + 32) = v12;
    *(unsigned char *)(v18 + 33) = v13;
    *(void *)(v18 + 40) = v14;
    *(unsigned char *)(v18 + 48) = v31;
    *(unsigned char *)(v18 + 49) = v30;
    *(unsigned char *)(v18 + 50) = v29;
    *(unsigned char *)(v18 + 51) = v28;
    *(unsigned char *)(v18 + 52) = v27;
    *(void *)(v18 + 56) = v26;
    *(unsigned char *)(v18 + 64) = v25;
    *(unsigned char *)(v18 + 65) = v24;
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v3[2] = v21;
    v5 += 88;
    uint64_t v4 = v23 - 1;
    if (v23 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9A1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FE8);
  uint64_t v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_9E10(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    char v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9B40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FD8);
  uint64_t v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_9E10(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9C5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2E9FD0);
  uint64_t v2 = (void *)sub_26DBD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_9E10(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9D78(uint64_t a1)
{
  sub_26CDB0();
  sub_B630(&qword_2EA088, (void (*)(uint64_t))&type metadata accessor for MetricsEventType);
  uint64_t v2 = sub_26D2E0();

  return sub_A0E0(a1, v2);
}

unint64_t sub_9E10(uint64_t a1, uint64_t a2)
{
  sub_26DEF0();
  sub_26D4B0();
  Swift::Int v4 = sub_26DF20();

  return sub_A2A0(a1, a2, v4);
}

unint64_t sub_9E88(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_26DA30(*(void *)(v2 + 40));

  return sub_A384(a1, v4);
}

unint64_t sub_9ECC(uint64_t a1)
{
  sub_26DEF0();
  sub_26B980();
  sub_B630(&qword_2EA038, (void (*)(uint64_t))&type metadata accessor for Font.TextStyle);
  sub_26D2F0();
  _s8RatioKeyVMa();
  sub_26AB40();
  sub_B630(&qword_2EA040, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  sub_26D2F0();
  Swift::Int v2 = sub_26DF20();

  return sub_A44C(a1, v2);
}

unint64_t sub_9FE0(unsigned __int8 a1)
{
  sub_26DEF0();
  sub_26DF00(a1);
  Swift::Int v2 = sub_26DF20();

  return sub_A5A8(a1, v2);
}

unint64_t sub_A04C(uint64_t a1)
{
  sub_26D430();
  sub_26DEF0();
  sub_26D4B0();
  Swift::Int v2 = sub_26DF20();
  swift_bridgeObjectRelease();

  return sub_A648(a1, v2);
}

unint64_t sub_A0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_26CDB0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    BOOL v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_B630(&qword_2EA090, (void (*)(uint64_t))&type metadata accessor for MetricsEventType);
      char v15 = sub_26D360();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_A2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_26DDB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_26DDB0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_A384(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_B3D8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_26DA40();
      sub_ACF0((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_A44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8RatioKeyVMa();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)(v5 + 72);
    while (1)
    {
      sub_B50C(*(void *)(v2 + 48) + v11 * v9, (uint64_t)v7);
      if (sub_26B970() & 1) != 0 && (sub_26AB30()) {
        break;
      }
      sub_B570((uint64_t)v7);
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        return v9;
      }
    }
    sub_B570((uint64_t)v7);
  }
  return v9;
}

unint64_t sub_A5A8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_A648(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_26D430();
    uint64_t v8 = v7;
    if (v6 == sub_26D430() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_26DDB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_26D430();
          uint64_t v15 = v14;
          if (v13 == sub_26D430() && v15 == v16) {
            break;
          }
          char v18 = sub_26DDB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

_OWORD *sub_A7C0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_9E10(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_231324();
      goto LABEL_7;
    }
    sub_22F5FC(v15, a4 & 1);
    unint64_t v21 = sub_9E10(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)sub_26DE60();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v19);
    return sub_89B4(a1, v19);
  }
LABEL_13:
  sub_2310D4(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_A914()
{
  unint64_t result = qword_2E9F80;
  if (!qword_2E9F80)
  {
    sub_7B0C(&qword_2E9F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9F80);
  }
  return result;
}

unint64_t sub_A974()
{
  unint64_t result = qword_2E9FA0;
  if (!qword_2E9FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9FA0);
  }
  return result;
}

unint64_t sub_A9CC()
{
  unint64_t result = qword_2E9FA8;
  if (!qword_2E9FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2E9FA8);
  }
  return result;
}

uint64_t _s16DialogActionTypeOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s16DialogActionTypeOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xAB10);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t EnvironmentValues.hostingViewBarType.getter()
{
  return 0;
}

ValueMetadata *type metadata accessor for Metrics.DialogActionType()
{
  return &type metadata for Metrics.DialogActionType;
}

uint64_t _s10DialogTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10DialogTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xACACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_ACD4(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Metrics.DialogType()
{
  return &type metadata for Metrics.DialogType;
}

uint64_t sub_ACF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_AD44(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_AD5C(long long *a1, uint64_t a2, char a3)
{
  unsigned int v4 = (void **)v3;
  int v8 = (void *)*v3;
  unint64_t v10 = sub_9E88(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_231554();
      goto LABEL_7;
    }
    sub_22F96C(v13, a3 & 1);
    unint64_t v19 = sub_9E88(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_B3D8(a2, (uint64_t)v21);
      return sub_231140(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = sub_26DE60();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;
  _s7BooksUI13AnyPagedFrameVwxx_0(v17);

  return sub_AD44(a1, v17);
}

uint64_t sub_AEAC(uint64_t a1, char a2, double a3)
{
  unsigned int v4 = (void **)v3;
  uint64_t v8 = _s8RatioKeyVMa();
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_9ECC(a1);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = v11[3];
    if (v18 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      unint64_t v19 = *v4;
      if (v17)
      {
LABEL_8:
        *(double *)(v19[7] + 8 * v13) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v18 >= result && (a2 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_231730();
      goto LABEL_7;
    }
    sub_22FC8C(result, a2 & 1);
    uint64_t result = sub_9ECC(a1);
    if ((v17 & 1) == (v20 & 1))
    {
      unint64_t v13 = result;
      unint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_11:
      sub_B50C(a1, (uint64_t)v10);
      return sub_2311C0(v13, (uint64_t)v10, v19, a3);
    }
  }
  uint64_t result = sub_26DE60();
  __break(1u);
  return result;
}

uint64_t sub_B00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_B264(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_23198C, (void (*)(void))sub_2300C8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_231260);
}

uint64_t sub_B04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_B264(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_231BC4, (void (*)(void))sub_2304AC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_231260);
}

uint64_t sub_B08C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_9E10(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_231BD0();
      goto LABEL_7;
    }
    sub_2304B8(v15, a4 & 1);
    unint64_t v21 = sub_9E10(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_26DE60();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    _s7BooksUI13AnyPagedFrameVwxx_0(v19);
    return sub_AD44(a1, v19);
  }
LABEL_13:
  sub_231264(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_B1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_B264(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_231BF0, (void (*)(void))sub_2304D8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_231260);
}

uint64_t sub_B224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_B264(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_231E10, (void (*)(void))sub_230824, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_231260);
}

uint64_t sub_B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v8;
  uint64_t v16 = *v8;
  unint64_t v18 = sub_9E10(a3, a4);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t result = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v22 = v17;
  uint64_t v23 = *(void *)(v16 + 24);
  if (v23 >= result && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v24 = *v10;
    if (v22)
    {
LABEL_8:
      char v25 = (void *)(*(void *)(v24 + 56) + 16 * v18);
      *char v25 = a1;
      v25[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= result && (a5 & 1) == 0)
  {
    uint64_t result = a6();
    goto LABEL_7;
  }
  a7();
  uint64_t result = sub_9E10(a3, a4);
  if ((v22 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_26DE60();
    __break(1u);
    return result;
  }
  unint64_t v18 = result;
  uint64_t v24 = *v10;
  if (v22) {
    goto LABEL_8;
  }
LABEL_11:
  a8(v18, a3, a4, a1, a2, v24);

  return swift_bridgeObjectRetain();
}

uint64_t sub_B3D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_B434(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_4A98(&qword_2EA028);
    long long v3 = (void *)sub_26DBD0();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_9FE0(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_B50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8RatioKeyVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B570(uint64_t a1)
{
  uint64_t v2 = _s8RatioKeyVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8RatioKeyVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_B630(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_B678(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_4A98(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_B6DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_4A98(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static ListItemMetadata.seriesPage(assetInfo:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v48 = type metadata accessor for ShrinkableText();
  __chkstk_darwin(v48);
  char v49 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v43 - v8;
  uint64_t v9 = sub_4A98(&qword_2EA0C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v51 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v50 = (uint64_t)&v43 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_4ADC(a1, v19);
  sub_BD98(v19, v20, (uint64_t)v18);
  sub_4ADC(a1, a1[3]);
  uint64_t v21 = sub_26A020();
  uint64_t v53 = v22;
  uint64_t v54 = v21;
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (v23(v18, 1, v4) == 1)
  {
    sub_4ADC(a1, a1[3]);
    uint64_t v24 = sub_26A030();
    uint64_t v25 = v26;
  }
  sub_C128((uint64_t)v18, (uint64_t)v16);
  if (v23(v16, 1, v4) == 1)
  {
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
  }
  else
  {
    uint64_t v46 = v24;
    double v44 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    char v27 = v55;
    v44(v55, v16, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v52, v27, v4);
    char v47 = v18;
    char v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28(v50, 1, 1, v4);
    v28(v51, 1, 1, v4);
    uint64_t v29 = v48;
    uint64_t v30 = (uint64_t)v49;
    uint64_t v31 = *(int *)(v48 + 20);
    uint64_t v45 = v25;
    uint64_t v32 = (uint64_t)&v49[v31];
    v28((uint64_t)&v49[v31], 1, 1, v4);
    uint64_t v33 = v30 + *(int *)(v29 + 24);
    v28(v33, 1, 1, v4);
    unint64_t v18 = v47;
    v44((char *)v30, v52, v4);
    sub_B6DC(v32, &qword_2EA0C0);
    uint64_t v34 = v32;
    uint64_t v25 = v45;
    sub_C9B4(v50, v34);
    uint64_t v24 = v46;
    sub_B6DC(v33, &qword_2EA0C0);
    sub_C9B4(v51, v33);
    *((void *)&v67 + 1) = type metadata accessor for ListItemMetadataEyebrow();
    uint64_t v68 = sub_CBF0(&qword_2EA110, (void (*)(uint64_t))type metadata accessor for ListItemMetadataEyebrow);
    long long v35 = sub_CA1C((uint64_t *)&v66);
    sub_CA80(v30, (uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v55, v4);
  }
  v65[3] = &type metadata for ListItemMetadataTitleWithSubtitle;
  v65[4] = sub_C190();
  uint64_t v36 = swift_allocObject();
  v65[0] = v36;
  uint64_t v37 = v53;
  *(void *)(v36 + 16) = v54;
  *(void *)(v36 + 24) = v37;
  *(void *)(v36 + 32) = v24;
  *(void *)(v36 + 40) = v25;
  *(unsigned char *)(v36 + 48) = 0;
  sub_C224((uint64_t)a1, (uint64_t)v57);
  v64[3] = sub_4A98(&qword_2EA0D0);
  v64[4] = sub_C288();
  uint64_t v38 = swift_allocObject();
  v64[0] = v38;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = swift_getKeyPath();
  *(void *)(v38 + 16) = KeyPath;
  *(_OWORD *)(v38 + 24) = 0u;
  *(_OWORD *)(v38 + 40) = 0u;
  *(_OWORD *)(v38 + 56) = 0u;
  *(_OWORD *)(v38 + 67) = 0u;
  *(void *)(v38 + 88) = v40;
  *(unsigned char *)(v38 + 96) = 0;
  *(void *)(v38 + 104) = v41;
  *(_WORD *)(v38 + 112) = 0;
  sub_AD44(v57, v38 + 120);
  uint64_t v63 = 0;
  memset(v62, 0, sizeof(v62));
  uint64_t v61 = 0;
  memset(v60, 0, sizeof(v60));
  uint64_t v59 = 0;
  memset(v58, 0, sizeof(v58));
  memset(v57, 0, 280);
  sub_C950((uint64_t)&v66, (uint64_t)v57, &qword_2EA0E0);
  sub_C950((uint64_t)v65, (uint64_t)&v57[2] + 8, &qword_2EA0E8);
  sub_C950((uint64_t)v64, (uint64_t)&v57[5], &qword_2EA0F0);
  sub_C950((uint64_t)v62, (uint64_t)&v57[10], &qword_2EA0F8);
  sub_C950((uint64_t)v60, (uint64_t)&v57[12] + 8, &qword_2EA100);
  sub_C950((uint64_t)v58, (uint64_t)&v57[15], &qword_2EA108);
  memcpy(v56, v57, 0x118uLL);
  return sub_B6DC((uint64_t)v18, &qword_2EA0C0);
}

uint64_t sub_BD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v6 = sub_269DF0();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_269EA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v33 - v17;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = v3;
  sub_269FE0();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for SeriesOrdering.orderedSeries(_:), v12);
  char v19 = sub_269E90();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v20(v18, v12);
  if ((v19 & 1) == 0) {
    goto LABEL_5;
  }
  sub_269F10();
  uint64_t v21 = v34;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v9, enum case for ContentKind.manga(_:), v6);
  sub_CBF0(&qword_2EA128, (void (*)(uint64_t))&type metadata accessor for ContentKind);
  char v22 = sub_26D360();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 8);
  v23(v9, v6);
  v23(v11, v6);
  if (v22) {
    goto LABEL_5;
  }
  uint64_t v24 = sub_269F90();
  if (v25)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v26;
    *(void *)(v28 + 24) = v27;
    uint64_t v29 = v38;
    sub_26A1C0();
    swift_release();
    uint64_t v30 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
  else
  {
LABEL_5:
    uint64_t v32 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v38, 1, 1, v32);
  }
}

uint64_t sub_C128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_C190()
{
  unint64_t result = qword_2EA0C8;
  if (!qword_2EA0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA0C8);
  }
  return result;
}

uint64_t sub_C1E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_C224(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_C288()
{
  unint64_t result = qword_2EA0D8;
  if (!qword_2EA0D8)
  {
    sub_7B0C(&qword_2EA0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA0D8);
  }
  return result;
}

uint64_t sub_C2E4()
{
  sub_C360(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(_WORD *)(v0 + 80), *(unsigned char *)(v0 + 82));
  sub_C374(*(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_C374(*(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 120);

  return swift_deallocObject();
}

uint64_t sub_C360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  if (a10) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_C374(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t static ListItemMetadata.seriesHeaderQuickActionButton(assetInfo:eyebrowText:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[3] = type metadata accessor for ListItemMetadataEyebrow();
  v21[4] = sub_CBF0(&qword_2EA110, (void (*)(uint64_t))type metadata accessor for ListItemMetadataEyebrow);
  uint64_t v6 = sub_CA1C(v21);
  sub_CAE4(a2, (uint64_t)v6);
  sub_4ADC(a1, a1[3]);
  uint64_t v7 = sub_26A020();
  uint64_t v9 = v8;
  v20[3] = &type metadata for ListItemMetadataTitleWithSubtitle;
  v20[4] = sub_C190();
  uint64_t v10 = swift_allocObject();
  v20[0] = v10;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  *(unsigned char *)(v10 + 48) = 0;
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 176) = 0u;
  *(_OWORD *)(a3 + 192) = 0u;
  *(_OWORD *)(a3 + 208) = 0u;
  *(_OWORD *)(a3 + 224) = 0u;
  *(_OWORD *)(a3 + 256) = 0u;
  *(void *)(a3 + 272) = 0;
  *(_OWORD *)(a3 + 240) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  sub_C950((uint64_t)v21, a3, &qword_2EA0E0);
  sub_C950((uint64_t)v20, a3 + 40, &qword_2EA0E8);
  sub_C950((uint64_t)v18, a3 + 80, &qword_2EA0F0);
  sub_C950((uint64_t)v16, a3 + 160, &qword_2EA0F8);
  sub_C950((uint64_t)v14, a3 + 200, &qword_2EA100);
  return sub_C950((uint64_t)v12, a3 + 240, &qword_2EA108);
}

uint64_t sub_C564(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = a2;
  v12[1] = a3;
  sub_4ADC(a1, a1[3]);
  sub_26D1B0();
  uint64_t v9 = sub_269920();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_CC78();
  uint64_t v10 = sub_26D9C0();
  sub_B6DC((uint64_t)v8, &qword_2EA130);
  return v10;
}

double sub_C690@<D0>(uint64_t a1@<X8>)
{
  EnvironmentValues.libraryAssetState.getter((uint64_t)v6);
  __int16 v2 = v9;
  long long v3 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v3;
  double result = *(double *)&v7;
  long long v5 = v8;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 64) = v2;
  return result;
}

uint64_t sub_C6E0@<X0>(unsigned char *a1@<X8>)
{
  sub_CB48();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_C730()
{
  return sub_26B0C0();
}

uint64_t sub_C77C@<X0>(unsigned char *a1@<X8>)
{
  sub_CB9C();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_C7CC@<X0>(unsigned char *a1@<X8>)
{
  sub_CB9C();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_C81C()
{
  return sub_26B0C0();
}

uint64_t sub_C868()
{
  return sub_26B0C0();
}

uint64_t sub_C8B4@<X0>(unsigned char *a1@<X8>)
{
  sub_CB48();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_C904()
{
  return sub_26B0C0();
}

uint64_t sub_C950(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_4A98(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_C9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_CA1C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_CA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_CAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_CB48()
{
  unint64_t result = qword_2EA118;
  if (!qword_2EA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA118);
  }
  return result;
}

unint64_t sub_CB9C()
{
  unint64_t result = qword_2EA120;
  if (!qword_2EA120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA120);
  }
  return result;
}

uint64_t sub_CBF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_CC38()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_CC70(void *a1)
{
  return sub_C564(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_CC78()
{
  unint64_t result = qword_2EA138;
  if (!qword_2EA138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA138);
  }
  return result;
}

uint64_t sub_CCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

double sub_CD08(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_10E0C(*(void *)v2, v4);
  double v5 = sub_401C0(v3, v4);
  sub_C374(v3, v4);
  return v5;
}

double sub_CD68()
{
  sub_4A98(&qword_2EA370);
  sub_26C350();
  return v1;
}

uint64_t sub_CDC0()
{
  return sub_26C360();
}

uint64_t sub_CE1C()
{
  sub_4A98(&qword_2EA368);
  sub_26C350();
  return v1;
}

uint64_t sub_CE68()
{
  return sub_26C360();
}

uint64_t sub_CEB8()
{
  type metadata accessor for CGSize(0);
  sub_26C340();
  return v1;
}

double sub_CEF8()
{
  sub_4A98(&qword_2EA370);
  sub_26C350();
  return v1;
}

uint64_t sub_CF50()
{
  return sub_26C360();
}

uint64_t BackdropView.init(resource:placeholder:useSnapshot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for BackdropView();
  uint64_t v11 = a5 + v10[11];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = (void *)(a5 + v10[12]);
  uint64_t v13 = sub_CEB8();
  void *v12 = v14;
  v12[1] = v15;
  void v12[2] = v13;
  uint64_t v16 = v10[13];
  sub_4A98(&qword_2EA150);
  sub_26C340();
  *(_OWORD *)(a5 + v16) = v22;
  uint64_t v17 = (void *)(a5 + v10[14]);
  uint64_t v18 = sub_CEB8();
  *uint64_t v17 = v19;
  v17[1] = v20;
  v17[2] = v18;
  *(void *)(a5 + v10[9]) = a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a2, a4);
  *(unsigned char *)(a5 + v10[10]) = a3;
  return result;
}

uint64_t type metadata accessor for BackdropView()
{
  return sub_129B4();
}

uint64_t BackdropView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = (char *)&v24[-1] - ((*(void *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + *(int *)(__chkstk_darwin(a1) + 36));
  (*(void (**)(char *))(v5 + 16))(v6);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(v9 + 16) = *(void *)(a1 + 16);
  *(void *)(v9 + 24) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v6, a1);
  sub_26B570();
  sub_26ABD0();
  swift_unknownObjectRetain();
  sub_7B0C(&qword_2E9F60);
  uint64_t v11 = sub_26ABD0();
  uint64_t v12 = sub_7B0C(&qword_2EA150);
  uint64_t WitnessTable = swift_getWitnessTable();
  v24[9] = &protocol witness table for Image;
  v24[10] = WitnessTable;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_7C18(&qword_2E9F58, &qword_2E9F60);
  v24[7] = v14;
  v24[8] = v15;
  uint64_t v16 = swift_getWitnessTable();
  unint64_t v17 = sub_10A68();
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v32 = v16;
  unint64_t v33 = v17;
  swift_getOpaqueTypeMetadata2();
  sub_2699B0();
  sub_26B300();
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v32 = v16;
  unint64_t v33 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v19 = sub_10AF8(qword_2EA170, (void (*)(uint64_t))&type metadata accessor for BackdropView);
  v24[5] = OpaqueTypeConformance2;
  v24[6] = v19;
  swift_getWitnessTable();
  AsyncResourceImage.init(resource:content:)(v7, (uint64_t)sub_109CC, v9, &v25);
  v24[0] = v25;
  v24[1] = v26;
  v24[2] = v27;
  v24[3] = v28;
  v24[4] = v29;
  uint64_t v20 = type metadata accessor for AsyncResourceImage();
  swift_getWitnessTable();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16);
  v21(&v30, v24, v20);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v25 = v30;
  uint64_t v26 = v31;
  uint64_t v27 = v32;
  unint64_t v28 = v33;
  uint64_t v29 = v34;
  v21(a2, &v25, v20);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_D4F0@<X0>(void (*a1)(void, void, void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v105 = a5;
  uint64_t OpaqueTypeConformance2 = a2;
  v99 = a1;
  uint64_t v7 = sub_2699B0();
  uint64_t v89 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v87 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BackdropView();
  uint64_t v98 = *(void *)(v9 - 8);
  unint64_t v91 = *(void *)(v98 + 64);
  __chkstk_darwin(v9);
  v97 = (char *)&v75 - v10;
  uint64_t v88 = sub_26C260();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = a3;
  uint64_t v104 = a4;
  sub_26B570();
  uint64_t v13 = sub_26ABD0();
  uint64_t v93 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v100 = (char *)&v75 - v14;
  sub_7B0C(&qword_2E9F60);
  uint64_t v15 = sub_26ABD0();
  uint64_t v96 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v95 = (char *)&v75 - v16;
  uint64_t v17 = sub_7B0C(&qword_2EA150);
  uint64_t WitnessTable = swift_getWitnessTable();
  v116 = &protocol witness table for Image;
  uint64_t v117 = WitnessTable;
  uint64_t v94 = v13;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_7C18(&qword_2E9F58, &qword_2E9F60);
  uint64_t v85 = v19;
  uint64_t v114 = v19;
  uint64_t v115 = v20;
  uint64_t v21 = swift_getWitnessTable();
  unint64_t v22 = sub_10A68();
  uint64_t v107 = v15;
  uint64_t v110 = v15;
  uint64_t v111 = v17;
  uint64_t v112 = v21;
  unint64_t v113 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v24 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v25 = __chkstk_darwin(OpaqueTypeMetadata2);
  v92 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  v90 = (char *)&v75 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v75 - v29;
  uint64_t v31 = sub_26B300();
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v101 = *(void *)(v31 - 8);
  uint64_t v102 = v31;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v75 - v33;
  if (*(unsigned char *)(v32 + *(int *)(v34 + 40)) == 1)
  {
    uint64_t v80 = v24;
    uint64_t v81 = OpaqueTypeMetadata2;
    v82 = (char *)&v75 - v33;
    v87 = (char *)v22;
    id v36 = v99;
    uint64_t v89 = v17;
    uint64_t v78 = v34;
    uint64_t v37 = sub_CE1C();
    uint64_t v84 = v7;
    uint64_t v83 = v21;
    v79 = v30;
    if (!v37) {
      [objc_allocWithZone((Class)UIImage) init];
    }
    sub_26C240();
    uint64_t v38 = v86;
    uint64_t v39 = v88;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v88);
    uint64_t v40 = sub_26C280();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
    uint64_t v110 = v40;
    sub_26B760();
    uint64_t v41 = v103;
    uint64_t v42 = v104;
    sub_26BC20();
    swift_release();
    uint64_t v43 = v97;
    uint64_t v44 = v98;
    v99 = *(void (**)(void, void, void))(v98 + 16);
    uint64_t v45 = v78;
    v99(v97, v32, v78);
    uint64_t v46 = *(unsigned __int8 *)(v44 + 80);
    uint64_t v86 = v46 | 7;
    uint64_t v47 = (v46 + 32) & ~v46;
    uint64_t v88 = v47;
    unint64_t v48 = (v91 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v91 = v48 + 8;
    unint64_t v49 = v48;
    unint64_t v77 = v48;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v41;
    *(void *)(v50 + 24) = v42;
    uint64_t v98 = *(void *)(v44 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v98)(v50 + v47, v43, v45);
    *(void *)(v50 + v49) = v36;
    type metadata accessor for CGSize(0);
    sub_10AF8(&qword_2EA300, type metadata accessor for CGSize);
    id v51 = v36;
    id v76 = v36;
    uint64_t v52 = v95;
    uint64_t v53 = v94;
    uint64_t v54 = v100;
    sub_26BDC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v53);
    uint64_t v110 = (uint64_t)v36;
    v99(v43, OpaqueTypeConformance2, v45);
    uint64_t v55 = swift_allocObject();
    uint64_t v56 = v104;
    *(void *)(v55 + 16) = v103;
    *(void *)(v55 + 24) = v56;
    ((void (*)(uint64_t, char *, uint64_t))v98)(v55 + v88, v43, v45);
    *(void *)(v55 + v77) = v51;
    id v57 = v76;
    uint64_t v58 = v90;
    uint64_t v59 = (void *)v107;
    uint64_t v60 = v89;
    uint64_t v61 = v83;
    unint64_t v22 = (unint64_t)v87;
    sub_26C060();
    swift_release();
    (*(void (**)(char *, void *))(v96 + 8))(v52, v59);
    uint64_t v110 = (uint64_t)v59;
    uint64_t v111 = v60;
    uint64_t v112 = v61;
    unint64_t v113 = v22;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v62 = v80;
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    long long v64 = v79;
    uint64_t v65 = v81;
    v63(v79, v58, v81);
    long long v66 = *(void (**)(char *, uint64_t))(v62 + 8);
    v66(v58, v65);
    uint64_t v67 = (uint64_t)v92;
    v63(v92, v64, v65);
    uint64_t v21 = v61;
    sub_10AF8(qword_2EA170, (void (*)(uint64_t))&type metadata accessor for BackdropView);
    uint64_t v35 = v82;
    sub_1B894(v67, v65);
    v66((char *)v67, v65);
    v66(v64, v65);
  }
  else
  {
    uint64_t v68 = v99;
    uint64_t v69 = (uint64_t)v87;
    sub_2699A0();
    uint64_t v110 = v107;
    uint64_t v111 = v17;
    uint64_t v112 = v21;
    unint64_t v113 = v22;
    swift_getOpaqueTypeConformance2();
    sub_10AF8(qword_2EA170, (void (*)(uint64_t))&type metadata accessor for BackdropView);
    sub_1B98C(v69, OpaqueTypeMetadata2, v7);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v69, v7);
    uint64_t v60 = v17;
  }
  uint64_t v110 = v107;
  uint64_t v111 = v60;
  uint64_t v112 = v21;
  unint64_t v113 = v22;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v71 = sub_10AF8(qword_2EA170, (void (*)(uint64_t))&type metadata accessor for BackdropView);
  uint64_t v108 = v70;
  uint64_t v109 = v71;
  uint64_t v72 = v102;
  swift_getWitnessTable();
  uint64_t v73 = v101;
  (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v105, v35, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v35, v72);
}

void sub_E0CC(double *a1, uint64_t a2, void *a3)
{
  double v4 = *a1;
  double v5 = a1[1];
  uint64_t v6 = type metadata accessor for BackdropView();
  sub_CF50();
  if (a3)
  {
    id v7 = a3;
    sub_E174(v7, v6, v4, v5);
  }
}

void sub_E174(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_4A98(&qword_2EA2E0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v69 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(a2 - 8);
  uint64_t v14 = v13[8];
  uint64_t v15 = __chkstk_darwin(v11);
  uint64_t v72 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v70 = (char *)&v66 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v68 = (char *)&v66 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v66 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v66 - v23;
  uint64_t v25 = (void *)sub_CE1C();

  uint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v13[2];
  v26(v24, v5, a2);
  uint64_t v73 = v13;
  if (v25)
  {
    double v27 = sub_CD68();
    uint64_t v28 = (void (*)(char *, uint64_t))v13[1];
    v28(v24, a2);
    v26(v22, v5, a2);
    if (v27 + v27 > a3)
    {
      double v29 = sub_CD68();
      double v31 = v30;
      uint64_t v71 = v28;
      ((void (*)(char *, uint64_t, double))v28)(v22, a2, v29);
      BOOL v32 = v31 + v31 <= a4;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v28 = (void (*)(char *, uint64_t))v13[1];
    v28(v24, a2);
    v26(v22, v5, a2);
  }
  uint64_t v71 = v28;
  v28(v22, a2);
  BOOL v32 = 1;
LABEL_6:
  sub_4A98(&qword_2EA308);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_26F990;
  *(void *)(v33 + 56) = sub_1263C(0, &qword_2EA168);
  *(void *)(v33 + 64) = sub_11DEC(&qword_2EA310);
  *(void *)(v33 + 32) = a1;
  id v67 = a1;
  uint64_t v34 = sub_26D440();
  unint64_t v36 = v35;
  uint64_t v37 = v73;
  if (v32)
  {
    double v38 = sub_CD08(a2);
    sub_CDC0();
    uint64_t v39 = sub_26D6F0();
    uint64_t v40 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v69, 1, 1, v39);
    uint64_t v72 = (char *)v36;
    uint64_t v41 = v68;
    v26(v68, v5, a2);
    unint64_t v42 = (*((unsigned __int8 *)v37 + 80) + 80) & ~(unint64_t)*((unsigned __int8 *)v37 + 80);
    unint64_t v43 = (v14 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = 0;
    *(void *)(v44 + 24) = 0;
    *(_OWORD *)(v44 + 32) = *(_OWORD *)(a2 + 16);
    uint64_t v45 = v72;
    *(void *)(v44 + 48) = v34;
    *(void *)(v44 + 56) = v45;
    *(double *)(v44 + 64) = a3;
    *(double *)(v44 + 72) = a4;
    ((void (*)(unint64_t, char *, uint64_t))v37[4])(v44 + v42, v41, a2);
    uint64_t v46 = v67;
    *(void *)(v44 + v43) = v67;
    *(double *)(v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
    id v47 = v46;
    sub_F968(v40, (uint64_t)&unk_2EA320, v44);
    swift_release();
    sub_12228(v40);
  }
  else
  {
    if (qword_2E9AE0 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_26A340();
    sub_6B14(v48, (uint64_t)qword_2E9E68);
    unint64_t v49 = v70;
    v26(v70, v5, a2);
    uint64_t v50 = v72;
    v26(v72, v5, a2);
    swift_bridgeObjectRetain();
    id v51 = sub_26A320();
    os_log_type_t v52 = sub_26D820();
    int v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v69 = (char *)swift_slowAlloc();
      uint64_t v75 = v69;
      *(_DWORD *)uint64_t v54 = 136315906;
      LODWORD(v68) = v53;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1B1A8C(v34, v36, (uint64_t *)&v75);
      sub_26D9A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v55 = sub_26D900();
      uint64_t v74 = sub_1B1A8C(v55, v56, (uint64_t *)&v75);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 22) = 2080;
      sub_CD68();
      id v57 = v49;
      uint64_t v58 = v71;
      v71(v57, a2);
      uint64_t v59 = sub_26D900();
      uint64_t v74 = sub_1B1A8C(v59, v60, (uint64_t *)&v75);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 32) = 2080;
      uint64_t v61 = (void *)sub_CE1C();
      uint64_t v74 = (uint64_t)v61;
      sub_4A98(&qword_2EA150);
      uint64_t v62 = sub_26D960();
      unint64_t v64 = v63;

      uint64_t v74 = sub_1B1A8C(v62, v64, (uint64_t *)&v75);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      v58(v50, a2);
      _os_log_impl(&def_5F050, v51, (os_log_type_t)v68, "Skipping backdrop generation for %s for view size=%s due to existing, size=%s, %s", (uint8_t *)v54, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v65 = v71;
      v71(v49, a2);
      swift_bridgeObjectRelease_n();
      v65(v50, a2);
    }
  }
}

void sub_E8FC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for BackdropView();
  double v4 = sub_CEF8();
  if ((v5 != 0.0 || v4 != 0.0) && a2 != 0)
  {
    id v10 = a2;
    double v8 = sub_CEF8();
    sub_E174(v10, v3, v8, v9);
  }
}

uint64_t sub_E9A0(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 120) = a11;
  *(void *)(v11 + 128) = v16;
  *(double *)(v11 + 112) = a3;
  *(void *)(v11 + 96) = a9;
  *(void *)(v11 + 104) = a10;
  *(double *)(v11 + 80) = a1;
  *(double *)(v11 + 88) = a2;
  *(void *)(v11 + 64) = a7;
  *(void *)(v11 + 72) = a8;
  uint64_t v12 = type metadata accessor for BackdropView();
  *(void *)(v11 + 136) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v11 + 144) = v13;
  *(void *)(v11 + 152) = *(void *)(v13 + 64);
  *(void *)(v11 + 160) = swift_task_alloc();
  *(void *)(v11 + 168) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_EA94, 0, 0);
}

uint64_t sub_EA94()
{
  uint64_t v55 = v0;
  if (qword_2E9AE0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = sub_26A340();
  sub_6B14(v5, (uint64_t)qword_2E9E68);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  id v7 = sub_26A320();
  os_log_type_t v8 = sub_26D820();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 144);
  if (v9)
  {
    os_log_type_t type = v8;
    os_log_type_t v52 = v6;
    uint64_t v13 = *(void *)(v0 + 64);
    unint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_1B1A8C(v13, v14, &v54);
    sub_26D9A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v16 = sub_26D900();
    *(void *)(v0 + 40) = sub_1B1A8C(v16, v17, &v54);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    uint64_t v48 = v15 + 24;
    uint64_t v18 = (void *)sub_CE1C();
    *(void *)(v0 + 48) = v18;
    sub_4A98(&qword_2EA150);
    uint64_t v19 = sub_26D960();
    unint64_t v21 = v20;

    uint64_t v6 = v52;
    *(void *)(v0 + 56) = sub_1B1A8C(v19, v21, &v54);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl(&def_5F050, v7, type, "Generating backdrop for %s for view size=%s, %s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v23 = *(void *)(v0 + 152);
  uint64_t v22 = *(void *)(v0 + 160);
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 80);
  uint64_t v27 = *(void *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 72);
  *(void *)typea = *(void *)(v0 + 64);
  int v53 = *(void **)(v0 + 104);
  long long v49 = *(_OWORD *)(v0 + 120);
  v6(v22, *(void *)(v0 + 96), v24);
  unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v31 = (v23 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v49;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v33 + v30, v22, v24);
  uint64_t v34 = (void *)(v33 + v31);
  *uint64_t v34 = *(void *)typea;
  v34[1] = v29;
  unint64_t v35 = (void *)(v33 + v32);
  *unint64_t v35 = v28;
  v35[1] = v27;
  *(void *)(v33 + ((v32 + 23) & 0xFFFFFFFFFFFFFFF8)) = v53;
  unint64_t v36 = (objc_class *)type metadata accessor for MediaBackdropSnapshotRendererOperation();
  uint64_t v37 = (char *)objc_allocWithZone(v36);
  uint64_t v38 = OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_semaphore;
  id v39 = v53;
  swift_bridgeObjectRetain();
  id v40 = v39;
  swift_retain();
  uint64_t v41 = v37;
  *(void *)&v37[v38] = dispatch_semaphore_create(0);
  *(void *)&v41[OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_content] = v40;
  unint64_t v42 = &v41[OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_size];
  *(void *)unint64_t v42 = v28;
  *((void *)v42 + 1) = v27;
  *(void *)&v41[OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_contentScale] = v26;
  unint64_t v43 = (uint64_t (**)(void *, uint64_t))&v41[OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_completion];
  *unint64_t v43 = sub_12554;
  v43[1] = (uint64_t (*)(void *, uint64_t))v33;
  id v44 = v40;
  swift_retain();

  *(void *)(v0 + 16) = v41;
  *(void *)(v0 + 24) = v36;
  [v0 initWith];
  swift_release();

  if (qword_2E9B20 != -1) {
    swift_once();
  }
  [qword_2EA148 addOperation:v45, v48];

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_EFD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  uint64_t v40 = a5;
  uint64_t v44 = a4;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v15 = type metadata accessor for BackdropView();
  uint64_t v41 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_26D6F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a3, v15);
  sub_26D6D0();
  id v24 = a1;
  swift_bridgeObjectRetain();
  id v39 = a6;
  swift_errorRetain();
  uint64_t v25 = sub_26D6C0();
  unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = &protocol witness table for MainActor;
  uint64_t v31 = v41;
  uint64_t v32 = v43;
  *((void *)v30 + 4) = v42;
  *((void *)v30 + 5) = v32;
  *((void *)v30 + 6) = v37;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v30[v26], v19, v31);
  uint64_t v33 = &v30[v27];
  uint64_t v34 = v40;
  *(void *)uint64_t v33 = v44;
  *((void *)v33 + 1) = v34;
  unint64_t v35 = (double *)&v30[v28];
  *unint64_t v35 = a9;
  v35[1] = a10;
  *(void *)&v30[v29] = v39;
  *(void *)&v30[(v29 + 15) & 0xFFFFFFFFFFFFFFF8] = v38;
  sub_19E514((uint64_t)v22, (uint64_t)&unk_2EA358, (uint64_t)v30);
  return swift_release();
}

uint64_t sub_F274(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 120) = a10;
  *(void *)(v10 + 128) = v16;
  *(double *)(v10 + 104) = a1;
  *(double *)(v10 + 112) = a2;
  *(void *)(v10 + 88) = a8;
  *(void *)(v10 + 96) = a9;
  *(void *)(v10 + 72) = a6;
  *(void *)(v10 + 80) = a7;
  uint64_t v11 = type metadata accessor for BackdropView();
  *(void *)(v10 + 136) = v11;
  *(void *)(v10 + 144) = *(void *)(v11 - 8);
  *(void *)(v10 + 152) = swift_task_alloc();
  sub_26D6D0();
  *(void *)(v10 + 160) = sub_26D6C0();
  uint64_t v13 = sub_26D6B0();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_F3B4, v13, v12);
}

uint64_t sub_F3B4()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[9];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[9];
    id v3 = objc_allocWithZone((Class)UIImage);
    id v4 = v2;
    [v3 initWithCGImage:v4 scale:0 orientation:1.0];
    sub_CE68();
    if (qword_2E9AE0 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[18];
    uint64_t v5 = v0[19];
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[10];
    uint64_t v9 = sub_26A340();
    sub_6B14(v9, (uint64_t)qword_2E9E68);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_26A320();
    os_log_type_t v11 = sub_26D820();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v14 = v0[18];
    uint64_t v13 = v0[19];
    uint64_t v15 = v0[17];
    if (v12)
    {
      os_log_type_t type = v11;
      uint64_t v38 = v0[19];
      uint64_t v39 = v0[17];
      uint64_t v16 = v0[11];
      unint64_t v17 = v0[12];
      uint64_t v42 = v4;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315650;
      swift_bridgeObjectRetain();
      v0[5] = sub_1B1A8C(v16, v17, &v43);
      sub_26D9A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v19 = sub_26D900();
      v0[6] = sub_1B1A8C(v19, v20, &v43);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      uint64_t v21 = (void *)sub_CE1C();
      v0[7] = v21;
      sub_4A98(&qword_2EA150);
      uint64_t v22 = sub_26D960();
      unint64_t v24 = v23;

      v0[8] = sub_1B1A8C(v22, v24, &v43);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v38, v39);
      _os_log_impl(&def_5F050, v10, type, "Done generation of backdrop for %s for view size=%s, %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }
  }
  else
  {
    if (qword_2E9AE0 != -1) {
      swift_once();
    }
    uint64_t v25 = (void *)v0[15];
    uint64_t v26 = sub_26A340();
    sub_6B14(v26, (uint64_t)qword_2E9E68);
    id v27 = v25;
    swift_errorRetain();
    unint64_t v28 = sub_26A320();
    os_log_type_t v29 = sub_26D840();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (void *)v0[15];
      uint64_t v40 = v0[16];
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412546;
      v0[2] = v30;
      id v33 = v30;
      sub_26D9A0();
      *uint64_t v32 = v30;

      *(_WORD *)(v31 + 12) = 2112;
      if (v40)
      {
        uint64_t v34 = sub_269630();
        v0[4] = v34;
        sub_26D9A0();
      }
      else
      {
        v0[3] = 0;
        sub_26D9A0();
        uint64_t v34 = 0;
      }
      v32[1] = v34;
      swift_errorRelease();
      _os_log_impl(&def_5F050, v28, v29, "Failed to generate backdrop snapshot for image: %@, error: %@", (uint8_t *)v31, 0x16u);
      sub_4A98(&qword_2EA360);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v35 = (void *)v0[15];

      swift_errorRelease();
    }
  }
  swift_task_dealloc();
  unint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12288(a1, (uint64_t)v8);
  uint64_t v9 = sub_26D6F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_12228((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_26D6B0();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_26D6E0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    _OWORD v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_FB54()
{
  return sub_26BD40();
}

uint64_t sub_FB74()
{
  uint64_t v0 = sub_26D8A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26D880();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_26C880();
  __chkstk_darwin(v5 - 8);
  sub_1263C(0, (unint64_t *)&qword_2EA330);
  sub_26C870();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_10AF8(&qword_2EA338, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_4A98(&qword_2EA340);
  sub_7C18(&qword_2EA348, &qword_2EA340);
  sub_26DA10();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_26D8C0();
  qword_2EA140 = result;
  return result;
}

id sub_FDD8()
{
  id v0 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v0 setMaxConcurrentOperationCount:1];
  if (qword_2E9B18 != -1) {
    swift_once();
  }
  id result = [v0 setUnderlyingQueue:qword_2EA140];
  qword_2EA148 = (uint64_t)v0;
  return result;
}

uint64_t sub_FE70()
{
  return swift_deallocClassInstance();
}

BOOL static VerticalMasonryCoverGridViewModel.GridStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int VerticalMasonryCoverGridViewModel.GridStyle.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  sub_26DEF0();
  sub_26DF00(v1);
  return sub_26DF20();
}

void VerticalMasonryCoverGridViewModel.GridStyle.hash(into:)()
{
  sub_26DF00(*v0);
}

Swift::Int sub_FF0C()
{
  Swift::UInt v1 = *v0;
  sub_26DEF0();
  sub_26DF00(v1);
  return sub_26DF20();
}

uint64_t sub_FF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_2699F0();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10020, 0, 0);
}

uint64_t sub_10020()
{
  uint64_t v1 = v0[2];
  if (*(double *)(v1 + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_size) <= 0.0
    || *(double *)(v1 + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_size + 8) <= 0.0)
  {
    sub_11AD0();
    uint64_t v8 = swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    uint64_t v10 = *(void (**)(void, uint64_t))(v0[2]
                                                 + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_completion);
    swift_errorRetain();
    v10(0, v8);
    swift_errorRelease();
    swift_errorRelease();
    sub_26D8E0();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_content);
    id v3 = self;
    id v4 = v2;
    id v5 = [v3 traitCollectionWithUserInterfaceStyle:2];
    sub_2699E0();
    sub_2699D0();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[6] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1021C;
    uint64_t v7 = v0[5];
    return static Backdrop.CompositeRenderer.snapshot(configuration:)(v7);
  }
}

uint64_t sub_1021C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1) {
    id v4 = sub_10534;
  }
  else {
    id v4 = sub_10330;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v4, 0, 0);
}

uint64_t sub_10330()
{
  uint64_t v1 = (void *)v0[7];
  id v2 = [objc_allocWithZone((Class)CIContext) init];
  id v3 = [v1 CIImage];
  if (v3)
  {
    id v4 = v3;
    [v3 extent];
    id v5 = [v2 createCGImage:v4];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = (void *)v0[7];
      uint64_t v8 = v0[4];
      uint64_t v21 = v0[5];
      uint64_t v9 = v0[3];
      uint64_t v10 = *(void (**)(id, void))(v0[2]
                                              + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_completion);
      id v11 = v5;
      v10(v6, 0);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v21, v9);
      goto LABEL_6;
    }
  }
  uint64_t v12 = (void *)v0[7];
  uint64_t v14 = v0[4];
  uint64_t v13 = v0[5];
  uint64_t v15 = v0[3];
  sub_11AD0();
  uint64_t v16 = swift_allocError();
  *unint64_t v17 = 1;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v18 = *(void (**)(void, uint64_t))(v0[2]
                                               + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_completion);
  swift_errorRetain();
  v18(0, v16);
  swift_errorRelease();
  swift_errorRelease();
LABEL_6:
  sub_26D8E0();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_10534()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  uint64_t v1 = v0[8];
  id v2 = *(void (**)(void, uint64_t))(v0[2]
                                              + OBJC_IVAR____TtC7BooksUI38MediaBackdropSnapshotRendererOperation_completion);
  swift_errorRetain();
  v2(0, v1);
  swift_errorRelease();
  swift_errorRelease();
  sub_26D8E0();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_10754()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaBackdropSnapshotRendererOperation();
  return [super dealloc];
}

uint64_t sub_107E8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26AE10();
  *a1 = v3;
  return result;
}

uint64_t sub_10814@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26AE10();
  *a1 = v3;
  return result;
}

uint64_t sub_10840()
{
  return sub_26AE20();
}

uint64_t sub_10868()
{
  return sub_26AE20();
}

uint64_t sub_10890()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_super v2 = (int *)(type metadata accessor for BackdropView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_unknownObjectRelease();
  sub_C374(*(void *)(v3 + v2[13]), *(unsigned char *)(v3 + v2[13] + 8));
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_109CC@<X0>(void (*a1)(void, void, void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for BackdropView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_D4F0(a1, v8, v5, v6, a2);
}

unint64_t sub_10A68()
{
  unint64_t result = qword_2EA158;
  if (!qword_2EA158)
  {
    sub_7B0C(&qword_2EA150);
    sub_11DEC(&qword_2EA160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA158);
  }
  return result;
}

uint64_t sub_10AF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10B40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_10B8C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10C50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    id v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (char *)v4 + v6;
    id v11 = (char *)a2 + v6;
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
    unint64_t v14 = ((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v16 = *(void *)v15;
    char v17 = *(unsigned char *)(v15 + 8);
    swift_unknownObjectRetain();
    sub_10E0C(v16, v17);
    *(void *)unint64_t v14 = v16;
    *(unsigned char *)(v14 + 8) = v17;
    unint64_t v18 = (unint64_t)(v10 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (unint64_t)(v11 + 39) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
    *(void *)(v18 + 16) = *(void *)(v19 + 16);
    unint64_t v20 = (void *)((v18 + 31) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v21 = (v19 + 31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = *(void **)v21;
    *unint64_t v20 = *(void *)v21;
    v20[1] = *(void *)(v21 + 8);
    unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    *(void *)(v23 + 16) = *(void *)(v24 + 16);
    swift_retain();
    id v25 = v22;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10E0C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10E18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  swift_unknownObjectRelease();
  sub_C374(*(void *)((v4 + 23) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t sub_10ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v5) = *(unsigned char *)(v12 + 8);
  swift_unknownObjectRetain();
  sub_10E0C(v13, v5);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v5;
  unint64_t v14 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  uint64_t v16 = (void *)((v14 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = *(void **)v17;
  *uint64_t v16 = *(void *)v17;
  v16[1] = *(void *)(v17 + 8);
  unint64_t v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  swift_retain();
  id v21 = v18;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1100C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v9) = *(unsigned char *)(v12 + 8);
  sub_10E0C(*(void *)v12, v9);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v9;
  sub_C374(v14, v15);
  uint64_t v16 = (void *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  _OWORD v16[2] = v17[2];
  swift_retain();
  swift_release();
  unint64_t v18 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = *(void **)v18;
  id v21 = *(void **)v19;
  *(void *)unint64_t v18 = *(void *)v19;
  id v22 = v21;

  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_retain();
  swift_release();
  unint64_t v23 = (void *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_11190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v13 = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = v13;
  unint64_t v14 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 16);
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = v16;
  unint64_t v17 = (_OWORD *)((v14 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (_OWORD *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v17 = *v18;
  unint64_t v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v21 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(_OWORD *)unint64_t v19 = v21;
  return a1;
}

uint64_t sub_11284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_unknownObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = *(unsigned char *)(v12 + 8);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v12;
  sub_C374(v14, v15);
  uint64_t v16 = (void *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  _OWORD v16[2] = v17[2];
  swift_release();
  unint64_t v18 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (void *)(((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = *(void **)v18;
  *(void *)unint64_t v18 = *v19;

  *(void *)(v18 + 8) = v19[1];
  swift_release();
  long long v21 = (void *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  swift_release();
  return a1;
}

uint64_t sub_113D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1153CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_11550(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFE)
            {
              unint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *unint64_t v19 = 0;
                *(_DWORD *)unint64_t v19 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *unint64_t v19 = a2;
              }
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 39) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 39) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFE8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 39) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    unsigned int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 24);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x11758);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for MediaBackdropSnapshotRenderer()
{
  return self;
}

uint64_t type metadata accessor for MediaBackdropSnapshotRendererOperation()
{
  return self;
}

uint64_t sub_117C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_119DC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_11A1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unsigned int v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unsigned int v7 = v2;
  v7[1] = sub_12B40;
  return sub_FF60(a1, v4, v5, v6);
}

unint64_t sub_11AD0()
{
  unint64_t result = qword_2EA2F8;
  if (!qword_2EA2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA2F8);
  }
  return result;
}

void sub_11B28(double *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for BackdropView() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_E0CC(a1, v1 + v4, v5);
}

uint64_t sub_11BE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for BackdropView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  sub_C374(*(void *)(v5 + v2[13]), *(unsigned char *)(v5 + v2[13] + 8));
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_11D3C()
{
  uint64_t v1 = *(void *)(type metadata accessor for BackdropView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_E8FC(v0 + v2, v3);
}

uint64_t sub_11DEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1263C(255, &qword_2EA168);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_11E40()
{
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v2 = (int *)(type metadata accessor for BackdropView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5, v1);
  swift_unknownObjectRelease();
  sub_C374(*(void *)(v5 + v2[13]), *(unsigned char *)(v5 + v2[13] + 8));
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_11FB0(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 4);
  uint64_t v4 = *(void *)(type metadata accessor for BackdropView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  uint64_t v9 = *((void *)v1 + 6);
  uint64_t v10 = *((void *)v1 + 7);
  double v11 = v1[8];
  double v12 = v1[9];
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = *(void *)((char *)v1 + v6);
  double v15 = *(double *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  int v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *int v16 = v2;
  v16[1] = sub_12134;
  return sub_E9A0(v11, v12, v15, a1, v7, v8, v9, v10, v13, v14, v3);
}

uint64_t sub_12134()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_12228(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA2E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_122F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_12328(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_12134;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2F3830 + dword_2F3830);
  return v6(a1, v4);
}

uint64_t sub_123E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for BackdropView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (((((*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  sub_C374(*(void *)(v5 + v2[13]), *(unsigned char *)(v5 + v2[13] + 8));
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_12554(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for BackdropView() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v2 + v9);
  uint64_t v12 = *(void *)(v2 + v9 + 8);
  double v13 = *(double *)(v2 + v10);
  double v14 = *(double *)(v2 + v10 + 8);
  double v15 = *(void **)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_EFD4(a1, a2, v2 + v8, v11, v12, v15, v5, v6, v13, v14);
}

uint64_t sub_1263C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_12678()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(type metadata accessor for BackdropView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (((((*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v5 = v0 + v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5, v1);
  swift_unknownObjectRelease();
  sub_C374(*(void *)(v5 + v2[13]), *(unsigned char *)(v5 + v2[13] + 8));
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_12814(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for BackdropView() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[3];
  uint64_t v17 = v1[2];
  uint64_t v8 = v1[6];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v11 = *(void *)((char *)v1 + v5);
  uint64_t v10 = *(void *)((char *)v1 + v5 + 8);
  double v12 = *(double *)((char *)v1 + v6);
  double v13 = *(double *)((char *)v1 + v6 + 8);
  uint64_t v14 = *(void *)((char *)v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  double v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_12B40;
  return sub_F274(v12, v13, a1, v17, v7, v8, v9, v11, v10, v14);
}

uint64_t sub_129B4()
{
  return swift_getGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for MediaBackdropSnapshotRendererOperation.BackdropRenderOperationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12AB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaBackdropSnapshotRendererOperation.BackdropRenderOperationError()
{
  return &type metadata for MediaBackdropSnapshotRendererOperation.BackdropRenderOperationError;
}

unint64_t sub_12AEC()
{
  unint64_t result = qword_2EA378;
  if (!qword_2EA378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA378);
  }
  return result;
}

uint64_t sub_12B44()
{
  uint64_t v0 = sub_26B3B0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_4A98(&qword_2EA3A8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B370();
  sub_4A98(&qword_2EA3B8);
  uint64_t v5 = sub_7B0C(&qword_2EA3C0);
  uint64_t v6 = sub_7B0C(&qword_2EA3C8);
  uint64_t v7 = sub_7C18(&qword_2EA3D0, &qword_2EA3C0);
  uint64_t v8 = sub_7C18(&qword_2EA3D8, &qword_2EA3C8);
  v10[0] = v5;
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  swift_getOpaqueTypeConformance2();
  sub_26A7C0();
  sub_7C18(&qword_2EA3B0, &qword_2EA3A8);
  sub_26B3E0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_12D80()
{
  uint64_t v0 = sub_26CB80();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EA3C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26A630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  sub_26CB50();
  sub_26D120();
  v11[3] = sub_26D140();
  v11[4] = (uint64_t)&protocol witness table for Models.FlowBackAction;
  sub_CA1C(v11);
  sub_26D110();
  sub_26A120();
  sub_4A98(&qword_2EA3C8);
  sub_7C18(&qword_2EA3D0, &qword_2EA3C0);
  sub_7C18(&qword_2EA3D8, &qword_2EA3C8);
  sub_26BF60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_13038()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v20 - v5;
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v13 = (char *)v20 - v12;
  sub_26D370();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v20[1] = v16;
  v20[2] = v18;
  sub_CC78();
  return sub_26C2C0();
}

uint64_t sub_132D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = sub_26B0D0();
  uint64_t v1 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2EA388);
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EA390);
  uint64_t v8 = sub_4A98(&qword_2EA398);
  uint64_t v9 = sub_7C18(&qword_2EA3A0, &qword_2EA390);
  uint64_t v10 = sub_7B0C(&qword_2EA3A8);
  uint64_t v11 = sub_7C18(&qword_2EA3B0, &qword_2EA3A8);
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_26C010();
  uint64_t v13 = v18;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v18);
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  uint64_t v23 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v14 = v17;
  sub_26BF50();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v14);
}

uint64_t View.toolbarCloseButton()()
{
  return sub_26C030();
}

uint64_t sub_135A8()
{
  return swift_getWitnessTable();
}

unint64_t sub_1360C()
{
  unint64_t result = qword_2EA380;
  if (!qword_2EA380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA380);
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarCloseButtonViewModifier()
{
  return &type metadata for ToolbarCloseButtonViewModifier;
}

uint64_t sub_13670()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

uint64_t sub_136D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1380C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for ListItemAccessoryView();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for ListItemAccessoryView()
{
  return sub_129B4();
}

uint64_t sub_138B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_138BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_13958(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_13A50(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_13AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_13B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_13BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_13C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_13CCC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x13E18);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_13E2C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1400CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_14034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_14078(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_26C3C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unsigned int v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  unint64_t v10 = &v14[-v9];
  uint64_t v15 = v3;
  uint64_t v16 = v2;
  uint64_t v17 = v1;
  sub_26B120();
  sub_26C3B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v8, v4, WitnessTable);
  int v12 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  sub_CCCC(v10, v4, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1425C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v12 = (char *)&v17 - v11;
  uint64_t v13 = type metadata accessor for ListItemAccessoryView();
  (*(void (**)(void, void, uint64_t, uint64_t))(a3 + 24))(*(void *)(a1 + *(int *)(v13 + 36)), *(void *)(a1 + *(int *)(v13 + 36) + 8), a2, a3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_CCCC(v10, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, AssociatedTypeWitness);
  sub_CCCC(v12, AssociatedTypeWitness, AssociatedConformanceWitness);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, AssociatedTypeWitness);
}

uint64_t sub_14414()
{
  return sub_1425C(v0[4], v0[2], v0[3]);
}

uint64_t sub_14420()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_26C3C0();

  return swift_getWitnessTable();
}

uint64_t CardInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CardInfo() + 20);
  uint64_t v4 = sub_269840();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CardInfo()
{
  uint64_t result = qword_2EA4D0;
  if (!qword_2EA4D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CardInfo.init(options:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for CardInfo();
  uint64_t result = sub_269830();
  *a2 = a1;
  return result;
}

uint64_t CardInfo.options.getter()
{
  uint64_t v1 = *v0;
  type metadata accessor for CardInfo();
  swift_bridgeObjectRetain();
  uint64_t v15 = &type metadata for String;
  *(void *)&long long v14 = sub_269820();
  *((void *)&v14 + 1) = v2;
  sub_89B4(&v14, &v12);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = v1;
  uint64_t v4 = sub_14714((uint64_t)&v12, v13);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  sub_14F2C(*v6, v6[1], 0x65636E6174736E69, 0xEA00000000006449, isUniquelyReferenced_nonNull_native, &v11);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v12);
  uint64_t v8 = v11;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_14714(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t CardInfo.init(with:alwaysPresentNewCardSet:)@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v52 = a2;
  uint64_t v5 = sub_269E80();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  __chkstk_darwin(v5);
  id v47 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2696C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CardInfo();
  uint64_t v14 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  id v51 = (unint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_4ADC(a1, a1[3]);
  sub_269F60();
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  uint64_t v54 = v14;
  if (v16 == 1)
  {
    uint64_t v53 = a3;
    sub_15110((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_4ADC(a1, a1[3]);
    uint64_t v17 = sub_269F50();
    if (v17)
    {
      uint64_t v18 = v17;
      sub_4A98(&qword_2EA468);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_26FF00;
      *(void *)(inited + 32) = 25705;
      *(void *)(inited + 40) = 0xE200000000000000;
      sub_4ADC(a1, a1[3]);
      *(void *)(inited + 48) = sub_269DB0();
      *(void *)(inited + 56) = v20;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 80) = 7107189;
      *(void *)(inited + 88) = 0xE300000000000000;
      *(void *)(inited + 96) = sub_269680();
      *(void *)(inited + 104) = v21;
      *(void *)(inited + 120) = &type metadata for String;
      *(void *)(inited + 128) = 0x656372756F736572;
      *(void *)(inited + 136) = 0xE800000000000000;
      uint64_t v22 = sub_4A98(&qword_2EA470);
      *(void *)(inited + 144) = v18;
      *(void *)(inited + 168) = v22;
      *(void *)(inited + 176) = 0xD000000000000017;
      *(void *)(inited + 184) = 0x8000000000287D20;
      *(void *)(inited + 216) = &type metadata for Bool;
      *(unsigned char *)(inited + 192) = v52 & 1;
      unint64_t v23 = sub_8D98(inited);
      uint64_t v24 = v55;
      id v25 = v51;
      sub_269830();
      *id v25 = v23;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      goto LABEL_14;
    }
    uint64_t v53 = a3;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v26 = a1[4];
  sub_4ADC(a1, a1[3]);
  uint64_t v46 = v26;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_26D980();
  uint64_t v50 = &v46;
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v46 - v30;
  sub_269DA0();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, AssociatedTypeWitness) != 1)
  {
    v56[3] = AssociatedTypeWitness;
    v56[4] = swift_getAssociatedConformanceWitness();
    sub_CA1C(v56);
    (*(void (**)(void))(v32 + 32))();
    swift_getAssociatedConformanceWitness();
    uint64_t v34 = sub_269EE0();
    uint64_t v36 = v35;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v56);
    uint64_t v33 = v53;
    if (!v36) {
      goto LABEL_16;
    }
    sub_4ADC(a1, a1[3]);
    int v37 = sub_269F20();
    if (v37)
    {
      if (v37 != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      uint64_t v53 = v33;
      uint64_t v38 = (unsigned int *)&enum case for MResourceType.books(_:);
    }
    else
    {
      uint64_t v53 = v33;
      uint64_t v38 = (unsigned int *)&enum case for MResourceType.audiobooks(_:);
    }
    uint64_t v39 = v47;
    uint64_t v40 = v48;
    uint64_t v41 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *v38, v49);
    sub_4A98(&qword_2EA468);
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = xmmword_26FF00;
    *(void *)(v42 + 32) = 0x644965726F7473;
    *(void *)(v42 + 40) = 0xE700000000000000;
    *(void *)(v42 + 48) = v34;
    *(void *)(v42 + 56) = v36;
    *(void *)(v42 + 72) = &type metadata for String;
    *(void *)(v42 + 80) = 1701869940;
    *(void *)(v42 + 88) = 0xE400000000000000;
    *(void *)(v42 + 96) = sub_269E70();
    *(void *)(v42 + 104) = v43;
    *(void *)(v42 + 120) = &type metadata for String;
    *(void *)(v42 + 128) = 0x446B6E694C736168;
    *(void *)(v42 + 136) = 0xEB00000000617461;
    *(unsigned char *)(v42 + 144) = 1;
    *(void *)(v42 + 168) = &type metadata for Bool;
    *(void *)(v42 + 176) = 0xD000000000000017;
    *(void *)(v42 + 184) = 0x8000000000287D20;
    *(void *)(v42 + 216) = &type metadata for Bool;
    *(unsigned char *)(v42 + 192) = v52 & 1;
    unint64_t v44 = sub_8D98(v42);
    uint64_t v24 = v55;
    id v25 = v51;
    sub_269830();
    *id v25 = v44;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    a3 = v53;
LABEL_14:
    sub_15170((uint64_t)v25, a3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(a3, 0, 1, v24);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  uint64_t v33 = v53;
LABEL_16:
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v33, 1, 1, v55);
}

_OWORD *sub_14F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v28 = &type metadata for String;
  *(void *)&long long v27 = a1;
  *((void *)&v27 + 1) = a2;
  uint64_t v10 = (void *)*a6;
  unint64_t v12 = sub_9E10(a3, a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v19);
      return sub_89B4(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a5 & 1) == 0)
  {
    sub_231344();
    goto LABEL_7;
  }
  sub_22F61C(v15, a5 & 1);
  unint64_t v21 = sub_9E10(a3, a4);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_26DE60();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a6;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = sub_14714((uint64_t)&v27, (uint64_t)&type metadata for String);
  __chkstk_darwin(v23);
  id v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_15780(v12, a3, a4, *v25, v25[1], v18);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_15110(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F46A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for CardInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_269840();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for CardInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_269840();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for CardInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for CardInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for CardInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for CardInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15578);
}

uint64_t sub_15578(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269840();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    char v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CardInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1563C);
}

void *sub_1563C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269840();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_156E4()
{
  uint64_t result = sub_269840();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_OWORD *sub_15780(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = &type metadata for String;
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (void *)(a6[6] + 16 * a1);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t result = sub_89B4(&v12, (_OWORD *)(a6[7] + 32 * a1));
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

double ShelfGridBlurEdgeMaskView.insets.getter()
{
  return *(double *)v0;
}

uint64_t GeometryReferenceContext.isInList.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void GenericGeometryReference.init(frame:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

__n128 GenericGeometryReferenceBuilder.makeReference(context:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t GeometryCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  unint64_t v1 = sub_8F00((uint64_t)&_swiftEmptyArrayStorage);
  sub_4A98(&qword_2EA520);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t GeometryCache.init()()
{
  unint64_t v1 = sub_8F00((uint64_t)&_swiftEmptyArrayStorage);
  sub_4A98(&qword_2EA520);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

void sub_158EC(uint64_t a1@<X8>)
{
  long long v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_159BC(v4, a1);
  os_unfair_lock_unlock(v5);
}

double sub_15950@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v5 = sub_9E88(a2), (v6 & 1) != 0))
  {
    sub_C224(*(void *)(v4 + 56) + 40 * v5, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_159BC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_15950(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_159D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_B3D8(a2, (uint64_t)v6);
  sub_C224(a3, (uint64_t)v5);
  return sub_89C4((uint64_t)v5, (uint64_t)v6);
}

uint64_t GeometryCache.deinit()
{
  swift_release();
  return v0;
}

uint64_t GeometryCache.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t GeometryCache.size(for:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  long long v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A2E0(v2, (uint64_t)v9);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v10;
  if (v10)
  {
    uint64_t v5 = v11;
    sub_4ADC(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    uint64_t v7 = v6;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v9);
  }
  else
  {
    sub_B6DC((uint64_t)v9, &qword_2E9FC8);
    return 0;
  }
  return v7;
}

uint64_t sub_15B6C()
{
  return GeometryCache.size(for:)();
}

void sub_15B94(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_15B9C()
{
  sub_19D28();
  sub_26B0B0();
  return v1;
}

uint64_t View.geometryCache(_:)()
{
  return swift_release();
}

uint64_t sub_15C60@<X0>(void *a1@<X8>)
{
  sub_19D28();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_15CB0@<X0>(void *a1@<X8>)
{
  sub_19D28();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_15D00()
{
  return sub_26B0C0();
}

uint64_t View.geometryCache(from:)()
{
  return swift_release();
}

uint64_t type metadata accessor for GeometryCache()
{
  return self;
}

uint64_t View.cacheGeometry<A>(for:referenceBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v16[1] = a5;
  v16[0] = a3;
  uint64_t v8 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CacheGeometryViewModifier();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)v16 - v13;
  sub_1600C(a1, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, a4);
  sub_16074((uint64_t)v17, (uint64_t)v10, a4, (uint64_t)v14);
  sub_26C030();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for CacheGeometryViewModifier()
{
  return sub_129B4();
}

uint64_t sub_1600C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_16074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = swift_getKeyPath();
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = swift_getKeyPath();
  *(unsigned char *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = swift_getKeyPath();
  *(unsigned char *)(a4 + 72) = 0;
  memset(v13, 0, sizeof(v13));
  char v14 = 1;
  sub_177D4((uint64_t)v13, (uint64_t)v12);
  long long v8 = v12[1];
  *(_OWORD *)(a4 + 80) = v12[0];
  *(_OWORD *)(a4 + 96) = v8;
  *(_OWORD *)(a4 + 112) = v12[2];
  sub_19CC4(a1, a4 + 128, &qword_2EA528);
  uint64_t v9 = a4 + *(int *)(type metadata accessor for CacheGeometryViewModifier() + 52);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v10(v9, a2, a3);
}

uint64_t View.geometryCacheNamespace()()
{
  return sub_26BD70();
}

uint64_t sub_161EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_16208(uint64_t a1)
{
  unint64_t result = sub_16230();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_16230()
{
  unint64_t result = qword_2EA558;
  if (!qword_2EA558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA558);
  }
  return result;
}

uint64_t dispatch thunk of GeometryReference.frame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GeometryReferenceBuilding.makeReference(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

__n128 initializeWithCopy for GeometryReferenceContext(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for GeometryReferenceContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GeometryReferenceContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeometryReferenceContext()
{
  return &type metadata for GeometryReferenceContext;
}

ValueMetadata *type metadata accessor for GenericGeometryReference()
{
  return &type metadata for GenericGeometryReference;
}

ValueMetadata *type metadata accessor for GenericGeometryReferenceBuilder()
{
  return &type metadata for GenericGeometryReferenceBuilder;
}

uint64_t method lookup function for GeometryCache(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for GeometryCache);
}

uint64_t dispatch thunk of GeometryCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of GeometryCache.reference(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

_UNKNOWN **sub_163DC()
{
  return &protocol witness table for GenericGeometryReference;
}

uint64_t sub_163E8(uint64_t a1)
{
  return sub_164CC(a1, &qword_2EA618, &qword_2EA620);
}

uint64_t sub_16410()
{
  return swift_getWitnessTable();
}

uint64_t sub_164A4(uint64_t a1)
{
  return sub_164CC(a1, &qword_2EA628, &qword_2EA630);
}

uint64_t sub_164CC(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

uint64_t sub_16560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_16568()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_16624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 168) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v11 = *(void *)(a2 + 24);
      if (v11)
      {
        uint64_t v12 = *(void *)(a2 + 32);
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = v12;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      }
      else
      {
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    unint64_t v14 = v4 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = a2 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
    char v17 = *(unsigned char *)(v15 + 56);
    j__swift_retain();
    *(void *)(v14 + 48) = v16;
    *(unsigned char *)(v14 + 56) = v17;
    uint64_t v18 = *(void *)(v15 + 64);
    char v19 = *(unsigned char *)(v15 + 72);
    sub_10E0C(v18, v19);
    *(void *)(v14 + 64) = v18;
    *(unsigned char *)(v14 + 72) = v19;
    long long v20 = *(_OWORD *)(v15 + 80);
    long long v21 = *(_OWORD *)(v15 + 96);
    *(unsigned char *)(v14 + 112) = *(unsigned char *)(v15 + 112);
    *(_OWORD *)(v14 + 80) = v20;
    *(_OWORD *)(v14 + 96) = v21;
    *(void *)(v14 + 120) = *(void *)(v15 + 120);
    unint64_t v22 = ((v4 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v15 + 135) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = *(void *)(v23 + 24);
    swift_retain();
    if (v24 < 0xFFFFFFFF)
    {
      long long v25 = *(_OWORD *)v23;
      long long v26 = *(_OWORD *)(v23 + 16);
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      *(_OWORD *)unint64_t v22 = v25;
      *(_OWORD *)(v22 + 16) = v26;
    }
    else
    {
      *(void *)(v22 + 24) = v24;
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      (**(void (***)(unint64_t, unint64_t, unint64_t))(v24 - 8))(v22, (v15 + 135) & 0xFFFFFFFFFFFFFFF8, v24);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((v22 + v7 + 40) & ~v7, (v23 + v7 + 40) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_1687C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  j__swift_release();
  sub_C374(*(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
  swift_release();
  unint64_t v5 = (v4 + 135) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v5 + 24) >= 0xFFFFFFFFuLL) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v5);
  }
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

uint64_t sub_16954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  char v12 = *(unsigned char *)(v10 + 56);
  j__swift_retain();
  *(void *)(v9 + 48) = v11;
  *(unsigned char *)(v9 + 56) = v12;
  uint64_t v13 = *(void *)(v10 + 64);
  char v14 = *(unsigned char *)(v10 + 72);
  sub_10E0C(v13, v14);
  *(void *)(v9 + 64) = v13;
  *(unsigned char *)(v9 + 72) = v14;
  long long v15 = *(_OWORD *)(v10 + 80);
  long long v16 = *(_OWORD *)(v10 + 96);
  *(unsigned char *)(v9 + 112) = *(unsigned char *)(v10 + 112);
  *(_OWORD *)(v9 + 80) = v15;
  *(_OWORD *)(v9 + 96) = v16;
  *(void *)(v9 + 120) = *(void *)(v10 + 120);
  unint64_t v17 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v10 + 135) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = *(void *)(v18 + 24);
  swift_retain();
  if (v19 < 0xFFFFFFFF)
  {
    long long v20 = *(_OWORD *)v18;
    long long v21 = *(_OWORD *)(v18 + 16);
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    *(_OWORD *)unint64_t v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
  }
  else
  {
    *(void *)(v17 + 24) = v19;
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    (**(void (***)(unint64_t, unint64_t, unint64_t))(v19 - 8))(v17, (v10 + 135) & 0xFFFFFFFFFFFFFFF8, v19);
  }
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 16))((v17 + *(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (v18 + *(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

uint64_t sub_16B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, qword_2EA638);
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v6 = *(void *)(a2 + 24);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *(_OWORD *)a2;
        long long v8 = *(_OWORD *)(a2 + 16);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  char v12 = *(unsigned char *)(v10 + 56);
  j__swift_retain();
  *(void *)(v9 + 48) = v11;
  *(unsigned char *)(v9 + 56) = v12;
  j__swift_release();
  uint64_t v13 = *(void *)(v10 + 64);
  char v14 = *(unsigned char *)(v10 + 72);
  sub_10E0C(v13, v14);
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64);
  char v16 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72);
  *(void *)(v9 + 64) = v13;
  *(unsigned char *)(v9 + 72) = v14;
  sub_C374(v15, v16);
  long long v17 = *(_OWORD *)(v10 + 80);
  long long v18 = *(_OWORD *)(v10 + 96);
  *(unsigned char *)(v9 + 112) = *(unsigned char *)(v10 + 112);
  *(_OWORD *)(v9 + 80) = v17;
  *(_OWORD *)(v9 + 96) = v18;
  *(void *)(v9 + 120) = *(void *)(v10 + 120);
  swift_retain();
  swift_release();
  unint64_t v19 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v10 + 135) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = *(void *)(v20 + 24);
  if (*(void *)(v19 + 24) < 0xFFFFFFFFuLL)
  {
    if (v21 >= 0xFFFFFFFF)
    {
      *(void *)(v19 + 24) = v21;
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
      (**(void (***)(unint64_t, unint64_t))(v21 - 8))((v9 + 135) & 0xFFFFFFFFFFFFFFF8, (v10 + 135) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_15;
    }
LABEL_14:
    long long v23 = *(_OWORD *)v20;
    long long v24 = *(_OWORD *)(v20 + 16);
    *(void *)(v19 + 32) = *(void *)(v20 + 32);
    *(_OWORD *)unint64_t v19 = v23;
    *(_OWORD *)(v19 + 16) = v24;
    goto LABEL_15;
  }
  uint64_t v22 = (uint64_t *)((v9 + 135) & 0xFFFFFFFFFFFFFFF8);
  if (v21 < 0xFFFFFFFF)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v22);
    goto LABEL_14;
  }
  sub_16D58(v22, (uint64_t *)((v10 + 135) & 0xFFFFFFFFFFFFFFF8));
LABEL_15:
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 24))((v19 + *(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v20 + *(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

uint64_t *sub_16D58(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unsigned int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

unint64_t sub_16F88(unint64_t a1, unint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(unsigned char *)(v5 + 56) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(void *)(v5 + 48) = v6;
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  *(unsigned char *)(v5 + 72) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 72);
  *(void *)(v5 + 64) = v7;
  long long v8 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  long long v9 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 112);
  *(_OWORD *)(v5 + 96) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(_OWORD *)(v5 + 112) = v9;
  *(_OWORD *)(v5 + 80) = v8;
  unint64_t v10 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
  long long v12 = *(_OWORD *)v11;
  long long v13 = *(_OWORD *)(v11 + 16);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(_OWORD *)unint64_t v10 = v12;
  *(_OWORD *)(v10 + 16) = v13;
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))((v10 + *(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (v11 + *(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

uint64_t sub_1705C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, qword_2EA638);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = a2 & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(void *)(v7 + 48) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(unsigned char *)(v7 + 56) = v9;
  j__swift_release();
  char v10 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 72);
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64);
  char v12 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72);
  *(void *)(v7 + 64) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  *(unsigned char *)(v7 + 72) = v10;
  sub_C374(v11, v12);
  long long v13 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  long long v14 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(unsigned char *)(v7 + 112) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 112);
  *(_OWORD *)(v7 + 80) = v13;
  *(_OWORD *)(v7 + 96) = v14;
  *(void *)(v7 + 120) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 120);
  swift_release();
  unint64_t v15 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 135) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL) {
    _s7BooksUI13AnyPagedFrameVwxx_0((v7 + 135) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v16 = (v8 + 135) & 0xFFFFFFFFFFFFFFF8;
  long long v17 = *(_OWORD *)v16;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(_OWORD *)unint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))((v15 + *(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (v16 + *(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_171A0(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v6 + 168) & ~v6) + v7;
  char v11 = 8 * (((v6 - 88) & ~(_BYTE)v6) + v7);
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)(a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      unint64_t v16 = a1 & 0xFFFFFFFFFFFFFFF8;
      if (v5 > 0x7FFFFFFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((v16 + 135) & 0xFFFFFFFFFFFFFFF8) + v6 + 40) & ~v6);
      }
      unint64_t v17 = *(void *)(v16 + 120);
      if (v17 >= 0xFFFFFFFF) {
        LODWORD(v17) = -1;
      }
      int v18 = v17 - 1;
      if (v18 < 0) {
        int v18 = -1;
      }
      return (v18 + 1);
    }
  }
  int v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(unsigned char *)(a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v10) = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_17360(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  size_t v11 = ((v10 + 168) & ~v10) + *(void *)(v6 + 64);
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 != 0 && v12)
  {
    if (v11 <= 3)
    {
      unsigned int v17 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v17))
      {
        int v14 = 4;
      }
      else if (v17 >= 0x100)
      {
        int v14 = 2;
      }
      else
      {
        int v14 = v17 > 1;
      }
    }
    else
    {
      int v14 = 1;
    }
  }
  else
  {
    int v14 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * (((v10 - 88) & ~(_BYTE)v10) + *(unsigned char *)(v6 + 64)))) + 1;
      if (v11)
      {
        int v18 = v15 & ~(-1 << (8 * (((v10 - 88) & ~(_BYTE)v10) + *(unsigned char *)(v6 + 64))));
        bzero((void *)a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          *(unsigned char *)(a1 + 2) = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *(unsigned char *)a1 = v18;
        }
      }
    }
    else
    {
      bzero((void *)a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        *(unsigned char *)(a1 + v11) = v16;
        return;
      case 2:
        *(_WORD *)(a1 + v11) = v16;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)(a1 + v11) = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *(unsigned char *)(a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)(a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x175ECLL);
    case 4:
      *(_DWORD *)(a1 + v11) = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        unint64_t v19 = a1 & 0xFFFFFFFFFFFFFFF8;
        if (v8 > 0x7FFFFFFE)
        {
          unint64_t v20 = *(void (**)(unint64_t))(v7 + 56);
          v20((((v19 + 135) & 0xFFFFFFFFFFFFFFF8) + v10 + 40) & ~v10);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)(v19 + 120) = 0;
          *(_OWORD *)(v19 + 104) = 0u;
          *(_OWORD *)(v19 + 88) = 0u;
          *(void *)(v19 + 80) = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)(v19 + 120) = a2;
        }
      }
      return;
  }
}

uint64_t sub_17614()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_17658(uint64_t a1, uint64_t a2)
{
  sub_1600C(a1, (uint64_t)v15);
  sub_1600C(a2, (uint64_t)v14);
  sub_1600C((uint64_t)v15, (uint64_t)v9);
  sub_1600C((uint64_t)v14, (uint64_t)&v11);
  if (v10)
  {
    sub_1600C((uint64_t)v9, (uint64_t)v8);
    if (*((void *)&v12 + 1))
    {
      v6[0] = v11;
      v6[1] = v12;
      uint64_t v7 = v13;
      char v4 = sub_26DA40();
      sub_ACF0((uint64_t)v6);
      sub_B6DC((uint64_t)v14, &qword_2EA528);
      sub_B6DC((uint64_t)v15, &qword_2EA528);
      sub_ACF0((uint64_t)v8);
      sub_B6DC((uint64_t)v9, &qword_2EA528);
      if ((v4 & 1) == 0) {
        return 0;
      }
      return CGRectEqualToRect(*(CGRect *)(a1 + 40), *(CGRect *)(a2 + 40));
    }
    sub_B6DC((uint64_t)v14, &qword_2EA528);
    sub_B6DC((uint64_t)v15, &qword_2EA528);
    sub_ACF0((uint64_t)v8);
  }
  else
  {
    sub_B6DC((uint64_t)v14, &qword_2EA528);
    sub_B6DC((uint64_t)v15, &qword_2EA528);
    if (!*((void *)&v12 + 1))
    {
      sub_B6DC((uint64_t)v9, &qword_2EA528);
      return CGRectEqualToRect(*(CGRect *)(a1 + 40), *(CGRect *)(a2 + 40));
    }
  }
  sub_B6DC((uint64_t)v9, &qword_2EA760);
  return 0;
}

double sub_177D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19CC4(a1, (uint64_t)v7, &qword_2EA6D0);
  sub_4A98(&qword_2EA6D0);
  sub_26C340();
  char v3 = v10;
  uint64_t v4 = v11;
  double result = *(double *)&v8;
  long long v6 = v9;
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  return result;
}

BOOL sub_17840(uint64_t a1, uint64_t a2)
{
  return sub_17658(a1, a2);
}

uint64_t sub_1784C@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v112 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_26B400();
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  v100 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v83 = (char *)&v82 - v8;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v97 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a2;
  uint64_t v99 = *(void *)(a2 - 8);
  __chkstk_darwin(v10);
  unint64_t v101 = v12;
  v95 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 24);
  type metadata accessor for CacheGeometryViewModifier.KeyFramePair();
  swift_getWitnessTable();
  sub_26B510();
  uint64_t v14 = sub_26ABD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  v131 = &protocol witness table for EmptyView;
  uint64_t v132 = WitnessTable;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v102 = v14;
  uint64_t v103 = v16;
  sub_26B2D0();
  uint64_t v17 = sub_26ABD0();
  uint64_t v87 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v82 - v18;
  uint64_t v19 = sub_26ABD0();
  uint64_t v89 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v82 - v20;
  uint64_t v21 = sub_26ABD0();
  uint64_t v94 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v113 = (char *)&v82 - v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v115 = v23;
  uint64_t v129 = v23;
  uint64_t v130 = v24;
  uint64_t v85 = v17;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v127 = v84;
  v128 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v90 = v19;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v125 = v25;
  v126 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v116 = v13;
  uint64_t v27 = *(void *)(v13 + 8);
  uint64_t v111 = v21;
  uint64_t v121 = v21;
  uint64_t v122 = v9;
  uint64_t v117 = v9;
  uint64_t v110 = v26;
  uint64_t v123 = v26;
  uint64_t v124 = v27;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v93 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v29 = __chkstk_darwin(OpaqueTypeMetadata2);
  v92 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v91 = (char *)&v82 - v31;
  uint64_t v106 = v32;
  uint64_t v33 = v4;
  uint64_t v109 = sub_26B300();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v82 - v34;
  uint64_t v35 = *(void *)(v114 + 48);
  uint64_t v36 = v114;
  LOBYTE(v9) = *(unsigned char *)(v114 + 56);
  j__swift_retain();
  uint64_t v37 = sub_406C8(v35, v9);
  uint64_t v38 = j__swift_release();
  if (v37)
  {
    uint64_t v104 = v27;
    __chkstk_darwin(v38);
    uint64_t v40 = v116;
    uint64_t v39 = v117;
    *(&v82 - 4) = v117;
    *(&v82 - 3) = v40;
    *(&v82 - 2) = v36;
    *(&v82 - 1) = v37;
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v118 = v37;
    uint64_t v41 = v86;
    uint64_t v82 = v4;
    sub_26BC10();
    uint64_t v42 = v99;
    uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
    uint64_t v43 = v95;
    uint64_t v44 = v36;
    uint64_t v45 = v98;
    v105(v95, v44, v98);
    uint64_t v46 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v102 = v46 | 7;
    uint64_t v47 = (v46 + 32) & ~v46;
    uint64_t v103 = v47;
    unint64_t v48 = (v101 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v101 = v48 + 8;
    unint64_t v49 = v48;
    v100 = (char *)v48;
    uint64_t v50 = swift_allocObject();
    uint64_t v83 = (char *)v25;
    uint64_t v51 = v50;
    *(void *)(v50 + 16) = v39;
    *(void *)(v50 + 24) = v40;
    uint64_t v99 = *(void *)(v42 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v99)(v50 + v47, v43, v45);
    *(void *)(v51 + v49) = v118;
    swift_retain();
    int v52 = v88;
    uint64_t v53 = v85;
    sub_26BCD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v53);
    uint64_t v54 = v114;
    v105(v43, v114, v45);
    uint64_t v55 = swift_allocObject();
    uint64_t v56 = v116;
    *(void *)(v55 + 16) = v39;
    *(void *)(v55 + 24) = v56;
    ((void (*)(uint64_t, char *, uint64_t))v99)(v55 + v103, v43, v45);
    *(void *)&v100[v55] = v118;
    swift_retain();
    uint64_t v57 = v90;
    sub_26C040();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v52, v57);
    uint64_t v58 = v54;
    uint64_t v59 = v54 + *(int *)(v45 + 52);
    uint64_t v60 = v97;
    uint64_t v61 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v59, v39);
    v105(v43, v58, v45);
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = v116;
    *(void *)(v62 + 16) = v39;
    *(void *)(v62 + 24) = v63;
    ((void (*)(uint64_t, char *, uint64_t))v99)(v62 + v103, v43, v45);
    *(void *)&v100[v62] = v118;
    swift_retain();
    uint64_t v64 = (uint64_t)v92;
    uint64_t v65 = v111;
    uint64_t v66 = v110;
    id v67 = v113;
    sub_26C050();
    swift_release();
    uint64_t v68 = v61;
    uint64_t v27 = v104;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v68, v39);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v67, v65);
    uint64_t v121 = v65;
    uint64_t v122 = v39;
    uint64_t v123 = v66;
    uint64_t v124 = v27;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v70 = v91;
    uint64_t v71 = v106;
    sub_CCCC(v64, v106, OpaqueTypeConformance2);
    uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v72(v64, v71);
    sub_CCCC(v70, v71, OpaqueTypeConformance2);
    uint64_t v73 = v107;
    uint64_t v74 = v115;
    sub_1B894(v64, v71);
    swift_release();
    v72(v64, v71);
    v72((uint64_t)v70, v71);
  }
  else
  {
    uint64_t v75 = v83;
    uint64_t v76 = v115;
    sub_CCCC(v105, v33, v115);
    uint64_t v77 = (uint64_t)v100;
    sub_CCCC(v75, v33, v76);
    uint64_t v65 = v111;
    uint64_t v121 = v111;
    uint64_t v122 = v117;
    uint64_t v66 = v110;
    uint64_t v123 = v110;
    uint64_t v124 = v27;
    swift_getOpaqueTypeConformance2();
    uint64_t v73 = v107;
    sub_1B98C(v77, v106, v33);
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
    v78(v77, v33);
    v78((uint64_t)v75, v33);
    uint64_t v74 = v76;
  }
  uint64_t v121 = v65;
  uint64_t v122 = v117;
  uint64_t v123 = v66;
  uint64_t v124 = v27;
  uint64_t v119 = swift_getOpaqueTypeConformance2();
  uint64_t v120 = v74;
  uint64_t v79 = v109;
  uint64_t v80 = swift_getWitnessTable();
  sub_CCCC(v73, v79, v80);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v73, v79);
}

uint64_t sub_185A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a1;
  *(void *)&long long v26 = a2;
  uint64_t v27 = a5;
  uint64_t v23 = a4;
  uint64_t v8 = type metadata accessor for CacheGeometryViewModifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v22 - v11;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24((char *)&v22 - v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  unsigned int v15 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v15(v14 + v13, v12, v8);
  v24(v12, v25, v8);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v23;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v17;
  v15(v16 + v13, v12, v8);
  *(void *)(v16 + ((v13 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  type metadata accessor for CacheGeometryViewModifier.KeyFramePair();
  swift_retain();
  swift_getWitnessTable();
  sub_26BDC0();
  swift_release();
  swift_release();
  uint64_t v30 = v33;
  long long v26 = v34;
  long long v31 = v34;
  uint64_t v32 = v35;
  sub_26B510();
  uint64_t v18 = sub_26ABD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = &protocol witness table for EmptyView;
  uint64_t v29 = WitnessTable;
  uint64_t v20 = swift_getWitnessTable();
  sub_CCCC(&v30, v18, v20);
  swift_release();
  swift_release();
  uint64_t v33 = v36;
  long long v26 = v37;
  long long v34 = v37;
  uint64_t v35 = v38;
  sub_CCCC(&v33, v18, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_188E8@<X0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  sub_1600C(a1 + 128, (uint64_t)v11);
  type metadata accessor for CacheGeometryViewModifier();
  double v3 = sub_18998();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t result = sub_19CC4((uint64_t)v11, (uint64_t)a2, &qword_2EA528);
  a2[5] = v3;
  *((void *)a2 + 6) = v5;
  *((void *)a2 + 7) = v7;
  *((void *)a2 + 8) = v9;
  return result;
}

double sub_18998()
{
  uint64_t v1 = sub_26B3C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_408D4((uint64_t)&v22);
  if (v23)
  {
    sub_AD44(&v22, (uint64_t)v24);
    uint64_t v5 = *(void *)(v0 + 64);
    char v6 = *(unsigned char *)(v0 + 72);
    sub_10E0C(v5, v6);
    char v7 = sub_40900(v5, v6);
    sub_C374(v5, v6);
    if (v7)
    {
      uint64_t v8 = v25;
      uint64_t v9 = v26;
      sub_4ADC(v24, v25);
      sub_26B4E0();
      sub_26A960();
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      double v18 = (*(double (**)(uint64_t, uint64_t, double, double, double, double))(v9 + 8))(v8, v9, v11, v13, v15, v17);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v24);
      return v18;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v24);
  }
  else
  {
    sub_B6DC((uint64_t)&v22, &qword_2EA6C8);
  }
  if (qword_2E9B28 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_26AAD0();
  sub_6B14(v19, (uint64_t)qword_2EA508);
  sub_26A950();
  return v20;
}

uint64_t sub_18BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  double v13 = (char *)&v21 - v12;
  sub_1600C(a1, (uint64_t)&v22);
  if (!*((void *)&v23 + 1)) {
    return sub_B6DC((uint64_t)&v22, &qword_2EA528);
  }
  v25[0] = v22;
  v25[1] = v23;
  uint64_t v26 = v24;
  long long v21 = *(_OWORD *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a2 + 64);
  char v17 = *(unsigned char *)(a2 + 72);
  sub_10E0C(v16, v17);
  char v18 = sub_40900(v16, v17);
  sub_C374(v16, v17);
  type metadata accessor for CacheGeometryViewModifier();
  long long v22 = v21;
  *(void *)&long long v23 = v14;
  *((void *)&v23 + 1) = v15;
  LOBYTE(v24) = v18 & 1;
  (*(void (**)(long long *, uint64_t, uint64_t))(a5 + 32))(&v22, a4, a5);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_19780((uint64_t)v13, (uint64_t)v25, a3, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  return sub_ACF0((uint64_t)v25);
}

uint64_t sub_18DEC(uint64_t a1)
{
  uint64_t v2 = sub_1600C(a1 + 128, (uint64_t)&v13);
  if (!*((void *)&v14 + 1)) {
    return sub_B6DC((uint64_t)&v13, &qword_2EA528);
  }
  v17[0] = v13;
  v17[1] = v14;
  uint64_t v18 = v15;
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1A2E0(v4, (uint64_t)&v13);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = *((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    uint64_t v7 = v15;
    sub_4ADC(&v13, *((uint64_t *)&v14 + 1));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v13);
  }
  else
  {
    sub_B6DC((uint64_t)&v13, &qword_2E9FC8);
  }
  char v9 = *(unsigned char *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 120);
  long long v11 = *(_OWORD *)(a1 + 96);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = v11;
  LOBYTE(v15) = v9;
  uint64_t v16 = v10;
  sub_4A98(&qword_2EA6C0);
  uint64_t v12 = sub_26C360();
  __chkstk_darwin(v12);
  os_unfair_lock_lock(v5);
  sub_19858();
  os_unfair_lock_unlock(v5);
  return sub_ACF0((uint64_t)v17);
}

uint64_t sub_18FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v11 = (char *)&v24 - v10;
  sub_1600C(a1 + 128, (uint64_t)&v24);
  if (!*((void *)&v25 + 1)) {
    return sub_B6DC((uint64_t)&v24, &qword_2EA528);
  }
  v33[0] = v24;
  v33[1] = v25;
  uint64_t v34 = v26;
  char v12 = *(unsigned char *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 120);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v24 = *(_OWORD *)(a1 + 80);
  long long v25 = v14;
  LOBYTE(v26) = v12;
  uint64_t v27 = v13;
  sub_4A98(&qword_2EA6C0);
  sub_26C350();
  if ((v32 & 1) == 0)
  {
    uint64_t v15 = v28;
    uint64_t v16 = v29;
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    uint64_t v19 = *(void *)(a1 + 64);
    char v20 = *(unsigned char *)(a1 + 72);
    sub_10E0C(v19, v20);
    char v21 = sub_40900(v19, v20);
    sub_C374(v19, v20);
    type metadata accessor for CacheGeometryViewModifier();
    *(void *)&long long v24 = v15;
    *((void *)&v24 + 1) = v16;
    *(void *)&long long v25 = v17;
    *((void *)&v25 + 1) = v18;
    LOBYTE(v26) = v21 & 1;
    (*(void (**)(long long *, uint64_t, uint64_t))(a4 + 32))(&v24, a3, a4);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_19780((uint64_t)v11, (uint64_t)v33, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  }
  return sub_ACF0((uint64_t)v33);
}

uint64_t sub_19218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_1600C(a3 + 128, (uint64_t)&v35);
  if (!*((void *)&v36 + 1)) {
    return sub_B6DC((uint64_t)&v35, &qword_2EA528);
  }
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  v38[0] = v35;
  v38[1] = v36;
  uint64_t v39 = v37;
  __chkstk_darwin(v15);
  *(&v33 - 2) = (uint64_t)v38;
  uint64_t v17 = (uint64_t *)&v16[4];
  uint64_t v18 = v16 + 6;
  os_unfair_lock_lock(v16 + 6);
  sub_1A2E0(v17, (uint64_t)&v35);
  os_unfair_lock_unlock(v18);
  uint64_t v19 = *((void *)&v36 + 1);
  if (*((void *)&v36 + 1))
  {
    uint64_t v20 = v37;
    sub_4ADC(&v35, *((uint64_t *)&v36 + 1));
    double v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v35);
    uint64_t v28 = *(void *)(a3 + 64);
    char v29 = *(unsigned char *)(a3 + 72);
    sub_10E0C(v28, v29);
    char v30 = sub_40900(v28, v29);
    sub_C374(v28, v29);
    *(double *)&long long v35 = v21;
    *((void *)&v35 + 1) = v23;
    *(void *)&long long v36 = v25;
    *((void *)&v36 + 1) = v27;
    LOBYTE(v37) = v30 & 1;
    (*(void (**)(long long *, uint64_t, uint64_t))(a6 + 32))(&v35, a5, a6);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_19780((uint64_t)v14, (uint64_t)v38, v34, AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  }
  else
  {
    sub_B6DC((uint64_t)&v35, &qword_2E9FC8);
  }
  return sub_ACF0((uint64_t)v38);
}

uint64_t type metadata accessor for CacheGeometryViewModifier.KeyFramePair()
{
  return sub_129B4();
}

uint64_t sub_194E8()
{
  uint64_t v0 = sub_26AAD0();
  sub_6E18(v0, qword_2EA508);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2EA508);
  sub_26DA50();
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v1, enum case for CoordinateSpace.named(_:), v0);
}

uint64_t sub_195AC@<X0>(uint64_t a1@<X8>)
{
  return sub_185A4(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_195BC()
{
  return sub_195F0((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_18DEC);
}

uint64_t sub_195D8()
{
  return sub_195F0((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_18FE0);
}

uint64_t sub_195F0(uint64_t (*a1)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for CacheGeometryViewModifier() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v5, v6, v2, v3);
}

uint64_t sub_196B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for CacheGeometryViewModifier() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_19218(a1, a2, v2 + v8, v9, v5, v6);
}

uint64_t sub_19780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[3] = a4;
  v13[4] = a5;
  unint64_t v8 = sub_CA1C(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v8, a1, a4);
  uint64_t v9 = *(os_unfair_lock_s **)(a3 + 16);
  uint64_t v10 = (uint64_t)&v9[4];
  long long v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_1983C(v10);
  os_unfair_lock_unlock(v11);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
}

uint64_t sub_1983C(uint64_t a1)
{
  return sub_159D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19858()
{
  sub_B3D8(*(void *)(v0 + 16), (uint64_t)v4);
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  return sub_89C4((uint64_t)v2, (uint64_t)v4);
}

uint64_t sub_198B8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for CacheGeometryViewModifier();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 40))
  {
    if (*(void *)(v4 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v3);
    }
  }
  else
  {
    swift_release();
  }
  j__swift_release();
  sub_C374(*(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
  swift_release();
  if (*(void *)(v4 + 152)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v4 + 128);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v2 + 52), v1);

  return swift_deallocObject();
}

uint64_t sub_19A00@<X0>(double *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CacheGeometryViewModifier() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_188E8(v4, a1);
}

uint64_t sub_19AA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for CacheGeometryViewModifier();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 40))
  {
    if (*(void *)(v4 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v3);
    }
  }
  else
  {
    swift_release();
  }
  j__swift_release();
  sub_C374(*(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
  swift_release();
  if (*(void *)(v4 + 152)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v4 + 128);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v2 + 52), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19BFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for CacheGeometryViewModifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_18BE0(a1, v1 + v6, v7, v3, v4);
}

uint64_t sub_19CC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_4A98(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_19D28()
{
  unint64_t result = qword_2EA6D8[0];
  if (!qword_2EA6D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2EA6D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for GeometryCacheKey()
{
  return &type metadata for GeometryCacheKey;
}

uint64_t destroy for _CodeAnyActionModel_OrNil(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  return a1;
}

uint64_t sub_19D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19E28(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      sub_16D58((uint64_t *)a1, (uint64_t *)a2);
    }
    else
    {
      sub_ACF0(a1);
      uint64_t v5 = *((void *)a2 + 4);
      long long v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v7 = *a2;
    long long v8 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  return a1;
}

__n128 initializeWithTake for ListItemMetadataRatingView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19F20(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    if (*(void *)(a2 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
    else {
      sub_ACF0(a1);
    }
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19F8C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_19FE8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_1A04C()
{
  return swift_getWitnessTable();
}

double sub_1A2E0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_159BC(a1, a2);
}

Swift::Int sub_1A2F8()
{
  return sub_26DF20();
}

uint64_t sub_1A3E4()
{
  return sub_26D2F0();
}

Swift::Int sub_1A4B8()
{
  return sub_26DF20();
}

uint64_t sub_1A5A0()
{
  if ((sub_26B970() & 1) == 0) {
    return 0;
  }

  return sub_26AB30();
}

int *sub_1A608()
{
  __n128 result = (int *)sub_903C((uint64_t)&_swiftEmptyArrayStorage);
  off_2EA768 = result;
  return result;
}

id sub_1A630()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26B980();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Font.TextStyle.largeTitle(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleTitle0;
  }
  else if (v6 == enum case for Font.TextStyle.title(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleTitle1;
  }
  else if (v6 == enum case for Font.TextStyle.title2(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleTitle2;
  }
  else if (v6 == enum case for Font.TextStyle.title3(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleTitle3;
  }
  else if (v6 == enum case for Font.TextStyle.headline(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleHeadline;
  }
  else if (v6 == enum case for Font.TextStyle.subheadline(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleSubhead;
  }
  else if (v6 == enum case for Font.TextStyle.body(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleBody;
  }
  else if (v6 == enum case for Font.TextStyle.callout(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleCallout;
  }
  else if (v6 == enum case for Font.TextStyle.footnote(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleFootnote;
  }
  else if (v6 == enum case for Font.TextStyle.caption(_:))
  {
    long long v7 = (void **)&kCTUIFontTextStyleCaption1;
  }
  else
  {
    if (v6 != enum case for Font.TextStyle.caption2(_:))
    {
      uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v11 = kCTUIFontTextStyleBody;
      v10(v5, v2);
      return v11;
    }
    long long v7 = (void **)&kCTUIFontTextStyleCaption2;
  }
  long long v8 = *v7;

  return v8;
}

id sub_1A8D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26AB40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DynamicTypeSize.xSmall(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryXS;
  }
  else if (v6 == enum case for DynamicTypeSize.small(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryS;
  }
  else if (v6 == enum case for DynamicTypeSize.medium(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryM;
  }
  else if (v6 == enum case for DynamicTypeSize.large(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryL;
  }
  else if (v6 == enum case for DynamicTypeSize.xLarge(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryXL;
  }
  else if (v6 == enum case for DynamicTypeSize.xxLarge(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryXXL;
  }
  else if (v6 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryXXXL;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility1(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryAccessibilityM;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility2(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryAccessibilityL;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility3(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryAccessibilityXL;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility4(_:))
  {
    long long v7 = (void **)&kCTFontContentSizeCategoryAccessibilityXXL;
  }
  else
  {
    if (v6 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v11 = kCTFontContentSizeCategoryL;
      v10(v5, v2);
      return v11;
    }
    long long v7 = (void **)&kCTFontContentSizeCategoryAccessibilityXXXL;
  }
  long long v8 = *v7;

  return v8;
}

double sub_1AB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA770);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26AB40();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s8RatioKeyVMa();
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = sub_26B980();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(&v17[*(int *)(v12 + 28)], a2, v7);
  if (qword_2E9B30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v19 = off_2EA768;
  if (*(void *)((char *)&dword_10 + (void)off_2EA768) && (unint64_t v20 = sub_9ECC((uint64_t)v17), (v21 & 1) != 0))
  {
    double v22 = *(double *)(*(void *)&stru_20.segname[(void)v19 + 16] + 8 * v20);
  }
  else
  {
    char v32 = v15;
    swift_endAccess();
    double v34 = 0.0;
    double v35 = 0.0;
    id v23 = sub_1A630();
    id v24 = sub_1A8D0();
    CTFontDescriptorGetTextStyleSize();

    id v25 = sub_1A630();
    if (![self _defaultContentSizeCategory]) {
      uint64_t v26 = UIContentSizeCategoryLarge;
    }
    sub_26AB50();
    int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    uint64_t v28 = (uint64_t)v32;
    if (v27 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DynamicTypeSize.large(_:), v7);
      sub_1B028((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    }
    id v29 = sub_1A8D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    CTFontDescriptorGetTextStyleSize();

    double v22 = v35 / v34;
    sub_B50C((uint64_t)v17, v28);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = off_2EA768;
    off_2EA768 = (int *)0x8000000000000000;
    sub_AEAC(v28, isUniquelyReferenced_nonNull_native, v22);
    off_2EA768 = v33;
    swift_bridgeObjectRelease();
    sub_B570(v28);
  }
  swift_endAccess();
  sub_B570((uint64_t)v17);
  return v22;
}

uint64_t _s8RatioKeyVMa()
{
  uint64_t result = qword_2EA7D0;
  if (!qword_2EA7D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B028(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1B088(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26B980();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1B190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1B238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1B2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1B3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1B460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1B518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B52C);
}

uint64_t sub_1B52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_26AB40();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1B624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B638);
}

uint64_t sub_1B638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_26B980();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_26AB40();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1B73C()
{
  uint64_t result = sub_26B980();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26AB40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B804()
{
  return sub_1B84C(&qword_2EA808, (void (*)(uint64_t))_s8RatioKeyVMa);
}

uint64_t sub_1B84C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26B2E0();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_26B2F0();
}

uint64_t sub_1B98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_26B2E0();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_26B2F0();
}

uint64_t sub_1BA84(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 36);
  id v3 = *(id *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_1D00C(*(id *)v2, v4);
  uint64_t v5 = sub_40B04(v3, v4);
  sub_1D1EC(v3, v4);
  return v5;
}

uint64_t BooksActionButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_269BA0();
  __chkstk_darwin(v10 - 8);
  sub_269B80();
  sub_269AB0();
  uint64_t v11 = (int *)type metadata accessor for BooksActionButton();
  uint64_t v12 = a5 + v11[9];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  uint64_t v13 = (uint64_t *)(a5 + v11[10]);
  *uint64_t v13 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a5 + v11[11];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *(unsigned char *)(v14 + 40) = 0;
  sub_19CC4(a1, a5 + v11[12], qword_2EA3E0);
  uint64_t result = sub_19CC4(a2, a5 + v11[13], &qword_2EA818);
  uint64_t v16 = (void *)(a5 + v11[14]);
  *uint64_t v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t type metadata accessor for BooksActionButton()
{
  return sub_129B4();
}

uint64_t BooksActionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v56 = sub_269D00();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (uint64_t)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v72 = (uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v65 = *(void *)(a1 + 16);
  uint64_t v66 = v7;
  uint64_t v8 = sub_26A130();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v67 = (char *)v53 - v12;
  uint64_t v13 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_269CE0();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26B300();
  uint64_t v70 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v69 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v68 = (char *)v53 - v20;
  uint64_t v21 = sub_7B0C(&qword_2EA828);
  uint64_t v22 = sub_26B300();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v25 = (char *)v53 - v24;
  uint64_t v26 = (void *)sub_1BA84(a1);
  if (v26)
  {
    id v64 = v26;
    uint64_t v60 = v21;
    uint64_t v61 = v25;
    uint64_t v62 = v23;
    uint64_t v27 = v2 + *(int *)(a1 + 52);
    sub_B678(v27, (uint64_t)&v77, &qword_2EA818);
    uint64_t v28 = v2;
    uint64_t v63 = v22;
    if (*((void *)&v78 + 1))
    {
      sub_4A98(&qword_2EA840);
      sub_4A98(&qword_2EA848);
      if (swift_dynamicCast())
      {
        if (*((void *)&v81 + 1))
        {
          sub_AD44(&v80, (uint64_t)v83);
          uint64_t v29 = v2;
          uint64_t v30 = v84;
          uint64_t v31 = v85;
          sub_4ADC(v83, v84);
          char v32 = (void (*)(uint64_t, void *))v31[2];
          uint64_t v33 = v31;
          uint64_t v28 = v2;
          v32(v30, v33);
          uint64_t v34 = v58;
          uint64_t v35 = v59;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v15, 1, v59) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v57, v15, v35);
            sub_B678(v29 + *(int *)(a1 + 48), v72, qword_2EA3E0);
            v53[1] = v85;
            v53[2] = sub_4ADC(v83, v84);
            uint64_t v79 = 0;
            long long v78 = 0u;
            long long v77 = 0u;
            v53[0] = v64;
            uint64_t v48 = v54;
            sub_40D18(v54);
            sub_40D50((uint64_t)v74);
            sub_269A90();
            unint64_t v49 = v57;
            sub_26C900();

            swift_bridgeObjectRelease();
            sub_B6DC((uint64_t)v74, &qword_2EA850);
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v48, v56);
            sub_B6DC((uint64_t)&v77, &qword_2EA528);
            swift_retain();
            sub_26A120();
            uint64_t WitnessTable = swift_getWitnessTable();
            uint64_t v51 = v67;
            sub_CCCC(v11, v8, WitnessTable);
            int v52 = *(void (**)(char *, uint64_t))(v71 + 8);
            v52(v11, v8);
            sub_CCCC(v51, v8, WitnessTable);
            uint64_t v40 = v68;
            sub_1B894((uint64_t)v11, v8);
            v52(v11, v8);
            v52(v51, v8);
            (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
            _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v83);
            goto LABEL_12;
          }
          sub_B6DC((uint64_t)v15, &qword_2EA820);
          _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v83);
LABEL_11:
          sub_B678(v28 + *(int *)(a1 + 48), v72, qword_2EA3E0);
          sub_B678(v27, (uint64_t)v83, &qword_2EA818);
          swift_retain();
          sub_26A120();
          uint64_t v37 = swift_getWitnessTable();
          uint64_t v38 = v67;
          sub_CCCC(v11, v8, v37);
          uint64_t v39 = *(void (**)(char *, uint64_t))(v71 + 8);
          v39(v11, v8);
          sub_CCCC(v38, v8, v37);
          uint64_t v40 = v68;
          sub_1B98C((uint64_t)v11, v8, v8);
          v39(v11, v8);
          v39(v38, v8);
LABEL_12:
          uint64_t v75 = swift_getWitnessTable();
          uint64_t v76 = v75;
          uint64_t v41 = swift_getWitnessTable();
          uint64_t v42 = (uint64_t)v69;
          sub_CCCC(v40, v17, v41);
          sub_1CA80();
          id v25 = v61;
          sub_1B894(v42, v17);

          uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
          v43(v42, v17);
          v43((uint64_t)v40, v17);
          uint64_t v22 = v63;
          uint64_t v23 = v62;
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v82 = 0;
        long long v80 = 0u;
        long long v81 = 0u;
      }
    }
    else
    {
      sub_B6DC((uint64_t)&v77, &qword_2EA818);
      long long v80 = 0u;
      long long v81 = 0u;
      uint64_t v82 = 0;
    }
    sub_B6DC((uint64_t)&v80, &qword_2EA838);
    goto LABEL_11;
  }
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0xD00000000000002ALL;
  *(void *)(v36 + 24) = 0x8000000000287DA0;
  v83[0] = sub_1CA78;
  v83[1] = v36;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v91 = v90;
  swift_getWitnessTable();
  sub_1CA80();
  sub_1B98C((uint64_t)v83, v17, v21);
  swift_release();
LABEL_13:
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = v88;
  uint64_t v44 = swift_getWitnessTable();
  unint64_t v45 = sub_1CA80();
  uint64_t v86 = v44;
  unint64_t v87 = v45;
  uint64_t v46 = swift_getWitnessTable();
  sub_CCCC(v25, v22, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
}

uint64_t sub_1C7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26AE70();
  *a1 = result;
  return result;
}

uint64_t sub_1C7D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26AE70();
  *a1 = result;
  return result;
}

uint64_t sub_1C804(id *a1)
{
  id v1 = *a1;
  return sub_26AE80();
}

uint64_t sub_1C834(id *a1)
{
  id v1 = *a1;
  return sub_26AE80();
}

uint64_t sub_1C864()
{
  return sub_26AE30();
}

uint64_t sub_1C888()
{
  return sub_26AE30();
}

uint64_t sub_1C8AC(uint64_t a1)
{
  uint64_t v2 = sub_269D00();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26AE40();
}

uint64_t sub_1C978()
{
  return sub_26AE50();
}

uint64_t sub_1C99C()
{
  return sub_26AE50();
}

uint64_t sub_1C9C0(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v2, &qword_2EA850);
  return sub_26AE60();
}

uint64_t sub_1CA00(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v2, &qword_2EA850);
  return sub_26AE60();
}

uint64_t sub_1CA40()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1CA78@<X0>(uint64_t a1@<X8>)
{
  return sub_8D428(a1);
}

unint64_t sub_1CA80()
{
  unint64_t result = qword_2EA830;
  if (!qword_2EA830)
  {
    sub_7B0C(&qword_2EA828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA830);
  }
  return result;
}

uint64_t sub_1CADC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1CB20()
{
  sub_269AA0();
  if (v0 <= 0x3F)
  {
    sub_1E15C(319, &qword_2EA8E8, (uint64_t (*)(uint64_t))&type metadata accessor for DataStack, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1E15C(319, &qword_2EA8F0, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonRole, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_1CCAC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_269AA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[9];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    id v11 = *(id *)v10;
    char v12 = v10[8];
    sub_1D00C(*(id *)v10, v12);
    *(void *)uint64_t v9 = v11;
    v9[8] = v12;
    uint64_t v13 = a3[10];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_269D00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (*((unsigned char *)a2 + v18 + 40))
    {
      uint64_t v21 = *((void *)v20 + 3);
      if (v21)
      {
        uint64_t v22 = *((void *)v20 + 4);
        *((void *)v19 + 3) = v21;
        *((void *)v19 + 4) = v22;
        (**(void (***)(char *))(v21 - 8))(v19);
      }
      else
      {
        long long v23 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v23;
        *((void *)v19 + 4) = *((void *)v20 + 4);
      }
      v19[40] = 1;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      v19[40] = 0;
      swift_retain();
    }
    uint64_t v24 = a3[12];
    id v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_26A630();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_4A98(qword_2EA3E0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = a3[13];
    uint64_t v31 = (char *)a1 + v30;
    char v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)((char *)a2 + v30 + 24);
    if (v33)
    {
      uint64_t v34 = *((void *)v32 + 4);
      *((void *)v31 + 3) = v33;
      *((void *)v31 + 4) = v34;
      (**(void (***)(void))(v33 - 8))();
    }
    else
    {
      long long v35 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v35;
      *((void *)v31 + 4) = *((void *)v32 + 4);
    }
    uint64_t v36 = a3[14];
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
  }
  swift_retain();
  return a1;
}

id sub_1D00C(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_1D018(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1D1EC(*(id *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v5 = a1 + a2[10];
  sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_269D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[11];
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = sub_26A630();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = a1 + a2[13];
  if (*(void *)(v11 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v11);
  }

  return swift_release();
}

void sub_1D1EC(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_1D1F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  id v10 = *(id *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_1D00C(*(id *)v9, v11);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11;
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_269D00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (*(unsigned char *)(a2 + v16 + 40))
  {
    uint64_t v19 = *(void *)(v18 + 24);
    if (v19)
    {
      uint64_t v20 = *(void *)(v18 + 32);
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = v20;
      (**(void (***)(uint64_t))(v19 - 8))(v17);
    }
    else
    {
      long long v21 = *(_OWORD *)(v18 + 16);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v21;
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
    }
    *(unsigned char *)(v17 + 40) = 1;
  }
  else
  {
    *(void *)uint64_t v17 = *(void *)v18;
    *(unsigned char *)(v17 + 40) = 0;
    swift_retain();
  }
  uint64_t v22 = a3[12];
  long long v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_26A630();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_4A98(qword_2EA3E0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(a2 + v28 + 24);
  if (v31)
  {
    uint64_t v32 = *(void *)(v30 + 32);
    *(void *)(v29 + 24) = v31;
    *(void *)(v29 + 32) = v32;
    (**(void (***)(void))(v31 - 8))();
  }
  else
  {
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(void *)(v29 + 32) = *(void *)(v30 + 32);
  }
  uint64_t v34 = a3[14];
  long long v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  *long long v35 = *v36;
  v35[1] = v37;
  swift_retain();
  return a1;
}

uint64_t sub_1D50C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  id v10 = *(id *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_1D00C(*(id *)v9, v11);
  uint64_t v12 = *(void **)v8;
  char v13 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11;
  sub_1D1EC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[10];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_B6DC(a1 + v14, &qword_2EA810);
    sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_269D00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[11];
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (long long *)(a2 + v18);
    sub_B6DC(a1 + v18, &qword_2EA858);
    if (*((unsigned char *)v20 + 40))
    {
      uint64_t v21 = *((void *)v20 + 3);
      if (v21)
      {
        *(void *)(v19 + 24) = v21;
        *(void *)(v19 + 32) = *((void *)v20 + 4);
        (**(void (***)(uint64_t, long long *))(v21 - 8))(v19, v20);
      }
      else
      {
        long long v22 = *v20;
        long long v23 = v20[1];
        *(void *)(v19 + 32) = *((void *)v20 + 4);
        *(_OWORD *)uint64_t v19 = v22;
        *(_OWORD *)(v19 + 16) = v23;
      }
      *(unsigned char *)(v19 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = sub_26A630();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_16:
    uint64_t v32 = sub_4A98(qword_2EA3E0);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_17:
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  long long v35 = (long long *)(a2 + v33);
  uint64_t v36 = *(void *)(a2 + v33 + 24);
  if (!*(void *)(a1 + v33 + 24))
  {
    if (v36)
    {
      *(void *)(v34 + 24) = v36;
      *(void *)(v34 + 32) = *((void *)v35 + 4);
      (**(void (***)(uint64_t, long long *))(v36 - 8))(v34, v35);
      goto LABEL_24;
    }
LABEL_23:
    long long v37 = *v35;
    long long v38 = v35[1];
    *(void *)(v34 + 32) = *((void *)v35 + 4);
    *(_OWORD *)uint64_t v34 = v37;
    *(_OWORD *)(v34 + 16) = v38;
    goto LABEL_24;
  }
  if (!v36)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v34);
    goto LABEL_23;
  }
  sub_16D58((uint64_t *)v34, (uint64_t *)v35);
LABEL_24:
  uint64_t v39 = a3[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D8FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  char v11 = (void *)(a1 + v8);
  uint64_t v12 = (const void *)(a2 + v8);
  uint64_t v13 = sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_269D00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(_OWORD *)((char *)v17 + 25) = *(_OWORD *)((char *)v18 + 25);
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (const void *)(a2 + v16);
  uint64_t v22 = sub_26A630();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_4A98(qword_2EA3E0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[13];
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  return a1;
}

uint64_t sub_1DB48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  LOBYTE(v9) = *((unsigned char *)v9 + 8);
  char v11 = *(void **)v8;
  char v12 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = (_BYTE)v9;
  sub_1D1EC(v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = a3[10];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_B6DC(a1 + v13, &qword_2EA810);
    uint64_t v16 = sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_269D00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[11];
    long long v19 = (_OWORD *)(a2 + v18);
    uint64_t v20 = (_OWORD *)(a1 + v18);
    sub_B6DC(a1 + v18, &qword_2EA858);
    long long v21 = v19[1];
    *uint64_t v20 = *v19;
    v20[1] = v21;
    *(_OWORD *)((char *)v20 + 25) = *(_OWORD *)((char *)v19 + 25);
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_26A630();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_11:
    uint64_t v30 = sub_4A98(qword_2EA3E0);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_12:
  uint64_t v31 = a3[13];
  uint64_t v32 = a1 + v31;
  if (*(void *)(a1 + v31 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v31);
  }
  long long v33 = *(_OWORD *)(a2 + v31 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)(a2 + v31);
  *(_OWORD *)(v32 + 16) = v33;
  *(void *)(v32 + 32) = *(void *)(a2 + v31 + 32);
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  return a1;
}

uint64_t sub_1DE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DE7C);
}

uint64_t sub_1DE7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_269AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(qword_2EA860);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[10];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4A98(qword_2EA3E0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[14]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1DFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DFF8);
}

uint64_t sub_1DFF8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_269AA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_4A98(qword_2EA860);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[10];
    }
    else
    {
      uint64_t result = sub_4A98(qword_2EA3E0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[14]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[12];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1E15C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E1C0()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for TranslationEffect()
{
  return &type metadata for TranslationEffect;
}

void *sub_1E2A0()
{
  return &protocol witness table for Never;
}

CGFloat sub_1E2AC@<D0>(uint64_t a1@<X8>)
{
  CGAffineTransformMakeTranslation(&v6, *v1, v1[1]);
  CGFloat result = v6.a;
  long long v4 = *(_OWORD *)&v6.c;
  long long v5 = *(_OWORD *)&v6.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v6.a;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

__n128 sub_1E308@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 sub_1E314(__n128 *a1)
{
  __n128 result = *a1;
  *unint64_t v1 = *a1;
  return result;
}

__n128 (*sub_1E320(uint64_t a1))(__n128 *a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *v1;
  return sub_1E34C;
}

__n128 sub_1E34C(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)a1[1].n128_u64[0] = *a1;
  return result;
}

uint64_t sub_1E360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1E5D8();

  return static GeometryEffect._makeView(modifier:inputs:body:)(a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1E5D8();

  return static GeometryEffect._makeViewList(modifier:inputs:body:)(a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1E458()
{
  return sub_26AA20();
}

void sub_1E4B4()
{
}

unint64_t sub_1E4CC()
{
  unint64_t result = qword_2EA8F8;
  if (!qword_2EA8F8)
  {
    sub_7B0C(&qword_2EA900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA8F8);
  }
  return result;
}

unint64_t sub_1E52C()
{
  unint64_t result = qword_2EA908;
  if (!qword_2EA908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA908);
  }
  return result;
}

unint64_t sub_1E584()
{
  unint64_t result = qword_2EA910;
  if (!qword_2EA910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA910);
  }
  return result;
}

unint64_t sub_1E5D8()
{
  unint64_t result = qword_2EA918;
  if (!qword_2EA918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EA918);
  }
  return result;
}

uint64_t PageBackground.resolvedColorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v33 = sub_26A6E0();
  uint64_t v3 = *(void *)(v33 - 8);
  uint64_t v4 = __chkstk_darwin(v33);
  CGAffineTransform v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_26B0A0();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EA940);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = type metadata accessor for PageBackground(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26E18(v2, (uint64_t)v20, type metadata accessor for PageBackground);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v34, enum case for ColorScheme.dark(_:), v33);
      return sub_2D7AC((uint64_t)v20, type metadata accessor for PageBackground);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_4A98(&qword_2EA948);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v34, &v20[*(int *)(v25 + 48)], v33);
    }
  }
  else
  {
    uint64_t v23 = sub_4A98(&qword_2EA950);
    sub_19CC4((uint64_t)&v20[*(int *)(v23 + 48)], (uint64_t)v17, &qword_2EA940);
    sub_26B090();
    sub_B678((uint64_t)v17, (uint64_t)v15, &qword_2EA940);
    uint64_t v24 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v33) == 1)
    {
      sub_B6DC((uint64_t)v15, &qword_2EA940);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v15, v24);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v24);
      sub_26ADE0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v24);
    }
    sub_26C1E0();
    uint64_t v26 = (void *)sub_26C1F0();
    uint64_t v27 = v11;
    id v28 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v26];

    double v35 = 0.0;
    [v28 getWhite:&v35 alpha:0];

    swift_release();
    double v29 = v35;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v9);
    sub_B6DC((uint64_t)v17, &qword_2EA940);
    if (v29 >= 0.7) {
      uint64_t v30 = (unsigned int *)&enum case for ColorScheme.light(_:);
    }
    else {
      uint64_t v30 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v3 + 104))(v34, *v30, v24);
  }
}

uint64_t type metadata accessor for PageBackground(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EA9F8);
}

uint64_t PagedFrame.id.getter()
{
  return sub_26D480();
}

double SizeConstants.Spacing.xxxl.getter()
{
  return 32.0;
}

uint64_t sub_1EB64()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1EBB8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_1EC14()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t sub_1EC68()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t sub_1ECBC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_1ED18()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_4ADC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_1ED6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_4ADC(v1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t sub_1EDC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_4ADC(v1, v1[3]);
  __chkstk_darwin(v3);
  (*(void (**)(char *))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_26C470();
  *a1 = result;
  return result;
}

uint64_t sub_1EEA4()
{
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  uint64_t result = swift_release();
  if (*(double *)(v0 + 32) <= 0.0) {
    return result;
  }
  swift_getKeyPath();
  sub_269A10();
  swift_release();
  double v2 = *(double *)(v0 + 16);
  swift_getKeyPath();
  sub_269A10();
  swift_release();
  double v3 = v2 + *(double *)(v0 + 40) * 0.5;
  swift_getKeyPath();
  sub_269A10();
  uint64_t result = swift_release();
  double v4 = v3 / *(double *)(v0 + 32);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(v0 + 48);
  if (v5 < 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (((uint64_t)v4 & 0x8000000000000000) == 0 && v5 > (uint64_t)v4)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_269A00();
    return swift_release();
  }
  return result;
}

double sub_1F0D8()
{
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  return *(double *)(v0 + 16);
}

double sub_1F178@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  double result = *(double *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1F220()
{
  return swift_release();
}

uint64_t PagedScrollViewModel.currentPageIndex.getter()
{
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t sub_1F3AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return result;
}

uint64_t sub_1F46C()
{
  return swift_release();
}

uint64_t type metadata accessor for PagedScrollViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2EAA60);
}

uint64_t PagedScrollViewModel.currentPageIndex.setter()
{
  return swift_release();
}

uint64_t sub_1F628()
{
  return sub_2E4D4();
}

void (*PagedScrollViewModel.currentPageIndex.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  v3[4] = OBJC_IVAR____TtC7BooksUI20PagedScrollViewModel___observationRegistrar;
  void *v3 = v1;
  v3[5] = sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_269A30();
  swift_release();
  swift_beginAccess();
  return sub_1F768;
}

void sub_1F768(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  *uint64_t v1 = v1[3];
  swift_getKeyPath();
  sub_269A20();
  swift_release();

  free(v1);
}

double sub_1F7E4()
{
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  return *(double *)(v0 + 32);
}

double sub_1F884@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  double result = *(double *)(v3 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1F92C()
{
  return swift_release();
}

double sub_1FA04()
{
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  return *(double *)(v0 + 40);
}

double sub_1FAA4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_2D0D0(&qword_2EA960, (void (*)(uint64_t))type metadata accessor for PagedScrollViewModel);
  sub_269A10();
  swift_release();
  double result = *(double *)(v3 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_1FB4C()
{
  return swift_release();
}

uint64_t PagedScrollViewModel.__allocating_init(totalPages:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  sub_269A40();
  *(void *)(v2 + 48) = a1;
  return v2;
}

uint64_t PagedScrollViewModel.init(totalPages:)(uint64_t a1)
{
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  sub_269A40();
  *(void *)(v1 + 48) = a1;
  return v1;
}

uint64_t PagedScrollViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7BooksUI20PagedScrollViewModel___observationRegistrar;
  uint64_t v2 = sub_269A50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PagedScrollViewModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7BooksUI20PagedScrollViewModel___observationRegistrar;
  uint64_t v2 = sub_269A50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1FDBC()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  double v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v20[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v20[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  qword_2EA920 = v16;
  *(void *)algn_2EA928 = v18;
  return result;
}

uint64_t sub_20038()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  double v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v20[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v20[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  qword_2EA930 = v16;
  *(void *)algn_2EA938 = v18;
  return result;
}

double sub_202B8@<D0>(double *a1@<X8>)
{
  uint64_t v2 = sub_26B330();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B4D0();
  sub_26A960();
  double v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double result = -v7;
  *a1 = -v7;
  return result;
}

uint64_t sub_203B0()
{
  return swift_release();
}

uint64_t sub_20598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1);
  sub_26E18(v7, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PagedScrollViewPositionObserverModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_2C910((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for PagedScrollViewPositionObserverModifier);
  uint64_t v10 = sub_4A98(&qword_2EAD40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3, a1, v10);
  uint64_t result = sub_4A98(&qword_2EAD48);
  uint64_t v12 = (double (**)@<D0>(double *@<X8>))(a3 + *(int *)(result + 36));
  const void *v12 = sub_202B8;
  v12[1] = 0;
  void v12[2] = (double (*)@<D0>(double *@<X8>))sub_2C978;
  _OWORD v12[3] = (double (*)@<D0>(double *@<X8>))v9;
  return result;
}

uint64_t PagedScrollView.init(frames:viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for PagedScrollView(0);
  uint64_t v7 = (uint64_t *)((char *)a3 + v6[5]);
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  unint64_t v8 = (char *)a3 + v6[6];
  *(void *)unint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  uint64_t v9 = (char *)a3 + v6[7];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[40] = 0;
  uint64_t v10 = (uint64_t *)((char *)a3 + v6[8]);
  uint64_t *v10 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (char *)a3 + v6[9];
  *(void *)uint64_t v11 = swift_getKeyPath();
  v11[8] = 0;
  uint64_t v12 = (char *)a3 + v6[10];
  *(void *)uint64_t v12 = swift_getKeyPath();
  v12[8] = 0;
  uint64_t v13 = (char *)a3 + v6[11];
  v33[0] = 0;
  v33[1] = 0;
  sub_4A98(&qword_2EA980);
  sub_26C340();
  uint64_t v14 = *(void *)v36;
  *(_OWORD *)uint64_t v13 = v35;
  *((void *)v13 + 2) = v14;
  int64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v31 = a2;
    long long v37 = &_swiftEmptyArrayStorage;
    sub_26DF8(0, v15, 0);
    uint64_t v30 = a1;
    uint64_t v16 = a1 + 32;
    uint64_t v17 = &_swiftEmptyArrayStorage;
    do
    {
      sub_C224(v16, (uint64_t)v33);
      long long v32 = v34;
      uint64_t v18 = v34;
      uint64_t v19 = sub_4ADC(v33, v34);
      uint64_t v20 = *(void *)(v18 - 8);
      __chkstk_darwin(v19);
      uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v22);
      *(_OWORD *)&v36[8] = v32;
      uint64_t v23 = sub_CA1C((uint64_t *)&v35);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(v23, v22, v18);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_26DF8(0, v17[2] + 1, 1);
        uint64_t v17 = v37;
      }
      unint64_t v25 = v17[2];
      unint64_t v24 = v17[3];
      if (v25 >= v24 >> 1)
      {
        sub_26DF8(v24 > 1, v25 + 1, 1);
        uint64_t v17 = v37;
      }
      _OWORD v17[2] = v25 + 1;
      uint64_t v26 = (char *)&v17[5 * v25];
      long long v27 = v35;
      long long v28 = *(_OWORD *)v36;
      *((void *)v26 + 8) = *(void *)&v36[16];
      *((_OWORD *)v26 + 2) = v27;
      *((_OWORD *)v26 + 3) = v28;
      v16 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a2 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = &_swiftEmptyArrayStorage;
  }
  *(uint64_t *)((char *)a3 + v6[12]) = (uint64_t)v17;
  *(uint64_t *)((char *)a3 + v6[13]) = a2;
  return sub_269830();
}

uint64_t PagedScrollView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PagedScrollView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_26E18(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PagedScrollView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_2C910((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PagedScrollView);
  *a1 = sub_26E84;
  a1[1] = v7;
  return result;
}

uint64_t sub_20BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v96 = a3;
  uint64_t v5 = type metadata accessor for PagedScrollView(0);
  uint64_t v70 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v71 = v6;
  uint64_t v72 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EAE08);
  __chkstk_darwin(v7 - 8);
  uint64_t v94 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_26B5B0();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_26B620();
  uint64_t v81 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v79 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_4A98(&qword_2EAE10);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_4A98(&qword_2EAE18);
  uint64_t v80 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_4A98(&qword_2EAE20);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v97 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_4A98(&qword_2EAE28);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v98 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_4A98(&qword_2EAE30);
  __chkstk_darwin(v69);
  uint64_t v88 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_4A98(&qword_2EAE38);
  __chkstk_darwin(v87);
  uint64_t v93 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_4A98(&qword_2EAE40);
  __chkstk_darwin(v91);
  uint64_t v92 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B740();
  uint64_t v100 = a2;
  uint64_t v101 = a1;
  sub_4A98(&qword_2EAE48);
  sub_2CFC4();
  sub_26A6A0();
  uint64_t v86 = v5;
  uint64_t v19 = *(int *)(v5 + 44);
  uint64_t v95 = a2;
  uint64_t v20 = (long long *)(a2 + v19);
  uint64_t v21 = *(void *)(a2 + v19 + 16);
  long long v104 = *v20;
  *(void *)&long long v105 = v21;
  uint64_t v99 = sub_4A98(&qword_2EAE70);
  sub_26C370();
  sub_26C7E0();
  uint64_t v22 = sub_7C18(&qword_2EAE78, &qword_2EAE10);
  uint64_t v23 = v74;
  uint64_t v24 = v76;
  unint64_t v25 = v73;
  sub_26BD60();
  uint64_t v26 = v75;
  swift_release();
  uint64_t v27 = v78;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v25, v24);
  long long v28 = v79;
  sub_26B610();
  *(void *)&long long v107 = v24;
  *((void *)&v107 + 1) = &type metadata for String;
  *(void *)&long long v108 = v22;
  *((void *)&v108 + 1) = &protocol witness table for String;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_26BEC0();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v23, v26);
  uint64_t v30 = v10;
  sub_26B590();
  LOBYTE(v22) = sub_26B740();
  unsigned __int8 v31 = sub_26B720();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v22) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v31) {
    sub_26B730();
  }
  uint64_t v32 = v95;
  *(void *)&long long v107 = v26;
  *((void *)&v107 + 1) = v27;
  *(void *)&long long v108 = OpaqueTypeConformance2;
  *((void *)&v108 + 1) = &protocol witness table for PagingScrollTargetBehavior;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v97;
  uint64_t v34 = v83;
  sub_26BDD0();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v30, v85);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v33, v34);
  uint64_t v35 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v36 = *(void *)(v32 + *(int *)(v86 + 48));
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v97 = v38;
  uint64_t v39 = v35;
  uint64_t v40 = v32;
  if (!v37)
  {
    swift_bridgeObjectRetain();
LABEL_18:
    uint64_t v50 = (uint64_t)v72;
    uint64_t v51 = v70;
    uint64_t v52 = v69;
    uint64_t v109 = 0;
    long long v107 = 0u;
    long long v108 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v41 = v36 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_2D118(v41, (uint64_t)&v104);
    uint64_t v42 = *((void *)&v105 + 1);
    uint64_t v43 = v106;
    sub_4ADC(&v104, *((uint64_t *)&v105 + 1));
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
    uint64_t v46 = v45;
    uint64_t v47 = *((void *)v20 + 2);
    long long v107 = *v20;
    *(void *)&long long v108 = v47;
    sub_26C350();
    if (!v103)
    {
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    if (v44 == v102 && v103 == v46) {
      break;
    }
    char v49 = sub_26DDB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_20;
    }
LABEL_8:
    sub_2D178((uint64_t)&v104);
    v41 += 40;
    if (!--v37)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  long long v107 = v104;
  long long v108 = v105;
  uint64_t v109 = v106;
  swift_bridgeObjectRelease();
  uint64_t v50 = (uint64_t)v72;
  uint64_t v51 = v70;
  uint64_t v52 = v69;
LABEL_21:
  uint64_t v53 = (uint64_t)v88;
  uint64_t v54 = (uint64_t)&v88[*(int *)(v52 + 36)];
  uint64_t v55 = v94;
  sub_22B28((uint64_t)&v107, v94);
  sub_B6DC((uint64_t)&v107, &qword_2EAE80);
  sub_19CC4(v55, v54, &qword_2EAE08);
  uint64_t v56 = (uint64_t *)(v54 + *(int *)(sub_4A98(&qword_2EAE88) + 36));
  uint64_t v58 = v97;
  uint64_t v57 = v98;
  *uint64_t v56 = v39;
  v56[1] = (uint64_t)v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v53, v57, v90);
  uint64_t v59 = sub_26ABE0();
  char v60 = sub_26B760();
  uint64_t v61 = v93;
  sub_B678(v53, v93, &qword_2EAE30);
  uint64_t v62 = v61 + *(int *)(v87 + 36);
  *(void *)uint64_t v62 = v59;
  *(unsigned char *)(v62 + 8) = v60;
  sub_B6DC(v53, &qword_2EAE30);
  sub_26E18(v40, v50, type metadata accessor for PagedScrollView);
  unint64_t v63 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v64 = swift_allocObject();
  sub_2C910(v50, v64 + v63, type metadata accessor for PagedScrollView);
  uint64_t v65 = v92;
  sub_B678(v61, v92, &qword_2EAE38);
  uint64_t v66 = (uint64_t (**)())(v65 + *(int *)(v91 + 36));
  *uint64_t v66 = sub_2D1A4;
  v66[1] = (uint64_t (*)())v64;
  v66[2] = 0;
  v66[3] = 0;
  sub_B6DC(v61, &qword_2EAE38);
  return sub_19CC4(v65, v96, &qword_2EAE40);
}

uint64_t sub_2179C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v29 = a3;
  uint64_t v5 = sub_26B3D0();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_4A98(&qword_2EAE58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4A98(&qword_2EAF70);
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  sub_26B1C0();
  LODWORD(v32) = 0;
  sub_2D0D0(&qword_2EAF78, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  sub_26E0E0();
  sub_4A98(&qword_2EAF80);
  uint64_t v13 = sub_7B0C(&qword_2EAF88);
  unint64_t v14 = sub_2D814();
  uint64_t v32 = v13;
  unint64_t v33 = v14;
  swift_getOpaqueTypeConformance2();
  sub_26A680();
  sub_7C18(&qword_2EAE60, &qword_2EAE58);
  sub_26BE80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = type metadata accessor for PagedScrollView(0);
  uint64_t v16 = *(void *)(*(void *)(a1 + *(int *)(v15 + 48)) + 16);
  uint64_t v17 = *(void *)(a1 + *(int *)(v15 + 52));
  uint64_t v18 = sub_4A98(&qword_2EAE48);
  uint64_t v19 = v29;
  uint64_t v20 = v29 + *(int *)(v18 + 36);
  uint64_t v21 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v27, v21);
  uint64_t v22 = type metadata accessor for PagedScrollViewPositionObserverModifier(0);
  *(void *)(v20 + *(int *)(v22 + 20)) = v16;
  *(void *)(v20 + *(int *)(v22 + 24)) = v17;
  uint64_t v23 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v19, v12, v28);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  swift_retain();
  return v24(v12, v23);
}

uint64_t sub_21B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = type metadata accessor for PagedScrollView(0);
  uint64_t v6 = v5 - 8;
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v26 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_26A970();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EAF88);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EAF80);
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v29 = v15;
  __chkstk_darwin(v15);
  uint64_t v27 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(a1 + *(int *)(v6 + 56));
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_26E18(a1, (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PagedScrollView);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v26 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v11, v8);
  sub_2C910((uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for PagedScrollView);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EAFF8);
  sub_4A98(&qword_2EB000);
  sub_7C18(&qword_2EB008, &qword_2EAFF8);
  uint64_t v20 = sub_7B0C(&qword_2EAF98);
  unint64_t v21 = sub_2D8BC();
  uint64_t v33 = v20;
  unint64_t v34 = v21;
  swift_getOpaqueTypeConformance2();
  sub_2DF80();
  sub_26C500();
  LOBYTE(v11) = sub_26B720();
  unsigned __int8 v22 = sub_26B740();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v11) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v22) {
    sub_26B730();
  }
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_2D814();
  uint64_t v23 = v27;
  uint64_t v24 = v31;
  sub_26BF20();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v32, v23, v29);
}

uint64_t sub_21FCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v96 = a3;
  uint64_t v94 = sub_4A98(&qword_2EAF98);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_269BA0();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EB018);
  __chkstk_darwin(v8 - 8);
  uint64_t v89 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EAE08);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v81 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  *(void *)&long long v82 = (char *)&v76 - v13;
  uint64_t v97 = type metadata accessor for PagedScrollView(0);
  __chkstk_darwin(v97);
  uint64_t v78 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_26A970();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v22 = (int *)sub_4A98(&qword_2EAFD0);
  uint64_t v23 = __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v80 = (uint64_t)&v76 - v26;
  uint64_t v79 = sub_4A98(&qword_2EAFC0);
  __chkstk_darwin(v79);
  uint64_t v83 = (uint64_t)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_4A98(&qword_2EAFA8);
  __chkstk_darwin(v84);
  uint64_t v88 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_4A98(&qword_2EB000);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v19;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v76 = v21;
  uint64_t v31 = v21;
  uint64_t v32 = v18;
  v30(v31, a2, v18);
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  sub_4ADC(a1, v33);
  uint64_t v35 = v33;
  uint64_t v36 = v96;
  double v37 = (*(double (**)(uint64_t, uint64_t))(v34 + 32))(v35, v34);
  uint64_t v38 = v36;
  double v39 = 0.0;
  if ((sub_229D0() & 1) == 0)
  {
    _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v17);
    sub_2D7AC((uint64_t)v17, type metadata accessor for SizeConstants.Spacing);
    double v39 = 12.0;
  }
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  sub_4ADC(a1, v40);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 40))(v40, v41);
  uint64_t v44 = v43;
  sub_2D118((uint64_t)a1, (uint64_t)&v101);
  uint64_t v45 = v78;
  sub_26E18(v38, v78, type metadata accessor for PagedScrollView);
  sub_2D118((uint64_t)a1, (uint64_t)&v99);
  *(double *)&v25[v22[13]] = v37;
  uint64_t v46 = (uint64_t *)&v25[v22[15]];
  *uint64_t v46 = v42;
  v46[1] = v44;
  uint64_t v47 = v76;
  v30(v25, (uint64_t)v76, v32);
  sub_2D118((uint64_t)&v101, (uint64_t)&v25[v22[16]]);
  sub_2D118((uint64_t)&v99, (uint64_t)v98);
  uint64_t v48 = v81;
  sub_22B28((uint64_t)v98, v81);
  sub_B6DC((uint64_t)v98, &qword_2EAE80);
  uint64_t v49 = v48;
  uint64_t v50 = v82;
  sub_19CC4(v49, v82, &qword_2EAE08);
  sub_2D7AC(v45, type metadata accessor for PagedScrollView);
  sub_2D178((uint64_t)&v99);
  sub_2D178((uint64_t)&v101);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v32);
  sub_19CC4(v50, (uint64_t)&v25[v22[17]], &qword_2EAE08);
  *(double *)&v25[v22[14]] = v39;
  uint64_t v51 = v80;
  sub_19CC4((uint64_t)v25, v80, &qword_2EAFD0);
  uint64_t v52 = a1[3];
  uint64_t v53 = a1[4];
  sub_4ADC(a1, v52);
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
  uint64_t v56 = v55;
  uint64_t v57 = (long long *)(v96 + *(int *)(v97 + 44));
  uint64_t v58 = *((void *)v57 + 2);
  long long v99 = *v57;
  uint64_t v100 = v58;
  sub_4A98(&qword_2EAE70);
  sub_26C370();
  long long v82 = v101;
  uint64_t v59 = v102;
  uint64_t v60 = v103;
  uint64_t v61 = v83;
  sub_B678(v51, v83, &qword_2EAFD0);
  uint64_t v62 = v61 + *(int *)(v79 + 36);
  *(void *)uint64_t v62 = v54;
  *(void *)(v62 + 8) = v56;
  *(_OWORD *)(v62 + 16) = v82;
  *(void *)(v62 + 32) = v59;
  *(void *)(v62 + 40) = v60;
  sub_B6DC(v51, &qword_2EAFD0);
  uint64_t v63 = sub_26C630();
  uint64_t v65 = v64;
  uint64_t v66 = (uint64_t)v88;
  uint64_t v67 = (uint64_t)&v88[*(int *)(v84 + 36)];
  sub_2D118((uint64_t)a1, (uint64_t)&v101);
  uint64_t v68 = v89;
  sub_23DCC((uint64_t)&v101, v89);
  sub_B6DC((uint64_t)&v101, &qword_2EAE80);
  sub_19CC4(v68, v67, &qword_2EB018);
  uint64_t v69 = (uint64_t *)(v67 + *(int *)(sub_4A98(&qword_2EAFE8) + 36));
  *uint64_t v69 = v63;
  v69[1] = v65;
  sub_19CC4(v61, v66, &qword_2EAFC0);
  sub_269C80();
  sub_4A98(&qword_2EB020);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_26F990;
  uint64_t v70 = a1[3];
  uint64_t v71 = a1[4];
  sub_4ADC(a1, v70);
  (*(void (**)(uint64_t, uint64_t))(v71 + 48))(v70, v71);
  sub_269820();
  uint64_t v72 = v90;
  sub_269B90();
  sub_2D9B4();
  sub_2D0D0((unint64_t *)&qword_2EAFF0, (void (*)(uint64_t))&type metadata accessor for YearInReviewExposureEvent);
  uint64_t v73 = (uint64_t)v92;
  sub_26BBA0();
  sub_2D8BC();
  uint64_t v74 = v85;
  sub_26BB90();
  sub_B6DC(v73, &qword_2EAF98);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v72, v93);
  sub_B6DC(v66, &qword_2EAFA8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v86 + 32))(v95, v74, v87);
}

uint64_t sub_229D0()
{
  uint64_t v1 = type metadata accessor for PagedScrollView(0);
  uint64_t v2 = (long long *)(v0 + *(int *)(v1 + 44));
  uint64_t v3 = *((void *)v2 + 2);
  long long v16 = *v2;
  uint64_t v17 = v3;
  sub_4A98(&qword_2EAE70);
  sub_26C350();
  uint64_t v4 = v21;
  uint64_t v5 = *(void *)(v0 + *(int *)(v1 + 48));
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v20;
    sub_2D118(v5 + 40 * v6 - 8, (uint64_t)&v16);
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    sub_4ADC(&v16, v18);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    uint64_t v12 = v11;
    sub_2D178((uint64_t)&v16);
    if (v4)
    {
      if (v12)
      {
        if (v7 == v10 && v4 == v12)
        {
          swift_bridgeObjectRelease();
          char v14 = 1;
        }
        else
        {
          char v14 = sub_26DDB0();
          swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    if (v12)
    {
      char v14 = 0;
      goto LABEL_15;
    }
  }
  else if (v21)
  {
LABEL_10:
    char v14 = 0;
LABEL_15:
    swift_bridgeObjectRelease();
    return v14 & 1;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_22B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v148 = a2;
  uint64_t v144 = sub_4A98(&qword_2EAE90);
  __chkstk_darwin(v144);
  uint64_t v145 = (uint64_t)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_4A98(&qword_2EAE98);
  __chkstk_darwin(v147);
  v146 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26C260();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v119 = v5;
  __chkstk_darwin(v5);
  uint64_t v117 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26A2F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v116 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EAEA0);
  uint64_t v124 = *(void *)(v9 - 8);
  uint64_t v125 = v9;
  __chkstk_darwin(v9);
  uint64_t v122 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_4A98(&qword_2EAEA8);
  __chkstk_darwin(v123);
  uint64_t v121 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EAEB0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v120 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v127 = (uint64_t)&v109 - v15;
  uint64_t v126 = sub_4A98(&qword_2EAEB8);
  __chkstk_darwin(v126);
  uint64_t v129 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = sub_4A98(&qword_2EAEC0);
  __chkstk_darwin(v128);
  uint64_t v110 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_4A98(&qword_2EAEC8);
  __chkstk_darwin(v142);
  uint64_t v130 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2EAED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_4A98(&qword_2EAED8);
  __chkstk_darwin(v140);
  uint64_t v141 = (uint64_t)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2EAEE0);
  __chkstk_darwin(v23);
  v143 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_4A98(&qword_2EAEE8);
  __chkstk_darwin(v112);
  unint64_t v113 = (uint64_t *)((char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = type metadata accessor for PagedScrollView(0);
  __chkstk_darwin(v132);
  uint64_t v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_26A6E0();
  uint64_t v137 = *(void *)(v28 - 8);
  uint64_t v138 = v28;
  __chkstk_darwin(v28);
  uint64_t v111 = (uint64_t)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_4A98(&qword_2EAEF0);
  uint64_t v30 = __chkstk_darwin(v139);
  uint64_t v114 = (char *)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v115 = (uint64_t)&v109 - v32;
  uint64_t v33 = sub_4A98(&qword_2EA940);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v36 = (char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v136 = (uint64_t)&v109 - v37;
  uint64_t v38 = type metadata accessor for PageBackground(0);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v109 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(a1, (uint64_t)&v167, &qword_2EAE80);
  uint64_t v41 = *((void *)&v168 + 1);
  if (!*((void *)&v168 + 1))
  {
    sub_B6DC((uint64_t)&v167, &qword_2EAE80);
    swift_storeEnumTagMultiPayload();
    sub_2D204();
    uint64_t v73 = (uint64_t)v146;
    sub_26B2F0();
    sub_B678(v73, (uint64_t)v21, &qword_2EAE98);
    swift_storeEnumTagMultiPayload();
    sub_2D3F8();
    sub_2D684();
    sub_26B2F0();
    uint64_t v74 = v73;
    uint64_t v75 = &qword_2EAE98;
    return sub_B6DC(v74, v75);
  }
  uint64_t v109 = v12;
  uint64_t v133 = v19;
  uint64_t v134 = v23;
  v131 = v21;
  uint64_t v42 = v169;
  sub_4ADC(&v167, *((uint64_t *)&v168 + 1));
  (*(void (**)(uint64_t, uint64_t))(v42 + 24))(v41, v42);
  sub_2D178((uint64_t)&v167);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v76 = *(char **)v40;
    uint64_t v77 = sub_4A98(&qword_2EA950);
    uint64_t v78 = v136;
    sub_19CC4((uint64_t)&v40[*(int *)(v77 + 48)], v136, &qword_2EA940);
    uint64_t KeyPath = swift_getKeyPath();
    sub_B678(v78, (uint64_t)v36, &qword_2EA940);
    sub_26E18(v135, (uint64_t)v27, type metadata accessor for PagedScrollView);
    uint64_t v81 = v137;
    uint64_t v80 = v138;
    int v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 48))(v36, 1, v138);
    v146 = v76;
    if (v82 == 1)
    {
      uint64_t v83 = v111;
      sub_40FB4(v111);
      sub_2D7AC((uint64_t)v27, type metadata accessor for PagedScrollView);
      sub_B6DC((uint64_t)v36, &qword_2EA940);
    }
    else
    {
      sub_2D7AC((uint64_t)v27, type metadata accessor for PagedScrollView);
      uint64_t v83 = v111;
      (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v111, v36, v80);
    }
    uint64_t v101 = (uint64_t)v131;
    uint64_t v102 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))((char *)v113 + *(int *)(v112 + 28), v83, v80);
    *uint64_t v102 = KeyPath;
    uint64_t v103 = v114;
    sub_B678((uint64_t)v102, (uint64_t)&v114[*(int *)(v139 + 36)], &qword_2EAEE8);
    *uint64_t v103 = v146;
    swift_retain();
    sub_B6DC((uint64_t)v102, &qword_2EAEE8);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v80);
    uint64_t v104 = v115;
    sub_19CC4((uint64_t)v103, v115, &qword_2EAEF0);
    sub_B678(v104, v141, &qword_2EAEF0);
    swift_storeEnumTagMultiPayload();
    sub_2D474();
    sub_2D514();
    uint64_t v105 = (uint64_t)v143;
    sub_26B2F0();
    sub_B678(v105, v101, &qword_2EAEE0);
    swift_storeEnumTagMultiPayload();
    sub_2D3F8();
    sub_2D684();
    sub_26B2F0();
    swift_release();
    sub_B6DC(v105, &qword_2EAEE0);
    sub_B6DC(v104, &qword_2EAEF0);
    uint64_t v75 = &qword_2EA940;
    uint64_t v74 = v136;
    return sub_B6DC(v74, v75);
  }
  if (EnumCaseMultiPayload == 1)
  {
    long long v44 = *((_OWORD *)v40 + 9);
    long long v175 = *((_OWORD *)v40 + 8);
    long long v176 = v44;
    uint64_t v177 = *((void *)v40 + 20);
    long long v45 = *((_OWORD *)v40 + 5);
    long long v171 = *((_OWORD *)v40 + 4);
    long long v172 = v45;
    long long v46 = *((_OWORD *)v40 + 7);
    long long v173 = *((_OWORD *)v40 + 6);
    long long v174 = v46;
    long long v47 = *((_OWORD *)v40 + 1);
    long long v167 = *(_OWORD *)v40;
    long long v168 = v47;
    long long v48 = *((_OWORD *)v40 + 3);
    long long v169 = *((_OWORD *)v40 + 2);
    long long v170 = v48;
    CoverViewModel.source.getter((uint64_t)&v149);
    unsigned __int8 v49 = v151;
    if (v151 == 255)
    {
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = 0xD00000000000002FLL;
      *(void *)(v106 + 24) = 0x8000000000287ED0;
      long long v107 = v129;
      *uint64_t v129 = sub_1CA78;
      v107[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v106;
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EA828);
      sub_2D5B4();
      sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
      uint64_t v72 = (uint64_t)v130;
      sub_26B2F0();
    }
    else
    {
      uint64_t v51 = v149;
      uint64_t v50 = (uint64_t)v150;
      uint64_t v52 = v132;
      uint64_t v53 = v135;
      sub_412A8((uint64_t)&v149);
      uint64_t v54 = v152;
      uint64_t v55 = v153;
      sub_4ADC(&v149, v152);
      v164 = (void *)v51;
      uint64_t v165 = v50;
      LOBYTE(v166) = v49 & 1;
      long long v56 = v171;
      uint64_t v57 = v53 + *(int *)(v52 + 24);
      uint64_t v58 = *(void *)v57;
      LOBYTE(v52) = *(unsigned char *)(v57 + 8);
      sub_10E0C(*(void *)v57, v52);
      double v59 = sub_401C0(v58, v52);
      sub_C374(v58, v52);
      BYTE2(v162) = -2;
      LOWORD(v162) = -772;
      v146 = (char *)(*(uint64_t (**)(void **, uint64_t *, uint64_t, uint64_t, double, double, double))(v55 + 16))(&v164, &v162, v54, v55, *(double *)&v56, *((double *)&v56 + 1), v59);
      sub_2D78C(v51, v50, v49);
      id v60 = [self systemGrayColor];
      uint64_t v61 = sub_26C0C0();
      uint64_t v62 = swift_getKeyPath();
      type metadata accessor for CGSize(0);
      uint64_t v162 = 0;
      uint64_t v163 = 0;
      sub_26C340();
      uint64_t v63 = v164;
      uint64_t v64 = v165;
      uint64_t v65 = v166;
      uint64_t v162 = 0;
      sub_4A98(&qword_2EA150);
      sub_26C340();
      uint64_t v66 = v164;
      uint64_t v67 = v165;
      uint64_t v162 = 0;
      uint64_t v163 = 0;
      sub_26C340();
      uint64_t v68 = v164;
      uint64_t v69 = v165;
      uint64_t v70 = v166;
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v149);
      uint64_t v149 = v61;
      v150 = v146;
      unsigned __int8 v151 = 0;
      uint64_t v152 = v62;
      LOBYTE(v153) = 0;
      v154 = v63;
      uint64_t v155 = v64;
      uint64_t v156 = v65;
      v157 = v66;
      uint64_t v158 = v67;
      v159 = v68;
      uint64_t v160 = v69;
      uint64_t v161 = v70;
      sub_4A98(&qword_2EAF60);
      sub_7C18(&qword_2EAF58, &qword_2EAF60);
      uint64_t v71 = (uint64_t)v110;
      sub_26BE90();
      swift_release();
      swift_unknownObjectRelease();
      sub_C374(v62, 0);
      swift_release();

      swift_release();
      swift_release();
      sub_B678(v71, (uint64_t)v129, &qword_2EAEC0);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EA828);
      sub_2D5B4();
      sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
      uint64_t v72 = (uint64_t)v130;
      sub_26B2F0();
      sub_B6DC(v71, &qword_2EAEC0);
    }
    sub_B678(v72, v141, &qword_2EAEC8);
    swift_storeEnumTagMultiPayload();
    sub_2D474();
    sub_2D514();
    uint64_t v108 = (uint64_t)v143;
    sub_26B2F0();
    sub_B678(v108, (uint64_t)v131, &qword_2EAEE0);
    swift_storeEnumTagMultiPayload();
    sub_2D3F8();
    sub_2D684();
    sub_26B2F0();
    sub_B6DC(v108, &qword_2EAEE0);
    sub_B6DC(v72, &qword_2EAEC8);
    return sub_2D738((uint64_t)&v167);
  }
  else
  {
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v85 = [self bundleForClass:ObjCClassFromMetadata];
    sub_26A2E0();
    sub_26C2A0();
    uint64_t v87 = v117;
    uint64_t v86 = v118;
    uint64_t v88 = v119;
    (*(void (**)(char *, void, uint64_t))(v118 + 104))(v117, enum case for Image.ResizingMode.stretch(_:), v119);
    uint64_t v89 = sub_26C280();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    long long v167 = (unint64_t)v89;
    LOWORD(v168) = 257;
    LOBYTE(v86) = sub_26B720();
    char v90 = sub_26B740();
    sub_26B730();
    sub_26B730();
    if (sub_26B730() != v86) {
      sub_26B730();
    }
    sub_26B730();
    char v91 = sub_26B730();
    uint64_t v92 = (uint64_t)v146;
    if (v91 != v90) {
      sub_26B730();
    }
    uint64_t v93 = &v40[*(int *)(sub_4A98(&qword_2EA948) + 48)];
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_4A98(&qword_2EAF08);
    sub_2D384();
    uint64_t v94 = v122;
    sub_26BF20();
    swift_release();
    uint64_t v96 = v124;
    uint64_t v95 = v125;
    uint64_t v97 = (uint64_t)v121;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v94, v125);
    *(_WORD *)(v97 + *(int *)(v123 + 36)) = 0;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v95);
    sub_2D2B0();
    uint64_t v98 = (uint64_t)v120;
    sub_26BE90();
    sub_B6DC(v97, &qword_2EAEA8);
    uint64_t v99 = v127;
    sub_19CC4(v98, v127, &qword_2EAEB0);
    sub_B678(v99, v145, &qword_2EAEB0);
    swift_storeEnumTagMultiPayload();
    sub_2D204();
    sub_26B2F0();
    sub_B678(v92, (uint64_t)v131, &qword_2EAE98);
    swift_storeEnumTagMultiPayload();
    sub_2D3F8();
    sub_2D684();
    sub_26B2F0();
    sub_B6DC(v92, &qword_2EAE98);
    sub_B6DC(v99, &qword_2EAEB0);
    return (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v93, v138);
  }
}

uint64_t sub_23DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v171 = a1;
  uint64_t v183 = a2;
  uint64_t v179 = sub_4A98(&qword_2EB028);
  uint64_t v3 = __chkstk_darwin(v179);
  uint64_t v5 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v147 = (char *)&v136 - v6;
  uint64_t v178 = sub_26AB40();
  uint64_t v177 = *(void **)(v178 - 8);
  uint64_t v7 = __chkstk_darwin(v178);
  long long v176 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v175 = (char *)&v136 - v9;
  uint64_t v10 = sub_4A98(&qword_2EB030);
  uint64_t v11 = __chkstk_darwin(v10);
  v146 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v148 = (uint64_t)&v136 - v13;
  uint64_t v14 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v168 = (uint64_t)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for PagedScrollView(0);
  uint64_t v16 = __chkstk_darwin(v174);
  uint64_t v173 = (uint64_t)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v172 = (uint64_t)&v136 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  long long v169 = (char *)&v136 - v21;
  __chkstk_darwin(v20);
  uint64_t v160 = (uint64_t)&v136 - v22;
  uint64_t v23 = sub_4A98(&qword_2EA940);
  __chkstk_darwin(v23 - 8);
  uint64_t v159 = (uint64_t)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_26A6E0();
  uint64_t v156 = *(void *)(v157 - 8);
  uint64_t v25 = __chkstk_darwin(v157);
  uint64_t v162 = (char *)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v161 = (uint64_t)&v136 - v27;
  uint64_t v167 = sub_26C700();
  uint64_t v165 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  v164 = (char *)&v136 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v152 = (uint64_t)&v136 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_4A98(&qword_2EB038);
  __chkstk_darwin(v150);
  uint64_t v32 = (uint64_t *)((char *)&v136 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = sub_26C270();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_4A98(&qword_2EB040);
  __chkstk_darwin(v149);
  uint64_t v38 = (uint64_t *)((char *)&v136 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = sub_4A98(&qword_2EB048);
  __chkstk_darwin(v151);
  uint64_t v40 = (char *)&v136 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_4A98(&qword_2EB050);
  __chkstk_darwin(v153);
  uint64_t v158 = (char *)&v136 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_4A98(&qword_2EB058);
  __chkstk_darwin(v155);
  uint64_t v166 = (char *)&v136 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_4A98(&qword_2EB060);
  __chkstk_darwin(v163);
  long long v170 = (char *)&v136 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_4A98(&qword_2EB068);
  __chkstk_darwin(v181);
  uint64_t v180 = (uint64_t)&v136 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_4A98(&qword_2EB070);
  uint64_t v142 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v140 = (char *)&v136 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_4A98(&qword_2EB078);
  uint64_t v182 = *(void *)(v46 - 8);
  uint64_t v47 = __chkstk_darwin(v46);
  uint64_t v144 = (char *)&v136 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  v143 = (char *)&v136 - v50;
  __chkstk_darwin(v49);
  uint64_t v141 = (uint64_t)&v136 - v51;
  uint64_t v154 = v2;
  if (sub_229D0())
  {
    uint64_t v52 = v183;
    uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
    return v53(v52, 1, 1, v46);
  }
  uint64_t v137 = v46;
  uint64_t v138 = v5;
  uint64_t v139 = v10;
  uint64_t v55 = sub_26C250();
  sub_26B900();
  uint64_t v56 = sub_26B800();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v36, enum case for Image.Scale.large(_:), v33);
  uint64_t v58 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v32 + *(int *)(v150 + 28), v36, v33);
  *uint64_t v32 = v58;
  sub_B678((uint64_t)v32, (uint64_t)v38 + *(int *)(v149 + 36), &qword_2EB038);
  *uint64_t v38 = v55;
  v38[1] = KeyPath;
  _OWORD v38[2] = v56;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_B6DC((uint64_t)v32, &qword_2EB038);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v59 = v152;
  uint64_t v60 = v154;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v152);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v61 = sub_26C1C0();
  swift_release();
  sub_2D7AC(v59, type metadata accessor for ColorConstants);
  sub_B678((uint64_t)v38, (uint64_t)v40, &qword_2EB040);
  *(void *)&v40[*(int *)(v151 + 36)] = v61;
  sub_B6DC((uint64_t)v38, &qword_2EB040);
  uint64_t v62 = v159;
  sub_255C0(v159);
  uint64_t v63 = v160;
  sub_26E18(v60, v160, type metadata accessor for PagedScrollView);
  uint64_t v64 = v156;
  uint64_t v65 = v157;
  uint64_t v66 = (uint64_t)v40;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v62, 1, v157) == 1)
  {
    uint64_t v67 = (int *)v174;
    uint64_t v68 = v161;
    sub_40FB4(v161);
    sub_2D7AC(v63, type metadata accessor for PagedScrollView);
    sub_B6DC(v62, &qword_2EA940);
  }
  else
  {
    sub_2D7AC(v63, type metadata accessor for PagedScrollView);
    uint64_t v68 = v161;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v161, v62, v65);
    uint64_t v67 = (int *)v174;
  }
  uint64_t v69 = (uint64_t)v169;
  uint64_t v70 = v162;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v162, enum case for ColorScheme.light(_:), v65);
  char v71 = sub_26A6D0();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v64 + 8);
  v72(v70, v65);
  v72((char *)v68, v65);
  uint64_t v73 = v165;
  uint64_t v74 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  if ((v71 & 1) == 0) {
    uint64_t v74 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  uint64_t v75 = v164;
  uint64_t v76 = v167;
  (*(void (**)(char *, void, uint64_t))(v165 + 104))(v164, *v74, v167);
  uint64_t v77 = (uint64_t)v158;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(&v158[*(int *)(v153 + 36)], v75, v76);
  sub_B678(v66, v77, &qword_2EB048);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v76);
  sub_B6DC(v66, &qword_2EB048);
  sub_26B780();
  uint64_t v78 = v168;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v168);
  sub_2D7AC(v78, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v189 = v79;
  uint64_t v190 = v80;
  uint64_t v191 = v81;
  uint64_t v192 = v82;
  char v193 = 0;
  uint64_t v83 = (uint64_t)v166;
  sub_26B4F0();
  sub_19CC4(v77, v83, &qword_2EB050);
  LOBYTE(v76) = sub_25470();
  sub_26E18(v60, v69, type metadata accessor for PagedScrollView);
  sub_B678(v171, (uint64_t)&v186, &qword_2EAE80);
  if ((v76 & 1) == 0)
  {
    sub_B6DC((uint64_t)&v186, &qword_2EAE80);
    sub_2D7AC(v69, type metadata accessor for PagedScrollView);
    uint64_t v86 = (uint64_t)v170;
    goto LABEL_14;
  }
  char v84 = sub_258A4((uint64_t)&v186);
  sub_B6DC((uint64_t)&v186, &qword_2EAE80);
  sub_2D7AC(v69, type metadata accessor for PagedScrollView);
  double v85 = 15.0;
  uint64_t v86 = (uint64_t)v170;
  if ((v84 & 1) == 0) {
LABEL_14:
  }
    double v85 = 0.0;
  sub_B678(v83, v86, &qword_2EB058);
  uint64_t v87 = (double *)(v86 + *(int *)(v163 + 36));
  double *v87 = 0.0;
  v87[1] = v85;
  sub_B6DC(v83, &qword_2EB058);
  uint64_t v88 = v60 + v67[9];
  uint64_t v89 = *(void *)v88;
  char v90 = *(unsigned char *)(v88 + 8);
  sub_10E0C(*(void *)v88, v90);
  char v91 = sub_40900(v89, v90);
  sub_C374(v89, v90);
  uint64_t v92 = v172;
  sub_26E18(v60, v172, type metadata accessor for PagedScrollView);
  uint64_t v93 = v178;
  uint64_t v94 = v176;
  if (v91)
  {
    sub_2D7AC(v92, type metadata accessor for PagedScrollView);
LABEL_18:
    uint64_t v99 = v173;
    sub_26E18(v60, v173, type metadata accessor for PagedScrollView);
    uint64_t v100 = v175;
LABEL_19:
    sub_2D7AC(v99, type metadata accessor for PagedScrollView);
LABEL_20:
    uint64_t v101 = 0;
    goto LABEL_21;
  }
  uint64_t v95 = v92 + v67[10];
  uint64_t v96 = *(void *)v95;
  char v97 = *(unsigned char *)(v95 + 8);
  sub_10E0C(*(void *)v95, v97);
  char v98 = sub_40900(v96, v97);
  sub_C374(v96, v97);
  sub_2D7AC(v92, type metadata accessor for PagedScrollView);
  if (v98) {
    goto LABEL_18;
  }
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  uint64_t v99 = v173;
  sub_26E18(v60, v173, type metadata accessor for PagedScrollView);
  uint64_t v100 = v175;
  if (IsReduceMotionEnabled) {
    goto LABEL_19;
  }
  char v135 = sub_25470();
  sub_2D7AC(v99, type metadata accessor for PagedScrollView);
  if ((v135 & 1) == 0) {
    goto LABEL_20;
  }
  sub_26C6D0();
  sub_26C680();
  swift_release();
  uint64_t v101 = sub_26C670();
  swift_release();
LABEL_21:
  uint64_t v102 = v60 + v67[11];
  unint64_t v103 = *(void *)(v102 + 16);
  long long v186 = *(_OWORD *)v102;
  unint64_t v187 = v103;
  sub_4A98(&qword_2EAE70);
  sub_26C350();
  uint64_t v104 = v184;
  uint64_t v105 = v185;
  uint64_t v106 = v180;
  sub_B678(v86, v180, &qword_2EB060);
  long long v107 = (uint64_t *)(v106 + *(int *)(v181 + 36));
  *long long v107 = v101;
  v107[1] = v104;
  v107[2] = v105;
  sub_B6DC(v86, &qword_2EB060);
  uint64_t v108 = v177;
  unint64_t v109 = (unint64_t)(v177 + 13);
  uint64_t v110 = (void (*)(char *, void, uint64_t))v177[13];
  v110(v100, enum case for DynamicTypeSize.small(_:), v93);
  v110(v94, enum case for DynamicTypeSize.xxxLarge(_:), v93);
  sub_2D0D0(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((sub_26D350() & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v111 = v179;
  uint64_t v112 = v147;
  unint64_t v113 = &v147[*(int *)(v179 + 48)];
  uint64_t v114 = (void (*)(char *, char *, uint64_t))v108[4];
  v114(v147, v100, v93);
  long long v175 = v113;
  v114(v113, v94, v93);
  uint64_t v115 = *(int *)(v111 + 48);
  uint64_t v116 = v138;
  uint64_t v117 = &v138[v115];
  uint64_t v118 = v93;
  uint64_t v119 = (void (*)(char *, char *, uint64_t))v108[2];
  v119(v138, v112, v93);
  v119(v117, v113, v93);
  uint64_t v120 = (uint64_t)v146;
  v114(v146, v116, v93);
  uint64_t v121 = (void (*)(char *, uint64_t))v108[1];
  v121(v117, v118);
  uint64_t v122 = v181;
  uint64_t v123 = &v116[*(int *)(v179 + 48)];
  v114(v116, v112, v118);
  v114(v123, v175, v118);
  uint64_t v86 = v139;
  v114((char *)(v120 + *(int *)(v139 + 36)), v123, v118);
  uint64_t v124 = v116;
  uint64_t v92 = v122;
  v121(v124, v118);
  uint64_t v125 = v148;
  sub_19CC4(v120, v148, &qword_2EB030);
  unint64_t v109 = sub_2DFE4();
  uint64_t v108 = (void *)sub_7C18(&qword_2EB118, &qword_2EB030);
  uint64_t v106 = (uint64_t)v140;
  uint64_t v126 = v180;
  sub_26BD90();
  sub_B6DC(v125, &qword_2EB030);
  sub_B6DC(v126, &qword_2EB068);
  if (qword_2E9B38 != -1) {
LABEL_30:
  }
    swift_once();
  uint64_t v184 = qword_2EA920;
  uint64_t v185 = *(void *)algn_2EA928;
  *(void *)&long long v186 = v92;
  *((void *)&v186 + 1) = v86;
  unint64_t v187 = v109;
  v188 = v108;
  swift_getOpaqueTypeConformance2();
  sub_CC78();
  uint64_t v127 = (uint64_t)v144;
  uint64_t v128 = v145;
  sub_26BE40();
  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v106, v128);
  uint64_t v129 = v137;
  if (qword_2E9B40 != -1) {
    swift_once();
  }
  long long v186 = xmmword_2EA930;
  uint64_t v130 = (uint64_t)v143;
  sub_26ABA0();
  sub_B6DC(v127, &qword_2EB078);
  uint64_t v131 = v141;
  sub_19CC4(v130, v141, &qword_2EB078);
  uint64_t v132 = v131;
  uint64_t v133 = v183;
  sub_19CC4(v132, v183, &qword_2EB078);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v182 + 56))(v133, 0, 1, v129);
}

uint64_t sub_2538C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PagedScrollView(0);
  uint64_t v3 = *(void *)(a1 + *(int *)(v2 + 48));
  if (*(void *)(v3 + 16))
  {
    sub_2D118(v3 + 32, (uint64_t)&v9);
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    sub_4ADC(&v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    sub_2D178((uint64_t)&v9);
  }
  uint64_t v6 = (long long *)(a1 + *(int *)(v2 + 44));
  uint64_t v7 = *((void *)v6 + 2);
  long long v9 = *v6;
  uint64_t v10 = v7;
  sub_4A98(&qword_2EAE70);
  return sub_26C360();
}

uint64_t sub_25470()
{
  uint64_t v1 = type metadata accessor for PagedScrollView(0);
  uint64_t v2 = (long long *)(v0 + *(int *)(v1 + 44));
  uint64_t v3 = *((void *)v2 + 2);
  long long v15 = *v2;
  uint64_t v16 = v3;
  sub_4A98(&qword_2EAE70);
  sub_26C350();
  uint64_t v4 = v20;
  uint64_t v5 = *(void *)(v0 + *(int *)(v1 + 48));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = v19;
    sub_2D118(v5 + 32, (uint64_t)&v15);
    uint64_t v7 = v17;
    uint64_t v8 = v18;
    sub_4ADC(&v15, v17);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    uint64_t v11 = v10;
    sub_2D178((uint64_t)&v15);
    if (v4)
    {
      if (v11)
      {
        if (v6 == v9 && v4 == v11)
        {
          swift_bridgeObjectRelease();
          char v13 = 1;
        }
        else
        {
          char v13 = sub_26DDB0();
          swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    if (v11)
    {
      char v13 = 0;
      goto LABEL_15;
    }
  }
  else if (v20)
  {
LABEL_10:
    char v13 = 0;
LABEL_15:
    swift_bridgeObjectRelease();
    return v13 & 1;
  }
  char v13 = 1;
  return v13 & 1;
}

uint64_t sub_255C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PageBackground(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PagedScrollView(0);
  uint64_t v7 = *(void *)(v1 + *(int *)(v6 + 48));
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRetain();
LABEL_14:
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v9 = v7 + 32;
  uint64_t v10 = (long long *)(v1 + *(int *)(v6 + 44));
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_2D118(v9, (uint64_t)&v28);
    uint64_t v11 = *((void *)&v29 + 1);
    uint64_t v12 = v30;
    sub_4ADC(&v28, *((uint64_t *)&v29 + 1));
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    uint64_t v15 = v14;
    uint64_t v16 = *((void *)v10 + 2);
    long long v24 = *v10;
    uint64_t v25 = v16;
    sub_4A98(&qword_2EAE70);
    sub_26C350();
    if (!v27)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v13 == v26 && v27 == v15) {
      break;
    }
    char v18 = sub_26DDB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_17;
    }
LABEL_4:
    sub_2D178((uint64_t)&v28);
    v9 += 40;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  long long v31 = v28;
  long long v32 = v29;
  uint64_t v33 = v30;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)&v32 + 1);
  if (!*((void *)&v32 + 1))
  {
LABEL_15:
    sub_B6DC((uint64_t)&v31, &qword_2EAE80);
    uint64_t v19 = sub_26A6E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  uint64_t v22 = v33;
  sub_4ADC(&v31, *((uint64_t *)&v32 + 1));
  (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  sub_2D178((uint64_t)&v31);
  PageBackground.resolvedColorScheme.getter(a1);
  sub_2D7AC((uint64_t)v5, type metadata accessor for PageBackground);
  uint64_t v23 = sub_26A6E0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 0, 1, v23);
}

uint64_t sub_258A4(uint64_t a1)
{
  sub_B678(a1, (uint64_t)&v14, &qword_2EAE80);
  if (*((void *)&v15 + 1))
  {
    v17[0] = v14;
    v17[1] = v15;
    uint64_t v2 = v16;
    uint64_t v18 = v16;
    uint64_t v3 = *((void *)&v15 + 1);
    sub_4ADC(v17, *((uint64_t *)&v15 + 1));
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
    uint64_t v6 = v5;
    uint64_t v7 = (long long *)(v1 + *(int *)(type metadata accessor for PagedScrollView(0) + 44));
    uint64_t v8 = *((void *)v7 + 2);
    long long v14 = *v7;
    *(void *)&long long v15 = v8;
    sub_4A98(&qword_2EAE70);
    sub_26C350();
    if (v13)
    {
      if (v4 == v12 && v13 == v6) {
        char v10 = 1;
      }
      else {
        char v10 = sub_26DDB0();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = 0;
    }
    sub_2D178((uint64_t)v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_B6DC((uint64_t)&v14, &qword_2EAE80);
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_259E0()
{
  return sub_26ADD0();
}

uint64_t sub_25A04(uint64_t a1)
{
  uint64_t v2 = sub_26A6E0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26ADE0();
}

uint64_t sub_25ACC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_26E18(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PagedScrollView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_2C910((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PagedScrollView);
  *a2 = sub_26E84;
  a2[1] = v7;
  return result;
}

uint64_t sub_25BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  sub_26ABD0();
  uint64_t v5 = *(void *)(a1 + 16);
  sub_26ABD0();
  sub_26ABD0();
  sub_7B0C(&qword_2EAD68);
  sub_26ABD0();
  swift_getTupleTypeMetadata2();
  sub_26C770();
  swift_getWitnessTable();
  uint64_t v6 = sub_26C460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v16 - v11;
  void v16[4] = v5;
  v16[5] = v4;
  long long v17 = *(_OWORD *)(a1 + 32);
  uint64_t v18 = v2;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26C450();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v10, v6, WitnessTable);
  long long v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  sub_CCCC(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_25E2C@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, void (*a4)(void, void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v53 = a5;
  uint64_t v38 = a1;
  uint64_t v46 = sub_26ABD0();
  uint64_t v50 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v54 = (char *)&v38 - v8;
  uint64_t v47 = sub_26ABD0();
  uint64_t v51 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v42 = (char *)&v38 - v9;
  sub_7B0C(&qword_2EAD68);
  uint64_t v49 = sub_26ABD0();
  uint64_t v52 = *(void *)(v49 - 8);
  uint64_t v10 = __chkstk_darwin(v49);
  uint64_t v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v38 - v12;
  uint64_t v13 = sub_26ABD0();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v14 = v39;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v40 = (char *)&v38 - v18;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v19 = a3;
  uint64_t v20 = v45;
  uint64_t v61 = v45;
  type metadata accessor for FrameView();
  sub_26B760();
  sub_26BEE0();
  v57[8] = v20;
  v57[9] = &protocol witness table for _SafeAreaIgnoringLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v17, v13, WitnessTable);
  uint64_t v21 = *(void (**)(void, void))(v14 + 8);
  uint64_t v44 = v14 + 8;
  uint64_t v45 = v21;
  v21(v17, v13);
  sub_26B780();
  sub_26C000();
  sub_26A940();
  sub_26470();
  v57[6] = v19;
  v57[7] = &protocol witness table for _PaddingLayout;
  uint64_t v22 = v46;
  uint64_t v23 = swift_getWitnessTable();
  long long v24 = v42;
  uint64_t v25 = v54;
  sub_26BFA0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v22);
  v57[4] = v23;
  v57[5] = &protocol witness table for _FrameLayout;
  uint64_t v26 = v47;
  uint64_t v27 = swift_getWitnessTable();
  long long v28 = v43;
  View.animateIn()();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v26);
  uint64_t v29 = sub_7C18((unint64_t *)&qword_2EAD70, &qword_2EAD68);
  v57[2] = v27;
  v57[3] = v29;
  uint64_t v30 = v49;
  uint64_t v31 = swift_getWitnessTable();
  long long v32 = v48;
  sub_CCCC(v28, v30, v31);
  uint64_t v33 = v52;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v52 + 8);
  v34(v28, v30);
  uint64_t v35 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v17, v40, v13);
  uint64_t v58 = v17;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v28, v32, v30);
  uint64_t v59 = v28;
  v57[0] = v13;
  v57[1] = v30;
  uint64_t v55 = WitnessTable;
  uint64_t v56 = v31;
  sub_1212DC((uint64_t)&v58, 2uLL, (uint64_t)v57);
  v34(v32, v30);
  uint64_t v36 = (uint64_t (*)(char *, uint64_t))v45;
  v45(v35, v13);
  v34(v28, v30);
  return v36(v17, v13);
}

double sub_26470()
{
  sub_26A940();
  double v1 = v0;
  sub_26A930();
  double v3 = v1 - v2;
  sub_26A930();
  return v3 + v4;
}

void sub_264A8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_264B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t sub_264BC()
{
  sub_2CF68();
  sub_26B0B0();
  return v1;
}

uint64_t sub_264F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2EAD50);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  long long v9 = *(_OWORD *)(v2 + 32);
  v14[0] = *(_OWORD *)(v2 + 16);
  v14[1] = v9;
  sub_4A98(&qword_2EAD58);
  sub_26C480();
  if (v16)
  {
    if (v15 == *(void *)v2 && v16 == *(void *)(v2 + 8)) {
      char v10 = 1;
    }
    else {
      char v10 = sub_26DDB0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  uint64_t v11 = sub_4A98(&qword_2EAD60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v7, a1, v11);
  uint64_t v12 = &v7[*(int *)(v5 + 36)];
  *(void *)uint64_t v12 = KeyPath;
  v12[8] = v10 & 1;
  return sub_19CC4((uint64_t)v7, a2, &qword_2EAD50);
}

uint64_t sub_26670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_264F8(a1, a2);
}

uint64_t sub_266AC(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EADA0);
}

uint64_t sub_266B8()
{
  return sub_26B0B0();
}

uint64_t sub_266F8(uint64_t a1)
{
  sub_C224(a1, (uint64_t)v3);
  sub_C224((uint64_t)v3, (uint64_t)&v2);
  sub_2E480();
  sub_26B0C0();
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v3);
}

uint64_t sub_26758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26E18(a1, a2, type metadata accessor for SizeConstants.Environment);
}

uint64_t sub_26788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26B0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v19 - v14, v19, v9);
  v16(v13, (uint64_t)v15, v9);
  sub_26ADD0();
  long long v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  v17(v15, v9);
  return sub_2C910((uint64_t)v8, v20, type metadata accessor for ColorConstants.Environment);
}

uint64_t type metadata accessor for PagedScrollView(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EAB88);
}

uint64_t sub_269F4()
{
  return sub_26ADD0();
}

uint64_t sub_26A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)v21 - v13, a1, v8);
  v15(v12, (uint64_t)v14, v8);
  *uint64_t v7 = EnvironmentValues.isCompact.getter() & 1;
  sub_2E42C();
  sub_26B0B0();
  v7[1] = v23;
  sub_26AE90();
  sub_26AE00();
  *(void *)&v7[*(int *)(v5 + 36)] = v16;
  sub_6F68();
  sub_26B0B0();
  long long v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  __int16 v18 = v21[6];
  uint64_t v19 = &v7[*(int *)(v5 + 40)];
  v19[2] = v22;
  *(_WORD *)uint64_t v19 = v18;
  v17(v14, v8);
  return sub_2C910((uint64_t)v7, a2, type metadata accessor for SizeConstants.Environment);
}

uint64_t sub_26C48(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EAD98);
}

uint64_t sub_26C54(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EAD90);
}

uint64_t sub_26C60(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EAD88);
}

uint64_t sub_26C6C(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EAD80);
}

uint64_t sub_26C78(uint64_t a1, uint64_t a2)
{
  return sub_26C84(a1, a2, &qword_2EAD78);
}

uint64_t sub_26C84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_26D480();
}

uint64_t sub_26CC0()
{
  return sub_26B0B0();
}

uint64_t sub_26D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26E18(a1, a2, type metadata accessor for SizeConstants.Environment);
}

uint64_t sub_26D38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFF0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_26D68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFF0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_26D98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26B000();
  *a1 = result & 1;
  return result;
}

uint64_t sub_26DC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26B000();
  *a1 = result & 1;
  return result;
}

uint64_t sub_26DF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2B9AC(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_26E18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_26E88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for PageBackground(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = (uint64_t)a2 + v10;
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v7 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      }
      else
      {
        long long v20 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v20;
        (**(void (***)(uint64_t, uint64_t *))(v20 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(void *)(a1 + 104) = a2[13];
      uint64_t v21 = a2[15];
      swift_bridgeObjectRetain();
      if (v21)
      {
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v21;
        uint64_t v22 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v22;
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        uint64_t v23 = a2[19];
        uint64_t v24 = a2[20];
        *(void *)(a1 + 152) = v23;
        *(void *)(a1 + 160) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 128) = v25;
        *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
        *(void *)(a1 + 160) = a2[20];
      }
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_4A98(&qword_2EA940);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PageBackground(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v9 = sub_26A6E0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v7 = v9;
    uint64_t v6 = v8;
LABEL_7:
    return v5(v6, v7);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v4 = sub_26A6E0();
    uint64_t v10 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v3, 1, v4);
    if (result) {
      return result;
    }
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v6 = v3;
    uint64_t v7 = v4;
    goto LABEL_7;
  }
  if (!*(unsigned char *)(a1 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PageBackground(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    swift_bridgeObjectRetain();
    uint64_t v7 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      long long v17 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v17;
      (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    uint64_t v18 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v18)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v18;
      uint64_t v19 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v19;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v20 = *(void *)(a2 + 152);
      uint64_t v21 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = v20;
      *(void *)(a1 + 160) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v22;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    uint64_t v11 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = sub_26A6E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_4A98(&qword_2EA940);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PageBackground(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_2D7AC(a1, type metadata accessor for PageBackground);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t)a2 + v8;
      uint64_t v11 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v5 = *a2;
        long long v6 = a2[1];
        long long v7 = a2[2];
        *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = v7;
        *(_OWORD *)a1 = v5;
      }
      else
      {
        uint64_t v18 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v18 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = a2[4];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      uint64_t v19 = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      if (v19)
      {
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v20 = a2[7];
        long long v21 = a2[8];
        long long v22 = a2[9];
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(_OWORD *)(a1 + 128) = v21;
        *(_OWORD *)(a1 + 144) = v22;
        *(_OWORD *)(a1 + 112) = v20;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v12 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v13 = (void *)(a1 + v12);
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_26A6E0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_4A98(&qword_2EA940);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PageBackground(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v13 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26A6E0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_4A98(&qword_2EA940);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for PageBackground(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2D7AC((uint64_t)a1, type metadata accessor for PageBackground);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_26A6E0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_4A98(&qword_2EA940);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PageBackground(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PageBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_27D50()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_27D60()
{
  sub_29B6C(319, (unint64_t *)&unk_2EAA08, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    long long v5 = &unk_270778;
    sub_26A6E0();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      long long v6 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t dispatch thunk of PagedFrame.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PagedFrame.background.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PagedFrame.horizontalPadding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PagedFrame.alignment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PagedFrame.exposureData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PagedFrame.exposureEventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_27F00()
{
  return type metadata accessor for PagedScrollViewModel(0);
}

uint64_t sub_27F08()
{
  uint64_t result = sub_269A50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PagedScrollViewModel(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PagedScrollViewModel);
}

uint64_t dispatch thunk of PagedScrollViewModel.__allocating_init(totalPages:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void *initializeBufferWithCopyOfBuffer for PagedScrollView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_10E0C(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    char v21 = *((unsigned char *)a2 + v18 + 40);
    if (v21)
    {
      long long v22 = *(_OWORD *)(v20 + 24);
      *(_OWORD *)(v19 + 24) = v22;
      (**(void (***)(char *))(v22 - 8))(v19);
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_retain();
    }
    v19[40] = v21;
    uint64_t v23 = a3[8];
    uint64_t v24 = (_WORD *)((char *)a1 + v23);
    long long v25 = (_WORD *)((char *)a2 + v23);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v24 = *v25;
      uint64_t v26 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v27 = v26[6];
      long long v28 = (char *)v24 + v27;
      uint64_t v29 = (char *)v25 + v27;
      uint64_t v30 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(void *)((char *)v24 + v26[7]) = *(void *)((char *)v25 + v26[7]);
      uint64_t v31 = v26[8];
      long long v32 = (char *)v24 + v31;
      uint64_t v33 = (char *)v25 + v31;
      v32[2] = v33[2];
      *(_WORD *)long long v32 = *(_WORD *)v33;
    }
    else
    {
      *(void *)uint64_t v24 = *(void *)v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = a3[9];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = *(void *)v36;
    char v38 = v36[8];
    sub_10E0C(*(void *)v36, v38);
    *(void *)uint64_t v35 = v37;
    v35[8] = v38;
    uint64_t v39 = a3[10];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = *(void *)v41;
    char v43 = v41[8];
    sub_10E0C(*(void *)v41, v43);
    *(void *)uint64_t v40 = v42;
    v40[8] = v43;
    uint64_t v44 = a3[11];
    uint64_t v45 = a3[12];
    uint64_t v46 = (void *)((char *)a1 + v44);
    uint64_t v47 = (void *)((char *)a2 + v44);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    v46[2] = v47[2];
    *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);
    uint64_t v49 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = sub_269840();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v53(v50, v51, v52);
  }
  return a1;
}

uint64_t destroy for PagedScrollView(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  if (*(unsigned char *)(v7 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v7);
  }
  else {
    swift_release();
  }
  uint64_t v8 = a1 + a2[8];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v10 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_C374(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = a1 + a2[14];
  uint64_t v12 = sub_269840();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

void *initializeWithCopy for PagedScrollView(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = *((unsigned char *)a2 + v16 + 40);
  if (v19)
  {
    long long v20 = *(_OWORD *)(v18 + 24);
    *(_OWORD *)(v17 + 24) = v20;
    (**(void (***)(char *))(v20 - 8))(v17);
  }
  else
  {
    *(void *)char v17 = *(void *)v18;
    swift_retain();
  }
  unsigned char v17[40] = v19;
  uint64_t v21 = a3[8];
  long long v22 = (_WORD *)((char *)a1 + v21);
  uint64_t v23 = (_WORD *)((char *)a2 + v21);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *long long v22 = *v23;
    uint64_t v24 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v25 = v24[6];
    uint64_t v26 = (char *)v22 + v25;
    uint64_t v27 = (char *)v23 + v25;
    uint64_t v28 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    *(void *)((char *)v22 + v24[7]) = *(void *)((char *)v23 + v24[7]);
    uint64_t v29 = v24[8];
    uint64_t v30 = (char *)v22 + v29;
    uint64_t v31 = (char *)v23 + v29;
    v30[2] = v31[2];
    *(_WORD *)uint64_t v30 = *(_WORD *)v31;
  }
  else
  {
    *(void *)long long v22 = *(void *)v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = v34[8];
  sub_10E0C(*(void *)v34, v36);
  *(void *)uint64_t v33 = v35;
  v33[8] = v36;
  uint64_t v37 = a3[10];
  char v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)v39;
  char v41 = v39[8];
  sub_10E0C(*(void *)v39, v41);
  *(void *)char v38 = v40;
  v38[8] = v41;
  uint64_t v42 = a3[11];
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)((char *)a1 + v42);
  uint64_t v45 = (void *)((char *)a2 + v42);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  v44[2] = v45[2];
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  uint64_t v47 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_269840();
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v51(v48, v49, v50);
  return a1;
}

void *assignWithCopy for PagedScrollView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_C374(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    char v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    sub_B6DC((uint64_t)a1 + v18, &qword_2EAB10);
    if (v20[40])
    {
      uint64_t v21 = *((void *)v20 + 3);
      *((void *)v19 + 3) = v21;
      *((void *)v19 + 4) = *((void *)v20 + 4);
      (**(void (***)(char *, char *))(v21 - 8))(v19, v20);
      v19[40] = 1;
    }
    else
    {
      *(void *)char v19 = *(void *)v20;
      v19[40] = 0;
      swift_retain();
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    sub_B6DC((uint64_t)a1 + v22, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      uint64_t v25 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v26 = v25[6];
      uint64_t v27 = &v23[v26];
      uint64_t v28 = &v24[v26];
      uint64_t v29 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      *(void *)&v23[v25[7]] = *(void *)&v24[v25[7]];
      uint64_t v30 = v25[8];
      uint64_t v31 = &v23[v30];
      uint64_t v32 = &v24[v30];
      char v33 = v32[2];
      *(_WORD *)uint64_t v31 = *(_WORD *)v32;
      v31[2] = v33;
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = a3[9];
  uint64_t v35 = (char *)a1 + v34;
  char v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  char v38 = v36[8];
  sub_10E0C(*(void *)v36, v38);
  uint64_t v39 = *(void *)v35;
  char v40 = v35[8];
  *(void *)uint64_t v35 = v37;
  v35[8] = v38;
  sub_C374(v39, v40);
  uint64_t v41 = a3[10];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)v43;
  char v45 = v43[8];
  sub_10E0C(*(void *)v43, v45);
  uint64_t v46 = *(void *)v42;
  char v47 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = v45;
  sub_C374(v46, v47);
  uint64_t v48 = a3[11];
  uint64_t v49 = (void *)((char *)a1 + v48);
  uint64_t v50 = (char *)a2 + v48;
  *uint64_t v49 = *(void *)((char *)a2 + v48);
  v49[1] = *(void *)((char *)a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49[2] = *((void *)v50 + 2);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_retain();
  swift_release();
  uint64_t v51 = a3[14];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

char *initializeWithTake for PagedScrollView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)char v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_OWORD *)(v17 + 25) = *(_OWORD *)(v18 + 25);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v21 = *(_WORD *)v22;
    uint64_t v24 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v25 = v24[6];
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    uint64_t v28 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    *(void *)&v21[v24[7]] = *(void *)&v22[v24[7]];
    uint64_t v29 = v24[8];
    uint64_t v30 = &v21[v29];
    uint64_t v31 = &v22[v29];
    v30[2] = v31[2];
    *(_WORD *)uint64_t v30 = *(_WORD *)v31;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v32 = a3[9];
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v32];
  uint64_t v35 = &a2[v32];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  char v36 = &a1[v33];
  uint64_t v37 = &a2[v33];
  *(void *)char v36 = *(void *)v37;
  v36[8] = v37[8];
  uint64_t v38 = a3[11];
  uint64_t v39 = a3[12];
  char v40 = &a1[v38];
  uint64_t v41 = &a2[v38];
  *(_OWORD *)char v40 = *(_OWORD *)v41;
  *((void *)v40 + 2) = *((void *)v41 + 2);
  *(void *)&a1[v39] = *(void *)&a2[v39];
  uint64_t v42 = a3[13];
  uint64_t v43 = a3[14];
  uint64_t v44 = &a1[v43];
  char v45 = &a2[v43];
  *(void *)&a1[v42] = *(void *)&a2[v42];
  uint64_t v46 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

char *assignWithTake for PagedScrollView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EA970);
    uint64_t v11 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_C374(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = &a2[v19];
    uint64_t v21 = &a1[v19];
    sub_B6DC((uint64_t)&a1[v19], &qword_2EAB10);
    long long v22 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v20;
    *((_OWORD *)v21 + 1) = v22;
    *(_OWORD *)(v21 + 25) = *(_OWORD *)(v20 + 25);
    uint64_t v23 = a3[8];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_B6DC((uint64_t)&a1[v23], &qword_2EA978);
    uint64_t v26 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v24 = *(_WORD *)v25;
      uint64_t v27 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v28 = v27[6];
      uint64_t v29 = &v24[v28];
      uint64_t v30 = &v25[v28];
      uint64_t v31 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      *(void *)&v24[v27[7]] = *(void *)&v25[v27[7]];
      uint64_t v32 = v27[8];
      uint64_t v33 = &v24[v32];
      uint64_t v34 = &v25[v32];
      _OWORD v33[2] = v34[2];
      *(_WORD *)uint64_t v33 = *(_WORD *)v34;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  uint64_t v35 = a3[9];
  char v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)v37;
  LOBYTE(v37) = v37[8];
  uint64_t v39 = *(void *)v36;
  char v40 = v36[8];
  *(void *)char v36 = v38;
  v36[8] = (char)v37;
  sub_C374(v39, v40);
  uint64_t v41 = a3[10];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void *)v42;
  char v46 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  sub_C374(v45, v46);
  uint64_t v47 = a3[11];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  uint64_t v50 = *(void *)&a2[v47 + 8];
  *(void *)uint64_t v48 = *(void *)&a2[v47];
  *((void *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  *((void *)v48 + 2) = *((void *)v49 + 2);
  swift_release();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_release();
  uint64_t v51 = a3[14];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for PagedScrollView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2959C);
}

uint64_t sub_2959C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[12]);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = sub_269840();
    char v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[14];
    return v18(v20, a2, v19);
  }
}

uint64_t storeEnumTagSinglePayload for PagedScrollView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_29788);
}

uint64_t sub_29788(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[8];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[12]) = (a2 - 1);
  }
  else
  {
    uint64_t v17 = sub_269840();
    char v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[14];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_29960()
{
  sub_29B6C(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_29B6C(319, (unint64_t *)&qword_2EABA0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_29B6C(319, (unint64_t *)&qword_2EABA8, type metadata accessor for SizeConstants.Spacing, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_269840();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_29B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_29BD0()
{
  return sub_7C18(&qword_2EAC00, &qword_2EAC08);
}

uint64_t *sub_29C0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_26A970();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_29CE0(uint64_t a1)
{
  uint64_t v2 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_29D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  return a1;
}

uint64_t sub_29DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_29E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_29EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_29F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_29F98);
}

uint64_t sub_29F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2A058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2A06C);
}

uint64_t sub_2A06C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_26A970();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PagedScrollViewPositionObserverModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2EAC68);
}

uint64_t sub_2A148(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2A180()
{
  uint64_t result = sub_26A970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for IsVisibleFrameModifier()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IsVisibleFrameModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IsVisibleFrameModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for IsVisibleFrameModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IsVisibleFrameModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IsVisibleFrameModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IsVisibleFrameModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IsVisibleFrameModifier()
{
  return &type metadata for IsVisibleFrameModifier;
}

uint64_t sub_2A494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_2A49C()
{
  uint64_t result = sub_26A970();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2A5C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(v10 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = v13 + v15;
  unsigned int v17 = v15 | *(_DWORD *)(v7 + 80) & 0xF8 | v12;
  if (((v13
       + v15
       + ((v12 + ((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12)) & ~v15)
     + *(void *)(v14 + 64) > 0x18
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v17 > 7)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v30 = ~v15;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v21 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v22 = (void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    uint64_t v25 = (_OWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v25 = *v26;
    uint64_t v27 = ((unint64_t)v25 + v12 + 16) & ~v12;
    uint64_t v28 = ((unint64_t)v26 + v12 + 16) & ~v12;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v27, v28, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))((v27 + v16) & v30, (v28 + v16) & v30, v10);
  }
  return a1;
}

uint64_t sub_2A840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A970();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  unint64_t v6 = (((((a1 + *(void *)(v5 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  uint64_t v10 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v11 = *(uint64_t (**)(unint64_t))(v10 + 8);
  unint64_t v12 = (v9 + *(void *)(v8 + 56) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);

  return v11(v12);
}

uint64_t sub_2A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v13 + v17 + 16) & ~v17;
  uint64_t v19 = ((unint64_t)v14 + v17 + 16) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v18, v19);
  uint64_t v20 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 16))((*(void *)(v16 + 48) + *(unsigned __int8 *)(v20 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (*(void *)(v16 + 48) + *(unsigned __int8 *)(v20 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

uint64_t sub_2AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 24;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v13 + v17 + 16) & ~v17;
  uint64_t v19 = ((unint64_t)v14 + v17 + 16) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  uint64_t v20 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 24))((*(void *)(v16 + 40) + *(unsigned __int8 *)(v20 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (*(void *)(v16 + 40) + *(unsigned __int8 *)(v20 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

uint64_t sub_2ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v13 + v17 + 16) & ~v17;
  uint64_t v19 = ((unint64_t)v14 + v17 + 16) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v18, v19);
  uint64_t v20 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 32))((*(void *)(v16 + 32) + *(unsigned __int8 *)(v20 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (*(void *)(v16 + 32) + *(unsigned __int8 *)(v20 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

uint64_t sub_2AD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v13 + v17 + 16) & ~v17;
  uint64_t v19 = ((unint64_t)v14 + v17 + 16) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v18, v19);
  uint64_t v20 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 40))((*(void *)(v16 + 24) + *(unsigned __int8 *)(v20 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (*(void *)(v16 + 24) + *(unsigned __int8 *)(v20 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

uint64_t sub_2AE90(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_26A970();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v17 = v12;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = v15 + 16;
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v16;
  if (a2 <= v17) {
    goto LABEL_27;
  }
  unint64_t v20 = ((v19
        + ((v18 + ((((((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v16)
      + *(void *)(*(void *)(v9 - 8) + 64);
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_10;
  }
  unsigned int v23 = ((a2 - v17 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    int v22 = *(_DWORD *)((char *)a1 + v20);
    if (!v22) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 > 0xFF)
  {
    int v22 = *(unsigned __int16 *)((char *)a1 + v20);
    if (!*(unsigned __int16 *)((char *)a1 + v20)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 >= 2)
  {
LABEL_10:
    int v22 = *((unsigned __int8 *)a1 + v20);
    if (!*((unsigned char *)a1 + v20)) {
      goto LABEL_27;
    }
LABEL_17:
    int v24 = (v22 - 1) << v21;
    if (v20 > 3) {
      int v24 = 0;
    }
    if (v20)
    {
      if (v20 <= 3) {
        int v25 = v20;
      }
      else {
        int v25 = 4;
      }
      switch(v25)
      {
        case 2:
          int v26 = *a1;
          break;
        case 3:
          int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v26 = *(_DWORD *)a1;
          break;
        default:
          int v26 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v26 = 0;
    }
    return v17 + (v26 | v24) + 1;
  }
LABEL_27:
  if (!v17) {
    return 0;
  }
  if (v8 == v17)
  {
    uint64_t v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v28 = a1;
    uint64_t v29 = *(unsigned int *)(v7 + 84);
    uint64_t v30 = v6;
    return v27(v28, v29, v30);
  }
  unint64_t v32 = (v18
       + (((((((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15;
  if (v11 != v17)
  {
    uint64_t v28 = (unsigned __int16 *)((v19 + v32) & ~v16);
    uint64_t v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v29 = *(unsigned int *)(v13 + 84);
    uint64_t v30 = *(void *)(a3 + 24);
    return v27(v28, v29, v30);
  }
  uint64_t v33 = *(uint64_t (**)(unint64_t))(v10 + 48);

  return v33(v32);
}

void sub_2B1D0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_26A970();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(a4 + 24);
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  if (v16 <= v14) {
    unsigned int v21 = v14;
  }
  else {
    unsigned int v21 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v22 = v18 + 16;
  uint64_t v23 = v19 + v20;
  size_t v24 = ((v19
        + v20
        + ((v18 + 16 + ((((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v20)
      + *(void *)(*(void *)(v11 - 8) + 64);
  if (a3 <= v21)
  {
    int v25 = 0;
  }
  else if (v24 <= 3)
  {
    unsigned int v30 = ((a3 - v21 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v30))
    {
      int v25 = 4;
    }
    else if (v30 >= 0x100)
    {
      int v25 = 2;
    }
    else
    {
      int v25 = v30 > 1;
    }
  }
  else
  {
    int v25 = 1;
  }
  if (v21 < a2)
  {
    unsigned int v26 = ~v21 + a2;
    if (v24 < 4)
    {
      int v27 = (v26 >> (8 * v24)) + 1;
      if (v24)
      {
        int v31 = v26 & ~(-1 << (8 * v24));
        bzero(a1, v24);
        if (v24 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
        }
        else if (v24 == 2)
        {
          *(_WORD *)a1 = v31;
        }
        else
        {
          *a1 = v31;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v26;
      int v27 = 1;
    }
    switch(v25)
    {
      case 1:
        a1[v24] = v27;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v27;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v24] = v27;
        return;
      default:
        return;
    }
  }
  uint64_t v28 = ~v18;
  uint64_t v29 = ~v20;
  switch(v25)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x2B598);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v10 == v21)
      {
        unint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v33 = a1;
        uint64_t v34 = a2;
        uint64_t v35 = v10;
        uint64_t v36 = v8;
LABEL_30:
        v32(v33, v34, v35, v36);
        return;
      }
      unint64_t v37 = (v22
           + ((((((unint64_t)&a1[v17 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v28;
      if (v13 != v21)
      {
        uint64_t v33 = (unsigned char *)((v23 + v37) & v29);
        unint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        uint64_t v34 = a2;
        uint64_t v35 = v16;
        uint64_t v36 = v11;
        goto LABEL_30;
      }
      uint64_t v38 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
      v38(v37, a2);
      return;
  }
}

uint64_t type metadata accessor for FrameView()
{
  return swift_getGenericMetadata();
}

uint64_t initializeWithCopy for AnyPagedFrame(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyPagedFrame(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for AnyPagedFrame(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyPagedFrame(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyPagedFrame(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyPagedFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyPagedFrame()
{
  return &type metadata for AnyPagedFrame;
}

uint64_t sub_2B74C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_2B768()
{
  return &protocol witness table for String;
}

unint64_t sub_2B774(uint64_t a1)
{
  unint64_t result = sub_2B79C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2B79C()
{
  unint64_t result = qword_2EAD28;
  if (!qword_2EAD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAD28);
  }
  return result;
}

uint64_t sub_2B7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2B834()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2B850()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2B86C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2BB30(a1, a2, a3, (void *)*v3, &qword_2EADC8, &qword_2EA840);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B89C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2BB30(a1, a2, a3, (void *)*v3, &qword_2EADB8, &qword_2EADC0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B8CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2BCD8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2B8EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2BE44(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2B90C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2BFD0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2B92C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2C130(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B94C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2C4D0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B96C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2C670(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B98C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2CDDC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2B9AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EB120);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unsigned int v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2BB30(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_4A98(a5);
    unsigned int v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    _OWORD v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unsigned int v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_4A98(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2BCD8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADB0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unsigned int v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2BE44(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADE8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 168);
  }
  else
  {
    int64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unsigned int v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[168 * v8]) {
      memmove(v12, v13, 168 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[168 * v8] || v12 >= &v13[168 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2BFD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADF8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unsigned int v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2C130(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unsigned int v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_4A98(&qword_2EADF0);
  uint64_t v10 = *(void *)(sub_26B6B0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unsigned int v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_26B6B0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unsigned int v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2C370(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unsigned int v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2C4D0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADD0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  unsigned int v13 = a4 + 4;
  size_t v14 = 11 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_4A98(&qword_2EADD8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2C670(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EAD30);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_4A98(&qword_2EAD38);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_2C820()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PagedScrollViewPositionObserverModifier(0) - 8)
                          + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_26A970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2C910(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2C978()
{
  type metadata accessor for PagedScrollViewPositionObserverModifier(0);

  return sub_203B0();
}

double sub_2C9F0()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 32) = result;
  return result;
}

double sub_2CA08()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 40) = result;
  return result;
}

uint64_t sub_2CA20()
{
  return sub_2CA38();
}

uint64_t sub_2CA38()
{
  *(void *)(*(void *)(v0 + 16) + 16) = *(void *)(v0 + 24);
  return sub_1EEA4();
}

uint64_t sub_2CA78@<X0>(uint64_t a1@<X8>)
{
  return sub_25E2C(*(char **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void, void))(v1 + 40), a1);
}

uint64_t sub_2CA8C()
{
  uint64_t v1 = (int *)type metadata accessor for PagedScrollView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v4 + v1[5];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v4 + v1[6]), *(unsigned char *)(v4 + v1[6] + 8));
  uint64_t v8 = v4 + v1[7];
  if (*(unsigned char *)(v8 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v8);
  }
  else {
    swift_release();
  }
  uint64_t v9 = v4 + v1[8];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v9 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v11 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v4 + v1[9]), *(unsigned char *)(v4 + v1[9] + 8));
  sub_C374(*(void *)(v4 + v1[10]), *(unsigned char *)(v4 + v1[10] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v4 + v1[14];
  uint64_t v13 = sub_269840();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return swift_deallocObject();
}

uint64_t sub_2CD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for PagedScrollView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_20BB0(a1, v6, a2);
}

uint64_t sub_2CDDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2EADA8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_4A98(&qword_2E9F90);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

unint64_t sub_2CF68()
{
  unint64_t result = qword_2EAE00;
  if (!qword_2EAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAE00);
  }
  return result;
}

uint64_t sub_2CFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_2179C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_2CFC4()
{
  unint64_t result = qword_2EAE50;
  if (!qword_2EAE50)
  {
    sub_7B0C(&qword_2EAE48);
    sub_7B0C(&qword_2EAE58);
    sub_7C18(&qword_2EAE60, &qword_2EAE58);
    swift_getOpaqueTypeConformance2();
    sub_2D0D0(&qword_2EAE68, (void (*)(uint64_t))type metadata accessor for PagedScrollViewPositionObserverModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAE50);
  }
  return result;
}

uint64_t sub_2D0D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2D118(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2D178(uint64_t a1)
{
  return a1;
}

uint64_t sub_2D1A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for PagedScrollView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_2538C(v2);
}

unint64_t sub_2D204()
{
  unint64_t result = qword_2EAEF8;
  if (!qword_2EAEF8)
  {
    sub_7B0C(&qword_2EAEB0);
    sub_2D2B0();
    sub_2D0D0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAEF8);
  }
  return result;
}

unint64_t sub_2D2B0()
{
  unint64_t result = qword_2EAF00;
  if (!qword_2EAF00)
  {
    sub_7B0C(&qword_2EAEA8);
    sub_7B0C(&qword_2EAF08);
    sub_2D384();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EAF18, &qword_2EAF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF00);
  }
  return result;
}

unint64_t sub_2D384()
{
  unint64_t result = qword_2EAF10;
  if (!qword_2EAF10)
  {
    sub_7B0C(&qword_2EAF08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF10);
  }
  return result;
}

unint64_t sub_2D3F8()
{
  unint64_t result = qword_2EAF30;
  if (!qword_2EAF30)
  {
    sub_7B0C(&qword_2EAEE0);
    sub_2D474();
    sub_2D514();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF30);
  }
  return result;
}

unint64_t sub_2D474()
{
  unint64_t result = qword_2EAF38;
  if (!qword_2EAF38)
  {
    sub_7B0C(&qword_2EAEF0);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF38);
  }
  return result;
}

unint64_t sub_2D514()
{
  unint64_t result = qword_2EAF48;
  if (!qword_2EAF48)
  {
    sub_7B0C(&qword_2EAEC8);
    sub_2D5B4();
    sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF48);
  }
  return result;
}

unint64_t sub_2D5B4()
{
  unint64_t result = qword_2EAF50;
  if (!qword_2EAF50)
  {
    sub_7B0C(&qword_2EAEC0);
    sub_7C18(&qword_2EAF58, &qword_2EAF60);
    sub_2D0D0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF50);
  }
  return result;
}

unint64_t sub_2D684()
{
  unint64_t result = qword_2EAF68;
  if (!qword_2EAF68)
  {
    sub_7B0C(&qword_2EAE98);
    sub_2D204();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF68);
  }
  return result;
}

uint64_t sub_2D700()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2D738(uint64_t a1)
{
  return a1;
}

uint64_t sub_2D78C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_2D7A4();
  }
  return result;
}

uint64_t sub_2D7A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2D7AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2D80C@<X0>(uint64_t a1@<X8>)
{
  return sub_21B2C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_2D814()
{
  unint64_t result = qword_2EAF90;
  if (!qword_2EAF90)
  {
    sub_7B0C(&qword_2EAF88);
    sub_7B0C(&qword_2EAF98);
    sub_2D8BC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF90);
  }
  return result;
}

unint64_t sub_2D8BC()
{
  unint64_t result = qword_2EAFA0;
  if (!qword_2EAFA0)
  {
    sub_7B0C(&qword_2EAF98);
    sub_7B0C(&qword_2EAFA8);
    sub_269C80();
    sub_2D9B4();
    sub_2D0D0((unint64_t *)&qword_2EAFF0, (void (*)(uint64_t))&type metadata accessor for YearInReviewExposureEvent);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAFA0);
  }
  return result;
}

unint64_t sub_2D9B4()
{
  unint64_t result = qword_2EAFB0;
  if (!qword_2EAFB0)
  {
    sub_7B0C(&qword_2EAFA8);
    sub_2DA54();
    sub_7C18(&qword_2EAFE0, &qword_2EAFE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAFB0);
  }
  return result;
}

unint64_t sub_2DA54()
{
  unint64_t result = qword_2EAFB8;
  if (!qword_2EAFB8)
  {
    sub_7B0C(&qword_2EAFC0);
    sub_7C18(&qword_2EAFC8, &qword_2EAFD0);
    sub_2DAF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAFB8);
  }
  return result;
}

unint64_t sub_2DAF4()
{
  unint64_t result = qword_2EAFD8;
  if (!qword_2EAFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAFD8);
  }
  return result;
}

uint64_t sub_2DB48()
{
  uint64_t v1 = sub_26A970();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for PagedScrollView(0);
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  unint64_t v7 = (v3 + v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v8 = v0 + v7;
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v7, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v8 + v5[5];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v8 + v5[6]), *(unsigned char *)(v8 + v5[6] + 8));
  uint64_t v12 = v8 + v5[7];
  if (*(unsigned char *)(v12 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v12);
  }
  else {
    swift_release();
  }
  uint64_t v13 = v8 + v5[8];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = v13 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v15 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v8 + v5[9]), *(unsigned char *)(v8 + v5[9] + 8));
  sub_C374(*(void *)(v8 + v5[10]), *(unsigned char *)(v8 + v5[10] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = v8 + v5[14];
  uint64_t v17 = sub_269840();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  return swift_deallocObject();
}

uint64_t sub_2DE9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_26A970() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for PagedScrollView(0) - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_21FCC(a1, v2 + v6, v9, a2);
}

unint64_t sub_2DF80()
{
  unint64_t result = qword_2EB010;
  if (!qword_2EB010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB010);
  }
  return result;
}

unint64_t sub_2DFE4()
{
  unint64_t result = qword_2EB088;
  if (!qword_2EB088)
  {
    sub_7B0C(&qword_2EB068);
    sub_2E084();
    sub_7C18(&qword_2EB108, &qword_2EB110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB088);
  }
  return result;
}

unint64_t sub_2E084()
{
  unint64_t result = qword_2EB090;
  if (!qword_2EB090)
  {
    sub_7B0C(&qword_2EB060);
    sub_2E124();
    sub_7C18(&qword_2EB0F8, &qword_2EB100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB090);
  }
  return result;
}

unint64_t sub_2E124()
{
  unint64_t result = qword_2EB098;
  if (!qword_2EB098)
  {
    sub_7B0C(&qword_2EB058);
    sub_2E1D0();
    sub_2D0D0(&qword_2EB0F0, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB098);
  }
  return result;
}

unint64_t sub_2E1D0()
{
  unint64_t result = qword_2EB0A0;
  if (!qword_2EB0A0)
  {
    sub_7B0C(&qword_2EB050);
    sub_2E24C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0A0);
  }
  return result;
}

unint64_t sub_2E24C()
{
  unint64_t result = qword_2EB0A8;
  if (!qword_2EB0A8)
  {
    sub_7B0C(&qword_2EB048);
    sub_2E2EC();
    sub_7C18(&qword_2EB0E0, &qword_2EB0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0A8);
  }
  return result;
}

unint64_t sub_2E2EC()
{
  unint64_t result = qword_2EB0B0;
  if (!qword_2EB0B0)
  {
    sub_7B0C(&qword_2EB040);
    sub_2E38C();
    sub_7C18((unint64_t *)&qword_2EB0D8, &qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0B0);
  }
  return result;
}

unint64_t sub_2E38C()
{
  unint64_t result = qword_2EB0B8;
  if (!qword_2EB0B8)
  {
    sub_7B0C(&qword_2EB0C0);
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0B8);
  }
  return result;
}

unint64_t sub_2E42C()
{
  unint64_t result = qword_2EB128;
  if (!qword_2EB128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB128);
  }
  return result;
}

unint64_t sub_2E480()
{
  unint64_t result = qword_2EB130;
  if (!qword_2EB130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB130);
  }
  return result;
}

uint64_t sub_2E4D4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 24) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IsVisibleFrameKey()
{
  return &type metadata for IsVisibleFrameKey;
}

unint64_t sub_2E538()
{
  unint64_t result = qword_2EB138;
  if (!qword_2EB138)
  {
    sub_7B0C(&qword_2EAD48);
    sub_7C18(&qword_2EB140, &qword_2EAD40);
    sub_7C18(&qword_2EB148, &qword_2EB150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB138);
  }
  return result;
}

unint64_t sub_2E600()
{
  unint64_t result = qword_2EB158;
  if (!qword_2EB158)
  {
    sub_7B0C(&qword_2EAD50);
    sub_7C18(&qword_2EB160, &qword_2EAD60);
    sub_7C18((unint64_t *)&qword_2EAD70, &qword_2EAD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB158);
  }
  return result;
}

uint64_t sub_2E6C4()
{
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  sub_7B0C(&qword_2EAD68);
  sub_26ABD0();
  swift_getTupleTypeMetadata2();
  sub_26C770();
  swift_getWitnessTable();
  sub_26C460();

  return swift_getWitnessTable();
}

void *sub_2E7BC()
{
  return &protocol witness table for AnyView;
}

double sub_2E7D0()
{
  return sub_2CA08();
}

double sub_2E7E8()
{
  return sub_2C9F0();
}

uint64_t AverageMonthlyReadingFrameViewModel.MonthAverage.init(date:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  *(unsigned char *)(a2 + *(int *)(v6 + 24)) = 0;
  uint64_t v7 = sub_269810();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  *(double *)(a2 + *(int *)(v6 + 20)) = a3;
  return result;
}

uint64_t type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1)
{
  return sub_2A148(a1, qword_2EB2F8);
}

uint64_t AverageMonthlyReadingFrameViewModel.MonthAverage.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_269810();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AverageMonthlyReadingFrameViewModel.MonthAverage.description.getter()
{
  uint64_t v0 = sub_269750();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v36 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_2697A0();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_269770();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2697B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v30 - v16;
  __chkstk_darwin(v15);
  unsigned int v30 = (char *)&v30 - v18;
  uint64_t v19 = sub_269810();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_26DA90(18);
  swift_bridgeObjectRelease();
  uint64_t v41 = 0x203A65746164;
  unint64_t v42 = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v39, v19);
  sub_269470();
  sub_269760();
  sub_269720();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v11, v7);
  size_t v24 = v33;
  sub_269780();
  sub_269730();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
  v23(v14, v7);
  int v25 = v36;
  sub_269740();
  unsigned int v26 = v30;
  sub_269700();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v38);
  v23(v17, v7);
  sub_35858(&qword_2EB1B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_2697F0();
  v23(v26, v7);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_26D4E0(v40);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0x203A65756C617620;
  v43._object = (void *)0xE800000000000000;
  sub_26D4E0(v43);
  sub_4A98(&qword_2EA308);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_26F990;
  uint64_t v28 = *(void *)(v39 + *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0) + 20));
  *(void *)(v27 + 56) = &type metadata for Double;
  *(void *)(v27 + 64) = &protocol witness table for Double;
  *(void *)(v27 + 32) = v28;
  v44._countAndFlagsBits = sub_26D440();
  sub_26D4E0(v44);
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t AverageMonthlyReadingFrameViewModel.MonthAverage.axLabel.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2697A0();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_269670();
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_269990();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_269970();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_269920();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_4A98(&qword_2EB1B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EB1C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2697B0();
  uint64_t v32 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v31 = sub_269810();
  uint64_t v21 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v23, v1);
  uint64_t v24 = sub_2696F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  uint64_t v25 = sub_2696E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
  sub_2698B0();
  sub_269950();
  sub_269980();
  sub_269660();
  sub_269710();
  unsigned int v26 = v35;
  sub_269790();
  sub_269730();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v37);
  uint64_t v27 = v33;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v32 + 8);
  v28(v18, v33);
  sub_35858(&qword_2EB1B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_2697F0();
  v28(v20, v27);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v31);
  return v38;
}

uint64_t AverageMonthlyReadingFrameViewModel.MonthAverage.axValue.getter()
{
  uint64_t v0 = sub_26E020();
  uint64_t v22 = *(void *)(v0 - 8);
  uint64_t v23 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26E000();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26E080();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_26E090();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  uint64_t v12 = sub_26E0B0();
  v17[0] = v13;
  v17[1] = v12;
  sub_4A98(&qword_2EB1C8);
  sub_26E050();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_270BF0;
  sub_26E040();
  sub_26E030();
  sub_35540(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_26E060();
  sub_26DFF0();
  sub_26E010();
  sub_269480();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v2, v23);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  sub_35858(&qword_2EB1D0, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
  uint64_t v15 = v18;
  sub_26E0A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v15);
  return v24;
}

uint64_t static AverageMonthlyReadingFrameViewModel.MonthAverage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_2697E0() & 1) != 0
    && (uint64_t v4 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0),
        *(double *)(a1 + *(int *)(v4 + 20)) == *(double *)(a2 + *(int *)(v4 + 20))))
  {
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_2F814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_2697E0() & 1) != 0 && *(double *)(a1 + *(int *)(a3 + 20)) == *(double *)(a2 + *(int *)(a3 + 20))) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 24)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t AverageMonthlyReadingFrameViewModel.init(dailyAverageReadingTime:monthlyAverages:exposureData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = a1;
  uint64_t v5 = a3 + *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v6 = sub_269BE0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_2F910()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-v3];
  uint64_t v5 = sub_26D3E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v16[-v10];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v9, v11, v5);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v13 = [self bundleForClass:ObjCClassFromMetadata];
  sub_2698C0();
  uint64_t v14 = sub_26D450();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  return v14;
}

uint64_t sub_2FB94()
{
  uint64_t v1 = sub_2697A0();
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2697B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v35 - v7;
  uint64_t v42 = sub_269810();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EB650);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v35 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(v0 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_6:
    sub_B6DC((uint64_t)v11, &qword_2EB650);
    return 0;
  }
  uint64_t v35 = v4;
  uint64_t v36 = v3;
  uint64_t v24 = v22 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  sub_358E0(v24, (uint64_t)v19, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
  uint64_t result = swift_bridgeObjectRetain();
  if (v23 == 1)
  {
LABEL_3:
    sub_3992C((uint64_t)v19, (uint64_t)v11, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_3992C((uint64_t)v11, (uint64_t)v21, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
      uint64_t v26 = v40;
      uint64_t v27 = v38;
      uint64_t v28 = v42;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v38, v21, v42);
      uint64_t v29 = v37;
      sub_269470();
      uint64_t v30 = v39;
      sub_269790();
      uint64_t v31 = v41;
      sub_269730();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v44);
      uint64_t v32 = v36;
      uint64_t v33 = *(void (**)(char *, uint64_t))(v35 + 8);
      v33(v29, v36);
      sub_35858(&qword_2EB1B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
      sub_2697F0();
      v33(v31, v32);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
      sub_39A4C((uint64_t)v21, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
      return v45;
    }
    goto LABEL_6;
  }
  unint64_t v34 = 1;
  while (v34 < *(void *)(v22 + 16))
  {
    sub_358E0(v24 + *(void *)(v13 + 72) * v34, (uint64_t)v16, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    if (*(double *)&v19[*(int *)(v12 + 20)] >= *(double *)&v16[*(int *)(v12 + 20)])
    {
      uint64_t result = sub_39A4C((uint64_t)v16, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    }
    else
    {
      sub_39A4C((uint64_t)v19, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
      uint64_t result = sub_3992C((uint64_t)v16, (uint64_t)v19, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    }
    if (v23 == ++v34) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

void sub_30160()
{
  uint64_t v1 = sub_269920();
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v22 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - v3;
  uint64_t v20 = sub_26D3E0();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = __chkstk_darwin(v20);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_26D3C0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_2FB94();
  uint64_t v14 = v13;
  if (v13)
  {
    sub_26D3B0();
    v24._countAndFlagsBits = 0xD000000000000017;
    v24._object = (void *)0x80000000002880C0;
    sub_26D3A0(v24);
    double v15 = ceil(*v0 / 60.0);
    if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          uint64_t v23 = (uint64_t)v15;
          sub_26D380();
          v25._object = (void *)0x80000000002880E0;
          v25._countAndFlagsBits = 0xD000000000000010;
          sub_26D3A0(v25);
          v26._countAndFlagsBits = v12;
          v26._object = v14;
          sub_26D390(v26);
          swift_bridgeObjectRelease();
          v27._countAndFlagsBits = 0xD000000000000015;
          v27._object = (void *)0x8000000000288100;
          sub_26D3A0(v27);
          sub_26D3D0();
          sub_2698C0();
          uint64_t v16 = v20;
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v20);
          type metadata accessor for BundleFinder();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          id v18 = [self bundleForClass:ObjCClassFromMetadata];
          sub_2698C0();
          sub_26D450();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v16);
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_30530()
{
  uint64_t v1 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t v8 = sub_4A98(&qword_2EB650);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v0 + *(int *)(type metadata accessor for AverageMonthlyReadingChart(0) + 40));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  v20[1] = v13;
  v20[2] = v12;
  sub_4A98(&qword_2EB510);
  sub_26C350();
  uint64_t v14 = v21;
  uint64_t v15 = *(void *)(v21 + 16);
  if (!v15)
  {
    uint64_t v18 = 1;
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, v18, 1, v1);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1) {
      return sub_B6DC((uint64_t)v10, &qword_2EB650);
    }
    else {
      return sub_39A4C((uint64_t)v10, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    }
  }
  uint64_t v16 = v21 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_358E0(v16, (uint64_t)v7, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
  uint64_t result = swift_bridgeObjectRetain();
  if (v15 == 1)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    sub_3992C((uint64_t)v7, (uint64_t)v10, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    uint64_t v18 = 0;
    goto LABEL_5;
  }
  unint64_t v19 = 1;
  while (v19 < *(void *)(v14 + 16))
  {
    sub_358E0(v16 + *(void *)(v2 + 72) * v19, (uint64_t)v5, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    if (*(double *)&v7[*(int *)(v1 + 20)] >= *(double *)&v5[*(int *)(v1 + 20)])
    {
      uint64_t result = sub_39A4C((uint64_t)v5, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    }
    else
    {
      sub_39A4C((uint64_t)v7, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
      uint64_t result = sub_3992C((uint64_t)v5, (uint64_t)v7, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
    }
    if (v15 == ++v19) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_30850()
{
  uint64_t v0 = sub_26B160();
  sub_6E18(v0, qword_2EB168);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2EB168);
  uint64_t v2 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

void sub_308D8()
{
  qword_2EB180 = 0;
}

void sub_308E4()
{
  qword_2EB188 = 0x4010000000000000;
}

uint64_t sub_308F4()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v20[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v20[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  qword_2EB190 = v16;
  *(void *)algn_2EB198 = v18;
  return result;
}

uint64_t sub_30B74()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v20[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v20[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  qword_2EB1A0 = v16;
  *(void *)algn_2EB1A8 = v18;
  return result;
}

uint64_t sub_30DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v117 = sub_4A98(&qword_2EB4B8);
  __chkstk_darwin(v117);
  uint64_t v150 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2EB4C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v145 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v132 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_26B4B0();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v110 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_4A98(&qword_2EB4C8);
  __chkstk_darwin(v121);
  uint64_t v122 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EB3E0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v111 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v120 = (char *)&v110 - v13;
  __chkstk_darwin(v12);
  uint64_t v119 = (uint64_t)&v110 - v14;
  uint64_t v133 = sub_26A480();
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v129 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AverageMonthlyReadingChart(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v127 = sub_4A98(&qword_2EB4D0);
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v155 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_4A98(&qword_2EB4D8);
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v125 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_4A98(&qword_2EB4E0);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v137 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_4A98(&qword_2EB4E8);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v141 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_4A98(&qword_2EB4F0);
  __chkstk_darwin(v138);
  uint64_t v144 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_4A98(&qword_2EB4F8);
  __chkstk_darwin(v147);
  uint64_t v146 = (uint64_t)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_4A98(&qword_2EB500);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v148 = (char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_4A98(&qword_2EB508);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v112 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = v16;
  uint64_t v157 = v1;
  Swift::String v27 = (uint64_t *)(v1 + *(int *)(v16 + 40));
  uint64_t v29 = *v27;
  double v28 = *((double *)v27 + 1);
  uint64_t v158 = v29;
  double v159 = v28;
  sub_4A98(&qword_2EB510);
  sub_26C350();
  sub_358E0(v1, (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AverageMonthlyReadingChart);
  uint64_t v30 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v31 = (v30 + 16) & ~v30;
  uint64_t v135 = v31 + v18;
  uint64_t v134 = v30 | 7;
  uint64_t v32 = swift_allocObject();
  uint64_t v136 = v31;
  uint64_t v149 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3992C(v149, v32 + v31, type metadata accessor for AverageMonthlyReadingChart);
  uint64_t v154 = sub_4A98(&qword_2EB518);
  uint64_t v153 = sub_4A98(&qword_2EB520);
  uint64_t v152 = sub_7C18(&qword_2EB528, &qword_2EB518);
  uint64_t v151 = sub_7B0C(&qword_2EB530);
  uint64_t v33 = sub_7B0C(&qword_2EB538);
  uint64_t v34 = sub_7B0C(&qword_2EB540);
  *(double *)&uint64_t v35 = COERCE_DOUBLE(sub_7B0C(&qword_2EB548));
  uint64_t v36 = sub_7B0C(&qword_2EB550);
  *(double *)&uint64_t v37 = COERCE_DOUBLE(sub_7B0C(&qword_2EB558));
  uint64_t v38 = sub_7B0C(&qword_2EB560);
  *(double *)&uint64_t v39 = COERCE_DOUBLE(sub_26B4A0());
  uint64_t v158 = sub_26A4F0();
  double v159 = COERCE_DOUBLE(&type metadata for Color);
  uint64_t v160 = &protocol witness table for BarMark;
  uint64_t v161 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = sub_35858(&qword_2EB568, (void (*)(uint64_t))&type metadata accessor for UnevenRoundedRectangle);
  uint64_t v158 = v38;
  double v159 = *(double *)&v39;
  uint64_t v160 = (void *)OpaqueTypeConformance2;
  uint64_t v161 = (void *)v41;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  unint64_t v43 = sub_399AC();
  uint64_t v158 = v36;
  double v159 = *(double *)&v37;
  uint64_t v160 = (void *)v42;
  uint64_t v161 = (void *)v43;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = sub_39B20(&qword_2EB578, &qword_2EB548, &qword_2EB580, &qword_2EB588);
  uint64_t v158 = v34;
  double v159 = *(double *)&v35;
  uint64_t v160 = (void *)v44;
  uint64_t v161 = (void *)v45;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  unint64_t v47 = sub_CC78();
  uint64_t v158 = v33;
  double v159 = COERCE_DOUBLE(&type metadata for String);
  uint64_t v160 = (void *)v46;
  uint64_t v161 = (void *)v47;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v158 = v151;
  double v159 = COERCE_DOUBLE(&type metadata for String);
  uint64_t v160 = (void *)v48;
  uint64_t v161 = (void *)v47;
  swift_getOpaqueTypeConformance2();
  sub_35858(&qword_2EB590, (void (*)(uint64_t))type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
  sub_26A4D0();
  uint64_t result = sub_30530();
  if (v50 < 0.0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v158 = 0;
  double v159 = v50;
  uint64_t v51 = (uint64_t *)(v157 + *(int *)(v156 + 44));
  uint64_t v52 = *v51;
  uint64_t v53 = v51[1];
  uint64_t v164 = v52;
  uint64_t v165 = v53;
  sub_4A98(&qword_2EB598);
  sub_26C350();
  uint64_t v54 = v119;
  sub_41314(v119);
  uint64_t v55 = v123;
  uint64_t v56 = (uint64_t)v120;
  uint64_t v57 = v124;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v120, enum case for UserInterfaceSizeClass.compact(_:), v124);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v57);
  uint64_t v58 = v122;
  uint64_t v59 = v122 + *(int *)(v121 + 48);
  sub_B678(v54, v122, &qword_2EB3E0);
  sub_B678(v56, v59, &qword_2EB3E0);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v60(v58, 1, v57) == 1)
  {
    sub_B6DC(v56, &qword_2EB3E0);
    sub_B6DC(v54, &qword_2EB3E0);
    if (v60(v59, 1, v57) == 1)
    {
      sub_B6DC(v58, &qword_2EB3E0);
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  uint64_t v61 = v111;
  sub_B678(v58, v111, &qword_2EB3E0);
  if (v60(v59, 1, v57) == 1)
  {
    sub_B6DC(v56, &qword_2EB3E0);
    sub_B6DC(v54, &qword_2EB3E0);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v61, v57);
LABEL_7:
    sub_B6DC(v58, &qword_2EB4C8);
    goto LABEL_9;
  }
  uint64_t v62 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v110, v59, v57);
  sub_35858((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  sub_26D360();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v55 + 8);
  v63(v62, v57);
  sub_B6DC(v56, &qword_2EB3E0);
  sub_B6DC(v54, &qword_2EB3E0);
  v63((char *)v61, v57);
  sub_B6DC(v58, &qword_2EB3E0);
LABEL_9:
  uint64_t v64 = v132;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v132);
  sub_39A4C(v64, type metadata accessor for SizeConstants.Spacing);
  double v65 = 0.0;
  uint64_t v66 = v129;
  sub_26A470();
  uint64_t v67 = sub_26A530();
  uint64_t v68 = (uint64_t)v145;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v145, 1, 1, v67);
  *(double *)&uint64_t v69 = COERCE_DOUBLE(sub_4A98(&qword_2EB5A0));
  uint64_t v70 = sub_7C18(&qword_2EB5A8, &qword_2EB4D0);
  unint64_t v71 = sub_39AAC();
  uint64_t v72 = v125;
  uint64_t v73 = v127;
  uint64_t v74 = (void *)v133;
  uint64_t v75 = v155;
  sub_26BBD0();
  sub_B6DC(v68, &qword_2EB4C0);
  (*(void (**)(char *, void *))(v131 + 8))(v66, v74);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v75, v73);
  uint64_t v158 = v73;
  double v159 = *(double *)&v69;
  uint64_t v160 = v74;
  uint64_t v161 = (void *)v70;
  unint64_t v162 = v71;
  uint64_t v163 = &protocol witness table for PlotDimensionScaleRange;
  *(double *)&uint64_t v76 = COERCE_DOUBLE(swift_getOpaqueTypeConformance2());
  uint64_t v77 = v137;
  uint64_t v78 = v130;
  sub_26BBB0();
  uint64_t v79 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v72, v78);
  __chkstk_darwin(v79);
  uint64_t v80 = v157;
  sub_4A98(&qword_2EB5B8);
  uint64_t v158 = v78;
  double v159 = *(double *)&v76;
  swift_getOpaqueTypeConformance2();
  uint64_t v81 = sub_7B0C(&qword_2EB5C0);
  *(double *)&uint64_t v82 = COERCE_DOUBLE(sub_7B0C(&qword_2EB5C8));
  uint64_t v83 = sub_7C18(&qword_2EB5D0, &qword_2EB5C0);
  uint64_t v84 = sub_39B20(&qword_2EB5D8, &qword_2EB5C8, &qword_2EB5E0, &qword_2EB5E8);
  uint64_t v158 = v81;
  double v159 = *(double *)&v82;
  uint64_t v160 = (void *)v83;
  uint64_t v161 = (void *)v84;
  swift_getOpaqueTypeConformance2();
  double v85 = v141;
  uint64_t v86 = v140;
  sub_26BBC0();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v77, v86);
  uint64_t v87 = v80 + *(int *)(v156 + 36);
  uint64_t v88 = *(void *)v87;
  LOBYTE(v75) = *(unsigned char *)(v87 + 8);
  sub_10E0C(*(void *)v87, (char)v75);
  LOBYTE(v76) = sub_40900(v88, (char)v75);
  sub_C374(v88, (char)v75);
  if (v76) {
    double v65 = 1.0;
  }
  uint64_t v89 = v142;
  uint64_t v90 = (uint64_t)v144;
  uint64_t v91 = v143;
  (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v144, v85, v143);
  *(double *)(v90 + *(int *)(v138 + 36)) = v65;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v85, v91);
  uint64_t v92 = sub_26C6A0();
  uint64_t v93 = *(void *)v87;
  char v94 = *(unsigned char *)(v87 + 8);
  sub_10E0C(*(void *)v87, v94);
  char v95 = sub_40900(v93, v94);
  sub_C374(v93, v94);
  uint64_t v96 = v146;
  sub_B678(v90, v146, &qword_2EB4F0);
  uint64_t v97 = v147;
  uint64_t v98 = v96 + *(int *)(v147 + 36);
  *(void *)uint64_t v98 = v92;
  *(unsigned char *)(v98 + 8) = v95 & 1;
  sub_B6DC(v90, &qword_2EB4F0);
  uint64_t v99 = *(void *)v87;
  LOBYTE(v93) = *(unsigned char *)(v87 + 8);
  sub_10E0C(*(void *)v87, v93);
  char v100 = sub_40900(v99, v93);
  sub_C374(v99, v93);
  LOBYTE(v158) = v100 & 1;
  uint64_t v101 = v149;
  sub_358E0(v80, v149, type metadata accessor for AverageMonthlyReadingChart);
  uint64_t v102 = swift_allocObject();
  sub_3992C(v101, v102 + v136, type metadata accessor for AverageMonthlyReadingChart);
  unint64_t v103 = sub_39F58();
  uint64_t v104 = v148;
  sub_26C050();
  swift_release();
  sub_B6DC(v96, &qword_2EB4F8);
  uint64_t v105 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v106 = sub_26AB40();
  uint64_t v107 = (uint64_t)v150;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 104))(v150, v105, v106);
  sub_35858(&qword_2EB610, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D360();
  if (result)
  {
    uint64_t v158 = v97;
    double v159 = COERCE_DOUBLE(&type metadata for Bool);
    uint64_t v160 = (void *)v103;
    uint64_t v161 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EB618, &qword_2EB4B8);
    uint64_t v108 = v112;
    uint64_t v109 = v116;
    sub_26BD90();
    sub_B6DC(v107, &qword_2EB4B8);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v104, v109);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v113 + 32))(v118, v108, v114);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_3233C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v109 = a1;
  uint64_t v106 = a3;
  uint64_t v4 = sub_26A460();
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v105 = v4;
  __chkstk_darwin(v4);
  unint64_t v103 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_26B4A0();
  __chkstk_darwin(v95);
  uint64_t v7 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v8 - 8);
  unint64_t v88 = (unint64_t)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EB628);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_269960();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v15 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EB658);
  __chkstk_darwin(v16 - 8);
  v80[1] = (char *)v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2EB660);
  __chkstk_darwin(v18 - 8);
  uint64_t v83 = sub_26A4F0();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_4A98(&qword_2EB560);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v107 = (char *)v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_4A98(&qword_2EB550);
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v86 = (char *)v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_4A98(&qword_2EB540);
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_4A98(&qword_2EB538);
  uint64_t v94 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v92 = (char *)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EB530);
  uint64_t v101 = *(void *)(v25 - 8);
  uint64_t v102 = v25;
  __chkstk_darwin(v25);
  uint64_t v98 = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_4A98(&qword_2EB520);
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v96 = (char *)v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9B60 != -1) {
    swift_once();
  }
  uint64_t v112 = qword_2EB190;
  uint64_t v113 = *(void **)algn_2EB198;
  uint64_t v28 = *(int *)(type metadata accessor for AverageMonthlyReadingChart(0) + 32);
  uint64_t v108 = a2;
  uint64_t v29 = a2 + v28;
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  swift_bridgeObjectRetain();
  sub_10E0C(v30, v31);
  char v32 = sub_40900(v30, v31);
  sub_C374(v30, v31);
  uint64_t v33 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  if ((v32 & 1) == 0 || (uint64_t v34 = 0, *(unsigned char *)(v109 + *(int *)(v33 + 24)) == 1)) {
    uint64_t v34 = *(void *)(v109 + *(int *)(v33 + 20));
  }
  uint64_t v110 = v34;
  unint64_t v35 = sub_CC78();
  sub_26A420();
  swift_bridgeObjectRelease();
  if (qword_2E9B68 != -1) {
    swift_once();
  }
  uint64_t v112 = qword_2EB1A0;
  uint64_t v113 = *(void **)algn_2EB1A8;
  uint64_t v36 = v81;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Calendar.Component.month(_:), v81);
  uint64_t v37 = sub_269970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v12, 1, 1, v37);
  swift_bridgeObjectRetain();
  sub_26A410();
  sub_B6DC((uint64_t)v12, &qword_2EB628);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  swift_bridgeObjectRelease();
  sub_269810();
  sub_26A4E0();
  uint64_t v38 = v88;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v88);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v39 = sub_26C1C0();
  swift_release();
  sub_39A4C(v38, type metadata accessor for ColorConstants);
  uint64_t v112 = v39;
  uint64_t v40 = v83;
  sub_26A370();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v40);
  if (qword_2E9B50 != -1) {
    swift_once();
  }
  if (qword_2E9B58 != -1) {
    swift_once();
  }
  unint64_t v88 = v35;
  if (qword_2E9B48 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_26B160();
  uint64_t v42 = sub_6B14(v41, (uint64_t)qword_2EB168);
  unint64_t v43 = (void *)v95;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(&v7[*(int *)(v95 + 20)], v42, v41);
  sub_26B340();
  *(void *)uint64_t v7 = v44;
  *((void *)v7 + 1) = v45;
  *((void *)v7 + 2) = v46;
  *((void *)v7 + 3) = v47;
  uint64_t v112 = v40;
  uint64_t v113 = &type metadata for Color;
  uint64_t v114 = &protocol witness table for BarMark;
  uint64_t v115 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = sub_35858(&qword_2EB568, (void (*)(uint64_t))&type metadata accessor for UnevenRoundedRectangle);
  double v50 = v86;
  uint64_t v51 = v85;
  uint64_t v52 = v107;
  sub_26A3B0();
  sub_39A4C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v51);
  uint64_t v53 = v103;
  uint64_t v54 = sub_26A450();
  uint64_t v107 = (char *)v80;
  __chkstk_darwin(v54);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v55 = sub_4A98(&qword_2EB558);
  uint64_t v112 = v51;
  uint64_t v113 = v43;
  uint64_t v114 = (void *)OpaqueTypeConformance2;
  uint64_t v115 = (void *)v49;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  unint64_t v57 = sub_399AC();
  uint64_t v58 = v90;
  uint64_t v59 = v89;
  sub_26A360();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v53, v105);
  uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v50, v59);
  __chkstk_darwin(v60);
  uint64_t v61 = sub_4A98(&qword_2EB548);
  uint64_t v112 = v59;
  uint64_t v113 = (void *)v55;
  uint64_t v114 = (void *)v56;
  uint64_t v115 = (void *)v57;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = sub_39B20(&qword_2EB578, &qword_2EB548, &qword_2EB580, &qword_2EB588);
  uint64_t v64 = v92;
  uint64_t v65 = v93;
  sub_26A380();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v65);
  uint64_t v110 = AverageMonthlyReadingFrameViewModel.MonthAverage.axLabel.getter();
  uint64_t v111 = v66;
  uint64_t v112 = v65;
  uint64_t v113 = (void *)v61;
  uint64_t v114 = (void *)v62;
  uint64_t v115 = (void *)v63;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v68 = v98;
  uint64_t v69 = v100;
  uint64_t v70 = v88;
  sub_26A390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v69);
  sub_4A98(&qword_2EADB0);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_270BF0;
  uint64_t v72 = *(void *)algn_2EB198;
  *(void *)(v71 + 32) = qword_2EB190;
  *(void *)(v71 + 40) = v72;
  swift_bridgeObjectRetain();
  *(void *)(v71 + 48) = AverageMonthlyReadingFrameViewModel.MonthAverage.axValue.getter();
  *(void *)(v71 + 56) = v73;
  uint64_t v112 = v71;
  sub_4A98(&qword_2E9F78);
  sub_7C18((unint64_t *)&qword_2E9F80, &qword_2E9F78);
  uint64_t v74 = sub_26D310();
  uint64_t v76 = v75;
  swift_bridgeObjectRelease();
  uint64_t v110 = v74;
  uint64_t v111 = v76;
  uint64_t v112 = v69;
  uint64_t v113 = &type metadata for String;
  uint64_t v114 = (void *)v67;
  uint64_t v115 = (void *)v70;
  swift_getOpaqueTypeConformance2();
  uint64_t v77 = v96;
  uint64_t v78 = v102;
  sub_26A3A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v68, v78);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v97 + 32))(v106, v77, v99);
}

uint64_t sub_332C4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v56 = a2;
  uint64_t v2 = type metadata accessor for AverageMonthlyReadingChart(0);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (uint64_t)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26E020();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26E000();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_26E080();
  uint64_t v12 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_26E090();
  uint64_t v15 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
  uint64_t v18 = sub_26E0B0();
  v44[0] = v19;
  v44[1] = v18;
  sub_4A98(&qword_2EB1C8);
  sub_26E050();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_270BF0;
  sub_26E040();
  sub_26E030();
  sub_35540(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_26E070();
  sub_26DFF0();
  sub_26E010();
  sub_269480();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v48);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v46);
  sub_35858(&qword_2EB1D0, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
  uint64_t v21 = v45;
  sub_26E0A0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v21);
  sub_CC78();
  uint64_t v22 = sub_26BB00();
  uint64_t v24 = v23;
  LOBYTE(v8) = v25 & 1;
  _s7BooksUI13FontConstantsV6ButtonV8subtitle05SwiftB00C0Vvg_0();
  uint64_t v26 = sub_26BA80();
  uint64_t v28 = v27;
  LOBYTE(v12) = v29;
  swift_release();
  LOBYTE(v20) = v12 & 1;
  sub_3A380(v22, v24, (char)v8);
  swift_bridgeObjectRelease();
  uint64_t v31 = v51;
  uint64_t v30 = v52;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v51);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v32 = sub_26C1C0();
  swift_release();
  sub_39A4C(v31, type metadata accessor for ColorConstants);
  uint64_t v57 = v32;
  uint64_t v33 = sub_26BA40();
  uint64_t v35 = v34;
  LOBYTE(v8) = v36;
  uint64_t v38 = v37;
  sub_3A380(v26, v28, v20);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v53;
  sub_358E0(v30, v53, type metadata accessor for AverageMonthlyReadingChart);
  unint64_t v40 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v41 = swift_allocObject();
  uint64_t result = sub_3992C(v39, v41 + v40, type metadata accessor for AverageMonthlyReadingChart);
  unint64_t v43 = v56;
  *uint64_t v56 = v33;
  v43[1] = v35;
  *((unsigned char *)v43 + 16) = v8 & 1;
  v43[3] = v38;
  v43[4] = (uint64_t)sub_33964;
  v43[5] = 0;
  v43[6] = (uint64_t)sub_3A394;
  v43[7] = v41;
  return result;
}

uint64_t sub_33964@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26A940();
  *a1 = v3;
  return result;
}

uint64_t sub_33990()
{
  return sub_26C360();
}

uint64_t sub_33A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v34 = a2;
  uint64_t v2 = type metadata accessor for AverageMonthlyReadingChart(0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v30 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = sub_4A98(&qword_2EB628);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_269960();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26A3F0();
  __chkstk_darwin(v11 - 8);
  char v29 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_26A440();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_26A3D0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_4A98(&qword_2EB5C0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v32 = v15;
  uint64_t v33 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26A3C0();
  sub_26A430();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Calendar.Component.month(_:), v7);
  uint64_t v19 = sub_269970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  sub_26A3E0();
  sub_B6DC((uint64_t)v6, &qword_2EB628);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v20 = v31;
  sub_358E0(v31, (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AverageMonthlyReadingChart);
  unint64_t v21 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v22 = swift_allocObject();
  sub_3992C((uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for AverageMonthlyReadingChart);
  sub_4A98(&qword_2EB630);
  uint64_t v23 = sub_7B0C(&qword_2EB638);
  uint64_t v24 = sub_7B0C(&qword_2EB640);
  uint64_t v25 = sub_7C18(&qword_2EB648, &qword_2EB640);
  uint64_t v36 = v24;
  uint64_t v37 = (void *)v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = v23;
  uint64_t v37 = &type metadata for Color;
  uint64_t v38 = OpaqueTypeConformance2;
  uint64_t v39 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  sub_26A520();
  uint64_t v35 = v20;
  sub_4A98(&qword_2EB5C8);
  sub_7C18(&qword_2EB5D0, &qword_2EB5C0);
  sub_39B20(&qword_2EB5D8, &qword_2EB5C8, &qword_2EB5E0, &qword_2EB5E8);
  uint64_t v27 = v32;
  sub_26A350();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v27);
}

uint64_t sub_33FBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v2 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v34 = (uint64_t)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26A4A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v31 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A4C0();
  __chkstk_darwin(v6 - 8);
  v29[1] = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2697A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2697B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = sub_4A98(&qword_2EB640);
  uint64_t v30 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2EB638);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v32 = v20;
  uint64_t v33 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_269470();
  sub_269780();
  sub_269730();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_26C800();
  sub_26A4B0();
  sub_26A490();
  sub_35858(&qword_2EB1B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_26A400();
  sub_26B950();
  sub_26B800();
  swift_release();
  uint64_t v24 = sub_7C18(&qword_2EB648, &qword_2EB640);
  sub_26A510();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v17);
  uint64_t v25 = v34;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v34);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v26 = sub_26C1C0();
  swift_release();
  sub_39A4C(v25, type metadata accessor for ColorConstants);
  uint64_t v38 = v24;
  uint64_t v39 = v26;
  uint64_t v37 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v32;
  sub_26A500();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v23, v27);
}

uint64_t sub_34528@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_26C700();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AverageMonthlyReadingChart(0);
  sub_41340((uint64_t)v11);
  uint64_t v12 = sub_4A98(a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4 + *(int *)(v12 + 36), v11, v8);
  uint64_t v13 = sub_4A98(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a4, a1, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_34684(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  type metadata accessor for AverageMonthlyReadingChart(0);
  if (v2 == 1)
  {
    sub_4A98(&qword_2EB510);
    sub_26C350();
    uint64_t v3 = *(void *)(v10 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        sub_26C6D0();
        sub_26C680();
        uint64_t v6 = swift_release();
        __chkstk_darwin(v6);
        sub_26A9D0();
        uint64_t result = swift_release();
      }
    }
  }
  else
  {
    sub_4A98(&qword_2EB510);
    sub_26C350();
    uint64_t v7 = *(void *)(v10 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7)
    {
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = v8 + 1;
        __chkstk_darwin(result);
        sub_26C6E0();
        sub_26A9D0();
        uint64_t result = swift_release();
        uint64_t v8 = v9;
      }
      while (v7 != v9);
    }
  }
  return result;
}

uint64_t sub_34898(uint64_t a1, unint64_t a2, char a3)
{
  type metadata accessor for AverageMonthlyReadingChart(0);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EB510);
  sub_26C350();
  unint64_t v5 = v8;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_231FC0(v8);
  unint64_t v5 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v5 + 16) > a2)
  {
    uint64_t v7 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0);
    *(unsigned char *)(v5
             + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80))
             + *(void *)(*(void *)(v7 - 8) + 72) * a2
             + *(int *)(v7 + 24)) = a3;
    sub_26C360();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_349F0@<D0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  int v2 = (int *)type metadata accessor for AverageMonthlyReadingChart(0);
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  uint64_t *v3 = swift_getKeyPath();
  sub_4A98(&qword_2EB3D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)((char *)a1 + v2[6]);
  *uint64_t v4 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  unint64_t v5 = (uint64_t *)((char *)a1 + v2[7]);
  uint64_t *v5 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a1 + v2[8];
  *(void *)uint64_t v6 = swift_getKeyPath();
  v6[8] = 0;
  uint64_t v7 = (char *)a1 + v2[9];
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[8] = 0;
  unint64_t v8 = (double *)((char *)a1 + v2[10]);
  sub_4A98(&qword_2EB518);
  sub_26C340();
  double *v8 = v11;
  *((void *)v8 + 1) = v12;
  uint64_t v9 = (double *)((char *)a1 + v2[11]);
  sub_26C340();
  double result = v11;
  *uint64_t v9 = v11;
  *((void *)v9 + 1) = v12;
  return result;
}

uint64_t AverageMonthlyReadingFrame.alignment.getter()
{
  return *(void *)v0;
}

uint64_t AverageMonthlyReadingFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AverageMonthlyReadingFrame(0);
  return sub_358E0(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PageBackground);
}

uint64_t AverageMonthlyReadingFrame.sharableView.getter()
{
  uint64_t v1 = type metadata accessor for AverageMonthlyReadingFrame(0);
  __chkstk_darwin(v1);
  sub_358E0(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AverageMonthlyReadingFrame);
  sub_35858(&qword_2EB1D8, (void (*)(uint64_t))type metadata accessor for AverageMonthlyReadingFrame);
  return sub_26C470();
}

uint64_t AverageMonthlyReadingFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AverageMonthlyReadingFrame(0) + 24);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_35858(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_35858(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t AverageMonthlyReadingFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_26C620();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for AverageMonthlyReadingFrame(0);
  uint64_t v6 = (uint64_t *)((char *)a2 + *(int *)(v5 + 20));
  uint64_t v7 = (char *)v6 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  *uint64_t v6 = sub_26C110();
  uint64_t v8 = enum case for ColorScheme.light(_:);
  uint64_t v9 = sub_26A6E0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  return sub_3992C(a1, (uint64_t)a2 + *(int *)(v5 + 24), type metadata accessor for AverageMonthlyReadingFrameViewModel);
}

void AverageMonthlyReadingFrame.body.getter(uint64_t *a1@<X8>)
{
  type metadata accessor for AverageMonthlyReadingFrame(0);
  uint64_t v2 = sub_2F910();
  uint64_t v4 = v3;
  sub_30160();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = (int *)sub_4A98(&qword_2EB1F0);
  uint64_t v8 = (uint64_t *)((char *)a1 + v7[10]);
  swift_bridgeObjectRetain();
  sub_349F0(v8);
  *(uint64_t *)((char *)a1 + v7[11]) = 0x3FC999999999999ALL;
  *(uint64_t *)((char *)a1 + v7[12]) = 0x4040000000000000;
  *(uint64_t *)((char *)a1 + v7[13]) = 0x4040000000000000;
}

uint64_t sub_34F98()
{
  uint64_t v1 = __chkstk_darwin(v0);
  sub_358E0(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AverageMonthlyReadingFrame);
  sub_35858(&qword_2EB1D8, (void (*)(uint64_t))type metadata accessor for AverageMonthlyReadingFrame);
  return sub_26C470();
}

uint64_t sub_35060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_358E0(v2 + *(int *)(a1 + 20), a2, type metadata accessor for PageBackground);
}

uint64_t sub_35098@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_35858(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_35858(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

void sub_35190(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2F910();
  uint64_t v4 = v3;
  sub_30160();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = (int *)sub_4A98(&qword_2EB1F0);
  uint64_t v8 = (uint64_t *)((char *)a1 + v7[10]);
  swift_bridgeObjectRetain();
  sub_349F0(v8);
  *(uint64_t *)((char *)a1 + v7[11]) = 0x3FC999999999999ALL;
  *(uint64_t *)((char *)a1 + v7[12]) = 0x4040000000000000;
  *(uint64_t *)((char *)a1 + v7[13]) = 0x4040000000000000;
}

void *sub_35228(uint64_t a1)
{
  uint64_t v2 = sub_26D100();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_4A98(&qword_2EB698);
    uint64_t v9 = sub_26DA80();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_35858(&qword_2EB6A0, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
      uint64_t v16 = sub_26D2E0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_35858(&qword_2EB6A8, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
          char v23 = sub_26D360();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        double result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_35540(uint64_t a1)
{
  uint64_t v2 = sub_26E050();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_4A98(&qword_2EB680);
    uint64_t v9 = sub_26DA80();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_35858(&qword_2EB688, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
      uint64_t v16 = sub_26D2E0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_35858(&qword_2EB690, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
          char v23 = sub_26D360();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        double result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_35858(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AverageMonthlyReadingFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2EB260);
}

uint64_t type metadata accessor for AverageMonthlyReadingFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2EB390);
}

uint64_t sub_358E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_35948()
{
  return sub_35858(&qword_2EB1F8, (void (*)(uint64_t))&type metadata accessor for Date);
}

uint64_t sub_35990(uint64_t a1)
{
  uint64_t result = sub_35858(&qword_2EB200, (void (*)(uint64_t))type metadata accessor for AverageMonthlyReadingFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_359E8(uint64_t a1)
{
  uint64_t result = sub_35858(&qword_2EB1D8, (void (*)(uint64_t))type metadata accessor for AverageMonthlyReadingFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_35A40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AverageMonthlyReadingFrameViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_269BE0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for AverageMonthlyReadingFrameViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_269BE0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for AverageMonthlyReadingFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_269BE0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for AverageMonthlyReadingFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for AverageMonthlyReadingFrameViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for AverageMonthlyReadingFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AverageMonthlyReadingFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_35E14);
}

uint64_t sub_35E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269BE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AverageMonthlyReadingFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_35ED8);
}

uint64_t sub_35ED8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269BE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_35F80()
{
  uint64_t result = sub_269BE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AverageMonthlyReadingFrameViewModel.MonthAverage(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_269810();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t destroy for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1)
{
  uint64_t v2 = sub_269810();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_36388);
}

uint64_t sub_36388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_269810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AverageMonthlyReadingFrameViewModel.MonthAverage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3646C);
}

uint64_t sub_3646C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_269810();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_36528()
{
  uint64_t result = sub_269810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AverageMonthlyReadingFrame(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v13;
      swift_bridgeObjectRetain();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      uint64_t v17 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v9[56])
      {
        long long v11 = *((_OWORD *)v9 + 1);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v11;
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
      }
      else
      {
        long long v24 = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 24) = v24;
        (**(void (***)(char *, char *))(v24 - 8))(v8, v9);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v8[56] = 0;
      }
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      v8[80] = v9[80];
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *((void *)v8 + 13) = *((void *)v9 + 13);
      uint64_t v25 = *((void *)v9 + 15);
      swift_bridgeObjectRetain();
      if (v25)
      {
        *((void *)v8 + 14) = *((void *)v9 + 14);
        *((void *)v8 + 15) = v25;
        uint64_t v26 = *((void *)v9 + 17);
        *((void *)v8 + 16) = *((void *)v9 + 16);
        *((void *)v8 + 17) = v26;
        v8[144] = v9[144];
        uint64_t v27 = *((void *)v9 + 19);
        uint64_t v28 = *((void *)v9 + 20);
        *((void *)v8 + 19) = v27;
        *((void *)v8 + 20) = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *((_OWORD *)v9 + 8);
        *((_OWORD *)v8 + 7) = *((_OWORD *)v9 + 7);
        *((_OWORD *)v8 + 8) = v29;
        *((_OWORD *)v8 + 9) = *((_OWORD *)v9 + 9);
        *((void *)v8 + 20) = *((void *)v9 + 20);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
      uint64_t v18 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      unint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      uint64_t v21 = sub_26A6E0();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_4A98(&qword_2EA940);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = *(int *)(a3 + 24);
    uint64_t v31 = (uint64_t *)((char *)v4 + v30);
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(uint64_t *)((char *)a2 + v30);
    uint64_t v34 = *((void *)v32 + 1);
    *uint64_t v31 = v33;
    v31[1] = v34;
    uint64_t v35 = *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
    uint64_t v36 = (char *)v31 + v35;
    uint64_t v37 = &v32[v35];
    uint64_t v38 = sub_269BE0();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
  }
  return v4;
}

uint64_t destroy for AverageMonthlyReadingFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v9 = v4 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
    case 1:
      if (!*(unsigned char *)(v4 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v4);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v6 = v4 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v7 = sub_26A6E0();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      break;
  }
  uint64_t v11 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v12 = v11 + *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v13 = sub_269BE0();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

_OWORD *initializeWithCopy for AverageMonthlyReadingFrame(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = *((void *)v8 + 1);
    *(void *)uint64_t v7 = *(void *)v8;
    *((void *)v7 + 1) = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (v8[56])
    {
      long long v10 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v10;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *(_OWORD *)(v7 + 41) = *(_OWORD *)(v8 + 41);
    }
    else
    {
      long long v22 = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 24) = v22;
      (**(void (***)(char *, char *))(v22 - 8))(v7, v8);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      v7[56] = 0;
    }
    *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
    v7[80] = v8[80];
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *((void *)v7 + 13) = *((void *)v8 + 13);
    uint64_t v23 = *((void *)v8 + 15);
    swift_bridgeObjectRetain();
    if (v23)
    {
      *((void *)v7 + 14) = *((void *)v8 + 14);
      *((void *)v7 + 15) = v23;
      uint64_t v24 = *((void *)v8 + 17);
      *((void *)v7 + 16) = *((void *)v8 + 16);
      *((void *)v7 + 17) = v24;
      v7[144] = v8[144];
      uint64_t v25 = *((void *)v8 + 19);
      uint64_t v26 = *((void *)v8 + 20);
      *((void *)v7 + 19) = v25;
      *((void *)v7 + 20) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)v8 + 8);
      *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
      *((_OWORD *)v7 + 8) = v27;
      *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
      *((void *)v7 + 20) = *((void *)v8 + 20);
    }
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_retain();
    uint64_t v16 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = sub_26A6E0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_4A98(&qword_2EA940);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = *(int *)(a3 + 24);
  long long v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a2 + v28);
  uint64_t v32 = *((void *)v30 + 1);
  *long long v29 = v31;
  v29[1] = v32;
  uint64_t v33 = *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v34 = (char *)v29 + v33;
  uint64_t v35 = &v30[v33];
  uint64_t v36 = sub_269BE0();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  return a1;
}

void *assignWithCopy for AverageMonthlyReadingFrame(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_39A4C((uint64_t)a1 + v6, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      uint64_t v13 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      uint64_t v16 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v8[56])
      {
        long long v10 = *(_OWORD *)v8;
        long long v11 = *((_OWORD *)v8 + 1);
        long long v12 = *((_OWORD *)v8 + 2);
        *(_OWORD *)(v7 + 41) = *(_OWORD *)(v8 + 41);
        *((_OWORD *)v7 + 1) = v11;
        *((_OWORD *)v7 + 2) = v12;
        *(_OWORD *)uint64_t v7 = v10;
      }
      else
      {
        uint64_t v23 = *((void *)v8 + 3);
        *((void *)v7 + 3) = v23;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        (**(void (***)(char *, char *))(v23 - 8))(v7, v8);
        *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
        v7[56] = 0;
      }
      *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
      v7[80] = v8[80];
      *((void *)v7 + 11) = *((void *)v8 + 11);
      *((void *)v7 + 12) = *((void *)v8 + 12);
      *((void *)v7 + 13) = *((void *)v8 + 13);
      uint64_t v24 = *((void *)v8 + 15);
      swift_bridgeObjectRetain();
      if (v24)
      {
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        *((void *)v7 + 16) = *((void *)v8 + 16);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        v7[144] = v8[144];
        *((void *)v7 + 19) = *((void *)v8 + 19);
        *((void *)v7 + 20) = *((void *)v8 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)v8 + 7);
        long long v26 = *((_OWORD *)v8 + 8);
        long long v27 = *((_OWORD *)v8 + 9);
        *((void *)v7 + 20) = *((void *)v8 + 20);
        *((_OWORD *)v7 + 8) = v26;
        *((_OWORD *)v7 + 9) = v27;
        *((_OWORD *)v7 + 7) = v25;
      }
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
      uint64_t v17 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v18 = &v7[v17];
      uint64_t v19 = &v8[v17];
      uint64_t v20 = sub_26A6E0();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_4A98(&qword_2EA940);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = *(int *)(a3 + 24);
  long long v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  *long long v29 = *(void *)((char *)a2 + v28);
  v29[1] = *(void *)((char *)a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  uint64_t v32 = (char *)v29 + v31;
  uint64_t v33 = &v30[v31];
  uint64_t v34 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_OWORD *initializeWithTake for AverageMonthlyReadingFrame(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *uint64_t v7 = *v8;
    uint64_t v17 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)v8 + v17;
    uint64_t v20 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)uint64_t v7 = *(void *)v8;
    uint64_t v11 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    long long v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_26A6E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_4A98(&qword_2EA940);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    goto LABEL_8;
  }
  memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_9:
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  uint64_t v24 = *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  long long v25 = &v22[v24];
  long long v26 = &v23[v24];
  uint64_t v27 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

_OWORD *assignWithTake for AverageMonthlyReadingFrame(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_39A4C((uint64_t)a1 + v6, type metadata accessor for PageBackground);
    uint64_t v9 = type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *uint64_t v7 = *v8;
      uint64_t v17 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v18 = (char *)v7 + v17;
      uint64_t v19 = (char *)v8 + v17;
      uint64_t v20 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      long long v12 = (char *)v7 + v11;
      uint64_t v13 = (char *)v8 + v11;
      uint64_t v14 = sub_26A6E0();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_4A98(&qword_2EA940);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_9;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
LABEL_10:
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *(void *)((char *)a2 + v21);
  v22[1] = *(void *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(int *)(type metadata accessor for AverageMonthlyReadingFrameViewModel(0) + 24);
  long long v25 = (char *)v22 + v24;
  long long v26 = &v23[v24];
  uint64_t v27 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for AverageMonthlyReadingFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3779C);
}

uint64_t sub_3779C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AverageMonthlyReadingFrameViewModel(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for AverageMonthlyReadingFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_378AC);
}

uint64_t sub_378AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PageBackground(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = type metadata accessor for AverageMonthlyReadingFrameViewModel(0);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t sub_379B4()
{
  uint64_t result = type metadata accessor for PageBackground(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AverageMonthlyReadingFrameViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_37A88()
{
  return sub_7C18(&qword_2EB3D0, &qword_2EB1F0);
}

uint64_t *sub_37AC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26B4B0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_4A98(&qword_2EB3E0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = (_WORD *)((char *)v4 + v15);
    uint64_t v17 = (_WORD *)((char *)a2 + v15);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v16 = *v17;
      uint64_t v18 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = (char *)v16 + v19;
      uint64_t v21 = (char *)v17 + v19;
      uint64_t v22 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(void *)((char *)v16 + v18[7]) = *(void *)((char *)v17 + v18[7]);
      uint64_t v23 = v18[8];
      uint64_t v24 = (char *)v16 + v23;
      long long v25 = (char *)v17 + v23;
      v24[2] = v25[2];
      *(_WORD *)uint64_t v24 = *(_WORD *)v25;
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[7];
    uint64_t v27 = (uint64_t *)((char *)v4 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[8];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = v32[8];
    sub_10E0C(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    v31[8] = v34;
    uint64_t v35 = a3[9];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *(void *)v37;
    char v39 = v37[8];
    sub_10E0C(*(void *)v37, v39);
    *(void *)uint64_t v36 = v38;
    v36[8] = v39;
    uint64_t v40 = a3[10];
    uint64_t v41 = a3[11];
    uint64_t v42 = (uint64_t *)((char *)v4 + v40);
    unint64_t v43 = (uint64_t *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = (uint64_t *)((char *)v4 + v41);
    uint64_t v46 = (uint64_t *)((char *)a2 + v41);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_37F1C(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26B4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[6];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v10 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[7];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_381B4(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26B4B0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_4A98(&qword_2EB3E0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = (_WORD *)((char *)a1 + v13);
  uint64_t v15 = (_WORD *)((char *)a2 + v13);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v14 = *v15;
    uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v14 + v17;
    uint64_t v19 = (char *)v15 + v17;
    uint64_t v20 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)((char *)v14 + v16[7]) = *(void *)((char *)v15 + v16[7]);
    uint64_t v21 = v16[8];
    uint64_t v22 = (char *)v14 + v21;
    uint64_t v23 = (char *)v15 + v21;
    void v22[2] = v23[2];
    *(_WORD *)uint64_t v22 = *(_WORD *)v23;
  }
  else
  {
    *(void *)uint64_t v14 = *(void *)v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[7];
  long long v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *long long v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = v30[8];
  sub_10E0C(*(void *)v30, v32);
  *(void *)uint64_t v29 = v31;
  v29[8] = v32;
  uint64_t v33 = a3[9];
  char v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)v35;
  char v37 = v35[8];
  sub_10E0C(*(void *)v35, v37);
  *(void *)char v34 = v36;
  v34[8] = v37;
  uint64_t v38 = a3[10];
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)((char *)a1 + v38);
  uint64_t v41 = (void *)((char *)a2 + v38);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  unint64_t v43 = (void *)((char *)a1 + v39);
  uint64_t v44 = (void *)((char *)a2 + v39);
  uint64_t v45 = v44[1];
  *unint64_t v43 = *v44;
  v43[1] = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_385C0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EB3D8);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26B4B0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_4A98(&qword_2EB3E0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_B6DC((uint64_t)a1 + v13, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v14 = *v15;
      v14[1] = v15[1];
      uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = &v14[v17];
      uint64_t v19 = &v15[v17];
      uint64_t v20 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *(void *)&v14[v16[7]] = *(void *)&v15[v16[7]];
      uint64_t v21 = v16[8];
      uint64_t v22 = &v14[v21];
      uint64_t v23 = &v15[v21];
      char v24 = v23[2];
      *(_WORD *)uint64_t v22 = *(_WORD *)v23;
      void v22[2] = v24;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[7];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    sub_B6DC((uint64_t)a1 + v25, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v29 = a3[8];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = v31[8];
  sub_10E0C(*(void *)v31, v33);
  uint64_t v34 = *(void *)v30;
  char v35 = v30[8];
  *(void *)uint64_t v30 = v32;
  v30[8] = v33;
  sub_C374(v34, v35);
  uint64_t v36 = a3[9];
  char v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  char v40 = v38[8];
  sub_10E0C(*(void *)v38, v40);
  uint64_t v41 = *(void *)v37;
  char v42 = v37[8];
  *(void *)char v37 = v39;
  v37[8] = v40;
  sub_C374(v41, v42);
  uint64_t v43 = a3[10];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  uint64_t v46 = a3[11];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_38A64(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26B4B0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = sub_4A98(&qword_2EB3E0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v16 = *(_WORD *)v17;
    uint64_t v19 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v20 = v19[6];
    uint64_t v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    uint64_t v23 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
    uint64_t v24 = v19[8];
    uint64_t v25 = &v16[v24];
    uint64_t v26 = &v17[v24];
    _OWORD v25[2] = v26[2];
    *(_WORD *)uint64_t v25 = *(_WORD *)v26;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  uint64_t v32 = a3[8];
  uint64_t v33 = a3[9];
  uint64_t v34 = &a1[v32];
  char v35 = &a2[v32];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = &a1[v33];
  char v37 = &a2[v33];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  uint64_t v38 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  return a1;
}

char *sub_38E58(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EB3D8);
    uint64_t v11 = sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26B4B0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_4A98(&qword_2EB3E0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_B6DC((uint64_t)&a1[v15], &qword_2EA978);
    uint64_t v18 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v16 = *(_WORD *)v17;
      uint64_t v19 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = &v16[v20];
      uint64_t v22 = &v17[v20];
      uint64_t v23 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
      uint64_t v24 = v19[8];
      uint64_t v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      _OWORD v25[2] = v26[2];
      *(_WORD *)uint64_t v25 = *(_WORD *)v26;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    sub_B6DC((uint64_t)&a1[v27], &qword_2EB3E8);
    uint64_t v30 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
  }
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = v34[8];
  uint64_t v36 = *(void *)v33;
  char v37 = v33[8];
  *(void *)uint64_t v33 = v35;
  v33[8] = (char)v34;
  sub_C374(v36, v37);
  uint64_t v38 = a3[9];
  uint64_t v39 = &a1[v38];
  char v40 = &a2[v38];
  uint64_t v41 = *(void *)v40;
  LOBYTE(v40) = v40[8];
  uint64_t v42 = *(void *)v39;
  char v43 = v39[8];
  *(void *)uint64_t v39 = v41;
  v39[8] = (char)v40;
  sub_C374(v42, v43);
  uint64_t v44 = a3[10];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  *(void *)&a1[v44] = *(void *)&a2[v44];
  swift_bridgeObjectRelease();
  *((void *)v45 + 1) = *((void *)v46 + 1);
  swift_release();
  uint64_t v47 = a3[11];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  swift_release();
  return a1;
}

uint64_t sub_392EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_39300);
}

uint64_t sub_39300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB3F0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4A98(&qword_2EB3F8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[10]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_394BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_394D0);
}

uint64_t sub_394D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_4A98(&qword_2EB3F0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_4A98(&qword_2EAB28);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_4A98(&qword_2EB3F8);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[10]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AverageMonthlyReadingChart(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EB458);
}

void sub_396A8()
{
  sub_398B8(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_3985C();
    if (v1 <= 0x3F)
    {
      sub_398B8(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
      if (v2 <= 0x3F)
      {
        sub_398B8(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_3985C()
{
  if (!qword_2EB468)
  {
    sub_7B0C(&qword_2EB3E0);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EB468);
    }
  }
}

void sub_398B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_3990C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3992C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_39994(uint64_t a1)
{
  return sub_3A28C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_3233C);
}

unint64_t sub_399AC()
{
  unint64_t result = qword_2EB570;
  if (!qword_2EB570)
  {
    sub_7B0C(&qword_2EB558);
    sub_7C18(&qword_2EB148, &qword_2EB150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB570);
  }
  return result;
}

uint64_t sub_39A4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_39AAC()
{
  unint64_t result = qword_2EB5B0;
  if (!qword_2EB5B0)
  {
    sub_7B0C(&qword_2EB5A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB5B0);
  }
  return result;
}

uint64_t sub_39B18@<X0>(uint64_t a1@<X8>)
{
  return sub_33A30(*(void *)(v1 + 16), a1);
}

uint64_t sub_39B20(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_39BC0()
{
  uint64_t v1 = (int *)type metadata accessor for AverageMonthlyReadingChart(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v4 + v1[5];
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26B4B0();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v4 + v1[6];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v9 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v11 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v4 + v1[7];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v4 + v1[8]), *(unsigned char *)(v4 + v1[8] + 8));
  sub_C374(*(void *)(v4 + v1[9]), *(unsigned char *)(v4 + v1[9] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_39ED8(uint64_t a1, unsigned __int8 *a2)
{
  type metadata accessor for AverageMonthlyReadingChart(0);

  return sub_34684(a1, a2);
}

unint64_t sub_39F58()
{
  unint64_t result = qword_2EB5F0;
  if (!qword_2EB5F0)
  {
    sub_7B0C(&qword_2EB4F8);
    sub_39FF8();
    sub_7C18(&qword_2EB600, &qword_2EB608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB5F0);
  }
  return result;
}

unint64_t sub_39FF8()
{
  unint64_t result = qword_2EB5F8;
  if (!qword_2EB5F8)
  {
    sub_7B0C(&qword_2EB4F0);
    sub_7B0C(&qword_2EB4E0);
    sub_7B0C(&qword_2EB5B8);
    sub_7B0C(&qword_2EB4D8);
    sub_7B0C(&qword_2EB4D0);
    sub_7B0C(&qword_2EB5A0);
    sub_26A480();
    sub_7C18(&qword_2EB5A8, &qword_2EB4D0);
    sub_39AAC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7B0C(&qword_2EB5C0);
    sub_7B0C(&qword_2EB5C8);
    sub_7C18(&qword_2EB5D0, &qword_2EB5C0);
    sub_39B20(&qword_2EB5D8, &qword_2EB5C8, &qword_2EB5E0, &qword_2EB5E8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB5F8);
  }
  return result;
}

uint64_t sub_3A230()
{
  return sub_34898(*(void *)(v0 + 16), *(void *)(v0 + 24), 0);
}

uint64_t sub_3A250()
{
  return sub_34898(*(void *)(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_3A274(uint64_t a1)
{
  return sub_3A28C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_33FBC);
}

uint64_t sub_3A28C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for AverageMonthlyReadingChart(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_3A320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_34528(a1, &qword_2EB5C8, &qword_2EB5E8, a2);
}

uint64_t sub_3A34C@<X0>(uint64_t *a1@<X8>)
{
  return sub_332C4(*(void *)(v1 + 24), a1);
}

uint64_t sub_3A354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_34528(a1, &qword_2EB548, &qword_2EB588, a2);
}

uint64_t sub_3A380(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_3A394()
{
  type metadata accessor for AverageMonthlyReadingChart(0);

  return sub_33990();
}

void *sub_3A404(uint64_t a1)
{
  uint64_t v2 = sub_26CB20();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_4A98(&qword_2EB668);
    uint64_t v9 = sub_26DA80();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_35858(&qword_2EB670, (void (*)(uint64_t))&type metadata accessor for PageMetrics.InvocationPoint);
      uint64_t v16 = sub_26D2E0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_35858(&qword_2EB678, (void (*)(uint64_t))&type metadata accessor for PageMetrics.InvocationPoint);
          char v23 = sub_26D360();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_3A744()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t static Metrics.defaultTopic.getter()
{
  return 0xD000000000000010;
}

unint64_t static Metrics.defaultPerfTopic.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_3A868()
{
  sub_4A98(&qword_2EB6D0);
  sub_26D100();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_270BF0;
  sub_26D0B0();
  sub_26D0E0();
  uint64_t v1 = sub_35228(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_2EB6B0 = (uint64_t)v1;
  return result;
}

unint64_t sub_3A968()
{
  sub_4A98(&qword_2EB6C8);
  uint64_t v0 = sub_4A98(&qword_2EA098);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_270F80;
  uint64_t v29 = v3;
  uint64_t v30 = v0;
  unint64_t v4 = v3 + v2;
  uint64_t v27 = *(int *)(v0 + 48);
  sub_26CD60();
  if (qword_2E9B70 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_2EB6B0;
  sub_4A98(&qword_2EB6D0);
  uint64_t v6 = sub_26D100();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_26F980;
  unint64_t v11 = v10 + v9;
  uint64_t v12 = qword_2E9BF0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_6B14(v6, (uint64_t)qword_2EEB40);
  uint64_t v14 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16);
  v14(v11, v13, v6);
  if (qword_2E9D30 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_6B14(v6, (uint64_t)qword_2F72E0);
  v14(v11 + v8, v15, v6);
  sub_26D0D0();
  uint64_t v16 = sub_3B740(v10, v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v4 + v27) = v16;
  uint64_t v17 = v1;
  uint64_t v18 = *(int *)(v30 + 48);
  sub_26CD80();
  uint64_t v19 = qword_2EB6B0;
  *(void *)(v4 + v1 + v18) = qword_2EB6B0;
  uint64_t v28 = *(int *)(v30 + 48);
  swift_bridgeObjectRetain();
  sub_26CD40();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_26F990;
  swift_bridgeObjectRetain();
  sub_26D0C0();
  uint64_t v21 = sub_3B740(v20, v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v4 + 2 * v1 + v28) = v21;
  uint64_t v22 = *(int *)(v30 + 48);
  sub_26CD70();
  *(void *)(v4 + 3 * v1 + v22) = v19;
  uint64_t v23 = *(int *)(v30 + 48);
  swift_bridgeObjectRetain();
  sub_26CD50();
  *(void *)(v4 + 4 * v1 + v23) = v19;
  uint64_t v24 = *(int *)(v30 + 48);
  swift_bridgeObjectRetain();
  sub_26CD30();
  *(void *)(v4 + 5 * v1 + v24) = v19;
  uint64_t v25 = *(int *)(v30 + 48);
  swift_bridgeObjectRetain();
  sub_26CD90();
  *(void *)(v4 + 6 * v17 + v25) = v19;
  swift_bridgeObjectRetain();
  unint64_t result = sub_8B5C(v29);
  qword_3152A0 = result;
  return result;
}

unint64_t sub_3AD80()
{
  sub_4A98(&qword_2EB6C0);
  uint64_t v0 = (int *)(sub_4A98(&qword_2EA078) - 8);
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_270F80;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = v0[14];
  sub_26CD60();
  *(void *)(v4 + v5) = &_swiftEmptySetSingleton;
  uint64_t v6 = v0[14];
  sub_26CD80();
  *(void *)(v4 + v1 + v6) = &_swiftEmptySetSingleton;
  uint64_t v7 = v0[14];
  sub_26CD40();
  *(void *)(v4 + 2 * v1 + v7) = &_swiftEmptySetSingleton;
  uint64_t v8 = v0[14];
  sub_26CD70();
  *(void *)(v4 + 3 * v1 + v8) = &_swiftEmptySetSingleton;
  uint64_t v9 = v0[14];
  sub_26CD50();
  *(void *)(v4 + 4 * v1 + v9) = &_swiftEmptySetSingleton;
  uint64_t v10 = v0[14];
  sub_26CD30();
  *(void *)(v4 + 5 * v1 + v10) = &_swiftEmptySetSingleton;
  uint64_t v11 = v0[14];
  sub_26CD90();
  *(void *)(v4 + 6 * v1 + v11) = &_swiftEmptySetSingleton;
  unint64_t result = sub_8B70(v3);
  qword_3152A8 = result;
  return result;
}

uint64_t sub_3AEFC()
{
  uint64_t v0 = sub_26CA70();
  sub_6E18(v0, qword_3152B0);
  sub_6B14(v0, (uint64_t)qword_3152B0);
  if (qword_2E9B78 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_2E9B80;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return sub_26CA60();
}

BooksUI::Metrics::IdType_optional __swiftcall Metrics.IdType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2DB460;
  v8._object = object;
  Swift::Int v5 = sub_26DC00(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  char *v3 = v7;
  return result;
}

uint64_t Metrics.IdType.rawValue.getter()
{
  if (*v0) {
    return 0x69746E6575716573;
  }
  else {
    return 0x64695F737469;
  }
}

uint64_t sub_3B09C(char *a1, char *a2)
{
  return sub_108488(*a1, *a2);
}

Swift::Int sub_3B0A8()
{
  return sub_26DF20();
}

uint64_t sub_3B12C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3B19C()
{
  return sub_26DF20();
}

BooksUI::Metrics::IdType_optional sub_3B21C(Swift::String *a1)
{
  return Metrics.IdType.init(rawValue:)(*a1);
}

void sub_3B228(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64695F737469;
  if (*v1) {
    uint64_t v2 = 0x69746E6575716573;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006C61;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static Metrics.Keys.eventType.getter()
{
  return 0x707954746E657665;
}

uint64_t static Metrics.Keys.pageContext.getter()
{
  return 0x746E6F4365676170;
}

uint64_t static Metrics.Keys.pageId.getter()
{
  return 0x644965676170;
}

uint64_t static Metrics.Keys.pageType.getter()
{
  return 0x6570795465676170;
}

uint64_t static Metrics.Keys.actionType.getter()
{
  return 0x79546E6F69746361;
}

uint64_t static Metrics.Keys.targetID.getter()
{
  return 0x6449746567726174;
}

uint64_t static Metrics.Keys.actionContext.getter()
{
  return 0x6F436E6F69746361;
}

uint64_t static Metrics.Keys.actionDetails.getter()
{
  return 0x65446E6F69746361;
}

uint64_t static Metrics.Keys.actionUrl.getter()
{
  return 0x72556E6F69746361;
}

uint64_t static Metrics.Keys.buyParams.getter()
{
  return 0x6D61726150797562;
}

uint64_t static Metrics.Keys.isUPP.getter()
{
  return 0x5050557369;
}

uint64_t static Metrics.Keys.location.getter()
{
  return 0x6E6F697461636F6CLL;
}

unint64_t static Metrics.Keys.locationPosition.getter()
{
  return 0xD000000000000010;
}

uint64_t static Metrics.Keys.rating.getter()
{
  return 0x676E69746172;
}

uint64_t static Metrics.Keys.dialogType.getter()
{
  return 0x7954676F6C616964;
}

uint64_t static Metrics.Keys.message.getter()
{
  return 0x6567617373656DLL;
}

uint64_t static Metrics.Keys.options.getter()
{
  return 0x736E6F6974706FLL;
}

uint64_t static Metrics.Keys.responseTime.getter()
{
  return 0x65736E6F70736572;
}

uint64_t static Metrics.Keys.result.getter()
{
  return 0x746C75736572;
}

uint64_t static Metrics.Keys.title.getter()
{
  return 0x656C746974;
}

uint64_t static Metrics.Keys.userActions.getter()
{
  return 0x6974634172657375;
}

uint64_t static Metrics.Keys.impressionIndex.getter()
{
  return 0x6973736572706D69;
}

uint64_t static Metrics.Keys.navigation.getter()
{
  return 0x697461676976616ELL;
}

uint64_t static Metrics.Values.buyPill.getter()
{
  return 0x6C6C6950797562;
}

uint64_t static Metrics.Values.audiobooksKind.getter()
{
  return 0x6F6F626F69647561;
}

uint64_t static Metrics.Values.booksKind.getter()
{
  return 0x6B6F6F6265;
}

uint64_t static Metrics.Values.mangaKind.getter()
{
  return 0x61676E616DLL;
}

uint64_t static Metrics.Values.sgNarratorType.getter()
{
  return 0x696F56736B6F6F42;
}

uint64_t static Metrics.Values.seriesKind.getter()
{
  return 0x736569726573;
}

uint64_t static Metrics.contentKind(for:)()
{
  if (sub_26A050()) {
    return 0x6F6F626F69647561;
  }
  else {
    return 0x6B6F6F6265;
  }
}

unint64_t sub_3B5B8()
{
  unint64_t result = qword_2EB6B8;
  if (!qword_2EB6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB6B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics()
{
  return &type metadata for Metrics;
}

unsigned char *storeEnumTagSinglePayload for Metrics.IdType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B6E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.IdType()
{
  return &type metadata for Metrics.IdType;
}

ValueMetadata *type metadata accessor for Metrics.Keys()
{
  return &type metadata for Metrics.Keys;
}

ValueMetadata *type metadata accessor for Metrics.Values()
{
  return &type metadata for Metrics.Values;
}

uint64_t sub_3B740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26D100();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v8, v15, v4);
      sub_138A1C((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v4);
      v15 += v16;
      --v11;
    }
    while (v11);
    return v19;
  }
  return a2;
}

uint64_t ListItemAccessoryBuyButton.init(assetInfo:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;

  return sub_AD44(a1, a2 + 16);
}

uint64_t ListItemAccessoryBuyButton.content(contextActionMenuView:)@<X0>(uint64_t a1@<X8>)
{
  sub_C224(v1 + 16, (uint64_t)v4);
  *(void *)a1 = swift_getKeyPath();
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 51) = 0u;
  *(void *)(a1 + 72) = swift_getKeyPath();
  *(unsigned char *)(a1 + 80) = 0;
  uint64_t result = sub_AD44(v4, a1 + 88);
  *(unsigned char *)(a1 + 128) = 0;
  return result;
}

uint64_t sub_3B96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_3B984@<X0>(unsigned char *a1@<X8>)
{
  sub_3BD90();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_3B9D4@<X0>(unsigned char *a1@<X8>)
{
  sub_3BD90();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_3BA24()
{
  return sub_26B0C0();
}

uint64_t sub_3BA70()
{
  return sub_26B0C0();
}

uint64_t sub_3BAC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ListItemAccessoryBuyButton(uint64_t a1)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));

  return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for ListItemAccessoryBuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  return a1;
}

uint64_t assignWithCopy for ListItemAccessoryBuyButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_C374(v6, v7);
  sub_16D58((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

__n128 initializeWithTake for CoverViewModel.AccessibilityCoverProperties(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ListItemAccessoryBuyButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_C374(v6, v7);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
  long long v8 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemAccessoryBuyButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemAccessoryBuyButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemAccessoryBuyButton()
{
  return &type metadata for ListItemAccessoryBuyButton;
}

unint64_t sub_3BD3C()
{
  unint64_t result = qword_2EB6F8;
  if (!qword_2EB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB6F8);
  }
  return result;
}

unint64_t sub_3BD90()
{
  unint64_t result = qword_2EB700;
  if (!qword_2EB700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB700);
  }
  return result;
}

__n128 ListItemThumbnailView.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ListItemThumbnailView();
  char v5 = (uint64_t *)(a2 + *(int *)(v4 + 20));
  uint64_t *v5 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a2 + *(int *)(v4 + 24);
  *(void *)uint64_t v6 = swift_getKeyPath();
  *(unsigned char *)(v6 + 8) = 0;
  *(_WORD *)(a2 + 64) = *(_WORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v7;
  __n128 result = *(__n128 *)a1;
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v9;
  return result;
}

uint64_t type metadata accessor for ListItemThumbnailView()
{
  uint64_t result = qword_2EB778;
  if (!qword_2EB778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ListItemThumbnailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_26B120();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_4A98(&qword_2EB710);
  return sub_3BF1C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_3BF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v205 = a2;
  uint64_t v203 = sub_4A98(&qword_2EB7D0);
  __chkstk_darwin(v203);
  v204 = (uint64_t *)((char *)v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v191 = sub_4A98(&qword_2EB7D8);
  __chkstk_darwin(v191);
  uint64_t v193 = (uint64_t)v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_4A98(&qword_2EB7E0);
  __chkstk_darwin(v199);
  v194 = (char *)v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_4A98(&qword_2EB7E8);
  uint64_t v6 = __chkstk_darwin(v192);
  uint64_t v182 = (uint64_t)v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v183 = (uint64_t)v161 - v8;
  uint64_t v170 = sub_4A98(&qword_2EB7F0);
  __chkstk_darwin(v170);
  uint64_t v172 = (uint64_t)v161 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_4A98(&qword_2EB7F8);
  uint64_t v10 = __chkstk_darwin(v189);
  uint64_t v171 = (uint64_t)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v173 = (uint64_t)v161 - v12;
  uint64_t v176 = sub_26AC50();
  __chkstk_darwin(v176);
  uint64_t v174 = (double *)((char *)v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_4A98(&qword_2EB800);
  __chkstk_darwin(v169);
  uint64_t v177 = (uint64_t)v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_4A98(&qword_2EB808);
  __chkstk_darwin(v184);
  long long v175 = (char *)v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_4A98(&qword_2EB810);
  __chkstk_darwin(v185);
  uint64_t v187 = (uint64_t)v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_4A98(&qword_2EB818);
  __chkstk_darwin(v179);
  uint64_t v180 = (uint64_t)v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_4A98(&qword_2EB820);
  __chkstk_darwin(v186);
  uint64_t v181 = (char *)v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = (uint64_t (**)(void))sub_4A98(&qword_2EB828);
  __chkstk_darwin(v196);
  uint64_t v201 = (uint64_t)v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_4A98(&qword_2EB830);
  uint64_t v20 = __chkstk_darwin(v178);
  uint64_t v168 = (uint64_t)v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v202 = (uint64_t)v161 - v22;
  uint64_t v195 = sub_4A98(&qword_2EB838);
  __chkstk_darwin(v195);
  v188 = (char *)v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_4A98(&qword_2EB840);
  __chkstk_darwin(v197);
  uint64_t v198 = (uint64_t)v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_4A98(&qword_2EB848);
  __chkstk_darwin(v190);
  uint64_t v26 = (char *)v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2EB850);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_4A98(&qword_2EB858);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4A98(&qword_2EB860);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = (uint64_t (**)(void))type metadata accessor for CoverView();
  __chkstk_darwin(v200);
  char v37 = (char *)v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3EB44(a1, (uint64_t)v231);
  sub_3EBA0((uint64_t)v231, (uint64_t)v225);
  if ((v230 & 1) == 0)
  {
    v161[0] = (uint64_t)v32;
    v161[1] = v30;
    unint64_t v162 = v26;
    uint64_t v163 = v29;
    uint64_t v164 = v27;
    uint64_t v165 = v35;
    uint64_t v166 = v33;
    uint64_t v167 = v37;
    uint64_t v40 = v226;
    unsigned __int8 v41 = v227;
    uint64_t v42 = v228;
    int v43 = v229;
    sub_AD44(v225, (uint64_t)v224);
    uint64_t v44 = a1 + *(int *)(type metadata accessor for ListItemThumbnailView() + 24);
    uint64_t v45 = *(void *)v44;
    char v46 = *(unsigned char *)(v44 + 8);
    sub_10E0C(*(void *)v44, v46);
    char v47 = sub_40900(v45, v46);
    sub_C374(v45, v46);
    if (v47 & 1 | (v43 == 255)) {
      uint64_t v48 = v40;
    }
    else {
      uint64_t v48 = v42;
    }
    if (v47 & 1 | (v43 == 255)) {
      unsigned __int8 v49 = v41;
    }
    else {
      unsigned __int8 v49 = v43;
    }
    uint64_t v50 = (uint64_t)v167;
    sub_C224((uint64_t)v224, (uint64_t)&v207);
    double v210 = sub_3D810();
    uint64_t v211 = v51;
    char v212 = 0;
    CoverViewModel.init(style:)((uint64_t)&v207, (uint64_t)&v213);
    *(void *)uint64_t v50 = swift_getKeyPath();
    *(unsigned char *)(v50 + 40) = 0;
    *(void *)(v50 + 48) = swift_getKeyPath();
    *(unsigned char *)(v50 + 56) = 0;
    uint64_t v52 = (int *)v200;
    uint64_t v53 = (uint64_t *)(v50 + *((int *)v200 + 6));
    *uint64_t v53 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = (uint64_t *)(v50 + v52[7]);
    *uint64_t v54 = swift_getKeyPath();
    sub_4A98(&qword_2EB918);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = (uint64_t *)(v50 + v52[8]);
    type metadata accessor for ProfileRestrictions();
    sub_3F22C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    *uint64_t v55 = sub_26AD70();
    v55[1] = v56;
    uint64_t v57 = v50 + v52[9];
    char v206 = 1;
    sub_26C340();
    uint64_t v58 = *((void *)&v207 + 1);
    *(unsigned char *)uint64_t v57 = v207;
    *(void *)(v57 + 8) = v58;
    uint64_t v59 = v50 + v52[10];
    long long v60 = v222;
    *(_OWORD *)(v59 + 128) = v221;
    *(_OWORD *)(v59 + 144) = v60;
    *(void *)(v59 + 160) = v223;
    long long v61 = v218;
    *(_OWORD *)(v59 + 64) = v217;
    *(_OWORD *)(v59 + 80) = v61;
    long long v62 = v220;
    *(_OWORD *)(v59 + 96) = v219;
    *(_OWORD *)(v59 + 112) = v62;
    long long v63 = v214;
    *(_OWORD *)uint64_t v59 = v213;
    *(_OWORD *)(v59 + 16) = v63;
    long long v64 = v216;
    *(_OWORD *)(v59 + 32) = v215;
    *(_OWORD *)(v59 + 48) = v64;
    *(unsigned char *)(v50 + v52[11]) = 1;
    if (v49 < 2u)
    {
      uint64_t v79 = (uint64_t)v162;
      uint64_t v80 = v163;
      uint64_t v81 = v201;
      uint64_t v82 = v202;
      if ((_BYTE)v48)
      {
        sub_3D810();
        sub_3D810();
        _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
        sub_26A8D0();
        sub_3F2D0(v50, v81, (uint64_t (*)(void))type metadata accessor for CoverView);
        uint64_t v83 = (_OWORD *)(v81 + *((int *)v196 + 9));
        long long v84 = v214;
        *uint64_t v83 = v213;
        v83[1] = v84;
        void v83[2] = v215;
        if (v48 == 1)
        {
          double v85 = sub_3DC94();
          uint64_t v86 = v174;
          uint64_t v87 = (char *)v174 + *(int *)(v176 + 20);
          uint64_t v88 = enum case for RoundedCornerStyle.continuous(_:);
          LODWORD(v194) = enum case for RoundedCornerStyle.continuous(_:);
          uint64_t v89 = sub_26B160();
          uint64_t v90 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 104);
          v90(v87, v88, v89);
          *uint64_t v86 = v85;
          v86[1] = v85;
          uint64_t v91 = v177;
          uint64_t v92 = v177 + *(int *)(v169 + 36);
          v196 = &type metadata accessor for RoundedRectangle;
          sub_3F2D0((uint64_t)v86, v92, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
          *(_WORD *)(v92 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
          sub_B678(v81, v91, &qword_2EB828);
          v200 = &type metadata accessor for RoundedRectangle;
          sub_3F338((uint64_t)v86, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
          sub_B6DC(v81, &qword_2EB828);
          uint64_t v93 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
          uint64_t v201 = v94;
          uint64_t v202 = v93;
          uint64_t v95 = (uint64_t)v175;
          uint64_t v96 = (uint64_t)&v175[*(int *)(v184 + 36)];
          double v97 = sub_3DC94();
          uint64_t v98 = (uint64_t)v163;
          v90((char *)v86 + *(int *)(v176 + 20), v194, v89);
          *uint64_t v86 = v97;
          v86[1] = v97;
          _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
          uint64_t v99 = sub_26C1C0();
          swift_release();
          sub_26A7B0();
          uint64_t v100 = v196;
          sub_3F2D0((uint64_t)v86, v96, (uint64_t (*)(void))v196);
          double v101 = *(double *)&v207 * 0.5;
          uint64_t v102 = v96 + *(int *)(sub_4A98(&qword_2EB920) + 68);
          sub_3F2D0((uint64_t)v86, v102, (uint64_t (*)(void))v100);
          *(double *)(v102 + *(int *)(sub_26AC40() + 20)) = v101;
          uint64_t v103 = v102 + *(int *)(sub_4A98(&qword_2EB928) + 36);
          long long v104 = v208;
          *(_OWORD *)uint64_t v103 = v207;
          *(_OWORD *)(v103 + 16) = v104;
          *(void *)(v103 + 32) = v209;
          uint64_t v105 = sub_4A98(&qword_2EB930);
          *(void *)(v102 + *(int *)(v105 + 52)) = v99;
          *(_WORD *)(v102 + *(int *)(v105 + 56)) = 256;
          uint64_t v106 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
          uint64_t v108 = v107;
          uint64_t v109 = (uint64_t *)(v102 + *(int *)(sub_4A98(&qword_2EB938) + 36));
          *uint64_t v109 = v106;
          v109[1] = v108;
          sub_3F338((uint64_t)v86, (uint64_t (*)(void))v200);
          uint64_t v110 = (void *)(v96 + *(int *)(sub_4A98(&qword_2EB8D0) + 36));
          uint64_t v111 = v201;
          *uint64_t v110 = v202;
          v110[1] = v111;
          sub_19CC4(v177, v95, &qword_2EB800);
          uint64_t v112 = &qword_2EB808;
          sub_B678(v95, v180, &qword_2EB808);
          swift_storeEnumTagMultiPayload();
          sub_3ED8C();
          sub_3EEC4();
          uint64_t v113 = (uint64_t)v181;
          sub_26B2F0();
          sub_B678(v113, v187, &qword_2EB820);
          swift_storeEnumTagMultiPayload();
          sub_3ECC8();
          sub_3F040();
          uint64_t v114 = (uint64_t)v188;
          sub_26B2F0();
          sub_B6DC(v113, &qword_2EB820);
          uint64_t v115 = v95;
        }
        else
        {
          uint64_t v141 = v172;
          sub_B678(v81, v172, &qword_2EB828);
          *(_WORD *)(v141 + *(int *)(v170 + 36)) = 256;
          sub_B6DC(v81, &qword_2EB828);
          uint64_t v142 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
          uint64_t v202 = v143;
          _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
          uint64_t v144 = sub_26C1C0();
          swift_release();
          sub_26A7B0();
          *(void *)&double v145 = v207;
          unint64_t v146 = *((void *)&v208 + 1);
          unint64_t v147 = v208;
          uint64_t v148 = v209;
          uint64_t v149 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
          uint64_t v151 = v150;
          uint64_t v152 = v171;
          sub_B678(v141, v171, &qword_2EB7F0);
          uint64_t v153 = v152 + *(int *)(v189 + 36);
          *(double *)uint64_t v153 = v145 * 0.5;
          *(_OWORD *)(v153 + 8) = __PAIR128__(*((unint64_t *)&v207 + 1), *(unint64_t *)&v145);
          *(_OWORD *)(v153 + 24) = __PAIR128__(v146, v147);
          uint64_t v50 = (uint64_t)v167;
          *(void *)(v153 + 40) = v148;
          *(void *)(v153 + 48) = v144;
          *(_WORD *)(v153 + 56) = 256;
          *(void *)(v153 + 64) = v149;
          *(void *)(v153 + 72) = v151;
          uint64_t v154 = v202;
          *(void *)(v153 + 80) = v142;
          *(void *)(v153 + 88) = v154;
          uint64_t v155 = v141;
          uint64_t v98 = (uint64_t)v163;
          sub_B6DC(v155, &qword_2EB7F0);
          uint64_t v112 = &qword_2EB7F8;
          uint64_t v156 = v173;
          sub_19CC4(v152, v173, &qword_2EB7F8);
          sub_B678(v156, v187, &qword_2EB7F8);
          swift_storeEnumTagMultiPayload();
          sub_3ECC8();
          sub_3F040();
          uint64_t v114 = (uint64_t)v188;
          sub_26B2F0();
          uint64_t v115 = v156;
        }
        sub_B6DC(v115, v112);
        uint64_t v140 = v198;
        uint64_t v79 = (uint64_t)v162;
      }
      else
      {
        sub_3D810();
        _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
        sub_26A8D0();
        sub_3F2D0(v50, v81, (uint64_t (*)(void))type metadata accessor for CoverView);
        uint64_t v130 = (_OWORD *)(v81 + *((int *)v196 + 9));
        long long v131 = v214;
        *uint64_t v130 = v213;
        v130[1] = v131;
        v130[2] = v215;
        sub_3D810();
        double v133 = v132;
        uint64_t v134 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
        uint64_t v135 = v168;
        sub_AFACC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v168, 0.0, 1, v133, 0, v134, v136);
        sub_B6DC(v81, &qword_2EB828);
        sub_19CC4(v135, v82, &qword_2EB830);
        sub_B678(v82, v180, &qword_2EB830);
        swift_storeEnumTagMultiPayload();
        sub_3ED8C();
        sub_3EEC4();
        uint64_t v137 = (uint64_t)v80;
        uint64_t v138 = (uint64_t)v181;
        sub_26B2F0();
        sub_B678(v138, v187, &qword_2EB820);
        swift_storeEnumTagMultiPayload();
        sub_3ECC8();
        sub_3F040();
        uint64_t v114 = (uint64_t)v188;
        sub_26B2F0();
        uint64_t v139 = v138;
        uint64_t v98 = v137;
        sub_B6DC(v139, &qword_2EB820);
        sub_B6DC(v202, &qword_2EB830);
        uint64_t v140 = v198;
      }
      uint64_t v74 = &qword_2EB838;
      sub_B678(v114, v79, &qword_2EB838);
      swift_storeEnumTagMultiPayload();
      sub_3EE20(&qword_2EB878, &qword_2EB858);
      sub_3ED04(&qword_2EB888, &qword_2EB838, (void (*)(void))sub_3ECC8, (void (*)(void))sub_3F040);
      sub_26B2F0();
      sub_B678(v98, v140, &qword_2EB850);
      swift_storeEnumTagMultiPayload();
      sub_3EBFC();
      sub_3F100();
      uint64_t v157 = v114;
      uint64_t v77 = (uint64_t)v165;
      sub_26B2F0();
      sub_B6DC(v98, &qword_2EB850);
      uint64_t v78 = v157;
    }
    else
    {
      uint64_t v65 = v201;
      uint64_t v66 = v202;
      if (v49 - 2 >= 2)
      {
        double v116 = sub_3D810();
        sub_3D810();
        double v118 = v117;
        uint64_t v119 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
        uint64_t v77 = (uint64_t)v165;
        uint64_t v121 = v198;
        uint64_t v122 = v196;
        uint64_t v123 = v161[0];
        if (v48)
        {
          sub_26A8D0();
          uint64_t v124 = v201;
          sub_3F2D0(v50, v201, (uint64_t (*)(void))type metadata accessor for CoverView);
          uint64_t v125 = (_OWORD *)(v124 + *((int *)v122 + 9));
          long long v126 = v214;
          *uint64_t v125 = v213;
          v125[1] = v126;
          v125[2] = v215;
          sub_B678(v124, v193, &qword_2EB828);
          swift_storeEnumTagMultiPayload();
          sub_3F194();
          sub_3EE20((unint64_t *)&qword_2EB8A0, &qword_2EB828);
          uint64_t v127 = (uint64_t)v194;
          sub_26B2F0();
          sub_B678(v127, v121, &qword_2EB7E0);
          swift_storeEnumTagMultiPayload();
          sub_3EBFC();
          sub_3F100();
          sub_26B2F0();
          sub_B6DC(v127, &qword_2EB7E0);
          uint64_t v128 = v124;
          uint64_t v129 = &qword_2EB828;
        }
        else
        {
          sub_AFA54(0.0, 1, 0.0, 1, v116, 0, 0.0, 1, v161[0], 0.0, 1, v118, 0, v119, v120);
          sub_B678(v123, (uint64_t)v162, &qword_2EB858);
          swift_storeEnumTagMultiPayload();
          sub_3EE20(&qword_2EB878, &qword_2EB858);
          sub_3ED04(&qword_2EB888, &qword_2EB838, (void (*)(void))sub_3ECC8, (void (*)(void))sub_3F040);
          uint64_t v160 = (uint64_t)v163;
          sub_26B2F0();
          sub_B678(v160, v121, &qword_2EB850);
          swift_storeEnumTagMultiPayload();
          sub_3EBFC();
          sub_3F100();
          sub_26B2F0();
          sub_B6DC(v160, &qword_2EB850);
          uint64_t v128 = v123;
          uint64_t v129 = &qword_2EB858;
        }
        sub_B6DC(v128, v129);
        uint64_t v158 = (uint64_t)v204;
        goto LABEL_22;
      }
      sub_3D810();
      _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_26A8D0();
      sub_3F2D0(v50, v65, (uint64_t (*)(void))type metadata accessor for CoverView);
      uint64_t v67 = (_OWORD *)(v65 + *((int *)v196 + 9));
      long long v68 = v214;
      *uint64_t v67 = v213;
      v67[1] = v68;
      v67[2] = v215;
      sub_3D810();
      double v70 = v69;
      uint64_t v71 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_AFACC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v66, 0.0, 1, v70, 0, v71, v72);
      sub_B6DC(v65, &qword_2EB828);
      uint64_t v73 = v182;
      sub_B678(v66, v182, &qword_2EB830);
      *(_WORD *)(v73 + *(int *)(v192 + 36)) = 257;
      sub_B6DC(v66, &qword_2EB830);
      uint64_t v74 = &qword_2EB7E8;
      uint64_t v75 = v183;
      sub_19CC4(v73, v183, &qword_2EB7E8);
      sub_B678(v75, v193, &qword_2EB7E8);
      swift_storeEnumTagMultiPayload();
      sub_3F194();
      sub_3EE20((unint64_t *)&qword_2EB8A0, &qword_2EB828);
      uint64_t v76 = (uint64_t)v194;
      sub_26B2F0();
      sub_B678(v76, v198, &qword_2EB7E0);
      swift_storeEnumTagMultiPayload();
      sub_3EBFC();
      sub_3F100();
      uint64_t v77 = (uint64_t)v165;
      sub_26B2F0();
      sub_B6DC(v76, &qword_2EB7E0);
      uint64_t v78 = v75;
    }
    sub_B6DC(v78, v74);
    uint64_t v158 = (uint64_t)v204;
LABEL_22:
    sub_B678(v77, v158, &qword_2EB860);
    swift_storeEnumTagMultiPayload();
    sub_3ED04(&qword_2EB868, &qword_2EB860, (void (*)(void))sub_3EBFC, (void (*)(void))sub_3F100);
    sub_26B2F0();
    sub_B6DC(v77, &qword_2EB860);
    sub_3F338(v50, (uint64_t (*)(void))type metadata accessor for CoverView);
    uint64_t v39 = (long long *)v224;
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v39);
  }
  uint64_t v38 = v204;
  void *v204 = 0;
  *((unsigned char *)v38 + 8) = 1;
  swift_storeEnumTagMultiPayload();
  sub_3ED04(&qword_2EB868, &qword_2EB860, (void (*)(void))sub_3EBFC, (void (*)(void))sub_3F100);
  sub_26B2F0();
  uint64_t v39 = v225;
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v39);
}

double sub_3D810()
{
  uint64_t v42 = type metadata accessor for SizeConstants.Environment(0) - 8;
  __chkstk_darwin(v42);
  uint64_t v41 = (uint64_t)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4A98(&qword_2EB940) - 8;
  __chkstk_darwin(v43);
  uint64_t v40 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2EB948);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (double *)((char *)&v37 - v8);
  uint64_t v38 = sub_26B980();
  uint64_t v10 = *(void *)(v38 - 8);
  uint64_t v11 = __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v44 = (char *)&v37 - v14;
  uint64_t v15 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ListItemThumbnailView();
  uint64_t v39 = v17;
  sub_41378((uint64_t)v17);
  uint64_t v19 = v0 + *(int *)(v18 + 24);
  uint64_t v20 = *(void *)v19;
  LOBYTE(v18) = *(unsigned char *)(v19 + 8);
  sub_10E0C(*(void *)v19, v18);
  char v21 = sub_40900(v20, v18);
  sub_C374(v20, v18);
  double v22 = ListItemThumbnailViewModel.unscaledThumbnailSize(isCompact:)(v21 & 1);
  uint64_t v24 = v23;
  uint64_t v25 = v44;
  uint64_t v26 = v38;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v44, enum case for Font.TextStyle.body(_:), v38);
  sub_3F2D0((uint64_t)v17, (uint64_t)v9 + *(int *)(v4 + 36), type metadata accessor for SizeConstants.Environment);
  *uint64_t v9 = v22;
  *((void *)v9 + 1) = v24;
  sub_B678((uint64_t)v9, (uint64_t)v7, &qword_2EB948);
  uint64_t v27 = v26;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v25, v26);
  uint64_t v28 = v40;
  sub_B678((uint64_t)v7, v40, &qword_2EB948);
  uint64_t v29 = v41;
  sub_3F2D0((uint64_t)&v7[*(int *)(v4 + 36)], v41, type metadata accessor for SizeConstants.Environment);
  uint64_t v30 = v29 + *(int *)(v42 + 32);
  double v31 = sub_1AB90((uint64_t)v13, v30);
  uint64_t v32 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
  double v33 = 1.0;
  if ((*(void *)&v31 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v33 = v31;
  }
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0) {
    double v31 = v33;
  }
  sub_B6DC((uint64_t)v7, &qword_2EB948);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  v34(v13, v27);
  *(double *)(v28 + *(int *)(v43 + 44)) = v31;
  swift_getKeyPath();
  double v35 = sub_223F7C();
  swift_release();
  sub_B6DC(v28, &qword_2EB940);
  sub_B6DC((uint64_t)v9, &qword_2EB948);
  v34(v44, v27);
  sub_3F338((uint64_t)v39, type metadata accessor for SizeConstants);
  return v35;
}

double sub_3DC94()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ListItemThumbnailView() + 24);
  uint64_t v2 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_10E0C(*(void *)v1, v3);
  char v4 = sub_40900(v2, v3);
  sub_C374(v2, v3);
  sub_3F274(v0, (uint64_t)v9);
  if (v11) {
    goto LABEL_5;
  }
  unsigned __int8 v5 = v9[48];
  if (!(v4 & 1 | (v10 == 255))) {
    unsigned __int8 v5 = v10;
  }
  if (v5)
  {
LABEL_5:
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v9);
    return 6.0;
  }
  else
  {
    uint64_t v7 = 56;
    if (v4 & 1 | (v10 == 255)) {
      uint64_t v7 = 40;
    }
    uint64_t v8 = v9[v7];
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v9);
    double result = 6.0;
    if (v8 == 1) {
      return 4.0;
    }
  }
  return result;
}

uint64_t sub_3DD7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isCompact.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_3DDAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isCompact.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_3DDDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ListItemThumbnailView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 65);
    long long v8 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v8;
    (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
    if (v7)
    {
      *(unsigned char *)(v4 + 40) = *((unsigned char *)a2 + 40);
    }
    else
    {
      *(void *)(v4 + 40) = a2[5];
      *(unsigned char *)(v4 + 48) = *((unsigned char *)a2 + 48);
      *(void *)(v4 + 56) = a2[7];
      *(unsigned char *)(v4 + 64) = *((unsigned char *)a2 + 64);
    }
    *(unsigned char *)(v4 + 65) = v7;
    uint64_t v10 = *(int *)(a3 + 20);
    char v11 = (_WORD *)(v4 + v10);
    uint64_t v12 = (_WORD *)((char *)a2 + v10);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *char v11 = *v12;
      uint64_t v13 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v14 = v13[6];
      uint64_t v15 = (char *)v11 + v14;
      uint64_t v16 = (char *)v12 + v14;
      uint64_t v17 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(void *)((char *)v11 + v13[7]) = *(void *)((char *)v12 + v13[7]);
      uint64_t v18 = v13[8];
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = (char *)v12 + v18;
      v19[2] = v20[2];
      *(_WORD *)uint64_t v19 = *(_WORD *)v20;
    }
    else
    {
      *(void *)char v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_10E0C(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v25;
  }
  return v4;
}

uint64_t destroy for ListItemThumbnailView(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_C374(v8, v9);
}

uint64_t initializeWithCopy for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 65);
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
  if (v6)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 65) = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  char v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *char v9 = *v10;
    char v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = (char *)v10 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
    uint64_t v16 = v11[8];
    uint64_t v17 = (char *)v9 + v16;
    uint64_t v18 = (char *)v10 + v16;
    void v17[2] = v18[2];
    *(_WORD *)uint64_t v17 = *(_WORD *)v18;
  }
  else
  {
    *(void *)char v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_10E0C(*(void *)v21, v23);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  return a1;
}

uint64_t assignWithCopy for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_3E544(a1);
    char v6 = *(unsigned char *)(a2 + 65);
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    if (v6)
    {
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    }
    else
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v8;
      LOBYTE(v8) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = v8;
    }
    *(unsigned char *)(a1 + 65) = v6;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (unsigned char *)(a1 + v9);
    char v11 = (unsigned char *)(a2 + v9);
    sub_B6DC(a1 + v9, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v10 = *v11;
      v10[1] = v11[1];
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = &v10[v13];
      uint64_t v15 = &v11[v13];
      uint64_t v16 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
      uint64_t v17 = v12[8];
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      char v20 = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
      _OWORD v18[2] = v20;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_10E0C(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  sub_C374(v26, v27);
  return a1;
}

uint64_t sub_3E544(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)((char *)v9 + v12[7]) = *(void *)((char *)v10 + v12[7]);
    uint64_t v17 = v12[8];
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = (char *)v10 + v17;
    _OWORD v18[2] = v19[2];
    *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t assignWithTake for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_3E544(a1);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_WORD *)(a1 + v8);
    uint64_t v10 = (_WORD *)(a2 + v8);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    sub_B6DC(a1 + v8, &qword_2EB708);
    uint64_t v11 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)v9 + v13;
      uint64_t v15 = (char *)v10 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)((char *)v9 + v12[7]) = *(void *)((char *)v10 + v12[7]);
      uint64_t v17 = v12[8];
      uint64_t v18 = (char *)v9 + v17;
      uint64_t v19 = (char *)v10 + v17;
      _OWORD v18[2] = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  LOBYTE(v22) = *((unsigned char *)v22 + 8);
  uint64_t v24 = *(void *)v21;
  char v25 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = (_BYTE)v22;
  sub_C374(v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3E8A8);
}

uint64_t sub_3E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 65);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EB718);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ListItemThumbnailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3E968);
}

uint64_t sub_3E968(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 65) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EB718);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_3EA10()
{
  sub_3EAB0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_3EAB0()
{
  if (!qword_2EB788)
  {
    type metadata accessor for SizeConstants(255);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EB788);
    }
  }
}

uint64_t sub_3EB08()
{
  return sub_7C18(&qword_2EB7C0, &qword_2EB7C8);
}

uint64_t sub_3EB44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_3EBA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_3EBFC()
{
  unint64_t result = qword_2EB870;
  if (!qword_2EB870)
  {
    sub_7B0C(&qword_2EB850);
    sub_3EE20(&qword_2EB878, &qword_2EB858);
    sub_3ED04(&qword_2EB888, &qword_2EB838, (void (*)(void))sub_3ECC8, (void (*)(void))sub_3F040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB870);
  }
  return result;
}

uint64_t sub_3ECC8()
{
  return sub_3ED04(&qword_2EB890, &qword_2EB820, (void (*)(void))sub_3ED8C, (void (*)(void))sub_3EEC4);
}

uint64_t sub_3ED04(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3ED8C()
{
  unint64_t result = qword_2EB898;
  if (!qword_2EB898)
  {
    sub_7B0C(&qword_2EB830);
    sub_3EE20((unint64_t *)&qword_2EB8A0, &qword_2EB828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB898);
  }
  return result;
}

uint64_t sub_3EE20(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_3F22C(&qword_2EB880, (void (*)(uint64_t))type metadata accessor for CoverView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3EEC4()
{
  unint64_t result = qword_2EB8A8;
  if (!qword_2EB8A8)
  {
    sub_7B0C(&qword_2EB808);
    sub_3EF84(&qword_2EB8B0, &qword_2EB800, &qword_2EB8B8, &qword_2EB8C0);
    sub_7C18(&qword_2EB8C8, &qword_2EB8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB8A8);
  }
  return result;
}

uint64_t sub_3EF84(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_3EE20((unint64_t *)&qword_2EB8A0, &qword_2EB828);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3F040()
{
  unint64_t result = qword_2EB8D8;
  if (!qword_2EB8D8)
  {
    sub_7B0C(&qword_2EB7F8);
    sub_3EF84(&qword_2EB8E0, &qword_2EB7F0, &qword_2EB8E8, &qword_2EB8F0);
    sub_7C18(&qword_2EB8F8, &qword_2EB900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB8D8);
  }
  return result;
}

unint64_t sub_3F100()
{
  unint64_t result = qword_2EB908;
  if (!qword_2EB908)
  {
    sub_7B0C(&qword_2EB7E0);
    sub_3F194();
    sub_3EE20((unint64_t *)&qword_2EB8A0, &qword_2EB828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB908);
  }
  return result;
}

unint64_t sub_3F194()
{
  unint64_t result = qword_2EB910;
  if (!qword_2EB910)
  {
    sub_7B0C(&qword_2EB7E8);
    sub_3ED8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB910);
  }
  return result;
}

uint64_t sub_3F22C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3F274(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_3F2D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3F338(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static IntentKinds.table.getter()
{
  if (qword_2E9B90 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2EB960);
  sub_26A310();
  return v1;
}

uint64_t sub_3F414()
{
  if (qword_2E9B98 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2EB958;
  sub_4A98(&qword_2EB9F0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = v0;
  qword_2EB950 = v1;

  return swift_bridgeObjectRetain();
}

unint64_t sub_3F4A4()
{
  sub_4A98(&qword_2EB9F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x8000000000288200;
  uint64_t v1 = sub_4A98(&qword_2EBA00);
  unint64_t v2 = sub_3F900();
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  unint64_t result = sub_9218(inited);
  qword_2EB958 = result;
  return result;
}

unint64_t sub_3F530()
{
  if (qword_2E9B90 != -1) {
    swift_once();
  }
  sub_4A98(&qword_2EB960);
  sub_26A310();
  unint64_t v0 = sub_23E65C(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t YearInReviewPagedFrame.sharableView.getter()
{
  return 0;
}

uint64_t sub_3F5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23D1DC(a1, a2, a3);
}

uint64_t static _IntentKindTable_BooksReturningUnknown._unknownTypeWrapper.getter()
{
  return type metadata accessor for BooksOpaqueIntentModel();
}

uint64_t static _IntentKindTable_BooksReturningUnknown._decode(_:from:)()
{
  return sub_26D060();
}

uint64_t sub_3F60C(void *a1)
{
  return static _IntentKindTable_BooksReturningUnknown._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_3F61C(void *a1)
{
  return static _IntentKindTable_BooksReturningUnknown._defaultType.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_3F62C()
{
  return static _IntentKindTable_BooksReturningUnknown._unknownTypeWrapper.getter();
}

uint64_t sub_3F634()
{
  return static _IntentKindTable_BooksReturningUnknown._decode(_:from:)();
}

void static IntentKinds.register<A>(_:name:)(uint64_t a1)
{
  if (qword_2E9B90 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_3F7D0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_3F728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_B00C(a4, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3F7D0(uint64_t *a1)
{
  return sub_3F728(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t static IntentKinds.register<A>(_:)(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

void static IntentModel.registerIntentKind(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t static IntentModel<>.registerIntentKind()(uint64_t a1)
{
  return static IntentKinds.register<A>(_:)(a1);
}

unint64_t sub_3F884()
{
  unint64_t result = qword_2EB968[0];
  if (!qword_2EB968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2EB968);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentKinds()
{
  return &type metadata for IntentKinds;
}

uint64_t type metadata accessor for _IntentKindTable_BooksReturningUnknown()
{
  return sub_129B4();
}

unint64_t sub_3F900()
{
  unint64_t result = qword_2EBA08;
  if (!qword_2EBA08)
  {
    sub_7B0C(&qword_2EBA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA08);
  }
  return result;
}

uint64_t _CodeAnyActionModel_OrNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return sub_3F970(a1, a2);
}

uint64_t sub_3F970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _CodeAnyActionModel_OrNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_3F9E4(v1, a1);
}

uint64_t sub_3F9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _CodeAnyActionModel_OrNil.wrappedValue.setter(uint64_t a1)
{
  return sub_3F970(a1, v1);
}

uint64_t _CodeAnyActionModel_OrNil.description.getter()
{
  sub_3F9E4(v0, (uint64_t)&v3);
  if (v4)
  {
    sub_AD44(&v3, (uint64_t)v5);
    *(void *)&long long v3 = 0;
    *((void *)&v3 + 1) = 0xE000000000000000;
    sub_4A98(&qword_2EA840);
    sub_26DB80();
    uint64_t v1 = v3;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v5);
  }
  else
  {
    sub_B6DC((uint64_t)&v3, &qword_2EA818);
    return 7104878;
  }
  return v1;
}

uint64_t _CodeAnyActionModel_OrNil.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)&v6);
  sub_3FBD4();
  sub_26D990();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v2) {
    return sub_3FC28(a2);
  }
  if (v8)
  {
    sub_C224((uint64_t)v7, (uint64_t)v9);
    sub_3FC5C((uint64_t)v7);
  }
  else
  {
    sub_B6DC((uint64_t)v7, &qword_2EBA18);
    memset(v9, 0, sizeof(v9));
    uint64_t v10 = 0;
  }
  return sub_3F970((uint64_t)v9, a2);
}

unint64_t sub_3FBD4()
{
  unint64_t result = qword_2EBA10;
  if (!qword_2EBA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA10);
  }
  return result;
}

uint64_t sub_3FC28(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  return a1;
}

uint64_t sub_3FC5C(uint64_t a1)
{
  return a1;
}

uint64_t _CodeAnyActionModel_OrNil.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)v7);
  sub_3FBD4();
  sub_26D970();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v6)
  {
    sub_C224((uint64_t)v5, (uint64_t)v7);
    sub_3FC5C((uint64_t)v5);
  }
  else
  {
    sub_B6DC((uint64_t)v5, &qword_2EBA18);
    memset(v7, 0, sizeof(v7));
    uint64_t v8 = 0;
  }
  return sub_3F970((uint64_t)v7, a2);
}

uint64_t sub_3FD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return _CodeAnyActionModel_OrNil.init(from:)(a1, a2);
}

uint64_t initializeWithCopy for _CodeAnyActionModel_OrNil(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for _CodeAnyActionModel_OrNil(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    goto LABEL_7;
  }
  sub_16D58((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for _CodeAnyActionModel_OrNil(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for _CodeAnyActionModel_OrNil(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _CodeAnyActionModel_OrNil(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _CodeAnyActionModel_OrNil()
{
  return &type metadata for _CodeAnyActionModel_OrNil;
}

uint64_t ListItemAccessoryMoreButton.init(assetInfo:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_AD44(a1, a2);
}

uint64_t ListItemAccessoryMoreButton.content(contextActionMenuView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_C224(v3, (uint64_t)v8);
  swift_retain();
  return ListItemAccessoryMoreButtonView.init(assetInfo:contextActionMenuView:showDownloadProgress:)(v8, a1, a2, 1, a3);
}

uint64_t sub_4000C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ListItemAccessoryMoreButton()
{
  return &type metadata for ListItemAccessoryMoreButton;
}

unint64_t sub_4003C()
{
  unint64_t result = qword_2EBA40;
  if (!qword_2EBA40)
  {
    type metadata accessor for ListItemAccessoryMoreButtonView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA40);
  }
  return result;
}

uint64_t ListItemMetadataFormatAndDescriptorBase.init<>(showFormat:assetInfo:)@<X0>(char a1@<W0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  *(void *)a3 = KeyPath;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 51) = 0u;
  *(void *)(a3 + 72) = v7;
  *(unsigned char *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = v8;
  *(unsigned char *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 97) = a1;

  return sub_AD44(a2, a3 + 104);
}

uint64_t ListItemMetadataFormatAndDescriptorExternals.assetState.getter@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  _OWORD v6[2] = *(_OWORD *)(v1 + 32);
  v7[0] = v3;
  *(_DWORD *)((char *)v7 + 15) = *(_DWORD *)(v1 + 63);
  long long v4 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v4;
  sub_44FD8((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8(a1);
  return sub_44FD8((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
}

double sub_401C0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_26D850();
  uint64_t v9 = sub_26B710();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1B1A8C(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  sub_C374(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EA968, type metadata accessor for ColorConstants, 0x6E6F43726F6C6F43, 0xEE0073746E617473, a1);
}

uint64_t sub_4040C@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EBC88, type metadata accessor for FontConstants.ListItem, 0x6D6574497473694CLL, 0xE800000000000000, a1);
}

uint64_t sub_40440@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_26B0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_46968((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_26D850();
  uint64_t v20 = sub_26B710();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v24 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v27 = sub_1B1A8C(v26, v24, &v28);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_406C8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_26D850();
    uint64_t v9 = sub_26B710();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1B1A8C(0xD000000000000017, 0x8000000000288340, &v14);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_408D4@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(qword_2EA638, &qword_2EA6C8, 0xD000000000000027, 0x8000000000288310, a1);
}

uint64_t sub_40900(uint64_t a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_26D850();
  uint64_t v9 = sub_26B710();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1B1A8C(1819242306, 0xE400000000000000, &v14);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  sub_C374(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_40B04(void *a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v12 = a1;
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_26D850();
    uint64_t v9 = sub_26B710();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_1B1A8C(0xD000000000000013, 0x8000000000288440, &v15);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    sub_1D1EC(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return (uint64_t)a1;
}

uint64_t sub_40D18@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EA810, (uint64_t (*)(void))&type metadata accessor for DataStack, 0x6361745361746144, 0xE90000000000006BLL, a1);
}

uint64_t sub_40D50@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(&qword_2EA858, &qword_2EA850, 0xD000000000000017, 0x8000000000288420, a1);
}

uint64_t sub_40D7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_26B0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v10, (uint64_t)v24, a1);
  if (v25 == 1) {
    return sub_19CC4((uint64_t)v24, a5, a2);
  }
  unint64_t v17 = v24[0];
  os_log_type_t v18 = sub_26D850();
  os_log_type_t v19 = sub_26B710();
  if (os_log_type_enabled(v19, v18))
  {
    v22[0] = a4;
    uint64_t v20 = swift_slowAlloc();
    v22[1] = v17;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    void v22[2] = sub_1B1A8C(a3, v22[0], &v23);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_40FB4@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EA970, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_40FF0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_26B0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(a1);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_26D850();
    uint64_t v21 = sub_26B710();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1B1A8C(v27, v25, &v29);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_412A8@<X0>(uint64_t a1@<X8>)
{
  return sub_42218(&qword_2EAB10, (uint64_t (*)(void *, uint64_t))sub_AD44, 0xD000000000000016, 0x80000000002882F0, a1);
}

uint64_t _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EA978, type metadata accessor for SizeConstants.Spacing, 0x676E6963617053, 0xE700000000000000, a1);
}

uint64_t sub_41314@<X0>(uint64_t a1@<X8>)
{
  return sub_41D60(&qword_2EB3D8, &qword_2EB3E0, 0xD000000000000020, 0x8000000000288380, a1);
}

uint64_t sub_41340@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EB3E8, (uint64_t (*)(void))&type metadata accessor for BlendMode, 0x646F4D646E656C42, 0xE900000000000065, a1);
}

uint64_t sub_41378@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EB708, type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, a1);
}

uint64_t sub_413B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26B0A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 66) == 1)
  {
    __int16 v8 = *(_WORD *)(v1 + 64);
    uint64_t v9 = *(void *)(v1 + 56);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
    *(void *)(a1 + 56) = v9;
    *(_WORD *)(a1 + 64) = v8;
    return sub_44FD8(v1, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  }
  else
  {
    sub_44FD8(v1, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
    os_log_type_t v11 = sub_26D850();
    uint64_t v12 = sub_26B710();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v16[1] = v7;
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v16[0] = v14 + 4;
      void v16[2] = sub_1B1A8C(0xD00000000000001BLL, 0x8000000000288570, &v17);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    sub_44FD8(v1, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_41640@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_26B0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_10E0C(a1, 0);
    os_log_type_t v11 = sub_26D850();
    uint64_t v12 = sub_26B710();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v16[1] = a3;
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      void v16[2] = sub_1B1A8C(0xD00000000000001DLL, 0x8000000000288550, &v17);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    sub_C374(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_4185C@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_4247C(a1, a2, (void (*)(uint64_t, void))sub_10E0C, (void (*)(void, void))sub_C374, a3);
}

uint64_t sub_41888(uint64_t a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_26D850();
  uint64_t v9 = sub_26B710();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 136315138;
    uint64_t v13 = sub_1B1A8C(0xD000000000000012, 0x8000000000288360, &v14);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  sub_C374(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_41A98@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EBC50, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_41AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EBC60, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_41B18(uint64_t a1, char a2)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_26D850();
    uint64_t v9 = sub_26B710();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 136315138;
      uint64_t v13 = sub_1B1A8C(0x6C616E6F6974704FLL, 0xEE003E6C6F6F423CLL, &v14);
      sub_26D9A0();
      _os_log_impl(&def_5F050, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    sub_C374(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_41D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_41D60(&qword_2EB918, &qword_2EBC78, 0x6C616E6F6974704FLL, 0xEE003E444955553CLL, a1);
}

uint64_t sub_41D60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_26B0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_19CC4((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_26D850();
  os_log_type_t v20 = sub_26B710();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v24 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v27 = sub_1B1A8C(v26, v24, &v28);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_41FE8@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EBC98, (uint64_t (*)(void))&type metadata accessor for OpaqueMetricsFieldsContext, 0xD00000000000001ALL, 0x80000000002883E0, a1);
}

uint64_t sub_42020@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(&qword_2EBCA0, &qword_2EBCA8, 0xD000000000000017, 0x8000000000288400, a1);
}

uint64_t sub_4204C@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EBC58, type metadata accessor for FontConstants, 0x736E6F43746E6F46, 0xED000073746E6174, a1);
}

uint64_t sub_4208C@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EBCD8, type metadata accessor for FontConstants.Button, 0x6E6F74747542, 0xE600000000000000, a1);
}

uint64_t sub_420BC@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(&qword_2EBC68, &qword_2EBC70, 0xD00000000000002BLL, 0x80000000002883B0, a1);
}

uint64_t sub_420E8@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EBCD0, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x80000000002884B0, a1);
}

uint64_t sub_42120@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(&qword_2EBCC0, &qword_2EBCC8, 0xD000000000000013, 0x8000000000288490, a1);
}

uint64_t sub_4214C@<X0>(uint64_t a1@<X8>)
{
  return sub_40D7C(&qword_2EBCB0, &qword_2EBCB8, 0xD00000000000002CLL, 0x8000000000288460, a1);
}

uint64_t sub_42178@<X0>(uint64_t a1@<X8>)
{
  return sub_40440(&qword_2EBC80, type metadata accessor for FontConstants.Navigation, 0x697461676976614ELL, 0xEA00000000006E6FLL, a1);
}

uint64_t sub_421B0@<X0>(uint64_t a1@<X8>)
{
  return sub_40FF0(&qword_2EBC90, (uint64_t (*)(void))&type metadata accessor for Image.Scale, 0x656C616353, 0xE500000000000000, a1);
}

uint64_t sub_421E0@<X0>(uint64_t a1@<X8>)
{
  return sub_42218(&qword_2EBC48, (uint64_t (*)(void *, uint64_t))sub_AD44, 0xD000000000000022, 0x80000000002882C0, a1);
}

uint64_t sub_42218@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_26B0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v10, (uint64_t)v24, a1);
  if (v25 == 1) {
    return a2(v24, a5);
  }
  unint64_t v17 = v24[0];
  os_log_type_t v18 = sub_26D850();
  os_log_type_t v19 = sub_26B710();
  if (os_log_type_enabled(v19, v18))
  {
    v22[0] = a4;
    uint64_t v20 = swift_slowAlloc();
    v22[1] = v17;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    void v22[2] = sub_1B1A8C(a3, v22[0], &v23);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_42450@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_4247C(a1, a2, (void (*)(uint64_t, void))sub_46AF8, (void (*)(void, void))sub_46AFC, a3);
}

uint64_t sub_4247C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void)@<X2>, void (*a4)(void, void)@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v10 = sub_26B0A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a5 = a1;
  }
  else
  {
    a3(a1, 0);
    os_log_type_t v15 = sub_26D850();
    uint64_t v16 = sub_26B710();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v21 = a4;
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = a5;
      uint64_t v23 = v19;
      *(_DWORD *)os_log_type_t v18 = 136315138;
      uint64_t v22 = sub_1B1A8C(1702521171, 0xE400000000000000, &v23);
      a4 = v21;
      sub_26D9A0();
      _os_log_impl(&def_5F050, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_26B090();
    swift_getAtKeyPath();
    a4(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  return result;
}

double sub_426A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_26B0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v10 = sub_26D850();
  uint64_t v11 = sub_26B710();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v16[0] = a2;
    double v17 = *(double *)&v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    v16[1] = sub_1B1A8C(0x657A69534743, 0xE600000000000000, (uint64_t *)&v17);
    sub_26D9A0();
    _os_log_impl(&def_5F050, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    a2 = v16[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_26B090();
  swift_getAtKeyPath();
  sub_4695C(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t ListItemMetadataFormatAndDescriptorExternals.isReachable.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  char v2 = *(unsigned char *)(v0 + 80);
  sub_10E0C(v1, v2);
  char v3 = sub_40900(v1, v2);
  sub_C374(v1, v2);
  return v3 & 1;
}

uint64_t ListItemMetadataFormatAndDescriptorExternals.dispatchState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 88);
  char v4 = *(unsigned char *)(v1 + 96);
  sub_10E0C(v3, v4);
  sub_41640(v3, v4, a1);

  return sub_C374(v3, v4);
}

double ListItemMetadataFormatAndDescriptorExternals.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  uint64_t v4 = swift_getKeyPath();
  *(void *)a1 = KeyPath;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 51) = 0u;
  *(void *)(a1 + 72) = v3;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v4;
  *(unsigned char *)(a1 + 96) = 0;
  return result;
}

double ListItemMetadataFormatAndDescriptorExternals.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *(void *)a2 = KeyPath;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 51) = 0u;
  *(void *)(a2 + 72) = v5;
  *(unsigned char *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = v6;
  *(unsigned char *)(a2 + 96) = 0;
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.externals.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ListItemMetadataFormatAndDescriptorBase.showFormat.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t ListItemMetadataFormatAndDescriptorBase.showFormat.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t (*ListItemMetadataRecommendationCreatorDescriptorBase.description.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadataFormatAndDescriptorBase.content(localizer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v97 = a3;
  uint64_t v96 = sub_4A98(&qword_2EBA48);
  __chkstk_darwin(v96);
  uint64_t v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2EBA50);
  uint64_t v90 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_4A98(&qword_2EBA58);
  __chkstk_darwin(v80);
  uint64_t v81 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_4A98(&qword_2EBA60);
  __chkstk_darwin(v93);
  uint64_t v82 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v10 - 8);
  os_log_type_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_26A220();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v13 = __chkstk_darwin(v88);
  os_log_type_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v80 - v16;
  uint64_t v91 = sub_4A98(&qword_2EBA68);
  __chkstk_darwin(v91);
  uint64_t v92 = (_OWORD *)((char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_4A98(&qword_2EBA70);
  uint64_t v19 = __chkstk_darwin(v18);
  double v85 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v94 = (uint64_t)&v80 - v21;
  uint64_t v22 = *(void *)(a2 + 24);
  uint64_t v98 = *(void *)(a2 + 16);
  uint64_t v99 = v22;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  if (!*((void *)&v105 + 1))
  {
    sub_441C0();
    uint64_t v43 = v90;
    uint64_t v44 = v95;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v5, v7, v95);
    swift_storeEnumTagMultiPayload();
    sub_45050();
    *(void *)&long long v105 = &type metadata for Text;
    *((void *)&v105 + 1) = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v7, v44);
  }
  uint64_t v83 = v18;
  long long v84 = v5;
  int v24 = v108;
  swift_bridgeObjectRelease();
  if ((v24 & 0x1000000) != 0)
  {
    uint64_t v46 = sub_45380(v89);
    uint64_t v48 = v47;
    *(void *)&long long v100 = v46;
    *((void *)&v100 + 1) = v47;
    char v50 = v49 & 1;
    *(void *)&long long v101 = v49 & 1;
    *((void *)&v101 + 1) = v51;
    LOBYTE(v102[0]) = 0;
    sub_45370(v46, v47, v49 & 1);
    swift_bridgeObjectRetain();
    sub_26B2F0();
    char v52 = v107;
    long long v53 = v106;
    uint64_t v54 = v92;
    _OWORD *v92 = v105;
    v54[1] = v53;
    *((unsigned char *)v54 + 32) = v52;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EBA98);
    sub_45164();
    sub_46754(&qword_2EBAA0, &qword_2EBA60, (void (*)(void))sub_451D0);
    uint64_t v29 = v94;
    sub_26B2F0();
    sub_3A380(v46, v48, v50);
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_4A98(&qword_2EBA88);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v29, 0, 1, v55);
LABEL_13:
    uint64_t v74 = (uint64_t)v84;
    goto LABEL_14;
  }
  sub_43A44(a2, (uint64_t)v12);
  uint64_t v25 = v87;
  uint64_t v26 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v12, 1, v88) != 1)
  {
    uint64_t v56 = v86;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v86, v12, v26);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v15, v56, v26);
    sub_C224(v89, (uint64_t)&v105);
    uint64_t v57 = sub_26BA00();
    uint64_t v59 = v58;
    LOBYTE(v56) = v60 & 1;
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v61 = sub_26BA30();
    uint64_t v63 = v62;
    char v65 = v64;
    uint64_t v67 = v66;
    swift_release();
    sub_3A380(v57, v59, (char)v56);
    swift_bridgeObjectRelease();
    *(void *)&long long v100 = v61;
    *((void *)&v100 + 1) = v63;
    *(void *)&long long v101 = v65 & 1;
    *((void *)&v101 + 1) = v67;
    LOBYTE(v102[0]) = 1;
    sub_45370(v61, v63, v65 & 1);
    swift_bridgeObjectRetain();
    sub_26B2F0();
    char v68 = v107;
    long long v69 = v106;
    uint64_t v70 = v25;
    uint64_t v71 = v92;
    _OWORD *v92 = v105;
    v71[1] = v69;
    *((unsigned char *)v71 + 32) = v68;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EBA98);
    sub_45164();
    sub_46754(&qword_2EBAA0, &qword_2EBA60, (void (*)(void))sub_451D0);
    uint64_t v72 = (uint64_t)v85;
    sub_26B2F0();
    sub_3A380(v61, v63, v65 & 1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v86, v88);
    uint64_t v73 = sub_4A98(&qword_2EBA88);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
    uint64_t v29 = v94;
    sub_19CC4(v72, v94, &qword_2EBA70);
    goto LABEL_13;
  }
  sub_B6DC((uint64_t)v12, &qword_2EA0C0);
  uint64_t v27 = sub_43EF0(a2);
  uint64_t v29 = v94;
  uint64_t v30 = v90;
  double v31 = v7;
  if (v32) {
    goto LABEL_15;
  }
  uint64_t v33 = v27;
  uint64_t v34 = v28;
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 != 1) {
    goto LABEL_9;
  }
  id v35 = [self standardUserDefaults];
  NSString v36 = sub_26D3F0();
  uint64_t v88 = v34;
  uint64_t v37 = v33;
  uint64_t v38 = v30;
  uint64_t v39 = v36;
  unsigned __int8 v40 = [v35 integerForKey:v36];

  double v31 = v7;
  uint64_t v30 = v38;
  uint64_t v33 = v37;
  uint64_t v34 = v88;
  if ((v40 & 0x10) != 0)
  {
LABEL_15:
    if (!sub_43FF4(a2))
    {
      uint64_t v79 = sub_4A98(&qword_2EBA88);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v29, 1, 1, v79);
      uint64_t v74 = (uint64_t)v84;
      goto LABEL_14;
    }
    sub_441C0();
    uint64_t v75 = v30;
    uint64_t v76 = v95;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v81, v31, v95);
    swift_storeEnumTagMultiPayload();
    sub_451D0();
    *(void *)&long long v105 = &type metadata for Text;
    *((void *)&v105 + 1) = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    uint64_t v77 = (uint64_t)v82;
    sub_26B2F0();
    sub_B678(v77, (uint64_t)v92, &qword_2EBA60);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EBA98);
    sub_45164();
    uint64_t v91 = (uint64_t)v31;
    sub_46754(&qword_2EBAA0, &qword_2EBA60, (void (*)(void))sub_451D0);
    uint64_t v42 = (uint64_t)v85;
    sub_26B2F0();
    sub_B6DC(v77, &qword_2EBA60);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v91, v76);
  }
  else
  {
LABEL_9:
    sub_C224(v89, (uint64_t)&v104);
    *(void *)&long long v100 = swift_getKeyPath();
    BYTE8(v100) = 0;
    *(void *)&long long v101 = v33;
    *((void *)&v101 + 1) = v34;
    sub_AD44(&v104, (uint64_t)v102);
    long long v107 = v102[0];
    long long v108 = v102[1];
    uint64_t v109 = v103;
    long long v105 = v100;
    long long v106 = v101;
    sub_452C0((uint64_t)&v105, v81);
    swift_storeEnumTagMultiPayload();
    sub_451D0();
    *(void *)&long long v100 = &type metadata for Text;
    *((void *)&v100 + 1) = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    uint64_t v41 = (uint64_t)v82;
    sub_26B2F0();
    sub_B678(v41, (uint64_t)v92, &qword_2EBA60);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EBA98);
    sub_45164();
    sub_46754(&qword_2EBAA0, &qword_2EBA60, (void (*)(void))sub_451D0);
    uint64_t v42 = (uint64_t)v85;
    sub_26B2F0();
    sub_B6DC(v41, &qword_2EBA60);
    sub_4531C((uint64_t)&v105);
  }
  uint64_t v78 = sub_4A98(&qword_2EBA88);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v42, 0, 1, v78);
  sub_19CC4(v42, v29, &qword_2EBA70);
  uint64_t v74 = (uint64_t)v84;
LABEL_14:
  sub_B678(v29, v74, &qword_2EBA70);
  swift_storeEnumTagMultiPayload();
  sub_45050();
  *(void *)&long long v105 = &type metadata for Text;
  *((void *)&v105 + 1) = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  sub_26B2F0();
  return sub_B6DC(v29, &qword_2EBA70);
}

double sub_439DC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, void))(*(void *)(a2 + a1 - 8) + 24))(v8, *(void *)(a2 + a1 - 16));
  __int16 v4 = v11;
  long long v5 = v8[1];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v5;
  double result = *(double *)&v9;
  long long v7 = v10;
  *(_OWORD *)(a3 + 32) = v9;
  *(_OWORD *)(a3 + 48) = v7;
  *(_WORD *)(a3 + 64) = v4;
  return result;
}

uint64_t sub_43A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26CD20();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26CFD0();
  uint64_t v29 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26CF60();
  uint64_t v28 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  if (!v31) {
    goto LABEL_4;
  }
  char v14 = v34;
  double v15 = v33;
  uint64_t v16 = v32;
  swift_bridgeObjectRelease();
  if (v16)
  {
    if ((v14 & 1) == 0)
    {
LABEL_4:
      uint64_t v17 = sub_26A220();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
    }
    sub_26CF50();
    uint64_t v21 = v29;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v9, enum case for LocalizerLookupStrategy.default(_:), v7);
    sub_26A1D0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
    uint64_t v22 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 0, 1, v22);
  }
  else
  {
    uint64_t v19 = a2;
    if (v15 >= 0.01)
    {
      Class isa = sub_26D700().super.super.isa;
      uint64_t v24 = v27;
      (*(void (**)(char *, void, uint64_t))(v27 + 104))(v6, enum case for LocalizerContext.standalone(_:), v4);
      sub_26A1A0();

      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
    }
    else
    {
      sub_26CF50();
      uint64_t v20 = v29;
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v9, enum case for LocalizerLookupStrategy.default(_:), v7);
      sub_26A1D0();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
    }
    uint64_t v25 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 0, 1, v25);
  }
}

uint64_t sub_43EF0(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 40));
  sub_4ADC(v2, v2[3]);
  uint64_t v3 = (void *)sub_269DD0();
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 averageRating];
    double v6 = v5;

    BOOL v7 = v6 == 0.0;
    if (v6 == 0.0) {
      double v8 = 0.0;
    }
    else {
      double v8 = v6 * 5.0;
    }
  }
  else
  {
    double v8 = 0.0;
    BOOL v7 = 1;
  }
  sub_4ADC(v2, v2[3]);
  long long v9 = (void *)sub_269DD0();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v9 ratingCount];

    BOOL v12 = v11 == 0;
  }
  else
  {
    BOOL v12 = 1;
  }
  if (v7 || v12) {
    return 0;
  }
  else {
    return *(void *)&v8;
  }
}

BOOL sub_43FF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  double v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  v13[0] = v7;
  v13[1] = v8;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  LODWORD(KeyPath) = v15;
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
  if (KeyPath == 1)
  {
    __chkstk_darwin(v10);
    v13[-2] = v7;
    v13[-1] = v8;
    id v11 = (void *)swift_getKeyPath();
    ViewModelWithExternals.subscript.getter(v11);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
    return v14 == 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
    return 0;
  }
}

uint64_t sub_441C0()
{
  uint64_t v0 = sub_26AC30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  uint64_t v6 = sub_26D550(v10, 12);
  uint64_t v7 = v4;
  char v8 = 0;
  long long v9 = &_swiftEmptyArrayStorage;
  sub_26AC10();
  sub_26C070();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_3A380(v6, v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_442E8(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB4B0;
  v7._object = a2;
  Swift::Int v4 = sub_26DC00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_4433C(char a1)
{
  if (a1) {
    return 0x666E497465737361;
  }
  else {
    return 0x6D726F46776F6873;
  }
}

uint64_t sub_44384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_443F8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_44464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_444D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_44544@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_442E8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4457C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4433C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_445B0()
{
  return sub_4433C(*v0);
}

uint64_t sub_445C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_442E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_445F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_46954();
  *a1 = result;
  return result;
}

uint64_t sub_4461C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_44670(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ListItemMetadataFormatAndDescriptorBase.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v40 = a3;
  type metadata accessor for ListItemMetadataFormatAndDescriptorBase.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v42 = sub_26DCC0();
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v39 - v4;
  uint64_t v44 = sub_26D980();
  uint64_t v43 = *(void *)(v44 - 8);
  uint64_t v5 = __chkstk_darwin(v44);
  Swift::String v7 = (char *)&v39 - v6;
  uint64_t v8 = *(void *)(a2 - 8);
  __chkstk_darwin(v5);
  Swift::String v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ListItemMetadataFormatAndDescriptorBase();
  uint64_t v39 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  char v50 = (void *)KeyPath;
  long long v51 = 0u;
  long long v52 = 0u;
  memset(v53, 0, sizeof(v53));
  uint64_t v54 = v15;
  char v55 = 0;
  uint64_t v56 = v16;
  char v57 = 0;
  char v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v17 & 1) == 0)
  {
    v18(v7, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
    uint64_t v23 = sub_26DAD0();
    swift_allocError();
    uint64_t v25 = v24;
    sub_4A98(&qword_2EBAB0);
    *uint64_t v25 = a2;
    uint64_t v26 = v58;
    sub_4ADC(v58, v58[3]);
    sub_26DF80();
    char v50 = 0;
    *(void *)&long long v51 = 0xE000000000000000;
    sub_26DA90(97);
    v59._countAndFlagsBits = 0xD00000000000005FLL;
    v59._object = (void *)0x8000000000288240;
    sub_26D4E0(v59);
    v60._countAndFlagsBits = sub_26E0F0();
    sub_26D4E0(v60);
    swift_bridgeObjectRelease();
    sub_26DAC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for DecodingError.typeMismatch(_:), v23);
    swift_willThrow();
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v26);
  }
  uint64_t v44 = v11;
  v18(v7, 0, 1, a2);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, a2);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, a2);
  uint64_t v19 = a2;
  sub_4ADC(v58, v58[3]);
  uint64_t v20 = v46;
  sub_26DFC0();
  uint64_t v21 = v13;
  if (v20)
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v10, a2);
LABEL_6:
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v58);
    return ((uint64_t (*)(char *, uint64_t))v22)(v21, v19);
  }
  uint64_t WitnessTable = (uint64_t)v10;
  uint64_t v46 = a2;
  sub_4A98(&qword_2EBAB8);
  LOBYTE(v48) = 1;
  sub_457C0();
  uint64_t v27 = v42;
  uint64_t v28 = v47;
  sub_26DC90();
  long long v30 = v50;
  sub_269EF0();
  if (!v49)
  {
    sub_B6DC((uint64_t)&v48, &qword_2EBAC8);
    uint64_t v32 = sub_26DAD0();
    swift_allocError();
    uint64_t v34 = v33;
    sub_26DC20();
    sub_4581C();
    swift_allocError();
    *id v35 = 0;
    sub_26DAC0();
    uint64_t v36 = v34;
    uint64_t v21 = v13;
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v36, enum case for DecodingError.dataCorrupted(_:), v32);
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v27);
    uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v19 = v46;
    v22((char *)WitnessTable, v46);
    goto LABEL_6;
  }
  sub_AD44(&v48, (uint64_t)&v50);
  uint64_t v31 = v44;
  sub_C224((uint64_t)&v50, (uint64_t)&v21[*(int *)(v44 + 40)]);
  LOBYTE(v48) = 0;
  char v37 = sub_26DC80();

  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v50);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v27);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(WitnessTable, v46);
  v21[*(int *)(v31 + 36)] = v37 & 1;
  uint64_t v38 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v40, v21, v31);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v58);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v21, v31);
}

uint64_t sub_44EF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ListItemMetadataFormatAndDescriptorBase.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_44F18@<X0>(unsigned char *a1@<X8>)
{
  sub_469D0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_44F68()
{
  return sub_26B0C0();
}

uint64_t sub_44FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  if (a10) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_44FD8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, int))
{
  BYTE2(v4) = *(unsigned char *)(a1 + 66);
  LOWORD(v4) = *(_WORD *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_45038()
{
  return 16;
}

__n128 sub_45044(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_45050()
{
  unint64_t result = qword_2EBA78;
  if (!qword_2EBA78)
  {
    sub_7B0C(&qword_2EBA70);
    sub_450C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA78);
  }
  return result;
}

unint64_t sub_450C4()
{
  unint64_t result = qword_2EBA80;
  if (!qword_2EBA80)
  {
    sub_7B0C(&qword_2EBA88);
    sub_45164();
    sub_46754(&qword_2EBAA0, &qword_2EBA60, (void (*)(void))sub_451D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA80);
  }
  return result;
}

unint64_t sub_45164()
{
  unint64_t result = qword_2EBA90;
  if (!qword_2EBA90)
  {
    sub_7B0C(&qword_2EBA98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBA90);
  }
  return result;
}

unint64_t sub_451D0()
{
  unint64_t result = qword_2EBAA8;
  if (!qword_2EBAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBAA8);
  }
  return result;
}

uint64_t sub_45224@<X0>(unsigned char *a1@<X8>)
{
  sub_469D0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_45274()
{
  return sub_26B0C0();
}

uint64_t sub_452C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_4531C(uint64_t a1)
{
  return a1;
}

uint64_t sub_45370(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_45380(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v44 = sub_26CFD0();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = &v36[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = sub_26CF60();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  char v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_26A220();
  __chkstk_darwin(v4 - 8);
  uint64_t v40 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_26C250();
  uint64_t v6 = sub_26BB10();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  v47[0] = sub_26C110();
  uint64_t v11 = sub_26BA40();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_3A380(v6, v8, v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_26BA60();
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  int v37 = v19 & 1;
  sub_3A380(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_26CF50();
  uint64_t v21 = v41;
  uint64_t v20 = v42;
  uint64_t v22 = v44;
  (*(void (**)(unsigned char *, void, uint64_t))(v42 + 104))(v41, enum case for LocalizerLookupStrategy.default(_:), v44);
  sub_26A1D0();
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v21, v22);
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v3, v45);
  sub_C224(v46, (uint64_t)v47);
  uint64_t v23 = sub_26BA00();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v28 = sub_26BA30();
  uint64_t v30 = v29;
  LOBYTE(v8) = v31;
  swift_release();
  sub_3A380(v23, v25, v27);
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  LOBYTE(v25) = v37;
  uint64_t v33 = sub_26BA60();
  uint64_t v45 = v34;
  uint64_t v46 = v33;
  sub_3A380(v28, v30, v8 & 1);
  swift_bridgeObjectRelease();
  sub_3A380(v16, v32, v25);
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t type metadata accessor for ListItemMetadataFormatAndDescriptorBase.CodingKeys()
{
  return sub_129B4();
}

uint64_t type metadata accessor for ListItemMetadataFormatAndDescriptorBase()
{
  return sub_129B4();
}

unint64_t sub_457C0()
{
  unint64_t result = qword_2EBAC0;
  if (!qword_2EBAC0)
  {
    sub_7B0C(&qword_2EBAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBAC0);
  }
  return result;
}

unint64_t sub_4581C()
{
  unint64_t result = qword_2EBAD0;
  if (!qword_2EBAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBAD0);
  }
  return result;
}

unint64_t sub_45870(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_458A0();
  unint64_t result = sub_458F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_458A0()
{
  unint64_t result = qword_2EBAD8;
  if (!qword_2EBAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBAD8);
  }
  return result;
}

unint64_t sub_458F4()
{
  unint64_t result = qword_2EBAE0;
  if (!qword_2EBAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBAE0);
  }
  return result;
}

uint64_t sub_45948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4598C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_459C8(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 24) + 16);
}

uint64_t sub_459D4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_45A10(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_45A4C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of ListItemMetadataFormatAndDescriptorExternalsProtocol.assetState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ListItemMetadataFormatAndDescriptorExternalsProtocol.isReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ListItemMetadataFormatAndDescriptorExternalsProtocol.dispatchState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t destroy for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1)
{
  sub_C360(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(_WORD *)(a1 + 64), *(unsigned char *)(a1 + 66));
  sub_C374(*(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  uint64_t v2 = *(void *)(a1 + 88);
  char v3 = *(unsigned char *)(a1 + 96);

  return sub_C374(v2, v3);
}

uint64_t initializeWithCopy for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v15 = *(_WORD *)(a2 + 64);
  char v16 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 66) = v16;
  uint64_t v12 = *(void *)(v2 + 72);
  LOBYTE(v5) = *(unsigned char *)(v2 + 80);
  sub_10E0C(v12, v5);
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v5;
  uint64_t v13 = *(void *)(v2 + 88);
  LOBYTE(v2) = *(unsigned char *)(v2 + 96);
  sub_10E0C(v13, v2);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = v2;
  return a1;
}

uint64_t assignWithCopy for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v29 = *(_WORD *)(a2 + 64);
  char v30 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v29, v30);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  __int16 v20 = *(_WORD *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 66);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v29;
  *(unsigned char *)(a1 + 66) = v30;
  sub_C360(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = *(void *)(v2 + 72);
  LOBYTE(v5) = *(unsigned char *)(v2 + 80);
  sub_10E0C(v22, v5);
  uint64_t v23 = *(void *)(a1 + 72);
  char v24 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v22;
  *(unsigned char *)(a1 + 80) = v5;
  sub_C374(v23, v24);
  uint64_t v25 = *(void *)(v2 + 88);
  LOBYTE(v2) = *(unsigned char *)(v2 + 96);
  sub_10E0C(v25, v2);
  uint64_t v26 = *(void *)(a1 + 88);
  char v27 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = v25;
  *(unsigned char *)(a1 + 96) = v2;
  sub_C374(v26, v27);
  return a1;
}

__n128 initializeWithTake for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 66);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  __int16 v14 = *(_WORD *)(a1 + 64);
  char v15 = *(unsigned char *)(a1 + 66);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_WORD *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 66) = v5;
  sub_C360(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  char v18 = *(unsigned char *)(a2 + 80);
  uint64_t v19 = *(void *)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v18;
  sub_C374(v19, v20);
  char v21 = *(unsigned char *)(a2 + 96);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = v21;
  sub_C374(v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataFormatAndDescriptorExternals(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataFormatAndDescriptorExternals(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataFormatAndDescriptorExternals()
{
  return &type metadata for ListItemMetadataFormatAndDescriptorExternals;
}

uint64_t sub_45EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_45EF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_45F94(void *a1, void *a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 48 > 0x18)
  {
    uint64_t v9 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 32);
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = *(void *)(v11 + 40);
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v10 + 8, v11 + 8);
  }
  return v4;
}

uint64_t sub_460D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = ((*(void *)(v3 + 56) + a1) & 0xFFFFFFFFFFFFFFF8) + 8;

  return _s7BooksUI13AnyPagedFrameVwxx_0(v4);
}

uint64_t sub_46140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v7 + 8, v8 + 8);
  return a1;
}

uint64_t sub_4620C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  sub_16D58((uint64_t *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8), (uint64_t *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8));
  return a1;
}

uint64_t sub_46290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 24);
  uint64_t v10 = *(void *)(v8 + 40);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  *(void *)(v7 + 40) = v10;
  *(_OWORD *)(v7 + 24) = v9;
  return a1;
}

uint64_t sub_46320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  _s7BooksUI13AnyPagedFrameVwxx_0((v7 & 0xFFFFFFFFFFFFFFF8) + 8);
  long long v11 = *(_OWORD *)(v10 + 8);
  long long v12 = *(_OWORD *)(v10 + 24);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(_OWORD *)(v9 + 24) = v12;
  *(_OWORD *)(v9 + 8) = v11;
  return a1;
}

uint64_t sub_463B8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x464FCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6) & 0xFFFFFFFFFFFFFFF8) + 32);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_46510(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((v9 & 0xFFFFFFF8) == 0xFFFFFFD0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if ((v9 & 0xFFFFFFF8) == 0xFFFFFFD0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((v9 & 0xFFFFFFF8) != 0xFFFFFFD0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, (v9 & 0xFFFFFFFFFFFFFFF8) + 48);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x466F0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 16) = 0u;
            *(_OWORD *)(v19 + 32) = 0u;
            *(void *)(v19 + 8) = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 32) = a2 - 1;
          }
        }
        else
        {
          char v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t sub_46718()
{
  return sub_46754(&qword_2EBBB8, qword_2EBBC0, (void (*)(void))sub_45050);
}

uint64_t sub_46754(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_46804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

unsigned char *sub_4680C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x468D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_46900()
{
  return swift_getWitnessTable();
}

uint64_t sub_4691C()
{
  return swift_getWitnessTable();
}

uint64_t sub_46938()
{
  return swift_getWitnessTable();
}

uint64_t sub_46954()
{
  return 2;
}

uint64_t sub_4695C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_46968(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_469D0()
{
  unint64_t result = qword_2EBCE0;
  if (!qword_2EBCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBCE0);
  }
  return result;
}

uint64_t sub_46A24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 32))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_46A70()
{
  return 16;
}

__n128 sub_46A7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void *sub_46A88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  __n128 result = (*(void *(**)(uint64_t *__return_ptr, void))(*(void *)(a2 + a1 - 8) + 40))(&v5, *(void *)(a2 + a1 - 16));
  *a3 = v5;
  return result;
}

uint64_t sub_46AE0()
{
  return 16;
}

__n128 sub_46AEC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptionExternals.isCompact.getter()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_10E0C(v1, v2);
  char v3 = sub_40900(v1, v2);
  sub_C374(v1, v2);
  return v3 & 1;
}

uint64_t SegmentedControl.init(model:containingShelfID:style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a4;
  *(void *)a5 = swift_getKeyPath();
  *(unsigned char *)(a5 + 8) = 0;
  unint64_t v10 = (int *)type metadata accessor for SegmentedControl();
  *(void *)(a5 + v10[12]) = 0;
  uint64_t v11 = a5 + v10[9];
  uint64_t v12 = type metadata accessor for SegmentedControlViewModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  uint64_t v14 = (void *)(a5 + v10[10]);
  void *v14 = a2;
  v14[1] = a3;
  *(unsigned char *)(a5 + v10[11]) = v9;
  return result;
}

uint64_t SegmentedControl.items.getter(uint64_t a1)
{
  sub_4D148(a1);

  return swift_bridgeObjectRetain();
}

uint64_t SegmentedControl.selection.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for SegmentedControlViewModel() + 36);
  unsigned int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a2, v6, v5);
}

uint64_t SegmentedControl.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v93 = sub_26B360();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_26D680();
  swift_getWitnessTable();
  uint64_t v90 = v5;
  uint64_t v6 = sub_26A2D0();
  uint64_t v96 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_7B0C(&qword_2EBCE8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v113 = v6;
  unint64_t v114 = AssociatedTypeWitness;
  uint64_t v115 = v8;
  uint64_t v116 = WitnessTable;
  uint64_t v117 = AssociatedConformanceWitness;
  sub_26C510();
  uint64_t v11 = sub_7B0C(&qword_2EBCF0);
  uint64_t v12 = sub_7B0C(&qword_2EBCF8);
  unint64_t v13 = sub_4D154();
  uint64_t v113 = v12;
  unint64_t v114 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v113 = v11;
  unint64_t v114 = OpaqueTypeConformance2;
  uint64_t v112 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v15 = sub_26C3C0();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v86 = v15;
  uint64_t v85 = v16;
  uint64_t v17 = sub_26A690();
  uint64_t v89 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v87 = (char *)&v75 - v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v113 = v17;
  unint64_t v114 = v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v84 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v82 = (char *)&v75 - v21;
  uint64_t v113 = v17;
  unint64_t v114 = v19;
  uint64_t v81 = v19;
  uint64_t v106 = swift_getOpaqueTypeConformance2();
  uint64_t v107 = OpaqueTypeMetadata2;
  uint64_t v113 = OpaqueTypeMetadata2;
  unint64_t v114 = v106;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v88 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v80 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v83 = (char *)&v75 - v25;
  uint64_t v79 = sub_4A98(&qword_2EBD20);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2EBD28);
  __chkstk_darwin(v94);
  uint64_t v76 = (uint64_t *)((char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_26D980();
  uint64_t v77 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  char v31 = (char *)&v75 - v30;
  uint64_t v95 = *(void *)(v4 - 8);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_4A98(&qword_2EBD30);
  __chkstk_darwin(v99);
  id v35 = (char *)&v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_4A98(&qword_2EBD38);
  __chkstk_darwin(v98);
  uint64_t v97 = (uint64_t)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4A98(&qword_2EBD40);
  __chkstk_darwin(v37);
  long long v100 = (char *)&v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v39;
  uint64_t v105 = v22;
  uint64_t v40 = sub_26B300();
  uint64_t v103 = *(void *)(v40 - 8);
  uint64_t v104 = v40;
  __chkstk_darwin(v40);
  uint64_t v102 = (char *)&v75 - v41;
  uint64_t v42 = a1;
  uint64_t v43 = v109;
  swift_bridgeObjectRetain();
  uint64_t v44 = v4;
  uint64_t v45 = sub_26D660();
  swift_bridgeObjectRelease();
  if (v45 == 1)
  {
    uint64_t v50 = v77;
    uint64_t v93 = v28;
    uint64_t v113 = *(void *)&v43[*(int *)(v42 + 36)];
    swift_getWitnessTable();
    sub_26D7E0();
    int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v31, 1, v44);
    uint64_t v47 = v107;
    uint64_t v52 = v104;
    uint64_t v109 = v35;
    uint64_t v53 = (uint64_t)v78;
    if (v51 == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v93);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EBD58, &qword_2EBD28);
      uint64_t v54 = (uint64_t)v109;
      sub_26B2F0();
    }
    else
    {
      uint64_t v65 = v95;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v33, v31, v44);
      uint64_t v66 = sub_26B120();
      uint64_t v67 = (uint64_t)v76;
      *uint64_t v76 = v66;
      *(void *)(v67 + 8) = 0;
      *(unsigned char *)(v67 + 16) = 0;
      uint64_t v68 = sub_4A98(&qword_2EBD60);
      sub_47B0C((uint64_t)v33, v44, v96, v67 + *(int *)(v68 + 44));
      sub_B678(v67, v53, &qword_2EBD28);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EBD58, &qword_2EBD28);
      uint64_t v54 = (uint64_t)v109;
      sub_26B2F0();
      sub_B6DC(v67, &qword_2EBD28);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v44);
    }
    sub_B678(v54, v97, &qword_2EBD30);
    swift_storeEnumTagMultiPayload();
    sub_4D2D0();
    uint64_t v69 = (uint64_t)v100;
    sub_26B2F0();
    sub_4D254();
    uint64_t v48 = v106;
    uint64_t v113 = v47;
    unint64_t v114 = v106;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v102;
    sub_1B894(v69, v101);
    sub_B6DC(v69, &qword_2EBD40);
    sub_B6DC(v54, &qword_2EBD30);
  }
  else
  {
    if (v45)
    {
      uint64_t v55 = sub_26B720();
      __chkstk_darwin(v55);
      uint64_t v56 = v96;
      *(&v75 - 4) = v44;
      *(&v75 - 3) = v56;
      *(&v75 - 2) = (uint64_t)v43;
      char v57 = v87;
      sub_26A6A0();
      uint64_t v58 = v91;
      sub_26B350();
      sub_26B720();
      Swift::String v59 = v82;
      sub_26BEB0();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v93);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v57, v17);
      uint64_t v60 = (uint64_t)v80;
      uint64_t v48 = v106;
      uint64_t v47 = v107;
      sub_26BE70();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v47);
      uint64_t v113 = v47;
      unint64_t v114 = v48;
      uint64_t v61 = swift_getOpaqueTypeConformance2();
      uint64_t v62 = v83;
      uint64_t v63 = v105;
      sub_CCCC(v60, v105, v61);
      char v64 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v64(v60, v63);
      sub_CCCC(v62, v63, v61);
      sub_4D254();
      uint64_t v49 = v102;
      sub_1B98C(v60, v101, v63);
      v64(v60, v63);
      v64((uint64_t)v62, v63);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_4D2D0();
      uint64_t v46 = (uint64_t)v100;
      sub_26B2F0();
      sub_4D254();
      uint64_t v48 = v106;
      uint64_t v47 = v107;
      uint64_t v113 = v107;
      unint64_t v114 = v106;
      swift_getOpaqueTypeConformance2();
      uint64_t v49 = v102;
      sub_1B894(v46, v101);
      sub_B6DC(v46, &qword_2EBD40);
    }
    uint64_t v52 = v104;
  }
  uint64_t v70 = v103;
  unint64_t v71 = sub_4D254();
  uint64_t v113 = v47;
  unint64_t v114 = v48;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  unint64_t v110 = v71;
  uint64_t v111 = v72;
  uint64_t v73 = swift_getWitnessTable();
  sub_CCCC(v49, v52, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v49, v52);
}

uint64_t sub_47B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v56 = a4;
  uint64_t v5 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v5 - 8);
  unsigned int v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_26B980();
  uint64_t v8 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26A220();
  __chkstk_darwin(v10 - 8);
  uint64_t v54 = sub_26A160();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v47 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EBFC8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EBFD0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4A98(&qword_2EBFD8) - 8;
  uint64_t v20 = __chkstk_darwin(v53);
  uint64_t v55 = (uint64_t)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v47 - v23;
  __chkstk_darwin(v22);
  uint64_t v51 = (uint64_t)&v47 - v25;
  uint64_t v48 = a3;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v58, a3);
  sub_26A170();
  uint64_t v26 = v8;
  uint64_t v27 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v28 = v49;
  uint64_t v29 = v50;
  v27(v49, enum case for Font.TextStyle.title3(_:), v50);
  uint64_t v30 = sub_26B820();
  uint64_t v31 = (uint64_t)v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
  sub_26B8B0();
  uint64_t v32 = sub_26B8E0();
  sub_B6DC(v31, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v52;
  id v35 = v47;
  uint64_t v36 = v54;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v15, v47, v54);
  uint64_t v37 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  *uint64_t v37 = KeyPath;
  v37[1] = v32;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  uint64_t v38 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  uint64_t v39 = swift_getKeyPath();
  sub_B678((uint64_t)v15, (uint64_t)v19, &qword_2EBFC8);
  uint64_t v40 = (uint64_t *)&v19[*(int *)(v17 + 44)];
  uint64_t *v40 = v39;
  v40[1] = v38;
  sub_B6DC((uint64_t)v15, &qword_2EBFC8);
  if ((*(uint64_t (**)(uint64_t))(v48 + 56))(v58)) {
    double v41 = 0.3;
  }
  else {
    double v41 = 1.0;
  }
  sub_B678((uint64_t)v19, (uint64_t)v24, &qword_2EBFD0);
  *(double *)&v24[*(int *)(v53 + 44)] = v41;
  sub_B6DC((uint64_t)v19, &qword_2EBFD0);
  uint64_t v42 = v51;
  sub_19CC4((uint64_t)v24, v51, &qword_2EBFD8);
  uint64_t v43 = v55;
  sub_B678(v42, v55, &qword_2EBFD8);
  uint64_t v44 = v56;
  sub_B678(v43, v56, &qword_2EBFD8);
  uint64_t v45 = v44 + *(int *)(sub_4A98(&qword_2EBFE0) + 48);
  *(void *)uint64_t v45 = 0;
  *(unsigned char *)(v45 + 8) = 1;
  sub_B6DC(v42, &qword_2EBFD8);
  return sub_B6DC(v43, &qword_2EBFD8);
}

uint64_t sub_48088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[1] = a4;
  sub_26D680();
  swift_getWitnessTable();
  sub_26A2D0();
  swift_getAssociatedTypeWitness();
  v19[11] = sub_7B0C(&qword_2EBCE8);
  v19[12] = swift_getWitnessTable();
  v19[13] = swift_getAssociatedConformanceWitness();
  sub_26C510();
  uint64_t v7 = sub_7B0C(&qword_2EBCF0);
  sub_7B0C(&qword_2EBCF8);
  sub_4D154();
  v19[9] = v7;
  v19[10] = swift_getOpaqueTypeConformance2();
  v19[8] = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v8 = sub_26C3C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v19 - v13;
  uint64_t v15 = type metadata accessor for SegmentedControl();
  sub_483A8(v15);
  v19[4] = a2;
  v19[5] = a3;
  v19[6] = a1;
  sub_26B120();
  sub_26C3B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v12, v8, WitnessTable);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  sub_CCCC(v14, v8, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
}

uint64_t sub_483A8(uint64_t result)
{
  if (!*(unsigned char *)(v1 + *(int *)(result + 44)) || *(unsigned char *)(v1 + *(int *)(result + 44)) != 1) {
    return ListItemMetadataRecommendationCreatorDescriptionExternals.isCompact.getter();
  }
  return result;
}

uint64_t sub_483F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v46 = a4;
  uint64_t v33 = a3;
  uint64_t v36 = type metadata accessor for SegmentedControl();
  uint64_t v5 = *(void *)(v36 - 8);
  uint64_t v40 = *(void *)(v5 + 64);
  __chkstk_darwin(v36);
  uint64_t v37 = (char *)&v33 - v6;
  sub_26D680();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_26A2D0();
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  id v35 = (char *)&v33 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_7B0C(&qword_2EBCE8);
  uint64_t v43 = v10;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v42 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v50 = v7;
  unint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v54 = AssociatedConformanceWitness;
  uint64_t v12 = sub_26C510();
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v39 = (char *)&v33 - v16;
  uint64_t v17 = v36;
  uint64_t v18 = v38;
  uint64_t v50 = *(void *)(v38 + *(int *)(v36 + 36));
  sub_26D780();
  uint64_t v19 = v33;
  uint64_t v47 = a2;
  uint64_t v48 = v33;
  uint64_t WitnessTable = swift_getKeyPath();
  uint64_t v20 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v37, v18, v17);
  unint64_t v21 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22 + v21, v20, v17);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a2;
  v23[3] = v19;
  v23[4] = sub_500FC;
  v23[5] = v22;
  uint64_t v24 = sub_7B0C(&qword_2EBCF0);
  uint64_t v25 = sub_7B0C(&qword_2EBCF8);
  unint64_t v26 = sub_4D154();
  uint64_t v50 = v25;
  unint64_t v51 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = v24;
  unint64_t v51 = OpaqueTypeConformance2;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  sub_26C4F0();
  uint64_t v49 = v32;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v39;
  sub_CCCC(v15, v12, v28);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v45 + 8);
  v30(v15, v12);
  sub_CCCC(v29, v12, v28);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v12);
}

uint64_t sub_488A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v25 = a1;
  uint64_t v27 = a5;
  uint64_t v7 = sub_26CF30();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFE8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EBCF8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2EBCF0);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SegmentedControl();
  sub_48BE4(a2, v18, (uint64_t)v15);
  *(void *)(swift_allocObject() + 16) = v25;
  unint64_t v19 = sub_4D154();
  sub_26BB60();
  swift_release();
  sub_B6DC((uint64_t)v15, &qword_2EBCF8);
  (*(void (**)(uint64_t, uint64_t))(a4 + 48))(v23, a4);
  sub_26CF20();
  uint64_t v30 = v13;
  unint64_t v31 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v24;
  sub_26BB20();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  sub_B6DC((uint64_t)v12, &qword_2EBFE8);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v20);
}

uint64_t sub_48BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v200 = a1;
  uint64_t v163 = a3;
  uint64_t v178 = sub_4A98(&qword_2EB028);
  uint64_t v4 = __chkstk_darwin(v178);
  uint64_t v161 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v158 = (char *)&v145 - v6;
  uint64_t v190 = (char **)sub_26AB40();
  uint64_t v175 = (uint64_t)*(v190 - 1);
  uint64_t v7 = __chkstk_darwin(v190);
  uint64_t v174 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v173 = (char *)&v145 - v9;
  uint64_t v162 = sub_4A98(&qword_2EB030);
  uint64_t v10 = __chkstk_darwin(v162);
  uint64_t v153 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v160 = (uint64_t)&v145 - v12;
  uint64_t v188 = type metadata accessor for CustomPickerButtonStyle();
  __chkstk_darwin(v188);
  uint64_t v172 = (uint64_t *)((char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_269BA0();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v176 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = a2;
  uint64_t v17 = *(void *)(a2 - 8);
  a2 -= 8;
  uint64_t v165 = v17;
  __chkstk_darwin(v15);
  unint64_t v169 = v18;
  uint64_t v167 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26CB80();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  double v145 = (char *)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a2 + 24);
  uint64_t v194 = *(void *)(v22 - 8);
  __chkstk_darwin(v20);
  uint64_t v164 = v23;
  uint64_t v24 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a2 + 32);
  uint64_t v26 = *(void *)(v25 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v29 = __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v31 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v145 - v32;
  uint64_t v34 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)&v145 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_4A98(&qword_2EBFF0);
  __chkstk_darwin(v168);
  uint64_t v170 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_4A98(&qword_2EBFF8);
  __chkstk_darwin(v186);
  uint64_t v171 = (uint64_t)&v145 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_4A98(&qword_2EC000);
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v187 = (char *)&v145 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_4A98(&qword_2EC008);
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (char *)&v145 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_4A98(&qword_2EC010);
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v41 = __chkstk_darwin(v156);
  uint64_t v152 = (char *)&v145 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = v42;
  __chkstk_darwin(v41);
  uint64_t v177 = (char *)&v145 - v43;
  uint64_t v159 = sub_4A98(&qword_2EBD10);
  uint64_t v157 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v154 = (char *)&v145 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_26A630();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  uint64_t v166 = v36;
  v46(v36, 1, 1, v45);
  sub_26DAB0();
  uint64_t v47 = *(int *)(a2 + 44);
  uint64_t v48 = v24;
  uint64_t v49 = v199 + v47;
  uint64_t v50 = v25;
  uint64_t v185 = type metadata accessor for SegmentedControlViewModel();
  uint64_t v51 = v49 + *(int *)(v185 + 36);
  uint64_t v52 = v194;
  uint64_t v195 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 16);
  uint64_t v196 = v194 + 16;
  v195(v48, v51, v22);
  sub_26DAB0();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v184 = v52 + 8;
  uint64_t v183 = v53;
  v53(v48, v22);
  uint64_t v197 = v22;
  uint64_t v182 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  LOBYTE(v49) = sub_26D360();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v189 = v31;
  v54(v31, AssociatedTypeWitness);
  uint64_t v179 = v33;
  uint64_t v192 = v28 + 8;
  uint64_t v193 = AssociatedTypeWitness;
  v54(v33, AssociatedTypeWitness);
  uint64_t v191 = v26;
  uint64_t v181 = v54;
  uint64_t v198 = v50;
  if (v49)
  {
    uint64_t v204 = sub_26C920();
    uint64_t v205 = &protocol witness table for EmptyAction;
    sub_CA1C(&v201);
    sub_26CB50();
    sub_26C910();
    uint64_t v55 = v180;
    uint64_t v57 = v199;
    uint64_t v56 = v200;
  }
  else
  {
    uint64_t v55 = v180;
    uint64_t v57 = v199;
    uint64_t v58 = v200;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, void, void, uint64_t, uint64_t))(v50 + 64))(&v201, v199 + *(int *)(v180 + 36), *(void *)(v199 + *(int *)(v180 + 40)), *(void *)(v199 + *(int *)(v180 + 40) + 8), v197, v50);
    uint64_t v56 = v58;
  }
  uint64_t v59 = v197;
  v195(v48, v56, v197);
  uint64_t v60 = v165;
  uint64_t v61 = v167;
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v167, v57, v55);
  uint64_t v62 = v194;
  uint64_t v63 = v48;
  unint64_t v64 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
  unint64_t v65 = (v164 + *(unsigned __int8 *)(v60 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = v198;
  *(void *)(v66 + 16) = v59;
  *(void *)(v66 + 24) = v67;
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v66 + v64, v63, v59);
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v66 + v65, v61, v55);
  sub_269B80();
  uint64_t v68 = (uint64_t)v170;
  sub_269AB0();
  uint64_t v69 = (int *)v168;
  uint64_t v70 = v68 + *(int *)(v168 + 36);
  *(void *)uint64_t v70 = swift_getKeyPath();
  *(unsigned char *)(v70 + 8) = 0;
  unint64_t v71 = (uint64_t *)(v68 + v69[10]);
  *unint64_t v71 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = v68 + v69[11];
  *(void *)uint64_t v72 = swift_getKeyPath();
  *(unsigned char *)(v72 + 40) = 0;
  sub_19CC4((uint64_t)v166, v68 + v69[12], qword_2EA3E0);
  sub_19CC4((uint64_t)&v201, v68 + v69[13], &qword_2EA818);
  uint64_t v73 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v68 + v69[14]);
  *uint64_t v73 = sub_503F0;
  v73[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v66;
  uint64_t v74 = *(char **)(v198 + 56);
  uint64_t v194 = v198 + 56;
  uint64_t v176 = v74;
  LOBYTE(v69) = ((uint64_t (*)(uint64_t))v74)(v59);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v76 = swift_allocObject();
  *(unsigned char *)(v76 + 16) = v69 & 1;
  uint64_t v77 = v171;
  sub_B678(v68, v171, &qword_2EBFF0);
  uint64_t v78 = (uint64_t *)(v77 + *(int *)(v186 + 36));
  *uint64_t v78 = KeyPath;
  v78[1] = (uint64_t)sub_50508;
  v78[2] = v76;
  uint64_t v79 = v199;
  sub_B6DC(v68, &qword_2EBFF0);
  uint64_t v80 = v63;
  v195(v63, v79 + *(int *)(v55 + 36) + *(int *)(v185 + 36), v59);
  uint64_t v81 = v179;
  sub_26DAB0();
  uint64_t v170 = v80;
  v183(v80, v59);
  uint64_t v82 = v189;
  sub_26DAB0();
  uint64_t v83 = v193;
  LOBYTE(v69) = sub_26D360();
  uint64_t v84 = v181;
  v181(v82, v83);
  v84(v81, v83);
  uint64_t v85 = sub_26C730();
  LOBYTE(v201) = *(unsigned char *)(v79 + *(int *)(v55 + 44));
  int v86 = v69 & 1;
  uint64_t v87 = v172;
  sub_4B090(v86, v85, (unsigned __int8 *)&v201, v172);
  unint64_t v88 = sub_50510();
  uint64_t v89 = sub_50A54(&qword_2EC038, (void (*)(uint64_t))type metadata accessor for CustomPickerButtonStyle);
  unint64_t v169 = v88;
  uint64_t v168 = v89;
  sub_26BC80();
  sub_4FEB8((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
  sub_B6DC(v77, &qword_2EBFF8);
  uint64_t v90 = v175;
  uint64_t v91 = *(void (**)(char *, void, char **))(v175 + 104);
  uint64_t v92 = v173;
  uint64_t v93 = v190;
  v91(v173, enum case for DynamicTypeSize.xSmall(_:), v190);
  uint64_t v94 = v174;
  v91(v174, enum case for DynamicTypeSize.xxxLarge(_:), v93);
  sub_50A54(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D350();
  if (result)
  {
    uint64_t v96 = v178;
    uint64_t v97 = v158;
    uint64_t v98 = &v158[*(int *)(v178 + 48)];
    uint64_t v99 = *(void (**)(char *, char *, char **))(v90 + 32);
    long long v100 = v190;
    v99(v158, v92, v190);
    v99(v98, v94, v100);
    uint64_t v101 = v161;
    uint64_t v102 = &v161[*(int *)(v96 + 48)];
    uint64_t v103 = v90;
    uint64_t v104 = *(void (**)(char *, char *, char **))(v90 + 16);
    v104(v161, v97, v100);
    v104(v102, v98, v100);
    uint64_t v105 = v153;
    v99(v153, v101, v100);
    uint64_t v106 = *(void (**)(char *, char **))(v103 + 8);
    v106(v102, v100);
    uint64_t v107 = &v101[*(int *)(v178 + 48)];
    v99(v101, v97, v100);
    v99(v107, v98, v100);
    uint64_t v108 = v162;
    v99(&v105[*(int *)(v162 + 36)], v107, v100);
    v106(v101, v100);
    uint64_t v109 = (uint64_t)v105;
    uint64_t v110 = v160;
    sub_19CC4(v109, v160, &qword_2EB030);
    uint64_t v201 = v186;
    uint64_t v202 = v188;
    uint64_t v203 = v169;
    uint64_t v204 = v168;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v112 = sub_7C18(&qword_2EB118, &qword_2EB030);
    uint64_t v113 = v148;
    uint64_t v114 = v147;
    uint64_t v115 = v108;
    uint64_t v116 = v187;
    sub_26BD90();
    sub_B6DC(v110, &qword_2EB030);
    uint64_t v117 = (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v116, v114);
    uint64_t v190 = &v145;
    __chkstk_darwin(v117);
    uint64_t v118 = v197;
    uint64_t v119 = v198;
    sub_26A160();
    uint64_t v201 = v114;
    uint64_t v202 = v115;
    uint64_t v203 = OpaqueTypeConformance2;
    uint64_t v204 = v112;
    swift_getOpaqueTypeConformance2();
    sub_50A54((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
    uint64_t v120 = v150;
    sub_26BF60();
    (*(void (**)(char *, uint64_t))(v149 + 8))(v113, v120);
    uint64_t v121 = v170;
    uint64_t v122 = v118;
    v195(v170, v199 + *(int *)(v180 + 36) + *(int *)(v185 + 36), v118);
    uint64_t v123 = v179;
    sub_26DAB0();
    v183(v121, v122);
    uint64_t v124 = v189;
    uint64_t v125 = v122;
    sub_26DAB0();
    long long v126 = v123;
    uint64_t v127 = v124;
    uint64_t v128 = v193;
    LOBYTE(v123) = sub_26D360();
    uint64_t v129 = v127;
    uint64_t v130 = v181;
    v181(v129, v128);
    v130(v126, v128);
    LOBYTE(v121) = ((uint64_t (*)(uint64_t, uint64_t))v176)(v125, v119);
    uint64_t v131 = v155;
    double v132 = v152;
    double v133 = v177;
    uint64_t v134 = v156;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v152, v177, v156);
    unint64_t v135 = (*(unsigned __int8 *)(v131 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    uint64_t v136 = v135 + v151;
    uint64_t v137 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))(v137 + v135, v132, v134);
    uint64_t v138 = (unsigned char *)(v137 + v136);
    *uint64_t v138 = v123 & 1;
    v138[1] = (v121 & 1) == 0;
    sub_4A98(&qword_2EC048);
    sub_26A0F0();
    sub_26A0D0();
    sub_50728();
    sub_50A54(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
    sub_50A54(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
    uint64_t v139 = v154;
    sub_26A100();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v133, v134);
    LOBYTE(v137) = ((uint64_t (*)(uint64_t, uint64_t))v176)(v197, v198);
    UIAccessibilityTraits v140 = UIAccessibilityTraitNotEnabled;
    uint64_t v141 = v157;
    uint64_t v142 = v163;
    uint64_t v143 = v159;
    (*(void (**)(uint64_t, char *, uint64_t))(v157 + 16))(v163, v139, v159);
    uint64_t v144 = v142 + *(int *)(sub_4A98(&qword_2EBCF8) + 36);
    *(unsigned char *)uint64_t v144 = v137 & 1;
    *(void *)(v144 + 8) = v140;
    return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v139, v143);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_4A1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = sub_26B1D0();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 0;
  uint64_t v10 = sub_4A98(&qword_2EC088);
  return sub_4A250(a1, a2, a3, a4, a5 + *(int *)(v10 + 44));
}

uint64_t sub_4A250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v66 = a1;
  uint64_t v75 = a5;
  uint64_t v7 = sub_4A98(&qword_2EC090);
  __chkstk_darwin(v7 - 8);
  uint64_t v63 = (uint64_t *)((char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_4A98(&qword_2EC098);
  __chkstk_darwin(v61);
  uint64_t v62 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EC0A0);
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  __chkstk_darwin(v10);
  uint64_t v60 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v69 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EC0A8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v74 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v71 = (uint64_t)&v60 - v17;
  uint64_t v18 = sub_26A220();
  uint64_t v67 = *(void *)(v18 - 8);
  uint64_t v68 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  unint64_t v64 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = sub_26A160();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EBFC8);
  uint64_t v26 = v25 - 8;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  unint64_t v31 = (char *)&v60 - v30;
  uint64_t v32 = a4[3];
  uint64_t v65 = a3;
  v32(a3, (uint64_t)a4);
  sub_26A170();
  uint64_t v33 = type metadata accessor for SegmentedControl();
  uint64_t v34 = sub_4A964(v33);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v29, v24, v21);
  uint64_t v36 = *(int *)(v26 + 44);
  uint64_t v37 = v65;
  uint64_t v38 = (uint64_t *)&v29[v36];
  *uint64_t v38 = KeyPath;
  v38[1] = v34;
  uint64_t v39 = (uint64_t)v31;
  uint64_t v40 = v21;
  uint64_t v42 = v68;
  uint64_t v41 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v40);
  uint64_t v43 = v67;
  sub_19CC4((uint64_t)v29, v39, &qword_2EBFC8);
  a4[4](v37, (uint64_t)a4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    sub_B6DC(v41, &qword_2EA0C0);
LABEL_6:
    uint64_t v55 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v73);
    goto LABEL_7;
  }
  uint64_t v44 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v64, v41, v42);
  a4[5](v37, (uint64_t)a4);
  if (!v45)
  {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
    goto LABEL_6;
  }
  uint64_t v46 = sub_26B120();
  uint64_t v47 = (uint64_t)v63;
  *uint64_t v63 = v46;
  *(void *)(v47 + 8) = 0x4008000000000000;
  *(unsigned char *)(v47 + 16) = 0;
  uint64_t v48 = sub_4A98(&qword_2EC0B8);
  sub_4AB7C(v44, v47 + *(int *)(v48 + 44));
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_26B940();
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = v62;
  sub_B678(v47, v62, &qword_2EC090);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(v61 + 36));
  *uint64_t v52 = v50;
  v52[1] = v49;
  sub_B6DC(v47, &qword_2EC090);
  LODWORD(v49) = sub_26B470();
  uint64_t v53 = v60;
  sub_B678(v51, v60, &qword_2EC098);
  uint64_t v54 = v73;
  *(_DWORD *)(v53 + *(int *)(v73 + 36)) = v49;
  sub_B6DC(v51, &qword_2EC098);
  uint64_t v55 = v71;
  sub_19CC4(v53, v71, &qword_2EC0A0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v55, 0, 1, v54);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
LABEL_7:
  sub_B678(v39, (uint64_t)v29, &qword_2EBFC8);
  uint64_t v56 = v74;
  sub_B678(v55, v74, &qword_2EC0A8);
  uint64_t v57 = v75;
  sub_B678((uint64_t)v29, v75, &qword_2EBFC8);
  uint64_t v58 = sub_4A98(&qword_2EC0B0);
  sub_B678(v56, v57 + *(int *)(v58 + 48), &qword_2EC0A8);
  sub_B6DC(v55, &qword_2EC0A8);
  sub_B6DC(v39, &qword_2EBFC8);
  sub_B6DC(v56, &qword_2EC0A8);
  return sub_B6DC((uint64_t)v29, &qword_2EBFC8);
}

uint64_t sub_4A964(uint64_t a1)
{
  uint64_t v3 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  if (*(unsigned char *)(v1 + *(int *)(a1 + 44)))
  {
    v10(v9, enum case for Font.TextStyle.footnote(_:), v6);
    uint64_t v11 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
    sub_26B890();
  }
  else
  {
    v10(v9, enum case for Font.TextStyle.body(_:), v6);
    uint64_t v12 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
    sub_26B8B0();
  }
  uint64_t v13 = sub_26B8E0();
  sub_B6DC((uint64_t)v5, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_4AB7C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v43 = sub_26A220();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v39 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_26A160();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4A98(&qword_2EC0C0) - 8;
  uint64_t v4 = __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (uint64_t)&v34 - v7;
  uint64_t v8 = sub_4A98(&qword_2EB038);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_26C270();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EC0C8);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v35 = (uint64_t)&v34 - v21;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_26C250();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Image.Scale.small(_:), v12);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))((char *)v11 + *(int *)(v9 + 36), v15, v12);
  *uint64_t v11 = KeyPath;
  sub_B678((uint64_t)v11, (uint64_t)v20 + *(int *)(v17 + 44), &qword_2EB038);
  *uint64_t v20 = v22;
  swift_retain();
  sub_B6DC((uint64_t)v11, &qword_2EB038);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_release();
  uint64_t v24 = v35;
  sub_19CC4((uint64_t)v20, v35, &qword_2EC0C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v44, v43);
  uint64_t v25 = v36;
  sub_26A170();
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = v40;
  uint64_t v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v6, v25, v42);
  uint64_t v29 = &v6[*(int *)(v37 + 44)];
  *(void *)uint64_t v29 = v26;
  *((void *)v29 + 1) = 1;
  v29[16] = 0;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v28);
  uint64_t v30 = v38;
  sub_19CC4((uint64_t)v6, v38, &qword_2EC0C0);
  sub_B678(v24, (uint64_t)v20, &qword_2EC0C8);
  sub_B678(v30, (uint64_t)v6, &qword_2EC0C0);
  uint64_t v31 = v45;
  sub_B678((uint64_t)v20, v45, &qword_2EC0C8);
  uint64_t v32 = sub_4A98(&qword_2EC0D0);
  sub_B678((uint64_t)v6, v31 + *(int *)(v32 + 48), &qword_2EC0C0);
  sub_B6DC(v30, &qword_2EC0C0);
  sub_B6DC(v24, &qword_2EC0C8);
  sub_B6DC((uint64_t)v6, &qword_2EC0C0);
  return sub_B6DC((uint64_t)v20, &qword_2EC0C8);
}

uint64_t sub_4B090@<X0>(int a1@<W0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v21 = a2;
  int v20 = a1;
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v19 = *a3;
  *a4 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (int *)type metadata accessor for CustomPickerButtonStyle();
  uint64_t v11 = (uint64_t *)((char *)a4 + v10[5]);
  *uint64_t v11 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (char *)a4 + v10[6];
  *(void *)uint64_t v12 = swift_getKeyPath();
  v12[8] = 0;
  uint64_t v13 = (char *)a4 + v10[7];
  *(void *)uint64_t v13 = swift_getKeyPath();
  v13[8] = 0;
  uint64_t v14 = (char *)a4 + v10[8];
  *(void *)uint64_t v14 = swift_getKeyPath();
  v14[8] = 0;
  *(uint64_t *)((char *)a4 + v10[12]) = 0x3FF0000000000000;
  uint64_t v22 = 0x4040000000000000;
  uint64_t v15 = enum case for Font.TextStyle.body(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(v9, enum case for Font.TextStyle.body(_:), v6);
  sub_4F928();
  sub_26A810();
  uint64_t v22 = 0x4042000000000000;
  v16(v9, v15, v6);
  uint64_t result = sub_26A810();
  *((unsigned char *)a4 + v10[9]) = v20;
  *(uint64_t *)((char *)a4 + v10[10]) = v21;
  *((unsigned char *)a4 + v10[11]) = v19;
  return result;
}

uint64_t sub_4B2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_26A220();
  __chkstk_darwin(v5 - 8);
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  return sub_26A170();
}

uint64_t sub_4B3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v171 = a2;
  uint64_t v170 = sub_26B310();
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v168 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_26ACF0();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v165 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_26BAD0();
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v161 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v151 = (uint64_t)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CustomPickerButtonStyle();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v140 = (uint64_t)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v138 = (uint64_t)&v136 - v16;
  uint64_t v17 = sub_26A6E0();
  uint64_t v147 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  int v20 = (char *)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  *(void *)&long long v172 = (char *)&v136 - v21;
  uint64_t v22 = sub_26B520();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_4A98(&qword_2EBEC0);
  __chkstk_darwin(v136);
  uint64_t v27 = (char *)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4A98(&qword_2EBEC8);
  __chkstk_darwin(v28 - 8);
  *(void *)&long long v173 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v174 = sub_4A98(&qword_2EBED0);
  __chkstk_darwin(v174);
  *(void *)&long long v175 = (char *)&v136 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_4A98(&qword_2EBED8);
  uint64_t v143 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v142 = (char *)&v136 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_4A98(&qword_2EBEE0);
  __chkstk_darwin(v139);
  uint64_t v144 = (char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_4A98(&qword_2EBEE8);
  __chkstk_darwin(v141);
  uint64_t v148 = (uint64_t)&v136 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_4A98(&qword_2EBEF0);
  __chkstk_darwin(v145);
  uint64_t v150 = (uint64_t)&v136 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_4A98(&qword_2EBEF8);
  __chkstk_darwin(v149);
  uint64_t v153 = (uint64_t)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_4A98(&qword_2EBF00);
  __chkstk_darwin(v154);
  uint64_t v155 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_4A98(&qword_2EBF08);
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v158 = (char *)&v136 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_4A98(&qword_2EBF10);
  __chkstk_darwin(v157);
  uint64_t v156 = (char *)&v136 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = a1;
  sub_26B530();
  uint64_t v152 = v12;
  sub_4A98(&qword_2EBDF0);
  sub_26A830();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v25, v22);
  uint64_t v39 = &v27[*(int *)(v136 + 36)];
  long long v40 = v183;
  *(_OWORD *)uint64_t v39 = v182;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v184;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v41 = v3 + *(int *)(v13 + 32);
  uint64_t v42 = *(void *)v41;
  LOBYTE(a1) = *(unsigned char *)(v41 + 8);
  sub_10E0C(*(void *)v41, a1);
  LOBYTE(v25) = sub_40900(v42, a1);
  sub_C374(v42, a1);
  if (v25) {
    double v43 = 160.0;
  }
  else {
    double v43 = 200.0;
  }
  uint64_t v44 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_AFD20(0.0, 1, 0.0, 1, v43, 0, 0.0, 1, v173, 0.0, 1, 0.0, 1, v44, v45);
  sub_B6DC((uint64_t)v27, &qword_2EBEC0);
  uint64_t v46 = *(int *)(v13 + 36);
  BOOL v47 = *(unsigned char *)(v3 + v46) == 1;
  uint64_t v137 = v13;
  if (v47)
  {
    uint64_t v48 = (char *)v172;
    sub_40FB4(v172);
    uint64_t v56 = v147;
    (*(void (**)(char *, void, uint64_t))(v147 + 104))(v20, enum case for ColorScheme.light(_:), v17);
    char v49 = sub_26A6D0();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v56 + 8);
    v50(v20, v17);
    uint64_t v52 = v17;
    v50(v48, v17);
    uint64_t v53 = v3;
    if (v49) {
      uint64_t v51 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v51 = sub_26C150();
    }
    uint64_t v54 = v51;
    uint64_t v55 = (uint64_t)v152;
  }
  else
  {
    uint64_t v52 = v17;
    uint64_t v53 = v3;
    uint64_t v54 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    uint64_t v55 = (uint64_t)v152;
    uint64_t v56 = v147;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v58 = v173;
  uint64_t v59 = v175;
  sub_B678(v173, v175, &qword_2EBEC8);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(v174 + 36));
  *uint64_t v60 = KeyPath;
  v60[1] = v54;
  sub_B6DC(v58, &qword_2EBEC8);
  uint64_t v61 = v53;
  char v62 = *(unsigned char *)(v53 + v46);
  uint64_t v63 = v138;
  sub_4FE50(v53, v138, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
  if (v62)
  {
    sub_4FEB8(v63, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
    uint64_t v64 = v140;
    sub_4FE50(v53, v140, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
    uint64_t v65 = v52;
    uint64_t v66 = v137;
  }
  else
  {
    uint64_t v67 = v137;
    unsigned int v68 = *(unsigned __int8 *)(v63 + *(int *)(v137 + 44)) - 3;
    sub_4FEB8(v63, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
    uint64_t v64 = v140;
    sub_4FE50(v53, v140, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
    uint64_t v65 = v52;
    if (v68 <= 0xFFFFFFFD)
    {
      uint64_t v69 = v64 + *(int *)(v67 + 24);
      uint64_t v70 = *(void *)v69;
      char v71 = *(unsigned char *)(v69 + 8);
      sub_10E0C(*(void *)v69, v71);
      sub_40900(v70, v71);
      sub_C374(v70, v71);
    }
    uint64_t v66 = v67;
  }
  sub_4FEB8(v64, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v55);
  uint64_t v72 = v151;
  sub_4FE50(v55, v151, type metadata accessor for ColorConstants.Environment);
  uint64_t v73 = v172;
  (*(void (**)(void, void, uint64_t))(v56 + 104))(v172, enum case for ColorScheme.dark(_:), v65);
  sub_50A54((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  char v74 = sub_26D360();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v75(v73, v65);
  v75(v72, v65);
  if (v74) {
    _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else {
    sub_26C150();
  }
  sub_4FEB8(v55, type metadata accessor for ColorConstants);
  uint64_t v76 = v161;
  sub_26BAC0();
  sub_4F9A0();
  uint64_t v77 = v142;
  uint64_t v78 = v175;
  sub_26C0B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v162 + 8))(v76, v163);
  sub_B6DC(v78, &qword_2EBED0);
  char v79 = sub_26B7C0();
  sub_26A640();
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v88 = v143;
  uint64_t v89 = (uint64_t)v144;
  uint64_t v90 = v146;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v144, v77, v146);
  uint64_t v91 = v89 + *(int *)(v139 + 36);
  *(unsigned char *)uint64_t v91 = v79;
  *(void *)(v91 + 8) = v81;
  *(void *)(v91 + 16) = v83;
  *(void *)(v91 + 24) = v85;
  *(void *)(v91 + 32) = v87;
  *(unsigned char *)(v91 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v77, v90);
  char v92 = sub_26B750();
  sub_26A640();
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  uint64_t v100 = v99;
  uint64_t v101 = v148;
  sub_B678(v89, v148, &qword_2EBEE0);
  uint64_t v102 = v101 + *(int *)(v141 + 36);
  *(unsigned char *)uint64_t v102 = v92;
  *(void *)(v102 + 8) = v94;
  *(void *)(v102 + 16) = v96;
  *(void *)(v102 + 24) = v98;
  *(void *)(v102 + 32) = v100;
  *(unsigned char *)(v102 + 40) = 0;
  sub_B6DC(v89, &qword_2EBEE0);
  uint64_t v103 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v105 = v104;
  sub_4C658(v61, (uint64_t)&v176);
  long long v175 = v176;
  long long v174 = v177;
  long long v173 = v178;
  long long v172 = v179;
  uint64_t v106 = v180;
  LOBYTE(v77) = v181;
  uint64_t v107 = v150;
  sub_B678(v101, v150, &qword_2EBEE8);
  uint64_t v108 = v107 + *(int *)(v145 + 36);
  long long v109 = v174;
  *(_OWORD *)uint64_t v108 = v175;
  *(_OWORD *)(v108 + 16) = v109;
  long long v110 = v172;
  *(_OWORD *)(v108 + 32) = v173;
  *(_OWORD *)(v108 + 48) = v110;
  *(void *)(v108 + 64) = v106;
  *(unsigned char *)(v108 + 72) = (_BYTE)v77;
  *(void *)(v108 + 80) = v103;
  *(void *)(v108 + 88) = v105;
  sub_B6DC(v101, &qword_2EBEE8);
  uint64_t v111 = sub_26B120();
  sub_4CC68(v61, (uint64_t)&v176);
  long long v175 = v176;
  long long v174 = v177;
  long long v173 = v178;
  long long v112 = v179;
  uint64_t v113 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v115 = v114;
  uint64_t v116 = v153;
  sub_B678(v107, v153, &qword_2EBEF0);
  uint64_t v117 = v116 + *(int *)(v149 + 36);
  *(void *)uint64_t v117 = v111;
  *(void *)(v117 + 8) = 0;
  *(unsigned char *)(v117 + 16) = 1;
  *(_OWORD *)(v117 + 24) = v175;
  *(_OWORD *)(v117 + 40) = v174;
  *(_OWORD *)(v117 + 56) = v173;
  *(_OWORD *)(v117 + 72) = v112;
  *(void *)(v117 + 88) = v113;
  *(void *)(v117 + 96) = v115;
  sub_B6DC(v107, &qword_2EBEF0);
  uint64_t v118 = v165;
  sub_26ACD0();
  uint64_t v119 = sub_4C938();
  uint64_t v120 = (uint64_t)v155;
  uint64_t v121 = &v155[*(int *)(v154 + 36)];
  uint64_t v122 = sub_4A98(&qword_2EBF50);
  uint64_t v123 = v166;
  uint64_t v124 = v167;
  (*(void (**)(char *, char *, uint64_t))(v166 + 16))(&v121[*(int *)(v122 + 40)], v118, v167);
  *(void *)uint64_t v121 = v119;
  v121[8] = 0;
  sub_B678(v116, v120, &qword_2EBEF8);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v118, v124);
  sub_B6DC(v116, &qword_2EBEF8);
  uint64_t v125 = v168;
  sub_26AD30();
  sub_4FB94();
  sub_50A54((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  long long v126 = v158;
  uint64_t v127 = v170;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v125, v127);
  sub_B6DC(v120, &qword_2EBF00);
  uint64_t v128 = v61 + *(int *)(v66 + 28);
  uint64_t v129 = *(void *)v128;
  LOBYTE(v121) = *(unsigned char *)(v128 + 8);
  sub_10E0C(*(void *)v128, (char)v121);
  char v130 = sub_40900(v129, (char)v121);
  sub_C374(v129, (char)v121);
  if (v130) {
    double v131 = 1.0;
  }
  else {
    double v131 = 0.3;
  }
  uint64_t v132 = v159;
  uint64_t v133 = (uint64_t)v156;
  uint64_t v134 = v160;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v156, v126, v160);
  *(double *)(v133 + *(int *)(v157 + 36)) = v131;
  (*(void (**)(char *, uint64_t))(v132 + 8))(v126, v134);
  return sub_19CC4(v133, v171, &qword_2EBF10);
}

uint64_t sub_4C658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for CustomPickerButtonStyle();
  if (*(unsigned char *)(a1 + *(int *)(result + 36)) == 1)
  {
    uint64_t v15 = result;
    uint64_t v30 = sub_4C938();
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v13);
    sub_4FE50((uint64_t)v13, (uint64_t)v10, type metadata accessor for ColorConstants.Environment);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
    sub_50A54((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    char v16 = sub_26D360();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v10, v4);
    if (v16) {
      uint64_t v18 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v18 = sub_26C150();
    }
    uint64_t v27 = v18;
    sub_4FEB8((uint64_t)v13, type metadata accessor for ColorConstants);
    uint64_t v20 = *(void *)(a1 + *(int *)(v15 + 40));
    unsigned int v28 = sub_26B580();
    uint64_t result = sub_26C7E0();
    int64x2_t v23 = vdupq_n_s64(0x100uLL);
    uint64_t v21 = v28;
    v23.i64[0] = v27;
    long long v26 = xmmword_271A00;
    char v22 = 1;
    uint64_t v19 = v30;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    char v22 = 0;
    int64x2_t v23 = 0uLL;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0uLL;
  }
  *(void *)a2 = v19;
  *(int64x2_t *)(a2 + 8) = v23;
  *(_OWORD *)(a2 + 24) = v26;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v22;
  return result;
}

uint64_t sub_4C938()
{
  uint64_t v1 = sub_26AC50();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26AC40();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B160();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26C4E0();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CustomPickerButtonStyle();
  double v15 = *(double *)(v0 + *(int *)(v14 + 48)) * 0.5;
  if (*(unsigned __int8 *)(v0 + *(int *)(v14 + 44)) > 1u)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(&v3[*(int *)(v1 + 20)], enum case for RoundedCornerStyle.continuous(_:), v7);
    __asm { FMOV            V0.2D, #10.0 }
    *(_OWORD *)uint64_t v3 = _Q0;
    sub_4FE50((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(double *)&v6[*(int *)(v4 + 20)] = v15;
    sub_4FEB8((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    sub_50A54(&qword_2EBFB0, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle._Inset);
  }
  else
  {
    char v16 = *(void (**)(char *, void, uint64_t))(v8 + 104);
    v16(v13, enum case for RoundedCornerStyle.continuous(_:), v7);
    v16(v10, enum case for RoundedCornerStyle.circular(_:), v7);
    char v17 = sub_26B150();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_4FEB8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for Capsule);
    v24[1] = *(void *)&v15 & 0xFFFFFFFFFFFFFFFELL | ((v17 & 1) == 0);
    sub_4FF18();
  }
  return sub_26C550();
}

uint64_t sub_4CC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CustomPickerButtonStyle();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *(unsigned char *)(a1 + *(int *)(v8 + 36));
  sub_4FE50(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
  if (v11)
  {
    uint64_t result = sub_4FEB8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
LABEL_7:
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    long long v20 = 0uLL;
    goto LABEL_8;
  }
  int v13 = v10[*(int *)(v7 + 44)];
  uint64_t result = sub_4FEB8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CustomPickerButtonStyle);
  if (!v13) {
    goto LABEL_7;
  }
  uint64_t v14 = sub_4C938();
  sub_26A7B0();
  v22[0] = v22[1];
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v6);
  id v18 = [self quaternaryLabelColor];
  uint64_t v19 = sub_26C230();
  sub_4FEB8((uint64_t)v6, type metadata accessor for ColorConstants);
  uint64_t result = sub_26B540();
  long long v20 = v22[0];
  uint64_t v21 = 0x3FF0000000000000;
  if (result) {
    uint64_t v21 = 0x3FE3333333333333;
  }
LABEL_8:
  *(void *)a2 = v14;
  *(_OWORD *)(a2 + 8) = v20;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v21;
  return result;
}

BOOL static ReaderTypeFrameViewModel.Type.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_4CEB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = a5;
  uint64_t v27 = sub_26CF60();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EC060);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EC048);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2EC010);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v26, v19);
  v14[*(int *)(v12 + 44)] = a3 & a4;
  sub_4ADC(a1, a1[3]);
  sub_26CF50();
  uint64_t v20 = sub_26D200();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2EC060);
  uint64_t v23 = &v18[*(int *)(v16 + 44)];
  *uint64_t v23 = a4 & (a3 ^ 1);
  *((void *)v23 + 1) = v20;
  *((void *)v23 + 2) = v22;
  sub_B6DC((uint64_t)v14, &qword_2EC060);
  return sub_19CC4((uint64_t)v18, v28, &qword_2EC048);
}

uint64_t type metadata accessor for SegmentedControl()
{
  return sub_129B4();
}

uint64_t sub_4D148(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

unint64_t sub_4D154()
{
  unint64_t result = qword_2EBD00;
  if (!qword_2EBD00)
  {
    sub_7B0C(&qword_2EBCF8);
    sub_7C18(&qword_2EBD08, &qword_2EBD10);
    sub_4D1F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBD00);
  }
  return result;
}

unint64_t sub_4D1F4()
{
  unint64_t result = qword_2EBD18;
  if (!qword_2EBD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBD18);
  }
  return result;
}

uint64_t sub_4D248@<X0>(uint64_t a1@<X8>)
{
  return sub_48088(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_4D254()
{
  unint64_t result = qword_2EBD48;
  if (!qword_2EBD48)
  {
    sub_7B0C(&qword_2EBD40);
    sub_4D2D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBD48);
  }
  return result;
}

unint64_t sub_4D2D0()
{
  unint64_t result = qword_2EBD50;
  if (!qword_2EBD50)
  {
    sub_7B0C(&qword_2EBD30);
    sub_7C18(&qword_2EBD58, &qword_2EBD28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBD50);
  }
  return result;
}

uint64_t sub_4D370()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_4D3B8()
{
  unint64_t result = qword_2EBD68[0];
  if (!qword_2EBD68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2EBD68);
  }
  return result;
}

uint64_t dispatch thunk of SegmentedItem.titleForAnalytics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SegmentedItem.localizableTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SegmentedItem.localizableSubtitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SegmentedItem.symbol.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SegmentedItem.impressionMetrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SegmentedItem.isDisabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SegmentedItem.action(with:containingShelfID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t sub_4D498()
{
  uint64_t result = type metadata accessor for SegmentedControlViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_4D554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = ~(v7 | 7);
  uint64_t v9 = v7 + 8;
  uint64_t v10 = ((v7 + 8) & ~v7) + *(void *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v10 + (((v7 | 7) + 9) & ~(v7 | 7)) + 31) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v7 + 16) & v8);
    swift_retain();
  }
  else
  {
    uint64_t v14 = ~v7;
    uint64_t v15 = *(void *)a2;
    char v16 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v16);
    *(void *)a1 = v15;
    *(unsigned char *)(a1 + 8) = v16;
    uint64_t v17 = (void *)((a1 + 16) & v8);
    id v18 = (void *)((a2 + 16) & v8);
    *uint64_t v17 = *v18;
    uint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v19(((unint64_t)v17 + v9) & v14, ((unint64_t)v18 + v9) & v14, v5);
    unint64_t v20 = ((unint64_t)v17 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = ((unint64_t)v18 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
    *(void *)(((unint64_t)v17 + v10 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18
                                                                                        + v10
                                                                                        + 31) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_4D6FC(uint64_t a1, uint64_t a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))((v6 + 8 + ((a1 + (v6 | 7) + 9) & ~(v6 | 7))) & ~v6, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_4D7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v9 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (v12 | 7) + 9;
  uint64_t v14 = (void *)((v13 + a1) & ~(v12 | 7));
  uint64_t v15 = (void *)((v13 + a2) & ~(v12 | 7));
  void *v14 = *v15;
  swift_bridgeObjectRetain();
  v10(((unint64_t)v14 + v12 + 8) & ~v12, ((unint64_t)v15 + v12 + 8) & ~v12, v8);
  uint64_t v16 = *(void *)(v11 + 48) + ((v12 + 8) & ~v12);
  uint64_t v17 = (char *)v14 + v16;
  id v18 = (char *)v15 + v16;
  unint64_t v19 = (unint64_t)(v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)(v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(void *)((unint64_t)(v17 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_4D908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v12 | 7) + 9;
  uint64_t v14 = (void *)((v13 + a1) & ~(v12 | 7));
  uint64_t v15 = (void *)((v13 + a2) & ~(v12 | 7));
  void *v14 = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))(((unint64_t)v14 + v12 + 8) & ~v12, ((unint64_t)v15 + v12 + 8) & ~v12, v10);
  uint64_t v16 = *(void *)(v11 + 64) + ((v12 + 8) & ~v12);
  uint64_t v17 = (char *)v14 + v16;
  id v18 = (char *)v15 + v16;
  unint64_t v19 = ((unint64_t)v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(void *)((unint64_t)(v17 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_4DA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = v4 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (v7 | 7) + 9;
  char v9 = (void *)((v8 + a1) & ~(v7 | 7));
  uint64_t v10 = (void *)((v8 + a2) & ~(v7 | 7));
  *char v9 = *v10;
  v5(((unint64_t)v9 + v7 + 8) & ~v7, ((unint64_t)v10 + v7 + 8) & ~v7);
  uint64_t v11 = *(void *)(v6 + 32) + ((v7 + 8) & ~v7);
  uint64_t v12 = (char *)v9 + v11;
  uint64_t v13 = (char *)v10 + v11;
  unint64_t v14 = (unint64_t)(v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (unint64_t)(v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(void *)((unint64_t)(v12 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v13 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_4DB58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v12 | 7) + 9;
  unint64_t v14 = (void *)((v13 + a1) & ~(v12 | 7));
  unint64_t v15 = (void *)(((unint64_t)a2 + v13) & ~(v12 | 7));
  void *v14 = *v15;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 40))(((unint64_t)v14 + v12 + 8) & ~v12, ((unint64_t)v15 + v12 + 8) & ~v12, v10);
  uint64_t v16 = *(void *)(v11 + 64) + ((v12 + 8) & ~v12);
  uint64_t v17 = (char *)v14 + v16;
  id v18 = (char *)v15 + v16;
  unint64_t v19 = ((unint64_t)v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)(v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(void *)((unint64_t)(v17 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_4DC98(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = v6 | 7;
  uint64_t v9 = v6 + 8;
  if (v7 < a2)
  {
    unint64_t v10 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + (v9 & ~v6) + ((v8 + 9) & ~v8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v11 = a2 - v7;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x4DE0CLL);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v7 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  unint64_t v19 = (unint64_t *)(((unint64_t)a1 + v8 + 9) & ~v8);
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v19 + v9) & ~v6);
  }
  unint64_t v20 = *v19;
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_4DE20(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
        + ((v9 + 8) & ~v9)
        + (((v9 | 7) + 9) & ~(v9 | 7))
        + 31) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            int v18 = (void *)((unint64_t)&a1[(v9 | 7) + 9] & ~(v9 | 7));
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(((unint64_t)v18 + v9 + 8) & ~v9);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *int v18 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
         + ((v9 + 8) & ~v9)
         + (((v9 | 7) + 9) & ~(v9 | 7))
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v9 + 8) & ~v9)
       + (((v9 | 7) + 9) & ~(v9 | 7))
       + 31) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v9 + 8) & ~v9)
       + (((v9 | 7) + 9) & ~(v9 | 7))
       + 31) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x4E02CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t getEnumTagSinglePayload for SingleThumbnailSubStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SegmentedControlStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4E1B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SegmentedControlStyle()
{
  return &type metadata for SegmentedControlStyle;
}

uint64_t sub_4E1E8()
{
  return swift_getWitnessTable();
}

void *sub_4E4C8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    size_t v10 = (void *)((char *)a1 + v9);
    unsigned int v11 = (void *)((char *)a2 + v9);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    int v14 = (char *)a1 + v13;
    int v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_10E0C(*(void *)v15, v17);
    *(void *)int v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    unint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_10E0C(*(void *)v20, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_10E0C(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
    uint64_t v28 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
    uint64_t v29 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
    uint64_t v30 = a3[13];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_4A98(&qword_2EBDF0);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    v34(v31, v32, v33);
    v34((char *)a1 + a3[14], (char *)a2 + a3[14], v33);
  }
  return a1;
}

uint64_t sub_4E78C(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_C374(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_C374(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v7 = a1 + a2[13];
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v8 - 8), v7, v8);
  uint64_t v9 = a1 + a2[14];

  return v11(v9, v8);
}

void *sub_4E944(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_10E0C(*(void *)v18, v20);
  *(void *)char v17 = v19;
  v17[8] = v20;
  uint64_t v21 = a3[8];
  char v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_10E0C(*(void *)v23, v25);
  *(void *)char v22 = v24;
  v22[8] = v25;
  uint64_t v26 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v28 = a3[13];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_4A98(&qword_2EBDF0);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
  v32(v29, v30, v31);
  v32((char *)a1 + a3[14], (char *)a2 + a3[14], v31);
  return a1;
}

void *sub_4EBB8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10E0C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_C374(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_10E0C(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  sub_C374(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = v27[8];
  sub_10E0C(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = v29;
  sub_C374(v30, v31);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v32 = a3[13];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_4A98(&qword_2EBDF0);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  v36((char *)a1 + a3[14], (char *)a2 + a3[14], v35);
  return a1;
}

char *sub_4EE80(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  *(void *)char v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v19];
  char v22 = &a2[v19];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  a1[v20] = a2[v20];
  uint64_t v23 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  a1[v23] = a2[v23];
  uint64_t v24 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_4A98(&qword_2EBDF0);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  v28(&a1[a3[14]], &a2[a3[14]], v27);
  return a1;
}

char *sub_4F0D8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EA970);
    uint64_t v11 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_C374(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)v21;
  LOBYTE(v21) = v21[8];
  uint64_t v23 = *(void *)v20;
  char v24 = v20[8];
  *(void *)uint64_t v20 = v22;
  v20[8] = (char)v21;
  sub_C374(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  LOBYTE(v27) = v27[8];
  uint64_t v29 = *(void *)v26;
  char v30 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  sub_C374(v29, v30);
  uint64_t v31 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[v31] = *(void *)&a2[v31];
  uint64_t v32 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  uint64_t v33 = a3[13];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = sub_4A98(&qword_2EBDF0);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40);
  v37(v34, v35, v36);
  v37(&a1[a3[14]], &a2[a3[14]], v36);
  return a1;
}

uint64_t sub_4F384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4F398);
}

uint64_t sub_4F398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EAB20);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_4A98(&qword_2EBDF0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[13];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_4F520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4F534);
}

uint64_t sub_4F534(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EAB20);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = sub_4A98(&qword_2EBDF0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[13];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for CustomPickerButtonStyle()
{
  uint64_t result = qword_2EBE50;
  if (!qword_2EBE50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_4F70C()
{
  sub_4F878(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_4F878(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      sub_4F8CC();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_4F878(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_4F8CC()
{
  if (!qword_2EBE60)
  {
    sub_4F928();
    unint64_t v0 = sub_26A840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EBE60);
    }
  }
}

unint64_t sub_4F928()
{
  unint64_t result = qword_2EBE68;
  if (!qword_2EBE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBE68);
  }
  return result;
}

uint64_t sub_4F97C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_4F9A0()
{
  unint64_t result = qword_2EBF20;
  if (!qword_2EBF20)
  {
    sub_7B0C(&qword_2EBED0);
    sub_4FA6C(&qword_2EBF28, &qword_2EBEC8, (void (*)(void))sub_4FAE8);
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF20);
  }
  return result;
}

uint64_t sub_4FA6C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4FAE8()
{
  unint64_t result = qword_2EBF30;
  if (!qword_2EBF30)
  {
    sub_7B0C(&qword_2EBEC0);
    sub_50A54((unint64_t *)&qword_2EBF38, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF30);
  }
  return result;
}

unint64_t sub_4FB94()
{
  unint64_t result = qword_2EBF58;
  if (!qword_2EBF58)
  {
    sub_7B0C(&qword_2EBF00);
    sub_4FC34();
    sub_7C18(&qword_2EBFA0, &qword_2EBF50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF58);
  }
  return result;
}

unint64_t sub_4FC34()
{
  unint64_t result = qword_2EBF60;
  if (!qword_2EBF60)
  {
    sub_7B0C(&qword_2EBEF8);
    sub_4FCD4();
    sub_7C18(&qword_2EBF90, &qword_2EBF98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF60);
  }
  return result;
}

unint64_t sub_4FCD4()
{
  unint64_t result = qword_2EBF68;
  if (!qword_2EBF68)
  {
    sub_7B0C(&qword_2EBEF0);
    sub_4FA6C(&qword_2EBF70, &qword_2EBEE8, (void (*)(void))sub_4FDA0);
    sub_7C18(&qword_2EBF80, &qword_2EBF88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF68);
  }
  return result;
}

unint64_t sub_4FDA0()
{
  unint64_t result = qword_2EBF78;
  if (!qword_2EBF78)
  {
    sub_7B0C(&qword_2EBEE0);
    sub_7B0C(&qword_2EBED0);
    sub_4F9A0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF78);
  }
  return result;
}

uint64_t sub_4FE50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_4FEB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_4FF18()
{
  unint64_t result = qword_2EBFB8;
  if (!qword_2EBFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBFB8);
  }
  return result;
}

uint64_t sub_4FF74@<X0>(uint64_t a1@<X8>)
{
  return sub_483F8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_4FF80()
{
  return sub_26DAB0();
}

uint64_t sub_4FFB4()
{
  return 16;
}

__n128 sub_4FFC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_4FFCC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (int *)(type metadata accessor for SegmentedControl() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  sub_C374(*(void *)v3, *(unsigned char *)(v3 + 8));
  uint64_t v4 = v3 + v2[11];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SegmentedControlViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v5 + 36), v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_500FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  type metadata accessor for SegmentedControl();

  return sub_488A8(a1, a2, v7, v8, a3);
}

uint64_t sub_501A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_501D8(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_5024C()
{
  return swift_deallocObject();
}

uint64_t sub_5025C()
{
  return sub_1338B8();
}

uint64_t sub_50264()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)(type metadata accessor for SegmentedControl() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v7, v1);
  uint64_t v9 = v0 + v6;
  sub_C374(*(void *)v9, *(unsigned char *)(v9 + 8));
  uint64_t v10 = v9 + v5[11];
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for SegmentedControlViewModel();
  v8(v10 + *(int *)(v11 + 36), v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_503F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void (***)(uint64_t, uint64_t))(v1 + 24);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SegmentedControl() - 8);
  uint64_t v8 = v1 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_4A1DC(v1 + v5, v8, v3, v4, a1);
}

uint64_t sub_504F8()
{
  return swift_deallocObject();
}

unsigned char *sub_50508(unsigned char *a1)
{
  return sub_A0BB4(a1, *(unsigned char *)(v1 + 16));
}

unint64_t sub_50510()
{
  unint64_t result = qword_2EC018;
  if (!qword_2EC018)
  {
    sub_7B0C(&qword_2EBFF8);
    sub_7C18(&qword_2EC020, &qword_2EBFF0);
    sub_7C18(&qword_2EC028, &qword_2EC030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC018);
  }
  return result;
}

uint64_t sub_505D4()
{
  return sub_4B2F4(v0[4], v0[2], v0[3]);
}

uint64_t sub_505E0()
{
  uint64_t v1 = sub_4A98(&qword_2EC010);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_50678@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_4A98(&qword_2EC010) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (char *)(v2 + *(void *)(v5 + 64) + v6);
  char v9 = *v8;
  char v10 = v8[1];

  return sub_4CEB4(a1, v7, v9, v10, a2);
}

unint64_t sub_50728()
{
  unint64_t result = qword_2EC050;
  if (!qword_2EC050)
  {
    sub_7B0C(&qword_2EC048);
    sub_507A4();
    sub_50A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC050);
  }
  return result;
}

unint64_t sub_507A4()
{
  unint64_t result = qword_2EC058;
  if (!qword_2EC058)
  {
    sub_7B0C(&qword_2EC060);
    sub_7B0C(&qword_2EC008);
    sub_26A160();
    sub_7B0C(&qword_2EC000);
    sub_7B0C(&qword_2EB030);
    sub_7B0C(&qword_2EBFF8);
    type metadata accessor for CustomPickerButtonStyle();
    sub_50510();
    sub_50A54(&qword_2EC038, (void (*)(uint64_t))type metadata accessor for CustomPickerButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EB118, &qword_2EB030);
    swift_getOpaqueTypeConformance2();
    sub_50A54((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
    swift_getOpaqueTypeConformance2();
    sub_509AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC058);
  }
  return result;
}

unint64_t sub_509AC()
{
  unint64_t result = qword_2EC068;
  if (!qword_2EC068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC068);
  }
  return result;
}

unint64_t sub_50A00()
{
  unint64_t result = qword_2EC070;
  if (!qword_2EC070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC070);
  }
  return result;
}

uint64_t sub_50A54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_50AA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFE0();
  *a1 = result & 1;
  return result;
}

unint64_t sub_50AF4()
{
  unint64_t result = qword_2EC0D8;
  if (!qword_2EC0D8)
  {
    sub_7B0C(&qword_2EBF10);
    sub_7B0C(&qword_2EBF00);
    sub_26B310();
    sub_4FB94();
    sub_50A54((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC0D8);
  }
  return result;
}

double sub_50BF4()
{
  double result = 350.0;
  xmmword_2EC0E0 = xmmword_271E90;
  return result;
}

double static YearInReviewSharableImage.size.getter()
{
  if (qword_2E9BA0 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_2EC0E0;
}

uint64_t static YearInReviewSharableImage.timeout.getter()
{
  return 200000000000000000;
}

uint64_t YearInReviewSharableImage.init(content:background:localizedYear:shouldIncludeBranding:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  *a6 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for YearInReviewSharableImage();
  uint64_t v13 = (char *)a6 + v12[5];
  *(void *)uint64_t v13 = swift_getKeyPath();
  v13[8] = 0;
  uint64_t v14 = (char *)a6 + v12[6];
  *(void *)uint64_t v14 = swift_getKeyPath();
  unsigned char v14[40] = 0;
  sub_AD44(a1, (uint64_t)a6 + v12[7]);
  uint64_t result = sub_53568(a2, (uint64_t)a6 + v12[8]);
  uint64_t v16 = (uint64_t *)((char *)a6 + v12[9]);
  *uint64_t v16 = a3;
  v16[1] = a4;
  *((unsigned char *)a6 + v12[10]) = a5;
  return result;
}

uint64_t type metadata accessor for YearInReviewSharableImage()
{
  uint64_t result = qword_2EC170;
  if (!qword_2EC170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t YearInReviewSharableImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_26AB40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EC0F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_4A98(&qword_2EC0F8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v8 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v8[1] = v13;
  uint64_t v14 = sub_4A98(&qword_2EC100);
  sub_51058(v1, (uint64_t)v8 + *(int *)(v14 + 44));
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DynamicTypeSize.large(_:), v2);
  sub_7C18(&qword_2EC108, &qword_2EC0F0);
  sub_26BD80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_B6DC((uint64_t)v8, &qword_2EC0F0);
  uint64_t v15 = sub_26ABE0();
  LOBYTE(v2) = sub_26B760();
  uint64_t v16 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v20, v12, v9);
  uint64_t v17 = v16 + *(int *)(sub_4A98(&qword_2EC110) + 36);
  *(void *)uint64_t v17 = v15;
  *(unsigned char *)(v17 + 8) = v2;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_51058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_4A98(&qword_2EC1C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EC1D0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = sub_4A98(&qword_2EC1D8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  sub_512D8((uint64_t)&v24 - v17);
  *(void *)uint64_t v5 = sub_26B1C0();
  *((void *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  uint64_t v19 = sub_4A98(&qword_2EC1E0);
  sub_51FB0(a1, (uint64_t *)&v5[*(int *)(v19 + 44)]);
  LOBYTE(a1) = sub_26B760();
  sub_B678((uint64_t)v5, (uint64_t)v10, &qword_2EC1C8);
  uint64_t v20 = &v10[*(int *)(v7 + 44)];
  *uint64_t v20 = a1;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  v20[40] = 1;
  sub_B6DC((uint64_t)v5, &qword_2EC1C8);
  sub_19CC4((uint64_t)v10, (uint64_t)v12, &qword_2EC1D0);
  sub_B678((uint64_t)v18, (uint64_t)v16, &qword_2EC1D8);
  sub_B678((uint64_t)v12, (uint64_t)v10, &qword_2EC1D0);
  uint64_t v21 = v25;
  sub_B678((uint64_t)v16, v25, &qword_2EC1D8);
  uint64_t v22 = sub_4A98(&qword_2EC1E8);
  sub_B678((uint64_t)v10, v21 + *(int *)(v22 + 48), &qword_2EC1D0);
  sub_B6DC((uint64_t)v12, &qword_2EC1D0);
  sub_B6DC((uint64_t)v18, &qword_2EC1D8);
  sub_B6DC((uint64_t)v10, &qword_2EC1D0);
  return sub_B6DC((uint64_t)v16, &qword_2EC1D8);
}

uint64_t sub_512D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v102 = a1;
  uint64_t v1 = sub_26C260();
  uint64_t v90 = *(void (***)(char *, char *))(v1 - 8);
  uint64_t v91 = (char *)v1;
  __chkstk_darwin(v1);
  uint64_t v89 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26A2F0();
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_4A98(&qword_2EC248);
  __chkstk_darwin(v99);
  uint64_t v101 = (uint64_t *)((char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = sub_4A98(&qword_2EC250);
  __chkstk_darwin(v96);
  uint64_t v97 = (uint64_t *)((char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_4A98(&qword_2EC258);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_4A98(&qword_2EAEE8);
  __chkstk_darwin(v87);
  uint64_t v9 = (uint64_t *)((char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for YearInReviewSharableImage();
  __chkstk_darwin(v10);
  uint64_t v92 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26A6E0();
  uint64_t v93 = *(void *)(v12 - 8);
  uint64_t v94 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2EAEF0);
  uint64_t v15 = __chkstk_darwin(v95);
  uint64_t v17 = (void (**)(char *, char *))((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v85 - v18;
  uint64_t v20 = sub_4A98(&qword_2EA940);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v85 - v24;
  uint64_t v26 = type metadata accessor for PageBackground(0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_556DC(v103 + *(int *)(v10 + 32), (uint64_t)v28, type metadata accessor for PageBackground);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      long long v30 = *((_OWORD *)v28 + 9);
      long long v125 = *((_OWORD *)v28 + 8);
      long long v126 = v30;
      uint64_t v127 = *((void *)v28 + 20);
      long long v31 = *((_OWORD *)v28 + 5);
      long long v121 = *((_OWORD *)v28 + 4);
      long long v122 = v31;
      long long v32 = *((_OWORD *)v28 + 7);
      long long v123 = *((_OWORD *)v28 + 6);
      long long v124 = v32;
      long long v33 = *((_OWORD *)v28 + 1);
      long long v117 = *(_OWORD *)v28;
      long long v118 = v33;
      long long v34 = *((_OWORD *)v28 + 3);
      long long v119 = *((_OWORD *)v28 + 2);
      long long v120 = v34;
      CoverViewModel.source.getter((uint64_t)&v111);
      unsigned __int8 v35 = v113;
      if (v113 == 255)
      {
        uint64_t v76 = swift_allocObject();
        *(void *)(v76 + 16) = 0xD00000000000002CLL;
        *(void *)(v76 + 24) = 0x8000000000288650;
        uint64_t v105 = (uint64_t)sub_1CA78;
        uint64_t v106 = v76;
        uint64_t v108 = 0;
        uint64_t v109 = 0;
        uint64_t v107 = 0;
        char v110 = 1;
      }
      else
      {
        uint64_t v37 = v111;
        uint64_t v36 = v112;
        uint64_t v38 = v103;
        sub_412A8((uint64_t)&v111);
        uint64_t v39 = v114;
        uint64_t v40 = v115;
        sub_4ADC(&v111, v114);
        uint64_t v105 = v37;
        uint64_t v106 = v36;
        LOBYTE(v107) = v35 & 1;
        long long v41 = v121;
        uint64_t v42 = v38 + *(int *)(v10 + 20);
        uint64_t v43 = *(void *)v42;
        LOBYTE(v38) = *(unsigned char *)(v42 + 8);
        sub_10E0C(*(void *)v42, v38);
        double v44 = sub_401C0(v43, v38);
        sub_C374(v43, v38);
        uint64_t v45 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, double, double, double))(v40 + 8))(&v105, v39, v40, *(double *)&v41, *((double *)&v41 + 1), v44);
        sub_2D78C(v37, v36, v35);
        type metadata accessor for ImageResourceLoader();
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = 0;
        sub_4A98(&qword_2EC2A8);
        uint64_t v47 = swift_allocObject();
        *(_DWORD *)(v47 + 28) = 0;
        *(void *)(v47 + 16) = 0;
        *(unsigned char *)(v47 + 24) = 0;
        *(void *)(v46 + 24) = v47;
        sub_269A40();
        uint64_t v104 = v46;
        sub_26C340();
        uint64_t v48 = v105;
        uint64_t v49 = v106;
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v111);
        uint64_t v105 = (uint64_t)sub_52AC4;
        uint64_t v106 = 0;
        uint64_t v107 = v45;
        uint64_t v108 = v48;
        uint64_t v109 = v49;
        char v110 = 0;
      }
      sub_4A98(&qword_2EC288);
      sub_4A98(&qword_2EA828);
      sub_7C18(&qword_2EC280, &qword_2EC288);
      sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
      sub_26B2F0();
      uint64_t v77 = v111;
      uint64_t v78 = v112;
      uint64_t v79 = v113;
      uint64_t v80 = v114;
      uint64_t v81 = v115;
      int v82 = v116;
      uint64_t v83 = v97;
      uint64_t *v97 = v111;
      v83[1] = v78;
      void v83[2] = v79;
      v83[3] = v80;
      v83[4] = v81;
      *((unsigned char *)v83 + 40) = v82;
      LODWORD(v103) = v82;
      swift_storeEnumTagMultiPayload();
      sub_55604(v77, v78, v79, v80, v81, v82);
      sub_4A98(&qword_2EC278);
      sub_2D474();
      sub_553EC();
      uint64_t v84 = (uint64_t)v98;
      sub_26B2F0();
      sub_B678(v84, (uint64_t)v101, &qword_2EC258);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EC260);
      sub_55370();
      sub_554B0();
      sub_26B2F0();
      sub_55668(v77, v78, v79, v80, v81, v103);
      sub_B6DC(v84, &qword_2EC258);
      return sub_2D738((uint64_t)&v117);
    }
    else
    {
      uint64_t v59 = &v28[*(int *)(sub_4A98(&qword_2EA948) + 48)];
      type metadata accessor for BundleFinder();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v61 = [self bundleForClass:ObjCClassFromMetadata];
      sub_26A2E0();
      sub_26C2A0();
      uint64_t v63 = v89;
      char v62 = v90;
      uint64_t v64 = v91;
      ((void (*)(char *, void, char *))v90[13])(v89, enum case for Image.ResizingMode.stretch(_:), v91);
      uint64_t v65 = sub_26C280();
      swift_release();
      v62[1](v63, v64);
      if (qword_2E9BA0 != -1) {
        swift_once();
      }
      _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_26A8D0();
      uint64_t v66 = v117;
      char v67 = BYTE8(v117);
      uint64_t v68 = v118;
      char v69 = BYTE8(v118);
      uint64_t v70 = v101;
      *uint64_t v101 = v65;
      v70[1] = 0;
      *((_WORD *)v70 + 8) = 257;
      v70[3] = v66;
      *((unsigned char *)v70 + 32) = v67;
      v70[5] = v68;
      *((unsigned char *)v70 + 48) = v69;
      *(_OWORD *)(v70 + 7) = v119;
      *((_WORD *)v70 + 36) = 0;
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EC260);
      sub_55370();
      sub_554B0();
      sub_26B2F0();
      return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v59, v94);
    }
  }
  else
  {
    uint64_t v90 = v17;
    uint64_t v91 = v19;
    uint64_t v50 = v9;
    uint64_t v89 = *(char **)v28;
    uint64_t v51 = sub_4A98(&qword_2EA950);
    sub_19CC4((uint64_t)&v28[*(int *)(v51 + 48)], (uint64_t)v25, &qword_2EA940);
    uint64_t KeyPath = swift_getKeyPath();
    sub_B678((uint64_t)v25, (uint64_t)v23, &qword_2EA940);
    sub_556DC(v103, v92, (uint64_t (*)(void))type metadata accessor for YearInReviewSharableImage);
    uint64_t v53 = v93;
    uint64_t v54 = v94;
    int v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48))(v23, 1, v94);
    uint64_t v86 = v25;
    if (v55 == 1)
    {
      uint64_t v56 = v14;
      uint64_t v57 = (uint64_t)v14;
      uint64_t v58 = v92;
      sub_40FB4(v57);
      sub_55744(v58, (uint64_t (*)(void))type metadata accessor for YearInReviewSharableImage);
      sub_B6DC((uint64_t)v23, &qword_2EA940);
    }
    else
    {
      sub_55744(v92, (uint64_t (*)(void))type metadata accessor for YearInReviewSharableImage);
      uint64_t v56 = v14;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v14, v23, v54);
    }
    uint64_t v72 = (uint64_t)v91;
    uint64_t v73 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v50 + *(int *)(v87 + 28), v56, v54);
    *uint64_t v50 = KeyPath;
    char v74 = (char **)v90;
    sub_B678(v73, (uint64_t)v90 + *(int *)(v95 + 36), &qword_2EAEE8);
    *char v74 = v89;
    swift_retain();
    sub_B6DC(v73, &qword_2EAEE8);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v54);
    sub_19CC4((uint64_t)v74, v72, &qword_2EAEF0);
    sub_B678(v72, (uint64_t)v97, &qword_2EAEF0);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EC278);
    sub_2D474();
    sub_553EC();
    uint64_t v75 = (uint64_t)v98;
    sub_26B2F0();
    sub_B678(v75, (uint64_t)v101, &qword_2EC258);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EC260);
    sub_55370();
    sub_554B0();
    sub_26B2F0();
    swift_release();
    sub_B6DC(v75, &qword_2EC258);
    sub_B6DC(v72, &qword_2EAEF0);
    return sub_B6DC((uint64_t)v86, &qword_2EA940);
  }
}

uint64_t sub_51FB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v25 = a2;
  uint64_t v3 = sub_4A98(&qword_2EC1F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v24 = type metadata accessor for YearInReviewSharableImage();
  sub_C224(a1 + *(int *)(v24 + 28), (uint64_t)v33);
  uint64_t v9 = v33[4];
  sub_4ADC(v33, v33[3]);
  swift_getKeyPath();
  LOBYTE(v29[0]) = 1;
  sub_7B0C(&qword_2EAD68);
  uint64_t v31 = sub_26ABD0();
  uint64_t v10 = sub_7C18((unint64_t *)&qword_2EAD70, &qword_2EAD68);
  v29[5] = v9;
  v29[6] = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CA1C(v30);
  sub_26BCB0();
  swift_release();
  uint64_t v11 = WitnessTable;
  sub_4ADC(v30, v31);
  swift_getKeyPath();
  char v28 = 0;
  uint64_t v12 = sub_26ABD0();
  v29[3] = v12;
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  v29[4] = swift_getWitnessTable();
  uint64_t v13 = sub_CA1C(v29);
  sub_26BCB0();
  uint64_t v14 = swift_release();
  __chkstk_darwin(v14);
  (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 16))((char *)&v23 - v15, v13, v12);
  uint64_t v17 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v30);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
  if (*(unsigned char *)(v23 + *(int *)(v24 + 40)) == 1)
  {
    sub_523AC((uint64_t)v8);
    uint64_t v18 = sub_4A98(&qword_2EC1F8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = sub_4A98(&qword_2EC1F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  sub_B678((uint64_t)v8, (uint64_t)v6, &qword_2EC1F0);
  uint64_t v20 = v25;
  *uint64_t v25 = v17;
  uint64_t v21 = sub_4A98(&qword_2EC200);
  sub_B678((uint64_t)v6, (uint64_t)v20 + *(int *)(v21 + 48), &qword_2EC1F0);
  swift_retain();
  sub_B6DC((uint64_t)v8, &qword_2EC1F0);
  sub_B6DC((uint64_t)v6, &qword_2EC1F0);
  return swift_release();
}

uint64_t sub_523AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v52 = sub_26A6E0();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v49 = (uint64_t)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_26B600();
  uint64_t v2 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_4A98(&qword_2EC208);
  uint64_t v45 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_4A98(&qword_2EC210);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EC218);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EC220);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_4A98(&qword_2EC228) - 8;
  __chkstk_darwin(v46);
  uint64_t v43 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_26B120();
  sub_531C4(v53, (uint64_t)v56);
  *(_OWORD *)&v58[167] = v56[10];
  *(_OWORD *)&v58[183] = v56[11];
  *(_OWORD *)&v58[199] = v56[12];
  *(_OWORD *)&v58[215] = v57;
  *(_OWORD *)&v58[103] = v56[6];
  *(_OWORD *)&v58[119] = v56[7];
  *(_OWORD *)&v58[135] = v56[8];
  *(_OWORD *)&v58[151] = v56[9];
  *(_OWORD *)&v58[39] = v56[2];
  *(_OWORD *)&v58[55] = v56[3];
  *(_OWORD *)&v58[71] = v56[4];
  *(_OWORD *)&v58[87] = v56[5];
  *(_OWORD *)&v58[7] = v56[0];
  *(_OWORD *)&v58[23] = v56[1];
  *(_OWORD *)&v55[177] = *(_OWORD *)&v58[176];
  *(_OWORD *)&v55[193] = *(_OWORD *)&v58[192];
  *(_OWORD *)&v55[209] = *(_OWORD *)&v58[208];
  *(_OWORD *)&v55[113] = *(_OWORD *)&v58[112];
  *(_OWORD *)&v55[129] = *(_OWORD *)&v58[128];
  *(_OWORD *)&v55[145] = *(_OWORD *)&v58[144];
  *(_OWORD *)&v55[161] = *(_OWORD *)&v58[160];
  *(_OWORD *)&v55[49] = *(_OWORD *)&v58[48];
  *(_OWORD *)&v55[65] = *(_OWORD *)&v58[64];
  *(_OWORD *)&v55[81] = *(_OWORD *)&v58[80];
  *(_OWORD *)&v55[97] = *(_OWORD *)&v58[96];
  *(_OWORD *)&v55[1] = *(_OWORD *)v58;
  *(_OWORD *)&v55[17] = *(_OWORD *)&v58[16];
  char v59 = 1;
  long long v54 = (unint64_t)v16;
  v55[0] = 1;
  *(void *)&v55[224] = *((void *)&v57 + 1);
  *(_OWORD *)&v55[33] = *(_OWORD *)&v58[32];
  sub_26B5E0();
  sub_4A98(&qword_2EC230);
  sub_7C18(&qword_2EC238, &qword_2EC230);
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v40);
  v60[12] = *(_OWORD *)&v55[176];
  v60[13] = *(_OWORD *)&v55[192];
  v60[14] = *(_OWORD *)&v55[208];
  uint64_t v61 = *(void *)&v55[224];
  v60[8] = *(_OWORD *)&v55[112];
  v60[9] = *(_OWORD *)&v55[128];
  v60[10] = *(_OWORD *)&v55[144];
  v60[11] = *(_OWORD *)&v55[160];
  v60[4] = *(_OWORD *)&v55[48];
  v60[5] = *(_OWORD *)&v55[64];
  v60[6] = *(_OWORD *)&v55[80];
  v60[7] = *(_OWORD *)&v55[96];
  v60[0] = v54;
  v60[1] = *(_OWORD *)v55;
  v60[2] = *(_OWORD *)&v55[16];
  v60[3] = *(_OWORD *)&v55[32];
  sub_55164((uint64_t)v60);
  uint64_t v17 = sub_26B7E0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v45;
  uint64_t v20 = v41;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v8, v6, v41);
  uint64_t v21 = (uint64_t *)&v8[*(int *)(v44 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v17;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  sub_26B890();
  sub_551E0();
  uint64_t v22 = v42;
  sub_26BC40();
  sub_B6DC((uint64_t)v8, &qword_2EC210);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v25 = v47;
  uint64_t v24 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v14, v22, v48);
  uint64_t v26 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v26 = v23;
  *((void *)v26 + 1) = 1;
  v26[16] = 0;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = v43;
  sub_B678((uint64_t)v14, v43, &qword_2EC220);
  uint64_t v29 = (uint64_t *)(v28 + *(int *)(v46 + 44));
  *uint64_t v29 = v27;
  v29[1] = 0x3FE0000000000000;
  sub_B6DC((uint64_t)v14, &qword_2EC220);
  uint64_t v30 = swift_getKeyPath();
  type metadata accessor for YearInReviewSharableImage();
  uint64_t v31 = v49;
  PageBackground.resolvedColorScheme.getter(v49);
  uint64_t v32 = sub_4A98(&qword_2EC1F8);
  uint64_t v33 = v51;
  long long v34 = (uint64_t *)(v51 + *(int *)(v32 + 36));
  uint64_t v35 = sub_4A98(&qword_2EAEE8);
  uint64_t v36 = v50;
  uint64_t v37 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))((char *)v34 + *(int *)(v35 + 28), v31, v52);
  *long long v34 = v30;
  sub_B678(v28, v33, &qword_2EC228);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v31, v37);
  return sub_B6DC(v28, &qword_2EC228);
}

void sub_52AC4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_26C260();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2EC2B0);
  __chkstk_darwin(v27);
  uint64_t v28 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_4A98(&qword_2EAEE8);
  __chkstk_darwin(v25);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_26A6E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EAEF0);
  uint64_t v14 = __chkstk_darwin(v26);
  uint64_t v16 = (uint64_t *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  if (a1)
  {
    id v19 = a1;
    sub_26C240();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3);
    uint64_t v20 = sub_26C280();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *uint64_t v28 = v20;
    swift_storeEnumTagMultiPayload();
    sub_2D474();
    swift_retain();
    sub_26B2F0();
    swift_release();
  }
  else
  {
    id v21 = [self secondarySystemBackgroundColor];
    uint64_t v22 = sub_26C0C0();
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for ColorScheme.dark(_:), v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v25 + 28), v13, v10);
    *uint64_t v9 = KeyPath;
    sub_B678((uint64_t)v9, (uint64_t)v16 + *(int *)(v26 + 36), &qword_2EAEE8);
    *uint64_t v16 = v22;
    swift_retain();
    sub_B6DC((uint64_t)v9, &qword_2EAEE8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    sub_19CC4((uint64_t)v16, (uint64_t)v18, &qword_2EAEF0);
    sub_B678((uint64_t)v18, (uint64_t)v28, &qword_2EAEF0);
    swift_storeEnumTagMultiPayload();
    sub_2D474();
    sub_26B2F0();
    sub_B6DC((uint64_t)v18, &qword_2EAEF0);
  }
}

uint64_t sub_52F40()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v18[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v18[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v16 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v16;
}

uint64_t sub_531C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26BAA0();
  uint64_t v47 = v5;
  uint64_t v48 = v4;
  char v7 = v6;
  uint64_t v49 = v8;
  sub_26C650();
  sub_26A8D0();
  uint64_t v45 = v69;
  uint64_t v46 = v67;
  char v41 = v70;
  char v42 = v68;
  uint64_t v43 = v72;
  uint64_t v44 = v71;
  uint64_t v9 = (void *)(a1 + *(int *)(type metadata accessor for YearInReviewSharableImage() + 36));
  uint64_t v10 = v9[1];
  if (v10)
  {
    *(void *)&long long v58 = *v9;
    *((void *)&v58 + 1) = v10;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = 32;
    v73._object = (void *)0xE100000000000000;
    sub_26D4E0(v73);
    uint64_t v11 = sub_52F40();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    v74._countAndFlagsBits = v11;
    v74._object = v13;
    sub_26D4E0(v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    HIDWORD(v14) = DWORD1(v58);
    uint64_t v15 = *((void *)&v58 + 1);
  }
  else
  {
    uint64_t v14 = sub_52F40();
  }
  char v40 = v7 & 1;
  DWORD1(v58) = HIDWORD(v14);
  *((void *)&v58 + 1) = v15;
  sub_CC78();
  uint64_t v16 = sub_26BB00();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  LODWORD(v58) = sub_26B470();
  uint64_t v21 = sub_26BA40();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_3A380(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_26C660();
  sub_AFD90(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v58, 0.0, 1, 0.0, 1, v28, v29, v21, v23, v27, v25);
  sub_3A380(v21, v23, v27);
  swift_bridgeObjectRelease();
  long long v30 = v63;
  v57[6] = v64;
  v57[7] = v65;
  long long v31 = v65;
  v57[8] = v66;
  long long v32 = v59;
  v57[2] = v60;
  long long v33 = v60;
  v57[3] = v61;
  long long v34 = v61;
  v57[4] = v62;
  long long v35 = v62;
  v57[5] = v63;
  v57[0] = v58;
  v57[1] = v59;
  v50[6] = v64;
  v50[7] = v65;
  v50[8] = v66;
  long long v36 = v58;
  v50[2] = v60;
  v50[3] = v61;
  v50[4] = v62;
  v50[5] = v63;
  v50[0] = v58;
  v50[1] = v59;
  *(_OWORD *)(a2 + 176) = v64;
  *(_OWORD *)(a2 + 192) = v31;
  *(_OWORD *)(a2 + 208) = v66;
  *(_OWORD *)(a2 + 112) = v33;
  *(_OWORD *)(a2 + 128) = v34;
  *(_OWORD *)(a2 + 144) = v35;
  *(_OWORD *)(a2 + 160) = v30;
  char v56 = v40;
  char v54 = v42;
  char v52 = v41;
  *(_OWORD *)(a2 + 80) = v36;
  *(_OWORD *)(a2 + 96) = v32;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v55;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v55[3];
  char v37 = v54;
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v53;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v53[3];
  char v38 = v52;
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v51;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v51[3];
  *(void *)a2 = v48;
  *(void *)(a2 + 8) = v47;
  *(unsigned char *)(a2 + 16) = v40;
  *(void *)(a2 + 24) = v49;
  *(void *)(a2 + 32) = v46;
  *(unsigned char *)(a2 + 40) = v37;
  *(void *)(a2 + 48) = v45;
  *(unsigned char *)(a2 + 56) = v38;
  *(void *)(a2 + 64) = v44;
  *(void *)(a2 + 72) = v43;
  sub_45370(v48, v47, v40);
  swift_bridgeObjectRetain();
  sub_552F0((uint64_t)v50);
  sub_55330((uint64_t)v57);
  sub_3A380(v48, v47, v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_53568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageBackground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_535CC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for YearInReviewSharableImage(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_10E0C(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    char v17 = *((unsigned char *)a2 + v14 + 40);
    if (v17)
    {
      long long v18 = *(_OWORD *)(v16 + 24);
      *(_OWORD *)(v15 + 24) = v18;
      (**(void (***)(char *))(v18 - 8))(v15);
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      swift_retain();
    }
    unsigned char v15[40] = v17;
    uint64_t v19 = a3[7];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v26 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v26;
      swift_bridgeObjectRetain();
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v28 = &v22[v27];
      uint64_t v29 = &v23[v27];
      uint64_t v30 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v23[56])
      {
        long long v25 = *((_OWORD *)v23 + 1);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v25;
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *(_OWORD *)(v22 + 41) = *(_OWORD *)(v23 + 41);
      }
      else
      {
        long long v37 = *(_OWORD *)(v23 + 24);
        *(_OWORD *)(v22 + 24) = v37;
        (**(void (***)(char *, char *))(v37 - 8))(v22, v23);
        *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
        v22[56] = 0;
      }
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      v22[80] = v23[80];
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      *((void *)v22 + 13) = *((void *)v23 + 13);
      uint64_t v38 = *((void *)v23 + 15);
      swift_bridgeObjectRetain();
      if (v38)
      {
        *((void *)v22 + 14) = *((void *)v23 + 14);
        *((void *)v22 + 15) = v38;
        uint64_t v39 = *((void *)v23 + 17);
        *((void *)v22 + 16) = *((void *)v23 + 16);
        *((void *)v22 + 17) = v39;
        v22[144] = v23[144];
        uint64_t v40 = *((void *)v23 + 19);
        uint64_t v41 = *((void *)v23 + 20);
        *((void *)v22 + 19) = v40;
        *((void *)v22 + 20) = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v42 = *((_OWORD *)v23 + 8);
        *((_OWORD *)v22 + 7) = *((_OWORD *)v23 + 7);
        *((_OWORD *)v22 + 8) = v42;
        *((_OWORD *)v22 + 9) = *((_OWORD *)v23 + 9);
        *((void *)v22 + 20) = *((void *)v23 + 20);
      }
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      swift_retain();
      uint64_t v31 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      long long v32 = &v22[v31];
      long long v33 = &v23[v31];
      uint64_t v34 = sub_26A6E0();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = sub_4A98(&qword_2EA940);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = a3[9];
    uint64_t v44 = a3[10];
    uint64_t v45 = (void *)((char *)a1 + v43);
    uint64_t v46 = (void *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for YearInReviewSharableImage(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  if (*(unsigned char *)(v5 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v5);
  }
  else {
    swift_release();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[7]);
  uint64_t v6 = a1 + a2[8];
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v11 = v6 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      break;
    case 1:
      if (!*(unsigned char *)(v6 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v6);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v8 = v6 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v9 = sub_26A6E0();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      break;
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for YearInReviewSharableImage(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10E0C(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  char v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = *((unsigned char *)a2 + v12 + 40);
  if (v15)
  {
    long long v16 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)(v13 + 24) = v16;
    (**(void (***)(char *))(v16 - 8))(v13);
  }
  else
  {
    *(void *)char v13 = *(void *)v14;
    swift_retain();
  }
  v13[40] = v15;
  uint64_t v17 = a3[7];
  long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
  *(_OWORD *)((char *)a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  uint64_t v19 = a3[8];
  long long v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = *((void *)v21 + 1);
    *(void *)long long v20 = *(void *)v21;
    *((void *)v20 + 1) = v24;
    swift_bridgeObjectRetain();
    uint64_t v25 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v26 = &v20[v25];
    uint64_t v27 = &v21[v25];
    uint64_t v28 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (v21[56])
    {
      long long v23 = *((_OWORD *)v21 + 1);
      *(_OWORD *)long long v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v23;
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *(_OWORD *)(v20 + 41) = *(_OWORD *)(v21 + 41);
    }
    else
    {
      long long v35 = *(_OWORD *)(v21 + 24);
      *(_OWORD *)(v20 + 24) = v35;
      (**(void (***)(char *, char *))(v35 - 8))(v20, v21);
      *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
      v20[56] = 0;
    }
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    v20[80] = v21[80];
    *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
    *((void *)v20 + 13) = *((void *)v21 + 13);
    uint64_t v36 = *((void *)v21 + 15);
    swift_bridgeObjectRetain();
    if (v36)
    {
      *((void *)v20 + 14) = *((void *)v21 + 14);
      *((void *)v20 + 15) = v36;
      uint64_t v37 = *((void *)v21 + 17);
      *((void *)v20 + 16) = *((void *)v21 + 16);
      *((void *)v20 + 17) = v37;
      v20[144] = v21[144];
      uint64_t v38 = *((void *)v21 + 19);
      uint64_t v39 = *((void *)v21 + 20);
      *((void *)v20 + 19) = v38;
      *((void *)v20 + 20) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v40 = *((_OWORD *)v21 + 8);
      *((_OWORD *)v20 + 7) = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 8) = v40;
      *((_OWORD *)v20 + 9) = *((_OWORD *)v21 + 9);
      *((void *)v20 + 20) = *((void *)v21 + 20);
    }
  }
  else
  {
    *(void *)long long v20 = *(void *)v21;
    swift_retain();
    uint64_t v29 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v30 = &v20[v29];
    uint64_t v31 = &v21[v29];
    uint64_t v32 = sub_26A6E0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_4A98(&qword_2EA940);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = a3[9];
  uint64_t v42 = a3[10];
  uint64_t v43 = (void *)((char *)a1 + v41);
  uint64_t v44 = (void *)((char *)a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for YearInReviewSharableImage(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10E0C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_C374(v12, v13);
  if (a1 == a2)
  {
    sub_16D58((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  }
  else
  {
    uint64_t v14 = a3[6];
    char v15 = (char *)a1 + v14;
    long long v16 = (char *)a2 + v14;
    sub_B6DC((uint64_t)a1 + v14, &qword_2EAB10);
    if (v16[40])
    {
      uint64_t v17 = *((void *)v16 + 3);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + 4) = *((void *)v16 + 4);
      (**(void (***)(char *, char *))(v17 - 8))(v15, v16);
      unsigned char v15[40] = 1;
    }
    else
    {
      *(void *)char v15 = *(void *)v16;
      unsigned char v15[40] = 0;
      swift_retain();
    }
    sub_16D58((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    sub_55744((uint64_t)a1 + v18, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v26 = &v19[v25];
      uint64_t v27 = &v20[v25];
      uint64_t v28 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (v20[56])
      {
        long long v22 = *(_OWORD *)v20;
        long long v23 = *((_OWORD *)v20 + 1);
        long long v24 = *((_OWORD *)v20 + 2);
        *(_OWORD *)(v19 + 41) = *(_OWORD *)(v20 + 41);
        *((_OWORD *)v19 + 1) = v23;
        *((_OWORD *)v19 + 2) = v24;
        *(_OWORD *)uint64_t v19 = v22;
      }
      else
      {
        uint64_t v35 = *((void *)v20 + 3);
        *((void *)v19 + 3) = v35;
        *((void *)v19 + 4) = *((void *)v20 + 4);
        (**(void (***)(char *, char *))(v35 - 8))(v19, v20);
        *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
        v19[56] = 0;
      }
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      v19[80] = v20[80];
      *((void *)v19 + 11) = *((void *)v20 + 11);
      *((void *)v19 + 12) = *((void *)v20 + 12);
      *((void *)v19 + 13) = *((void *)v20 + 13);
      uint64_t v36 = *((void *)v20 + 15);
      swift_bridgeObjectRetain();
      if (v36)
      {
        *((void *)v19 + 14) = *((void *)v20 + 14);
        *((void *)v19 + 15) = *((void *)v20 + 15);
        *((void *)v19 + 16) = *((void *)v20 + 16);
        *((void *)v19 + 17) = *((void *)v20 + 17);
        v19[144] = v20[144];
        *((void *)v19 + 19) = *((void *)v20 + 19);
        *((void *)v19 + 20) = *((void *)v20 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v37 = *((_OWORD *)v20 + 7);
        long long v38 = *((_OWORD *)v20 + 8);
        long long v39 = *((_OWORD *)v20 + 9);
        *((void *)v19 + 20) = *((void *)v20 + 20);
        *((_OWORD *)v19 + 8) = v38;
        *((_OWORD *)v19 + 9) = v39;
        *((_OWORD *)v19 + 7) = v37;
      }
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_retain();
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v30 = &v19[v29];
      uint64_t v31 = &v20[v29];
      uint64_t v32 = sub_26A6E0();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_4A98(&qword_2EA940);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3[9];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

char *initializeWithTake for YearInReviewSharableImage(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *(_OWORD *)(v12 + 25) = *(_OWORD *)(v13 + 25);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  long long v20 = &a1[v16];
  uint64_t v21 = &a2[v16];
  uint64_t v22 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)long long v20 = *(_OWORD *)v21;
    uint64_t v30 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v31 = &v20[v30];
    uint64_t v32 = &v21[v30];
    uint64_t v33 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)long long v20 = *(void *)v21;
    uint64_t v24 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v25 = &v20[v24];
    uint64_t v26 = &v21[v24];
    uint64_t v27 = sub_26A6E0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_4A98(&qword_2EA940);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    goto LABEL_11;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_12:
  uint64_t v34 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  a1[v34] = a2[v34];
  return a1;
}

char *assignWithTake for YearInReviewSharableImage(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    uint64_t v6 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_C374(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = &a2[v14];
    uint64_t v16 = &a1[v14];
    sub_B6DC((uint64_t)&a1[v14], &qword_2EAB10);
    long long v17 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v15;
    *((_OWORD *)v16 + 1) = v17;
    *(_OWORD *)(v16 + 25) = *(_OWORD *)(v15 + 25);
  }
  uint64_t v18 = a3[7];
  long long v19 = &a1[v18];
  long long v20 = &a2[v18];
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&a1[v18]);
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)long long v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  if (a1 != a2)
  {
    uint64_t v22 = a3[8];
    long long v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    sub_55744((uint64_t)&a1[v22], type metadata accessor for PageBackground);
    uint64_t v25 = type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
      uint64_t v33 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v34 = &v23[v33];
      uint64_t v35 = &v24[v33];
      uint64_t v36 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)long long v23 = *(void *)v24;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v28 = &v23[v27];
      uint64_t v29 = &v24[v27];
      uint64_t v30 = sub_26A6E0();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_4A98(&qword_2EA940);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      goto LABEL_15;
    }
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
LABEL_16:
  uint64_t v37 = a3[9];
  long long v38 = &a1[v37];
  long long v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)long long v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewSharableImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_54CA8);
}

uint64_t sub_54CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for PageBackground(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for YearInReviewSharableImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_54DF0);
}

uint64_t sub_54DF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for PageBackground(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_54F24()
{
  sub_5501C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PageBackground(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_5501C()
{
  if (!qword_2EABA0)
  {
    sub_26A6E0();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EABA0);
    }
  }
}

unint64_t sub_55078()
{
  unint64_t result = qword_2EC1C0;
  if (!qword_2EC1C0)
  {
    sub_7B0C(&qword_2EC110);
    sub_7B0C(&qword_2EC0F0);
    sub_7C18(&qword_2EC108, &qword_2EC0F0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC1C0);
  }
  return result;
}

uint64_t sub_55164(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_3A380(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_3A380(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_551E0()
{
  unint64_t result = qword_2EC240;
  if (!qword_2EC240)
  {
    sub_7B0C(&qword_2EC210);
    sub_7B0C(&qword_2EC230);
    sub_7C18(&qword_2EC238, &qword_2EC230);
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC240);
  }
  return result;
}

uint64_t sub_552F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_55330(uint64_t a1)
{
  return a1;
}

unint64_t sub_55370()
{
  unint64_t result = qword_2EC268;
  if (!qword_2EC268)
  {
    sub_7B0C(&qword_2EC258);
    sub_2D474();
    sub_553EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC268);
  }
  return result;
}

unint64_t sub_553EC()
{
  unint64_t result = qword_2EC270;
  if (!qword_2EC270)
  {
    sub_7B0C(&qword_2EC278);
    sub_7C18(&qword_2EC280, &qword_2EC288);
    sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC270);
  }
  return result;
}

unint64_t sub_554B0()
{
  unint64_t result = qword_2EC290;
  if (!qword_2EC290)
  {
    sub_7B0C(&qword_2EC260);
    sub_55550();
    sub_7C18(&qword_2EAF18, &qword_2EAF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC290);
  }
  return result;
}

unint64_t sub_55550()
{
  unint64_t result = qword_2EC298;
  if (!qword_2EC298)
  {
    sub_7B0C(&qword_2EC2A0);
    sub_2D384();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC298);
  }
  return result;
}

uint64_t sub_555CC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_55604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
  }

  return swift_retain();
}

uint64_t sub_55668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = swift_release();
  if ((a6 & 1) == 0)
  {
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_556DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_55744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_557A4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_4A98(&qword_2EA978) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v5 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      *(uint64_t *)((char *)a1 + v5[7]) = *(uint64_t *)((char *)a2 + v5[7]);
      uint64_t v10 = v5[8];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      v11[2] = v12[2];
      *(_WORD *)uint64_t v11 = *(_WORD *)v12;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_55900(uint64_t a1)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v3 = sub_26AB40();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

_WORD *sub_559B4(_WORD *a1, _WORD *a2)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    int v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v5 = v4[6];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
    uint64_t v9 = v4[8];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v10[2] = v11[2];
    *(_WORD *)uint64_t v10 = *(_WORD *)v11;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_55AB8(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v5 = v4[6];
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      *(void *)&a1[v4[7]] = *(void *)&a2[v4[7]];
      uint64_t v9 = v4[8];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      char v12 = v11[2];
      *(_WORD *)uint64_t v10 = *(_WORD *)v11;
      v10[2] = v12;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *sub_55BDC(_WORD *a1, _WORD *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v6 = v5[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
    uint64_t v10 = v5[8];
    uint64_t v11 = (char *)a1 + v10;
    char v12 = (char *)a2 + v10;
    v11[2] = v12[2];
    *(_WORD *)uint64_t v11 = *(_WORD *)v12;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_WORD *sub_55CF0(_WORD *a1, _WORD *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA978);
    uint64_t v4 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
      uint64_t v10 = v5[8];
      uint64_t v11 = (char *)a1 + v10;
      char v12 = (char *)a2 + v10;
      v11[2] = v12[2];
      *(_WORD *)uint64_t v11 = *(_WORD *)v12;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_55E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_55E30);
}

uint64_t sub_55E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5639C(a1, a2, a3, &qword_2EAB28);
}

uint64_t sub_55E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_55E50);
}

uint64_t sub_55E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_56428(a1, a2, a3, a4, &qword_2EAB28);
}

uint64_t type metadata accessor for ScrollingCardModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2EC350);
}

void sub_55E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_55E9C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_4A98(&qword_2EA968) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_55FA8(uint64_t a1)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_26A6E0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_5604C(void *a1, void *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_56108(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_561DC(void *a1, const void *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_562A0(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v4 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_5637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_56390);
}

uint64_t sub_56390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5639C(a1, a2, a3, &qword_2EAB18);
}

uint64_t sub_5639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_4A98(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_56408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5641C);
}

uint64_t sub_5641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_56428(a1, a2, a3, a4, &qword_2EAB18);
}

uint64_t sub_56428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_4A98(a5);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t type metadata accessor for CardModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2EC3E0);
}

void sub_564B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_564D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_5772C(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_5656C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26B4B0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[5];
    char v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)v13;
    char v15 = v13[8];
    sub_10E0C(*(void *)v13, v15);
    *(void *)char v12 = v14;
    v12[8] = v15;
    uint64_t v16 = a3[6];
    long long v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *long long v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[7];
    long long v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *long long v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v22[3];
    v21[2] = v22[2];
    v21[3] = v24;
    v21[4] = v22[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_56818(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26B4B0();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_569A4(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26B4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_4A98(&qword_2EB3E0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)v11;
  char v13 = v11[8];
  sub_10E0C(*(void *)v11, v13);
  *(void *)uint64_t v10 = v12;
  v10[8] = v13;
  uint64_t v14 = a3[6];
  char v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    void *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v20[3];
  v19[2] = v20[2];
  v19[3] = v22;
  v19[4] = v20[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_56C00(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB3D8);
    sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26B4B0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)v11;
  char v13 = v11[8];
  sub_10E0C(*(void *)v11, v13);
  uint64_t v14 = *(void *)v10;
  char v15 = v10[8];
  *(void *)uint64_t v10 = v12;
  v10[8] = v13;
  sub_C374(v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[6];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    sub_B6DC((uint64_t)a1 + v16, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *(void *)((char *)a2 + v20);
  v21[1] = *(void *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[2] = v22[2];
  v21[3] = v22[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[4] = v22[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_56EC4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26B4B0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4A98(&qword_2EB3E0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v10];
  char v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  char v15 = &a2[v11];
  uint64_t v16 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  return a1;
}

char *sub_5710C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB3D8);
    uint64_t v6 = sub_4A98(&qword_2EB3D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26B4B0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_4A98(&qword_2EB3E0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  uint64_t v14 = *(void *)v11;
  char v15 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  sub_C374(v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[6];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    sub_B6DC((uint64_t)&a1[v16], &qword_2EB3E8);
    uint64_t v19 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v23 + 3);
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  *((void *)v22 + 4) = *((void *)v23 + 4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_573B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_573C8);
}

uint64_t sub_573C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB3F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB3F8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 32);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_574E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_574FC);
}

uint64_t sub_574FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB3F0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2EB3F8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 32) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BulletPointStack(uint64_t a1)
{
  return sub_2A148(a1, qword_2EC470);
}

void sub_57638()
{
  sub_3985C();
  if (v0 <= 0x3F)
  {
    sub_5772C(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_5772C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_57780()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_5779C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_269840();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void sub_5780C()
{
  qword_2EC2B8 = 0x4028000000000000;
}

void sub_5781C()
{
  qword_2EC2C0 = 0x403A000000000000;
}

void sub_5782C()
{
  qword_2EC2C8 = 0x4040000000000000;
}

void sub_5783C()
{
  qword_2EC2D0 = 0x4044000000000000;
}

void sub_5784C()
{
  qword_2EC2D8 = 0x4000000000000000;
}

void sub_5785C()
{
  qword_2EC2E0 = 0x4018000000000000;
}

void sub_5786C()
{
  qword_2EC2E8 = 0x4042800000000000;
}

uint64_t sub_57880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26AC80();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26C700();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26C260();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_26C250();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
  uint64_t v12 = sub_26C280();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for BulletPointStack(0);
  sub_41340((uint64_t)v7);
  uint64_t v15 = v19;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v4, v7, v19);
  uint64_t v16 = sub_4A98(&qword_2EC5C0);
  sub_5BCB4((uint64_t)v4, a1 + *(int *)(v16 + 36), (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = KeyPath;
  *(void *)(a1 + 32) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_5BDF8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_57B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v70 = a5;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v72 = a6;
  uint64_t v8 = sub_26AC80();
  __chkstk_darwin(v8 - 8);
  uint64_t v69 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26C700();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4A98(&qword_2EC610) - 8;
  uint64_t v12 = __chkstk_darwin(v66);
  uint64_t v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)v58 - v15;
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  v58[1] = sub_CC78();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_26BB00();
  uint64_t v18 = v17;
  LOBYTE(a2) = v19 & 1;
  sub_26B7E0();
  uint64_t v20 = sub_26BA80();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_3A380(v16, v18, a2);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_26BA70();
  uint64_t v64 = v26;
  uint64_t v65 = v25;
  uint64_t v63 = v27;
  int v62 = v28 & 1;
  sub_3A380(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v74 = v59;
  uint64_t v75 = v60;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_26BB00();
  uint64_t v31 = v30;
  LOBYTE(a1) = v32 & 1;
  sub_26B7E0();
  uint64_t v33 = sub_26BA80();
  uint64_t v35 = v34;
  LOBYTE(v18) = v36;
  swift_release();
  LOBYTE(a2) = v18 & 1;
  sub_3A380(v29, v31, a1);
  swift_bridgeObjectRelease();
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v37 = sub_26BA30();
  uint64_t v39 = v38;
  LOBYTE(v18) = v40;
  uint64_t v42 = v41;
  swift_release();
  LOBYTE(v18) = v18 & 1;
  sub_3A380(v33, v35, a2);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  type metadata accessor for BulletPointStack(0);
  uint64_t v44 = v73;
  sub_41340(v73);
  uint64_t v45 = v67;
  uint64_t v46 = (uint64_t)v69;
  uint64_t v47 = v44;
  uint64_t v48 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v47, v68);
  sub_5BCB4(v46, (uint64_t)&v14[*(int *)(v66 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v14 = v37;
  *((void *)v14 + 1) = v39;
  unsigned char v14[16] = v18;
  *((void *)v14 + 3) = v42;
  *((void *)v14 + 4) = v43;
  *((void *)v14 + 5) = 6;
  v14[48] = 0;
  sub_45370(v37, v39, v18);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_5BDF8(v46, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v73, v48);
  sub_3A380(v37, v39, v18);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v71;
  sub_19CC4((uint64_t)v14, v71, &qword_2EC610);
  sub_B678(v49, (uint64_t)v14, &qword_2EC610);
  uint64_t v50 = v72;
  uint64_t v51 = v64;
  uint64_t v52 = v65;
  uint64_t v53 = v63;
  *uint64_t v72 = v65;
  v50[1] = v53;
  LOBYTE(v18) = v62;
  *((unsigned char *)v50 + 16) = v62;
  uint64_t v54 = KeyPath;
  v50[3] = v51;
  v50[4] = v54;
  v50[5] = 6;
  *((unsigned char *)v50 + 48) = 0;
  int v55 = v50;
  uint64_t v56 = sub_4A98(&qword_2EC618);
  sub_B678((uint64_t)v14, (uint64_t)v55 + *(int *)(v56 + 48), &qword_2EC610);
  sub_45370(v52, v53, v18);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_B6DC(v49, &qword_2EC610);
  sub_B6DC((uint64_t)v14, &qword_2EC610);
  sub_3A380(v52, v53, v18);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5809C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v120 = a1;
  uint64_t v115 = sub_4A98(&qword_2EC620);
  __chkstk_darwin(v115);
  uint64_t v111 = (void *)((char *)v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v3 - 8);
  char v110 = (char *)v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2EC628);
  __chkstk_darwin(v113);
  uint64_t v114 = (uint64_t)v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2EC630);
  __chkstk_darwin(v119);
  unsigned __int8 v116 = (char *)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26AC80();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26C700();
  uint64_t v109 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2EC638);
  uint64_t v13 = __chkstk_darwin(v117);
  uint64_t v15 = (char *)v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (void *)((char *)v103 - v16);
  uint64_t v118 = sub_4A98(&qword_2EC640);
  __chkstk_darwin(v118);
  long long v121 = (_OWORD *)((char *)v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(int *)(type metadata accessor for BulletPointStack(0) + 28);
  uint64_t v112 = v1;
  uint64_t v20 = (uint64_t *)(v1 + v19);
  uint64_t v21 = v20[1];
  uint64_t v22 = v20[2];
  uint64_t v23 = v20[3];
  if (v21)
  {
    uint64_t v24 = *v20;
    if (v23)
    {
      uint64_t v25 = qword_2E9BD0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25 != -1) {
        swift_once();
      }
      uint64_t v26 = qword_2EC2E0;
      uint64_t v27 = sub_26B1C0();
      char v28 = v111;
      *uint64_t v111 = v27;
      v28[1] = v26;
      *((unsigned char *)v28 + 16) = 0;
      uint64_t v29 = sub_4A98(&qword_2EC648);
      sub_58DFC(v24, v21, v22, v23, v112, (char **)((char *)v28 + *(int *)(v29 + 44)));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = &qword_2EC620;
      sub_B678((uint64_t)v28, v114, &qword_2EC620);
      swift_storeEnumTagMultiPayload();
      sub_5C2D4(&qword_2EC650, &qword_2EC638, (void (*)(void))sub_5C350);
      sub_7C18(&qword_2EC698, &qword_2EC620);
      uint64_t v31 = (uint64_t)v116;
      sub_26B2F0();
      sub_B678(v31, (uint64_t)v121, &qword_2EC630);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EC6A0);
      sub_5C410();
      sub_5C548();
      sub_26B2F0();
      sub_B6DC(v31, &qword_2EC630);
      uint64_t v32 = (uint64_t)v28;
      return sub_B6DC(v32, v30);
    }
    *(void *)&long long v126 = *v20;
    *((void *)&v126 + 1) = v21;
    sub_CC78();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_26BB00();
    uint64_t v64 = v63;
    char v66 = v65 & 1;
    sub_26B8F0();
    uint64_t v67 = sub_26BA80();
    uint64_t v69 = v68;
    char v71 = v70;
    swift_release();
    char v72 = v71 & 1;
    sub_3A380(v62, v64, v66);
    swift_bridgeObjectRelease();
    uint64_t v73 = sub_26BA70();
    uint64_t v75 = v74;
    char v77 = v76;
    uint64_t v117 = v78;
    sub_3A380(v67, v69, v72);
    swift_bridgeObjectRelease();
    if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
    {
      uint64_t v79 = sub_26B820();
      uint64_t v80 = (uint64_t)v110;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v110, 1, 1, v79);
    }
    else
    {
      uint64_t v86 = enum case for Font.Design.serif (_:);
      uint64_t v87 = sub_26B820();
      uint64_t v88 = *(void *)(v87 - 8);
      uint64_t v80 = (uint64_t)v110;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 104))(v110, v86, v87);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v80, 0, 1, v87);
    }
    uint64_t v89 = v121;
    char v90 = v77 & 1;
    uint64_t v91 = sub_26BA10();
    uint64_t v93 = v92;
    uint64_t v95 = v94;
    uint64_t v97 = v96 & 1;
    sub_3A380(v73, v75, v90);
    swift_bridgeObjectRelease();
    sub_B6DC(v80, &qword_2EBFC0);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v122 = v91;
    *((void *)&v122 + 1) = v93;
    *(void *)&long long v123 = v97;
    *((void *)&v123 + 1) = v95;
    *(void *)&long long v124 = KeyPath;
    *((void *)&v124 + 1) = 3;
    __int16 v125 = 256;
    sub_45370(v91, v93, v97);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_4A98(&qword_2EC6B8);
    sub_5C4AC((unint64_t *)&qword_2EC6B0, &qword_2EC6B8, &qword_2EC688, &qword_2EC690);
    sub_26B2F0();
    char v99 = v129;
    char v100 = v130;
    long long v101 = v127;
    long long v102 = v128;
    *uint64_t v89 = v126;
    v89[1] = v101;
    v89[2] = v102;
    *((unsigned char *)v89 + 48) = v99;
    *((unsigned char *)v89 + 49) = v100;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EC6A0);
    sub_5C410();
    sub_5C548();
    sub_26B2F0();
    sub_3A380(v91, v93, v97);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v107 = v12;
    uint64_t v108 = v9;
    char v110 = (char *)v10;
    uint64_t v111 = v17;
    if (v23)
    {
      *(void *)&long long v126 = v22;
      *((void *)&v126 + 1) = v23;
      sub_CC78();
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_26BB00();
      uint64_t v35 = v34;
      char v37 = v36 & 1;
      sub_26B7E0();
      uint64_t v38 = sub_26BA80();
      uint64_t v40 = v39;
      char v42 = v41;
      v103[1] = v43;
      swift_release();
      sub_3A380(v33, v35, v37);
      swift_bridgeObjectRelease();
      _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
      uint64_t v106 = sub_26BA30();
      uint64_t v105 = v44;
      LOBYTE(v35) = v45;
      uint64_t v47 = v46;
      swift_release();
      LODWORD(v35) = v35 & 1;
      sub_3A380(v38, v40, v42 & 1);
      swift_bridgeObjectRelease();
      uint64_t v48 = swift_getKeyPath();
      uint64_t v49 = swift_getKeyPath();
      uint64_t v50 = (uint64_t)v107;
      sub_41340((uint64_t)v107);
      uint64_t v51 = v109;
      uint64_t v52 = (uint64_t)v108;
      uint64_t v53 = v110;
      (*(void (**)(char *, uint64_t, char *))(v109 + 16))(v108, v50, v110);
      sub_5BCB4(v52, (uint64_t)&v15[*(int *)(v117 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
      uint64_t v54 = v106;
      uint64_t v55 = v105;
      *(void *)uint64_t v15 = v106;
      *((void *)v15 + 1) = v55;
      char v56 = v35;
      int v104 = v35;
      v15[16] = v35;
      *((void *)v15 + 3) = v47;
      *((void *)v15 + 4) = v48;
      unsigned char v15[40] = 1;
      *((void *)v15 + 6) = v49;
      *((void *)v15 + 7) = 3;
      v15[64] = 0;
      uint64_t v57 = v54;
      uint64_t v58 = v55;
      sub_45370(v54, v55, v56);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_5BDF8(v52, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
      (*(void (**)(uint64_t, char *))(v51 + 8))(v50, v53);
      sub_3A380(v57, v58, v104);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v30 = &qword_2EC638;
      uint64_t v59 = v111;
      sub_19CC4((uint64_t)v15, (uint64_t)v111, &qword_2EC638);
      sub_B678((uint64_t)v59, v114, &qword_2EC638);
      swift_storeEnumTagMultiPayload();
      sub_5C2D4(&qword_2EC650, &qword_2EC638, (void (*)(void))sub_5C350);
      sub_7C18(&qword_2EC698, &qword_2EC620);
      uint64_t v60 = (uint64_t)v116;
      sub_26B2F0();
      sub_B678(v60, (uint64_t)v121, &qword_2EC630);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EC6A0);
      sub_5C410();
      sub_5C548();
      sub_26B2F0();
      sub_B6DC(v60, &qword_2EC630);
      uint64_t v32 = (uint64_t)v59;
      return sub_B6DC(v32, v30);
    }
    __int16 v125 = 0;
    long long v123 = 0u;
    long long v124 = 0u;
    long long v122 = 0u;
    sub_4A98(&qword_2EC6B8);
    sub_5C4AC((unint64_t *)&qword_2EC6B0, &qword_2EC6B8, &qword_2EC688, &qword_2EC690);
    sub_26B2F0();
    char v81 = v129;
    char v82 = v130;
    long long v83 = v127;
    long long v84 = v128;
    uint64_t v85 = v121;
    *long long v121 = v126;
    v85[1] = v83;
    v85[2] = v84;
    *((unsigned char *)v85 + 48) = v81;
    *((unsigned char *)v85 + 49) = v82;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EC6A0);
    sub_5C410();
    sub_5C548();
    return sub_26B2F0();
  }
}

uint64_t sub_58DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char **a6@<X8>)
{
  uint64_t v85 = a5;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v91 = a6;
  uint64_t v8 = sub_26AC80();
  __chkstk_darwin(v8 - 8);
  uint64_t v89 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26C700();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  __chkstk_darwin(v10);
  uint64_t v86 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_4A98(&qword_2EC638);
  uint64_t v12 = __chkstk_darwin(v84);
  uint64_t v75 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v90 = (uint64_t)&v74 - v14;
  uint64_t v15 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v15 - 8);
  char v81 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = a1;
  uint64_t v93 = a2;
  unint64_t v17 = sub_CC78();
  swift_bridgeObjectRetain();
  unint64_t v76 = v17;
  uint64_t v18 = sub_26BB00();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_26B8F0();
  uint64_t v23 = sub_26BA80();
  uint64_t v25 = v24;
  LOBYTE(v17) = v26;
  swift_release();
  sub_3A380(v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_26BA70();
  uint64_t v29 = v28;
  char v31 = v30;
  sub_3A380(v23, v25, v17 & 1);
  swift_bridgeObjectRelease();
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v32 = sub_26B820();
    uint64_t v33 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v81, 1, 1, v32);
  }
  else
  {
    uint64_t v34 = enum case for Font.Design.serif (_:);
    uint64_t v35 = sub_26B820();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v33 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v81, v34, v35);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v37 = sub_26BA10();
  uint64_t v80 = v38;
  char v81 = (char *)v37;
  uint64_t v79 = v39;
  int v78 = v40 & 1;
  sub_3A380(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  sub_B6DC(v33, &qword_2EBFC0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v92 = v82;
  uint64_t v93 = v83;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_26BB00();
  uint64_t v43 = v42;
  char v45 = v44 & 1;
  sub_26B7E0();
  uint64_t v46 = sub_26BA80();
  uint64_t v48 = v47;
  char v50 = v49;
  swift_release();
  char v51 = v50 & 1;
  sub_3A380(v41, v43, v45);
  swift_bridgeObjectRelease();
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v52 = sub_26BA30();
  uint64_t v54 = v53;
  char v56 = v55;
  uint64_t v83 = v57;
  swift_release();
  int v58 = v56 & 1;
  sub_3A380(v46, v48, v51);
  swift_bridgeObjectRelease();
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = swift_getKeyPath();
  type metadata accessor for BulletPointStack(0);
  uint64_t v61 = v86;
  sub_41340(v86);
  uint64_t v62 = v87;
  uint64_t v63 = v88;
  uint64_t v64 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v89, v61, v88);
  uint64_t v65 = (uint64_t)v75;
  sub_5BCB4(v64, (uint64_t)&v75[*(int *)(v84 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v65 = v52;
  *(void *)(v65 + 8) = v54;
  LODWORD(v82) = v58;
  *(unsigned char *)(v65 + 16) = v58;
  *(void *)(v65 + 24) = v83;
  *(void *)(v65 + 32) = v59;
  *(unsigned char *)(v65 + 40) = 1;
  *(void *)(v65 + 48) = v60;
  *(void *)(v65 + 56) = 3;
  *(unsigned char *)(v65 + 64) = 0;
  sub_45370(v52, v54, v58);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_5BDF8(v64, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  sub_3A380(v52, v54, v82);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v66 = v90;
  sub_19CC4(v65, v90, &qword_2EC638);
  sub_B678(v66, v65, &qword_2EC638);
  uint64_t v67 = v91;
  uint64_t v68 = v80;
  uint64_t v69 = (uint64_t)v81;
  uint64_t v70 = v79;
  *uint64_t v91 = v81;
  v67[1] = (char *)v70;
  LOBYTE(v59) = v78;
  *((unsigned char *)v67 + 16) = v78;
  uint64_t v71 = KeyPath;
  v67[3] = v68;
  v67[4] = (char *)v71;
  v67[5] = (unsigned char *)(&def_5F050 + 3);
  *((unsigned char *)v67 + 48) = 0;
  uint64_t v72 = sub_4A98(&qword_2EC6C8);
  sub_B678(v65, (uint64_t)v67 + *(int *)(v72 + 48), &qword_2EC638);
  sub_45370(v69, v70, v59);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_B6DC(v66, &qword_2EC638);
  sub_B6DC(v65, &qword_2EC638);
  sub_3A380(v69, v70, v59);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_594EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = sub_4A98(&qword_2EB028);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v49 = sub_4A98(&qword_2EB030);
  uint64_t v16 = __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v50 = (uint64_t)&v43 - v18;
  uint64_t v47 = sub_4A98(&qword_2EC538);
  __chkstk_darwin(v47);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2EC540);
  uint64_t v51 = *(void *)(v21 - 8);
  uint64_t v52 = v21;
  __chkstk_darwin(v21);
  uint64_t v48 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9BD8 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_2EC2E8;
  *(void *)uint64_t v20 = sub_26B1C0();
  *((void *)v20 + 1) = v23;
  unsigned char v20[16] = 0;
  uint64_t v24 = sub_4A98(&qword_2EC548);
  sub_59AC4(v2, (uint64_t)&v20[*(int *)(v24 + 44)]);
  char v45 = v20;
  uint64_t v25 = v10;
  char v26 = (void (*)(char *, void, uint64_t))v10[13];
  v26(v15, enum case for DynamicTypeSize.xSmall(_:), v9);
  v26(v13, enum case for DynamicTypeSize.accessibility1(_:), v9);
  sub_5C18C(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D350();
  if (result)
  {
    uint64_t v28 = &v8[*(int *)(v3 + 48)];
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v25[4];
    v29(v8, v15, v9);
    v29(v28, v13, v9);
    char v30 = &v6[*(int *)(v3 + 48)];
    uint64_t v43 = v3;
    char v31 = (void (*)(char *, char *, uint64_t))v25[2];
    v31(v6, v8, v9);
    v31(v30, v28, v9);
    uint64_t v32 = (uint64_t)v46;
    v29(v46, v6, v9);
    uint64_t v33 = (void (*)(char *, uint64_t))v25[1];
    v33(v30, v9);
    uint64_t v34 = &v6[*(int *)(v43 + 48)];
    v29(v6, v8, v9);
    v29(v34, v28, v9);
    v29((char *)(v32 + *(int *)(v49 + 36)), v34, v9);
    v33(v6, v9);
    uint64_t v35 = v50;
    sub_19CC4(v32, v50, &qword_2EB030);
    sub_7C18(&qword_2EC550, &qword_2EC538);
    sub_7C18(&qword_2EB118, &qword_2EB030);
    uint64_t v36 = v48;
    uint64_t v37 = (uint64_t)v45;
    sub_26BD90();
    sub_B6DC(v35, &qword_2EB030);
    sub_B6DC(v37, &qword_2EC538);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v40 = v51;
    uint64_t v39 = v52;
    uint64_t v41 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v44, v36, v52);
    uint64_t v42 = (uint64_t *)(v41 + *(int *)(sub_4A98(&qword_2EC558) + 36));
    *uint64_t v42 = KeyPath;
    v42[1] = 0x3FE0000000000000;
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v36, v39);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_59AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for BulletPointStack(0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v30 + 64);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_4A98(&qword_2EC560);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v31 = (uint64_t)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = sub_4A98(&qword_2EC568);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v29 - v14;
  sub_5809C((uint64_t)v29 - v14);
  uint64_t v16 = sub_26C650();
  uint64_t v18 = v17;
  if (qword_2E9BA8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_2EC2B8;
  if (qword_2E9BB0 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_2EC2C0;
  *(void *)uint64_t v9 = v16;
  *((void *)v9 + 1) = v18;
  *((void *)v9 + 2) = v19;
  unsigned char v9[24] = 0;
  *((void *)v9 + 4) = v20;
  v9[40] = 0;
  v29[1] = &v9[*(int *)(sub_4A98(&qword_2EC570) + 44)];
  uint64_t v35 = *(void *)(a1 + *(int *)(v3 + 28) + 32);
  sub_5BCB4(a1, (uint64_t)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BulletPointStack);
  unint64_t v21 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v22 = swift_allocObject();
  sub_5BC4C((uint64_t)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for BulletPointStack);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EC578);
  sub_269840();
  sub_4A98(&qword_2EC580);
  sub_7C18(&qword_2EC588, &qword_2EC578);
  uint64_t v23 = sub_7B0C(&qword_2EC590);
  uint64_t v24 = sub_7C18(&qword_2EC598, &qword_2EC590);
  uint64_t v33 = v23;
  uint64_t v34 = v24;
  swift_getOpaqueTypeConformance2();
  sub_5C18C(&qword_2EC5A0, (void (*)(uint64_t))type metadata accessor for BulletPointStack.Bullet);
  sub_26C500();
  sub_B678((uint64_t)v15, (uint64_t)v13, &qword_2EC568);
  uint64_t v25 = v31;
  sub_B678((uint64_t)v9, v31, &qword_2EC560);
  uint64_t v26 = v32;
  sub_B678((uint64_t)v13, v32, &qword_2EC568);
  uint64_t v27 = sub_4A98(&qword_2EC5A8);
  sub_B678(v25, v26 + *(int *)(v27 + 48), &qword_2EC560);
  sub_B6DC((uint64_t)v9, &qword_2EC560);
  sub_B6DC((uint64_t)v15, &qword_2EC568);
  sub_B6DC(v25, &qword_2EC560);
  return sub_B6DC((uint64_t)v13, &qword_2EC568);
}

uint64_t sub_59F50(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_26B600();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EC590);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_26B100();
  v10[8] = 0;
  sub_5A0F0(a2, a1, (uint64_t)&v10[*(int *)(v8 + 36)]);
  sub_26B5E0();
  sub_7C18(&qword_2EC598, &qword_2EC590);
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_B6DC((uint64_t)v10, &qword_2EC590);
}

uint64_t sub_5A0F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v96 = a3;
  uint64_t v97 = a2;
  uint64_t v4 = sub_4A98(&qword_2EC5B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v92 = (uint64_t *)((char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_4A98(&qword_2EC5B8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v95 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v94 = (uint64_t)&v77 - v9;
  uint64_t v10 = sub_26B4B0();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  __chkstk_darwin(v10);
  uint64_t v82 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_4A98(&qword_2EB4C8);
  __chkstk_darwin(v86);
  uint64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EB3E0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v83 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v77 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v77 - v20;
  uint64_t v22 = sub_4A98(&qword_2EC5C0);
  __chkstk_darwin(v22 - 8);
  uint64_t v85 = (uint64_t)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_4A98(&qword_2EC5C8);
  __chkstk_darwin(v84);
  uint64_t v91 = (uint64_t)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EC5D0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v89 = (uint64_t)&v77 - v29;
  uint64_t v30 = sub_4A98(&qword_2EC5D8);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v93 = (uint64_t)&v77 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v77 - v33;
  uint64_t v35 = a1 + *(int *)(type metadata accessor for BulletPointStack(0) + 20);
  uint64_t v36 = *(void *)v35;
  char v37 = *(unsigned char *)(v35 + 8);
  sub_10E0C(*(void *)v35, v37);
  char v38 = sub_40900(v36, v37);
  sub_C374(v36, v37);
  if (v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v34, 1, 1, v25);
    uint64_t v39 = v97;
    goto LABEL_14;
  }
  uint64_t v79 = v26;
  uint64_t v80 = v25;
  int v78 = v34;
  uint64_t v40 = v85;
  sub_57880(v85);
  uint64_t v81 = a1;
  sub_41314((uint64_t)v21);
  uint64_t v41 = v87;
  uint64_t v42 = v88;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v19, enum case for UserInterfaceSizeClass.compact(_:), v88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v19, 0, 1, v42);
  uint64_t v43 = (uint64_t)&v13[*(int *)(v86 + 48)];
  sub_B678((uint64_t)v21, (uint64_t)v13, &qword_2EB3E0);
  sub_B678((uint64_t)v19, v43, &qword_2EB3E0);
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  if (v44((uint64_t)v13, 1, v42) == 1)
  {
    sub_B6DC((uint64_t)v19, &qword_2EB3E0);
    sub_B6DC((uint64_t)v21, &qword_2EB3E0);
    int v45 = v44(v43, 1, v42);
    a1 = v81;
    uint64_t v39 = v97;
    uint64_t v46 = v79;
    if (v45 == 1)
    {
      sub_B6DC((uint64_t)v13, &qword_2EB3E0);
      uint64_t v34 = v78;
      uint64_t v47 = v80;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v48 = v41;
  uint64_t v49 = (uint64_t)v19;
  uint64_t v50 = v83;
  sub_B678((uint64_t)v13, v83, &qword_2EB3E0);
  if (v44(v43, 1, v42) == 1)
  {
    sub_B6DC(v49, &qword_2EB3E0);
    sub_B6DC((uint64_t)v21, &qword_2EB3E0);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v42);
    a1 = v81;
    uint64_t v39 = v97;
    uint64_t v46 = v79;
LABEL_8:
    sub_B6DC((uint64_t)v13, &qword_2EB4C8);
    uint64_t v34 = v78;
    uint64_t v47 = v80;
    goto LABEL_12;
  }
  uint64_t v51 = v50;
  uint64_t v52 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v82, v43, v42);
  sub_5C18C((unint64_t *)&qword_2EB620, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v53 = sub_26D360();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v48 + 8);
  v54(v52, v42);
  sub_B6DC(v49, &qword_2EB3E0);
  sub_B6DC((uint64_t)v21, &qword_2EB3E0);
  v54((char *)v51, v42);
  sub_B6DC((uint64_t)v13, &qword_2EB3E0);
  a1 = v81;
  uint64_t v39 = v97;
  uint64_t v34 = v78;
  uint64_t v47 = v80;
  uint64_t v46 = v79;
  if (v53)
  {
LABEL_10:
    if (qword_2E9BB8 == -1) {
      goto LABEL_13;
    }
    goto LABEL_17;
  }
LABEL_12:
  if (qword_2E9BC0 != -1) {
LABEL_17:
  }
    swift_once();
LABEL_13:
  uint64_t v55 = v84;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v56 = v91;
  sub_B678(v40, v91, &qword_2EC5C0);
  uint64_t v57 = (_OWORD *)(v56 + *(int *)(v55 + 36));
  long long v58 = v99;
  *uint64_t v57 = v98;
  v57[1] = v58;
  v57[2] = v100;
  sub_B6DC(v40, &qword_2EC5C0);
  sub_5C2D4(&qword_2EC5E0, &qword_2EC5C8, (void (*)(void))sub_5C1F4);
  uint64_t v59 = (uint64_t)v90;
  sub_26BE90();
  sub_B6DC(v56, &qword_2EC5C8);
  uint64_t v60 = v89;
  sub_19CC4(v59, v89, &qword_2EC5D0);
  sub_19CC4(v60, (uint64_t)v34, &qword_2EC5D0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v34, 0, 1, v47);
LABEL_14:
  uint64_t v61 = v39[2];
  uint64_t v62 = v39[3];
  uint64_t v63 = v39[4];
  uint64_t v64 = v39[5];
  uint64_t v65 = sub_26B1D0();
  if (qword_2E9BC8 != -1) {
    swift_once();
  }
  uint64_t v66 = qword_2EC2D8;
  uint64_t v67 = (uint64_t)v92;
  uint64_t *v92 = v65;
  *(void *)(v67 + 8) = v66;
  *(unsigned char *)(v67 + 16) = 0;
  uint64_t v68 = sub_4A98(&qword_2EC600);
  sub_57B7C(v61, v62, v63, v64, a1, (uint64_t *)(v67 + *(int *)(v68 + 44)));
  uint64_t v69 = sub_26C650();
  uint64_t v70 = v95;
  sub_AFF84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v95, 0.0, 1, 0.0, 1, v69, v71);
  sub_B6DC(v67, &qword_2EC5B0);
  uint64_t v72 = v94;
  sub_19CC4(v70, v94, &qword_2EC5B8);
  uint64_t v73 = v93;
  sub_B678((uint64_t)v34, v93, &qword_2EC5D8);
  sub_B678(v72, v70, &qword_2EC5B8);
  uint64_t v74 = v96;
  sub_B678(v73, v96, &qword_2EC5D8);
  uint64_t v75 = sub_4A98(&qword_2EC608);
  sub_B678(v70, v74 + *(int *)(v75 + 48), &qword_2EC5B8);
  sub_B6DC(v72, &qword_2EC5B8);
  sub_B6DC((uint64_t)v34, &qword_2EC5D8);
  sub_B6DC(v70, &qword_2EC5B8);
  return sub_B6DC(v73, &qword_2EC5D8);
}

uint64_t sub_5AB98()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_5ABB4()
{
  qword_2EC2F0 = 0x4036000000000000;
}

uint64_t sub_5ABC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26AC50();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EC520);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v9);
  id v14 = [self quaternarySystemFillColor];
  uint64_t v15 = sub_26C230();
  sub_5BDF8((uint64_t)v9, type metadata accessor for ColorConstants);
  LOBYTE(v9) = sub_26B760();
  uint64_t v16 = sub_4A98(&qword_2EC528);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, a1, v16);
  uint64_t v17 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v17 = v15;
  v17[8] = (char)v9;
  if (qword_2E9BE0 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_2EC2F0;
  uint64_t v19 = (char *)v6 + *(int *)(v4 + 20);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  *uint64_t v6 = v18;
  v6[1] = v18;
  uint64_t v22 = a2 + *(int *)(sub_4A98(&qword_2EC530) + 36);
  sub_5BCB4((uint64_t)v6, v22, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v22 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v13, a2, &qword_2EC520);
  sub_5BDF8((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_B6DC((uint64_t)v13, &qword_2EC520);
}

uint64_t sub_5AEA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_5AEC4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CardModifier(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v29 = (uint64_t)&v28 - v8;
  uint64_t v9 = type metadata accessor for ScrollingCardModifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = sub_4A98(&qword_2EC4B0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  sub_5BCB4(v28, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ScrollingCardModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + *(unsigned __int8 *)(v10 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v16, v15, v12);
  sub_5BC4C((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for ScrollingCardModifier);
  uint64_t v19 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_AFFF4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v30, 0.0, 1, INFINITY, 0, v19, v20, (uint64_t)sub_5BB60, v18);
  swift_release();
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v29;
  sub_5BC4C((uint64_t)v7, v29, type metadata accessor for CardModifier);
  uint64_t v22 = sub_4A98(&qword_2EC4B8);
  sub_5BCB4(v21, (uint64_t)a2 + *(int *)(v22 + 36), type metadata accessor for CardModifier);
  long long v23 = v30[5];
  a2[4] = v30[4];
  a2[5] = v23;
  long long v24 = v30[7];
  a2[6] = v30[6];
  a2[7] = v24;
  long long v25 = v30[1];
  *a2 = v30[0];
  a2[1] = v25;
  long long v26 = v30[3];
  a2[2] = v30[2];
  a2[3] = v26;
  return sub_5BDF8(v21, type metadata accessor for CardModifier);
}

uint64_t sub_5B244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = a3;
  uint64_t v20 = a4;
  uint64_t v19 = sub_26B360();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EC4C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2EC4C8);
  uint64_t v13 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B740();
  uint64_t v21 = a2;
  uint64_t v22 = v17;
  uint64_t v23 = a1;
  sub_4A98(&qword_2EC4D0);
  sub_5C2D4(&qword_2EC4D8, &qword_2EC4D0, (void (*)(void))sub_5BD28);
  sub_26A6A0();
  sub_26B350();
  LOBYTE(a1) = sub_26B740();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != a1) {
    sub_26B730();
  }
  sub_7C18(&qword_2EC510, &qword_2EC4C0);
  sub_26BEB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20, v15, v18);
}

uint64_t sub_5B558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v40[1] = a3;
  v40[0] = a2;
  uint64_t v41 = a4;
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EC508);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EC4F8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EC4E8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2EC4D0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_26B1C0();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v22 = &v10[*(int *)(sub_4A98(&qword_2EC518) + 44)];
  uint64_t v23 = sub_4A98(&qword_2EC4B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, a1, v23);
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v7);
  sub_5BDF8((uint64_t)v7, type metadata accessor for SizeConstants.Spacing);
  LOBYTE(v22) = sub_26B760();
  sub_26A640();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_B678((uint64_t)v10, (uint64_t)v14, &qword_2EC508);
  uint64_t v32 = &v14[*(int *)(v12 + 44)];
  *uint64_t v32 = (char)v22;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_B6DC((uint64_t)v10, &qword_2EC508);
  sub_26A940();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v14, (uint64_t)v18, &qword_2EC4F8);
  uint64_t v33 = &v18[*(int *)(v16 + 44)];
  long long v34 = v43;
  *(_OWORD *)uint64_t v33 = v42;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v44;
  sub_B6DC((uint64_t)v14, &qword_2EC4F8);
  sub_26A940();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26AC90();
  sub_B678((uint64_t)v18, (uint64_t)v21, &qword_2EC4E8);
  uint64_t v35 = &v21[*(int *)(v19 + 36)];
  long long v36 = v50;
  *((_OWORD *)v35 + 4) = v49;
  *((_OWORD *)v35 + 5) = v36;
  *((_OWORD *)v35 + 6) = v51;
  long long v37 = v46;
  *(_OWORD *)uint64_t v35 = v45;
  *((_OWORD *)v35 + 1) = v37;
  long long v38 = v48;
  *((_OWORD *)v35 + 2) = v47;
  *((_OWORD *)v35 + 3) = v38;
  sub_B6DC((uint64_t)v18, &qword_2EC4E8);
  return sub_19CC4((uint64_t)v21, v41, &qword_2EC4D0);
}

uint64_t sub_5B9C4()
{
  uint64_t v1 = sub_4A98(&qword_2EC4B0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for ScrollingCardModifier(0) - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v7 = v0 + v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_5BB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_4A98(&qword_2EC4B0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ScrollingCardModifier(0) - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_5B244(a1, v2 + v6, v9, a2);
}

uint64_t sub_5BC4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_5BCB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_5BD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_5B558(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_5BD28()
{
  return sub_5C2D4(&qword_2EC4E0, &qword_2EC4E8, (void (*)(void))sub_5BD58);
}

unint64_t sub_5BD58()
{
  unint64_t result = qword_2EC4F0;
  if (!qword_2EC4F0)
  {
    sub_7B0C(&qword_2EC4F8);
    sub_7C18(&qword_2EC500, &qword_2EC508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC4F0);
  }
  return result;
}

uint64_t sub_5BDF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_5BE58@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26AF40();
  *a1 = v3;
  return result;
}

uint64_t sub_5BE84@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26AF40();
  *a1 = v3;
  return result;
}

uint64_t sub_5BEB0()
{
  return sub_26AF50();
}

uint64_t sub_5BED8()
{
  return sub_26AF50();
}

uint64_t sub_5BF00()
{
  uint64_t v1 = type metadata accessor for BulletPointStack(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_4A98(&qword_2EB3D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26B4B0();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v3 + *(int *)(v1 + 20)), *(unsigned char *)(v3 + *(int *)(v1 + 20) + 8));
  uint64_t v6 = v3 + *(int *)(v1 + 24);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_5C10C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for BulletPointStack(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_59F50(a1, v4);
}

uint64_t sub_5C18C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for BulletPointStack.Bullet(uint64_t a1)
{
  return sub_2A148(a1, qword_2EC728);
}

uint64_t sub_5C1F4()
{
  return sub_5C2D4(&qword_2EC5E8, &qword_2EC5C0, (void (*)(void))sub_5C224);
}

unint64_t sub_5C224()
{
  unint64_t result = qword_2EC5F0;
  if (!qword_2EC5F0)
  {
    sub_7B0C(&qword_2EC5F8);
    sub_2D384();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC5F0);
  }
  return result;
}

uint64_t sub_5C2D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_5C350()
{
  unint64_t result = qword_2EC658;
  if (!qword_2EC658)
  {
    sub_7B0C(&qword_2EC660);
    sub_5C4AC(&qword_2EC668, &qword_2EC670, (unint64_t *)&qword_2EC678, &qword_2EC680);
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC658);
  }
  return result;
}

unint64_t sub_5C410()
{
  unint64_t result = qword_2EC6A8;
  if (!qword_2EC6A8)
  {
    sub_7B0C(&qword_2EC6A0);
    sub_5C4AC((unint64_t *)&qword_2EC6B0, &qword_2EC6B8, &qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC6A8);
  }
  return result;
}

uint64_t sub_5C4AC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_5C548()
{
  unint64_t result = qword_2EC6C0;
  if (!qword_2EC6C0)
  {
    sub_7B0C(&qword_2EC630);
    sub_5C2D4(&qword_2EC650, &qword_2EC638, (void (*)(void))sub_5C350);
    sub_7C18(&qword_2EC698, &qword_2EC620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC6C0);
  }
  return result;
}

uint64_t *sub_5C61C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_269840();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_5C72C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_269840();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_5C7B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_269840();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *sub_5C874(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_5C950(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_5C9D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_5CA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5CA94);
}

uint64_t sub_5CA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269840();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_5CB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5CB58);
}

uint64_t sub_5CB58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269840();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_5CC00()
{
  uint64_t result = sub_269840();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for BulletPointStackViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BulletPointStackViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BulletPointStackViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BulletPointStackViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BulletPointStackViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BulletPointStackViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BulletPointStackViewModel()
{
  return &type metadata for BulletPointStackViewModel;
}

unint64_t sub_5CEBC()
{
  unint64_t result = qword_2EC768;
  if (!qword_2EC768)
  {
    sub_7B0C(&qword_2EC4B8);
    sub_5CF68();
    sub_5C18C(&qword_2EC790, (void (*)(uint64_t))type metadata accessor for CardModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC768);
  }
  return result;
}

unint64_t sub_5CF68()
{
  unint64_t result = qword_2EC770;
  if (!qword_2EC770)
  {
    sub_7B0C(&qword_2EC778);
    sub_7C18(&qword_2EC780, &qword_2EC788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC770);
  }
  return result;
}

unint64_t sub_5D00C()
{
  unint64_t result = qword_2EC798;
  if (!qword_2EC798)
  {
    sub_7B0C(&qword_2EC530);
    sub_5D0AC();
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC798);
  }
  return result;
}

unint64_t sub_5D0AC()
{
  unint64_t result = qword_2EC7A0;
  if (!qword_2EC7A0)
  {
    sub_7B0C(&qword_2EC520);
    sub_7C18(&qword_2EC7A8, &qword_2EC528);
    sub_7C18(&qword_2EC7B0, &qword_2EC7B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC7A0);
  }
  return result;
}

unint64_t sub_5D174()
{
  unint64_t result = qword_2EC7C0;
  if (!qword_2EC7C0)
  {
    sub_7B0C(&qword_2EC558);
    sub_7B0C(&qword_2EC538);
    sub_7B0C(&qword_2EB030);
    sub_7C18(&qword_2EC550, &qword_2EC538);
    sub_7C18(&qword_2EB118, &qword_2EB030);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EC7C8, &qword_2EC7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC7C0);
  }
  return result;
}

uint64_t sub_5D2BC()
{
  return sub_5C18C(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

__n128 _CodeAnyIntentModel_OrNil.init(wrappedValue:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  if (*(void *)(a1 + 24))
  {
    sub_AD44((long long *)a1, a2);
  }
  else
  {
    __n128 result = *(__n128 *)a1;
    long long v3 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v3;
    *(void *)(a2 + 32) = *(void *)(a1 + 32);
  }
  return result;
}

__n128 _CodeAnyIntentModel_OrNil.wrappedValue.getter@<Q0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 24))
  {
    sub_C224(v1, a1);
  }
  else
  {
    __n128 result = *(__n128 *)v1;
    long long v3 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 16) = v3;
    *(void *)(a1 + 32) = *(void *)(v1 + 32);
  }
  return result;
}

__n128 _CodeAnyIntentModel_OrNil.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (!*(void *)(v1 + 24))
  {
    if (v3) {
      goto LABEL_3;
    }
LABEL_7:
    __n128 result = *(__n128 *)a1;
    long long v5 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
    *(_OWORD *)(v1 + 16) = v5;
    *(void *)(v1 + 32) = *(void *)(a1 + 32);
    return result;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v1);
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:

  sub_AD44((long long *)a1, v1);
  return result;
}

uint64_t _CodeAnyIntentModel_OrNil.description.getter()
{
  if (!*(void *)(v0 + 24))
  {
    long long v2 = *(_OWORD *)(v0 + 16);
    long long v4 = *(_OWORD *)v0;
    long long v5 = v2;
    uint64_t v6 = *(void *)(v0 + 32);
    if (*((void *)&v2 + 1)) {
      goto LABEL_3;
    }
    return 7104878;
  }
  sub_C224(v0, (uint64_t)&v4);
  if (!*((void *)&v5 + 1)) {
    return 7104878;
  }
LABEL_3:
  sub_AD44(&v4, (uint64_t)v7);
  *(void *)&long long v4 = 0;
  *((void *)&v4 + 1) = 0xE000000000000000;
  swift_getExtendedExistentialTypeMetadata();
  sub_26DD80();
  uint64_t v1 = v4;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v7);
  return v1;
}

double _CodeAnyIntentModel_OrNil.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)&v11);
  uint64_t v5 = type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  sub_26D990();
  if (v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    uint64_t v6 = type metadata accessor for _CodeAnyIntentModel_OrNil();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
    return result;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v13)
  {
    sub_C224((uint64_t)v12, (uint64_t)&v14);
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v5 - 8) + 8))(v12, v5);
  }
  else
  {
    uint64_t v8 = sub_26D980();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v8 - 8) + 8))(v12, v8);
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v16 = 0;
  }
  uint64_t v9 = *((void *)&v15 + 1);
  if (*(void *)(a2 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a2);
    if (v9)
    {
LABEL_8:
      sub_AD44(&v14, a2);
      return result;
    }
  }
  else if (*((void *)&v15 + 1))
  {
    goto LABEL_8;
  }
  double result = *(double *)&v14;
  long long v10 = v15;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 32) = v16;
  return result;
}

uint64_t type metadata accessor for _CodeAnyIntentModel_OrNil()
{
  return sub_129B4();
}

double _CodeAnyIntentModel_OrNil.init(_partiallyFrom:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)&v11);
  uint64_t v4 = type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  sub_26D970();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v10)
  {
    sub_C224((uint64_t)v9, (uint64_t)&v11);
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v4 - 8) + 8))(v9, v4);
  }
  else
  {
    uint64_t v5 = sub_26D980();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v5 - 8) + 8))(v9, v5);
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v13 = 0;
  }
  uint64_t v6 = *((void *)&v12 + 1);
  if (*(void *)(a2 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a2);
    if (v6)
    {
LABEL_6:
      sub_AD44(&v11, a2);
      return result;
    }
  }
  else if (*((void *)&v12 + 1))
  {
    goto LABEL_6;
  }
  double result = *(double *)&v11;
  long long v8 = v12;
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v8;
  *(void *)(a2 + 32) = v13;
  return result;
}

double sub_5D7F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return _CodeAnyIntentModel_OrNil.init(from:)(a1, a2);
}

double sub_5D810@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return _CodeAnyIntentModel_OrNil.init(_partiallyFrom:)(a1, a2);
}

uint64_t ToolbarIconView.init(kind:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (int *)type metadata accessor for ToolbarIconView();
  uint64_t v5 = (uint64_t *)((char *)a2 + v4[5]);
  uint64_t *v5 = swift_getKeyPath();
  sub_4A98(&qword_2EBC80);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a2 + v4[6];
  *(void *)uint64_t v6 = swift_getKeyPath();
  v6[8] = 0;
  uint64_t v7 = (uint64_t *)((char *)a2 + v4[7]);
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  long long v8 = (uint64_t *)((char *)a2 + v4[8]);
  uint64_t *v8 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (char *)a2 + v4[9];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = (char *)a2 + v4[10];
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  long long v11 = (char *)a2 + v4[11];
  *(void *)long long v11 = swift_getKeyPath();
  v11[8] = 0;
  long long v12 = (char *)a2 + v4[12];
  uint64_t result = swift_getKeyPath();
  *(void *)long long v12 = result;
  v12[8] = 0;
  *((unsigned char *)a2 + v4[13]) = v3;
  return result;
}

uint64_t ToolbarIconView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v35 = sub_26AB40();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2EC860);
  __chkstk_darwin(v34);
  uint64_t v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_4A98(&qword_2EC868);
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EC870);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  long long v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v6 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v6[1] = v13;
  uint64_t v14 = (uint64_t)v6 + *(int *)(sub_4A98(&qword_2EC878) + 44);
  uint64_t v32 = v1;
  sub_5DDA0(v1, v14);
  uint64_t v15 = type metadata accessor for ToolbarIconView();
  uint64_t v16 = v1 + *(int *)(v15 + 24);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_10E0C(*(void *)v16, v18);
  char v19 = sub_40900(v17, v18);
  sub_C374(v17, v18);
  uint64_t v20 = (unsigned int *)&enum case for DynamicTypeSize.large(_:);
  if ((v19 & 1) == 0) {
    uint64_t v20 = (unsigned int *)&enum case for DynamicTypeSize.medium(_:);
  }
  uint64_t v21 = v35;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *v20, v35);
  sub_7C18(&qword_2EC880, &qword_2EC860);
  uint64_t v22 = v33;
  sub_26BD80();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  sub_B6DC((uint64_t)v6, &qword_2EC860);
  uint64_t v23 = v32 + *(int *)(v15 + 36);
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_10E0C(*(void *)v23, v25);
  sub_4185C(v24, v25, v39);
  sub_C374(v24, v25);
  sub_10E0C(v24, v25);
  sub_4185C(v24, v25, v39);
  sub_C374(v24, v25);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v22, v37);
  uint64_t v28 = &v12[*(int *)(v10 + 44)];
  long long v29 = v39[1];
  *(_OWORD *)uint64_t v28 = v39[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v39[2];
  (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
  return sub_19CC4((uint64_t)v12, v38, &qword_2EC870);
}

uint64_t sub_5DDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26C700();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  __chkstk_darwin(v4);
  uint64_t v87 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EC968);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_4A98(&qword_2EC970);
  uint64_t v9 = __chkstk_darwin(v86);
  uint64_t v91 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v88 = (uint64_t)&v76 - v11;
  uint64_t v12 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v80 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26A6E0();
  uint64_t v93 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v79 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v83 = (uint64_t)&v76 - v20;
  uint64_t v21 = sub_26AC50();
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (_OWORD *)((char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_4A98(&qword_2EC978);
  __chkstk_darwin(v25);
  uint64_t v94 = (uint64_t)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_4A98(&qword_2EC980);
  uint64_t v27 = __chkstk_darwin(v81);
  uint64_t v85 = (uint64_t)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v82 = (char *)&v76 - v30;
  __chkstk_darwin(v29);
  uint64_t v84 = (uint64_t)&v76 - v31;
  uint64_t v32 = (char *)v24 + *(int *)(v22 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_26B160();
  uint64_t v35 = v33;
  uint64_t v36 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v35, v34);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v24 = _Q0;
  uint64_t v92 = type metadata accessor for ToolbarIconView();
  uint64_t v42 = a1 + *(int *)(v92 + 40);
  uint64_t v43 = *(void *)v42;
  LOBYTE(a1) = *(unsigned char *)(v42 + 8);
  sub_10E0C(*(void *)v42, a1);
  char v44 = sub_40900(v43, a1);
  sub_C374(v43, a1);
  if (v44)
  {
    uint64_t v45 = sub_5E620();
  }
  else
  {
    uint64_t v95 = sub_26C170();
    uint64_t v45 = sub_26A8E0();
  }
  uint64_t v46 = v45;
  uint64_t v47 = v94;
  sub_61848((uint64_t)v24, v94, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)(v47 + *(int *)(v25 + 52)) = v46;
  *(_WORD *)(v47 + *(int *)(v25 + 56)) = 256;
  sub_61738((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v48 = v36 + *(int *)(v92 + 44);
  uint64_t v49 = *(void *)v48;
  LOBYTE(v46) = *(unsigned char *)(v48 + 8);
  sub_10E0C(*(void *)v48, v46);
  char v50 = sub_40900(v49, v46);
  sub_C374(v49, v46);
  if (v50)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v16);
    uint64_t v51 = v80;
    sub_61848((uint64_t)v16, v80, type metadata accessor for ColorConstants.Environment);
    uint64_t v52 = v93;
    int v78 = *(void (**)(char *))(v93 + 104);
    char v53 = v79;
    unsigned int v76 = enum case for ColorScheme.dark(_:);
    v78(v79);
    sub_61674();
    int v77 = sub_26D360();
    uint64_t v54 = a2;
    uint64_t v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v53, v17);
    v55((char *)v51, v17);
    a2 = v54;
    sub_61738((uint64_t)v16, type metadata accessor for ColorConstants);
    uint64_t v56 = (uint64_t)v82;
    uint64_t v57 = v83;
    uint64_t v58 = v81;
    if (v77)
    {
      uint64_t v59 = enum case for ColorScheme.light(_:);
      uint64_t v60 = v83;
    }
    else
    {
      uint64_t v60 = v83;
      uint64_t v59 = v76;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v60, v59, v17);
  }
  else
  {
    uint64_t v57 = v83;
    sub_40FB4(v83);
    uint64_t v58 = v81;
    uint64_t v56 = (uint64_t)v82;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = (uint64_t *)(v56 + *(int *)(v58 + 36));
  uint64_t v63 = sub_4A98(&qword_2EAEE8);
  uint64_t v64 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))((char *)v62 + *(int *)(v63 + 28), v57, v17);
  *uint64_t v62 = KeyPath;
  uint64_t v65 = v94;
  sub_B678(v94, v56, &qword_2EC978);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v57, v17);
  sub_B6DC(v65, &qword_2EC978);
  uint64_t v66 = v84;
  sub_19CC4(v56, v84, &qword_2EC980);
  sub_5E914((uint64_t)v8);
  uint64_t v67 = v87;
  sub_41340(v87);
  uint64_t v68 = (uint64_t)v91;
  uint64_t v69 = v89;
  uint64_t v70 = (uint64_t)v8;
  uint64_t v71 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(&v91[*(int *)(v86 + 36)], v67, v90);
  sub_B678(v70, v68, &qword_2EC968);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v71);
  sub_B6DC(v70, &qword_2EC968);
  uint64_t v72 = v88;
  sub_19CC4(v68, v88, &qword_2EC970);
  uint64_t v73 = v85;
  sub_B678(v66, v85, &qword_2EC980);
  sub_B678(v72, v68, &qword_2EC970);
  sub_B678(v73, a2, &qword_2EC980);
  uint64_t v74 = sub_4A98(&qword_2EC988);
  sub_B678(v68, a2 + *(int *)(v74 + 48), &qword_2EC970);
  sub_B6DC(v72, &qword_2EC970);
  sub_B6DC(v66, &qword_2EC980);
  sub_B6DC(v68, &qword_2EC970);
  return sub_B6DC(v73, &qword_2EC980);
}

uint64_t sub_5E620()
{
  uint64_t v1 = sub_26A6E0();
  v20[0] = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26C5F0();
  __chkstk_darwin(v10);
  uint64_t v11 = v0 + *(int *)(type metadata accessor for ToolbarIconView() + 44);
  uint64_t v12 = *(void *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_10E0C(*(void *)v11, v13);
  char v14 = sub_40900(v12, v13);
  sub_C374(v12, v13);
  if (v14)
  {
    sub_26C5E0();
  }
  else
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v9);
    sub_61848((uint64_t)v9, (uint64_t)v6, type metadata accessor for ColorConstants.Environment);
    uint64_t v15 = v20[0];
    (*(void (**)(char *, void, uint64_t))(v20[0] + 104))(v3, enum case for ColorScheme.dark(_:), v1);
    sub_61674();
    char v16 = sub_26D360();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v15 + 8);
    v17(v3, v1);
    v17(v6, v1);
    sub_61738((uint64_t)v9, type metadata accessor for ColorConstants);
    if (v16) {
      _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      sub_26C150();
    }
    uint64_t v18 = sub_26C1C0();
    swift_release();
    v20[1] = v18;
  }
  return sub_26A8E0();
}

uint64_t sub_5E914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v45 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26B980();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SymbolImage();
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_4A98(&qword_2EC990);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2EC998);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for ToolbarIconView() + 52));
  uint64_t v23 = (uint64_t *)&v11[*(int *)(v8 + 28)];
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EBC90);
  swift_storeEnumTagMultiPayload();
  *uint64_t v11 = v22;
  sub_616D4((uint64_t)v11, (uint64_t)v13);
  uint64_t v24 = sub_5ED2C();
  sub_61848((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SymbolImage);
  *(void *)&v17[*(int *)(v15 + 44)] = v24;
  sub_61738((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SymbolImage);
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v6, enum case for Font.TextStyle.body(_:), v44);
  uint64_t v27 = sub_26B820();
  uint64_t v28 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v45, 1, 1, v27);
  sub_26B890();
  uint64_t v29 = sub_26B8E0();
  sub_B6DC(v28, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v17, (uint64_t)v21, &qword_2EC990);
  uint64_t v31 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  *uint64_t v31 = KeyPath;
  v31[1] = v29;
  sub_B6DC((uint64_t)v17, &qword_2EC990);
  sub_5EED4();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  LOBYTE(v29) = sub_26B760();
  uint64_t v40 = v46;
  sub_B678((uint64_t)v21, v46, &qword_2EC998);
  uint64_t v41 = v40 + *(int *)(sub_4A98(&qword_2EC968) + 36);
  *(unsigned char *)uint64_t v41 = v29;
  *(void *)(v41 + 8) = v33;
  *(void *)(v41 + 16) = v35;
  *(void *)(v41 + 24) = v37;
  *(void *)(v41 + 32) = v39;
  *(unsigned char *)(v41 + 40) = 0;
  return sub_B6DC((uint64_t)v21, &qword_2EC998);
}

uint64_t sub_5ED2C()
{
  uint64_t v1 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ToolbarIconView();
  uint64_t v5 = v0 + *(int *)(v4 + 48);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  sub_10E0C(*(void *)v5, v7);
  char v8 = sub_41888(v6, v7);
  sub_C374(v6, v7);
  uint64_t v9 = v0 + *(int *)(v4 + 44);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_10E0C(*(void *)v9, v11);
  char v12 = sub_40900(v10, v11);
  sub_C374(v10, v11);
  if (v8)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v3);
    uint64_t v13 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    if (v12)
    {
      uint64_t v14 = sub_26C1C0();
      swift_release();
      sub_61738((uint64_t)v3, type metadata accessor for ColorConstants);
      return v14;
    }
LABEL_6:
    sub_61738((uint64_t)v3, type metadata accessor for ColorConstants);
    return v13;
  }
  if (v12)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v3);
    uint64_t v13 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    goto LABEL_6;
  }

  return _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
}

void sub_5EED4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarIconView() + 52));
  switch(v1)
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v2 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v2)
      {
        switch((int)v1)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
            break;
          default:
            JUMPOUT(0);
        }
LABEL_5:
        NSString v3 = sub_26D3F0();
        swift_bridgeObjectRelease();
        id v4 = [self systemImageNamed:v3];

        if (v4)
        {
          [v4 alignmentRectInsets];
        }
      }
      return;
  }
}

uint64_t sub_5F1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_5F814();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_5F22C()
{
  sub_617F4();

  return sub_26B0B0();
}

uint64_t View.toolbarIconButton(size:)()
{
  return swift_release();
}

uint64_t type metadata accessor for ToolbarIconView()
{
  uint64_t result = qword_2EC8F0;
  if (!qword_2EC8F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5F338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26B0A0();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 16))(v6, a1);
  return sub_24E5B4(v6, a2);
}

uint64_t sub_5F408@<X0>(unsigned char *a1@<X8>)
{
  sub_617A0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_5F458()
{
  return sub_26B0C0();
}

uint64_t sub_5F4A4()
{
  return sub_26AE90();
}

uint64_t sub_5F4C8(uint64_t a1)
{
  uint64_t v2 = sub_26AB40();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26AEA0();
}

uint64_t sub_5F590@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AB10();
  *a1 = result & 1;
  return result;
}

uint64_t sub_5F5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_61848(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t sub_5F5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_61848(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t sub_5F620()
{
  return sub_26AE90();
}

uint64_t sub_5F648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AB10();
  *a1 = result & 1;
  return result;
}

uint64_t sub_5F680@<X0>(uint64_t a1@<X8>)
{
  return EnvironmentValues.defaultBlendModeConsideringVibrancy.getter(a1);
}

uint64_t sub_5F6A4@<X0>(uint64_t a1@<X8>)
{
  return EnvironmentValues.defaultBlendModeConsideringVibrancy.getter(a1);
}

uint64_t sub_5F6C8@<X0>(unsigned char *a1@<X8>)
{
  sub_617F4();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_5F718()
{
  return sub_26B0C0();
}

uint64_t sub_5F764@<X0>(unsigned char *a1@<X8>)
{
  sub_617A0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_5F7B4()
{
  return sub_26B0C0();
}

void sub_5F808(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_5F814()
{
  unint64_t result = qword_2EC888;
  if (!qword_2EC888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC888);
  }
  return result;
}

uint64_t sub_5F868()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for ToolbarIconView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    char v11 = (_WORD *)((char *)a2 + v9);
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v10 = *v11;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + *(int *)(v12 + 28)) = *(void *)((char *)v11 + *(int *)(v12 + 28));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = v19[8];
    sub_10E0C(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[8];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = v32[8];
    sub_10E0C(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    v31[8] = v34;
    uint64_t v35 = a3[10];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *(void *)v37;
    char v39 = v37[8];
    sub_10E0C(*(void *)v37, v39);
    *(void *)uint64_t v36 = v38;
    v36[8] = v39;
    uint64_t v40 = a3[11];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = *(void *)v42;
    char v44 = v42[8];
    sub_10E0C(*(void *)v42, v44);
    *(void *)uint64_t v41 = v43;
    v41[8] = v44;
    uint64_t v45 = a3[12];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = *(void *)v47;
    char v49 = v47[8];
    sub_10E0C(*(void *)v47, v49);
    *(void *)uint64_t v46 = v48;
    v46[8] = v49;
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  }
  return a1;
}

uint64_t destroy for ToolbarIconView(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v8 = a1 + a2[7];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_C374(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_C374(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);

  return sub_C374(v13, v14);
}

void *initializeWithCopy for ToolbarIconView(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (_WORD *)((char *)a1 + v7);
  uint64_t v9 = (_WORD *)((char *)a2 + v7);
  sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v8 = *v9;
    uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(void *)((char *)v8 + *(int *)(v10 + 28)) = *(void *)((char *)v9 + *(int *)(v10 + 28));
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_10E0C(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  uint64_t v20 = a3[7];
  char v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *char v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *uint64_t v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = v30[8];
  sub_10E0C(*(void *)v30, v32);
  *(void *)uint64_t v29 = v31;
  v29[8] = v32;
  uint64_t v33 = a3[10];
  char v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)v35;
  char v37 = v35[8];
  sub_10E0C(*(void *)v35, v37);
  *(void *)char v34 = v36;
  v34[8] = v37;
  uint64_t v38 = a3[11];
  char v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  char v42 = v40[8];
  sub_10E0C(*(void *)v40, v42);
  *(void *)char v39 = v41;
  v39[8] = v42;
  uint64_t v43 = a3[12];
  char v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)v45;
  char v47 = v45[8];
  sub_10E0C(*(void *)v45, v47);
  *(void *)char v44 = v46;
  v44[8] = v47;
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *assignWithCopy for ToolbarIconView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC80);
    sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)&v8[*(int *)(v10 + 28)] = *(void *)&v9[*(int *)(v10 + 28)];
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_10E0C(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = v16[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  sub_C374(v20, v21);
  if (a1 != a2)
  {
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_B6DC((uint64_t)a1 + v22, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[8];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    sub_B6DC((uint64_t)a1 + v26, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  char v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  char v34 = v32[8];
  sub_10E0C(*(void *)v32, v34);
  uint64_t v35 = *(void *)v31;
  char v36 = v31[8];
  *(void *)uint64_t v31 = v33;
  v31[8] = v34;
  sub_C374(v35, v36);
  uint64_t v37 = a3[10];
  uint64_t v38 = (char *)a1 + v37;
  char v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)v39;
  char v41 = v39[8];
  sub_10E0C(*(void *)v39, v41);
  uint64_t v42 = *(void *)v38;
  char v43 = v38[8];
  *(void *)uint64_t v38 = v40;
  v38[8] = v41;
  sub_C374(v42, v43);
  uint64_t v44 = a3[11];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)v46;
  char v48 = v46[8];
  sub_10E0C(*(void *)v46, v48);
  uint64_t v49 = *(void *)v45;
  char v50 = v45[8];
  *(void *)uint64_t v45 = v47;
  v45[8] = v48;
  sub_C374(v49, v50);
  uint64_t v51 = a3[12];
  uint64_t v52 = (char *)a1 + v51;
  char v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  char v55 = v53[8];
  sub_10E0C(*(void *)v53, v55);
  uint64_t v56 = *(void *)v52;
  char v57 = v52[8];
  *(void *)uint64_t v52 = v54;
  v52[8] = v55;
  sub_C374(v56, v57);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

char *initializeWithTake for ToolbarIconView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EBC80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v9 = *(_WORD *)v10;
    uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  char v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)char v19 = *(void *)v20;
  v19[8] = v20[8];
  char v21 = &a1[v18];
  uint64_t v22 = &a2[v18];
  uint64_t v23 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = a3[10];
  char v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  *(void *)char v32 = *(void *)v33;
  v32[8] = v33[8];
  char v34 = &a1[v31];
  uint64_t v35 = &a2[v31];
  *(void *)char v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[11];
  uint64_t v37 = a3[12];
  uint64_t v38 = &a1[v36];
  char v39 = &a2[v36];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = &a1[v37];
  char v41 = &a2[v37];
  v40[8] = v41[8];
  *(void *)uint64_t v40 = *(void *)v41;
  a1[a3[13]] = a2[a3[13]];
  return a1;
}

char *assignWithTake for ToolbarIconView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EBC80);
    uint64_t v11 = sub_4A98(&qword_2EBC80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v9 = *(_WORD *)v10;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  char v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_C374(v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[7];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_B6DC((uint64_t)&a1[v23], &qword_2EA970);
    uint64_t v26 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    sub_B6DC((uint64_t)&a1[v28], &qword_2EB3E8);
    uint64_t v31 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  uint64_t v33 = a3[9];
  char v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  LOBYTE(v35) = v35[8];
  uint64_t v37 = *(void *)v34;
  char v38 = v34[8];
  *(void *)char v34 = v36;
  v34[8] = (char)v35;
  sub_C374(v37, v38);
  uint64_t v39 = a3[10];
  uint64_t v40 = &a1[v39];
  char v41 = &a2[v39];
  uint64_t v42 = *(void *)v41;
  LOBYTE(v41) = v41[8];
  uint64_t v43 = *(void *)v40;
  char v44 = v40[8];
  *(void *)uint64_t v40 = v42;
  v40[8] = (char)v41;
  sub_C374(v43, v44);
  uint64_t v45 = a3[11];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = *(void *)v47;
  LOBYTE(v47) = v47[8];
  uint64_t v49 = *(void *)v46;
  char v50 = v46[8];
  *(void *)uint64_t v46 = v48;
  v46[8] = (char)v47;
  sub_C374(v49, v50);
  uint64_t v51 = a3[12];
  uint64_t v52 = &a1[v51];
  char v53 = &a2[v51];
  uint64_t v54 = *(void *)v53;
  LOBYTE(v53) = v53[8];
  uint64_t v55 = *(void *)v52;
  char v56 = v52[8];
  *(void *)uint64_t v52 = v54;
  v52[8] = (char)v53;
  sub_C374(v55, v56);
  a1[a3[13]] = a2[a3[13]];
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarIconView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_60E08);
}

uint64_t sub_60E08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EC890);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v16 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4A98(&qword_2EB3F8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for ToolbarIconView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_60FF4);
}

uint64_t sub_60FF4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EC890);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
    return result;
  }
  uint64_t v16 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4A98(&qword_2EB3F8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[8];

  return v18(v20, a2, a2, v19);
}

void sub_611D0()
{
  sub_61398(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_61398(319, (unint64_t *)&unk_2EC900, (void (*)(uint64_t))type metadata accessor for FontConstants.Navigation);
    if (v1 <= 0x3F)
    {
      sub_61398(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v2 <= 0x3F)
      {
        sub_61398(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_61398(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ToolbarIconView.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x614B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarIconView.Size()
{
  return &type metadata for ToolbarIconView.Size;
}

unint64_t sub_614F4()
{
  unint64_t result = qword_2EC950;
  if (!qword_2EC950)
  {
    sub_7B0C(&qword_2EC870);
    sub_7B0C(&qword_2EC860);
    sub_7C18(&qword_2EC880, &qword_2EC860);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC950);
  }
  return result;
}

uint64_t sub_615D0()
{
  return swift_getWitnessTable();
}

unint64_t sub_61674()
{
  unint64_t result = qword_2EBF18;
  if (!qword_2EBF18)
  {
    sub_26A6E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF18);
  }
  return result;
}

uint64_t sub_616D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_61738(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_617A0()
{
  unint64_t result = qword_2EC9A0;
  if (!qword_2EC9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC9A0);
  }
  return result;
}

unint64_t sub_617F4()
{
  unint64_t result = qword_2EC9A8;
  if (!qword_2EC9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC9A8);
  }
  return result;
}

uint64_t sub_61848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for ToolbarIconSizeKey()
{
  return &type metadata for ToolbarIconSizeKey;
}

uint64_t BookCoverEffect.init(shadowScale:cornerRadius:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  unsigned int v6 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for BookCoverEffect() + 24));
  *unsigned int v6 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a1 = a2;
  a1[1] = a3;
  return result;
}

uint64_t type metadata accessor for BookCoverEffect()
{
  uint64_t result = qword_2ECA58;
  if (!qword_2ECA58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BookCoverEffect.body(cover:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_4A98(&qword_2EC9B0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BookCoverEffect();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_657C8(v3, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_61CB4((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a2 = sub_61D18;
  a2[1] = v15;
  return result;
}

uint64_t sub_61B70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2ECAB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_26A940();
  double v10 = v9;
  double v12 = v11;
  uint64_t *v8 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v8[1] = v13;
  uint64_t v14 = sub_4A98(&qword_2ECAB8);
  sub_61D1C(a1, a2, (uint64_t)v8 + *(int *)(v14 + 44), v10, v12);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v8, a3, &qword_2ECAB0);
  uint64_t v15 = (_OWORD *)(a3 + *(int *)(sub_4A98(&qword_2ECAC0) + 36));
  long long v16 = v18[1];
  _OWORD *v15 = v18[0];
  v15[1] = v16;
  _OWORD v15[2] = v18[2];
  return sub_B6DC((uint64_t)v8, &qword_2ECAB0);
}

uint64_t sub_61CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BookCoverEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_61D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v40 = a3;
  uint64_t v9 = sub_26AC50();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  double v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_4A98(&qword_2ECAC8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2ECAD0);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v22 = (char *)&v39 - v21;
  uint64_t v23 = sub_4A98(&qword_2ECAD8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (uint64_t *)((char *)&v39 - v27);
  *uint64_t v28 = sub_26C630();
  v28[1] = v29;
  uint64_t v30 = sub_4A98(&qword_2ECAE0);
  sub_620A4(a1, a2, (uint64_t)v28 + *(int *)(v30 + 44), a4, a5);
  sub_62EBC(a2, a1, (uint64_t)v15, a4, a5);
  uint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = (char *)v12 + *(int *)(v10 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  void *v12 = v31;
  v12[1] = v31;
  uint64_t v35 = (uint64_t)&v20[*(int *)(v17 + 44)];
  sub_657C8((uint64_t)v12, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v15, (uint64_t)v20, &qword_2ECAC8);
  sub_65868((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v15, &qword_2ECAC8);
  sub_19CC4((uint64_t)v20, (uint64_t)v22, &qword_2ECAD0);
  sub_B678((uint64_t)v28, (uint64_t)v26, &qword_2ECAD8);
  sub_B678((uint64_t)v22, (uint64_t)v20, &qword_2ECAD0);
  uint64_t v36 = v40;
  sub_B678((uint64_t)v26, v40, &qword_2ECAD8);
  uint64_t v37 = sub_4A98(&qword_2ECAE8);
  sub_B678((uint64_t)v20, v36 + *(int *)(v37 + 48), &qword_2ECAD0);
  sub_B6DC((uint64_t)v22, &qword_2ECAD0);
  sub_B6DC((uint64_t)v28, &qword_2ECAD8);
  sub_B6DC((uint64_t)v20, &qword_2ECAD0);
  return sub_B6DC((uint64_t)v26, &qword_2ECAD8);
}

uint64_t sub_620A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v114 = a2;
  uint64_t v126 = a3;
  uint64_t v8 = sub_26C700();
  uint64_t v124 = *(void *)(v8 - 8);
  uint64_t v125 = v8;
  __chkstk_darwin(v8);
  long long v123 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_4A98(&qword_2ECB38) - 8;
  __chkstk_darwin(v111);
  uint64_t v108 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_4A98(&qword_2ECB50) - 8;
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_4A98(&qword_2ECB58) - 8;
  __chkstk_darwin(v121);
  uint64_t v116 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2ECB60) - 8;
  __chkstk_darwin(v119);
  uint64_t v115 = (uint64_t)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_4A98(&qword_2ECB68) - 8;
  __chkstk_darwin(v118);
  uint64_t v113 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2ECB70) - 8;
  uint64_t v15 = __chkstk_darwin(v117);
  uint64_t v122 = (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v112 = (char *)&v87 - v18;
  __chkstk_darwin(v17);
  uint64_t v120 = (uint64_t)&v87 - v19;
  uint64_t v106 = sub_26A6E0();
  uint64_t v105 = *(void *)(v106 - 8);
  uint64_t v20 = __chkstk_darwin(v106);
  int v104 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v103 = (uint64_t)&v87 - v22;
  uint64_t v23 = sub_26AC50();
  uint64_t v24 = v23 - 8;
  uint64_t v102 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2ECB78);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2ECB80);
  uint64_t v32 = v31 - 8;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2ECB88);
  uint64_t v36 = v35 - 8;
  __chkstk_darwin(v35);
  char v38 = (char *)&v87 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2ECB90) - 8;
  __chkstk_darwin(v95);
  uint64_t v93 = (uint64_t)&v87 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2ECB98) - 8;
  uint64_t v40 = __chkstk_darwin(v94);
  uint64_t v107 = (uint64_t)&v87 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v92 = (uint64_t)&v87 - v43;
  __chkstk_darwin(v42);
  uint64_t v127 = (uint64_t)&v87 - v44;
  uint64_t v45 = *(void *)(a1 + 8);
  uint64_t v46 = &v26[*(int *)(v24 + 28)];
  uint64_t v47 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v99 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v98 = sub_26B160();
  uint64_t v48 = *(void *)(v98 - 8);
  uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  uint64_t v100 = v48 + 104;
  v97(v46, v47, v98);
  *(void *)uint64_t v26 = v45;
  *((void *)v26 + 1) = v45;
  uint64_t v49 = sub_26C150();
  uint64_t v96 = &type metadata accessor for RoundedRectangle;
  sub_657C8((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v30[*(int *)(v28 + 60)] = v49;
  *(_WORD *)&v30[*(int *)(v28 + 64)] = 256;
  long long v101 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  double v50 = *(double *)a1;
  uint64_t v88 = a1;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v30, (uint64_t)v34, &qword_2ECB78);
  uint64_t v51 = &v34[*(int *)(v32 + 44)];
  long long v52 = v129;
  *(_OWORD *)uint64_t v51 = v128;
  *((_OWORD *)v51 + 1) = v52;
  *((_OWORD *)v51 + 2) = v130;
  sub_B6DC((uint64_t)v30, &qword_2ECB78);
  sub_B678((uint64_t)v34, (uint64_t)v38, &qword_2ECB80);
  char v53 = &v38[*(int *)(v36 + 44)];
  *(void *)char v53 = 0;
  *((double *)v53 + 1) = (1.0 - v50) * a5 * -0.25;
  sub_B6DC((uint64_t)v34, &qword_2ECB80);
  uint64_t v91 = a1 + *(int *)(type metadata accessor for BookCoverEffect() + 24);
  uint64_t v54 = v103;
  sub_40FB4(v103);
  unsigned int v90 = enum case for ColorScheme.dark(_:);
  uint64_t v55 = v105;
  uint64_t v89 = *(void (**)(char *))(v105 + 104);
  char v56 = v104;
  uint64_t v57 = v106;
  v89(v104);
  uint64_t v58 = v54;
  LOBYTE(v54) = sub_26A6D0();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
  v59(v56, v57);
  v59((char *)v58, v57);
  if (v54) {
    double v60 = 0.9;
  }
  else {
    double v60 = 0.75;
  }
  uint64_t v61 = v93;
  sub_B678((uint64_t)v38, v93, &qword_2ECB88);
  *(double *)(v61 + *(int *)(v95 + 44)) = v60;
  sub_B6DC((uint64_t)v38, &qword_2ECB88);
  uint64_t v62 = v92;
  sub_B678(v61, v92, &qword_2ECB90);
  uint64_t v63 = v62 + *(int *)(v94 + 44);
  *(double *)uint64_t v63 = a4 * 0.1;
  *(unsigned char *)(v63 + 8) = 0;
  sub_B6DC(v61, &qword_2ECB90);
  sub_19CC4(v62, v127, &qword_2ECB98);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v64 = sub_4A98(&qword_2EC9B0);
  uint64_t v65 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v108, v114, v64);
  uint64_t v66 = (_OWORD *)(v65 + *(int *)(v111 + 44));
  long long v67 = v132;
  *uint64_t v66 = v131;
  v66[1] = v67;
  v66[2] = v133;
  uint64_t v68 = *(void *)(v88 + 8);
  v97(&v26[*(int *)(v102 + 28)], v99, v98);
  *(void *)uint64_t v26 = v68;
  *((void *)v26 + 1) = v68;
  uint64_t v69 = (uint64_t)v109;
  uint64_t v70 = (uint64_t)&v109[*(int *)(v110 + 44)];
  sub_657C8((uint64_t)v26, v70, (uint64_t (*)(void))v96);
  *(_WORD *)(v70 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678(v65, v69, &qword_2ECB38);
  sub_65868((uint64_t)v26, (uint64_t (*)(void))v101);
  sub_B6DC(v65, &qword_2ECB38);
  sub_40FB4(v58);
  ((void (*)(char *, void, uint64_t))v89)(v56, v90, v57);
  LOBYTE(v70) = sub_26A6D0();
  v59(v56, v57);
  v59((char *)v58, v57);
  if (v70) {
    double v71 = 0.15;
  }
  else {
    double v71 = 0.5;
  }
  uint64_t v72 = v116;
  sub_B678(v69, v116, &qword_2ECB50);
  *(double *)(v72 + *(int *)(v121 + 44)) = v71;
  sub_B6DC(v69, &qword_2ECB50);
  uint64_t v73 = v115;
  sub_B678(v72, v115, &qword_2ECB58);
  uint64_t v74 = v73 + *(int *)(v119 + 44);
  *(double *)uint64_t v74 = a4 * 0.1;
  *(unsigned char *)(v74 + 8) = 0;
  sub_B6DC(v72, &qword_2ECB58);
  uint64_t v75 = v113;
  sub_B678(v73, v113, &qword_2ECB60);
  *(void *)(v75 + *(int *)(v118 + 44)) = 0x3FF199999999999ALL;
  sub_B6DC(v73, &qword_2ECB60);
  int v77 = v123;
  uint64_t v76 = v124;
  uint64_t v78 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, enum case for BlendMode.color(_:), v125);
  uint64_t v79 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(&v112[*(int *)(v117 + 44)], v77, v78);
  sub_B678(v75, v79, &qword_2ECB68);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  sub_B6DC(v75, &qword_2ECB68);
  uint64_t v80 = v120;
  sub_19CC4(v79, v120, &qword_2ECB70);
  uint64_t v81 = v127;
  uint64_t v82 = v107;
  sub_B678(v127, v107, &qword_2ECB98);
  uint64_t v83 = v122;
  sub_B678(v80, v122, &qword_2ECB70);
  uint64_t v84 = v126;
  sub_B678(v82, v126, &qword_2ECB98);
  uint64_t v85 = sub_4A98(qword_2ECBA0);
  sub_B678(v83, v84 + *(int *)(v85 + 48), &qword_2ECB70);
  sub_B6DC(v80, &qword_2ECB70);
  sub_B6DC(v81, &qword_2ECB98);
  sub_B6DC(v83, &qword_2ECB70);
  return sub_B6DC(v82, &qword_2ECB98);
}

uint64_t AudiobookCoverEffect.shape.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = (char *)a1 + *(int *)(sub_26AC50() + 20);
  uint64_t v5 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v6 = sub_26B160();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  *a1 = v3;
  a1[1] = v3;
  return result;
}

uint64_t sub_62E84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_62EA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_62EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v251 = a2;
  double v209 = a4;
  uint64_t v234 = a3;
  uint64_t v7 = sub_26A6E0();
  uint64_t v226 = *(void *)(v7 - 8);
  uint64_t v227 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  v225 = (char *)&v195 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v223 = (uint64_t)&v195 - v10;
  uint64_t v256 = sub_26A7A0();
  uint64_t v269 = *(void *)(v256 - 8);
  __chkstk_darwin(v256);
  v255 = (char *)&v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = sub_4A98(&qword_2ECAF0) - 8;
  uint64_t v12 = __chkstk_darwin(v262);
  v233 = (uint64_t *)((char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  long long v218 = (uint64_t *)((char *)&v195 - v14);
  uint64_t v222 = sub_4A98(&qword_2ECAF8) - 8;
  uint64_t v15 = __chkstk_darwin(v222);
  uint64_t v232 = (uint64_t)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v220 = (uint64_t)&v195 - v17;
  uint64_t v221 = sub_4A98(&qword_2ECB00) - 8;
  uint64_t v18 = __chkstk_darwin(v221);
  v231 = (char *)&v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v219 = (char *)&v195 - v20;
  uint64_t v257 = sub_26AC50() - 8;
  __chkstk_darwin(v257);
  long long v215 = (char *)&v195 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_4A98(&qword_2ECB08) - 8;
  uint64_t v22 = __chkstk_darwin(v258);
  uint64_t v224 = (uint64_t)&v195 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v250 = (uint64_t)&v195 - v24;
  uint64_t v252 = sub_4A98(&qword_2ECB10) - 8;
  uint64_t v25 = __chkstk_darwin(v252);
  unsigned __int8 v229 = (char *)&v195 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  long long v217 = (char *)&v195 - v27;
  uint64_t v253 = sub_4A98(&qword_2ECB18) - 8;
  uint64_t v28 = __chkstk_darwin(v253);
  uint64_t v230 = (uint64_t)&v195 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v228 = (uint64_t)&v195 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v260 = (uint64_t)&v195 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v216 = (uint64_t)&v195 - v35;
  __chkstk_darwin(v34);
  uint64_t v261 = (uint64_t)&v195 - v36;
  double v210 = (uint64_t (**)(void))(sub_4A98(&qword_2ECB20) - 8);
  uint64_t v37 = __chkstk_darwin(v210);
  uint64_t v239 = (uint64_t)&v195 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v270 = (uint64_t)&v195 - v39;
  uint64_t v40 = sub_26AC80();
  __chkstk_darwin(v40 - 8);
  v237 = (char *)&v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = sub_26C700();
  uint64_t v266 = *(void *)(v267 - 8);
  __chkstk_darwin(v267);
  v236 = (char *)&v195 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = (uint64_t (**)(void))(sub_4A98(&qword_2ECB28) - 8);
  __chkstk_darwin(v203);
  uint64_t v202 = (void (*)(char *, uint64_t))((char *)&v195 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v204 = (uint64_t (**)(void))(sub_4A98(&qword_2ECB30) - 8);
  uint64_t v44 = __chkstk_darwin(v204);
  uint64_t v238 = (uint64_t)&v195 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v268 = (uint64_t)&v195 - v46;
  uint64_t v47 = sub_4A98(&qword_2ECB38);
  uint64_t v48 = v47 - 8;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v254 = (uint64_t)&v195 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  long long v52 = (char *)&v195 - v51;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v53 = sub_4A98(&qword_2EC9B0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
  v259 = v52;
  v54(v52, a1, v53);
  uint64_t v55 = &v52[*(int *)(v48 + 44)];
  long long v56 = v298;
  *(_OWORD *)uint64_t v55 = v297;
  *((_OWORD *)v55 + 1) = v56;
  *((_OWORD *)v55 + 2) = v299;
  uint64_t v57 = sub_4A98(&qword_2ECB40);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_272950;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 32) = sub_26C560();
  *(void *)(v58 + 40) = v59;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 48) = sub_26C560();
  *(void *)(v58 + 56) = v60;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 64) = sub_26C560();
  *(void *)(v58 + 72) = v61;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 80) = sub_26C560();
  *(void *)(v58 + 88) = v62;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 96) = sub_26C560();
  *(void *)(v58 + 104) = v63;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 112) = sub_26C560();
  *(void *)(v58 + 120) = v64;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 128) = sub_26C560();
  *(void *)(v58 + 136) = v65;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 144) = sub_26C560();
  *(void *)(v58 + 152) = v66;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 160) = sub_26C560();
  *(void *)(v58 + 168) = v67;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v58 + 176) = sub_26C560();
  *(void *)(v58 + 184) = v68;
  sub_26C7F0();
  sub_26C800();
  sub_26C570();
  sub_26AA80();
  uint64_t v240 = v300;
  uint64_t v213 = v302;
  uint64_t v214 = v301;
  uint64_t v211 = v304;
  uint64_t v212 = v303;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  double v263 = a5;
  sub_26A8D0();
  unsigned __int8 v69 = v306;
  int v241 = v306;
  uint64_t v244 = v305;
  uint64_t v245 = v307;
  LOBYTE(v52) = v308;
  int v242 = v308;
  uint64_t v248 = v310;
  uint64_t v249 = v309;
  uint64_t v70 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v246 = v71;
  uint64_t v247 = v70;
  uint64_t v72 = swift_allocObject();
  long long v235 = xmmword_270BF0;
  *(_OWORD *)(v72 + 16) = xmmword_270BF0;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v72 + 32) = sub_26C560();
  *(void *)(v72 + 40) = v73;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v72 + 48) = sub_26C560();
  *(void *)(v72 + 56) = v74;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  uint64_t v243 = v311;
  uint64_t v207 = v313;
  uint64_t v208 = v312;
  uint64_t v205 = v315;
  uint64_t v206 = v314;
  unsigned __int8 v345 = v69;
  char v343 = (char)v52;
  v347[0] = *(_DWORD *)v344;
  *(_DWORD *)((char *)v347 + 3) = *(_DWORD *)&v344[3];
  v346[0] = *(_DWORD *)v342;
  *(_DWORD *)((char *)v346 + 3) = *(_DWORD *)&v342[3];
  uint64_t v198 = v57;
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_272960;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 32) = sub_26C560();
  *(void *)(v75 + 40) = v76;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  uint64_t v201 = 0x3F847AE147AE147BLL;
  *(void *)(v75 + 48) = sub_26C560();
  *(void *)(v75 + 56) = v77;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 64) = sub_26C560();
  *(void *)(v75 + 72) = v78;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 80) = sub_26C560();
  *(void *)(v75 + 88) = v79;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 96) = sub_26C560();
  *(void *)(v75 + 104) = v80;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 112) = sub_26C560();
  *(void *)(v75 + 120) = v81;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 128) = sub_26C560();
  *(void *)(v75 + 136) = v82;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 144) = sub_26C560();
  *(void *)(v75 + 152) = v83;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 160) = sub_26C560();
  *(void *)(v75 + 168) = v84;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 176) = sub_26C560();
  *(void *)(v75 + 184) = v85;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v75 + 192) = sub_26C560();
  *(void *)(v75 + 200) = v86;
  sub_26C7F0();
  sub_26C800();
  sub_26C570();
  sub_26AA80();
  v265 = v316;
  uint64_t v87 = v317;
  uint64_t v88 = v318;
  uint64_t v89 = v319;
  uint64_t v90 = v320;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v91 = v321;
  char v92 = v322;
  uint64_t v93 = v323;
  LOBYTE(v57) = v324;
  uint64_t v264 = v325;
  uint64_t v200 = v326;
  uint64_t v94 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v96 = v95;
  uint64_t v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = v235;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v97 + 32) = sub_26C560();
  *(void *)(v97 + 40) = v98;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v97 + 48) = sub_26C560();
  *(void *)(v97 + 56) = v99;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  *(void *)&long long v348 = v265;
  *((void *)&v348 + 1) = v87;
  *(void *)&long long v349 = v88;
  *((void *)&v349 + 1) = v89;
  *(void *)&long long v350 = v90;
  *((void *)&v350 + 1) = v91;
  LOBYTE(v351) = v92;
  *((void *)&v351 + 1) = v93;
  LOBYTE(v352) = v57;
  *((void *)&v352 + 1) = v264;
  *(void *)&long long v353 = v200;
  *((void *)&v353 + 1) = 0x3FD0000000000000;
  *(void *)&long long v354 = v94;
  *((void *)&v354 + 1) = v96;
  *(void *)&v355[0] = v327;
  *(_OWORD *)((char *)v355 + 8) = v328;
  *(_OWORD *)((char *)&v355[1] + 8) = v329;
  uint64_t v100 = v266;
  long long v101 = *(void (**)(char *, void, uint64_t))(v266 + 104);
  uint64_t v264 = v266 + 104;
  v265 = v101;
  uint64_t v102 = v236;
  uint64_t v103 = v267;
  v101(v236, enum case for BlendMode.plusDarker(_:), v267);
  int v104 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  uint64_t v199 = v100 + 16;
  uint64_t v200 = v104;
  uint64_t v105 = (uint64_t)v237;
  v104(v237, v102, v103);
  uint64_t v106 = (uint64_t)v202;
  uint64_t v107 = (uint64_t)v202 + *((int *)v203 + 11);
  uint64_t v203 = &type metadata accessor for _BlendModeEffect;
  sub_657C8(v105, v107, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  long long v108 = v355[0];
  *(_OWORD *)(v106 + 96) = v354;
  *(_OWORD *)(v106 + 112) = v108;
  *(_OWORD *)(v106 + 128) = v355[1];
  *(void *)(v106 + 144) = *(void *)&v355[2];
  long long v109 = v351;
  *(_OWORD *)(v106 + 32) = v350;
  *(_OWORD *)(v106 + 48) = v109;
  long long v110 = v353;
  *(_OWORD *)(v106 + 64) = v352;
  *(_OWORD *)(v106 + 80) = v110;
  long long v111 = v349;
  *(_OWORD *)uint64_t v106 = v348;
  *(_OWORD *)(v106 + 16) = v111;
  sub_65830((uint64_t)&v348);
  uint64_t v197 = &type metadata accessor for _BlendModeEffect;
  sub_65868(v105, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v112 = *(void (**)(char *, uint64_t))(v100 + 8);
  uint64_t v266 = v100 + 8;
  uint64_t v196 = v112;
  v112(v102, v103);
  sub_658C8((uint64_t)&v348);
  uint64_t v113 = v238;
  sub_B678(v106, v238, &qword_2ECB28);
  *(unsigned char *)(v113 + *((int *)v204 + 11)) = 1;
  sub_B6DC(v106, &qword_2ECB28);
  sub_19CC4(v113, v268, &qword_2ECB30);
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = v235;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v114 + 32) = sub_26C560();
  *(void *)(v114 + 40) = v115;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v114 + 48) = sub_26C560();
  *(void *)(v114 + 56) = v116;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  *(void *)&long long v235 = v330[0];
  uint64_t v117 = v330[1];
  uint64_t v118 = v330[2];
  uint64_t v119 = v330[3];
  uint64_t v120 = v330[4];
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v121 = v330[5];
  LOBYTE(v105) = v331;
  uint64_t v122 = v332;
  char v123 = v333;
  uint64_t v124 = v334;
  uint64_t v125 = v335;
  v265(v102, enum case for BlendMode.softLight(_:), v103);
  uint64_t v126 = (uint64_t)v237;
  uint64_t v127 = v102;
  uint64_t v128 = v103;
  v200(v237, v127, v103);
  uint64_t v129 = v239;
  sub_657C8(v126, v239 + *((int *)v210 + 11), (uint64_t (*)(void))v203);
  *(void *)uint64_t v129 = v235;
  *(void *)(v129 + 8) = v117;
  *(void *)(v129 + 16) = v118;
  *(void *)(v129 + 24) = v119;
  *(void *)(v129 + 32) = v120;
  *(void *)(v129 + 40) = v121;
  *(unsigned char *)(v129 + 48) = v105;
  *(void *)(v129 + 56) = v122;
  *(unsigned char *)(v129 + 64) = v123;
  *(void *)(v129 + 72) = v124;
  *(void *)(v129 + 80) = v125;
  *(void *)(v129 + 88) = 0x3FD999999999999ALL;
  swift_bridgeObjectRetain();
  sub_65868(v126, (uint64_t (*)(void))v197);
  v196(v236, v128);
  sub_65900((uint64_t)v330);
  sub_19CC4(v129, v270, &qword_2ECB20);
  uint64_t v130 = *(void *)(v251 + 8);
  long long v131 = v215;
  long long v132 = &v215[*(int *)(v257 + 28)];
  uint64_t v133 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v237) = enum case for RoundedCornerStyle.continuous(_:);
  v236 = (char *)sub_26B160();
  uint64_t v134 = *((void *)v236 - 1);
  *(void *)&long long v235 = *(void *)(v134 + 104);
  uint64_t v266 = v134 + 104;
  ((void (*)(char *, uint64_t, char *))v235)(v132, v133, v236);
  void *v131 = v130;
  v131[1] = v130;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  double v210 = &type metadata accessor for RoundedRectangle;
  uint64_t v135 = v250;
  sub_657C8((uint64_t)v131, v250, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v136 = (_OWORD *)(v135 + *(int *)(v258 + 44));
  long long v137 = v337;
  *uint64_t v136 = v336;
  v136[1] = v137;
  v136[2] = v338;
  uint64_t v204 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v131, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v138 = sub_26C150();
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  uint64_t v139 = v255;
  sub_26A790();
  swift_release();
  uint64_t v140 = v218;
  uint64_t v141 = (char *)v218 + *(int *)(v262 + 44);
  uint64_t v142 = v269;
  uint64_t v203 = *(uint64_t (***)(void))(v269 + 16);
  uint64_t v143 = v256;
  ((void (*)(char *, char *, uint64_t))v203)(v141, v139, v256);
  *uint64_t v140 = v138;
  uint64_t v144 = *(void (**)(char *, uint64_t))(v142 + 8);
  uint64_t v269 = v142 + 8;
  uint64_t v202 = v144;
  v144(v139, v143);
  type metadata accessor for BookCoverEffect();
  uint64_t v145 = v223;
  sub_40FB4(v223);
  uint64_t v147 = v225;
  uint64_t v146 = v226;
  uint64_t v148 = v227;
  (*(void (**)(char *, void, uint64_t))(v226 + 104))(v225, enum case for ColorScheme.dark(_:), v227);
  LOBYTE(v138) = sub_26A6D0();
  uint64_t v149 = *(void (**)(char *, uint64_t))(v146 + 8);
  v149(v147, v148);
  v149((char *)v145, v148);
  uint64_t v150 = v220;
  sub_B678((uint64_t)v140, v220, &qword_2ECAF0);
  float v151 = 0.15;
  if ((v138 & 1) == 0) {
    float v151 = 0.5;
  }
  uint64_t v152 = v222;
  *(float *)(v150 + *(int *)(v222 + 44)) = v151;
  sub_B6DC((uint64_t)v140, &qword_2ECAF0);
  uint64_t v153 = v221;
  uint64_t v154 = (uint64_t)v219;
  v265(&v219[*(int *)(v221 + 44)], enum case for BlendMode.screen(_:), v267);
  sub_19CC4(v150, v154, &qword_2ECAF8);
  uint64_t v155 = (uint64_t)v217;
  sub_B678(v154, (uint64_t)&v217[*(int *)(v252 + 44)], &qword_2ECB00);
  uint64_t v156 = v250;
  sub_B678(v250, v155, &qword_2ECB08);
  sub_B6DC(v154, &qword_2ECB00);
  sub_B6DC(v156, &qword_2ECB08);
  uint64_t v157 = v216;
  sub_B678(v155, v216, &qword_2ECB10);
  *(unsigned char *)(v157 + *(int *)(v253 + 44)) = 1;
  sub_B6DC(v155, &qword_2ECB10);
  sub_19CC4(v157, v261, &qword_2ECB18);
  uint64_t v158 = *(void *)(v251 + 8);
  ((void (*)(char *, void, char *))v235)((char *)v131 + *(int *)(v257 + 28), v237, v236);
  void *v131 = v158;
  v131[1] = v158;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v159 = v224;
  sub_657C8((uint64_t)v131, v224, (uint64_t (*)(void))v210);
  uint64_t v160 = (_OWORD *)(v159 + *(int *)(v258 + 44));
  long long v161 = v340;
  *uint64_t v160 = v339;
  v160[1] = v161;
  v160[2] = v341;
  sub_65868((uint64_t)v131, (uint64_t (*)(void))v204);
  uint64_t v162 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C150();
  sub_26C1C0();
  swift_release();
  uint64_t v163 = v255;
  sub_26A790();
  swift_release();
  uint64_t v164 = v233;
  uint64_t v165 = v256;
  ((void (*)(char *, char *, uint64_t))v203)((char *)v233 + *(int *)(v262 + 44), v163, v256);
  uint64_t *v164 = v162;
  v202(v163, v165);
  uint64_t v166 = v232;
  sub_B678((uint64_t)v164, v232, &qword_2ECAF0);
  *(_DWORD *)(v166 + *(int *)(v152 + 44)) = 1048576000;
  sub_B6DC((uint64_t)v164, &qword_2ECAF0);
  uint64_t v167 = (uint64_t)v231;
  v265(&v231[*(int *)(v153 + 44)], enum case for BlendMode.darken(_:), v267);
  sub_19CC4(v166, v167, &qword_2ECAF8);
  uint64_t v168 = (uint64_t)v229;
  sub_B678(v167, (uint64_t)&v229[*(int *)(v252 + 44)], &qword_2ECB00);
  sub_B678(v159, v168, &qword_2ECB08);
  sub_B6DC(v167, &qword_2ECB00);
  sub_B6DC(v159, &qword_2ECB08);
  uint64_t v169 = v228;
  sub_B678(v168, v228, &qword_2ECB10);
  *(unsigned char *)(v169 + *(int *)(v253 + 44)) = 1;
  sub_B6DC(v168, &qword_2ECB10);
  uint64_t v170 = v260;
  sub_19CC4(v169, v260, &qword_2ECB18);
  uint64_t v171 = v254;
  sub_B678((uint64_t)v259, v254, &qword_2ECB38);
  uint64_t v172 = v238;
  sub_B678(v268, v238, &qword_2ECB30);
  uint64_t v173 = v239;
  sub_B678(v270, v239, &qword_2ECB20);
  uint64_t v174 = v261;
  sub_B678(v261, v169, &qword_2ECB18);
  uint64_t v175 = v170;
  uint64_t v176 = v230;
  sub_B678(v175, v230, &qword_2ECB18);
  uint64_t v177 = v171;
  uint64_t v178 = v234;
  sub_B678(v177, v234, &qword_2ECB38);
  long long v179 = (int *)sub_4A98(&qword_2ECB48);
  uint64_t v180 = v178 + v179[12];
  *(void *)&long long v271 = v240;
  uint64_t v182 = v213;
  uint64_t v181 = v214;
  *((void *)&v271 + 1) = v214;
  *(void *)&long long v272 = v213;
  uint64_t v184 = v211;
  uint64_t v183 = v212;
  *((void *)&v272 + 1) = v212;
  *(void *)&long long v273 = v211;
  *((void *)&v273 + 1) = v244;
  LOBYTE(v274) = v241;
  *(_DWORD *)((char *)&v274 + 1) = v347[0];
  DWORD1(v274) = *(_DWORD *)((char *)v347 + 3);
  *((void *)&v274 + 1) = v245;
  LOBYTE(v275) = v242;
  *(_DWORD *)((char *)&v275 + 1) = v346[0];
  DWORD1(v275) = *(_DWORD *)((char *)v346 + 3);
  *((void *)&v275 + 1) = v249;
  *(void *)&long long v276 = v248;
  *((void *)&v276 + 1) = v247;
  *(void *)&long long v277 = v246;
  *((void *)&v277 + 1) = v243;
  uint64_t v186 = v207;
  uint64_t v185 = v208;
  *(void *)&long long v278 = v208;
  *((void *)&v278 + 1) = v207;
  uint64_t v188 = v205;
  uint64_t v187 = v206;
  *(void *)&long long v279 = v206;
  *((void *)&v279 + 1) = v205;
  char v280 = 1;
  *(unsigned char *)(v180 + 144) = 1;
  long long v189 = v272;
  *(_OWORD *)uint64_t v180 = v271;
  *(_OWORD *)(v180 + 16) = v189;
  long long v190 = v278;
  *(_OWORD *)(v180 + 96) = v277;
  *(_OWORD *)(v180 + 112) = v190;
  *(_OWORD *)(v180 + 128) = v279;
  long long v191 = v273;
  long long v192 = v274;
  long long v193 = v276;
  *(_OWORD *)(v180 + 64) = v275;
  *(_OWORD *)(v180 + 80) = v193;
  *(_OWORD *)(v180 + 32) = v191;
  *(_OWORD *)(v180 + 48) = v192;
  sub_B678(v172, v178 + v179[16], &qword_2ECB30);
  sub_B678(v173, v178 + v179[20], &qword_2ECB20);
  sub_B678(v169, v178 + v179[24], &qword_2ECB18);
  sub_B678(v176, v178 + v179[28], &qword_2ECB18);
  sub_6592C((uint64_t)&v271);
  sub_B6DC(v260, &qword_2ECB18);
  sub_B6DC(v174, &qword_2ECB18);
  sub_B6DC(v270, &qword_2ECB20);
  sub_B6DC(v268, &qword_2ECB30);
  sub_B6DC((uint64_t)v259, &qword_2ECB38);
  sub_B6DC(v176, &qword_2ECB18);
  sub_B6DC(v169, &qword_2ECB18);
  sub_B6DC(v173, &qword_2ECB20);
  sub_B6DC(v172, &qword_2ECB30);
  v281[0] = v240;
  v281[1] = v181;
  v281[2] = v182;
  v281[3] = v183;
  v281[4] = v184;
  v281[5] = v244;
  char v282 = v241;
  *(_DWORD *)v283 = v347[0];
  *(_DWORD *)&v283[3] = *(_DWORD *)((char *)v347 + 3);
  uint64_t v284 = v245;
  char v285 = v242;
  *(_DWORD *)v286 = v346[0];
  *(_DWORD *)&v286[3] = *(_DWORD *)((char *)v346 + 3);
  uint64_t v287 = v249;
  uint64_t v288 = v248;
  uint64_t v289 = v247;
  uint64_t v290 = v246;
  uint64_t v291 = v243;
  uint64_t v292 = v185;
  uint64_t v293 = v186;
  uint64_t v294 = v187;
  uint64_t v295 = v188;
  char v296 = 1;
  sub_65964((uint64_t)v281);
  return sub_B6DC(v254, &qword_2ECB38);
}

uint64_t sub_64B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_4A98(&qword_2EC9B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_657C8(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_61CB4((uint64_t)v14, v17 + v15);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_61D18;
  a3[1] = v17;
  return result;
}

uint64_t sub_64D10(uint64_t a1)
{
  uint64_t result = sub_654EC(&qword_2EC9F8, (void (*)(uint64_t))type metadata accessor for BookCoverEffect);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BookCoverEffect(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for BookCoverEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26A6E0();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

_OWORD *initializeWithCopy for BookCoverEffect(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    void *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for BookCoverEffect(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_B6DC((uint64_t)a1 + v4, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      void *v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for BookCoverEffect(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for BookCoverEffect(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_B6DC((uint64_t)a1 + v4, &qword_2EA970);
    uint64_t v7 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BookCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_652A8);
}

uint64_t sub_652A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_4A98(&qword_2EAB20);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for BookCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_65330);
}

uint64_t sub_65330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_653A8()
{
  sub_5501C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_65448()
{
  unint64_t result = qword_2ECA98;
  if (!qword_2ECA98)
  {
    sub_7B0C(&qword_2ECAA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECA98);
  }
  return result;
}

uint64_t sub_654A4()
{
  return sub_654EC(&qword_2ECAA8, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_654EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_65538()
{
  uint64_t v1 = (int *)(type metadata accessor for BookCoverEffect() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_4A98(&qword_2EC9B0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v0 + v1[8] + v2;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_656E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for BookCoverEffect() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_4A98(&qword_2EC9B0) - 8);
  uint64_t v7 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_61B70(v1 + v4, v7, a1);
}

uint64_t sub_657C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_65830(uint64_t a1)
{
  return a1;
}

uint64_t sub_65868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_658C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_65900(uint64_t a1)
{
  return a1;
}

uint64_t sub_6592C(uint64_t a1)
{
  return a1;
}

uint64_t sub_65964(uint64_t a1)
{
  return a1;
}

uint64_t sub_6599C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_4A98(&qword_2ECC30);
  sub_26A0F0();
  sub_26A0D0();
  sub_677D0();
  sub_67A3C(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_67A3C(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_65BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = a4;
  uint64_t v76 = a1;
  uint64_t v78 = a5;
  uint64_t v7 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v73 = (uint64_t *)((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v63 - v10;
  uint64_t v11 = sub_26B910();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FontConstants.ListItem(0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a3 - 8);
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_4A98(&qword_2ECC68);
  __chkstk_darwin(v69);
  uint64_t v71 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_4A98(&qword_2ECC58);
  __chkstk_darwin(v72);
  uint64_t v70 = (uint64_t)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2ECC30);
  __chkstk_darwin(v24 - 8);
  uint64_t v77 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ListItemMetadataCreatorDescriptionView();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a2 + *(int *)(v26 + 36), a3);
  uint64_t v68 = a2;
  sub_4040C((uint64_t)v18);
  sub_26B950();
  uint64_t v27 = *(void (**)(void))(v12 + 104);
  unsigned int v65 = enum case for Font.Leading.tight(_:);
  uint64_t v64 = (void (*)(char *, void, uint64_t))v27;
  v27(v14);
  uint64_t v28 = sub_26B930();
  swift_release();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v66 = v12 + 8;
  uint64_t v67 = v11;
  uint64_t v63 = v29;
  v29(v14, v11);
  sub_67BB8((uint64_t)v18, type metadata accessor for FontConstants.ListItem);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v76, v28, a3);
  uint64_t v76 = v31;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a3);
  if (v35)
  {
    char v36 = v33 & 1;
    sub_4040C((uint64_t)v18);
    sub_26B950();
    uint64_t v37 = v67;
    v64(v14, v65, v67);
    sub_26B930();
    swift_release();
    v63(v14, v37);
    sub_67BB8((uint64_t)v18, type metadata accessor for FontConstants.ListItem);
    char v79 = v33 & 1;
    uint64_t v38 = v76;
    uint64_t v39 = sub_26BA80();
    uint64_t v41 = v40;
    uint64_t v42 = v30;
    char v44 = v43 & 1;
    sub_3A380(v42, v38, v36);
    swift_release();
    swift_bridgeObjectRelease();
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v45 = sub_26BA30();
    uint64_t v47 = v46;
    LOBYTE(v38) = v48;
    uint64_t v50 = v49;
    swift_release();
    sub_3A380(v39, v41, v44);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    long long v52 = v73;
    *uint64_t v73 = KeyPath;
    sub_4A98(&qword_2EB3E8);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = (uint64_t)v52;
    uint64_t v54 = v74;
    sub_67AF0(v53, v74);
    uint64_t v55 = (uint64_t)v71;
    sub_67B54(v54, (uint64_t)&v71[*(int *)(v69 + 36)]);
    *(void *)uint64_t v55 = v45;
    *(void *)(v55 + 8) = v47;
    *(unsigned char *)(v55 + 16) = v38 & 1;
    *(void *)(v55 + 24) = v50;
    sub_67BB8(v54, (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = v70;
    sub_67C20(v55, v70);
    uint64_t v58 = v57 + *(int *)(v72 + 36);
    *(void *)uint64_t v58 = v56;
    *(void *)(v58 + 8) = 4;
    *(unsigned char *)(v58 + 16) = 0;
    sub_B6DC(v55, &qword_2ECC68);
    sub_678F0();
    uint64_t v59 = (uint64_t)v77;
    sub_26BE90();
    sub_B6DC(v57, &qword_2ECC58);
    uint64_t v60 = sub_4A98(&qword_2ECC48);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 0, 1, v60);
  }
  else
  {
    uint64_t v61 = sub_4A98(&qword_2ECC48);
    uint64_t v59 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v77, 1, 1, v61);
  }
  return sub_67A84(v59, v78);
}

uint64_t sub_66264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ListItemMetadataCreatorDescriptionView() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t type metadata accessor for ListItemMetadataCreatorDescriptionView()
{
  return sub_129B4();
}

void sub_6633C()
{
  sub_67530();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_66408(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = v8;
  uint64_t v10 = *(void *)(v7 + 64) + 7;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  if (((v10 + ((v9 + 2) & ~v9)) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((v10 + ((v9 + 2) & ~v9)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
  {
    unint64_t v13 = ((v10 + ((v8 + 2) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else
  {
    unint64_t v13 = 8;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  uint64_t v15 = *(_DWORD *)(v12 + 80);
  uint64_t v16 = v15 + v13 + 1;
  int v17 = (*(_DWORD *)(v12 + 80) | v8) & 0x100000;
  if ((v15 | v9) > 7 || v17 != 0 || (v16 & (unint64_t)~v15) + *(void *)(v12 + 64) > 0x18)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + (((v15 | v9) & 0xF8 ^ 0x1F8) & ((v15 | v9) + 16));
    swift_retain();
  }
  else
  {
    unsigned int v21 = *((unsigned __int8 *)a2 + v13);
    if (v21 >= 2 && (v13 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = *(_DWORD *)a2 + 2;
    }
    uint64_t v23 = ~v15;
    if (v21 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
      uint64_t v24 = (a1 + v9 + 2) & ~v9;
      uint64_t v25 = ((unint64_t)a2 + v9 + 2) & ~v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v24, v25, v6);
      *(void *)((v10 + v24) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v10 + v25) & 0xFFFFFFFFFFFFFFF8);
      char v26 = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
      char v26 = 0;
    }
    *(unsigned char *)(a1 + v13) = v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))((v16 + a1) & v23, ((unint64_t)a2 + v16) & v23, v11);
  }
  return a1;
}

uint64_t sub_66634(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_26AB40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (((*(void *)(v5 + 64) + ((v6 + 2) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((*(void *)(v5 + 64) + ((v6 + 2) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
  {
    unint64_t v7 = ((*(void *)(v5 + 64) + ((v6 + 2) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else
  {
    unint64_t v7 = 8;
  }
  unsigned int v8 = *((unsigned __int8 *)a1 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = *a1 + 2;
  }
  if (v8 == 1) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v6 + 2) & ~v6, v4);
  }
  else {
    swift_release();
  }
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v11 = *(uint64_t (**)(unint64_t))(v10 + 8);
  unint64_t v12 = ((unint64_t)a1 + v7 + *(unsigned __int8 *)(v10 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);

  return v11(v12);
}

unsigned char *sub_66774(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64) + 7;
  if (((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
  {
    unint64_t v10 = ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else
  {
    unint64_t v10 = 8;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *(_DWORD *)a2 + 2;
  }
  if (v11 == 1)
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *(unsigned char *)(a2 + 1);
    uint64_t v13 = (unint64_t)&a1[v8 + 2] & ~v8;
    uint64_t v14 = (a2 + v8 + 2) & ~v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v13, v14, v6);
    *(void *)((v9 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + v14) & 0xFFFFFFFFFFFFFFF8);
    char v15 = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    char v15 = 0;
  }
  a1[v10] = v15;
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))((unint64_t)&a1[(v10 | 1) + *(unsigned __int8 *)(v16 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((v10 | 1) + *(unsigned __int8 *)(v16 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_66914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_26AB40();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = *(void *)(v7 + 64) + 7;
    if (((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) != 0
      && ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
    {
      unint64_t v10 = ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else
    {
      unint64_t v10 = 8;
    }
    unsigned int v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = *(_DWORD *)a1 + 2;
    }
    uint64_t v13 = ~v8;
    if (v11 == 1) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))((a1 + v8 + 2) & v13, v6);
    }
    else {
      swift_release();
    }
    unsigned int v14 = *(unsigned __int8 *)(a2 + v10);
    if ((v10 & 0xFFFFFFF8) != 0 && v14 >= 2) {
      unsigned int v14 = *(_DWORD *)a2 + 2;
    }
    if (v14 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      uint64_t v16 = a2 + v8;
      uint64_t v17 = (a1 + v8 + 2) & v13;
      uint64_t v18 = (v16 + 2) & v13;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v17, v18, v6);
      *(void *)((v9 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + v18) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(a1 + v10) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + v10) = 0;
      swift_retain();
    }
  }
  uint64_t v19 = *(void *)(sub_26AB40() - 8);
  unint64_t v20 = ((*(void *)(v19 + 64)
        + ((*(unsigned __int8 *)(v19 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  uint64_t v21 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))((*(unsigned __int8 *)(v21 + 80) + v20 + 1 + a1) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + v20 + 1 + a2) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

unsigned char *sub_66B88(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64) + 7;
  if (((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
  {
    unint64_t v10 = ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else
  {
    unint64_t v10 = 8;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *(_DWORD *)a2 + 2;
  }
  if (v11 == 1)
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *(unsigned char *)(a2 + 1);
    uint64_t v13 = (unint64_t)&a1[v8 + 2] & ~v8;
    uint64_t v14 = (a2 + v8 + 2) & ~v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v13, v14, v6);
    *(void *)((v9 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + v14) & 0xFFFFFFFFFFFFFFF8);
    char v15 = 1;
  }
  else
  {
    char v15 = 0;
    *(void *)a1 = *(void *)a2;
  }
  a1[v10] = v15;
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))((unint64_t)&a1[(v10 | 1) + *(unsigned __int8 *)(v16 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((v10 | 1) + *(unsigned __int8 *)(v16 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_66D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_26AB40();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = *(void *)(v7 + 64) + 7;
    if (((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) != 0
      && ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8)
    {
      unint64_t v10 = ((v9 + ((v8 + 2) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else
    {
      unint64_t v10 = 8;
    }
    unsigned int v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = *(_DWORD *)a1 + 2;
    }
    uint64_t v13 = ~v8;
    if (v11 == 1) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))((a1 + v8 + 2) & v13, v6);
    }
    else {
      swift_release();
    }
    unsigned int v14 = *(unsigned __int8 *)(a2 + v10);
    if ((v10 & 0xFFFFFFF8) != 0 && v14 >= 2) {
      unsigned int v14 = *(_DWORD *)a2 + 2;
    }
    if (v14 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      uint64_t v16 = a2 + v8;
      uint64_t v17 = (a1 + v8 + 2) & v13;
      uint64_t v18 = (v16 + 2) & v13;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v17, v18, v6);
      *(void *)((v9 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + v18) & 0xFFFFFFFFFFFFFFF8);
      char v19 = 1;
    }
    else
    {
      char v19 = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + v10) = v19;
  }
  uint64_t v20 = *(void *)(sub_26AB40() - 8);
  unint64_t v21 = ((*(void *)(v20 + 64)
        + ((*(unsigned __int8 *)(v20 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v21 <= 8) {
    unint64_t v21 = 8;
  }
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 40))((*(unsigned __int8 *)(v22 + 80) + v21 + 1 + a1) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (*(unsigned __int8 *)(v22 + 80) + v21 + 1 + a2) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

uint64_t sub_66F94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26AB40() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v11 + v8 + 1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v10 > 0xFE)
      {
        uint64_t v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v23(((unint64_t)a1 + v13) & ~v11);
      }
      else
      {
        unsigned int v22 = *((unsigned __int8 *)a1 + v8);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_671F0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26AB40() - 8);
  unint64_t v9 = ((*(void *)(v8 + 64)
       + ((*(unsigned __int8 *)(v8 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = v10 | 1;
  uint64_t v16 = (v10 | 1) + v13;
  size_t v17 = (v16 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v13;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x67508);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v12 > 0xFE)
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v24((unint64_t)&a1[v16] & v21, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v15 < 4) {
            int v25 = ~(-1 << (8 * v15));
          }
          else {
            int v25 = -1;
          }
          int v26 = v25 & (a2 - 255);
          bzero(a1, v15);
          if (v15 == 1) {
            *a1 = v26;
          }
          else {
            *(_DWORD *)a1 = v26;
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

void sub_67530()
{
  if (!qword_2ECC28)
  {
    type metadata accessor for FontConstants.ListItem(255);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2ECC28);
    }
  }
}

uint64_t sub_67588()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_675CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ListItemMetadataCreatorDescriptionView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_67734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ListItemMetadataCreatorDescriptionView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_65BB4(a1, v8, v5, v6, a2);
}

unint64_t sub_677D0()
{
  unint64_t result = qword_2ECC38;
  if (!qword_2ECC38)
  {
    sub_7B0C(&qword_2ECC30);
    sub_67844();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECC38);
  }
  return result;
}

unint64_t sub_67844()
{
  unint64_t result = qword_2ECC40;
  if (!qword_2ECC40)
  {
    sub_7B0C(&qword_2ECC48);
    sub_678F0();
    sub_67A3C((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECC40);
  }
  return result;
}

unint64_t sub_678F0()
{
  unint64_t result = qword_2ECC50;
  if (!qword_2ECC50)
  {
    sub_7B0C(&qword_2ECC58);
    sub_67990();
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECC50);
  }
  return result;
}

unint64_t sub_67990()
{
  unint64_t result = qword_2ECC60;
  if (!qword_2ECC60)
  {
    sub_7B0C(&qword_2ECC68);
    sub_67A3C((unint64_t *)&qword_2ECC70, (void (*)(uint64_t))type metadata accessor for DefaultBlendModeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECC60);
  }
  return result;
}

uint64_t sub_67A3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_67A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2ECC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_67AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultBlendModeModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_67B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultBlendModeModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_67BB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_67C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2ECC68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_67C88()
{
  return sub_7C18(&qword_2ECC78, &qword_2ECC80);
}

uint64_t UberNavigationBackButtonView.body.getter()
{
  return sub_26A100();
}

uint64_t sub_67E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v2 = sub_26A220();
  __chkstk_darwin(v2 - 8);
  unsigned int v65 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26B600();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B310();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v61 = v7;
  __chkstk_darwin(v6);
  uint64_t v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_26AC00();
  uint64_t v55 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26CB80();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v12 - 8);
  unsigned int v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2ECCB8);
  uint64_t v48 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  size_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2ECCB0);
  uint64_t v50 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  int v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_4A98(&qword_2ECCA8);
  uint64_t v54 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unsigned int v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2ECCE8);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v57 = v23;
  uint64_t v58 = v24;
  __chkstk_darwin(v23);
  uint64_t v49 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_4A98(&qword_2ECC90);
  __chkstk_darwin(v59);
  long long v52 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_26A630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
  sub_26CB50();
  sub_26D130();
  uint64_t v72 = sub_26D140();
  uint64_t v73 = &protocol witness table for Models.FlowBackAction;
  sub_CA1C(&v69);
  sub_26D110();
  sub_4A98(&qword_2ECCF0);
  sub_68E34();
  sub_26A120();
  sub_26ABF0();
  uint64_t v28 = sub_7C18(&qword_2ECCC0, &qword_2ECCB8);
  uint64_t v29 = sub_68FD4(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v30 = v53;
  sub_26BC70();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v30);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v15);
  uint64_t v31 = v56;
  sub_26AD30();
  uint64_t v69 = v15;
  uint64_t v70 = v30;
  uint64_t v71 = v28;
  uint64_t v72 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = sub_68FD4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v34 = v60;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v34);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v18);
  uint64_t v35 = v62;
  sub_26B5E0();
  uint64_t v69 = v18;
  uint64_t v70 = v34;
  uint64_t v71 = OpaqueTypeConformance2;
  uint64_t v72 = v33;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v49;
  uint64_t v38 = v51;
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v64);
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v38);
  LOBYTE(v69) = 0;
  SymbolImage.Kind.accessibilityLocalizable.getter();
  uint64_t v40 = v66;
  sub_C224(v66, (uint64_t)&v69);
  uint64_t v41 = sub_26BA00();
  uint64_t v43 = v42;
  LOBYTE(v22) = v44 & 1;
  uint64_t v69 = v39;
  uint64_t v70 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v45 = (uint64_t)v52;
  uint64_t v46 = v57;
  sub_26BE30();
  sub_3A380(v41, v43, (char)v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v46);
  uint64_t v68 = v40;
  sub_4A98(&qword_2ECC98);
  sub_68BB8();
  sub_7C18(&qword_2ECCD0, &qword_2ECC98);
  sub_26BF60();
  return sub_B6DC(v45, &qword_2ECC90);
}

uint64_t sub_687B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26C270();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2ECD08);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  unsigned int v14 = (uint64_t *)&v9[*(int *)(v7 + 28)];
  uint64_t *v14 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  v9[*(int *)(v7 + 32)] = 1;
  sub_69034((uint64_t)v9, (uint64_t)&v13[*(int *)(v11 + 44)]);
  *uint64_t v13 = 0;
  sub_69098((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.Scale.medium(_:), v2);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2ECCF0) + 36));
  uint64_t v17 = sub_4A98(&qword_2EB038);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v16 + *(int *)(v17 + 28), v5, v2);
  *uint64_t v16 = KeyPath;
  sub_690FC((uint64_t)v13, a1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_B6DC((uint64_t)v13, &qword_2ECD08);
}

uint64_t sub_68A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26A220();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_26C250();
  v13[0] = 0;
  SymbolImage.Kind.accessibilityLocalizable.getter();
  sub_C224(a1, (uint64_t)v13);
  uint64_t v6 = sub_26BA00();
  uint64_t v8 = v7;
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  char v10 = v9 & 1;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v9 & 1;
  *(void *)(a2 + 32) = v11;
  swift_retain();
  sub_45370(v6, v8, v10);
  swift_bridgeObjectRetain();
  sub_3A380(v6, v8, v10);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_68B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_errorRetain();
  swift_retain();

  return _JetLocalizeDefaultFailed.init(error:retry:)(a1, a2, a3);
}

unint64_t sub_68BB8()
{
  unint64_t result = qword_2ECCA0;
  if (!qword_2ECCA0)
  {
    sub_7B0C(&qword_2ECC90);
    sub_7B0C(&qword_2ECCA8);
    sub_7B0C(&qword_2ECCB0);
    sub_26B310();
    sub_7B0C(&qword_2ECCB8);
    sub_26AC00();
    sub_7C18(&qword_2ECCC0, &qword_2ECCB8);
    sub_68FD4(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_68FD4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_68FD4((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECCA0);
  }
  return result;
}

uint64_t sub_68DCC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for UberNavigationBackButtonView()
{
  return &type metadata for UberNavigationBackButtonView;
}

uint64_t sub_68DF8()
{
  return sub_7C18(&qword_2ECCD8, &qword_2ECCE0);
}

unint64_t sub_68E34()
{
  unint64_t result = qword_2ECCF8;
  if (!qword_2ECCF8)
  {
    sub_7B0C(&qword_2ECCF0);
    sub_68ED4();
    sub_7C18((unint64_t *)&qword_2EB0D8, &qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECCF8);
  }
  return result;
}

unint64_t sub_68ED4()
{
  unint64_t result = qword_2ECD00;
  if (!qword_2ECD00)
  {
    sub_7B0C(&qword_2ECD08);
    sub_68F80();
    sub_68FD4((unint64_t *)&qword_2ECD18, (void (*)(uint64_t))type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECD00);
  }
  return result;
}

unint64_t sub_68F80()
{
  unint64_t result = qword_2ECD10;
  if (!qword_2ECD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECD10);
  }
  return result;
}

uint64_t sub_68FD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6901C@<X0>(uint64_t a1@<X8>)
{
  return sub_68A2C(*(void *)(v1 + 16), a1);
}

uint64_t sub_69034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_69098(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_690FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2ECD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void **sub_69164(void **a1, void **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void **)((char *)a1 + v6);
    uint64_t v8 = (void **)((char *)a2 + v6);
    char v9 = v5;
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_6927C(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26AB70();
    uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void **sub_69334(void **a1, void **a2, uint64_t a3)
{
  int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void **)((char *)a1 + v5);
  uint64_t v7 = (void **)((char *)a2 + v5);
  id v8 = v4;
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26AB70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_693FC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void **)((char *)a1 + v9);
    uint64_t v11 = (void **)((char *)a2 + v9);
    sub_694E4((uint64_t)a1 + v9);
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_694E4(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBC50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_69544(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26AB70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void **sub_69618(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_694E4((uint64_t)a1 + v7);
    uint64_t v10 = sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26AB70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_6970C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_69720);
}

uint64_t sub_69720(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2ECD20);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_697D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_697E8);
}

void *sub_697E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2ECD20);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AlignmentImageView()
{
  uint64_t result = qword_2ECD80;
  if (!qword_2ECD80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_698E0()
{
  sub_6997C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_6997C()
{
  if (!qword_2ECD90)
  {
    sub_26AB70();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2ECD90);
    }
  }
}

uint64_t sub_699D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_699F0@<X0>(id *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26C260();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26AB70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - v12;
  id v14 = *a1;
  [*a1 size];
  double v41 = v16;
  double v42 = v15;
  [v14 alignmentRectInsets];
  double v40 = v17;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  sub_26A940();
  [v14 alignmentRectInsets];
  sub_26D810();
  type metadata accessor for AlignmentImageView();
  sub_41A98((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  UIUserInterfaceLayoutDirection v25 = UIUserInterfaceLayoutDirectionLeftToRight;
  if (v24 != enum case for LayoutDirection.leftToRight(_:))
  {
    if (v24 == enum case for LayoutDirection.rightToLeft(_:))
    {
      UIUserInterfaceLayoutDirection v25 = UIUserInterfaceLayoutDirectionRightToLeft;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      UIUserInterfaceLayoutDirection v25 = UIUserInterfaceLayoutDirectionLeftToRight;
    }
  }
  sub_6A15C(0.0, 0.0, v42, v41, v40, v19, v21, v23);
  sub_26D800(v25);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  id v26 = *a1;
  sub_26C240();
  uint64_t v28 = v43;
  uint64_t v27 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v44);
  uint64_t v29 = sub_26C280();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  sub_26A650();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t result = sub_26B760();
  *(void *)a2 = v29;
  *(unsigned char *)(a2 + 8) = result;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v33;
  *(void *)(a2 + 32) = v35;
  *(void *)(a2 + 40) = v37;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

double sub_69D90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1 - 8);
  uint64_t v7 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v9 = v8;
  sub_69EFC((uint64_t)v3, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  sub_6A078((uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  uint64_t v12 = *v3;
  [v12 size];
  double v14 = v13;
  double v16 = v15;
  [v12 alignmentRectInsets];
  double v21 = sub_6A15C(0.0, 0.0, v14, v16, v17, v18, v19, v20);
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = sub_6A0DC;
  *(void *)(a2 + 24) = v11;
  double result = v21 / v22;
  *(double *)(a2 + 32) = result;
  *(_WORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_69EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AlignmentImageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_69F60()
{
  uint64_t v1 = (int *)(type metadata accessor for AlignmentImageView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  unint64_t v3 = v0 + v2 + v1[7];
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26AB70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_6A078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AlignmentImageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6A0DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AlignmentImageView() - 8);
  uint64_t v4 = (id *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_699F0(v4, a1);
}

double sub_6A15C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

unint64_t sub_6A174()
{
  unint64_t result = qword_2ECDC0;
  if (!qword_2ECDC0)
  {
    sub_7B0C(&qword_2ECDC8);
    sub_6A1F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECDC0);
  }
  return result;
}

unint64_t sub_6A1F0()
{
  unint64_t result = qword_2ECDD0;
  if (!qword_2ECDD0)
  {
    sub_7B0C(&qword_2ECDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECDD0);
  }
  return result;
}

uint64_t sub_6A24C@<X0>(unsigned char *a1@<X8>)
{
  sub_2CF68();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_6A29C()
{
  return sub_26B0C0();
}

uint64_t sub_6A2E8()
{
  uint64_t v1 = sub_269920();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_26D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  double v14 = (char *)&v23 - v13;
  switch(*(unsigned char *)(v0 + 56))
  {
    case 3:
      uint64_t v15 = *(void *)(v0 + 40);
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v25 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_26D370();
      sub_2698C0();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      type metadata accessor for BundleFinder();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v17 = [self bundleForClass:ObjCClassFromMetadata];
      sub_2698C0();
      sub_26D450();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      sub_4A98(&qword_2EA308);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_26F990;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = sub_720C8();
      uint64_t v19 = v24;
      *(void *)(v18 + 32) = v25;
      *(void *)(v18 + 40) = v19;
      uint64_t v20 = sub_26D400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_26D370();
      sub_2698C0();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      type metadata accessor for BundleFinder();
      uint64_t v21 = swift_getObjCClassFromMetadata();
      [self bundleForClass:v21];
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
      uint64_t v20 = sub_26D460();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      break;
  }
  return v20;
}

uint64_t sub_6ABA0()
{
  uint64_t v1 = sub_269920();
  uint64_t v19 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_26D3E0();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = sub_26D3C0();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = *(void *)v0;
  switch(*(unsigned char *)(v0 + 56))
  {
    case 2:
      sub_26D3B0();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      sub_26D3A0(v22);
      uint64_t v21 = v14;
      sub_26D380();
      v23._countAndFlagsBits = 0x73656761700ALL;
      v23._object = (void *)0xE600000000000000;
      sub_26D3A0(v23);
      sub_26D3D0();
      sub_2698C0();
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v10, v12, v7);
      type metadata accessor for BundleFinder();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v16 = [self bundleForClass:ObjCClassFromMetadata];
      uint64_t v17 = v19;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v4, v6, v1);
      uint64_t v14 = sub_26D460();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v7);
      break;
    case 3:
      uint64_t v14 = *(void *)(v0 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      break;
    default:
      swift_bridgeObjectRetain();
      break;
  }
  return v14;
}

uint64_t sub_6AF20()
{
  uint64_t v40 = sub_269920();
  uint64_t v1 = *(void *)(v40 - 8);
  uint64_t v2 = __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - v4;
  uint64_t v41 = sub_26D3E0();
  uint64_t v6 = *(void *)(v41 - 8);
  uint64_t v7 = __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_26D3C0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = *(void *)(v0 + 8);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v15 = *(void **)(v0 + 24);
  switch(*(unsigned char *)(v0 + 56))
  {
    case 1:
      swift_bridgeObjectRetain();
      if (v15)
      {
        sub_26D3B0();
        v46._countAndFlagsBits = 0xD000000000000030;
        v46._object = (void *)0x8000000000288A10;
        sub_26D3A0(v46);
        v47._countAndFlagsBits = v14;
        v47._object = v15;
        sub_26D390(v47);
        swift_bridgeObjectRelease();
        v48._countAndFlagsBits = 0x2E676E6F6C20;
        v48._object = (void *)0xE600000000000000;
        sub_26D3A0(v48);
        sub_26D3D0();
        sub_2698C0();
        uint64_t v16 = v41;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
        type metadata accessor for BundleFinder();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        [self bundleForClass:ObjCClassFromMetadata];
        uint64_t v18 = v40;
        (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v39, v5, v40);
        goto LABEL_10;
      }
      return v14;
    case 2:
      sub_26D3B0();
      v49._countAndFlagsBits = 0xD000000000000024;
      v49._object = (void *)0x80000000002889A0;
      sub_26D3A0(v49);
      uint64_t v42 = v13;
      sub_26D380();
      v50._countAndFlagsBits = 0x6C20736567617020;
      v50._object = (void *)0xEC0000002E676E6FLL;
      sub_26D3A0(v50);
      sub_26D3D0();
      sub_2698C0();
      uint64_t v16 = v41;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
      type metadata accessor for BundleFinder();
      uint64_t v20 = swift_getObjCClassFromMetadata();
      [self bundleForClass:v20];
      uint64_t v18 = v40;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v39, v5, v40);
      goto LABEL_10;
    case 3:
      uint64_t v38 = *(void *)(v0 + 40);
      uint64_t v21 = *(void *)(v0 + 48);
      double v22 = *(double *)v0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22 / 60.0 / 60.0 >= 5.0)
      {
        sub_26D370();
        sub_2698C0();
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v37 = v21;
        uint64_t v31 = v41;
        v30(v9, v11, v41);
        type metadata accessor for BundleFinder();
        uint64_t v32 = swift_getObjCClassFromMetadata();
        id v33 = [self bundleForClass:v32];
        sub_2698C0();
        sub_26D450();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v40);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v31);
        sub_4A98(&qword_2EA308);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_270BF0;
        *(void *)(v34 + 56) = &type metadata for String;
        unint64_t v35 = sub_720C8();
        uint64_t v36 = v37;
        *(void *)(v34 + 32) = v38;
        *(void *)(v34 + 40) = v36;
        *(void *)(v34 + 96) = &type metadata for String;
        *(void *)(v34 + 104) = v35;
        *(void *)(v34 + 64) = v35;
        *(void *)(v34 + 72) = v13;
        *(void *)(v34 + 80) = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_26D370();
        sub_2698C0();
        uint64_t v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
        type metadata accessor for BundleFinder();
        uint64_t v24 = swift_getObjCClassFromMetadata();
        id v25 = [self bundleForClass:v24];
        sub_2698C0();
        sub_26D450();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v40);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v23);
        sub_4A98(&qword_2EA308);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_26F990;
        *(void *)(v26 + 56) = &type metadata for String;
        *(void *)(v26 + 64) = sub_720C8();
        *(void *)(v26 + 32) = v38;
        *(void *)(v26 + 40) = v21;
      }
      uint64_t v14 = sub_26D400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    case 4:
      sub_26D3B0();
      v51._countAndFlagsBits = 0x6461657220756F59;
      v51._object = (void *)0xE900000000000020;
      sub_26D3A0(v51);
      uint64_t v42 = v14;
      sub_26D380();
      v52._countAndFlagsBits = 0xD000000000000016;
      v52._object = (void *)0x8000000000288950;
      sub_26D3A0(v52);
      sub_26D3D0();
      sub_2698C0();
      uint64_t v16 = v41;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
      type metadata accessor for BundleFinder();
      uint64_t v27 = swift_getObjCClassFromMetadata();
      [self bundleForClass:v27];
      uint64_t v18 = v40;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v39, v5, v40);
      goto LABEL_10;
    case 5:
      sub_26D3B0();
      v53._countAndFlagsBits = 0x6461657220756F59;
      v53._object = (void *)0xE900000000000020;
      sub_26D3A0(v53);
      uint64_t v42 = v14;
      sub_26D380();
      v54._object = (void *)0x8000000000288900;
      v54._countAndFlagsBits = 0xD000000000000015;
      sub_26D3A0(v54);
      sub_26D3D0();
      sub_2698C0();
      uint64_t v16 = v41;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
      type metadata accessor for BundleFinder();
      uint64_t v28 = swift_getObjCClassFromMetadata();
      [self bundleForClass:v28];
      uint64_t v18 = v40;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v39, v5, v40);
      goto LABEL_10;
    default:
      swift_bridgeObjectRetain();
      sub_26D3B0();
      v43._countAndFlagsBits = 0x64656873696E6946;
      v43._object = (void *)0xEC000000206E6F20;
      sub_26D3A0(v43);
      v44._countAndFlagsBits = v14;
      v44._object = v15;
      sub_26D390(v44);
      swift_bridgeObjectRelease();
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      sub_26D3A0(v45);
      sub_26D3D0();
      sub_2698C0();
      uint64_t v16 = v41;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v41);
      type metadata accessor for BundleFinder();
      uint64_t v17 = swift_getObjCClassFromMetadata();
      [self bundleForClass:v17];
      uint64_t v18 = v40;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v39, v5, v40);
LABEL_10:
      uint64_t v14 = sub_26D460();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v18);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v16);
      return v14;
  }
}

uint64_t HighlightFrameViewModel.init(kind:style:exposureData:lowAssetCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v11;
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a5 + 48) = v9;
  *(unsigned char *)(a5 + 56) = v10;
  uint64_t v12 = type metadata accessor for HighlightFrameViewModel(0);
  sub_6E4E8(a2, a5 + *(int *)(v12 + 24), type metadata accessor for HighlightCoverStyle);
  uint64_t v13 = a5 + *(int *)(v12 + 28);
  uint64_t v14 = sub_269BE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  *(unsigned char *)(a5 + 57) = a4;
  return result;
}

uint64_t type metadata accessor for HighlightFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2ECF08);
}

uint64_t type metadata accessor for HighlightCoverStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2ECE78);
}

uint64_t HighlightFrame.id.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HighlightFrame(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HighlightFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2ECFA0);
}

uint64_t HighlightFrame.alignment.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for HighlightFrame(0) + 36));
}

uint64_t HighlightFrame.sharableView.getter()
{
  uint64_t v1 = type metadata accessor for HighlightFrame(0);
  __chkstk_darwin(v1);
  sub_6C090(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HighlightFrame);
  sub_6BDCC(&qword_2ECDE0, (void (*)(uint64_t))type metadata accessor for HighlightFrame);
  return sub_26C470();
}

uint64_t HighlightFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HighlightFrame(0) + 40);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for HighlightFrameViewModel(0) + 28);
  uint64_t v5 = sub_269BE0();
  a1[3] = v5;
  a1[4] = sub_6BDCC(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_6BDCC(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v6 = sub_CA1C(a1);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(v6, v4, v5);
}

uint64_t sub_6BDCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HighlightFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HighlightCoverStyle(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v1 + *(int *)(type metadata accessor for HighlightFrame(0) + 40);
  uint64_t v7 = type metadata accessor for HighlightFrameViewModel(0);
  sub_6C090(v6 + *(int *)(v7 + 24), (uint64_t)v5, type metadata accessor for HighlightCoverStyle);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = (uint64_t)v5 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v11 = sub_4A98(&qword_2EA950);
    sub_19CC4(v10, a1 + *(int *)(v11 + 48), &qword_2EA940);
    *(void *)a1 = v9;
LABEL_9:
    type metadata accessor for PageBackground(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (*(void *)(v9 + 16))
  {
    sub_6C0F8(v9 + 32, (uint64_t)&v21);
  }
  else
  {
    uint64_t v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
    sub_B6DC((uint64_t)&v21, &qword_2ECDF0);
    uint64_t v17 = a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
    id v18 = [self systemGray6Color];
    *(void *)a1 = sub_26C0C0();
    uint64_t v19 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    goto LABEL_9;
  }
  long long v40 = v29;
  long long v41 = v30;
  uint64_t v42 = v31;
  long long v36 = v25;
  long long v37 = v26;
  long long v38 = v27;
  long long v39 = v28;
  long long v32 = v21;
  long long v33 = v22;
  long long v34 = v23;
  long long v35 = v24;
  long long v12 = v30;
  *(_OWORD *)(a1 + 128) = v29;
  *(_OWORD *)(a1 + 144) = v12;
  *(void *)(a1 + 160) = v42;
  long long v13 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v13;
  long long v14 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v14;
  long long v15 = v33;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v16;
  type metadata accessor for PageBackground(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_6C090(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_6C0F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t HighlightFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_269840();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (int *)type metadata accessor for HighlightFrame(0);
  uint64_t v9 = (char *)a2 + v8[5];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = (char *)a2 + v8[6];
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  uint64_t v11 = (char *)a2 + v8[7];
  *(void *)uint64_t v11 = swift_getKeyPath();
  v11[8] = 0;
  long long v12 = (uint64_t *)((char *)a2 + v8[8]);
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_26DA90(17);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0x6867696C68676948;
  unint64_t v21 = 0xEF2D656D61724674;
  sub_269830();
  uint64_t v13 = sub_269820();
  long long v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v22._countAndFlagsBits = v13;
  v22._object = v15;
  sub_26D4E0(v22);
  swift_bridgeObjectRelease();
  unint64_t v16 = v21;
  uint64_t *v12 = v20;
  v12[1] = v16;
  uint64_t v17 = (uint64_t *)((char *)a2 + v8[9]);
  *uint64_t v17 = sub_26C620();
  v17[1] = v18;
  return sub_6E4E8(a1, (uint64_t)a2 + v8[10], type metadata accessor for HighlightFrameViewModel);
}

uint64_t sub_6C378@<X0>(unsigned char *a1@<X8>)
{
  sub_2CF68();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_6C3C8()
{
  return sub_26B0C0();
}

uint64_t HighlightFrame.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_4A98(&qword_2EAEE8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_26A6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for HighlightFrame(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  sub_6C090(v2, (uint64_t)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HighlightFrame);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  sub_6E4E8((uint64_t)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for HighlightFrame);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorScheme.dark(_:), v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v5 + 36), v11, v8);
  *uint64_t v7 = KeyPath;
  uint64_t v18 = sub_4A98(&qword_2ECDF8);
  sub_B678((uint64_t)v7, (uint64_t)a1 + *(int *)(v18 + 36), &qword_2EAEE8);
  *a1 = sub_6E5D8;
  a1[1] = v16;
  swift_retain();
  sub_B6DC((uint64_t)v7, &qword_2EAEE8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_6C6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2ED008);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_26B1C0();
  *((void *)v8 + 1) = 0x4040000000000000;
  v8[16] = 0;
  uint64_t v9 = sub_4A98(&qword_2ED010);
  sub_6C7DC(a2, a1, (uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B01B4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_B6DC((uint64_t)v8, &qword_2ED008);
}

uint64_t sub_6C7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v100 = sub_4A98(&qword_2ED018);
  __chkstk_darwin(v100);
  uint64_t v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_4A98(&qword_2ED020);
  __chkstk_darwin(v98);
  uint64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_4A98(&qword_2ED028);
  __chkstk_darwin(v99);
  uint64_t v95 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_26AB40();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v86 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2ED030);
  __chkstk_darwin(v13 - 8);
  uint64_t v96 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_4A98(&qword_2ED038);
  uint64_t v15 = __chkstk_darwin(v91);
  uint64_t v93 = (uint64_t)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v92 = (uint64_t)&v81 - v18;
  __chkstk_darwin(v17);
  uint64_t v94 = (uint64_t)&v81 - v19;
  uint64_t v20 = sub_4A98(&qword_2ED040);
  __chkstk_darwin(v20 - 8);
  Swift::String v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = (char *)sub_4A98(&qword_2ED048);
  uint64_t v84 = (uint64_t *)*((void *)v85 - 1);
  __chkstk_darwin(v85);
  long long v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2ED050);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v90 = (uint64_t)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  long long v29 = (char *)&v81 - v28;
  uint64_t v30 = type metadata accessor for HighlightCoverStyle(0);
  __chkstk_darwin(v30);
  long long v32 = (uint64_t *)((char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = a1 + *(int *)(type metadata accessor for HighlightFrame(0) + 40);
  uint64_t v34 = type metadata accessor for HighlightFrameViewModel(0);
  sub_6C090(v33 + *(int *)(v34 + 24), (uint64_t)v32, type metadata accessor for HighlightCoverStyle);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = *v32;
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    long long v37 = (char *)v32 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    *(void *)uint64_t v6 = sub_26B1C0();
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    uint64_t v38 = sub_4A98(&qword_2ED058);
    sub_6DD44(&v6[*(int *)(v38 + 44)]);
    sub_B678((uint64_t)v6, (uint64_t)v8, &qword_2ED018);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2ED060, &qword_2ED028);
    sub_7C18(&qword_2ED068, &qword_2ED018);
    sub_26B2F0();
    sub_B6DC((uint64_t)v6, &qword_2ED018);
    long long v39 = &qword_2EA940;
    uint64_t v40 = (uint64_t)v37;
  }
  else
  {
    uint64_t v82 = v8;
    sub_26A940();
    double v42 = v41;
    sub_26A940();
    sub_26D8F0();
    if (v43 < 0.6 || v43 > 0.8)
    {
      uint64_t v45 = v96;
      if (v43 < 0.8 || v43 > 1.2)
      {
        if (v43 < 1.2) {
          char v44 = 3;
        }
        else {
          char v44 = 0;
        }
      }
      else
      {
        char v44 = 1;
      }
    }
    else
    {
      char v44 = 2;
      uint64_t v45 = v96;
    }
    uint64_t v83 = a3;
    char v101 = v44;
    SeriesHeaderCoverStackLayout.init(covers:pageWidth:heroWidthScale:)(v36, &v101, (char **)&v102, v42 + -32.0);
    uint64_t v46 = v102;
    if ((void)v102)
    {
      double v48 = *((double *)&v102 + 1);
      double v47 = *(double *)&v103;
      *(void *)Swift::String v22 = sub_26B1C0();
      *((void *)v22 + 1) = 0;
      unsigned char v22[16] = 1;
      uint64_t v49 = sub_4A98(&qword_2ED080);
      sub_6D364(v46, a1, (uint64_t)&v22[*(int *)(v49 + 44)], v48, v47);
      swift_bridgeObjectRelease();
      uint64_t v50 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_B0224(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, INFINITY, 0, v50, v51);
      sub_B6DC((uint64_t)v22, &qword_2ED040);
      sub_19CC4((uint64_t)v24, (uint64_t)v29, &qword_2ED048);
      uint64_t v52 = 0;
    }
    else
    {
      uint64_t v52 = 1;
    }
    ((void (*)(char *, uint64_t, uint64_t, char *))v84[7])(v29, v52, 1, v85);
    *(void *)uint64_t v45 = sub_26B100();
    *(void *)(v45 + 8) = 0x4030000000000000;
    *(unsigned char *)(v45 + 16) = 0;
    uint64_t v84 = (uint64_t *)(v45 + *(int *)(sub_4A98(&qword_2ED070) + 44));
    uint64_t v81 = sub_6A2E8();
    uint64_t v54 = v53;
    uint64_t v55 = sub_6ABA0();
    uint64_t v85 = v29;
    uint64_t v57 = v56;
    uint64_t v58 = sub_6AF20();
    uint64_t v60 = v59;
    uint64_t v61 = sub_26B820();
    uint64_t v62 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v86, 1, 1, v61);
    uint64_t v63 = sub_26B1D0();
    uint64_t v64 = sub_26C650();
    uint64_t v66 = v65;
    uint64_t v67 = (uint64_t)v87;
    (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, enum case for DynamicTypeSize.accessibility2(_:), v89);
    sub_1DC1D0(5, v81, v54, v55, v57, v58, v60, v62, v84, v63, v64, v66, 0, v67);
    sub_26A940();
    sub_26C620();
    sub_26AC90();
    uint64_t v68 = v96;
    uint64_t v69 = v92;
    sub_B678(v96, v92, &qword_2ED030);
    uint64_t v70 = (_OWORD *)(v69 + *(int *)(v91 + 36));
    long long v71 = v107;
    v70[4] = v106;
    v70[5] = v71;
    v70[6] = v108;
    long long v72 = v103;
    *uint64_t v70 = v102;
    v70[1] = v72;
    long long v73 = v105;
    v70[2] = v104;
    v70[3] = v73;
    sub_B6DC(v68, &qword_2ED030);
    uint64_t v74 = v94;
    sub_19CC4(v69, v94, &qword_2ED038);
    uint64_t v75 = (uint64_t)v85;
    uint64_t v76 = v90;
    sub_B678((uint64_t)v85, v90, &qword_2ED050);
    uint64_t v77 = v93;
    sub_B678(v74, v93, &qword_2ED038);
    uint64_t v78 = v95;
    sub_B678(v76, v95, &qword_2ED050);
    uint64_t v79 = sub_4A98(&qword_2ED078);
    sub_B678(v77, v78 + *(int *)(v79 + 48), &qword_2ED038);
    sub_B6DC(v77, &qword_2ED038);
    sub_B6DC(v76, &qword_2ED050);
    sub_B678(v78, (uint64_t)v82, &qword_2ED028);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2ED060, &qword_2ED028);
    sub_7C18(&qword_2ED068, &qword_2ED018);
    sub_26B2F0();
    sub_B6DC(v78, &qword_2ED028);
    sub_B6DC(v74, &qword_2ED038);
    uint64_t v40 = v75;
    long long v39 = &qword_2ED050;
  }
  return sub_B6DC(v40, v39);
}

uint64_t sub_6D364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v72 = a3;
  uint64_t v9 = type metadata accessor for HighlightFrame(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = (uint64_t (*)(uint64_t))(v9 - 8);
  uint64_t v71 = v10;
  uint64_t v70 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v69 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EAEE8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_26A6E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2ED088);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (double *)((char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_4A98(&qword_2ED090) - 8;
  __chkstk_darwin(v61);
  uint64_t v60 = (uint64_t)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_4A98(&qword_2ED098) - 8;
  __chkstk_darwin(v64);
  uint64_t v63 = (uint64_t)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4A98(&qword_2ED0A0) - 8;
  __chkstk_darwin(v66);
  uint64_t v65 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_4A98(&qword_2ED0A8) - 8;
  __chkstk_darwin(v68);
  uint64_t v67 = (uint64_t)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_40FB4(v19);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v15 + *(int *)(v13 + 36), v19, v16);
  uint64_t *v15 = KeyPath;
  sub_B678((uint64_t)v15, (uint64_t)v23 + *(int *)(v21 + 44), &qword_2EAEE8);
  *(void *)uint64_t v23 = a1;
  v23[1] = a4;
  v23[2] = a5;
  *((unsigned char *)v23 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_B6DC((uint64_t)v15, &qword_2EAEE8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
  swift_bridgeObjectRelease();
  uint64_t v29 = a2 + *((int *)v62 + 7);
  uint64_t v30 = a2;
  uint64_t v59 = a2;
  uint64_t v31 = *(void *)v29;
  LOBYTE(a2) = *(unsigned char *)(v29 + 8);
  sub_10E0C(*(void *)v29, a2);
  LOBYTE(v19) = sub_40900(v31, a2);
  sub_C374(v31, a2);
  if (v19) {
    double v32 = 1.0;
  }
  else {
    double v32 = 0.8;
  }
  sub_26C7E0();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v60;
  sub_B678((uint64_t)v23, v60, &qword_2ED088);
  uint64_t v38 = v37 + *(int *)(v61 + 44);
  *(double *)uint64_t v38 = v32;
  *(double *)(v38 + 8) = v32;
  *(void *)(v38 + 16) = v34;
  *(void *)(v38 + 24) = v36;
  sub_B6DC((uint64_t)v23, &qword_2ED088);
  uint64_t v39 = *(void *)v29;
  char v40 = *(unsigned char *)(v29 + 8);
  sub_10E0C(*(void *)v29, v40);
  char v41 = sub_40900(v39, v40);
  sub_C374(v39, v40);
  uint64_t v62 = type metadata accessor for HighlightFrame;
  uint64_t v42 = v69;
  sub_6C090(v30, v69, type metadata accessor for HighlightFrame);
  unint64_t v43 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v71 = v43 + v70;
  uint64_t v44 = swift_allocObject();
  sub_6E4E8(v42, v44 + v43, type metadata accessor for HighlightFrame);
  uint64_t v45 = v63;
  sub_B678(v37, v63, &qword_2ED090);
  uint64_t v46 = v45 + *(int *)(v64 + 44);
  *(unsigned char *)uint64_t v46 = v41 & 1;
  *(void *)(v46 + 8) = sub_71FB0;
  *(void *)(v46 + 16) = v44;
  sub_B6DC(v37, &qword_2ED090);
  uint64_t v47 = *(void *)v29;
  LOBYTE(v44) = *(unsigned char *)(v29 + 8);
  sub_10E0C(*(void *)v29, v44);
  char v48 = sub_40900(v47, v44);
  sub_C374(v47, v44);
  if (v48) {
    double v49 = 1.0;
  }
  else {
    double v49 = 0.8;
  }
  uint64_t v50 = v65;
  sub_B678(v45, v65, &qword_2ED098);
  *(double *)(v50 + *(int *)(v66 + 44)) = v49;
  sub_B6DC(v45, &qword_2ED098);
  uint64_t v51 = *(void *)v29;
  char v52 = *(unsigned char *)(v29 + 8);
  sub_10E0C(*(void *)v29, v52);
  char v53 = sub_40900(v51, v52);
  sub_C374(v51, v52);
  sub_6C090(v59, v42, v62);
  uint64_t v54 = swift_allocObject();
  sub_6E4E8(v42, v54 + v43, type metadata accessor for HighlightFrame);
  uint64_t v55 = v67;
  sub_B678(v50, v67, &qword_2ED0A0);
  uint64_t v56 = v55 + *(int *)(v68 + 44);
  *(unsigned char *)uint64_t v56 = v53 & 1;
  *(void *)(v56 + 8) = sub_71FCC;
  *(void *)(v56 + 16) = v54;
  sub_B6DC(v50, &qword_2ED0A0);
  return sub_19CC4(v55, v72, &qword_2ED0A8);
}

uint64_t sub_6DA20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HighlightFrame(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + *(int *)(v4 + 24);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_10E0C(*(void *)v7, v9);
  char v10 = sub_40900(v8, v9);
  sub_C374(v8, v9);
  sub_6C090(a2, (uint64_t)v6, type metadata accessor for HighlightFrame);
  if (v10)
  {
    sub_72068((uint64_t)v6, type metadata accessor for HighlightFrame);
  }
  else
  {
    uint64_t v11 = &v6[*(int *)(v3 + 28)];
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_10E0C(*(void *)v11, v13);
    char v14 = sub_40900(v12, v13);
    sub_C374(v12, v13);
    sub_72068((uint64_t)v6, type metadata accessor for HighlightFrame);
    if ((v14 & 1) == 0 && !UIAccessibilityIsReduceMotionEnabled())
    {
      sub_26C6F0();
      sub_26C680();
      swift_release();
    }
  }
  return sub_26A7D0();
}

uint64_t sub_6DBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HighlightFrame(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + *(int *)(v4 + 24);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_10E0C(*(void *)v7, v9);
  char v10 = sub_40900(v8, v9);
  sub_C374(v8, v9);
  sub_6C090(a2, (uint64_t)v6, type metadata accessor for HighlightFrame);
  if (v10)
  {
    sub_72068((uint64_t)v6, type metadata accessor for HighlightFrame);
  }
  else
  {
    uint64_t v11 = &v6[*(int *)(v3 + 28)];
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_10E0C(*(void *)v11, v13);
    char v14 = sub_40900(v12, v13);
    sub_C374(v12, v13);
    sub_72068((uint64_t)v6, type metadata accessor for HighlightFrame);
    if ((v14 & 1) == 0 && !UIAccessibilityIsReduceMotionEnabled()) {
      sub_26C6A0();
    }
  }
  return sub_26A7D0();
}

uint64_t sub_6DD44@<X0>(void *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_26AB40();
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TextLockup();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  type metadata accessor for HighlightFrame(0);
  uint64_t v13 = sub_6A2E8();
  uint64_t v32 = v14;
  uint64_t v33 = v13;
  uint64_t v15 = sub_6ABA0();
  uint64_t v30 = v16;
  uint64_t v31 = v15;
  uint64_t v17 = sub_6AF20();
  uint64_t v19 = v18;
  uint64_t v20 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  uint64_t v21 = sub_26B1D0();
  uint64_t v22 = sub_26C650();
  uint64_t v24 = v23;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DynamicTypeSize.accessibility2(_:), v34);
  sub_1DC1D0(5, v33, v32, v31, v30, v17, v19, (uint64_t)v6, v12, v21, v22, v24, 0, (uint64_t)v3);
  sub_6C090((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v25 = v35;
  *uint64_t v35 = 0;
  *((unsigned char *)v25 + 8) = 1;
  uint64_t v26 = v25;
  uint64_t v27 = sub_4A98(&qword_2ED0B8);
  sub_6C090((uint64_t)v10, (uint64_t)v26 + *(int *)(v27 + 48), (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v28 = (uint64_t)v26 + *(int *)(v27 + 64);
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  sub_72068((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TextLockup);
  return sub_72068((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextLockup);
}

uint64_t sub_6E028()
{
  uint64_t v1 = __chkstk_darwin(v0);
  sub_6C090(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HighlightFrame);
  sub_6BDCC(&qword_2ECDE0, (void (*)(uint64_t))type metadata accessor for HighlightFrame);
  return sub_26C470();
}

uint64_t sub_6E0F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_6E12C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_6E13C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for HighlightFrameViewModel(0) + 28);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_6BDCC(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_6BDCC(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t sub_6E234@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_4A98(&qword_2EAEE8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_26A6E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v12);
  sub_6C090(v4, (uint64_t)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HighlightFrame);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  sub_6E4E8((uint64_t)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for HighlightFrame);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for ColorScheme.dark(_:), v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v7 + 36), v14, v10);
  *uint64_t v9 = KeyPath;
  uint64_t v20 = sub_4A98(&qword_2ECDF8);
  sub_B678((uint64_t)v9, (uint64_t)a2 + *(int *)(v20 + 36), &qword_2EAEE8);
  *a2 = sub_6E5D8;
  a2[1] = v18;
  swift_retain();
  sub_B6DC((uint64_t)v9, &qword_2EAEE8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_6E4E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_6E554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 < 2u)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (a8 - 4 >= 2)
  {
    if (a8 != 3) {
      return result;
    }
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:

  return swift_bridgeObjectRelease();
}

uint64_t sub_6E5DC(uint64_t a1)
{
  uint64_t result = sub_6BDCC(&qword_2ECE00, (void (*)(uint64_t))type metadata accessor for HighlightFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_6E634(uint64_t a1)
{
  uint64_t result = sub_6BDCC(&qword_2ECDE0, (void (*)(uint64_t))type metadata accessor for HighlightFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_6E68C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for HighlightCoverStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v7 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_26A6E0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_4A98(&qword_2EA940);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for HighlightCoverStyle(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    uint64_t v2 = a1 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v3 = sub_26A6E0();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v2, v3);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for HighlightCoverStyle(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    swift_retain();
    uint64_t v5 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_26A6E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_4A98(&qword_2EA940);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for HighlightCoverStyle(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_72068((uint64_t)a1, type metadata accessor for HighlightCoverStyle);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v5 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_26A6E0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = sub_4A98(&qword_2EA940);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for HighlightCoverStyle(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_26A6E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_4A98(&qword_2EA940);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for HighlightCoverStyle(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_72068((uint64_t)a1, type metadata accessor for HighlightCoverStyle);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_26A6E0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_4A98(&qword_2EA940);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_6EF60()
{
  v1[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_71B5C(319, (unint64_t *)&unk_2EAA08, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t initializeBufferWithCopyOfBuffer for HighlightFrameViewModel(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    char v13 = *(unsigned char *)(a2 + 56);
    sub_6F2B4(*(void *)a2, v7, v8, v9, v10, v11, v12, v13);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = v13;
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
    type metadata accessor for HighlightCoverStyle(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v15 = *v16;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v18 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v19 = (char *)v15 + v18;
      uint64_t v20 = (char *)v16 + v18;
      uint64_t v21 = sub_26A6E0();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_4A98(&qword_2EA940);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = *(int *)(a3 + 28);
    uint64_t v26 = a1 + v25;
    uint64_t v27 = a2 + v25;
    uint64_t v28 = sub_269BE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_6F2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result = a2;
  switch(a8)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 3:
      swift_bridgeObjectRetain();
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 4:
    case 5:
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for HighlightFrameViewModel(uint64_t a1, uint64_t a2)
{
  sub_6E554(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for HighlightCoverStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    uint64_t v5 = v4 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v6 = sub_26A6E0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_269BE0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t initializeWithCopy for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_6F2B4(*(void *)a2, v6, v7, v8, v9, v10, v11, v12);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  type metadata accessor for HighlightCoverStyle(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  void *v14 = *v15;
  if (EnumCaseMultiPayload == 1)
  {
    swift_retain();
    uint64_t v17 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v18 = (char *)v14 + v17;
    uint64_t v19 = (char *)v15 + v17;
    uint64_t v20 = sub_26A6E0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_4A98(&qword_2EA940);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = *(int *)(a3 + 28);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_6F2B4(*(void *)a2, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  unsigned __int8 v20 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v12;
  sub_6E554(v13, v14, v15, v16, v17, v18, v19, v20);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  if (a1 != a2)
  {
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (void *)(a2 + v21);
    sub_72068(a1 + v21, type metadata accessor for HighlightCoverStyle);
    type metadata accessor for HighlightCoverStyle(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v22 = *v23;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v25 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v26 = (char *)v22 + v25;
      uint64_t v27 = (char *)v23 + v25;
      uint64_t v28 = sub_26A6E0();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        uint64_t v30 = sub_4A98(&qword_2EA940);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = *(int *)(a3 + 28);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for HighlightCoverStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v8 = *v9;
    uint64_t v11 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    char v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_26A6E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_4A98(&qword_2EA940);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v6;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v7;
  sub_6E554(v8, v9, v10, v11, v12, v13, v14, v16);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_72068(a1 + v17, type metadata accessor for HighlightCoverStyle);
    uint64_t v20 = type metadata accessor for HighlightCoverStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v18 = *v19;
      uint64_t v21 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v22 = (char *)v18 + v21;
      uint64_t v23 = (char *)v19 + v21;
      uint64_t v24 = sub_26A6E0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_4A98(&qword_2EA940);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v27 = *(int *)(a3 + 28);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6FDD4);
}

uint64_t sub_6FDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 57);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for HighlightCoverStyle(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_269BE0();
      unsigned __int8 v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 28);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t storeEnumTagSinglePayload for HighlightFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6FF14);
}

uint64_t sub_6FF14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 57) = a2 + 1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for HighlightCoverStyle(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_269BE0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_7003C()
{
  uint64_t result = type metadata accessor for HighlightCoverStyle(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_269BE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for HighlightFrameViewModel.Kind(uint64_t a1)
{
  return sub_6E554(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for HighlightFrameViewModel.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_6F2B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for HighlightFrameViewModel.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_6F2B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  unsigned __int8 v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_6E554(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 initializeWithTake for CoverViewModel.Style(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HighlightFrameViewModel.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_6E554(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightFrameViewModel.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HighlightFrameViewModel.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_70384(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t sub_7038C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HighlightFrameViewModel.Kind()
{
  return &type metadata for HighlightFrameViewModel.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for HighlightFrame(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    long long v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_10E0C(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    v11[8] = v14;
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)v17;
    char v19 = v17[8];
    sub_10E0C(*(void *)v17, v19);
    *(void *)uint64_t v16 = v18;
    v16[8] = v19;
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = v22[8];
    sub_10E0C(*(void *)v22, v24);
    *(void *)uint64_t v21 = v23;
    v21[8] = v24;
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (uint64_t *)((char *)a1 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
    uint64_t v30 = a3[10];
    uint64_t v57 = a1;
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(uint64_t *)((char *)a2 + v30);
    uint64_t v34 = *((void *)v32 + 1);
    uint64_t v35 = *((void *)v32 + 2);
    uint64_t v36 = *((void *)v32 + 3);
    uint64_t v37 = *((void *)v32 + 4);
    uint64_t v38 = *((void *)v32 + 5);
    uint64_t v39 = *((void *)v32 + 6);
    char v40 = v32[56];
    swift_bridgeObjectRetain();
    sub_6F2B4(v33, v34, v35, v36, v37, v38, v39, v40);
    *(void *)uint64_t v31 = v33;
    *((void *)v31 + 1) = v34;
    *((void *)v31 + 2) = v35;
    *((void *)v31 + 3) = v36;
    *((void *)v31 + 4) = v37;
    *((void *)v31 + 5) = v38;
    *((void *)v31 + 6) = v39;
    v31[56] = v40;
    v31[57] = v32[57];
    uint64_t v41 = type metadata accessor for HighlightFrameViewModel(0);
    uint64_t v42 = *(int *)(v41 + 24);
    unint64_t v43 = &v31[v42];
    uint64_t v44 = &v32[v42];
    type metadata accessor for HighlightCoverStyle(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)unint64_t v43 = *(void *)v44;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v46 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v47 = &v43[v46];
      char v48 = &v44[v46];
      uint64_t v49 = sub_26A6E0();
      uint64_t v50 = *(void *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        uint64_t v51 = sub_4A98(&qword_2EA940);
        memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = *(int *)(v41 + 28);
    char v53 = &v31[v52];
    uint64_t v54 = &v32[v52];
    uint64_t v55 = sub_269BE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    return v57;
  }
  return (uint64_t *)v9;
}

uint64_t destroy for HighlightFrame(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_C374(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_C374(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[10];
  sub_6E554(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(unsigned char *)(v5 + 56));
  uint64_t v6 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  type metadata accessor for HighlightCoverStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    uint64_t v8 = v7 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v9 = sub_26A6E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v5 + *(int *)(v6 + 28);
  uint64_t v12 = sub_269BE0();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

void *initializeWithCopy for HighlightFrame(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10E0C(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  char v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = v14[8];
  sub_10E0C(*(void *)v14, v16);
  *(void *)uint64_t v13 = v15;
  v13[8] = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  char v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_10E0C(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  v18[8] = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  char v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  *char v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  uint64_t v27 = a3[10];
  uint64_t v54 = a1;
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a2 + v27);
  uint64_t v31 = *((void *)v29 + 1);
  uint64_t v32 = *((void *)v29 + 2);
  uint64_t v33 = *((void *)v29 + 3);
  uint64_t v34 = *((void *)v29 + 4);
  uint64_t v35 = *((void *)v29 + 5);
  uint64_t v36 = *((void *)v29 + 6);
  char v37 = v29[56];
  swift_bridgeObjectRetain();
  sub_6F2B4(v30, v31, v32, v33, v34, v35, v36, v37);
  *(void *)uint64_t v28 = v30;
  *((void *)v28 + 1) = v31;
  *((void *)v28 + 2) = v32;
  *((void *)v28 + 3) = v33;
  *((void *)v28 + 4) = v34;
  *((void *)v28 + 5) = v35;
  *((void *)v28 + 6) = v36;
  v28[56] = v37;
  v28[57] = v29[57];
  uint64_t v38 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v39 = *(int *)(v38 + 24);
  char v40 = &v28[v39];
  uint64_t v41 = &v29[v39];
  type metadata accessor for HighlightCoverStyle(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(void *)char v40 = *(void *)v41;
  if (EnumCaseMultiPayload == 1)
  {
    swift_retain();
    uint64_t v43 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v44 = &v40[v43];
    uint64_t v45 = &v41[v43];
    uint64_t v46 = sub_26A6E0();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      uint64_t v48 = sub_4A98(&qword_2EA940);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = *(int *)(v38 + 28);
  uint64_t v50 = &v28[v49];
  uint64_t v51 = &v29[v49];
  uint64_t v52 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  return v54;
}

void *assignWithCopy for HighlightFrame(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10E0C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_C374(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  char v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_10E0C(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  sub_C374(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_10E0C(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = v22[8];
  *(void *)uint64_t v22 = v24;
  v22[8] = v25;
  sub_C374(v26, v27);
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  uint64_t v34 = a3[10];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v70 = a2;
  uint64_t v71 = a1;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  uint64_t v38 = *((void *)v36 + 1);
  uint64_t v39 = *((void *)v36 + 2);
  uint64_t v40 = *((void *)v36 + 3);
  uint64_t v41 = *((void *)v36 + 4);
  uint64_t v42 = *((void *)v36 + 5);
  uint64_t v43 = *((void *)v36 + 6);
  char v44 = v36[56];
  sub_6F2B4(*(void *)v36, v38, v39, v40, v41, v42, v43, v44);
  uint64_t v45 = *(void *)v35;
  uint64_t v46 = *((void *)v35 + 1);
  uint64_t v47 = *((void *)v35 + 2);
  uint64_t v48 = *((void *)v35 + 3);
  uint64_t v49 = *((void *)v35 + 4);
  uint64_t v50 = *((void *)v35 + 5);
  uint64_t v51 = *((void *)v35 + 6);
  *(void *)uint64_t v35 = v37;
  *((void *)v35 + 1) = v38;
  *((void *)v35 + 2) = v39;
  *((void *)v35 + 3) = v40;
  *((void *)v35 + 4) = v41;
  *((void *)v35 + 5) = v42;
  *((void *)v35 + 6) = v43;
  unsigned __int8 v52 = v35[56];
  v35[56] = v44;
  sub_6E554(v45, v46, v47, v48, v49, v50, v51, v52);
  v35[57] = v36[57];
  uint64_t v53 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v54 = v53;
  if (v71 != v70)
  {
    uint64_t v55 = *(int *)(v53 + 24);
    uint64_t v56 = &v35[v55];
    uint64_t v57 = &v36[v55];
    sub_72068((uint64_t)&v35[v55], type metadata accessor for HighlightCoverStyle);
    type metadata accessor for HighlightCoverStyle(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)uint64_t v56 = *(void *)v57;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v59 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v60 = &v56[v59];
      uint64_t v61 = &v57[v59];
      uint64_t v62 = sub_26A6E0();
      uint64_t v63 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        uint64_t v64 = sub_4A98(&qword_2EA940);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v65 = *(int *)(v54 + 28);
  uint64_t v66 = &v35[v65];
  uint64_t v67 = &v36[v65];
  uint64_t v68 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 24))(v66, v67, v68);
  return v71;
}

char *initializeWithTake for HighlightFrame(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  char v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)char v16 = *(void *)v17;
  v16[8] = v17[8];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  uint64_t v18 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v19 = &a1[v18];
  char v20 = &a2[v18];
  long long v21 = *(_OWORD *)&a2[v18];
  long long v22 = *(_OWORD *)&a2[v18 + 16];
  long long v23 = *(_OWORD *)&a2[v18 + 32];
  *(_OWORD *)(v19 + 41) = *(_OWORD *)&a2[v18 + 41];
  *((_OWORD *)v19 + 1) = v22;
  *((_OWORD *)v19 + 2) = v23;
  *(_OWORD *)uint64_t v19 = v21;
  v19[57] = a2[v18 + 57];
  uint64_t v24 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = &v19[v25];
  char v27 = &v20[v25];
  uint64_t v28 = type metadata accessor for HighlightCoverStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v26 = *(void *)v27;
    uint64_t v29 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v30 = &v26[v29];
    uint64_t v31 = &v27[v29];
    uint64_t v32 = sub_26A6E0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_4A98(&qword_2EA940);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v35 = *(int *)(v24 + 28);
  uint64_t v36 = &v19[v35];
  uint64_t v37 = &v20[v35];
  uint64_t v38 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

char *assignWithTake for HighlightFrame(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    uint64_t v6 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_C374(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  uint64_t v18 = *(void *)v15;
  char v19 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  sub_C374(v18, v19);
  uint64_t v20 = a3[7];
  long long v21 = &a1[v20];
  long long v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  LOBYTE(v22) = v22[8];
  uint64_t v24 = *(void *)v21;
  char v25 = v21[8];
  *(void *)long long v21 = v23;
  v21[8] = (char)v22;
  sub_C374(v24, v25);
  uint64_t v26 = a3[8];
  char v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)char v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)&a2[v31 + 48];
  LOBYTE(v31) = a2[v31 + 56];
  uint64_t v35 = *(void *)v32;
  uint64_t v36 = *((void *)v32 + 1);
  uint64_t v37 = *((void *)v32 + 2);
  uint64_t v38 = *((void *)v32 + 3);
  uint64_t v39 = *((void *)v32 + 4);
  uint64_t v40 = *((void *)v32 + 5);
  uint64_t v41 = *((void *)v32 + 6);
  long long v42 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v42;
  unsigned __int8 v43 = v32[56];
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  *((void *)v32 + 6) = v34;
  v32[56] = v31;
  sub_6E554(v35, v36, v37, v38, v39, v40, v41, v43);
  v32[57] = v33[57];
  uint64_t v44 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v45 = v44;
  if (a1 != a2)
  {
    uint64_t v46 = *(int *)(v44 + 24);
    uint64_t v47 = &v32[v46];
    uint64_t v48 = &v33[v46];
    sub_72068((uint64_t)&v32[v46], type metadata accessor for HighlightCoverStyle);
    uint64_t v49 = type metadata accessor for HighlightCoverStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v47 = *(void *)v48;
      uint64_t v50 = *(int *)(sub_4A98(&qword_2ECDE8) + 48);
      uint64_t v51 = &v47[v50];
      unsigned __int8 v52 = &v48[v50];
      uint64_t v53 = sub_26A6E0();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        uint64_t v55 = sub_4A98(&qword_2EA940);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
  }
  uint64_t v56 = *(int *)(v45 + 28);
  uint64_t v57 = &v32[v56];
  uint64_t v58 = &v33[v56];
  uint64_t v59 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_717DC);
}

uint64_t sub_717DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for HighlightFrameViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for HighlightFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_71924);
}

uint64_t sub_71924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for HighlightFrameViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_71A58()
{
  sub_71B5C(319, (unint64_t *)&qword_2EABA0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for HighlightFrameViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_71B5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_26A6E0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_71BC0()
{
  unint64_t result = qword_2ECFF0;
  if (!qword_2ECFF0)
  {
    sub_7B0C(&qword_2ECDF8);
    sub_7C18(&qword_2ECFF8, &qword_2ED000);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECFF0);
  }
  return result;
}

uint64_t sub_71C88()
{
  unint64_t v1 = (int *)type metadata accessor for HighlightFrame(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v3 + v1[5]), *(unsigned char *)(v3 + v1[5] + 8));
  sub_C374(*(void *)(v3 + v1[6]), *(unsigned char *)(v3 + v1[6] + 8));
  sub_C374(*(void *)(v3 + v1[7]), *(unsigned char *)(v3 + v1[7] + 8));
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[10];
  sub_6E554(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(unsigned char *)(v5 + 56));
  uint64_t v6 = type metadata accessor for HighlightFrameViewModel(0);
  uint64_t v7 = v5 + *(int *)(v6 + 24);
  type metadata accessor for HighlightCoverStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    uint64_t v8 = v7 + *(int *)(sub_4A98(&qword_2ECDE8) + 48);
    uint64_t v9 = sub_26A6E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v5 + *(int *)(v6 + 28);
  uint64_t v12 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return swift_deallocObject();
}

uint64_t sub_71F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HighlightFrame(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_6C6C4(a1, v6, a2);
}

uint64_t sub_71FB0(uint64_t a1)
{
  return sub_71FE4(a1, sub_6DA20);
}

uint64_t sub_71FCC(uint64_t a1)
{
  return sub_71FE4(a1, sub_6DBBC);
}

uint64_t sub_71FE4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for HighlightFrame(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_72068(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_720C8()
{
  unint64_t result = qword_2ED0B0;
  if (!qword_2ED0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED0B0);
  }
  return result;
}

uint64_t ShelfGridBreakpoint.init(from:for:dynamicTypeSize:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  sub_269A70();
  double v9 = v8;
  if ((sub_26AB10() & 1) != 0 && v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v5 = v6;
  }
  swift_bridgeObjectRelease();
  sub_722A8(v7);
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    char v11 = *(unsigned char *)(v5 + 32);
    uint64_t v12 = (double *)(v5 + 40);
    do
    {
      if (*v12 <= v9) {
        char v11 = *((unsigned char *)v12 - 8);
      }
      v12 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_26AB40();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    *a3 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_26DA90(33);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = sub_26D710();
    sub_26D4E0(v15);
    swift_bridgeObjectRelease();
    uint64_t result = sub_26DBA0();
    __break(1u);
  }
  return result;
}

uint64_t sub_722A8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ShelfGridBreakpoint.resolveColumns(for:dynamicTypeSize:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  unsigned __int8 v4 = *v1;
  if ((sub_26AB10() & 1) != 0 && v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = v3;
    if (!*(void *)(v3 + 16)) {
      goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (!*(void *)(v2 + 16))
    {
LABEL_8:
      uint64_t v7 = 1;
      goto LABEL_9;
    }
  }
  unint64_t v5 = sub_9FE0(v4);
  if ((v6 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
LABEL_9:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_7237C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_26AB40();
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B320();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B4C0();
  sub_26A960();
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v25.origin.x = v12;
  v25.origin.y = v14;
  v25.size.width = v16;
  v25.size.height = v18;
  CGRectGetWidth(v25);
  uint64_t v19 = *(int *)(type metadata accessor for ShelfGridBreakpointViewModifier() + 24);
  uint64_t v20 = *(void *)(v1 + v19 + 8);
  uint64_t v21 = *(void *)(v2 + v19 + 16);
  uint64_t v22 = *(void *)(v2 + v19 + 24);
  v24[0] = *(void *)(v2 + v19);
  v24[1] = v20;
  void v24[2] = v21;
  void v24[3] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_72940(v21);
  sub_41AD8((uint64_t)v6);
  return ShelfGridBreakpoint.init(from:for:dynamicTypeSize:)(v24, (uint64_t)v6, a1);
}

uint64_t sub_72568()
{
  return sub_26C490();
}

uint64_t sub_725D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v12 = v11;
  sub_73844(v4, (uint64_t)v9);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  sub_738AC((uint64_t)v9, v14 + v13);
  sub_73844(v4, (uint64_t)v9);
  uint64_t v15 = swift_allocObject();
  sub_738AC((uint64_t)v9, v15 + v13);
  uint64_t v16 = sub_4A98(&qword_2ED180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a3, a1, v16);
  uint64_t result = sub_4A98(&qword_2ED188);
  CGFloat v18 = (void *)(a3 + *(int *)(result + 36));
  *CGFloat v18 = sub_73910;
  v18[1] = v14;
  _OWORD v18[2] = sub_73AE0;
  _OWORD v18[3] = v15;
  v18[4] = v10;
  v18[5] = v12;
  return result;
}

uint64_t View.shelfGridBreakpoint(_:gridType:maxContentWidth:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v28 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  int v25 = a4;
  uint64_t v10 = (int *)type metadata accessor for ShelfGridBreakpointViewModifier();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  char v15 = *((unsigned char *)a1 + 16);
  uint64_t v17 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v18 = a2[2];
  uint64_t v19 = a2[3];
  uint64_t *v12 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (char *)v12 + v10[5];
  *(void *)uint64_t v20 = v13;
  *((void *)v20 + 1) = v14;
  unsigned char v20[16] = v15;
  uint64_t v21 = (uint64_t *)((char *)v12 + v10[6]);
  *uint64_t v21 = v17;
  v21[1] = v16;
  v21[2] = v18;
  v21[3] = v19;
  uint64_t v22 = (char *)v12 + v10[7];
  *(void *)uint64_t v22 = a3;
  v22[8] = v25 & 1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_72940(v18);
  sub_26C030();
  return sub_72980((uint64_t)v12);
}

uint64_t type metadata accessor for ShelfGridBreakpointViewModifier()
{
  uint64_t result = qword_2ED138;
  if (!qword_2ED138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_72940(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_72980(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShelfGridBreakpointViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_729E0()
{
  unint64_t result = qword_2ED0C0;
  if (!qword_2ED0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED0C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfGridBreakpoint(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShelfGridBreakpoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x72B90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridBreakpoint()
{
  return &type metadata for ShelfGridBreakpoint;
}

uint64_t sub_72BC8()
{
  return swift_getWitnessTable();
}

unint64_t sub_72C34()
{
  unint64_t result = qword_2ED0C8;
  if (!qword_2ED0C8)
  {
    type metadata accessor for ShelfGridBreakpointViewModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED0C8);
  }
  return result;
}

uint64_t *sub_72C8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26AB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    v11[16] = v12[16];
    uint64_t v14 = (uint64_t *)((char *)a1 + v10);
    char v15 = (char *)a2 + v10;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v10 + 8);
    void *v14 = *(uint64_t *)((char *)a2 + v10);
    v14[1] = v16;
    uint64_t v18 = (uint64_t *)((char *)a2 + v10 + 16);
    uint64_t v17 = *v18;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      uint64_t v19 = *((void *)v15 + 3);
      _OWORD v14[2] = v17;
      v14[3] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v14 + 1) = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
  }
  return a1;
}

uint64_t sub_72E4C(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(v5 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_72F3C(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26AB40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  v9[16] = v10[16];
  uint64_t v12 = (void *)((char *)a1 + v8);
  uint64_t v13 = (char *)a2 + v8;
  uint64_t v14 = *(void *)((char *)a2 + v8 + 8);
  void *v12 = *(void *)((char *)a2 + v8);
  v12[1] = v14;
  uint64_t v16 = (void *)((char *)a2 + v8 + 16);
  uint64_t v15 = *v16;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v17 = *((void *)v13 + 3);
    void v12[2] = v15;
    _OWORD v12[3] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)v12 + 1) = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  return a1;
}

void *sub_730AC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC60);
    sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26AB40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  v8[16] = v9[16];
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[2];
  if (!v11[2])
  {
    if (v13)
    {
      v11[2] = v13;
      v11[3] = v12[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_12:
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    goto LABEL_13;
  }
  if (!v13)
  {
    sub_B6DC((uint64_t)(v11 + 2), &qword_2ED0D0);
    goto LABEL_12;
  }
  v11[2] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)uint64_t v15 = v17;
  return a1;
}

char *sub_732AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *(_OWORD *)v11;
  v10[16] = v11[16];
  *(_OWORD *)uint64_t v10 = v12;
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

char *sub_733BC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBC60);
    uint64_t v6 = sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  v9[16] = v10[16];
  uint64_t v11 = a3[6];
  long long v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_bridgeObjectRelease();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)v13 + 2);
  if (!*((void *)v12 + 2)) {
    goto LABEL_9;
  }
  if (!v14)
  {
    sub_B6DC((uint64_t)(v12 + 16), &qword_2ED0D0);
LABEL_9:
    *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
    goto LABEL_10;
  }
  *((void *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  *((void *)v12 + 3) = *((void *)v13 + 3);
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  return a1;
}

uint64_t sub_73574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_73588);
}

uint64_t sub_73588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED0D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_73650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_73664);
}

uint64_t sub_73664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2ED0D8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_73728()
{
  sub_737D0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_737D0()
{
  if (!qword_2ED148)
  {
    sub_26AB40();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2ED148);
    }
  }
}

uint64_t sub_73828()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_73844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfGridBreakpointViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_738AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfGridBreakpointViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_73910@<X0>(unsigned char *a1@<X8>)
{
  return sub_7237C(a1);
}

uint64_t sub_73988()
{
  uint64_t v1 = type metadata accessor for ShelfGridBreakpointViewModifier();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26AB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_73AE0()
{
  type metadata accessor for ShelfGridBreakpointViewModifier();

  return sub_72568();
}

unint64_t sub_73B54()
{
  unint64_t result = qword_2ED198;
  if (!qword_2ED198)
  {
    sub_7B0C(&qword_2ED188);
    sub_7C18(&qword_2ED1A0, &qword_2ED180);
    sub_7C18(&qword_2ED1A8, &qword_2ED1B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED198);
  }
  return result;
}

uint64_t LegacyPDFCoverEffect.init(cornerRadius:)@<X0>(double *a1@<X8>, double a2@<D0>)
{
  unint64_t v4 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for LegacyPDFCoverEffect() + 20));
  *unint64_t v4 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a1 = a2;
  return result;
}

uint64_t type metadata accessor for LegacyPDFCoverEffect()
{
  uint64_t result = qword_2ED260;
  if (!qword_2ED260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LegacyPDFCoverEffect.body(cover:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_4A98(&qword_2ED1B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LegacyPDFCoverEffect();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_75554(v3, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_73F40((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a2 = sub_73FA4;
  a2[1] = v15;
  return result;
}

uint64_t sub_73EC4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_26A940();
  double v7 = v6;
  double v9 = v8;
  *a3 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  a3[1] = v10;
  uint64_t v11 = sub_4A98(&qword_2ED2A8);
  return sub_73FA8(a1, a2, (uint64_t)a3 + *(int *)(v11 + 44), v7, v9);
}

uint64_t sub_73F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LegacyPDFCoverEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_73FA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v76 = a2;
  uint64_t v68 = a1;
  uint64_t v78 = a3;
  uint64_t v75 = sub_4A98(&qword_2ED2B0) - 8;
  __chkstk_darwin(v75);
  uint64_t v72 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_4A98(&qword_2ED2B8) - 8;
  uint64_t v9 = __chkstk_darwin(v74);
  long long v73 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v77 = (uint64_t)v66 - v11;
  uint64_t v12 = sub_26AC50() - 8;
  uint64_t v67 = v12;
  __chkstk_darwin(v12);
  unint64_t v14 = (void *)((char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_4A98(&qword_2ED2C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2ED2C8);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2ED2D0);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v71 = (uint64_t)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v70 = (uint64_t)v66 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v79 = (uint64_t)v66 - v30;
  __chkstk_darwin(v29);
  uint64_t v84 = (uint64_t)v66 - v31;
  uint64_t v32 = *a1;
  uint64_t v33 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v34 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v83 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v82 = sub_26B160();
  uint64_t v35 = *(void *)(v82 - 8);
  uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 104);
  uint64_t v36 = v35 + 104;
  v81(v33, v34, v82);
  uint64_t v69 = v36;
  char *v14 = v32;
  v14[1] = v32;
  uint64_t v80 = &type metadata accessor for RoundedRectangle;
  sub_75554((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v18[*(int *)(v16 + 64)] = 256;
  sub_755BC((uint64_t)v14);
  *(double *)&v66[1] = a4;
  *(double *)&v66[2] = a5;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v18, (uint64_t)v22, &qword_2ED2C0);
  uint64_t v37 = &v22[*(int *)(v20 + 44)];
  long long v38 = v86;
  *(_OWORD *)uint64_t v37 = v85;
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v87;
  sub_B6DC((uint64_t)v18, &qword_2ED2C0);
  [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.12];
  uint64_t v39 = sub_26C0C0();
  uint64_t v40 = v79;
  sub_B678((uint64_t)v22, v79, &qword_2ED2C8);
  uint64_t v41 = v40 + *(int *)(v24 + 44);
  *(void *)uint64_t v41 = v39;
  *(double *)(v41 + 8) = a4 / 618.0 * 20.0;
  *(void *)(v41 + 16) = 0;
  *(double *)(v41 + 24) = a4 / 618.0 * 6.0;
  sub_B6DC((uint64_t)v22, &qword_2ED2C8);
  sub_19CC4(v40, v84, &qword_2ED2D0);
  long long v42 = v68;
  uint64_t v43 = *v68;
  uint64_t v44 = v67;
  v81((char *)v14 + *(int *)(v67 + 28), v83, v82);
  char *v14 = v43;
  v14[1] = v43;
  sub_75554((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))v80);
  *(_WORD *)&v18[*(int *)(v16 + 64)] = 256;
  sub_755BC((uint64_t)v14);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v18, (uint64_t)v22, &qword_2ED2C0);
  uint64_t v45 = &v22[*(int *)(v20 + 44)];
  long long v46 = v89;
  *(_OWORD *)uint64_t v45 = v88;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v90;
  sub_B6DC((uint64_t)v18, &qword_2ED2C0);
  [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.08];
  uint64_t v47 = sub_26C0C0();
  uint64_t v48 = v70;
  sub_B678((uint64_t)v22, v70, &qword_2ED2C8);
  uint64_t v49 = v48 + *(int *)(v24 + 44);
  *(void *)uint64_t v49 = v47;
  *(double *)(v49 + 8) = a4 / 618.0 * 4.0;
  *(void *)(v49 + 16) = 0;
  *(double *)(v49 + 24) = a4 / 618.0;
  sub_B6DC((uint64_t)v22, &qword_2ED2C8);
  uint64_t v50 = v79;
  sub_19CC4(v48, v79, &qword_2ED2D0);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v51 = sub_4A98(&qword_2ED1B8);
  uint64_t v52 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v72, v76, v51);
  uint64_t v53 = (_OWORD *)(v52 + *(int *)(v75 + 44));
  long long v54 = v92;
  *uint64_t v53 = v91;
  v53[1] = v54;
  v53[2] = v93;
  uint64_t v55 = *v42;
  v81((char *)v14 + *(int *)(v44 + 28), v83, v82);
  char *v14 = v55;
  v14[1] = v55;
  uint64_t v56 = (uint64_t)v73;
  uint64_t v57 = (uint64_t)&v73[*(int *)(v74 + 44)];
  sub_75554((uint64_t)v14, v57, (uint64_t (*)(void))v80);
  *(_WORD *)(v57 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678(v52, v56, &qword_2ED2B0);
  sub_755BC((uint64_t)v14);
  sub_B6DC(v52, &qword_2ED2B0);
  uint64_t v58 = v77;
  sub_19CC4(v56, v77, &qword_2ED2B8);
  uint64_t v59 = v84;
  sub_B678(v84, v48, &qword_2ED2D0);
  uint64_t v60 = v50;
  uint64_t v61 = v50;
  uint64_t v62 = v71;
  sub_B678(v60, v71, &qword_2ED2D0);
  sub_B678(v58, v56, &qword_2ED2B8);
  uint64_t v63 = v78;
  sub_B678(v48, v78, &qword_2ED2D0);
  uint64_t v64 = sub_4A98(&qword_2ED2D8);
  sub_B678(v62, v63 + *(int *)(v64 + 48), &qword_2ED2D0);
  sub_B678(v56, v63 + *(int *)(v64 + 64), &qword_2ED2B8);
  sub_B6DC(v58, &qword_2ED2B8);
  sub_B6DC(v61, &qword_2ED2D0);
  sub_B6DC(v59, &qword_2ED2D0);
  sub_B6DC(v56, &qword_2ED2B8);
  sub_B6DC(v62, &qword_2ED2D0);
  return sub_B6DC(v48, &qword_2ED2D0);
}

uint64_t LegacyPDFCoverEffect.shape.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (char *)a1 + *(int *)(sub_26AC50() + 20);
  uint64_t v5 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v6 = sub_26B160();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  *a1 = v3;
  a1[1] = v3;
  return result;
}

uint64_t sub_748CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_748E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_74904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_4A98(&qword_2ED1B8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_75554(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_73F40((uint64_t)v14, v17 + v15);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_73FA4;
  a3[1] = v17;
  return result;
}

uint64_t sub_74AEC(uint64_t a1)
{
  uint64_t result = sub_75278(&qword_2ED200, (void (*)(uint64_t))type metadata accessor for LegacyPDFCoverEffect);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LegacyPDFCoverEffect(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    double v7 = (uint64_t *)((char *)a2 + v5);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for LegacyPDFCoverEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26A6E0();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for LegacyPDFCoverEffect(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    void *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LegacyPDFCoverEffect(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_B6DC((uint64_t)a1 + v4, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      void *v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for LegacyPDFCoverEffect(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LegacyPDFCoverEffect(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_B6DC((uint64_t)a1 + v4, &qword_2EA970);
    uint64_t v7 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyPDFCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7507C);
}

uint64_t sub_7507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_4A98(&qword_2EAB20);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for LegacyPDFCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_75104);
}

uint64_t sub_75104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_7517C()
{
  sub_5501C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_7521C()
{
  unint64_t result = qword_2ED298;
  if (!qword_2ED298)
  {
    sub_7B0C(&qword_2ED2A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED298);
  }
  return result;
}

uint64_t sub_75278(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_752C4()
{
  uint64_t v1 = (int *)(type metadata accessor for LegacyPDFCoverEffect() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_4A98(&qword_2ED1B8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v0 + v1[7] + v2;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_7546C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LegacyPDFCoverEffect() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_4A98(&qword_2ED1B8) - 8);
  uint64_t v7 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_73EC4((uint64_t *)(v1 + v4), v7, a1);
}

uint64_t sub_75554(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_755BC(uint64_t a1)
{
  uint64_t v2 = sub_26AC50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PlaceholderTextView.PlaceholderSize.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 30) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (result == 20) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (result == 10) {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t PlaceholderTextView.PlaceholderSize.rawValue.getter()
{
  return 10 * *v0 + 10;
}

uint64_t sub_75658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_756CC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_75738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_757A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_75818@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return PlaceholderTextView.PlaceholderSize.init(rawValue:)(*a1, a2);
}

uint64_t sub_75820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PlaceholderTextView.PlaceholderSize.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t PlaceholderTextView.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_75898(a1, a2);
  uint64_t result = sub_4A98(&qword_2ED2E8);
  unint64_t v4 = (uint64_t (**)(uint64_t))(a2 + *(int *)(result + 28));
  *unint64_t v4 = sub_75900;
  v4[1] = 0;
  return result;
}

uint64_t sub_75898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2ED2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_75900(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A160();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_26A170();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_78280();
  uint64_t v13 = sub_26C470();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v13;
}

uint64_t PlaceholderTextView.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = type metadata accessor for PlaceholderTextView.ContentType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t v15 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v15 + 2) = a4;
  *((void *)v15 + 3) = a5;
  *((void *)v15 + 4) = a6;
  *((void *)v15 + 5) = a2;
  *((void *)v15 + 6) = a3;
  uint64_t result = type metadata accessor for PlaceholderTextView();
  uint64_t v17 = (uint64_t (**)(uint64_t))(a7 + *(int *)(result + 28));
  *uint64_t v17 = sub_75CD8;
  v17[1] = v15;
  return result;
}

uint64_t type metadata accessor for PlaceholderTextView.ContentType()
{
  return sub_129B4();
}

uint64_t sub_75BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  uint64_t v11 = sub_781B8((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
  return v11;
}

uint64_t sub_75CA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_75CD8(uint64_t a1)
{
  return sub_75BBC(a1, v1[5], v1[6], v1[2], v1[3]);
}

uint64_t type metadata accessor for PlaceholderTextView()
{
  return sub_129B4();
}

uint64_t PlaceholderTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_26AC30();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_4A98(&qword_2EBA50);
  uint64_t v34 = *(void *)(v36 - 8);
  uint64_t v7 = __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v31 = (char *)&v30 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2ED2F0);
  __chkstk_darwin(v35);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceholderTextView.ContentType();
  __chkstk_darwin(v18);
  uint64_t v20 = (unsigned __int8 *)&v30 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v30 - v19, v2, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v44._countAndFlagsBits = 32;
      v44._object = (void *)0xE100000000000000;
      uint64_t v40 = (void *)sub_26D550(v44, 10 * *v20 + 10);
      uint64_t v41 = v23;
      char v42 = 0;
      uint64_t v43 = &_swiftEmptyArrayStorage;
      sub_26AC10();
      sub_26C070();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
      sub_3A380((uint64_t)v40, (uint64_t)v41, v42);
      swift_bridgeObjectRelease();
      uint64_t v24 = v34;
      uint64_t v25 = v31;
      uint64_t v26 = v36;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v9, v36);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v17, v25, v26);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2ED2F8);
      sub_76318();
      uint64_t v40 = &type metadata for Text;
      uint64_t v41 = &protocol witness table for Text;
      swift_getOpaqueTypeConformance2();
      sub_26B2F0();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    }
    else
    {
      uint64_t v38 = 0;
      char v39 = 0;
      sub_26B2F0();
      char v29 = (char)v41;
      *(void *)uint64_t v17 = v40;
      v17[8] = v29;
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2ED2F8);
      sub_76318();
      uint64_t v40 = &type metadata for Text;
      uint64_t v41 = &protocol witness table for Text;
      swift_getOpaqueTypeConformance2();
      return sub_26B2F0();
    }
  }
  else
  {
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v13 + 32))(v15, v20, v12);
    uint64_t v38 = (*(uint64_t (**)(char *))(v2 + *(int *)(a1 + 28)))(v15);
    char v39 = 1;
    swift_retain();
    sub_26B2F0();
    char v28 = (char)v41;
    *(void *)uint64_t v17 = v40;
    v17[8] = v28;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2ED2F8);
    sub_76318();
    uint64_t v40 = &type metadata for Text;
    uint64_t v41 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t type metadata accessor for PlaceholderTextView.PlaceholderSize()
{
  return sub_129B4();
}

unint64_t sub_76318()
{
  unint64_t result = qword_2ED300[0];
  if (!qword_2ED300[0])
  {
    sub_7B0C(&qword_2ED2F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2ED300);
  }
  return result;
}

uint64_t sub_7638C()
{
  return swift_getWitnessTable();
}

uint64_t sub_763A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_763F0()
{
  uint64_t result = type metadata accessor for PlaceholderTextView.ContentType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned __int8 *sub_7648C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 1uLL) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) != 0 && (v6 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v9 = *(void *)__src;
    *(void *)uint64_t v4 = *(void *)__src;
    uint64_t v4 = (unsigned __int8 *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v10 = __src[v6];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *__src;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)__src;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 2;
          unsigned int v10 = v13 + 2;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
      *__dst = *__src;
      __dst[v6] = 1;
    }
    else if (v10)
    {
      memcpy(__dst, __src, v6 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      v4[v6] = 0;
    }
    uint64_t v15 = (uint64_t *)((unint64_t)&__src[v6 + 8] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = (void *)((unint64_t)&v4[v6 + 8] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = v17;
    v18[1] = v16;
  }
  swift_retain();
  return v4;
}

uint64_t sub_76648(unsigned __int8 *a1, uint64_t a2)
{
  if (*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_13;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_13:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        goto LABEL_17;
    }
  }
  if (!v3) {
    (*(void (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
  }
LABEL_17:

  return swift_release();
}

unsigned __int8 *sub_7677C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = __src[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *__dst = *__src;
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
    __dst[v5] = 0;
  }
  unsigned int v11 = (uint64_t *)((unint64_t)&__src[v5 + 8] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  int v14 = (void *)((unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8);
  void *v14 = v13;
  v14[1] = v12;
  swift_retain();
  return __dst;
}

unsigned __int8 *sub_768F8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst != __src)
  {
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          goto LABEL_18;
      }
    }
    if (!v8) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
LABEL_18:
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *__dst = *__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 1) {
    unint64_t v18 = 1;
  }
  unint64_t v19 = v18 + 8;
  uint64_t v20 = (void *)((unint64_t)&__dst[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((unint64_t)&__src[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  return __dst;
}

unsigned __int8 *sub_76B64(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = __src[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *__dst = *__src;
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst, __src);
    __dst[v5] = 0;
  }
  *(_OWORD *)((unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v5 + 8] & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

unsigned __int8 *sub_76CDC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst != __src)
  {
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          goto LABEL_18;
      }
    }
    if (!v8) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
LABEL_18:
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *__dst = *__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 1) {
    unint64_t v18 = 1;
  }
  *(_OWORD *)((unint64_t)&__dst[v18 + 8] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v18 + 8] & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return __dst;
}

uint64_t sub_76F40(_DWORD *a1, int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= 1) {
    unint64_t v3 = 1;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v7 = v6 & 0xFFFFFFF8;
  unsigned int v8 = a2 - 2147483646;
  if ((v6 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = 2;
  }
  if (v8 >= 0x10000) {
    int v9 = 4;
  }
  else {
    int v9 = 2;
  }
  if (v8 < 0x100) {
    int v10 = 1;
  }
  else {
    int v10 = v9;
  }
  if (v10 == 4)
  {
    int v11 = *(_DWORD *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }
  else if (v10 == 2)
  {
    int v11 = *(unsigned __int16 *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }
  else
  {
    int v11 = *((unsigned __int8 *)a1 + v6);
    if (!v11)
    {
LABEL_5:
      unint64_t v4 = *(void *)(((unint64_t)a1 + v3 + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v4 >= 0xFFFFFFFF) {
        LODWORD(v4) = -1;
      }
      return (v4 + 1);
    }
  }
  int v12 = v11 - 1;
  if (v7)
  {
    int v12 = 0;
    LODWORD(v7) = *a1;
  }
  return (v7 | v12) ^ 0x80000000;
}

void sub_77018(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 1) {
    unint64_t v5 = 1;
  }
  size_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (a3 < 0)
  {
    unsigned int v8 = a3 - 2147483646;
    if ((v5 & 0xFFFFFFF8) != 0xFFFFFFE8) {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      int v9 = 4;
    }
    else {
      int v9 = 2;
    }
    if (v8 < 0x100) {
      int v7 = 1;
    }
    else {
      int v7 = v9;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v7 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v7)
      {
        case 1:
          a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v6] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)((unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if ((v5 & 0xFFFFFFF8) == 0xFFFFFFE8) {
    int v10 = a2 - 0x7FFFFFFF;
  }
  else {
    int v10 = 1;
  }
  if ((v5 & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    unsigned int v11 = a2 ^ 0x80000000;
    bzero(a1, v6);
    *(_DWORD *)a1 = v11;
  }
  switch(v7)
  {
    case 1:
      a1[v6] = v10;
      break;
    case 2:
      *(_WORD *)&a1[v6] = v10;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x7716CLL);
    case 4:
      *(_DWORD *)&a1[v6] = v10;
      break;
    default:
      return;
  }
}

uint64_t sub_77194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_7719C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x77268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_77290()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_77324(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 > 7 || (*(_DWORD *)(v4 + 80) & 0x100000) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    void *v3 = *(void *)a2;
    int v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_22;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_22:
          int v14 = (v13 | (v11 << (8 * v5))) + 2;
          unsigned int v10 = v13 + 2;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
      *__dst = *a2;
      __dst[v5] = 1;
    }
    else if (v10)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(unsigned char *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_774A8(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 1) {
    unint64_t v2 = 1;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        return result;
    }
  }
  if (!v3) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_7759C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *__dst = *a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_776E4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          goto LABEL_18;
      }
    }
    if (!v8) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
LABEL_18:
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *__dst = *__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_77900(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *__dst = *a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_77A48(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          goto LABEL_18;
      }
    }
    if (!v8) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
LABEL_18:
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *__dst = *__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_77C64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v3 + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_23;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 < 2)
    {
LABEL_23:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_23;
  }
LABEL_15:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_77D94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 1) {
    unint64_t v5 = 1;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x77F58);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_77F80(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(void *)(v2 + 64) <= 1uLL) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_13;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_13:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_78034(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    size_t v4 = 1;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unint64_t sub_7810C()
{
  unint64_t result = qword_2ED488;
  if (!qword_2ED488)
  {
    sub_7B0C(&qword_2ED490);
    sub_76318();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED488);
  }
  return result;
}

uint64_t sub_781B8(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_26C470();
}

unint64_t sub_78280()
{
  unint64_t result = qword_2EC040;
  if (!qword_2EC040)
  {
    sub_26A160();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC040);
  }
  return result;
}

uint64_t AsyncResourceImage.init(resource:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  type metadata accessor for ImageResourceLoader();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  sub_4A98(&qword_2EC2A8);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 28) = 0;
  *(void *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 24) = 0;
  *(void *)(v8 + 24) = v9;
  swift_retain();
  sub_269A40();
  sub_26C340();
  uint64_t result = swift_release();
  *a4 = a2;
  a4[1] = a3;
  a4[2] = a1;
  a4[3] = v11;
  a4[4] = v12;
  return result;
}

uint64_t type metadata accessor for ImageResourceLoader()
{
  uint64_t result = qword_2ED558;
  if (!qword_2ED558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AsyncResourceImage.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  unsigned int v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_26ABD0();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  char v29 = (char *)v27 - v7;
  uint64_t v8 = sub_26ABD0();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v30 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)v27 - v11;
  uint64_t v12 = *v2;
  v27[1] = v2[1];
  char v28 = v12;
  unsigned int v14 = v2[4];
  uint64_t v41 = v2[3];
  unsigned int v13 = v41;
  char v42 = v14;
  sub_4A98(&qword_2ED4A0);
  sub_26C350();
  uint64_t v15 = v43;
  swift_getKeyPath();
  uint64_t v41 = (void (*)(void *))v15;
  sub_78B5C();
  sub_269A10();
  swift_release();
  int v16 = *(void **)(v15 + 16);
  id v17 = v16;
  swift_release();
  v28(v16);

  uint64_t v41 = v13;
  char v42 = v14;
  sub_26C350();
  uint64_t v18 = *(void *)(a1 + 24);
  unint64_t v19 = v29;
  sub_26C040();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v4);
  uint64_t v41 = v13;
  char v42 = v14;
  sub_26C350();
  uint64_t v39 = v18;
  uint64_t v40 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v20 = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = v30;
  sub_26BCD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v20);
  uint64_t v37 = WitnessTable;
  uint64_t v38 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = v32;
  sub_CCCC(v22, v8, v23);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v35 + 8);
  v25(v22, v8);
  sub_CCCC(v24, v8, v23);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v8);
}

void sub_78810(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 24);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_79510(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_78878()
{
  sub_4A98(&qword_2ED4A0);
  sub_26C350();
  uint64_t v0 = swift_unknownObjectRetain();
  sub_78E68(v0);
  return swift_release();
}

uint64_t sub_788D8(uint64_t result)
{
  uint64_t v2 = *(void **)v1;
  if (!result)
  {
    if (!v2) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v3 = (void *)result;
  if (v2) {
    BOOL v4 = result == (void)v2;
  }
  else {
    BOOL v4 = 0;
  }
  if (!v4)
  {
    [(id)swift_unknownObjectRetain() removeInterest];
    if (*(unsigned char *)(v1 + 8) == 1) {
      [v3 removeNonVolatileInterest];
    }
    uint64_t result = swift_unknownObjectRelease();
    if (v2)
    {
LABEL_9:
      [(id)swift_unknownObjectRetain() addInterest];
      if (*(unsigned char *)(v1 + 8) == 1) {
        [v2 addNonVolatileInterest];
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void *sub_789A8()
{
  swift_getKeyPath();
  sub_78B5C();
  sub_269A10();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

id sub_78A20@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_78B5C();
  sub_269A10();
  swift_release();
  BOOL v4 = *(void **)(v3 + 16);
  *a2 = v4;

  return v4;
}

void sub_78AAC(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_78B5C();
  id v2 = v1;
  sub_269A00();
  swift_release();
}

unint64_t sub_78B5C()
{
  unint64_t result = qword_2ED4A8[0];
  if (!qword_2ED4A8[0])
  {
    type metadata accessor for ImageResourceLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2ED4A8);
  }
  return result;
}

void sub_78BB8()
{
  sub_78810(v0);
}

uint64_t sub_78BC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_78C04()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_78C50(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_78CB0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_78D40(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_78DA0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_78DE8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncResourceImage()
{
  return sub_129B4();
}

uint64_t sub_78E48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

void sub_78E68(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  uint64_t v4 = (id *)&v3[4];
  uint64_t v5 = v3 + 7;
  os_unfair_lock_lock(v3 + 7);
  sub_7A034(v4, v11);
  os_unfair_lock_unlock(v5);
  if (v11[0] == 1)
  {
    if (a1)
    {
      id v6 = [(id)swift_unknownObjectRetain() image];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(void *)uint64_t v11 = v1;
        sub_78B5C();
        id v9 = v7;
        sub_269A00();
        swift_unknownObjectRelease_n();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      uint64_t v10 = swift_getKeyPath();
      __chkstk_darwin(v10);
      *(void *)uint64_t v11 = v1;
      sub_78B5C();
      sub_269A00();
      swift_release();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

id *sub_7906C@<X0>(id *result@<X0>, id a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  id v6 = result;
  id v8 = *result;
  if (*result)
  {
    if (!a2 || v8 != a2)
    {
      [*result removeWithObserver:a3];
      if (!a2) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
LABEL_9:
    char v9 = 0;
    goto LABEL_10;
  }
  if (!a2) {
    goto LABEL_9;
  }
LABEL_7:
  [a2 addWithObserver:a3];
LABEL_8:
  *id v6 = a2;
  swift_unknownObjectRetain();
  sub_788D8((uint64_t)v8);
  unint64_t result = (id *)swift_unknownObjectRelease();
  char v9 = 1;
LABEL_10:
  *a4 = v9;
  return result;
}

void **sub_79134(void **result)
{
  uint64_t v1 = *result;
  *unint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = result;
    [(id)swift_unknownObjectRetain() removeInterest];
    if ((_BYTE)v2[1]) {
      [v1 removeNonVolatileInterest];
    }
    return (void **)swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t sub_791A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v3 = (void **)&v2[4];
  uint64_t v4 = v2 + 7;
  os_unfair_lock_lock(v2 + 7);
  sub_79134(v3);
  os_unfair_lock_unlock(v4);

  swift_release();
  uint64_t v5 = v1 + OBJC_IVAR____TtC7BooksUIP33_9B0EA36F259AEF224C359BD0BEB5D46019ImageResourceLoader___observationRegistrar;
  uint64_t v6 = sub_269A50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_79298()
{
  return type metadata accessor for ImageResourceLoader();
}

uint64_t sub_792A0()
{
  uint64_t result = sub_269A50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_79348()
{
  unint64_t v1 = (void *)v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 7;
  os_unfair_lock_lock(v2 + 7);
  sub_7949C(v3, &v8);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v8;
  swift_getKeyPath();
  id v8 = v1;
  sub_78B5C();
  sub_269A10();
  swift_release();
  if (v1[2])
  {
  }
  else if (v5)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    id v8 = v1;
    id v7 = v5;
    sub_269A00();

    swift_release();
  }
}

id sub_7949C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)(a1 + 8) = 1;
  id v3 = *(id *)a1;
  if (*(void *)a1)
  {
    [*(id *)a1 addNonVolatileInterest];
    id result = [v3 image];
  }
  else
  {
    id result = 0;
  }
  *a2 = result;
  return result;
}

id sub_79510(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 0;
  id result = *(id *)a1;
  if (result) {
    return [result removeNonVolatileInterest];
  }
  return result;
}

uint64_t sub_7954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[3] = a4;
  sub_26D6D0();
  v6[6] = sub_26D6C0();
  uint64_t v8 = sub_26D6B0();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_795E8, v8, v7);
}

uint64_t sub_795E8()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 24);
  id v3 = v2 + 4;
  uint64_t v4 = v2 + 7;
  os_unfair_lock_lock(v2 + 7);
  sub_78E48(v3, &v37);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v37;
  if (v37)
  {
    uint64_t v6 = v0[3];
    swift_unknownObjectRelease();
    if (v6 == v5)
    {
      uint64_t v7 = v0[4];
      swift_getKeyPath();
      v0[2] = v7;
      sub_78B5C();
      sub_269A10();
      swift_release();
      uint64_t v8 = *(void **)(v7 + 16);
      char v9 = (void *)v0[5];
      if (!v8 || !v9)
      {
        uint64_t v15 = v0[4];
        swift_getKeyPath();
        uint64_t v16 = swift_task_alloc();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v9;
        v0[2] = v15;
        id v17 = v9;
        sub_269A00();

        swift_release();
LABEL_18:
        swift_task_dealloc();
        goto LABEL_19;
      }
      id v10 = v8;
      id v11 = v9;
      id v12 = [v10 CGImage];
      id v13 = [v11 CGImage];
      id v14 = v13;
      if (v12)
      {

        if (v14)
        {

          if (v12 == v14)
          {
LABEL_12:
            [v10 alignmentRectInsets];
            double v19 = v18;
            double v21 = v20;
            double v23 = v22;
            double v25 = v24;
            [v11 alignmentRectInsets];
            if (v19 == v29 && v21 == v26 && v23 == v27 && v25 == v28)
            {

              goto LABEL_19;
            }
          }
        }
      }
      else
      {
        if (!v13) {
          goto LABEL_12;
        }
      }
      uint64_t v36 = v10;
      uint64_t v30 = v0[4];
      uint64_t v31 = v0[5];
      swift_getKeyPath();
      uint64_t v32 = swift_task_alloc();
      *(void *)(v32 + 16) = v30;
      *(void *)(v32 + 24) = v31;
      v0[2] = v30;
      id v33 = v11;
      sub_269A00();

      swift_release();
      goto LABEL_18;
    }
  }
LABEL_19:
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_79A94()
{
  return swift_getWitnessTable();
}

uint64_t destroy for ImageResourceContainer()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

void *_s7BooksUI22ImageResourceContainerVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ImageResourceContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ImageResourceContainer(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ImageResourceContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageResourceContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageResourceContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageResourceContainer()
{
  return &type metadata for ImageResourceContainer;
}

uint64_t initializeBufferWithCopyOfBuffer for ImageResourceLoaderState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for ImageResourceLoaderState()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for ImageResourceLoaderState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for SingleThumbnailStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for ImageResourceLoaderState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageResourceLoaderState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageResourceLoaderState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageResourceLoaderState()
{
  return &type metadata for ImageResourceLoaderState;
}

uint64_t sub_79EE4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_79F34(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *char v9 = v2;
  v9[1] = sub_12134;
  return sub_7954C(a1, v4, v5, v6, v7, v8);
}

void sub_79FFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v2;
  id v4 = v2;
}

id *sub_7A034@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  return sub_7906C(a1, *(id *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_7A050()
{
}

uint64_t _CodeAnyComponentModel_KeyedBy.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t _CodeAnyComponentModel_KeyedBy.wrappedValue.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _CodeAnyComponentModel_KeyedBy.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t _CodeAnyComponentModel_KeyedBy.description.getter()
{
  return 0;
}

uint64_t _CodeAnyComponentModel_KeyedBy.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_7A234();
  sub_26D2B0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  sub_4A98(&qword_2EADC0);
  uint64_t v6 = sub_26D290();
  swift_bridgeObjectRelease();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *a2 = v6;
  return result;
}

unint64_t sub_7A234()
{
  unint64_t result = qword_2ED668[0];
  if (!qword_2ED668[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2ED668);
  }
  return result;
}

uint64_t sub_7A288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C224(a1, a2);
}

uint64_t sub_7A2B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return _CodeAnyComponentModel_KeyedBy.init(from:)(a1, a2);
}

uint64_t _CodeAnyComponentModel_KeyedBy<>.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_7A234();
  uint64_t v4 = sub_26D260();
  uint64_t v5 = sub_7A354(v4);
  swift_bridgeObjectRelease();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *a2 = v5;
  return result;
}

uint64_t sub_7A354(uint64_t a1)
{
  sub_4A98(&qword_2ED6F0);
  uint64_t result = sub_26DBB0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_7A590(*(void *)(v26 + 56) + 40 * i, (uint64_t)v25);
    sub_C224((uint64_t)v25, (uint64_t)v24);
    swift_bridgeObjectRetain();
    sub_7A5EC((uint64_t)v25);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    double v18 = (void *)(v3[6] + 16 * i);
    *double v18 = v17;
    v18[1] = v16;
    uint64_t result = sub_AD44(v24, v3[7] + 40 * i);
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v23) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v23) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v23) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _CodeAnyComponentModel_KeyedBy()
{
  return sub_129B4();
}

uint64_t sub_7A590(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_7A5EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_7A640@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  *a2 = sub_26C620();
  a2[1] = v4;
  uint64_t v5 = sub_4A98(&qword_2ED7A0);
  return sub_7A6A0(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_7A6A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v57 = sub_4A98(&qword_2ED7A8);
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  long long v54 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_4A98(&qword_2ED7B0);
  uint64_t v60 = *(void *)(v56 - 8);
  uint64_t v4 = __chkstk_darwin(v56);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v51 - v7;
  uint64_t v8 = sub_4A98(&qword_2ED798);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = v55;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v51 - v12;
  unint64_t v13 = *(void (**)(void))(v9 + 16);
  uint64_t v51 = v9 + 16;
  uint64_t v52 = v13;
  uint64_t v15 = v14;
  v13();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 8);
  swift_retain();
  sub_26C7C0();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_26C7D0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_26A930();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v26 = v78;
  char v27 = v79;
  uint64_t v28 = v80;
  char v29 = v81;
  uint64_t v30 = v82;
  uint64_t v31 = v83;
  char v32 = sub_26B770();
  uint64_t v63 = v16;
  uint64_t v64 = 0x3FF0000000000000;
  uint64_t v65 = v17;
  uint64_t v66 = v19;
  uint64_t v67 = v21;
  uint64_t v68 = v23;
  uint64_t v69 = v25;
  uint64_t v70 = 0;
  uint64_t v71 = v26;
  char v72 = v27;
  uint64_t v73 = v28;
  char v74 = v29;
  uint64_t v75 = v30;
  uint64_t v76 = v31;
  char v77 = v32;
  sub_4A98(&qword_2ED7B8);
  sub_26AC70();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_26F990;
  sub_26AC60();
  uint64_t v33 = sub_4A98(&qword_2ED7C0);
  uint64_t v34 = sub_7BA94(&qword_2ED7C8, &qword_2ED7C0, (void (*)(void))sub_7BA64);
  uint64_t v35 = v54;
  sub_26BE10();
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for ProgressiveBlurToolbarModifier();
  uint64_t v63 = v33;
  uint64_t v64 = v34;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v57;
  sub_26BF50();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v36);
  uint64_t v37 = v60;
  uint64_t v38 = v62;
  uint64_t v39 = v56;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v62, v6, v56);
  uint64_t v40 = v61;
  uint64_t v41 = v53;
  char v42 = v52;
  ((void (*)(char *, char *, uint64_t))v52)(v61, v53, v15);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  Swift::String v44 = v38;
  uint64_t v45 = v39;
  v43(v6, v44, v39);
  uint64_t v46 = v59;
  ((void (*)(uint64_t, char *, uint64_t))v42)(v59, v40, v15);
  uint64_t v47 = sub_4A98(&qword_2ED7E8);
  v43((char *)(v46 + *(int *)(v47 + 48)), v6, v45);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v60 + 8);
  v48(v62, v45);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v55 + 8);
  v49(v41, v15);
  v48(v6, v45);
  return ((uint64_t (*)(char *, uint64_t))v49)(v61, v15);
}

uint64_t sub_7ACC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2ED798);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_7B738(v4, (uint64_t)v9);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t result = sub_7B918((uint64_t)v9, v15 + v14);
  *a3 = sub_7B97C;
  a3[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v15;
  return result;
}

uint64_t View.progressiveBlurToolbar(blurAdditionalHeight:blurFillColor:blurRadius:toolbarTitleDisplayMode:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for ProgressiveBlurToolbarModifier();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v11[*(int *)(v9 + 28)];
  uint64_t v13 = sub_26B0D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a2, v13);
  *(double *)uint64_t v11 = a3;
  *((void *)v11 + 1) = a1;
  *((double *)v11 + 2) = a4;
  swift_retain();
  sub_26C030();
  return sub_7B004((uint64_t)v11);
}

uint64_t type metadata accessor for ProgressiveBlurToolbarModifier()
{
  uint64_t result = qword_2ED758;
  if (!qword_2ED758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7B004(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ProgressiveBlurToolbarModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7B060()
{
  return swift_getWitnessTable();
}

unint64_t sub_7B0CC()
{
  unint64_t result = qword_2ED6F8;
  if (!qword_2ED6F8)
  {
    type metadata accessor for ProgressiveBlurToolbarModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED6F8);
  }
  return result;
}

uint64_t *sub_7B124(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_26B0D0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_7B214(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_26B0D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_7B28C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_26B0D0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_7B32C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26B0D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_7B3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_26B0D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_7B454(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26B0D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_7B4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7B504);
}

uint64_t sub_7B504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_26B0D0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_7B5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7B5C8);
}

uint64_t sub_7B5C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_26B0D0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_7B670()
{
  uint64_t result = sub_26B0D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_7B71C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7B738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProgressiveBlurToolbarModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7B79C()
{
  uint64_t v1 = sub_4A98(&qword_2ED798);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)(type metadata accessor for ProgressiveBlurToolbarModifier() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  unint64_t v7 = v0 + v6 + v5[9];
  uint64_t v8 = sub_26B0D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_deallocObject();
}

uint64_t sub_7B918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProgressiveBlurToolbarModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7B97C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_4A98(&qword_2ED798) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ProgressiveBlurToolbarModifier() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_7A640(v7, a1);
}

uint64_t sub_7BA64()
{
  return sub_7BA94(&qword_2ED7D0, &qword_2ED7D8, (void (*)(void))sub_7BB10);
}

uint64_t sub_7BA94(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_7BB10()
{
  unint64_t result = qword_2ED7E0;
  if (!qword_2ED7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED7E0);
  }
  return result;
}

unint64_t sub_7BB68()
{
  unint64_t result = qword_2ED7F0;
  if (!qword_2ED7F0)
  {
    sub_7B0C(qword_2ED7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED7F0);
  }
  return result;
}

uint64_t sub_7BBC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_4A98(&qword_2ED880);
  sub_26A0F0();
  sub_26A0D0();
  sub_7C18(&qword_2ED888, &qword_2ED880);
  sub_7D55C(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_7D55C(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_7BE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v84)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char v99;
  char v100;
  int v101;
  uint64_t v102;

  long long v90 = a1;
  long long v93 = a5;
  uint64_t v9 = sub_4A98(&qword_2ED890);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v94 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v92 = (uint64_t)&v84 - v12;
  uint64_t v13 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v95 = (uint64_t *)((char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v96 = (uint64_t)&v84 - v16;
  long long v86 = sub_4A98(&qword_2ED898);
  long long v91 = *(void *)(v86 - 8);
  uint64_t v17 = __chkstk_darwin(v86);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v97 = (uint64_t)&v84 - v20;
  uint64_t v21 = a2 + *(int *)(type metadata accessor for ListItemMetadataTitleLockupView() + 36);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  long long v87 = a3;
  long long v88 = v21;
  uint64_t v23 = a4;
  uint64_t v24 = v22(a1, a3, a4);
  uint64_t v26 = v25;
  LOBYTE(a4) = v27 & 1;
  long long v89 = v23;
  uint64_t v84 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 16);
  long long v85 = v23 + 16;
  v84(&v102, a3, v23);
  sub_7C440();
  uint64_t v28 = sub_26BA80();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_3A380(v24, v26, a4);
  swift_release();
  uint64_t v33 = v86;
  swift_bridgeObjectRelease();
  char v101 = sub_26B450();
  uint64_t v34 = sub_26BA40();
  uint64_t v36 = v35;
  LOBYTE(v24) = v37;
  uint64_t v39 = v38;
  sub_3A380(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = swift_getKeyPath();
  char v42 = v95;
  char *v95 = v41;
  uint64_t v43 = sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = (uint64_t)v42;
  uint64_t v45 = v96;
  sub_67AF0(v44, v96);
  sub_67B54(v45, (uint64_t)&v19[*(int *)(v33 + 36)]);
  *(void *)uint64_t v19 = v34;
  *((void *)v19 + 1) = v36;
  uint64_t v46 = v87;
  v19[16] = v24 & 1;
  *((void *)v19 + 3) = v39;
  *((void *)v19 + 4) = KeyPath;
  uint64_t v47 = v89;
  *((void *)v19 + 5) = 3;
  v19[48] = 0;
  sub_7D5B0(v45);
  sub_7D60C((uint64_t)v19, v97);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v90, v46, v47);
  if (v51)
  {
    uint64_t v52 = v48;
    uint64_t v53 = v49;
    uint64_t v54 = v51;
    char v55 = v50 & 1;
    long long v90 = v50 & 1;
    v84((uint64_t *)&v100, v46, v47);
    sub_7CA24();
    uint64_t v99 = v55;
    uint64_t v56 = sub_26BA80();
    long long v88 = v53;
    long long v89 = v52;
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    char v61 = v60;
    long long v85 = v43;
    swift_release();
    long long v87 = v54;
    uint64_t v62 = v33;
    char v63 = v61 & 1;
    uint64_t v98 = sub_26B450();
    uint64_t v64 = sub_26BA40();
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    char v70 = v69 & 1;
    char v71 = v63;
    uint64_t v33 = v62;
    sub_3A380(v57, v59, v71);
    swift_bridgeObjectRelease();
    uint64_t v72 = swift_getKeyPath();
    uint64_t v73 = swift_getKeyPath();
    char v74 = v95;
    char *v95 = v73;
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = (uint64_t)v74;
    uint64_t v76 = v96;
    sub_67AF0(v75, v96);
    sub_67B54(v76, (uint64_t)&v19[*(int *)(v33 + 36)]);
    *(void *)uint64_t v19 = v64;
    *((void *)v19 + 1) = v66;
    v19[16] = v70;
    *((void *)v19 + 3) = v68;
    *((void *)v19 + 4) = v72;
    *((void *)v19 + 5) = 2;
    v19[48] = 0;
    sub_45370(v64, v66, v70);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_7D5B0(v76);
    sub_3A380(v89, v88, v90);
    swift_bridgeObjectRelease();
    sub_3A380(v64, v66, v70);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v77 = v92;
    sub_7D60C((uint64_t)v19, v92);
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v78 = 1;
    uint64_t v77 = v92;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v77, v78, 1, v33);
  uint64_t v79 = v97;
  sub_B678(v97, (uint64_t)v19, &qword_2ED898);
  uint64_t v80 = v94;
  sub_B678(v77, v94, &qword_2ED890);
  uint64_t v81 = v93;
  sub_B678((uint64_t)v19, v93, &qword_2ED898);
  uint64_t v82 = sub_4A98(&qword_2ED8A0);
  sub_B678(v80, v81 + *(int *)(v82 + 48), &qword_2ED890);
  sub_B6DC(v77, &qword_2ED890);
  sub_B6DC(v79, &qword_2ED898);
  sub_B6DC(v80, &qword_2ED890);
  return sub_B6DC((uint64_t)v19, &qword_2ED898);
}

uint64_t sub_7C440()
{
  uint64_t v1 = sub_26B910();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v37 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_26B980();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v37 - v21;
  switch(*v0)
  {
    case 1:
      uint64_t v23 = (unsigned int *)&enum case for Font.TextStyle.subheadline(_:);
      goto LABEL_8;
    case 2:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v20, enum case for Font.TextStyle.headline(_:), v13);
      if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
      {
        uint64_t v24 = sub_26B820();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      }
      else
      {
        uint64_t v27 = enum case for Font.Design.serif (_:);
        uint64_t v28 = sub_26B820();
        uint64_t v29 = *(void *)(v28 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v10, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v10, 0, 1, v28);
      }
      sub_26B8E0();
      sub_B6DC((uint64_t)v10, &qword_2EBFC0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      goto LABEL_11;
    case 3:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, enum case for Font.TextStyle.headline(_:), v13);
      if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
      {
        uint64_t v25 = sub_26B820();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
      }
      else
      {
        uint64_t v30 = enum case for Font.Design.serif (_:);
        uint64_t v31 = sub_26B820();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 104))(v7, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v7, 0, 1, v31);
      }
      sub_26B8E0();
      sub_B6DC((uint64_t)v7, &qword_2EBFC0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      goto LABEL_14;
    default:
      uint64_t v23 = (unsigned int *)&enum case for Font.TextStyle.footnote(_:);
LABEL_8:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))((char *)&v37 - v21, *v23, v13);
      uint64_t v26 = sub_26B820();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
      sub_26B8E0();
      sub_B6DC((uint64_t)v12, &qword_2EBFC0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
LABEL_11:
      sub_26B800();
      swift_release();
LABEL_14:
      uint64_t v34 = v37;
      uint64_t v33 = v38;
      (*(void (**)(char *, void, uint64_t))(v37 + 104))(v3, enum case for Font.Leading.tight(_:), v38);
      uint64_t v35 = sub_26B930();
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v33);
      return v35;
  }
}

uint64_t sub_7CA24()
{
  uint64_t v0 = sub_26B910();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.footnote(_:), v7);
  uint64_t v11 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_26B8E0();
  sub_B6DC((uint64_t)v6, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v12 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v12;
}

uint64_t sub_7CCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ListItemMetadataTitleLockupView() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t type metadata accessor for ListItemMetadataTitleLockupView()
{
  return sub_129B4();
}

uint64_t sub_7CD78(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26AB40() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v11 + v8 + 1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v10 > 0xFE)
      {
        uint64_t v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v23(((unint64_t)a1 + v13) & ~v11);
      }
      else
      {
        unsigned int v22 = *((unsigned __int8 *)a1 + v8);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_7CFD4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26AB40() - 8);
  unint64_t v9 = ((*(void *)(v8 + 64)
       + ((*(unsigned __int8 *)(v8 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = v10 | 1;
  uint64_t v16 = (v10 | 1) + v13;
  size_t v17 = (v16 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v13;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x7D2ECLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v12 > 0xFE)
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v24((unint64_t)&a1[v16] & v21, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v15 < 4) {
            int v25 = ~(-1 << (8 * v15));
          }
          else {
            int v25 = -1;
          }
          int v26 = v25 & (a2 - 255);
          bzero(a1, v15);
          if (v15 == 1) {
            *a1 = v26;
          }
          else {
            *(_DWORD *)a1 = v26;
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_7D314()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7D358()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ListItemMetadataTitleLockupView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_7D4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ListItemMetadataTitleLockupView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_7BE00(a1, v8, v5, v6, a2);
}

uint64_t sub_7D55C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7D5B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefaultBlendModeModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7D60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2ED898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7D674()
{
  return sub_7C18(&qword_2ED8A8, &qword_2ED8B0);
}

void sub_7D6B0()
{
}

void sub_7D70C()
{
}

void static ImageResourceProviderKey.defaultValue.getter(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ImageResourceProviderKey.DefaultImageResourceProvider;
  *(void *)(a1 + 32) = &off_2DE980;
}

uint64_t View.imageResourceProvider(_:)()
{
  swift_getKeyPath();
  sub_26BCB0();

  return swift_release();
}

uint64_t EnvironmentValues.imageResourceProvider.getter()
{
  sub_2E480();

  return sub_26B0B0();
}

uint64_t EnvironmentValues.imageResourceProvider.setter(uint64_t a1)
{
  sub_C224(a1, (uint64_t)v3);
  sub_2E480();
  sub_26B0C0();
  return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
}

uint64_t View.imageResourceProvider(from:)()
{
  swift_getKeyPath();
  sub_4A98(&qword_2ED8B8);
  sub_26CCB0();
  sub_26D150();
  sub_26BCB0();
  swift_release();
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v1);
}

void (*EnvironmentValues.imageResourceProvider.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v3[16] = sub_2E480();
  sub_26B0B0();
  return sub_7D9C4;
}

void sub_7D9C4(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_C224(*a1, v3);
    sub_C224(v3, (uint64_t)v2 + 80);
    sub_26B0C0();
    _s7BooksUI13AnyPagedFrameVwxx_0(v3);
  }
  else
  {
    sub_C224(*a1, v3);
    sub_26B0C0();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v2);

  free(v2);
}

uint64_t sub_7DA90()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ImageResourceSource()
{
  return sub_2D7A4();
}

uint64_t _s7BooksUI19ImageResourceSourceOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_7DA90();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ImageResourceSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_7DA90();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2D7A4();
  return a1;
}

__n128 initializeWithTake for ImageResourceSource(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ImageResourceSource(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2D7A4();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageResourceSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageResourceSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_7DC34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_7DC3C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ImageResourceSource()
{
  return &type metadata for ImageResourceSource;
}

uint64_t dispatch thunk of ImageResourceProviding.mediaBackdrop(from:size:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ImageResourceProviding.resource(from:size:displayScale:filter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

ValueMetadata *type metadata accessor for ImageResourceProviderKey()
{
  return &type metadata for ImageResourceProviderKey;
}

uint64_t sub_7DC90()
{
  return swift_getWitnessTable();
}

unint64_t sub_7DD00()
{
  unint64_t result = qword_2ED8C8;
  if (!qword_2ED8C8)
  {
    sub_7B0C(&qword_2ED8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED8C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageResourceProviderKey.DefaultImageResourceProvider()
{
  return &type metadata for ImageResourceProviderKey.DefaultImageResourceProvider;
}

uint64_t sub_7DD6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v43 = sub_269840();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v49 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_269C00();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_269CC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26CB80();
  __chkstk_darwin(v11 - 8);
  uint64_t v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v13 - 8);
  size_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AssetAction.Kind(0);
  uint64_t v17 = __chkstk_darwin(v16);
  unsigned int v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = *(void *)v1;
  char v23 = *(unsigned char *)(v1 + 8);
  sub_10E0C(*(void *)v1, v23);
  sub_41B18(v22, v23);
  sub_C374(v22, v23);
  *(void *)uint64_t v21 = 0xD00000000000001ALL;
  *((void *)v21 + 1) = 0x8000000000289180;
  *((_WORD *)v21 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (void *)(v1 + *(int *)(type metadata accessor for ListItemAccessoryWantToReadButtonView() + 28));
  sub_4ADC(v24, v24[3]);
  uint64_t v25 = sub_269DB0();
  uint64_t v41 = v26;
  uint64_t v42 = v25;
  uint64_t v27 = v43;
  sub_41D2C((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v15, 1, v27) == 1)
  {
    sub_B6DC((uint64_t)v15, &qword_2EBC78);
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v28 = sub_269820();
    uint64_t v39 = v29;
    uint64_t v40 = v28;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v15, v27);
  }
  uint64_t v30 = v27;
  sub_4ADC(v24, v24[3]);
  char v31 = sub_269F30();
  uint64_t v32 = (uint64_t)v45;
  sub_26CB50();
  sub_807D4((uint64_t)v21, (uint64_t)v19, type metadata accessor for AssetAction.Kind);
  AssetAction.Kind.appAnalyticsClickTargetType.getter(v44);
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for LinkActionType.click(_:), v48);
  sub_269CD0();
  uint64_t v33 = sub_269CE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v10, 0, 1, v33);
  uint64_t v34 = v49;
  sub_269830();
  uint64_t v35 = sub_269820();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v34, v30);
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v35, v37, v42, v41, v40, v39, v31 & 1, v32, v50, (uint64_t)v19, (uint64_t)v10);
  return sub_8083C((uint64_t)v21);
}

uint64_t ListItemAccessoryWantToReadButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v47 = sub_269920();
  uint64_t v41 = *(void *)(v47 - 8);
  uint64_t v3 = __chkstk_darwin(v47);
  uint64_t v44 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v40 - v5;
  uint64_t v45 = sub_26D3E0();
  uint64_t v40 = *(void *)(v45 - 8);
  uint64_t v6 = __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v40 - v9;
  uint64_t v10 = sub_4A98(&qword_2ED8D0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2ED8D8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2ED8E0);
  __chkstk_darwin(v17 - 8);
  uint64_t v42 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v1;
  sub_4A98(&qword_2ED8E8);
  sub_7C18(&qword_2ED8F0, &qword_2ED8E8);
  sub_26C3A0();
  type metadata accessor for ListItemAccessoryWantToReadButtonView();
  sub_4A98(&qword_2ED8F8);
  sub_26A830();
  sub_26A830();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  uint64_t v43 = v14;
  uint64_t v19 = *(int *)(v14 + 36);
  uint64_t v20 = v40;
  uint64_t v21 = &v16[v19];
  long long v22 = v54;
  *(_OWORD *)uint64_t v21 = v53;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v55;
  char v23 = v13;
  uint64_t v24 = v41;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
  uint64_t v25 = *v1;
  LOBYTE(v2) = *((unsigned char *)v2 + 8);
  sub_10E0C(v25, (char)v2);
  sub_41B18(v25, (char)v2);
  sub_C374(v25, (char)v2);
  uint64_t v26 = v49;
  sub_26D370();
  uint64_t v27 = v46;
  sub_2698C0();
  uint64_t v28 = v45;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v8, v26, v45);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v44, v27, v47);
  uint64_t v31 = sub_26D460();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v30);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v28);
  uint64_t v51 = v31;
  uint64_t v52 = v33;
  sub_CC78();
  uint64_t v34 = sub_26BB00();
  uint64_t v36 = v35;
  LOBYTE(v27) = v37 & 1;
  sub_7ECAC();
  uint64_t v38 = (uint64_t)v42;
  sub_26BD10();
  sub_3A380(v34, v36, (char)v27);
  swift_bridgeObjectRelease();
  sub_B6DC((uint64_t)v16, &qword_2ED8D8);
  return sub_19CC4(v38, v48, &qword_2ED8E0);
}

uint64_t sub_7E958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_269BA0();
  __chkstk_darwin(v4 - 8);
  uint64_t ButtonView = type metadata accessor for ListItemAccessoryWantToReadButtonView();
  uint64_t v6 = *(void *)(ButtonView - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(ButtonView - 8);
  uint64_t v8 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26A630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  unint64_t v22[3] = type metadata accessor for AssetAction(0);
  v22[4] = sub_80784(&qword_2ED9D0, (void (*)(uint64_t))type metadata accessor for AssetAction);
  uint64_t v12 = sub_CA1C(v22);
  sub_7DD6C((uint64_t)v12);
  sub_807D4(a1, (uint64_t)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ListItemAccessoryWantToReadButtonView);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  sub_80690((uint64_t)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  sub_269B80();
  sub_269AB0();
  uint64_t v15 = (int *)sub_4A98(&qword_2ED8E8);
  uint64_t v16 = a2 + v15[9];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = (uint64_t *)(a2 + v15[10]);
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a2 + v15[11];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 40) = 0;
  sub_19CC4((uint64_t)v10, a2 + v15[12], qword_2EA3E0);
  uint64_t result = sub_19CC4((uint64_t)v22, a2 + v15[13], &qword_2EA818);
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(a2 + v15[14]);
  *uint64_t v20 = sub_806F4;
  v20[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v14;
  return result;
}

uint64_t sub_7EC58@<X0>(uint64_t a1@<X8>)
{
  return sub_7E958(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for ListItemAccessoryWantToReadButtonView()
{
  uint64_t result = qword_2ED970;
  if (!qword_2ED970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_7ECAC()
{
  unint64_t result = qword_2ED900;
  if (!qword_2ED900)
  {
    sub_7B0C(&qword_2ED8D8);
    sub_7C18(&qword_2ED908, &qword_2ED8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED900);
  }
  return result;
}

uint64_t sub_7ED4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7ED68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  a2[1] = v4;
  uint64_t v5 = sub_4A98(&qword_2ED9D8);
  return sub_7EDB0(a1, (uint64_t *)((char *)a2 + *(int *)(v5 + 44)));
}

uint64_t sub_7EDB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v53 = a2;
  uint64_t v52 = sub_4A98(&qword_2ED9E0) - 8;
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_26C860();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26C840();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v46 = sub_26AD10();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_4A98(&qword_2ED9E8) - 8;
  uint64_t v18 = __chkstk_darwin(v42);
  uint64_t v48 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v22 = (uint64_t *)((char *)&v40 - v21);
  __chkstk_darwin(v20);
  uint64_t v47 = (uint64_t)&v40 - v23;
  id v24 = [self tertiarySystemFillColor];
  uint64_t v43 = sub_26C230();
  uint64_t v25 = *(void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  sub_10E0C(v25, a1);
  sub_41B18(v25, a1);
  sub_C374(v25, a1);
  uint64_t v41 = sub_26C250();
  uint64_t v26 = sub_26C120();
  uint64_t KeyPath = swift_getKeyPath();
  sub_26C830();
  sub_26C810();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v15, v6);
  sub_26C820();
  v28(v13, v6);
  uint64_t v29 = v45;
  sub_26C850();
  sub_80784(&qword_2ED9F0, (void (*)(uint64_t))&type metadata accessor for ReplaceSymbolEffect);
  sub_26AD00();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v50);
  v28(v10, v6);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v51;
  uint64_t v32 = v44;
  uint64_t v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v51 + *(int *)(v52 + 36), v17, v46);
  *uint64_t v31 = v30;
  sub_B678((uint64_t)v31, (uint64_t)v22 + *(int *)(v42 + 44), &qword_2ED9E0);
  *long long v22 = v41;
  v22[1] = KeyPath;
  _OWORD v22[2] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_B6DC((uint64_t)v31, &qword_2ED9E0);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v47;
  sub_19CC4((uint64_t)v22, v47, &qword_2ED9E8);
  uint64_t v35 = v48;
  sub_B678(v34, v48, &qword_2ED9E8);
  uint64_t v36 = v53;
  *long long v53 = v43;
  *((_WORD *)v36 + 4) = 256;
  char v37 = v36;
  uint64_t v38 = sub_4A98(&qword_2ED9F8);
  sub_B678(v35, (uint64_t)v37 + *(int *)(v38 + 48), &qword_2ED9E8);
  swift_retain();
  sub_B6DC(v34, &qword_2ED9E8);
  sub_B6DC(v35, &qword_2ED9E8);
  return swift_release();
}

unint64_t initializeBufferWithCopyOfBuffer for ListItemAccessoryWantToReadButtonView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_269840();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_4A98(&qword_2EBC78);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[6];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    uint64_t v19 = sub_4A98(&qword_2ED8F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[7];
    long long v21 = *(_OWORD *)(a2 + v20 + 24);
    *(_OWORD *)(a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return a1;
}

uint64_t destroy for ListItemAccessoryWantToReadButtonView(uint64_t a1, int *a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_269840();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];

  return _s7BooksUI13AnyPagedFrameVwxx_0(v9);
}

uint64_t initializeWithCopy for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_269840();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EBC78);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[7];
  long long v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

uint64_t assignWithCopy for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_269840();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_4A98(&qword_2EBC78);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  sub_16D58((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t initializeWithTake for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_269840();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = sub_4A98(&qword_2EBC78);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  return a1;
}

uint64_t assignWithTake for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_B6DC(a1 + v10, &qword_2EB918);
    uint64_t v13 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_269840();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        uint64_t v16 = sub_4A98(&qword_2EBC78);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t)a2 + v21;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v21);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7FFD8);
}

uint64_t sub_7FFD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2ED910);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4A98(&qword_2ED8F8);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemAccessoryWantToReadButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_80108);
}

uint64_t sub_80108(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2ED910);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2ED8F8);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 24) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_80220()
{
  sub_802FC();
  if (v0 <= 0x3F)
  {
    sub_80358();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_802FC()
{
  if (!qword_2ED980)
  {
    sub_7B0C(&qword_2EBC78);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2ED980);
    }
  }
}

void sub_80358()
{
  if (!qword_2ED988)
  {
    sub_803B4();
    unint64_t v0 = sub_26A840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2ED988);
    }
  }
}

unint64_t sub_803B4()
{
  unint64_t result = qword_2ED990;
  if (!qword_2ED990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED990);
  }
  return result;
}

unint64_t sub_8040C()
{
  unint64_t result = qword_2ED9C8;
  if (!qword_2ED9C8)
  {
    sub_7B0C(&qword_2ED8E0);
    sub_7ECAC();
    sub_80784((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ED9C8);
  }
  return result;
}

uint64_t sub_804B8()
{
  uint64_t ButtonView = (int *)type metadata accessor for ListItemAccessoryWantToReadButtonView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)ButtonView - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_C374(*(void *)v3, *(unsigned char *)(v3 + 8));
  uint64_t v4 = v3 + ButtonView[5];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_269840();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + ButtonView[6];
  uint64_t v8 = sub_4A98(&qword_2ED8F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  _s7BooksUI13AnyPagedFrameVwxx_0(v3 + ButtonView[7]);

  return swift_deallocObject();
}

uint64_t sub_80690(uint64_t a1, uint64_t a2)
{
  uint64_t ButtonView = type metadata accessor for ListItemAccessoryWantToReadButtonView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ButtonView - 8) + 32))(a2, a1, ButtonView);
  return a2;
}

uint64_t sub_806F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ListItemAccessoryWantToReadButtonView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_7ED68(v4, a1);
}

uint64_t sub_80784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_807D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_8083C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAction.Kind(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_80898(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EDA00);
  __chkstk_darwin(v2);
  sub_87624(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_26C340();
  return sub_B6DC(a1, &qword_2EDA00);
}

uint64_t sub_8094C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EDA00);
  __chkstk_darwin(v2 - 8);
  sub_87624(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_4A98(qword_2EDA08);
  sub_26C360();
  return sub_B6DC(a1, &qword_2EDA00);
}

uint64_t BooksMenu.init(_:onPresentationChanged:content:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t)@<X6>, void *a8@<X8>, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v31 = a6;
  uint64_t v32 = a5;
  long long v30 = a9;
  uint64_t v17 = sub_4A98(&qword_2EDA00);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v33 = a9;
  uint64_t v34 = a10;
  uint64_t v35 = a11;
  uint64_t v20 = (int *)type metadata accessor for BooksMenu();
  uint64_t v21 = (void *)((char *)a8 + v20[16]);
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (void *)((char *)a8 + v20[17]);
  *uint64_t v22 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (void *)((char *)a8 + v20[18]);
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EBC98);
  swift_storeEnumTagMultiPayload();
  long long v24 = (char *)a8 + v20[19];
  *(void *)long long v24 = swift_getKeyPath();
  v24[40] = 0;
  uint64_t v25 = (char *)a8 + v20[20];
  *(void *)uint64_t v25 = swift_getKeyPath();
  v25[8] = 0;
  uint64_t v26 = sub_269810();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v19, 1, 1, v26);
  sub_80898((uint64_t)v19);
  sub_26A330();
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  uint64_t v27 = sub_82C24(a3);
  uint64_t v28 = a7(v27);
  v32(v28);
  return sub_82C34(a3);
}

uint64_t type metadata accessor for BooksMenu()
{
  return swift_getGenericMetadata();
}

uint64_t sub_80CA8()
{
  uint64_t v0 = sub_269D00();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_40D18((uint64_t)v3);
  sub_269B60();
  sub_8768C(&qword_2EDAD8, (void (*)(uint64_t))&type metadata accessor for ContentData);
  sub_8768C(&qword_2EDAE0, (void (*)(uint64_t))&type metadata accessor for ContentData);
  sub_269CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_80E10()
{
  uint64_t v0 = sub_269D00();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_40D18((uint64_t)v3);
  sub_269BB0();
  sub_8768C(&qword_2EDAC8, (void (*)(uint64_t))&type metadata accessor for SectionData);
  sub_8768C(&qword_2EDAD0, (void (*)(uint64_t))&type metadata accessor for SectionData);
  sub_269CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t BooksMenu.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = *(a1 - 1);
  char v37 = (char *)&v31 - ((*(void *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(__chkstk_darwin(a1) + 16);
  sub_7B0C(&qword_2EAEE8);
  uint64_t v5 = v4;
  uint64_t v6 = sub_26ABD0();
  uint64_t v42 = v6;
  uint64_t v8 = a1[3];
  uint64_t v35 = a1[4];
  uint64_t v7 = v35;
  unint64_t v9 = sub_82C44();
  uint64_t v59 = v7;
  unint64_t v60 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = a1[5];
  uint64_t v55 = v6;
  uint64_t v56 = v8;
  uint64_t v57 = WitnessTable;
  uint64_t v58 = v10;
  uint64_t v11 = sub_26B9B0();
  uint64_t v41 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v36 = (char *)&v31 - v12;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v55 = v11;
  uint64_t v56 = v33;
  uint64_t v38 = &opaque type descriptor for <<opaque return type of View.systemColorScheme()>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v40 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v13 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v31 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v32 = (char *)&v31 - v15;
  uint64_t v16 = v37;
  (*(void (**)(char *, uint64_t, void *))(v3 + 16))(v37, v44, a1);
  uint64_t v17 = v3;
  unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v5;
  *((void *)v19 + 2) = v5;
  *((void *)v19 + 3) = v8;
  uint64_t v21 = v8;
  uint64_t v22 = v35;
  *((void *)v19 + 4) = v35;
  *((void *)v19 + 5) = v10;
  (*(void (**)(char *, char *, void *))(v17 + 32))(&v19[v18], v16, a1);
  uint64_t v50 = v20;
  uint64_t v51 = v21;
  uint64_t v52 = v22;
  uint64_t v53 = v10;
  uint64_t v54 = v44;
  uint64_t v45 = v20;
  uint64_t v46 = v21;
  uint64_t v47 = v22;
  uint64_t v48 = v10;
  uint64_t v49 = v44;
  uint64_t v23 = v36;
  sub_26B990();
  long long v24 = v31;
  uint64_t v25 = v33;
  sub_26BE00();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v11);
  uint64_t v55 = v11;
  uint64_t v56 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = v32;
  uint64_t v28 = OpaqueTypeMetadata2;
  sub_CCCC(v24, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v40 + 8);
  v29(v24, v28);
  sub_CCCC(v27, v28, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v29)(v27, v28);
}

uint64_t sub_81434(int a1, uint64_t *a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  long long v132 = a5;
  *((void *)&v131 + 1) = a4;
  *(void *)&long long v131 = a3;
  int v130 = a1;
  uint64_t v129 = sub_26A340();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (void *)((char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = sub_269AE0();
  uint64_t v98 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v97 = (char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_269810();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  long long v104 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_26A2C0();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (uint64_t)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_269AC0();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v117 = (char *)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_26CC40();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v113 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_26CB80();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v14 = __chkstk_darwin(v123);
  uint64_t v112 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v120 = (uint64_t)v95 - v16;
  uint64_t v111 = sub_269C00();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  long long v109 = (char *)v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_269CC0();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  long long v108 = (char *)v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_269CE0();
  uint64_t v121 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v119 = (char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2EDA00);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  long long v105 = (char *)v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  long long v24 = (char *)v95 - v23;
  uint64_t v25 = sub_4A98(&qword_2EDAA0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_269BB0();
  uint64_t v126 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  long long v30 = (char *)v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2EDAA8);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_269B60();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  char v37 = (char *)v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v133 = v131;
  *(void *)&long long v134 = v132;
  *((void *)&v134 + 1) = a6;
  uint64_t v38 = type metadata accessor for BooksMenu();
  sub_80CA8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) != 1)
  {
    long long v132 = v24;
    uint64_t v96 = v30;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
    uint64_t v39 = v38;
    uint64_t v40 = a2;
    sub_80E10();
    uint64_t v43 = v126;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v27, 1, v28) == 1)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
      uint64_t v41 = &qword_2EDAA0;
      uint64_t v42 = (uint64_t)v27;
      goto LABEL_5;
    }
    uint64_t v54 = v28;
    *((void *)&v131 + 1) = v37;
    *(void *)&long long v131 = v34;
    uint64_t v55 = v96;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v96, v27, v54);
    if (v130)
    {
      uint64_t v128 = v35;
      uint64_t v129 = v54;
      uint64_t v56 = (uint64_t)v132;
      sub_269800();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v124 + 56))(v56, 0, 1, v125);
      v95[1] = v39;
      uint64_t v44 = a2;
      sub_8094C(v56);
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v108, enum case for ClickData.TargetType.button(_:), v107);
      (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, enum case for LinkActionType.click(_:), v111);
      uint64_t v57 = v119;
      sub_269CD0();
      uint64_t v58 = *a2;
      uint64_t v59 = a2[1];
      LOBYTE(v150) = 0;
      char v147 = 16;
      char v149 = 0;
      uint64_t v139 = 0;
      long long v138 = 0u;
      long long v137 = 0u;
      long long v136 = 0u;
      long long v135 = 0u;
      long long v134 = 0u;
      long long v133 = 0u;
      char v140 = 0;
      *(_DWORD *)uint64_t v141 = *(_DWORD *)v148;
      *(_DWORD *)&v141[3] = *(_DWORD *)&v148[3];
      uint64_t v142 = 0x6E6F74747562;
      unint64_t v143 = 0xE600000000000000;
      long long v144 = 0u;
      long long v145 = 0u;
      long long v146 = 0u;
      uint64_t v60 = v120;
      static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v58, v59, &v147, 0, 0, 0, &v133, v120);
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v112, v60, v123);
      sub_4A98(&qword_2EADC8);
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_26F990;
      uint64_t v62 = sub_4A98(&qword_2EDAC0);
      char v63 = v117;
      uint64_t v64 = &v117[*(int *)(v62 + 48)];
      uint64_t v65 = &v117[*(int *)(v62 + 64)];
      uint64_t v66 = enum case for LocationType.button(_:);
      uint64_t v67 = sub_269BC0();
      uint64_t v68 = v66;
      char v69 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 104))(v63, v68, v67);
      char v70 = v64;
      uint64_t v71 = v43;
      uint64_t v72 = v118;
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v70, v57, v118);
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v65, v69, v129);
      (*(void (**)(char *, void, uint64_t))(v115 + 104))(v63, enum case for AppAnalyticsAction.Type.clickEvent(_:), v116);
      *(void *)(v61 + 56) = v114;
      *(void *)(v61 + 64) = sub_8768C(&qword_2EDAB8, (void (*)(uint64_t))&type metadata accessor for AppAnalyticsAction);
      sub_CA1C((uint64_t *)(v61 + 32));
      sub_269AD0();
      uint64_t v73 = v113;
      sub_26CC30();
      sub_42020((uint64_t)&v133);
      if (*((void *)&v134 + 1))
      {
        long long v132 = (char *)v135;
        sub_4ADC(&v133, *((uint64_t *)&v134 + 1));
        uint64_t v74 = v122;
        uint64_t v75 = v103;
        uint64_t v151 = v103;
        uint64_t v152 = &protocol witness table for CompoundAction;
        uint64_t v76 = sub_CA1C(&v150);
        uint64_t v77 = v102;
        (*(void (**)(uint64_t *, char *, uint64_t))(v102 + 16))(v76, v73, v75);
        uint64_t v78 = v99;
        sub_41FE8(v99);
        sub_26A180();
        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v78, v101);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v75);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v120, v123);
        (*(void (**)(char *, uint64_t))(v121 + 8))(v119, v118);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v96, v129);
        (*(void (**)(void, void))(v128 + 8))(*((void *)&v131 + 1), v131);
LABEL_18:
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v150);
        uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v133);
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v73, v103);
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v120, v123);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v119, v72);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v129);
      (*(void (**)(void, void))(v128 + 8))(*((void *)&v131 + 1), v131);
    }
    else
    {
      uint64_t v44 = a2;
      sub_4A98(qword_2EDA08);
      uint64_t v79 = (uint64_t)v105;
      sub_26C350();
      uint64_t v80 = v124;
      uint64_t v81 = v125;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v79, 1, v125) == 1)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v55, v54);
        (*(void (**)(void, void))(v35 + 8))(*((void *)&v131 + 1), v131);
        uint64_t result = sub_B6DC(v79, &qword_2EDA00);
        goto LABEL_8;
      }
      uint64_t v82 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v104, v79, v81);
      uint64_t v83 = sub_4A98(&qword_2EDAB0);
      uint64_t v84 = v117;
      uint64_t v85 = v81;
      long long v86 = &v117[*(int *)(v83 + 48)];
      long long v132 = &v117[*(int *)(v83 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v117, v82, v85);
      uint64_t v128 = v35;
      uint64_t v87 = v131;
      (*(void (**)(char *, void, void))(v35 + 16))(v86, *((void *)&v131 + 1), v131);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v132, v55, v54);
      (*(void (**)(char *, void, uint64_t))(v115 + 104))(v84, enum case for AppAnalyticsAction.Type.reportContextualActionSheetExposure(_:), v116);
      long long v88 = v97;
      sub_269AD0();
      sub_42020((uint64_t)&v133);
      if (*((void *)&v134 + 1))
      {
        uint64_t v129 = v54;
        long long v132 = (char *)v135;
        uint64_t v89 = v87;
        uint64_t v127 = sub_4ADC(&v133, *((uint64_t *)&v134 + 1));
        uint64_t v90 = v128;
        uint64_t v91 = v114;
        uint64_t v151 = v114;
        uint64_t v152 = (void *)sub_8768C(&qword_2EDAB8, (void (*)(uint64_t))&type metadata accessor for AppAnalyticsAction);
        long long v92 = sub_CA1C(&v150);
        uint64_t v93 = v98;
        (*(void (**)(uint64_t *, char *, uint64_t))(v98 + 16))(v92, v88, v91);
        uint64_t v94 = v99;
        sub_41FE8(v99);
        sub_26A180();
        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v94, v101);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v88, v91);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v104, v125);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v96, v129);
        (*(void (**)(void, uint64_t))(v90 + 8))(*((void *)&v131 + 1), v89);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v98 + 8))(v88, v114);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v104, v125);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v55, v54);
      (*(void (**)(void, uint64_t))(v128 + 8))(*((void *)&v131 + 1), v87);
    }
    uint64_t result = sub_B6DC((uint64_t)&v133, &qword_2EBCA8);
    goto LABEL_8;
  }
  uint64_t v39 = v38;
  uint64_t v40 = a2;
  uint64_t v41 = &qword_2EDAA8;
  uint64_t v42 = (uint64_t)v33;
LABEL_5:
  sub_B6DC(v42, v41);
  uint64_t v44 = v40;
  uint64_t v45 = (char *)v40 + *(int *)(v39 + 88);
  uint64_t v46 = v128;
  uint64_t v47 = v127;
  uint64_t v48 = v129;
  (*(void (**)(void *, char *, uint64_t))(v128 + 16))(v127, v45, v129);
  uint64_t v49 = sub_26A320();
  os_log_type_t v50 = sub_26D850();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&def_5F050, v49, v50, "ContentData and SectionData should be present", v51, 2u);
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v46 + 8))(v47, v48);
LABEL_8:
  uint64_t v53 = (uint64_t (*)(void))v44[2];
  if (v53) {
    return v53(v130 & 1);
  }
  return result;
}

uint64_t sub_82818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = v11;
  v17[1] = v12;
  void v17[2] = v13;
  v17[3] = v14;
  uint64_t v15 = type metadata accessor for BooksMenu();
  sub_CCCC(a1 + *(int *)(v15 + 60), a3, a5);
  sub_CCCC(v10, a3, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

uint64_t sub_82920@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v25 = a5;
  uint64_t v24 = sub_26A6E0();
  uint64_t v8 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7B0C(&qword_2EAEE8);
  uint64_t v11 = sub_26ABD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = v23;
  type metadata accessor for BooksMenu();
  sub_40FB4((uint64_t)v10);
  sub_26BC90();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  unint64_t v18 = sub_82C44();
  uint64_t v26 = a3;
  unint64_t v27 = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v15, v11, WitnessTable);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  sub_CCCC(v17, v11, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

uint64_t sub_82B84()
{
  return sub_26ADA0();
}

uint64_t sub_82BA8()
{
  return sub_26AD80();
}

uint64_t sub_82BD4()
{
  return sub_26ADA0();
}

uint64_t sub_82BF8()
{
  return sub_26AD80();
}

uint64_t sub_82C24(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_82C34(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_82C44()
{
  unint64_t result = qword_2EAF40;
  if (!qword_2EAF40)
  {
    sub_7B0C(&qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF40);
  }
  return result;
}

uint64_t sub_82CA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v17 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)type metadata accessor for BooksMenu();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16)) {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);
  (*(void (**)(uint64_t))(*(void *)(v17 - 8) + 8))(v3 + v2[15]);
  uint64_t v4 = v3 + v2[16];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v2[17];
  sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_269D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v2[18];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v3 + v2[19];
  if (*(unsigned char *)(v10 + 40))
  {
    if (*(void *)(v10 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v10);
    }
  }
  else
  {
    swift_release();
  }
  sub_1D1EC(*(id *)(v3 + v2[20]), *(unsigned char *)(v3 + v2[20] + 8));
  uint64_t v11 = v3 + v2[21];
  uint64_t v12 = sub_269810();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  sub_4A98(qword_2EDA08);
  swift_release();
  uint64_t v14 = v3 + v2[22];
  uint64_t v15 = sub_26A340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return swift_deallocObject();
}

uint64_t sub_83054(int a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (char *)v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for BooksMenu() - 8);
  uint64_t v8 = (void *)((char *)v1
                + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_81434(a1, v8, v3, v4, v5, v6);
}

uint64_t sub_83100()
{
  return sub_83130(sub_82818);
}

uint64_t sub_83118()
{
  return sub_83130((uint64_t (*)(void, void, void, void, void))sub_82920);
}

uint64_t sub_83130(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_83148()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_8318C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 80);
}

void sub_83194()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_874A0(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v2 <= 0x3F)
      {
        sub_874A0(319, &qword_2EA8E8, (void (*)(uint64_t))&type metadata accessor for DataStack);
        if (v3 <= 0x3F)
        {
          sub_874A0(319, (unint64_t *)&qword_2EDA90, (void (*)(uint64_t))&type metadata accessor for OpaqueMetricsFieldsContext);
          if (v4 <= 0x3F)
          {
            sub_874F4();
            if (v5 <= 0x3F)
            {
              sub_26A340();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_8340C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v96 = *(void *)(a3 + 16);
  uint64_t v94 = *(void *)(v96 - 8);
  int v101 = *(_DWORD *)(v94 + 80);
  uint64_t v3 = v101;
  uint64_t v105 = *(void *)(v94 + 64);
  uint64_t v97 = *(void *)(a3 + 24);
  uint64_t v95 = *(void *)(v97 - 8);
  int v4 = *(_DWORD *)(v95 + 80);
  uint64_t v106 = *(void *)(v95 + 64);
  uint64_t v5 = sub_26A6E0();
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  int v6 = *(_DWORD *)(v88 + 80);
  uint64_t v7 = v6 & 0xF8;
  unint64_t v8 = *(void *)(v88 + 64);
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unint64_t v107 = v8;
  uint64_t v9 = sub_269D00();
  uint64_t v90 = *(void *)(v9 - 8);
  uint64_t v91 = v9;
  int v10 = *(_DWORD *)(v90 + 80);
  uint64_t v11 = v10 & 0xF8;
  unint64_t v12 = *(void *)(v90 + 64);
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  unint64_t v108 = v12;
  uint64_t v13 = sub_26A2C0();
  uint64_t v92 = *(void *)(v13 - 8);
  uint64_t v93 = v13;
  int v14 = *(_DWORD *)(v92 + 80);
  uint64_t v15 = v14 & 0xF8;
  unint64_t v16 = *(void *)(v92 + 64);
  if (v16 <= 8) {
    unint64_t v16 = 8;
  }
  unint64_t v109 = v16;
  uint64_t v17 = sub_269810();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v98 = v18;
  uint64_t v99 = v17;
  if (*(_DWORD *)(v18 + 84)) {
    uint64_t v20 = *(void *)(v18 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v18 + 64) + 1;
  }
  size_t __n = v20;
  uint64_t v21 = sub_26A340();
  uint64_t v100 = *(void *)(v21 - 8);
  uint64_t v22 = *(_DWORD *)(v100 + 80);
  uint64_t v111 = v19 & 0xF8 | 7;
  unint64_t v23 = v4 | (unint64_t)v101 | v7 | v11 | v15 | v111 | v22;
  if (v23 != 7
    || ((v4 | v101 | v6 | v10 | v14 | v19 | *(_DWORD *)(v100 + 80)) & 0x100000) != 0
    || (uint64_t v24 = v7 | 7,
        uint64_t v25 = v11 | 7,
        ((((__n + 7) & 0xFFFFFFFFFFFFFFF8)
        + v22
        + 8
        + ((v111
          + ((v109
            + ((v108
              + 1
              + (v15 | 7)
              + ((v107
                + 1
                + (v11 | 7)
                + ((v106
                  + v24
                  + ((v105
                    + v4
                    + ((v101 + 32) & ~(unint64_t)v101)) & ~(unint64_t)v4)) & ~v24)) & ~(v11 | 7))) & ~(v15 | 7))
            + 56) & 0xFFFFFFFFFFFFFFF8)
          + 9) & ~v111)) & ~v22)
      + *(void *)(*(void *)(v21 - 8) + 64) > 0x18))
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    uint64_t v35 = v34 + ((v23 + 16) & ~v23);
    swift_retain();
  }
  else
  {
    unint64_t v83 = v107 + 1;
    uint64_t v84 = v15 | 7;
    unint64_t v85 = v108 + 1;
    uint64_t v86 = *(_DWORD *)(v100 + 80);
    unint64_t v87 = ((__n + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 8;
    uint64_t v102 = v21;
    uint64_t v26 = ~v3;
    unint64_t v27 = ~(unint64_t)v4;
    uint64_t v28 = ~v24;
    uint64_t v29 = a2[1];
    *a1 = *a2;
    a1[1] = v29;
    unint64_t v30 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = (unint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v32 = *v31;
    swift_bridgeObjectRetain();
    if (v32 < 0xFFFFFFFF)
    {
      *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      unint64_t v33 = v31[1];
      *(void *)unint64_t v30 = v32;
      *(void *)(v30 + 8) = v33;
      swift_retain();
    }
    uint64_t v36 = (v30 + v3 + 16) & v26;
    uint64_t v37 = ((unint64_t)v31 + v3 + 16) & v26;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v36, v37, v96);
    unint64_t v38 = (v37 + v105 + v4) & v27;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 16))((v36 + v105 + v4) & v27, v38, v97);
    uint64_t v39 = v106 + v24;
    uint64_t v40 = (void *)((((v36 + v105 + v4) & v27) + v106 + v24) & v28);
    uint64_t v41 = (unsigned __int8 *)((v38 + v39) & v28);
    unsigned int v42 = v41[v107];
    unsigned int v43 = v42 - 2;
    if (v42 < 2)
    {
      uint64_t v45 = v84;
    }
    else
    {
      if (v107 <= 3) {
        uint64_t v44 = v107;
      }
      else {
        uint64_t v44 = 4;
      }
      uint64_t v45 = v84;
      switch(v44)
      {
        case 1:
          int v46 = *v41;
          if (v107 < 4) {
            goto LABEL_28;
          }
          goto LABEL_30;
        case 2:
          int v46 = *(unsigned __int16 *)v41;
          if (v107 >= 4) {
            goto LABEL_30;
          }
          goto LABEL_28;
        case 3:
          int v46 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          if (v107 < 4) {
            goto LABEL_28;
          }
          goto LABEL_30;
        case 4:
          int v46 = *(_DWORD *)v41;
          if (v107 < 4) {
LABEL_28:
          }
            unsigned int v42 = (v46 | (v43 << (8 * v107))) + 2;
          else {
LABEL_30:
          }
            unsigned int v42 = v46 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v47 = ~v25;
    if (v42 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v88 + 16))(v40, v41, v89);
      char v48 = 1;
    }
    else
    {
      void *v40 = *(void *)v41;
      swift_retain();
      char v48 = 0;
    }
    *((unsigned char *)v40 + v107) = v48;
    uint64_t v49 = (void *)(((unint64_t)v40 + v83 + v25) & v47);
    os_log_type_t v50 = (unsigned __int8 *)((unint64_t)&v41[v83 + v25] & v47);
    unsigned int v51 = v50[v108];
    unsigned int v52 = v51 - 2;
    if (v51 >= 2)
    {
      if (v108 <= 3) {
        uint64_t v53 = v108;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *v50;
          if (v108 < 4) {
            goto LABEL_44;
          }
          goto LABEL_46;
        case 2:
          int v54 = *(unsigned __int16 *)v50;
          if (v108 >= 4) {
            goto LABEL_46;
          }
          goto LABEL_44;
        case 3:
          int v54 = *(unsigned __int16 *)((unint64_t)&v41[v83 + v25] & v47) | (*((unsigned __int8 *)&def_5F050
                                                                                  + ((unint64_t)&v41[v83 + v25] & v47)
                                                                                  + 2) << 16);
          if (v108 < 4) {
            goto LABEL_44;
          }
          goto LABEL_46;
        case 4:
          int v54 = *(_DWORD *)v50;
          if (v108 < 4) {
LABEL_44:
          }
            unsigned int v51 = (v54 | (v52 << (8 * v108))) + 2;
          else {
LABEL_46:
          }
            unsigned int v51 = v54 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v55 = ~v45;
    if (v51 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v90 + 16))(v49, v50, v91);
      char v56 = 1;
    }
    else
    {
      *uint64_t v49 = *(void *)v50;
      swift_retain();
      char v56 = 0;
    }
    *((unsigned char *)v49 + v108) = v56;
    uint64_t v57 = (void *)(((unint64_t)v49 + v85 + v45) & v55);
    uint64_t v58 = (unsigned __int8 *)((unint64_t)&v50[v85 + v45] & v55);
    unsigned int v59 = v58[v109];
    unsigned int v60 = v59 - 2;
    if (v59 >= 2)
    {
      if (v109 <= 3) {
        uint64_t v61 = v109;
      }
      else {
        uint64_t v61 = 4;
      }
      switch(v61)
      {
        case 1:
          int v62 = *v58;
          if (v109 < 4) {
            goto LABEL_60;
          }
          goto LABEL_62;
        case 2:
          int v62 = *(unsigned __int16 *)v58;
          if (v109 >= 4) {
            goto LABEL_62;
          }
          goto LABEL_60;
        case 3:
          int v62 = *(unsigned __int16 *)((unint64_t)&v50[v85 + v45] & v55) | (*((unsigned __int8 *)&def_5F050
                                                                                  + ((unint64_t)&v50[v85 + v45] & v55)
                                                                                  + 2) << 16);
          if (v109 < 4) {
            goto LABEL_60;
          }
          goto LABEL_62;
        case 4:
          int v62 = *(_DWORD *)v58;
          if (v109 < 4) {
LABEL_60:
          }
            unsigned int v59 = (v62 | (v60 << (8 * v109))) + 2;
          else {
LABEL_62:
          }
            unsigned int v59 = v62 + 2;
          break;
        default:
          break;
      }
    }
    unint64_t v63 = v109 + 1;
    if (v59 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v92 + 16))(v57, v58, v93);
      char v64 = 1;
    }
    else
    {
      *uint64_t v57 = *(void *)v58;
      swift_retain();
      char v64 = 0;
    }
    uint64_t v65 = ~v111;
    *((unsigned char *)v57 + v109) = v64;
    uint64_t v66 = (char *)v57 + v63;
    uint64_t v67 = &v58[v63];
    unint64_t v68 = ((unint64_t)v57 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v69 = (unint64_t)&v58[v63 + 7] & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned char *)(v69 + 40))
    {
      uint64_t v70 = *(void *)(v69 + 24);
      if (v70)
      {
        *(void *)(v68 + 24) = v70;
        *(void *)(v68 + 32) = *(void *)(v69 + 32);
        (**(void (***)(unint64_t))(v70 - 8))(((unint64_t)v57 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
      }
      else
      {
        long long v72 = *(_OWORD *)v69;
        long long v73 = *(_OWORD *)(v69 + 16);
        *(void *)(v68 + 32) = *(void *)(v69 + 32);
        *(_OWORD *)unint64_t v68 = v72;
        *(_OWORD *)(v68 + 16) = v73;
      }
      uint64_t v71 = v86;
      *(unsigned char *)(v68 + 40) = 1;
    }
    else
    {
      *(void *)unint64_t v68 = *(void *)v69;
      *(unsigned char *)(v68 + 40) = 0;
      swift_retain();
      uint64_t v71 = v86;
    }
    uint64_t v74 = ~v71;
    unint64_t v75 = (unint64_t)(v66 + 55) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v76 = (unint64_t)(v67 + 55) & 0xFFFFFFFFFFFFFFF8;
    id v77 = *(id *)v76;
    char v78 = *(unsigned char *)(v76 + 8);
    sub_1D00C(*(id *)v76, v78);
    *(void *)unint64_t v75 = v77;
    *(unsigned char *)(v75 + 8) = v78;
    uint64_t v79 = (void *)((v75 + v111 + 9) & v65);
    uint64_t v80 = (const void *)((v76 + v111 + 9) & v65);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v98 + 48))(v80, 1, v99))
    {
      memcpy(v79, v80, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v98 + 16))(v79, v80, v99);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v79, 0, 1, v99);
    }
    *(void *)(((unint64_t)v79 + __n + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v80 + __n + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v100 + 16);
    swift_retain();
    v81(((unint64_t)v79 + v87) & v74, ((unint64_t)v80 + v87) & v74, v102);
    return a1;
  }
  return (uint64_t *)v35;
}

uint64_t sub_83DCC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  int v4 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v4 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = ((unint64_t)v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v7);
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v9 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v10 = v9 + 8;
  unint64_t v11 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v11);
  uint64_t v12 = *(void *)(v10 + 56);
  uint64_t v13 = sub_26A6E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  unint64_t v16 = (unsigned __int8 *)((v11 + v12 + v15) & ~v15);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(v14 + 64);
  }
  unsigned int v18 = v16[v17];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *v16;
        goto LABEL_15;
      case 2:
        int v21 = *(unsigned __int16 *)v16;
        goto LABEL_15;
      case 3:
        int v21 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_15;
      case 4:
        int v21 = *(_DWORD *)v16;
LABEL_15:
        int v22 = (v21 | (v19 << (8 * v17))) + 2;
        unsigned int v18 = v21 + 2;
        if (v17 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  if (v18 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v16, v13);
  }
  else {
    swift_release();
  }
  uint64_t v23 = sub_269D00();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v26 = (unsigned __int8 *)((unint64_t)&v16[v17 + 1 + v25] & ~v25);
  if (*(void *)(v24 + 64) <= 8uLL) {
    uint64_t v27 = 8;
  }
  else {
    uint64_t v27 = *(void *)(v24 + 64);
  }
  unsigned int v28 = v26[v27];
  unsigned int v29 = v28 - 2;
  if (v28 >= 2)
  {
    if (v27 <= 3) {
      uint64_t v30 = v27;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *v26;
        goto LABEL_32;
      case 2:
        int v31 = *(unsigned __int16 *)v26;
        goto LABEL_32;
      case 3:
        int v31 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        goto LABEL_32;
      case 4:
        int v31 = *(_DWORD *)v26;
LABEL_32:
        int v32 = (v31 | (v29 << (8 * v27))) + 2;
        unsigned int v28 = v31 + 2;
        if (v27 < 4) {
          unsigned int v28 = v32;
        }
        break;
      default:
        break;
    }
  }
  if (v28 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v26, v23);
  }
  else {
    swift_release();
  }
  uint64_t v33 = sub_26A2C0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(_DWORD *)(v34 + 80) & 0xF8 | 7;
  uint64_t v36 = (unsigned __int8 *)((unint64_t)&v26[v27 + 1 + v35] & ~v35);
  if (*(void *)(v34 + 64) <= 8uLL) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = *(void *)(v34 + 64);
  }
  unsigned int v38 = v36[v37];
  unsigned int v39 = v38 - 2;
  if (v38 >= 2)
  {
    if (v37 <= 3) {
      uint64_t v40 = v37;
    }
    else {
      uint64_t v40 = 4;
    }
    switch(v40)
    {
      case 1:
        int v41 = *v36;
        goto LABEL_49;
      case 2:
        int v41 = *(unsigned __int16 *)v36;
        goto LABEL_49;
      case 3:
        int v41 = *(unsigned __int16 *)v36 | (v36[2] << 16);
        goto LABEL_49;
      case 4:
        int v41 = *(_DWORD *)v36;
LABEL_49:
        int v42 = (v41 | (v39 << (8 * v37))) + 2;
        unsigned int v38 = v41 + 2;
        if (v37 < 4) {
          unsigned int v38 = v42;
        }
        break;
      default:
        break;
    }
  }
  if (v38 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v34 + 8))(v36, v33);
  }
  else {
    swift_release();
  }
  unsigned int v43 = &v36[v37];
  uint64_t v44 = (uint64_t)&v36[v37 + 1];
  unint64_t v45 = (unint64_t)(v43 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v45 + 40))
  {
    if (*(void *)(v45 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v45);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v46 = (v44 + 55) & 0xFFFFFFFFFFFFFFF8;
  sub_1D1EC(*(id *)v46, *(unsigned char *)(v46 + 8));
  uint64_t v47 = sub_269810();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(_DWORD *)(v48 + 80) & 0xF8 | 7;
  uint64_t v50 = (v46 + v49 + 9) & ~v49;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v50, 1, v47)) {
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v47);
  }
  if (*(_DWORD *)(v48 + 84)) {
    uint64_t v51 = *(void *)(v48 + 64);
  }
  else {
    uint64_t v51 = *(void *)(v48 + 64) + 1;
  }
  swift_release();
  uint64_t v52 = sub_26A340();
  uint64_t v53 = *(void *)(v52 - 8);
  int v54 = *(uint64_t (**)(unint64_t, uint64_t))(v53 + 8);
  uint64_t v55 = v52;
  unint64_t v56 = (v50 + ((v51 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v53 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);

  return v54(v56, v55);
}

void *sub_84380(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  unint64_t v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (unint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  if (v8 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v6 = *(_OWORD *)v7;
  }
  else
  {
    unint64_t v9 = v7[1];
    *(void *)unint64_t v6 = v8;
    *(void *)(v6 + 8) = v9;
    swift_retain();
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v6 + v12 + 16) & ~v12;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 48);
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 48);
  uint64_t v23 = sub_26A6E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v26 = (void *)((v22 + v25 + v20) & ~v25);
  uint64_t v27 = (unsigned __int8 *)((v22 + v25 + v21) & ~v25);
  if (*(void *)(v24 + 64) <= 8uLL) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = *(void *)(v24 + 64);
  }
  unsigned int v29 = v27[v28];
  unsigned int v30 = v29 - 2;
  if (v29 >= 2)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *v27;
        if (v28 >= 4) {
          goto LABEL_21;
        }
        goto LABEL_17;
      case 2:
        int v32 = *(unsigned __int16 *)v27;
        if (v28 >= 4) {
          goto LABEL_21;
        }
        goto LABEL_17;
      case 3:
        int v32 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        if (v28 < 4) {
          goto LABEL_17;
        }
        goto LABEL_21;
      case 4:
        int v32 = *(_DWORD *)v27;
        if (v28 < 4)
        {
LABEL_17:
          unsigned int v29 = (v32 | (v30 << (8 * v28))) + 2;
          break;
        }
LABEL_21:
        if (v32 != -1) {
          goto LABEL_22;
        }
        goto LABEL_19;
      default:
        break;
    }
  }
  if (v29 == 1)
  {
LABEL_19:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v24 + 16))(v26, v27, v23);
    char v33 = 1;
  }
  else
  {
LABEL_22:
    *uint64_t v26 = *(void *)v27;
    swift_retain();
    char v33 = 0;
  }
  *((unsigned char *)v26 + v28) = v33;
  uint64_t v34 = v28 + 1;
  uint64_t v35 = sub_269D00();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(_DWORD *)(v36 + 80) & 0xF8 | 7;
  unsigned int v38 = (void *)(((unint64_t)v26 + v34 + v37) & ~v37);
  unsigned int v39 = (unsigned __int8 *)((unint64_t)&v27[v34 + v37] & ~v37);
  if (*(void *)(v36 + 64) <= 8uLL) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = *(void *)(v36 + 64);
  }
  unsigned int v41 = v39[v40];
  unsigned int v42 = v41 - 2;
  if (v41 >= 2)
  {
    if (v40 <= 3) {
      uint64_t v43 = v40;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *v39;
        if (v40 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_36;
      case 2:
        int v44 = *(unsigned __int16 *)v39;
        if (v40 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_36;
      case 3:
        int v44 = *(unsigned __int16 *)v39 | (v39[2] << 16);
        if (v40 < 4) {
          goto LABEL_36;
        }
        goto LABEL_40;
      case 4:
        int v44 = *(_DWORD *)v39;
        if (v40 < 4)
        {
LABEL_36:
          unsigned int v41 = (v44 | (v42 << (8 * v40))) + 2;
          break;
        }
LABEL_40:
        if (v44 != -1) {
          goto LABEL_41;
        }
        goto LABEL_38;
      default:
        break;
    }
  }
  if (v41 == 1)
  {
LABEL_38:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 16))(v38, v39, v35);
    char v45 = 1;
  }
  else
  {
LABEL_41:
    *unsigned int v38 = *(void *)v39;
    swift_retain();
    char v45 = 0;
  }
  *((unsigned char *)v38 + v40) = v45;
  uint64_t v46 = v40 + 1;
  uint64_t v47 = sub_26A2C0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(_DWORD *)(v48 + 80) & 0xF8 | 7;
  uint64_t v50 = (void *)(((unint64_t)v38 + v46 + v49) & ~v49);
  uint64_t v51 = (unsigned __int8 *)((unint64_t)&v39[v46 + v49] & ~v49);
  if (*(void *)(v48 + 64) <= 8uLL) {
    uint64_t v52 = 8;
  }
  else {
    uint64_t v52 = *(void *)(v48 + 64);
  }
  unsigned int v53 = v51[v52];
  unsigned int v54 = v53 - 2;
  if (v53 >= 2)
  {
    if (v52 <= 3) {
      uint64_t v55 = v52;
    }
    else {
      uint64_t v55 = 4;
    }
    switch(v55)
    {
      case 1:
        int v56 = *v51;
        if (v52 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_55;
      case 2:
        int v56 = *(unsigned __int16 *)v51;
        if (v52 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_55;
      case 3:
        int v56 = *(unsigned __int16 *)v51 | (v51[2] << 16);
        if (v52 < 4) {
          goto LABEL_55;
        }
        goto LABEL_59;
      case 4:
        int v56 = *(_DWORD *)v51;
        if (v52 < 4)
        {
LABEL_55:
          unsigned int v53 = (v56 | (v54 << (8 * v52))) + 2;
          break;
        }
LABEL_59:
        if (v56 != -1) {
          goto LABEL_60;
        }
        goto LABEL_57;
      default:
        break;
    }
  }
  if (v53 == 1)
  {
LABEL_57:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v48 + 16))(v50, v51, v47);
    char v57 = 1;
  }
  else
  {
LABEL_60:
    *uint64_t v50 = *(void *)v51;
    swift_retain();
    char v57 = 0;
  }
  *((unsigned char *)v50 + v52) = v57;
  uint64_t v58 = v52 + 1;
  unsigned int v59 = (char *)v50 + v52 + 1;
  unsigned int v60 = &v51[v58];
  unint64_t v61 = (unint64_t)(v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = (unint64_t)(v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v62 + 40))
  {
    uint64_t v63 = *(void *)(v62 + 24);
    if (v63)
    {
      *(void *)(v61 + 24) = v63;
      *(void *)(v61 + 32) = *(void *)(v62 + 32);
      (**(void (***)(unint64_t))(v63 - 8))((unint64_t)(v59 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      long long v64 = *(_OWORD *)v62;
      long long v65 = *(_OWORD *)(v62 + 16);
      *(void *)(v61 + 32) = *(void *)(v62 + 32);
      *(_OWORD *)unint64_t v61 = v64;
      *(_OWORD *)(v61 + 16) = v65;
    }
    *(unsigned char *)(v61 + 40) = 1;
  }
  else
  {
    *(void *)unint64_t v61 = *(void *)v62;
    *(unsigned char *)(v61 + 40) = 0;
    swift_retain();
  }
  unint64_t v66 = (unint64_t)(v59 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (unint64_t)(v60 + 55) & 0xFFFFFFFFFFFFFFF8;
  id v68 = *(id *)v67;
  char v69 = *(unsigned char *)(v67 + 8);
  sub_1D00C(*(id *)v67, v69);
  *(void *)unint64_t v66 = v68;
  *(unsigned char *)(v66 + 8) = v69;
  uint64_t v70 = sub_269810();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(_DWORD *)(v71 + 80) & 0xF8;
  uint64_t v73 = v72 + 16;
  unint64_t v74 = v72 + 16 + v66;
  unint64_t v75 = ~v72 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = v74 & v75;
  unint64_t v77 = (v73 + v67) & v75;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v71 + 48))(v77, 1, v70))
  {
    int v78 = *(_DWORD *)(v71 + 84);
    size_t v79 = *(void *)(v71 + 64);
    if (v78) {
      size_t v80 = v79;
    }
    else {
      size_t v80 = v79 + 1;
    }
    memcpy((void *)v76, (const void *)v77, v80);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(v76, v77, v70);
    uint64_t v82 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v71 + 56);
    uint64_t v81 = v71 + 56;
    v82(v76, 0, 1, v70);
    int v78 = *(_DWORD *)(v81 + 28);
    size_t v79 = *(void *)(v81 + 8);
  }
  if (v78) {
    size_t v83 = v79;
  }
  else {
    size_t v83 = v79 + 1;
  }
  *(void *)(((v76 | 7) + v83) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v77 | 7) + v83) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v84 = (v83 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v85 = sub_26A340();
  uint64_t v86 = *(void *)(v85 - 8);
  unint64_t v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 16);
  uint64_t v88 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v89 = v84 + v88 + 8;
  unint64_t v90 = (v89 + v76) & ~v88;
  unint64_t v91 = (v89 + v77) & ~v88;
  swift_retain();
  v87(v90, v91, v85);
  return a1;
}

void *sub_84B0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (unint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = *v7;
  if (*v6 < 0xFFFFFFFFuLL)
  {
    if (v8 >= 0xFFFFFFFF)
    {
      unint64_t v10 = v7[1];
      *unint64_t v6 = v8;
      v6[1] = v10;
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v8 >= 0xFFFFFFFF)
    {
      unint64_t v9 = v7[1];
      *unint64_t v6 = v8;
      v6[1] = v9;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v6 = *(_OWORD *)v7;
LABEL_8:
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v6 + v13 + 16) & ~v13;
  uint64_t v15 = ((unint64_t)v7 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v14, v15);
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = *(void *)(v12 + 40) + v18;
  uint64_t v20 = (v19 + v14) & ~v18;
  uint64_t v21 = (v19 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 40);
  uint64_t v23 = sub_26A6E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v26 = (unsigned __int8 *)((v22 + v25 + v20) & ~v25);
  uint64_t v27 = (unsigned __int8 *)((v22 + v25 + v21) & ~v25);
  if (*(void *)(v24 + 64) <= 8uLL) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = *(void *)(v24 + 64);
  }
  if (v26 != v27)
  {
    uint64_t v29 = v23;
    unsigned int v30 = v26[v28];
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v32 = v28;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v26;
          if (v28 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 2:
          int v33 = *(unsigned __int16 *)v26;
          if (v28 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 3:
          int v33 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          if (v28 < 4) {
            goto LABEL_22;
          }
          goto LABEL_26;
        case 4:
          int v33 = *(_DWORD *)v26;
          if (v28 < 4)
          {
LABEL_22:
            unsigned int v30 = (v33 | (v31 << (8 * v28))) + 2;
            break;
          }
LABEL_26:
          if (v33 != -1) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
          break;
      }
    }
    if (v30 == 1) {
LABEL_24:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v26, v23);
    else {
LABEL_27:
    }
      swift_release();
    unsigned int v34 = v27[v28];
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v36 = v28;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v27;
          if (v28 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_38;
        case 2:
          int v37 = *(unsigned __int16 *)v27;
          if (v28 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_38;
        case 3:
          int v37 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          if (v28 < 4) {
            goto LABEL_38;
          }
          goto LABEL_42;
        case 4:
          int v37 = *(_DWORD *)v27;
          if (v28 < 4)
          {
LABEL_38:
            unsigned int v34 = (v37 | (v35 << (8 * v28))) + 2;
            break;
          }
LABEL_42:
          if (v37 != -1) {
            goto LABEL_43;
          }
          goto LABEL_40;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
LABEL_40:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(v26, v27, v29);
      v26[v28] = 1;
    }
    else
    {
LABEL_43:
      *(void *)uint64_t v26 = *(void *)v27;
      v26[v28] = 0;
      swift_retain();
    }
  }
  uint64_t v38 = sub_269D00();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(_DWORD *)(v39 + 80) & 0xF8 | 7;
  uint64_t v41 = v28 + v40 + 1;
  unsigned int v42 = (unsigned __int8 *)((unint64_t)&v26[v41] & ~v40);
  uint64_t v43 = (unsigned __int8 *)((unint64_t)&v27[v41] & ~v40);
  if (*(void *)(v39 + 64) <= 8uLL) {
    uint64_t v44 = 8;
  }
  else {
    uint64_t v44 = *(void *)(v39 + 64);
  }
  if (v42 != v43)
  {
    uint64_t v45 = v38;
    unsigned int v46 = v42[v44];
    unsigned int v47 = v46 - 2;
    if (v46 >= 2)
    {
      if (v44 <= 3) {
        uint64_t v48 = v44;
      }
      else {
        uint64_t v48 = 4;
      }
      switch(v48)
      {
        case 1:
          int v49 = *v42;
          if (v44 >= 4) {
            goto LABEL_62;
          }
          goto LABEL_58;
        case 2:
          int v49 = *(unsigned __int16 *)v42;
          if (v44 >= 4) {
            goto LABEL_62;
          }
          goto LABEL_58;
        case 3:
          int v49 = *(unsigned __int16 *)v42 | (v42[2] << 16);
          if (v44 < 4) {
            goto LABEL_58;
          }
          goto LABEL_62;
        case 4:
          int v49 = *(_DWORD *)v42;
          if (v44 < 4)
          {
LABEL_58:
            unsigned int v46 = (v49 | (v47 << (8 * v44))) + 2;
            break;
          }
LABEL_62:
          if (v49 != -1) {
            goto LABEL_63;
          }
          goto LABEL_60;
        default:
          break;
      }
    }
    if (v46 == 1) {
LABEL_60:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v39 + 8))(v42, v38);
    else {
LABEL_63:
    }
      swift_release();
    unsigned int v50 = v43[v44];
    unsigned int v51 = v50 - 2;
    if (v50 >= 2)
    {
      if (v44 <= 3) {
        uint64_t v52 = v44;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v43;
          if (v44 >= 4) {
            goto LABEL_78;
          }
          goto LABEL_74;
        case 2:
          int v53 = *(unsigned __int16 *)v43;
          if (v44 >= 4) {
            goto LABEL_78;
          }
          goto LABEL_74;
        case 3:
          int v53 = *(unsigned __int16 *)v43 | (v43[2] << 16);
          if (v44 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 4:
          int v53 = *(_DWORD *)v43;
          if (v44 < 4)
          {
LABEL_74:
            unsigned int v50 = (v53 | (v51 << (8 * v44))) + 2;
            break;
          }
LABEL_78:
          if (v53 != -1) {
            goto LABEL_79;
          }
          goto LABEL_76;
        default:
          break;
      }
    }
    if (v50 == 1)
    {
LABEL_76:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v39 + 16))(v42, v43, v45);
      v42[v44] = 1;
    }
    else
    {
LABEL_79:
      *(void *)unsigned int v42 = *(void *)v43;
      v42[v44] = 0;
      swift_retain();
    }
  }
  uint64_t v54 = sub_26A2C0();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(_DWORD *)(v55 + 80) & 0xF8 | 7;
  uint64_t v57 = v44 + v56 + 1;
  uint64_t v58 = (unsigned __int8 *)((unint64_t)&v42[v57] & ~v56);
  unsigned int v59 = (unsigned __int8 *)((unint64_t)&v43[v57] & ~v56);
  if (*(void *)(v55 + 64) <= 8uLL) {
    uint64_t v60 = 8;
  }
  else {
    uint64_t v60 = *(void *)(v55 + 64);
  }
  if (v58 != v59)
  {
    uint64_t v61 = v54;
    unsigned int v62 = v58[v60];
    unsigned int v63 = v62 - 2;
    if (v62 >= 2)
    {
      if (v60 <= 3) {
        uint64_t v64 = v60;
      }
      else {
        uint64_t v64 = 4;
      }
      switch(v64)
      {
        case 1:
          int v65 = *v58;
          if (v60 >= 4) {
            goto LABEL_98;
          }
          goto LABEL_94;
        case 2:
          int v65 = *(unsigned __int16 *)v58;
          if (v60 >= 4) {
            goto LABEL_98;
          }
          goto LABEL_94;
        case 3:
          int v65 = *(unsigned __int16 *)v58 | (v58[2] << 16);
          if (v60 < 4) {
            goto LABEL_94;
          }
          goto LABEL_98;
        case 4:
          int v65 = *(_DWORD *)v58;
          if (v60 < 4)
          {
LABEL_94:
            unsigned int v62 = (v65 | (v63 << (8 * v60))) + 2;
            break;
          }
LABEL_98:
          if (v65 != -1) {
            goto LABEL_99;
          }
          goto LABEL_96;
        default:
          break;
      }
    }
    if (v62 == 1) {
LABEL_96:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v55 + 8))(v58, v54);
    else {
LABEL_99:
    }
      swift_release();
    unsigned int v66 = v59[v60];
    unsigned int v67 = v66 - 2;
    if (v66 >= 2)
    {
      if (v60 <= 3) {
        uint64_t v68 = v60;
      }
      else {
        uint64_t v68 = 4;
      }
      switch(v68)
      {
        case 1:
          int v69 = *v59;
          if (v60 >= 4) {
            goto LABEL_114;
          }
          goto LABEL_110;
        case 2:
          int v69 = *(unsigned __int16 *)v59;
          if (v60 >= 4) {
            goto LABEL_114;
          }
          goto LABEL_110;
        case 3:
          int v69 = *(unsigned __int16 *)v59 | (v59[2] << 16);
          if (v60 < 4) {
            goto LABEL_110;
          }
          goto LABEL_114;
        case 4:
          int v69 = *(_DWORD *)v59;
          if (v60 < 4)
          {
LABEL_110:
            unsigned int v66 = (v69 | (v67 << (8 * v60))) + 2;
            break;
          }
LABEL_114:
          if (v69 != -1) {
            goto LABEL_115;
          }
          goto LABEL_112;
        default:
          break;
      }
    }
    if (v66 == 1)
    {
LABEL_112:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 16))(v58, v59, v61);
      v58[v60] = 1;
    }
    else
    {
LABEL_115:
      *(void *)uint64_t v58 = *(void *)v59;
      v58[v60] = 0;
      swift_retain();
    }
  }
  uint64_t v70 = v60 + 1;
  uint64_t v71 = &v58[v60 + 1];
  uint64_t v72 = &v59[v70];
  unint64_t v73 = (unint64_t)(v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (unint64_t)&v59[v70 + 7] & 0xFFFFFFFFFFFFFFF8;
  if (v73 != v74)
  {
    sub_B6DC((unint64_t)(v71 + 7) & 0xFFFFFFFFFFFFFFF8, &qword_2EBCA0);
    if (*(unsigned char *)(v74 + 40))
    {
      uint64_t v75 = *(void *)(v74 + 24);
      if (v75)
      {
        *(void *)(v73 + 24) = v75;
        *(void *)(v73 + 32) = *(void *)(v74 + 32);
        (**(void (***)(unint64_t, unint64_t))(v75 - 8))((unint64_t)(v71 + 7) & 0xFFFFFFFFFFFFFFF8, v74);
      }
      else
      {
        long long v76 = *(_OWORD *)v74;
        long long v77 = *(_OWORD *)(v74 + 16);
        *(void *)(v73 + 32) = *(void *)(v74 + 32);
        *(_OWORD *)unint64_t v73 = v76;
        *(_OWORD *)(v73 + 16) = v77;
      }
      *(unsigned char *)(v73 + 40) = 1;
    }
    else
    {
      *(void *)unint64_t v73 = *(void *)v74;
      *(unsigned char *)(v73 + 40) = 0;
      swift_retain();
    }
  }
  unint64_t v78 = (unint64_t)(v71 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = (unint64_t)(v72 + 55) & 0xFFFFFFFFFFFFFFF8;
  id v80 = *(id *)v79;
  char v81 = *(unsigned char *)(v79 + 8);
  sub_1D00C(*(id *)v79, v81);
  uint64_t v82 = *(void **)v78;
  char v83 = *(unsigned char *)(v78 + 8);
  *(void *)unint64_t v78 = v80;
  *(unsigned char *)(v78 + 8) = v81;
  sub_1D1EC(v82, v83);
  uint64_t v84 = sub_269810();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(_DWORD *)(v85 + 80) & 0xF8;
  uint64_t v87 = v86 + 16;
  unint64_t v88 = v86 + 16 + v78;
  unint64_t v89 = ~v86 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v90 = v88 & v89;
  unint64_t v91 = (v87 + v79) & v89;
  uint64_t v92 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v85 + 48);
  LODWORD(v78) = v92(v88 & v89, 1, v84);
  int v93 = v92(v91, 1, v84);
  if (v78)
  {
    if (!v93)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 16))(v90, v91, v84);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v85 + 56))(v90, 0, 1, v84);
      goto LABEL_134;
    }
    int v94 = *(_DWORD *)(v85 + 84);
    size_t v95 = *(void *)(v85 + 64);
  }
  else
  {
    if (!v93)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 24))(v90, v91, v84);
      goto LABEL_134;
    }
    (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v90, v84);
    int v94 = *(_DWORD *)(v85 + 84);
    size_t v95 = *(void *)(v85 + 64);
  }
  if (v94) {
    size_t v96 = v95;
  }
  else {
    size_t v96 = v95 + 1;
  }
  memcpy((void *)v90, (const void *)v91, v96);
LABEL_134:
  if (*(_DWORD *)(v85 + 84)) {
    uint64_t v97 = *(void *)(v85 + 64);
  }
  else {
    uint64_t v97 = *(void *)(v85 + 64) + 1;
  }
  *(void *)(((v90 | 7) + v97) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v91 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v98 = sub_26A340();
  uint64_t v99 = *(void *)(v98 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v99 + 24))((((v97 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v99 + 80) + 8 + v90) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80), (((v97 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v99 + 80) + 8 + v91) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80), v98);
  return a1;
}

_OWORD *sub_85634(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v6 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v5 = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 8);
    *(void *)unint64_t v5 = *(void *)v6;
    *(void *)(v5 + 8) = v7;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v5 + v10 + 16) & ~v10;
  uint64_t v12 = (v6 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 32);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = sub_26A6E0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  uint64_t v24 = (void *)((v20 + v23 + v18) & ~v23);
  uint64_t v25 = (unsigned __int8 *)((v20 + v23 + v19) & ~v23);
  if (*(void *)(v22 + 64) <= 8uLL) {
    uint64_t v26 = 8;
  }
  else {
    uint64_t v26 = *(void *)(v22 + 64);
  }
  unsigned int v27 = v25[v26];
  unsigned int v28 = v27 - 2;
  if (v27 >= 2)
  {
    if (v26 <= 3) {
      uint64_t v29 = v26;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *v25;
        if (v26 >= 4) {
          goto LABEL_21;
        }
        goto LABEL_17;
      case 2:
        int v30 = *(unsigned __int16 *)v25;
        if (v26 >= 4) {
          goto LABEL_21;
        }
        goto LABEL_17;
      case 3:
        int v30 = *(unsigned __int16 *)v25 | (v25[2] << 16);
        if (v26 < 4) {
          goto LABEL_17;
        }
        goto LABEL_21;
      case 4:
        int v30 = *(_DWORD *)v25;
        if (v26 < 4)
        {
LABEL_17:
          unsigned int v27 = (v30 | (v28 << (8 * v26))) + 2;
          break;
        }
LABEL_21:
        if (v30 != -1) {
          goto LABEL_22;
        }
        goto LABEL_19;
      default:
        break;
    }
  }
  if (v27 == 1)
  {
LABEL_19:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v22 + 32))(v24, v25, v21);
    char v31 = 1;
  }
  else
  {
LABEL_22:
    char v31 = 0;
    *uint64_t v24 = *(void *)v25;
  }
  *((unsigned char *)v24 + v26) = v31;
  uint64_t v32 = v26 + 1;
  uint64_t v33 = sub_269D00();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(_DWORD *)(v34 + 80) & 0xF8 | 7;
  uint64_t v36 = (void *)(((unint64_t)v24 + v32 + v35) & ~v35);
  int v37 = (unsigned __int8 *)((unint64_t)&v25[v32 + v35] & ~v35);
  if (*(void *)(v34 + 64) <= 8uLL) {
    uint64_t v38 = 8;
  }
  else {
    uint64_t v38 = *(void *)(v34 + 64);
  }
  unsigned int v39 = v37[v38];
  unsigned int v40 = v39 - 2;
  if (v39 >= 2)
  {
    if (v38 <= 3) {
      uint64_t v41 = v38;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *v37;
        goto LABEL_35;
      case 2:
        int v42 = *(unsigned __int16 *)v37;
        goto LABEL_35;
      case 3:
        int v42 = *(unsigned __int16 *)v37 | (v37[2] << 16);
        goto LABEL_35;
      case 4:
        int v42 = *(_DWORD *)v37;
LABEL_35:
        int v43 = (v42 | (v40 << (8 * v38))) + 2;
        unsigned int v39 = v42 + 2;
        if (v38 < 4) {
          unsigned int v39 = v43;
        }
        break;
      default:
        break;
    }
  }
  if (v39 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v34 + 32))(v36, v37, v33);
    char v44 = 1;
  }
  else
  {
    char v44 = 0;
    *uint64_t v36 = *(void *)v37;
  }
  *((unsigned char *)v36 + v38) = v44;
  uint64_t v45 = v38 + 1;
  uint64_t v46 = sub_26A2C0();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(_DWORD *)(v47 + 80) & 0xF8 | 7;
  int v49 = (void *)(((unint64_t)v36 + v45 + v48) & ~v48);
  unsigned int v50 = (unsigned __int8 *)((unint64_t)&v37[v45 + v48] & ~v48);
  if (*(void *)(v47 + 64) <= 8uLL) {
    uint64_t v51 = 8;
  }
  else {
    uint64_t v51 = *(void *)(v47 + 64);
  }
  unsigned int v52 = v50[v51];
  unsigned int v53 = v52 - 2;
  if (v52 >= 2)
  {
    if (v51 <= 3) {
      uint64_t v54 = v51;
    }
    else {
      uint64_t v54 = 4;
    }
    switch(v54)
    {
      case 1:
        int v55 = *v50;
        goto LABEL_52;
      case 2:
        int v55 = *(unsigned __int16 *)v50;
        goto LABEL_52;
      case 3:
        int v55 = *(unsigned __int16 *)v50 | (v50[2] << 16);
        goto LABEL_52;
      case 4:
        int v55 = *(_DWORD *)v50;
LABEL_52:
        int v56 = (v55 | (v53 << (8 * v51))) + 2;
        unsigned int v52 = v55 + 2;
        if (v51 < 4) {
          unsigned int v52 = v56;
        }
        break;
      default:
        break;
    }
  }
  if (v52 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v47 + 32))(v49, v50, v46);
    char v57 = 1;
  }
  else
  {
    char v57 = 0;
    *int v49 = *(void *)v50;
  }
  *((unsigned char *)v49 + v51) = v57;
  uint64_t v58 = (char *)v49 + v51 + 1;
  unsigned int v59 = &v50[v51 + 1];
  uint64_t v60 = (_OWORD *)((unint64_t)(v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = (long long *)((unint64_t)(v59 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v62 = *v61;
  long long v63 = v61[1];
  *(_OWORD *)((char *)v60 + 25) = *(long long *)((char *)v61 + 25);
  *uint64_t v60 = v62;
  v60[1] = v63;
  unint64_t v64 = (unint64_t)(v58 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (unint64_t)(v59 + 55) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = *(void *)v65;
  *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
  *(void *)unint64_t v64 = v66;
  uint64_t v67 = sub_269810();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(_DWORD *)(v68 + 80) & 0xF8;
  uint64_t v70 = v69 + 16;
  unint64_t v71 = v69 + 16 + v64;
  unint64_t v72 = ~v69 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = v71 & v72;
  unint64_t v74 = (v70 + v65) & v72;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v68 + 48))(v74, 1, v67))
  {
    int v75 = *(_DWORD *)(v68 + 84);
    size_t v76 = *(void *)(v68 + 64);
    if (v75) {
      size_t v77 = v76;
    }
    else {
      size_t v77 = v76 + 1;
    }
    memcpy((void *)v73, (const void *)v74, v77);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v68 + 32))(v73, v74, v67);
    unint64_t v79 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v68 + 56);
    uint64_t v78 = v68 + 56;
    v79(v73, 0, 1, v67);
    int v75 = *(_DWORD *)(v78 + 28);
    size_t v76 = *(void *)(v78 + 8);
  }
  if (v75) {
    size_t v80 = v76;
  }
  else {
    size_t v80 = v76 + 1;
  }
  *(void *)(((v73 | 7) + v80) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v74 | 7) + v80) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v81 = (v80 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v82 = sub_26A340();
  uint64_t v83 = *(void *)(v82 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 32))((v81 + *(unsigned __int8 *)(v83 + 80) + 8 + v73) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80), (v81 + *(unsigned __int8 *)(v83 + 80) + 8 + v74) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80), v82);
  return a1;
}

void *sub_85CE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (unint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = *v8;
  if (*v7 < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      unint64_t v11 = v8[1];
      *uint64_t v7 = v9;
      v7[1] = v11;
      goto LABEL_8;
    }
  }
  else
  {
    if (v9 >= 0xFFFFFFFF)
    {
      unint64_t v10 = v8[1];
      *uint64_t v7 = v9;
      v7[1] = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
LABEL_8:
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (char *)v8 + v14;
  uint64_t v16 = ((unint64_t)v7 + v14 + 16) & ~v14;
  uint64_t v17 = (unint64_t)(v15 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 24);
  uint64_t v19 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = (v22 + v16) & ~v21;
  uint64_t v24 = (v22 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v23, v24);
  uint64_t v25 = *(void *)(v20 + 24);
  uint64_t v26 = sub_26A6E0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(_DWORD *)(v27 + 80) & 0xF8 | 7;
  uint64_t v29 = (unsigned __int8 *)((v25 + v28 + v23) & ~v28);
  int v30 = (unsigned __int8 *)((v25 + v28 + v24) & ~v28);
  if (*(void *)(v27 + 64) <= 8uLL) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = *(void *)(v27 + 64);
  }
  if (v29 != v30)
  {
    uint64_t v32 = v26;
    unsigned int v33 = v29[v31];
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v31 <= 3) {
        uint64_t v35 = v31;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v29;
          if (v31 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 2:
          int v36 = *(unsigned __int16 *)v29;
          if (v31 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 3:
          int v36 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          if (v31 < 4) {
            goto LABEL_22;
          }
          goto LABEL_26;
        case 4:
          int v36 = *(_DWORD *)v29;
          if (v31 < 4)
          {
LABEL_22:
            unsigned int v33 = (v36 | (v34 << (8 * v31))) + 2;
            break;
          }
LABEL_26:
          if (v36 != -1) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
          break;
      }
    }
    if (v33 == 1) {
LABEL_24:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(v29, v26);
    else {
LABEL_27:
    }
      swift_release();
    unsigned int v37 = v30[v31];
    unsigned int v38 = v37 - 2;
    if (v37 >= 2)
    {
      if (v31 <= 3) {
        uint64_t v39 = v31;
      }
      else {
        uint64_t v39 = 4;
      }
      switch(v39)
      {
        case 1:
          int v40 = *v30;
          if (v31 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_38;
        case 2:
          int v40 = *(unsigned __int16 *)v30;
          if (v31 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_38;
        case 3:
          int v40 = *(unsigned __int16 *)v30 | (v30[2] << 16);
          if (v31 < 4) {
            goto LABEL_38;
          }
          goto LABEL_42;
        case 4:
          int v40 = *(_DWORD *)v30;
          if (v31 < 4)
          {
LABEL_38:
            unsigned int v37 = (v40 | (v38 << (8 * v31))) + 2;
            break;
          }
LABEL_42:
          if (v40 != -1) {
            goto LABEL_43;
          }
          goto LABEL_40;
        default:
          break;
      }
    }
    if (v37 == 1)
    {
LABEL_40:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v27 + 32))(v29, v30, v32);
      char v41 = 1;
    }
    else
    {
LABEL_43:
      char v41 = 0;
      *(void *)uint64_t v29 = *(void *)v30;
    }
    v29[v31] = v41;
  }
  uint64_t v42 = sub_269D00();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(_DWORD *)(v43 + 80) & 0xF8 | 7;
  uint64_t v45 = v31 + v44 + 1;
  uint64_t v46 = (unsigned __int8 *)((unint64_t)&v29[v45] & ~v44);
  uint64_t v47 = (unsigned __int8 *)((unint64_t)&v30[v45] & ~v44);
  if (*(void *)(v43 + 64) <= 8uLL) {
    uint64_t v48 = 8;
  }
  else {
    uint64_t v48 = *(void *)(v43 + 64);
  }
  if (v46 != v47)
  {
    uint64_t v49 = v42;
    unsigned int v50 = v46[v48];
    unsigned int v51 = v50 - 2;
    if (v50 >= 2)
    {
      if (v48 <= 3) {
        uint64_t v52 = v48;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v46;
          if (v48 >= 4) {
            goto LABEL_63;
          }
          goto LABEL_59;
        case 2:
          int v53 = *(unsigned __int16 *)v46;
          if (v48 >= 4) {
            goto LABEL_63;
          }
          goto LABEL_59;
        case 3:
          int v53 = *(unsigned __int16 *)v46 | (v46[2] << 16);
          if (v48 < 4) {
            goto LABEL_59;
          }
          goto LABEL_63;
        case 4:
          int v53 = *(_DWORD *)v46;
          if (v48 < 4)
          {
LABEL_59:
            unsigned int v50 = (v53 | (v51 << (8 * v48))) + 2;
            break;
          }
LABEL_63:
          if (v53 != -1) {
            goto LABEL_64;
          }
          goto LABEL_61;
        default:
          break;
      }
    }
    if (v50 == 1) {
LABEL_61:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v43 + 8))(v46, v42);
    else {
LABEL_64:
    }
      swift_release();
    unsigned int v54 = v47[v48];
    unsigned int v55 = v54 - 2;
    if (v54 >= 2)
    {
      if (v48 <= 3) {
        uint64_t v56 = v48;
      }
      else {
        uint64_t v56 = 4;
      }
      switch(v56)
      {
        case 1:
          int v57 = *v47;
          if (v48 >= 4) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 2:
          int v57 = *(unsigned __int16 *)v47;
          if (v48 >= 4) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 3:
          int v57 = *(unsigned __int16 *)v47 | (v47[2] << 16);
          if (v48 < 4) {
            goto LABEL_75;
          }
          goto LABEL_79;
        case 4:
          int v57 = *(_DWORD *)v47;
          if (v48 < 4)
          {
LABEL_75:
            unsigned int v54 = (v57 | (v55 << (8 * v48))) + 2;
            break;
          }
LABEL_79:
          if (v57 != -1) {
            goto LABEL_80;
          }
          goto LABEL_77;
        default:
          break;
      }
    }
    if (v54 == 1)
    {
LABEL_77:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v43 + 32))(v46, v47, v49);
      char v58 = 1;
    }
    else
    {
LABEL_80:
      char v58 = 0;
      *(void *)uint64_t v46 = *(void *)v47;
    }
    v46[v48] = v58;
  }
  uint64_t v59 = sub_26A2C0();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(_DWORD *)(v60 + 80) & 0xF8 | 7;
  uint64_t v62 = v48 + v61 + 1;
  long long v63 = (unsigned __int8 *)((unint64_t)&v46[v62] & ~v61);
  unint64_t v64 = (unsigned __int8 *)((unint64_t)&v47[v62] & ~v61);
  if (*(void *)(v60 + 64) <= 8uLL) {
    uint64_t v65 = 8;
  }
  else {
    uint64_t v65 = *(void *)(v60 + 64);
  }
  if (v63 != v64)
  {
    uint64_t v66 = v59;
    unsigned int v67 = v63[v65];
    unsigned int v68 = v67 - 2;
    if (v67 >= 2)
    {
      if (v65 <= 3) {
        uint64_t v69 = v65;
      }
      else {
        uint64_t v69 = 4;
      }
      switch(v69)
      {
        case 1:
          int v70 = *v63;
          goto LABEL_95;
        case 2:
          int v70 = *(unsigned __int16 *)v63;
          goto LABEL_95;
        case 3:
          int v70 = *(unsigned __int16 *)v63 | (v63[2] << 16);
          goto LABEL_95;
        case 4:
          int v70 = *(_DWORD *)v63;
LABEL_95:
          int v71 = (v70 | (v68 << (8 * v65))) + 2;
          unsigned int v67 = v70 + 2;
          if (v65 < 4) {
            unsigned int v67 = v71;
          }
          break;
        default:
          break;
      }
    }
    if (v67 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(v63, v59);
    }
    else {
      swift_release();
    }
    unsigned int v72 = v64[v65];
    unsigned int v73 = v72 - 2;
    if (v72 >= 2)
    {
      if (v65 <= 3) {
        uint64_t v74 = v65;
      }
      else {
        uint64_t v74 = 4;
      }
      switch(v74)
      {
        case 1:
          int v75 = *v64;
          goto LABEL_109;
        case 2:
          int v75 = *(unsigned __int16 *)v64;
          goto LABEL_109;
        case 3:
          int v75 = *(unsigned __int16 *)v64 | (v64[2] << 16);
          goto LABEL_109;
        case 4:
          int v75 = *(_DWORD *)v64;
LABEL_109:
          int v76 = (v75 | (v73 << (8 * v65))) + 2;
          unsigned int v72 = v75 + 2;
          if (v65 < 4) {
            unsigned int v72 = v76;
          }
          break;
        default:
          break;
      }
    }
    if (v72 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 32))(v63, v64, v66);
      char v77 = 1;
    }
    else
    {
      char v77 = 0;
      *(void *)long long v63 = *(void *)v64;
    }
    v63[v65] = v77;
  }
  uint64_t v78 = &v63[v65 + 1];
  unint64_t v79 = &v64[v65 + 1];
  size_t v80 = (_OWORD *)((unint64_t)(v78 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v81 = (_OWORD *)((unint64_t)(v79 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v80 != v81)
  {
    sub_B6DC((unint64_t)(v78 + 7) & 0xFFFFFFFFFFFFFFF8, &qword_2EBCA0);
    long long v82 = *(_OWORD *)((char *)v81 + 25);
    long long v83 = v81[1];
    *size_t v80 = *v81;
    v80[1] = v83;
    *(_OWORD *)((char *)v80 + 25) = v82;
  }
  unint64_t v84 = (unint64_t)(v78 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v85 = (unint64_t)(v79 + 55) & 0xFFFFFFFFFFFFFFF8;
  char v86 = *(unsigned char *)(v85 + 8);
  uint64_t v87 = *(void **)v84;
  char v88 = *(unsigned char *)(v84 + 8);
  *(void *)unint64_t v84 = *(void *)v85;
  *(unsigned char *)(v84 + 8) = v86;
  sub_1D1EC(v87, v88);
  uint64_t v89 = sub_269810();
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v91 = *(_DWORD *)(v90 + 80) & 0xF8;
  uint64_t v92 = v91 + 16;
  unint64_t v93 = v91 + 16 + v84;
  unint64_t v94 = ~v91 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = v93 & v94;
  unint64_t v96 = (v92 + v85) & v94;
  uint64_t v97 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v90 + 48);
  int v98 = v97(v93 & v94, 1, v89);
  int v99 = v97(v96, 1, v89);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 32))(v95, v96, v89);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v90 + 56))(v95, 0, 1, v89);
      goto LABEL_128;
    }
    int v100 = *(_DWORD *)(v90 + 84);
    size_t v101 = *(void *)(v90 + 64);
  }
  else
  {
    if (!v99)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 40))(v95, v96, v89);
      goto LABEL_128;
    }
    (*(void (**)(unint64_t, uint64_t))(v90 + 8))(v95, v89);
    int v100 = *(_DWORD *)(v90 + 84);
    size_t v101 = *(void *)(v90 + 64);
  }
  if (v100) {
    size_t v102 = v101;
  }
  else {
    size_t v102 = v101 + 1;
  }
  memcpy((void *)v95, (const void *)v96, v102);
LABEL_128:
  if (*(_DWORD *)(v90 + 84)) {
    uint64_t v103 = *(void *)(v90 + 64);
  }
  else {
    uint64_t v103 = *(void *)(v90 + 64) + 1;
  }
  *(void *)(((v95 | 7) + v103) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v96 | 7) + v103) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v104 = sub_26A340();
  uint64_t v105 = *(void *)(v104 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 40))((((v103 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v105 + 80) + 8 + v95) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80), (((v103 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v105 + 80) + 8 + v96) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80), v104);
  return a1;
}

uint64_t sub_8672C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v54 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v54 - 8);
  uint64_t v52 = *(void *)(a3 + 24);
  uint64_t v4 = *(void *)(v52 - 8);
  unsigned int v53 = *(_DWORD *)(v4 + 84);
  unsigned int v55 = *(_DWORD *)(v3 + 84);
  if (v55 <= v53) {
    unsigned int v5 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v5 = *(_DWORD *)(v3 + 84);
  }
  uint64_t v61 = *(void *)(sub_26A6E0() - 8);
  unint64_t v6 = *(void *)(v61 + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  unint64_t v58 = v6;
  uint64_t v60 = *(void *)(sub_269D00() - 8);
  unint64_t v7 = *(void *)(v60 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unint64_t v57 = v7;
  uint64_t v8 = *(void *)(sub_26A2C0() - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unint64_t v56 = v9;
  uint64_t v50 = sub_269810();
  uint64_t v10 = *(void *)(v50 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  unsigned int v51 = v12;
  if (v5 <= v12) {
    unsigned int v5 = v12;
  }
  uint64_t v13 = *(void *)(sub_26A340() - 8);
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = *(void *)(v4 + 64);
  uint64_t v18 = v11;
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  if (v5 <= *(_DWORD *)(v13 + 84)) {
    unsigned int v20 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v20 = v5;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = 7;
  if (!v11) {
    uint64_t v22 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = *(_DWORD *)(v61 + 80) & 0xF8 | 7;
  uint64_t v24 = *(_DWORD *)(v60 + 80) & 0xF8 | 7;
  uint64_t v25 = v58 + v24 + 1;
  uint64_t v26 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v27 = v57 + v26 + 1;
  unint64_t v28 = v56 + 56;
  uint64_t v29 = *(_DWORD *)(v10 + 80) & 0xF8;
  unint64_t v30 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = v29 + 16;
  unint64_t v32 = ((v22 + *(void *)(v10 + 64)) & 0xFFFFFFFFFFFFFFF8) + v19 + 8;
  if (a2 <= v21) {
    goto LABEL_45;
  }
  unint64_t v33 = ((v32
        + ((v31
          + ((v28 + ((v27 + ((v25 + ((v17 + v23 + ((v15 + v16 + ((v14 + 32) & ~v14)) & ~v16)) & ~v23)) & ~v24)) & ~v26)) & 0xFFFFFFFFFFFFFFF8)) & v30)) & ~v19)
      + *(void *)(v13 + 64);
  char v34 = 8 * v33;
  if (v33 > 3) {
    goto LABEL_27;
  }
  unsigned int v37 = ((a2 - v21 + ~(-1 << v34)) >> v34) + 1;
  if (HIWORD(v37))
  {
    int v35 = *(_DWORD *)((char *)a1 + v33);
    if (v35) {
      goto LABEL_35;
    }
  }
  else
  {
    if (v37 <= 0xFF)
    {
      if (v37 < 2) {
        goto LABEL_45;
      }
LABEL_27:
      int v35 = *((unsigned __int8 *)a1 + v33);
      if (!*((unsigned char *)a1 + v33)) {
        goto LABEL_45;
      }
LABEL_35:
      int v38 = (v35 - 1) << v34;
      if (v33 > 3) {
        int v38 = 0;
      }
      if (v33)
      {
        if (v33 <= 3) {
          int v39 = v33;
        }
        else {
          int v39 = 4;
        }
        switch(v39)
        {
          case 2:
            int v40 = *a1;
            break;
          case 3:
            int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v40 = *(_DWORD *)a1;
            break;
          default:
            int v40 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v40 = 0;
      }
      return v21 + (v40 | v38) + 1;
    }
    int v35 = *(unsigned __int16 *)((char *)a1 + v33);
    if (*(unsigned __int16 *)((char *)a1 + v33)) {
      goto LABEL_35;
    }
  }
LABEL_45:
  if ((v20 & 0x80000000) == 0)
  {
    unint64_t v41 = *((void *)a1 + 1);
    if (v41 >= 0xFFFFFFFF) {
      LODWORD(v41) = -1;
    }
    return (v41 + 1);
  }
  unint64_t v42 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v14 + 16) & ~v14;
  if (v55 == v21)
  {
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v44 = v55;
    uint64_t v45 = v54;
LABEL_53:
    return v43(v42, v44, v45);
  }
  unint64_t v42 = (v42 + v15 + v16) & ~v16;
  if (v53 == v21)
  {
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v44 = v53;
    uint64_t v45 = v52;
    goto LABEL_53;
  }
  unint64_t v46 = (v31 + ((v28 + ((v27 + ((v25 + ((v42 + v17 + v23) & ~v23)) & ~v24)) & ~v26)) & 0xFFFFFFFFFFFFFFF8)) & v30;
  if (v51 == v21)
  {
    unsigned int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v46, v18, v50);
    if (v47 >= 2) {
      return v47 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v48 = (v32 + v46) & ~v19;
    uint64_t v49 = *(uint64_t (**)(unint64_t))(v13 + 48);
    return v49(v48);
  }
}

void sub_86D40(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v58 = *(void *)(a4 + 16);
  uint64_t v4 = *(void *)(v58 - 8);
  uint64_t v56 = *(void *)(a4 + 24);
  uint64_t v5 = *(void *)(v56 - 8);
  uint64_t v67 = v5;
  unsigned int v59 = *(_DWORD *)(v4 + 84);
  unsigned int v57 = *(_DWORD *)(v5 + 84);
  if (v59 <= v57) {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v60 = *(void *)(sub_26A6E0() - 8);
  unint64_t v7 = *(void *)(v60 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unint64_t v63 = v7;
  uint64_t v8 = *(void *)(sub_269D00() - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unint64_t v62 = v9;
  uint64_t v10 = *(void *)(sub_26A2C0() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unint64_t v61 = v11;
  uint64_t v53 = sub_269810();
  uint64_t v12 = *(void *)(v53 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  if (v13) {
    unsigned int v14 = v13 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v54 = v14;
  unsigned int v55 = v15;
  if (v6 <= v15) {
    unsigned int v6 = v15;
  }
  uint64_t v16 = *(unsigned int *)(v12 + 84);
  int v68 = 0;
  uint64_t v17 = *(void *)(sub_26A340() - 8);
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = *(void *)(v4 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = *(void *)(v5 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
  if (v6 <= *(_DWORD *)(v17 + 84)) {
    unsigned int v23 = *(_DWORD *)(v17 + 84);
  }
  else {
    unsigned int v23 = v6;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v23;
  }
  uint64_t v25 = *(_DWORD *)(v60 + 80) & 0xF8 | 7;
  uint64_t v26 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v27 = v63 + v26 + 1;
  uint64_t v28 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v29 = v62 + v28 + 1;
  uint64_t v30 = *(_DWORD *)(v12 + 80) & 0xF8;
  unint64_t v31 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = v30 + 16;
  unint64_t v33 = (v30
       + 16
       + ((v61 + 56 + ((v29 + ((v27 + ((v21 + v25 + ((v19 + v20 + ((v18 + 32) & ~v18)) & ~v20)) & ~v25)) & ~v26)) & ~v28)) & 0xFFFFFFFFFFFFFFF8)) & v31;
  if (v13) {
    size_t v34 = *(void *)(v12 + 64);
  }
  else {
    size_t v34 = *(void *)(v12 + 64) + 1;
  }
  unint64_t v35 = ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 8;
  size_t v36 = ((v35 + v33) & ~v22) + *(void *)(v17 + 64);
  if (a3 > v24)
  {
    if (v36 <= 3)
    {
      unsigned int v38 = ((a3 - v24 + ~(-1 << (8 * v36))) >> (8 * v36)) + 1;
      if (HIWORD(v38))
      {
        int v37 = 4;
      }
      else if (v38 >= 0x100)
      {
        int v37 = 2;
      }
      else
      {
        int v37 = v38 > 1;
      }
    }
    else
    {
      int v37 = 1;
    }
    int v68 = v37;
  }
  if (v24 < a2)
  {
    unsigned int v39 = ~v24 + a2;
    if (v36 < 4)
    {
      int v40 = (v39 >> (8 * v36)) + 1;
      if (v36)
      {
        int v42 = v39 & ~(-1 << (8 * v36));
        bzero(a1, v36);
        if (v36 == 3)
        {
          *a1 = v42;
          *((unsigned char *)a1 + 2) = BYTE2(v42);
        }
        else if (v36 == 2)
        {
          *a1 = v42;
        }
        else
        {
          *(unsigned char *)a1 = v42;
        }
      }
    }
    else
    {
      bzero(a1, v36);
      *(_DWORD *)a1 = v39;
      int v40 = 1;
    }
    switch(v68)
    {
      case 1:
        *((unsigned char *)a1 + v36) = v40;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v36) = v40;
        return;
      case 3:
        goto LABEL_86;
      case 4:
        *(_DWORD *)((char *)a1 + v36) = v40;
        return;
      default:
        return;
    }
  }
  uint64_t v41 = ~v22;
  switch(v68)
  {
    case 1:
      *((unsigned char *)a1 + v36) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)((char *)a1 + v36) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_86:
      __break(1u);
      JUMPOUT(0x87468);
    case 4:
      *(_DWORD *)((char *)a1 + v36) = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (!a2) {
        return;
      }
LABEL_48:
      if ((v23 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
        return;
      }
      unint64_t v43 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & ~v18;
      if (v59 == v24)
      {
        uint64_t v44 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
        uint64_t v45 = a2;
        uint64_t v46 = v59;
        uint64_t v47 = v58;
LABEL_80:
        v44(v43, v45, v46, v47);
        return;
      }
      unint64_t v43 = (v43 + v19 + v20) & ~v20;
      if (v57 == v24)
      {
        uint64_t v44 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
        uint64_t v45 = a2;
        uint64_t v46 = v57;
        uint64_t v47 = v56;
        goto LABEL_80;
      }
      unint64_t v48 = (unsigned char *)((v32
                     + ((v61 + 56 + ((v29 + ((v27 + ((v43 + v21 + v25) & ~v25)) & ~v26)) & ~v28)) & 0xFFFFFFFFFFFFFFF8)) & v31);
      if (v55 == v24)
      {
        if (v54 >= a2)
        {
          uint64_t v45 = a2 + 1;
          uint64_t v44 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
          unint64_t v43 = (unint64_t)v48;
          uint64_t v46 = v16;
          uint64_t v47 = v53;
          goto LABEL_80;
        }
        if (v34 <= 3) {
          int v49 = ~(-1 << (8 * v34));
        }
        else {
          int v49 = -1;
        }
        if (v34)
        {
          int v50 = v49 & (~v54 + a2);
          if (v34 <= 3) {
            int v51 = v34;
          }
          else {
            int v51 = 4;
          }
          bzero(v48, v34);
          switch(v51)
          {
            case 2:
              *(_WORD *)unint64_t v48 = v50;
              break;
            case 3:
              *(_WORD *)unint64_t v48 = v50;
              v48[2] = BYTE2(v50);
              break;
            case 4:
              *(_DWORD *)unint64_t v48 = v50;
              break;
            default:
              *unint64_t v48 = v50;
              break;
          }
        }
      }
      else
      {
        uint64_t v52 = *(void (**)(unint64_t, void))(v17 + 56);
        v52((unint64_t)&v48[v35] & v41, a2);
      }
      return;
  }
}

void sub_874A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_874F4()
{
  if (!qword_2EDA98)
  {
    sub_7B0C(&qword_2EDA00);
    unint64_t v0 = sub_26C380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EDA98);
    }
  }
}

uint64_t sub_87550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_87624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDA00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8768C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_876D4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for CGSize(0);
  sub_26C340();
  sub_4A98(&qword_2EA150);
  sub_26C340();
  sub_26C340();
  __n128 result = v10;
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = a1;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = KeyPath;
  *(unsigned char *)(a4 + 32) = 0;
  *(__n128 *)(a4 + 40) = v10;
  *(void *)(a4 + 56) = v11;
  *(__n128 *)(a4 + 64) = v10;
  *(__n128 *)(a4 + 80) = v10;
  *(void *)(a4 + 96) = v11;
  return result;
}

uint64_t sub_877D0()
{
  sub_B678(v0, (uint64_t)v28, &qword_2EDAE8);
  if (v30 != 255)
  {
    if (v30) {
      return *(void *)&v28[0];
    }
    long long v25 = v28[8];
    long long v26 = v28[9];
    uint64_t v27 = v29;
    long long v21 = v28[4];
    long long v22 = v28[5];
    long long v23 = v28[6];
    long long v24 = v28[7];
    v20[0] = v28[0];
    v20[1] = v28[1];
    void v20[2] = v28[2];
    void v20[3] = v28[3];
    CoverViewModel.source.getter((uint64_t)v16);
    unsigned __int8 v2 = v17;
    if (v17 != 255)
    {
      uint64_t v4 = v16[0];
      uint64_t v3 = v16[1];
      sub_412A8((uint64_t)v16);
      uint64_t v5 = v18;
      uint64_t v6 = v19;
      sub_4ADC(v16, v18);
      v14[0] = v4;
      v14[1] = v3;
      char v15 = v2 & 1;
      long long v7 = v21;
      uint64_t v8 = *(void *)(v0 + 240);
      char v9 = *(unsigned char *)(v0 + 248);
      sub_10E0C(v8, v9);
      double v10 = sub_401C0(v8, v9);
      sub_C374(v8, v9);
      char v13 = -2;
      __int16 v12 = -772;
      uint64_t v1 = (*(uint64_t (**)(void *, __int16 *, uint64_t, uint64_t, double, double, double))(v6 + 16))(v14, &v12, v5, v6, *(double *)&v7, *((double *)&v7 + 1), v10);
      sub_2D738((uint64_t)v20);
      sub_2D78C(v4, v3, v2);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v16);
      return v1;
    }
    sub_2D738((uint64_t)v20);
  }
  return 0;
}

uint64_t sub_87980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v16 = v5;
  uint64_t v17 = v4;
  uint64_t v15 = a2 + *(int *)(sub_4A98(&qword_2EDAF8) + 36);
  uint64_t v6 = sub_877D0();
  uint64_t v7 = *(void *)(v2 + 176);
  char v8 = *(unsigned char *)(v2 + 184);
  swift_retain();
  sub_876D4(v6, v7, v8, (uint64_t)v20);
  uint64_t v9 = v20[3];
  char v10 = v21;
  uint64_t v11 = v22;
  sub_4A98(&qword_2EAF60);
  sub_7C18(&qword_2EAF58, &qword_2EAF60);
  sub_26BE90();
  swift_release();
  swift_unknownObjectRelease();
  sub_C374(v9, v10);
  swift_release();

  swift_release();
  swift_release();
  __int16 v12 = (uint64_t *)(v15 + *(int *)(sub_4A98(&qword_2EDB00) + 36));
  uint64_t *v12 = v17;
  v12[1] = v16;
  uint64_t v13 = sub_4A98(&qword_2EDB08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, a1, v13);
}

uint64_t View.mediaBackdrop(for:placeholderColor:useSnapshot:)(uint64_t a1, uint64_t a2, char a3)
{
  sub_B678(a1, (uint64_t)v18, &qword_2ECDF0);
  if (*((void *)&v19 + 1))
  {
    long long v14 = v21;
    long long v15 = v22;
    uint64_t v16 = v23;
    long long v10 = v18[4];
    long long v11 = v18[5];
    long long v12 = v19;
    long long v13 = v20;
    long long v6 = v18[0];
    long long v7 = v18[1];
    long long v8 = v18[2];
    long long v9 = v18[3];
    char v17 = 0;
  }
  else
  {
    sub_B6DC((uint64_t)v18, &qword_2ECDF0);
    long long v6 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v16 = 0;
    char v17 = -1;
  }
  sub_87CB0((uint64_t)&v6, (uint64_t)v18);
  uint64_t v24 = a2;
  char v25 = a3 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = 0;
  uint64_t v28 = swift_getKeyPath();
  char v29 = 0;
  swift_retain();
  sub_26C030();
  return sub_87E44((uint64_t)v18);
}

{
  uint64_t v5;
  uint64_t v7;
  long long v8;
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  char v18;
  unsigned char v19[176];
  uint64_t v20;
  char v21;
  uint64_t KeyPath;
  char v23;
  uint64_t v24;
  char v25;

  if (a1)
  {
    uint64_t v18 = 1;
    uint64_t v5 = a1;
  }
  else
  {
    uint64_t v5 = 0;
    char v17 = 0u;
    uint64_t v16 = 0u;
    uint64_t v18 = -1;
    long long v15 = 0u;
    long long v14 = 0u;
    long long v13 = 0u;
    long long v12 = 0u;
    long long v11 = 0u;
    long long v10 = 0u;
    long long v9 = 0u;
    long long v8 = 0u;
  }
  long long v7 = v5;
  sub_87CB0((uint64_t)&v7, (uint64_t)v19);
  long long v20 = a2;
  long long v21 = a3 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = 0;
  uint64_t v24 = swift_getKeyPath();
  char v25 = 0;
  swift_unknownObjectRetain();
  swift_retain();
  sub_26C030();
  return sub_87E44((uint64_t)v19);
}

uint64_t sub_87CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDAE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_87E44(uint64_t a1)
{
  return a1;
}

uint64_t sub_87E74()
{
  return swift_getWitnessTable();
}

unint64_t sub_87ED8()
{
  unint64_t result = qword_2EDAF0;
  if (!qword_2EDAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDAF0);
  }
  return result;
}

uint64_t destroy for MediaBackdropViewModifier(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 168);
  if (v2 != 255)
  {
    if (v2)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_release();
  if (*(unsigned char *)(a1 + 232)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 192);
  }
  else {
    swift_release();
  }
  uint64_t v3 = *(void *)(a1 + 240);
  char v4 = *(unsigned char *)(a1 + 248);

  return sub_C374(v3, v4);
}

uint64_t initializeWithCopy for MediaBackdropViewModifier(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 168);
  if (v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v5;
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    long long v7 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v7;
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 168) = 1;
    swift_unknownObjectRetain();
  }
  else
  {
    if (*(unsigned char *)(a2 + 56))
    {
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    uint64_t v12 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v12)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v12;
      uint64_t v13 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v13;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v14 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v15;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(unsigned char *)(a1 + 168) = 0;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  char v16 = *(unsigned char *)(a2 + 232);
  swift_retain();
  if (v16)
  {
    long long v17 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 216) = v17;
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 192, a2 + 192);
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_retain();
  }
  *(unsigned char *)(a1 + 232) = v16;
  uint64_t v18 = *(void *)(a2 + 240);
  char v19 = *(unsigned char *)(a2 + 248);
  sub_10E0C(v18, v19);
  *(void *)(a1 + 240) = v18;
  *(unsigned char *)(a1 + 248) = v19;
  return a1;
}

uint64_t assignWithCopy for MediaBackdropViewModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v4 == 255)
    {
      long long v13 = *a2;
      long long v14 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)a1 = v13;
      long long v15 = a2[3];
      long long v16 = a2[4];
      long long v17 = a2[6];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v17;
      *(_OWORD *)(a1 + 48) = v15;
      *(_OWORD *)(a1 + 64) = v16;
      long long v18 = a2[7];
      long long v19 = a2[8];
      long long v20 = a2[9];
      *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 144) = v20;
      *(_OWORD *)(a1 + 112) = v18;
      goto LABEL_17;
    }
    if (v4) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  if (v4 == 255)
  {
    sub_884DC(a1);
    long long v6 = a2[1];
    long long v5 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v5;
    long long v7 = a2[6];
    long long v9 = a2[3];
    long long v8 = a2[4];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v7;
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = v8;
    long long v11 = a2[8];
    long long v10 = a2[9];
    long long v12 = a2[7];
    *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 144) = v10;
    *(_OWORD *)(a1 + 112) = v12;
    goto LABEL_17;
  }
  if ((long long *)a1 != a2)
  {
    sub_884DC(a1);
    if (*((unsigned char *)a2 + 168))
    {
LABEL_8:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 168) = 1;
      swift_unknownObjectRetain();
      goto LABEL_17;
    }
LABEL_10:
    if (*((unsigned char *)a2 + 56))
    {
      long long v21 = *a2;
      long long v22 = a2[1];
      long long v23 = a2[2];
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v22;
      *(_OWORD *)(a1 + 32) = v23;
      *(_OWORD *)a1 = v21;
    }
    else
    {
      uint64_t v24 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v24;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v24 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = a2[4];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    uint64_t v25 = *((void *)a2 + 15);
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v26 = a2[7];
      long long v27 = a2[8];
      long long v28 = a2[9];
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(_OWORD *)(a1 + 128) = v27;
      *(_OWORD *)(a1 + 144) = v28;
      *(_OWORD *)(a1 + 112) = v26;
    }
    *(unsigned char *)(a1 + 168) = 0;
  }
LABEL_17:
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  if ((long long *)a1 != a2)
  {
    sub_B6DC(a1 + 192, &qword_2EAB10);
    if (*((unsigned char *)a2 + 232))
    {
      uint64_t v29 = *((void *)a2 + 27);
      *(void *)(a1 + 216) = v29;
      *(void *)(a1 + 224) = *((void *)a2 + 28);
      (**(void (***)(uint64_t, uint64_t))(v29 - 8))(a1 + 192, (uint64_t)(a2 + 12));
      *(unsigned char *)(a1 + 232) = 1;
    }
    else
    {
      *(void *)(a1 + 192) = *((void *)a2 + 24);
      *(unsigned char *)(a1 + 232) = 0;
      swift_retain();
    }
  }
  uint64_t v30 = *((void *)a2 + 30);
  char v31 = *((unsigned char *)a2 + 248);
  sub_10E0C(v30, v31);
  uint64_t v32 = *(void *)(a1 + 240);
  char v33 = *(unsigned char *)(a1 + 248);
  *(void *)(a1 + 240) = v30;
  *(unsigned char *)(a1 + 248) = v31;
  sub_C374(v32, v33);
  return a1;
}

uint64_t sub_884DC(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for MediaBackdropViewModifier(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_OWORD *)(a1 + 233) = *(long long *)((char *)a2 + 233);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for MediaBackdropViewModifier(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 168) != 255)
  {
    if (*(unsigned __int8 *)(a2 + 168) != 255 && a1 == a2) {
      goto LABEL_8;
    }
    sub_884DC(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
LABEL_8:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  if (a1 != a2)
  {
    sub_B6DC(a1 + 192, &qword_2EAB10);
    long long v10 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v10;
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  }
  char v11 = *(unsigned char *)(a2 + 248);
  uint64_t v12 = *(void *)(a1 + 240);
  char v13 = *(unsigned char *)(a1 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = v11;
  sub_C374(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaBackdropViewModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 249)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 176);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaBackdropViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 248) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 249) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 176) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 249) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaBackdropViewModifier()
{
  return &type metadata for MediaBackdropViewModifier;
}

uint64_t destroy for MediaBackdropViewModifier.Source(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 168);
  if (v2 >= 2)
  {
    if (*(_DWORD *)a1 == -1) {
      goto LABEL_3;
    }
  }
  else if (v2 == 1)
  {
LABEL_3:
    return swift_unknownObjectRelease();
  }
  if (!*(unsigned char *)(a1 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaBackdropViewModifier.Source(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 168);
  if (v4 < 2)
  {
    if (v4 != 1) {
      goto LABEL_3;
    }
LABEL_6:
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 168) = v4;
    swift_unknownObjectRetain();
    return a1;
  }
  unsigned int v4 = *(_DWORD *)a2 + 2;
  if (*(_DWORD *)a2 == -1) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(unsigned char *)(a2 + 56))
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = 0;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v7;
    uint64_t v8 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v8;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    uint64_t v9 = *(void *)(a2 + 152);
    uint64_t v10 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v9;
    *(void *)(a1 + 160) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
  }
  *(unsigned char *)(a1 + 168) = 0;
  return a1;
}

uint64_t assignWithCopy for MediaBackdropViewModifier.Source(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 168);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 168);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 168) = 1;
      swift_unknownObjectRetain();
    }
    else
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v6 = *a2;
        long long v7 = a2[1];
        long long v8 = a2[2];
        *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = v8;
        *(_OWORD *)a1 = v6;
      }
      else
      {
        uint64_t v9 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = a2[4];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      uint64_t v10 = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      if (v10)
      {
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v11 = a2[7];
        long long v12 = a2[8];
        long long v13 = a2[9];
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(_OWORD *)(a1 + 128) = v12;
        *(_OWORD *)(a1 + 144) = v13;
        *(_OWORD *)(a1 + 112) = v11;
      }
      *(unsigned char *)(a1 + 168) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for MediaBackdropViewModifier.Source(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for MediaBackdropViewModifier.Source(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 168);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 168);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      long long v7 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v7;
      long long v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      long long v9 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v9;
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      long long v11 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v11;
    }
    *(unsigned char *)(a1 + 168) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaBackdropViewModifier.Source(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 169)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MediaBackdropViewModifier.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 153) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 169) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 168) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_88CB8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 168);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_88CD4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 160) = 0;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 168) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaBackdropViewModifier.Source()
{
  return &type metadata for MediaBackdropViewModifier.Source;
}

uint64_t sub_88D1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_88D38(uint64_t a1, uint64_t a2)
{
  sub_88EB0(a1, (uint64_t)v17);
  sub_88EB0(a2, (uint64_t)v18);
  if (v17[168])
  {
    sub_88EB0((uint64_t)v17, (uint64_t)v11);
    uint64_t v3 = *(void *)&v11[0];
    if (v24 == 1)
    {
      uint64_t v4 = *(void *)&v18[0];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      char v5 = v3 == v4;
LABEL_12:
      sub_884DC((uint64_t)v17);
      return v5 & 1;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_88EB0((uint64_t)v17, (uint64_t)v11);
    if ((v24 & 1) == 0)
    {
      v9[8] = v14;
      v9[9] = v15;
      uint64_t v10 = v16;
      v9[4] = v11[4];
      v9[5] = v11[5];
      v9[6] = v12;
      v9[7] = v13;
      v9[0] = v11[0];
      v9[1] = v11[1];
      _OWORD v9[2] = v11[2];
      void v9[3] = v11[3];
      v7[8] = v21;
      v7[9] = v22;
      uint64_t v8 = v23;
      v7[4] = v18[4];
      v7[5] = v18[5];
      v7[6] = v19;
      v7[7] = v20;
      v7[0] = v18[0];
      v7[1] = v18[1];
      _OWORD v7[2] = v18[2];
      v7[3] = v18[3];
      if (v12 == v19) {
        char v5 = 1;
      }
      else {
        char v5 = sub_26DDB0();
      }
      sub_2D738((uint64_t)v7);
      sub_2D738((uint64_t)v9);
      goto LABEL_12;
    }
    sub_2D738((uint64_t)v11);
  }
  sub_B6DC((uint64_t)v17, &qword_2EDB10);
  char v5 = 0;
  return v5 & 1;
}

uint64_t sub_88EB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_88EEC()
{
  unint64_t result = qword_2EDB18;
  if (!qword_2EDB18)
  {
    sub_7B0C(&qword_2EDAF8);
    sub_7C18(&qword_2EDB20, &qword_2EDB08);
    sub_7C18(&qword_2EDB28, &qword_2EDB00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDB18);
  }
  return result;
}

uint64_t ListItemAccessoryBuyButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v72 = a1;
  uint64_t v64 = sub_26B980();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  unint64_t v62 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v58);
  uint64_t v69 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (int *)type metadata accessor for ButtonViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ButtonView();
  uint64_t v9 = __chkstk_darwin(v71);
  unint64_t v61 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v65 = (uint64_t)&v57 - v11;
  uint64_t v74 = sub_4A98(&qword_2EDB30);
  __chkstk_darwin(v74);
  uint64_t v70 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (int *)type metadata accessor for BuyButtonExternals();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v67 = (uint64_t)&v57 - v17;
  uint64_t v18 = sub_4A98(&qword_2EDB38);
  __chkstk_darwin(v18 - 8);
  uint64_t v66 = (uint64_t)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for BuyButton(0);
  uint64_t v20 = __chkstk_darwin(v73);
  long long v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v68 = (uint64_t)&v57 - v23;
  long long v24 = *(_OWORD *)(v1 + 48);
  v77[2] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)uint64_t v78 = v24;
  *(_DWORD *)&v78[15] = *(_DWORD *)(v1 + 63);
  long long v25 = *(_OWORD *)(v1 + 16);
  v77[0] = *(_OWORD *)v1;
  v77[1] = v25;
  sub_44FD8((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)v76);
  sub_44FD8((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  uint64_t v26 = v76[1];
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v1 + 72);
  char v28 = *(unsigned char *)(v1 + 80);
  sub_10E0C(*(void *)(v2 + 72), *(unsigned char *)(v2 + 80));
  char v29 = sub_40900(v27, v28);
  sub_C374(v27, v28);
  if (v26)
  {
    uint64_t v30 = v70;
    if (v29) {
      __int16 v31 = 2;
    }
    else {
      __int16 v31 = (*(unsigned char *)(v2 + 128) & 1) == 0;
    }
    uint64_t v49 = *(_DWORD *)&v31 | 0xFFFF8000;
    sub_C224(v2 + 88, (uint64_t)v76);
    sub_C224((uint64_t)v76, (uint64_t)v75);
    *uint64_t v16 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    int v50 = (uint64_t *)((char *)v16 + v13[5]);
    type metadata accessor for ProfileRestrictions();
    sub_89D80((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    *int v50 = sub_26AD70();
    v50[1] = v51;
    uint64_t v52 = (uint64_t *)((char *)v16 + v13[6]);
    *uint64_t v52 = swift_getKeyPath();
    sub_4A98(&qword_2EB918);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = (char *)v16 + v13[7];
    *(void *)uint64_t v53 = swift_getKeyPath();
    *(_OWORD *)(v53 + 8) = 0u;
    *(_OWORD *)(v53 + 24) = 0u;
    *(_OWORD *)(v53 + 40) = 0u;
    *(_OWORD *)(v53 + 51) = 0u;
    uint64_t v54 = v67;
    sub_89E3C((uint64_t)v16, v67, (uint64_t (*)(void))type metadata accessor for BuyButtonExternals);
    uint64_t v55 = v66;
    sub_89AE0(v49, 2, v75, v54, v66);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v76);
    sub_89DD4(v55, (uint64_t)v22);
    uint64_t v47 = v68;
    sub_89E3C((uint64_t)v22, v68, type metadata accessor for BuyButton);
    sub_8A460(v47, v30, type metadata accessor for BuyButton);
    swift_storeEnumTagMultiPayload();
    sub_89D80(&qword_2EDB40, (void (*)(uint64_t))type metadata accessor for BuyButton);
    sub_89D80(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    sub_26B2F0();
    unint64_t v48 = type metadata accessor for BuyButton;
  }
  else
  {
    uint64_t v32 = 1;
    if (v29) {
      uint64_t v32 = 2;
    }
    uint64_t v68 = v32;
    swift_storeEnumTagMultiPayload();
    char v33 = v60;
    *((void *)v60 + 4) = 0;
    *char v33 = 0u;
    v33[1] = 0u;
    swift_storeEnumTagMultiPayload();
    v76[0] = 0x403C000000000000;
    uint64_t v34 = enum case for Font.TextStyle.subheadline(_:);
    unint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 104);
    size_t v36 = v62;
    LODWORD(v67) = enum case for Font.TextStyle.subheadline(_:);
    uint64_t v37 = v64;
    v35(v62, enum case for Font.TextStyle.subheadline(_:), v64);
    sub_4F928();
    sub_26A810();
    v76[0] = 0x4008000000000000;
    v35(v36, v34, v37);
    unsigned int v38 = v35;
    sub_26A810();
    unsigned int v39 = (uint64_t *)&v8[v6[6]];
    *unsigned int v39 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    int v40 = &v8[v6[14]];
    uint64_t v41 = sub_26A220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    v8[v6[7]] = 2;
    v8[v6[8]] = 0;
    v8[v6[9]] = 0;
    int v42 = &v8[v6[10]];
    *(void *)int v42 = v68;
    *((void *)v42 + 1) = 0;
    *((void *)v42 + 2) = 0;
    *((void *)v42 + 3) = 0;
    sub_89E3C(v69, (uint64_t)&v8[v6[11]], type metadata accessor for ButtonViewModel.Content);
    v8[v6[12]] = 0;
    sub_89E3C((uint64_t)v33, (uint64_t)&v8[v6[13]], type metadata accessor for ButtonViewModel.ActionKind);
    v76[0] = 0x4020000000000000;
    uint64_t v43 = v67;
    v38(v36, v67, v37);
    uint64_t v44 = (uint64_t)v61;
    sub_26A810();
    uint64_t v45 = v71;
    v76[0] = 0x3FF8000000000000;
    v38(v36, v43, v37);
    sub_26A810();
    uint64_t v46 = (uint64_t *)(v44 + *(int *)(v45 + 24));
    *uint64_t v46 = swift_getKeyPath();
    sub_4A98(&qword_2EBCD8);
    swift_storeEnumTagMultiPayload();
    sub_89E3C((uint64_t)v8, v44 + *(int *)(v45 + 28), type metadata accessor for ButtonViewModel);
    uint64_t v47 = v65;
    sub_89E3C(v44, v65, (uint64_t (*)(void))type metadata accessor for ButtonView);
    sub_8A460(v47, v70, (uint64_t (*)(void))type metadata accessor for ButtonView);
    swift_storeEnumTagMultiPayload();
    sub_89D80(&qword_2EDB40, (void (*)(uint64_t))type metadata accessor for BuyButton);
    sub_89D80(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    sub_26B2F0();
    unint64_t v48 = (uint64_t (*)(void))type metadata accessor for ButtonView;
  }
  return sub_89EA4(v47, v48);
}

uint64_t sub_89AE0@<X0>(uint64_t a1@<X0>, char a2@<W1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v20 = a4;
  int v9 = (__int16)a1;
  uint64_t v10 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)sub_4A98(&qword_2EDB38);
  *(_WORD *)(a5 + v16[9]) = a1;
  unsigned int v17 = (a1 >> 8) & 1;
  if (v9 < 0) {
    LOBYTE(v17) = 2;
  }
  unsigned __int8 v25 = v17;
  unsigned __int8 v24 = 0;
  BOOL v23 = (a1 & 0x8080) == 128;
  sub_89CC8(a1, (uint64_t)v22);
  v21[0] = v22[0];
  v21[1] = v22[1];
  sub_26A210();
  swift_storeEnumTagMultiPayload();
  *((void *)v12 + 4) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  swift_storeEnumTagMultiPayload();
  ButtonViewModel.init(size:shape:kind:style:content:isEnabled:action:)(&v25, &v24, (unsigned __int8 *)&v23, v21, (uint64_t)v15, 1, (uint64_t)v12, a5);
  *(unsigned char *)(a5 + v16[10]) = a2;
  sub_AD44(a3, a5 + v16[11]);
  return sub_89E3C(v20, a5 + v16[12], (uint64_t (*)(void))type metadata accessor for BuyButtonExternals);
}

uint64_t sub_89CC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x8000) == 0)
  {
    if ((result & 0x80) == 0)
    {
      if (result != 1)
      {
        if ((_BYTE)result) {
          goto LABEL_11;
        }
LABEL_10:
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        return result;
      }
      goto LABEL_8;
    }
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v2 = 2;
    goto LABEL_12;
  }
  if (!(_BYTE)result) {
    goto LABEL_10;
  }
  if (result != 1) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v2 = 1;
LABEL_12:
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_89D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_8A460(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t sub_89D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_8A460(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t sub_89D80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_89DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_89E3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_89EA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_89F04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ListItemAccessoryBuyButtonView(uint64_t a1)
{
  sub_C360(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(_WORD *)(a1 + 64), *(unsigned char *)(a1 + 66));
  sub_C374(*(void *)(a1 + 72), *(unsigned char *)(a1 + 80));

  return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 88);
}

uint64_t initializeWithCopy for ListItemAccessoryBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v15 = *(_WORD *)(a2 + 64);
  char v16 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 66) = v16;
  uint64_t v12 = *(void *)(a2 + 72);
  LOBYTE(v5) = *(unsigned char *)(a2 + 80);
  sub_10E0C(v12, v5);
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v5;
  long long v13 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 88, a2 + 88);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for ListItemAccessoryBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v26 = *(_WORD *)(a2 + 64);
  char v27 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v26, v27);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  __int16 v20 = *(_WORD *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 66);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v26;
  *(unsigned char *)(a1 + 66) = v27;
  sub_C360(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = *(void *)(a2 + 72);
  LOBYTE(v5) = *(unsigned char *)(a2 + 80);
  sub_10E0C(v22, v5);
  uint64_t v23 = *(void *)(a1 + 72);
  char v24 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v22;
  *(unsigned char *)(a1 + 80) = v5;
  sub_C374(v23, v24);
  sub_16D58((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

__n128 initializeWithTake for ListItemAccessoryBuyButtonView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ListItemAccessoryBuyButtonView(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 66);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  __int16 v14 = *(_WORD *)(a1 + 64);
  char v15 = *(unsigned char *)(a1 + 66);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_WORD *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 66) = v5;
  sub_C360(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  char v18 = *(unsigned char *)(a2 + 80);
  uint64_t v19 = *(void *)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v18;
  sub_C374(v19, v20);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemAccessoryBuyButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemAccessoryBuyButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemAccessoryBuyButtonView()
{
  return &type metadata for ListItemAccessoryBuyButtonView;
}

unint64_t sub_8A384()
{
  unint64_t result = qword_2EDB50;
  if (!qword_2EDB50)
  {
    sub_7B0C(&qword_2EDB58);
    sub_89D80(&qword_2EDB40, (void (*)(uint64_t))type metadata accessor for BuyButton);
    sub_89D80(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDB50);
  }
  return result;
}

uint64_t sub_8A460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of ConvertRectFromGlobalHandling.callAsFunction(rect:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PageScrollControlling.scrollTo(location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t ListItemMetadata.eyebrow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1, a1, &qword_2EA0E0);
}

uint64_t ListItemMetadata.eyebrow.setter(uint64_t a1)
{
  return sub_C950(a1, v1, &qword_2EA0E0);
}

uint64_t ListItemMetadata.titleLockup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 40, a1, &qword_2EA0E8);
}

uint64_t ListItemMetadata.titleLockup.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 40, &qword_2EA0E8);
}

uint64_t (*ListItemMetadata.titleLockup.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadata.formatAndDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 80, a1, &qword_2EA0F0);
}

uint64_t ListItemMetadata.formatAndDescriptor.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 80, &qword_2EA0F0);
}

uint64_t (*Metrics.Location.kind.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadata.descriptors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 120, a1, &qword_2EA0F0);
}

uint64_t ListItemMetadata.descriptors.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 120, &qword_2EA0F0);
}

uint64_t (*Metrics.Impression.narratorType.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadata.finePrint.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 160, a1, &qword_2EA0F8);
}

uint64_t ListItemMetadata.finePrint.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 160, &qword_2EA0F8);
}

uint64_t (*Metrics.Location.narratorType.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadata.sharedWithYou.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 200, a1, &qword_2EA100);
}

uint64_t ListItemMetadata.sharedWithYou.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 200, &qword_2EA100);
}

uint64_t (*ListItemMetadata.sharedWithYou.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemMetadata.creatorDescription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 240, a1, &qword_2EA108);
}

uint64_t ListItemMetadata.creatorDescription.setter(uint64_t a1)
{
  return sub_C950(a1, v1 + 240, &qword_2EA108);
}

uint64_t (*ListItemMetadata.creatorDescription.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t destroy for ListItemMetadata(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(void *)(result + 24)) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(result);
  }
  if (v1[8]) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 5));
  }
  if (v1[13]) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 10));
  }
  if (v1[18]) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 15));
  }
  if (v1[23]) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 20));
  }
  if (v1[28]) {
    unint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 25));
  }
  if (v1[33])
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v1 + 30));
  }
  return result;
}

uint64_t initializeWithCopy for ListItemMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v12 = (_OWORD *)(a1 + 80);
  uint64_t v13 = (_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 96);
    _OWORD *v12 = *v13;
    *(_OWORD *)(a1 + 96) = v16;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  long long v17 = (_OWORD *)(a1 + 120);
  char v18 = (_OWORD *)(a2 + 120);
  uint64_t v19 = *(void *)(a2 + 144);
  if (v19)
  {
    uint64_t v20 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v19;
    *(void *)(a1 + 152) = v20;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 136);
    *long long v17 = *v18;
    *(_OWORD *)(a1 + 136) = v21;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  uint64_t v22 = (_OWORD *)(a1 + 160);
  uint64_t v23 = (_OWORD *)(a2 + 160);
  uint64_t v24 = *(void *)(a2 + 184);
  if (v24)
  {
    uint64_t v25 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v24;
    *(void *)(a1 + 192) = v25;
    (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 176);
    *uint64_t v22 = *v23;
    *(_OWORD *)(a1 + 176) = v26;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
  }
  char v27 = (_OWORD *)(a1 + 200);
  char v28 = (_OWORD *)(a2 + 200);
  uint64_t v29 = *(void *)(a2 + 224);
  if (v29)
  {
    uint64_t v30 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = v29;
    *(void *)(a1 + 232) = v30;
    (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 216);
    *char v27 = *v28;
    *(_OWORD *)(a1 + 216) = v31;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
  }
  uint64_t v32 = (_OWORD *)(a1 + 240);
  char v33 = (_OWORD *)(a2 + 240);
  uint64_t v34 = *(void *)(a2 + 264);
  if (v34)
  {
    uint64_t v35 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = v34;
    *(void *)(a1 + 272) = v35;
    (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
  }
  else
  {
    long long v36 = *(_OWORD *)(a2 + 256);
    *uint64_t v32 = *v33;
    *(_OWORD *)(a1 + 256) = v36;
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
  }
  return a1;
}

uint64_t assignWithCopy for ListItemMetadata(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      sub_16D58((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      sub_16D58((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 40);
  }
  else if (v7)
  {
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v8 = *(long long *)((char *)a2 + 40);
  long long v9 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  uint64_t v10 = *((void *)a2 + 13);
  if (*(void *)(a1 + 104))
  {
    if (v10)
    {
      sub_16D58((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
      goto LABEL_22;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 80);
  }
  else if (v10)
  {
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, (uint64_t)(a2 + 5));
    goto LABEL_22;
  }
  long long v11 = a2[5];
  long long v12 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = v12;
LABEL_22:
  uint64_t v13 = *((void *)a2 + 18);
  if (*(void *)(a1 + 144))
  {
    if (v13)
    {
      sub_16D58((uint64_t *)(a1 + 120), (uint64_t *)a2 + 15);
      goto LABEL_29;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 120);
  }
  else if (v13)
  {
    *(void *)(a1 + 144) = v13;
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 120, (uint64_t)a2 + 120);
    goto LABEL_29;
  }
  long long v14 = *(long long *)((char *)a2 + 120);
  long long v15 = *(long long *)((char *)a2 + 136);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(_OWORD *)(a1 + 120) = v14;
  *(_OWORD *)(a1 + 136) = v15;
LABEL_29:
  uint64_t v16 = *((void *)a2 + 23);
  if (*(void *)(a1 + 184))
  {
    if (v16)
    {
      sub_16D58((uint64_t *)(a1 + 160), (uint64_t *)a2 + 20);
      goto LABEL_36;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 160);
  }
  else if (v16)
  {
    *(void *)(a1 + 184) = v16;
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 160, (uint64_t)(a2 + 10));
    goto LABEL_36;
  }
  long long v17 = a2[10];
  long long v18 = a2[11];
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  *(_OWORD *)(a1 + 160) = v17;
  *(_OWORD *)(a1 + 176) = v18;
LABEL_36:
  uint64_t v19 = *((void *)a2 + 28);
  if (*(void *)(a1 + 224))
  {
    if (v19)
    {
      sub_16D58((uint64_t *)(a1 + 200), (uint64_t *)a2 + 25);
      goto LABEL_43;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 200);
  }
  else if (v19)
  {
    *(void *)(a1 + 224) = v19;
    *(void *)(a1 + 232) = *((void *)a2 + 29);
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 200, (uint64_t)a2 + 200);
    goto LABEL_43;
  }
  long long v20 = *(long long *)((char *)a2 + 200);
  long long v21 = *(long long *)((char *)a2 + 216);
  *(void *)(a1 + 232) = *((void *)a2 + 29);
  *(_OWORD *)(a1 + 200) = v20;
  *(_OWORD *)(a1 + 216) = v21;
LABEL_43:
  uint64_t v22 = *((void *)a2 + 33);
  if (!*(void *)(a1 + 264))
  {
    if (v22)
    {
      *(void *)(a1 + 264) = v22;
      *(void *)(a1 + 272) = *((void *)a2 + 34);
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 240, (uint64_t)(a2 + 15));
      return a1;
    }
LABEL_49:
    long long v23 = a2[15];
    long long v24 = a2[16];
    *(void *)(a1 + 272) = *((void *)a2 + 34);
    *(_OWORD *)(a1 + 240) = v23;
    *(_OWORD *)(a1 + 256) = v24;
    return a1;
  }
  if (!v22)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 240);
    goto LABEL_49;
  }
  sub_16D58((uint64_t *)(a1 + 240), (uint64_t *)a2 + 30);
  return a1;
}

void *initializeWithTake for ListItemMetadata(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for ListItemMetadata(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 80);
  }
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (*(void *)(a1 + 144)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 120);
  }
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if (*(void *)(a1 + 184)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 160);
  }
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  if (*(void *)(a1 + 224)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 200);
  }
  long long v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v9;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  if (*(void *)(a1 + 264)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 240);
  }
  long long v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v10;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 280)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 280) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadata()
{
  return &type metadata for ListItemMetadata;
}

uint64_t static ListItemViewModel.seriesPage(seriesID:assetInfo:cardInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a5;
  uint64_t v33 = type metadata accessor for ListItemViewModel();
  __chkstk_darwin(v33);
  long long v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v8 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224((uint64_t)a3, (uint64_t)v45);
  uint64_t v46 = 0;
  char v47 = 1;
  uint64_t v48 = 0;
  __int16 v49 = 255;
  uint64_t v10 = a3[4];
  sub_4ADC(a3, a3[3]);
  uint64_t v30 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_26D980();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v30 - v14;
  sub_269DA0();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_5:
    sub_C224((uint64_t)a3, (uint64_t)v40);
    uint64_t v43 = &type metadata for ListItemAccessoryBuyButton;
    unint64_t v44 = sub_8B5A8();
    uint64_t v18 = swift_allocObject();
    v42[0] = v18;
    *(void *)unsigned int v39 = swift_getKeyPath();
    v39[8] = 0;
    sub_AD44(v40, (uint64_t)&v39[16]);
    long long v19 = *(_OWORD *)&v39[16];
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v39;
    *(_OWORD *)(v18 + 32) = v19;
    *(_OWORD *)(v18 + 48) = *(_OWORD *)&v39[32];
    *(void *)(v18 + 64) = *(void *)&v39[48];
    goto LABEL_6;
  }
  *(void *)&v39[24] = AssociatedTypeWitness;
  *(void *)&v39[32] = swift_getAssociatedConformanceWitness();
  sub_CA1C((uint64_t *)v39);
  (*(void (**)(void))(v16 + 32))();
  char v17 = sub_269EC0();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v39);
  if ((v17 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v43 = &type metadata for ListItemAccessoryMoreButton;
  unint64_t v44 = sub_8B838();
  v42[0] = swift_allocObject();
  sub_C224((uint64_t)a3, v42[0] + 16);
LABEL_6:
  sub_4ADC(a3, a3[3]);
  uint64_t v20 = sub_269DB0();
  uint64_t v22 = v21;
  sub_3EB44((uint64_t)v45, (uint64_t)v40);
  uint64_t v23 = v35;
  swift_bridgeObjectRetain();
  static ListItemMetadata.seriesPage(assetInfo:)(a3, v39);
  sub_C224((uint64_t)v42, (uint64_t)v38);
  sub_C224((uint64_t)a3, (uint64_t)v37);
  uint64_t v24 = v32;
  sub_8B648(v31, v32);
  long long v25 = v40[0];
  *(_OWORD *)(v7 + 40) = v40[1];
  long long v26 = v40[3];
  *(_OWORD *)(v7 + 56) = v40[2];
  *long long v7 = 0;
  *((void *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 72) = v26;
  *(_OWORD *)(v7 + 376) = 0u;
  *(_OWORD *)(v7 + 392) = 0u;
  *((void *)v7 + 51) = 0;
  v7[16] = 1;
  *((_WORD *)v7 + 44) = v41;
  *(_OWORD *)(v7 + 24) = v25;
  memcpy(v7 + 96, v39, 0x118uLL);
  sub_8B6B0((uint64_t)v38, (uint64_t)(v7 + 376));
  sub_AD44(v37, (uint64_t)(v7 + 416));
  uint64_t v27 = v33;
  sub_8B718(v24, (uint64_t)&v7[*(int *)(v33 + 40)]);
  char v28 = &v7[*(int *)(v27 + 44)];
  *(_OWORD *)char v28 = xmmword_273E20;
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  *((void *)v28 + 4) = v34;
  *((void *)v28 + 5) = v23;
  *((_OWORD *)v28 + 3) = 0u;
  *((_OWORD *)v28 + 4) = 0u;
  *((_OWORD *)v28 + 5) = 0u;
  *((_OWORD *)v28 + 6) = 0u;
  *((_OWORD *)v28 + 7) = 0u;
  *((void *)v28 + 16) = v20;
  *((void *)v28 + 17) = v22;
  v28[144] = 2;
  sub_8B780((uint64_t)v7, v36);
  sub_8B7E4((uint64_t)v45);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v42);
}

unint64_t sub_8B5A8()
{
  unint64_t result = qword_2EDB68;
  if (!qword_2EDB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDB68);
  }
  return result;
}

uint64_t sub_8B5FC()
{
  sub_C374(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_8B648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8B6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_8B718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EDB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_8B780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListItemViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_8B7E4(uint64_t a1)
{
  return a1;
}

unint64_t sub_8B838()
{
  unint64_t result = qword_2EDB78;
  if (!qword_2EDB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDB78);
  }
  return result;
}

uint64_t sub_8B88C()
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t static ListItemViewModel.seriesHeaderQuickActionButton(assetInfo:cardInfo:eyebrowText:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = type metadata accessor for ListItemViewModel();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224((uint64_t)a1, (uint64_t)v32);
  uint64_t v33 = 1;
  char v34 = 4;
  uint64_t v35 = 0;
  __int16 v36 = 255;
  sub_4ADC(a1, a1[3]);
  uint64_t v14 = sub_269DB0();
  uint64_t v16 = v15;
  sub_3EB44((uint64_t)v32, (uint64_t)v30);
  static ListItemMetadata.seriesHeaderQuickActionButton(assetInfo:eyebrowText:)(a1, a3, (uint64_t)v29);
  sub_C224((uint64_t)a1, (uint64_t)v27);
  v28[3] = &type metadata for ListItemAccessoryBuyButton;
  v28[4] = sub_8B5A8();
  uint64_t v17 = swift_allocObject();
  v28[0] = v17;
  *(void *)&long long v24 = swift_getKeyPath();
  BYTE8(v24) = 0;
  sub_AD44(v27, (uint64_t)v25);
  long long v18 = v25[0];
  *(_OWORD *)(v17 + 16) = v24;
  *(_OWORD *)(v17 + 32) = v18;
  *(_OWORD *)(v17 + 48) = v25[1];
  *(void *)(v17 + 64) = v26;
  sub_C224((uint64_t)a1, (uint64_t)&v24);
  sub_8B648(a2, (uint64_t)v13);
  long long v19 = v30[0];
  *(_OWORD *)(v10 + 40) = v30[1];
  long long v20 = v30[3];
  *(_OWORD *)(v10 + 56) = v30[2];
  *(_OWORD *)(v10 + 72) = v20;
  *(_OWORD *)(v10 + 376) = 0u;
  *(_OWORD *)(v10 + 392) = 0u;
  *((void *)v10 + 51) = 0;
  char *v10 = 1;
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  *((_WORD *)v10 + 44) = v31;
  *(_OWORD *)(v10 + 24) = v19;
  memcpy(v10 + 96, v29, 0x118uLL);
  sub_8B6B0((uint64_t)v28, (uint64_t)(v10 + 376));
  sub_AD44(&v24, (uint64_t)(v10 + 416));
  sub_8B718((uint64_t)v13, (uint64_t)&v10[*(int *)(v8 + 48)]);
  uint64_t v21 = &v10[*(int *)(v8 + 52)];
  *(_OWORD *)uint64_t v21 = xmmword_273E30;
  *((_OWORD *)v21 + 1) = 0u;
  *((_OWORD *)v21 + 2) = 0u;
  *((_OWORD *)v21 + 3) = 0u;
  *((_OWORD *)v21 + 4) = 0u;
  *((_OWORD *)v21 + 5) = 0u;
  *((_OWORD *)v21 + 6) = 0u;
  *((_OWORD *)v21 + 7) = 0u;
  *((void *)v21 + 16) = v14;
  *((void *)v21 + 17) = v16;
  v21[144] = 2;
  sub_8B780((uint64_t)v10, v23);
  return sub_8B7E4((uint64_t)v32);
}

uint64_t sub_8BB70()
{
  [v0 size];
  sub_26D920();
  double v2 = v1;
  double v4 = v3;
  id v5 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v1, v3];
  uint64_t v6 = (double *)swift_allocObject();
  *((void *)v6 + 2) = v0;
  _OWORD v6[3] = v2;
  v6[4] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_8BD80;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_8BDAC;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_20C1F8;
  _OWORD v12[3] = &unk_2DED20;
  uint64_t v8 = _Block_copy(v12);
  id v9 = v0;
  swift_retain();
  swift_release();
  id v10 = [v5 imageWithActions:v8];

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0) {
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_8BD48()
{
  return swift_deallocObject();
}

id sub_8BD80()
{
  return [*(id *)(v0 + 16) drawInRect:0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32)];
}

uint64_t sub_8BD9C()
{
  return swift_deallocObject();
}

uint64_t sub_8BDAC(uint64_t a1)
{
  return sub_20C1D0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_8BDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8BDC4()
{
  return swift_release();
}

uint64_t ProgressiveBlurMaterial.init(blurRadius:saturationAmount:fillColor:start:end:fadeOffset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(void *)(a2 + 16) = result;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  *(double *)(a2 + 40) = a7;
  *(double *)(a2 + 48) = a8;
  *(double *)(a2 + 56) = a9;
  return result;
}

double ProgressiveBlurMaterial.body.getter@<D0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v13[0] = *v1;
  v13[1] = v3;
  long long v4 = v1[3];
  _OWORD v13[2] = v1[2];
  void v13[3] = v4;
  uint64_t v5 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v7 = v6;
  sub_8BE88((uint64_t)v13, (uint64_t)v14);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  long long v8 = v14[7];
  *(_OWORD *)(a1 + 112) = v14[6];
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v14[8];
  *(void *)(a1 + 160) = v15;
  long long v9 = v14[3];
  *(_OWORD *)(a1 + 48) = v14[2];
  *(_OWORD *)(a1 + 64) = v9;
  long long v10 = v14[5];
  *(_OWORD *)(a1 + 80) = v14[4];
  *(_OWORD *)(a1 + 96) = v10;
  double result = *(double *)v14;
  long long v12 = v14[1];
  *(_OWORD *)(a1 + 16) = v14[0];
  *(_OWORD *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 168) = 0;
  return result;
}

uint64_t sub_8BE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  sub_4A98(&qword_2ECB40);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_270BF0;
  sub_8D304(a1);
  *(void *)(v10 + 32) = sub_26C560();
  *(void *)(v10 + 40) = v11;
  sub_26C1C0();
  *(void *)(v10 + 48) = sub_26C560();
  *(void *)(v10 + 56) = v12;
  sub_26C570();
  uint64_t result = sub_26AA80();
  double v14 = *(double *)(a1 + 8);
  if (v14 == 1.0)
  {
    double v15 = 0.0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
  }
  else
  {
    uint64_t v16 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v17 = v21;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_270BF0;
    sub_26C150();
    *(void *)(v22 + 32) = sub_26C560();
    *(void *)(v22 + 40) = v23;
    sub_26C170();
    *(void *)(v22 + 48) = sub_26C560();
    *(void *)(v22 + 56) = v24;
    sub_26C570();
    uint64_t result = sub_26AA80();
    uint64_t v18 = v28;
    long long v19 = v29;
    long long v20 = v30;
    double v15 = v14;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v25;
  *(_OWORD *)(a2 + 56) = v26;
  *(_OWORD *)(a2 + 72) = v27;
  *(double *)(a2 + 88) = v15;
  *(void *)(a2 + 96) = v16;
  *(void *)(a2 + 104) = v17;
  *(void *)(a2 + 112) = v18;
  *(_OWORD *)(a2 + 120) = v19;
  *(_OWORD *)(a2 + 136) = v20;
  return result;
}

uint64_t sub_8C05C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ProgressiveBlurMaterial()
{
  return swift_release();
}

uint64_t initializeWithCopy for ProgressiveBlurMaterial(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

void *assignWithCopy for ProgressiveBlurMaterial(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 initializeWithTake for ProgressiveBlurMaterial(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ProgressiveBlurMaterial(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlurMaterial(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlurMaterial(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurMaterial()
{
  return &type metadata for ProgressiveBlurMaterial;
}

id sub_8C37C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackdropLayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for BackdropLayerView()
{
  return self;
}

unint64_t sub_8C3DC()
{
  unint64_t result = qword_2EDBA8;
  if (!qword_2EDBA8)
  {
    sub_7B0C(&qword_2EDBB0);
    sub_8C458();
    sub_8C4B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBA8);
  }
  return result;
}

unint64_t sub_8C458()
{
  unint64_t result = qword_2EDBB8;
  if (!qword_2EDBB8)
  {
    sub_7B0C(&qword_2EDBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBB8);
  }
  return result;
}

unint64_t sub_8C4B4()
{
  unint64_t result = qword_2EDBC8;
  if (!qword_2EDBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SaturationBackdropFilter()
{
  return &type metadata for SaturationBackdropFilter;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

void sub_8C580(void *a1)
{
  id v2 = [a1 layer];
  Class isa = sub_269A60().super.super.isa;
  NSString v4 = sub_26D3F0();
  [v2 setValue:isa forKeyPath:v4];

  id v5 = [a1 layer];
  uint64_t v6 = (void *)sub_8C6A4();
  NSString v7 = sub_26D3F0();
  [v5 setValue:v6 forKeyPath:v7];
}

uint64_t sub_8C6A4()
{
  id v1 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v1 setScale:1.0];
  [v1 setPreferredRange:0x7FFFLL];
  id v2 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v1 format:0.0, 0.0, 100.0, 100.0];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *v0;
  long long v5 = v0[1];
  *(int64x2_t *)(v3 + 32) = vdupq_n_s64(0x4059000000000000uLL);
  *(_OWORD *)(v3 + 48) = v4;
  long long v6 = v0[2];
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = v6;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_8D278;
  *(void *)(v7 + 24) = v3;
  v12[4] = sub_8BDAC;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_20C1F8;
  _OWORD v12[3] = &unk_2DEED8;
  uint64_t v8 = _Block_copy(v12);
  swift_retain();
  swift_release();
  id v9 = [v2 imageWithActions:v8];

  _Block_release(v8);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    id v11 = [v9 CGImage];
    swift_release();

    return (uint64_t)v11;
  }
  return result;
}

void sub_8C8B0(void *a1, double *a2, double a3, double a4, double a5, double a6)
{
  id v12 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v12 setBounds:a3, a4, a5, a6];
  sub_4A98(&qword_2EDBE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_270BF0;
  double v14 = self;
  id v15 = [v14 blackColor];
  id v16 = [v15 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v18 = v17;
  *(void *)(v13 + 56) = v17;
  *(void *)(v13 + 32) = v16;
  id v19 = [v14 clearColor];
  id v20 = [v19 CGColor];

  *(void *)(v13 + 88) = v18;
  *(void *)(v13 + 64) = v20;
  Class isa = sub_26D5F0().super.isa;
  swift_bridgeObjectRelease();
  [v12 setColors:isa];

  sub_4A98(&qword_2EDBF8);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_273E70;
  *(NSNumber *)(v22 + 32) = sub_26D700();
  sub_1263C(0, &qword_2EDC00);
  *(NSNumber *)(v22 + 40) = sub_26D940(1.0);
  sub_26D630();
  Class v23 = sub_26D5F0().super.isa;
  swift_bridgeObjectRelease();
  [v12 setLocations:v23];

  [v12 setStartPoint:a2[1], a2[2]];
  [v12 setEndPoint:a2[3], a2[4]];
  id v24 = [a1 CGContext];
  [v12 renderInContext:v24];
}

void sub_8CB54(void *a1)
{
}

uint64_t sub_8CBA0()
{
  return sub_26B230();
}

uint64_t sub_8CBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_8D2B0();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_8CC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_8D2B0();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_8CCAC()
{
}

unint64_t sub_8CCD8()
{
  unint64_t result = qword_2EDBD0;
  if (!qword_2EDBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBD0);
  }
  return result;
}

void sub_8CD30(void *a1)
{
  id v1 = [a1 layer];
  Class isa = sub_26D700().super.super.isa;
  NSString v3 = sub_26D3F0();
  [v1 setValue:isa forKeyPath:v3];
}

uint64_t sub_8CDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_8D214();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_8CE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_8D214();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_8CEA0()
{
}

unint64_t sub_8CECC()
{
  unint64_t result = qword_2EDBD8;
  if (!qword_2EDBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBD8);
  }
  return result;
}

id sub_8CF20()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for BackdropLayerView()) init];
  sub_26D430();
  id v1 = objc_allocWithZone((Class)CAFilter);
  NSString v2 = sub_26D3F0();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithType:v2];

  Class isa = sub_26D6A0().super.super.isa;
  NSString v5 = sub_26D3F0();
  [v3 setValue:isa forKey:v5];

  id v6 = [v0 layer];
  sub_4A98(&qword_2EDBE0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_26F990;
  *(void *)(v7 + 56) = sub_1263C(0, &qword_2EDBE8);
  *(void *)(v7 + 32) = v3;
  id v8 = v3;
  Class v9 = sub_26D5F0().super.isa;
  swift_bridgeObjectRelease();
  [v6 setFilters:v9];

  return v0;
}

id sub_8D0C0()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for BackdropLayerView()) init];
  sub_26D430();
  id v1 = objc_allocWithZone((Class)CAFilter);
  NSString v2 = sub_26D3F0();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithType:v2];

  id v4 = [v0 layer];
  sub_4A98(&qword_2EDBE0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_26F990;
  *(void *)(v5 + 56) = sub_1263C(0, &qword_2EDBE8);
  *(void *)(v5 + 32) = v3;
  id v6 = v3;
  Class isa = sub_26D5F0().super.isa;
  swift_bridgeObjectRelease();
  [v4 setFilters:isa];

  return v0;
}

unint64_t sub_8D214()
{
  unint64_t result = qword_2EDBF0;
  if (!qword_2EDBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDBF0);
  }
  return result;
}

uint64_t sub_8D268()
{
  return swift_deallocObject();
}

void sub_8D278(void *a1)
{
  sub_8C8B0(a1, v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_8D288()
{
  return swift_deallocObject();
}

uint64_t sub_8D298(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8D2A8()
{
  return swift_release();
}

unint64_t sub_8D2B0()
{
  unint64_t result = qword_2EDC08;
  if (!qword_2EDC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDC08);
  }
  return result;
}

uint64_t sub_8D304(uint64_t a1)
{
  return a1;
}

uint64_t dispatch thunk of BooksComponentModel.segue.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BooksComponentModel.segue.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t BooksFailureView.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *a3 = sub_1CA78;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))result;
  return result;
}

uint64_t sub_8D3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26D980();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t SharedWithYouView.init(for:horizontalAlignment:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_8D428@<X0>(uint64_t a1@<X8>)
{
  sub_CC78();
  swift_bridgeObjectRetain();
  uint64_t result = sub_26BB00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_8D494()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t BooksFailureView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26B560();
  uint64_t v75 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v74 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B490();
  uint64_t v72 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v71 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(char **)(a1 + 24);
  uint64_t v66 = *(void *)(a1 + 16);
  uint64_t v87 = v66;
  char v88 = &type metadata for Image;
  uint64_t v67 = v8;
  uint64_t v89 = (uint64_t)v8;
  uint64_t v90 = &protocol witness table for Image;
  uint64_t v9 = sub_26C2D0();
  uint64_t v70 = *(char **)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)v57 - v10;
  sub_7B0C(&qword_2EBF48);
  uint64_t v12 = sub_26ABD0();
  uint64_t v68 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v59 = (char *)v57 - v13;
  uint64_t v14 = sub_26ABD0();
  uint64_t v69 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v65 = (char *)v57 - v15;
  uint64_t v64 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v17 = sub_8DEF0();
  v57[2] = WitnessTable;
  uint64_t v85 = WitnessTable;
  unint64_t v86 = v17;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v83 = v58;
  unint64_t v84 = v17;
  uint64_t v18 = swift_getWitnessTable();
  unint64_t v19 = sub_8DF4C();
  uint64_t v87 = v14;
  char v88 = (void *)v6;
  uint64_t v89 = v18;
  uint64_t v90 = (void *)v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  unint64_t v62 = (char *)v57 - v21;
  uint64_t v87 = v14;
  char v88 = (void *)v6;
  uint64_t v73 = v6;
  uint64_t v61 = v18;
  uint64_t v89 = v18;
  uint64_t v90 = (void *)v19;
  unint64_t v60 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = OpaqueTypeMetadata2;
  uint64_t v80 = v4;
  uint64_t v87 = OpaqueTypeMetadata2;
  char v88 = (void *)v4;
  uint64_t v81 = OpaqueTypeConformance2;
  uint64_t v89 = OpaqueTypeConformance2;
  uint64_t v90 = &protocol witness table for EnabledTextSelectability;
  uint64_t v23 = swift_getOpaqueTypeMetadata2();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  long long v27 = (char *)v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  long long v29 = (char *)v57 - v28;
  uint64_t v76 = sub_26D980();
  uint64_t v30 = *(void *)(v76 - 8);
  uint64_t v31 = __chkstk_darwin(v76);
  uint64_t v33 = (char *)v57 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v78 = (char *)v57 - v34;
  long long v77 = *(_OWORD *)v77;
  uint64_t v35 = sub_269E40();
  if (v35)
  {
    v57[1] = a2;
    __chkstk_darwin(v35);
    __int16 v36 = v67;
    v57[-4] = v66;
    v57[-3] = v36;
    *(_OWORD *)&v57[-2] = v77;
    sub_26C2B0();
    sub_26C0F0();
    uint64_t v67 = v29;
    uint64_t v37 = v59;
    *(void *)&long long v77 = v24;
    uint64_t v38 = v64;
    sub_26BF90();
    swift_release();
    (*((void (**)(char *, uint64_t))v70 + 1))(v11, v38);
    sub_26C0F0();
    unsigned int v39 = v65;
    sub_26BDA0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v12);
    int v40 = v71;
    sub_26B480();
    uint64_t v70 = v33;
    __int16 v41 = v62;
    uint64_t v42 = v73;
    sub_26BC50();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v42);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v14);
    uint64_t v43 = v74;
    sub_26B550();
    uint64_t v45 = v79;
    unint64_t v44 = (void *)v80;
    uint64_t v46 = v81;
    sub_26BD30();
    (*(void (**)(char *, void *))(v75 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v45);
    uint64_t v87 = v45;
    char v88 = v44;
    uint64_t v89 = v46;
    uint64_t v90 = &protocol witness table for EnabledTextSelectability;
    uint64_t v47 = swift_getOpaqueTypeConformance2();
    uint64_t v48 = v67;
    sub_CCCC(v27, v23, v47);
    uint64_t v49 = v77;
    int v50 = *(void (**)(char *, uint64_t))(v77 + 8);
    v50(v27, v23);
    uint64_t v51 = v70;
    sub_CCCC(v48, v23, v47);
    v50(v48, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v23);
    uint64_t v52 = v78;
    uint64_t v53 = v76;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v78, v51, v76);
    uint64_t v54 = *(void (**)(char *, uint64_t))(v30 + 8);
    v54(v51, v53);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v33, 1, 1, v23);
    uint64_t v52 = v78;
    uint64_t v53 = v76;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v78, v33, v76);
    uint64_t v54 = *(void (**)(char *, uint64_t))(v30 + 8);
    v54(v33, v53);
    uint64_t v45 = v79;
    unint64_t v44 = (void *)v80;
  }
  uint64_t v87 = v45;
  char v88 = v44;
  uint64_t v89 = v81;
  uint64_t v90 = &protocol witness table for EnabledTextSelectability;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = swift_getWitnessTable();
  sub_CCCC(v52, v53, v55);
  return ((uint64_t (*)(char *, uint64_t))v54)(v52, v53);
}

unint64_t sub_8DEF0()
{
  unint64_t result = qword_2EBF40;
  if (!qword_2EBF40)
  {
    sub_7B0C(&qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF40);
  }
  return result;
}

unint64_t sub_8DF4C()
{
  unint64_t result = qword_2EDC18[0];
  if (!qword_2EDC18[0])
  {
    sub_26B490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2EDC18);
  }
  return result;
}

uint64_t sub_8DFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))__chkstk_darwin(v7);
  uint64_t v12 = (char *)&v15 - v11;
  v10();
  sub_CCCC(v9, a3, a4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a3);
  sub_CCCC(v12, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a3);
}

uint64_t sub_8E0D8()
{
  return sub_8DFA4(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_8E0E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

uint64_t sub_8E124()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_8E16C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *sub_8E19C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_8E1D8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedWithYouContentView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedWithYouContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for BooksFailureView()
{
  return sub_129B4();
}

uint64_t sub_8E2A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_8E4A8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v9 = sub_4A98(a4);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  a2(a1);
  uint64_t v15 = sub_B678((uint64_t)v14, (uint64_t)v12, a4);
  a5(v15);
  uint64_t v16 = sub_26C470();
  sub_B6DC((uint64_t)v14, a4);
  return v16;
}

uint64_t sub_8E5AC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_4A98(&qword_2EE0F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  a2(a1);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v11 = sub_7B0C(&qword_2EE100);
  uint64_t v12 = sub_26B310();
  uint64_t v13 = sub_7B0C(&qword_2EE108);
  uint64_t v14 = sub_7C18(&qword_2EE110, &qword_2EE108);
  unint64_t v15 = sub_9FC20();
  uint64_t v20 = v13;
  uint64_t v21 = &type metadata for PressedButtonStyle;
  uint64_t v22 = v14;
  unint64_t v23 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_A00C4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v20 = v11;
  uint64_t v21 = (ValueMetadata *)v12;
  uint64_t v22 = OpaqueTypeConformance2;
  unint64_t v23 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_26C470();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v18;
}

uint64_t TopLockupMetadataView.init(preheader:title:subtitle:author:authorAction:authorImpressionMetrics:narrator:footer:isVibrant:highlightAttributionViewLoader:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(void *)a9 = swift_getKeyPath();
  *(unsigned char *)(a9 + 8) = 0;
  uint64_t v17 = (int *)type metadata accessor for TopLockupMetadataView(0);
  uint64_t v18 = (uint64_t *)(a9 + v17[5]);
  *uint64_t v18 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  unint64_t v19 = (uint64_t *)(a9 + v17[6]);
  *unint64_t v19 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)(a9 + v17[7]);
  *uint64_t v20 = swift_getKeyPath();
  sub_4A98(&qword_2EBC58);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (uint64_t *)(a9 + v17[8]);
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a9 + v17[9];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(unsigned char *)(v22 + 8) = 0;
  sub_B678(a1, a9 + v17[11], &qword_2ED2E0);
  sub_B678(a2, a9 + v17[12], &qword_2ED2E0);
  sub_B678(a3, a9 + v17[13], &qword_2ED2E0);
  sub_B678(a4, a9 + v17[14], &qword_2ED2E0);
  sub_B678(a5, a9 + v17[15], &qword_2EA838);
  sub_B678(a6, a9 + v17[16], &qword_2EBFE8);
  sub_B678(a7, a9 + v17[17], &qword_2EDCA0);
  sub_B678(a8, a9 + v17[18], &qword_2EDCA8);
  *(unsigned char *)(a9 + v17[19]) = a10;
  type metadata accessor for HighlightAttributionViewLoader();
  sub_26C340();
  sub_B6DC(a8, &qword_2EDCA8);
  sub_B6DC(a7, &qword_2EDCA0);
  sub_B6DC(a6, &qword_2EBFE8);
  sub_B6DC(a5, &qword_2EA838);
  sub_B6DC(a4, &qword_2ED2E0);
  sub_B6DC(a3, &qword_2ED2E0);
  sub_B6DC(a2, &qword_2ED2E0);
  uint64_t result = sub_B6DC(a1, &qword_2ED2E0);
  uint64_t v24 = (void *)(a9 + v17[10]);
  *uint64_t v24 = v30;
  v24[1] = v31;
  return result;
}

uint64_t TopLockupMetadataView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4A98(&qword_2EDCB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EDCB8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EDCC0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)v1;
  char v13 = *(unsigned char *)(v1 + 8);
  sub_10E0C(*(void *)v1, v13);
  char v14 = sub_40900(v12, v13);
  sub_C374(v12, v13);
  if (v14) {
    uint64_t v15 = sub_26B1C0();
  }
  else {
    uint64_t v15 = sub_26B1D0();
  }
  *(void *)uint64_t v5 = v15;
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v16 = sub_4A98(&qword_2EDCC8);
  sub_8ED34(v1, (uint64_t)&v5[*(int *)(v16 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v5, (uint64_t)v8, &qword_2EDCB0);
  uint64_t v18 = &v8[*(int *)(v6 + 36)];
  *(void *)uint64_t v18 = KeyPath;
  *((void *)v18 + 1) = 6;
  unsigned char v18[16] = 0;
  sub_B6DC((uint64_t)v5, &qword_2EDCB0);
  uint64_t v19 = *(void *)v1;
  char v20 = *(unsigned char *)(v1 + 8);
  sub_10E0C(v19, v20);
  char v21 = sub_40900(v19, v20);
  sub_C374(v19, v20);
  uint64_t v22 = swift_getKeyPath();
  sub_B678((uint64_t)v8, (uint64_t)v11, &qword_2EDCB8);
  unint64_t v23 = &v11[*(int *)(v9 + 36)];
  *(void *)unint64_t v23 = v22;
  v23[8] = v21 & 1;
  sub_B6DC((uint64_t)v8, &qword_2EDCB8);
  return sub_19CC4((uint64_t)v11, a1, &qword_2EDCC0);
}

uint64_t sub_8ED34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v374 = a2;
  uint64_t v3 = sub_4A98(&qword_2EDCA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v365 = (uint64_t)&v330 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v367 = sub_4A98(&qword_2EDE88);
  uint64_t v5 = __chkstk_darwin(v367);
  uint64_t v366 = (uint64_t)&v330 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v343 = (char *)&v330 - v7;
  uint64_t v368 = sub_4A98(&qword_2EDE90);
  __chkstk_darwin(v368);
  uint64_t v388 = (uint64_t)&v330 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_4A98(&qword_2EDE98);
  __chkstk_darwin(v370);
  unsigned __int8 v345 = (char *)&v330 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = sub_4A98(&qword_2EDEA0);
  __chkstk_darwin(v344);
  v347 = (char *)&v330 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_4A98(&qword_2EDEA8);
  uint64_t v11 = __chkstk_darwin(v346);
  uint64_t v373 = (uint64_t)&v330 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v371 = (uint64_t)&v330 - v14;
  __chkstk_darwin(v13);
  uint64_t v377 = (uint64_t)&v330 - v15;
  uint64_t v16 = sub_4A98(&qword_2EDCA0);
  __chkstk_darwin(v16 - 8);
  uint64_t v356 = (uint64_t)&v330 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v358 = sub_4A98(&qword_2EDEB0);
  uint64_t v18 = __chkstk_darwin(v358);
  uint64_t v357 = (uint64_t)&v330 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v339 = (char *)&v330 - v20;
  uint64_t v359 = sub_4A98(&qword_2EDEB8);
  __chkstk_darwin(v359);
  uint64_t v361 = (uint64_t)&v330 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_4A98(&qword_2EDEC0);
  __chkstk_darwin(v360);
  uint64_t v384 = (uint64_t)&v330 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v340 = sub_4A98(&qword_2EDEC8);
  __chkstk_darwin(v340);
  long long v341 = (char *)&v330 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_4A98(&qword_2EDED0);
  uint64_t v24 = __chkstk_darwin(v363);
  uint64_t v372 = (uint64_t)&v330 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v362 = (uint64_t)&v330 - v27;
  __chkstk_darwin(v26);
  uint64_t v398 = (uint64_t)&v330 - v28;
  uint64_t v29 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v376 = (uint64_t)&v330 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v31 - 8);
  uint64_t v375 = (uint64_t)&v330 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = sub_26C700();
  uint64_t v399 = *(void *)(v389 - 8);
  uint64_t v33 = __chkstk_darwin(v389);
  uint64_t v342 = (uint64_t)&v330 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v338 = (uint64_t)&v330 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v337 = (uint64_t)&v330 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v336 = (uint64_t)&v330 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v335 = (uint64_t)&v330 - v42;
  __chkstk_darwin(v41);
  char v333 = (char *)&v330 - v43;
  uint64_t v44 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v44 - 8);
  uint64_t v400 = (uint64_t)&v330 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v46 - 8);
  v406 = (char *)&v330 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_26B980();
  uint64_t v404 = *(void *)(v48 - 8);
  v405 = (void (*)(void, void, void))v48;
  __chkstk_darwin(v48);
  long long v350 = (char *)&v330 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v50 - 8);
  v408 = (char *)&v330 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for TopLockupMetadataView(0);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(void *)(v53 + 64);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v330 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_4A98(&qword_2ED2E0);
  __chkstk_darwin(v56 - 8);
  uint64_t v58 = (char *)&v330 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_4A98(&qword_2ED2E8);
  uint64_t v60 = __chkstk_darwin(v59);
  unint64_t v62 = (char *)&v330 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v64 = (char *)&v330 - v63;
  uint64_t v402 = sub_4A98(&qword_2EDED8);
  uint64_t v65 = __chkstk_darwin(v402);
  uint64_t v381 = (uint64_t)&v330 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v351 = (uint64_t)&v330 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v378 = (uint64_t)&v330 - v70;
  __chkstk_darwin(v69);
  long long v348 = (char *)&v330 - v71;
  uint64_t v403 = sub_4A98(&qword_2EDEE0);
  uint64_t v72 = __chkstk_darwin(v403);
  uint64_t v383 = (uint64_t)&v330 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v380 = (uint64_t)&v330 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v379 = (uint64_t)&v330 - v77;
  __chkstk_darwin(v76);
  char v331 = (char *)&v330 - v78;
  uint64_t v401 = sub_4A98(&qword_2EDEE8);
  uint64_t v79 = __chkstk_darwin(v401);
  uint64_t v369 = (uint64_t)&v330 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v387 = (uint64_t)&v330 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v355 = (char *)&v330 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v334 = (char *)&v330 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  uint64_t v397 = (uint64_t)&v330 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v332 = (char *)&v330 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  uint64_t v396 = (uint64_t)&v330 - v92;
  __chkstk_darwin(v91);
  v330 = (char *)&v330 - v93;
  uint64_t v382 = sub_4A98(&qword_2EDEF0);
  uint64_t v94 = __chkstk_darwin(v382);
  uint64_t v364 = (uint64_t)&v330 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __chkstk_darwin(v94);
  uint64_t v386 = (uint64_t)&v330 - v97;
  uint64_t v98 = __chkstk_darwin(v96);
  uint64_t v354 = (uint64_t)&v330 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  uint64_t v385 = (uint64_t)&v330 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  uint64_t v349 = (uint64_t)&v330 - v103;
  __chkstk_darwin(v102);
  uint64_t v395 = (uint64_t)&v330 - v104;
  uint64_t v409 = v52;
  sub_B678(a1 + *(int *)(v52 + 44), (uint64_t)v58, &qword_2ED2E0);
  sub_9EA6C(a1, (uint64_t)v55, type metadata accessor for TopLockupMetadataView);
  uint64_t v105 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v106 = (v105 + 16) & ~v105;
  uint64_t v392 = v106 + v54;
  uint64_t v391 = v105 | 7;
  uint64_t v107 = swift_allocObject();
  uint64_t v393 = v106;
  v394 = v55;
  sub_9E1EC((uint64_t)v55, v107 + v106);
  long long v352 = v58;
  sub_19CC4((uint64_t)v58, (uint64_t)v62, &qword_2ED2E0);
  uint64_t v108 = swift_allocObject();
  *(void *)(v108 + 16) = sub_9E250;
  *(void *)(v108 + 24) = v107;
  uint64_t v390 = v59;
  unint64_t v109 = (uint64_t (**)(uint64_t))&v62[*(int *)(v59 + 28)];
  *unint64_t v109 = sub_9E2A0;
  v109[1] = (uint64_t (*)(uint64_t))v108;
  long long v353 = v62;
  sub_19CC4((uint64_t)v62, (uint64_t)v64, &qword_2ED2E8);
  uint64_t v110 = (uint64_t)v408;
  uint64_t v407 = a1 + *(int *)(v52 + 28);
  sub_4204C((uint64_t)v408);
  uint64_t v112 = v404;
  uint64_t v111 = v405;
  uint64_t v113 = v350;
  (*(void (**)(char *, void, void))(v404 + 104))(v350, enum case for Font.TextStyle.caption(_:), v405);
  uint64_t v114 = enum case for Font.Design.rounded(_:);
  uint64_t v115 = sub_26B820();
  uint64_t v116 = *(void *)(v115 - 8);
  uint64_t v117 = v406;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 104))(v406, v114, v115);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v117, 0, 1, v115);
  sub_26B8B0();
  uint64_t v118 = v113;
  uint64_t v119 = (uint64_t)v348;
  uint64_t v120 = sub_26B8E0();
  uint64_t v121 = (uint64_t)v117;
  uint64_t v122 = (int *)v409;
  sub_B6DC(v121, &qword_2EBFC0);
  (*(void (**)(char *, void (*)(void, void, void)))(v112 + 8))(v118, v111);
  sub_9EAD4(v110, type metadata accessor for FontConstants);
  uint64_t KeyPath = swift_getKeyPath();
  sub_B678((uint64_t)v64, v119, &qword_2ED2E8);
  uint64_t v124 = (uint64_t *)(v119 + *(int *)(v402 + 36));
  *uint64_t v124 = KeyPath;
  v124[1] = v120;
  uint64_t v125 = v400;
  sub_B6DC((uint64_t)v64, &qword_2ED2E8);
  uint64_t v126 = v122[19];
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v125);
    uint64_t v127 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4(v125, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v127 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  uint64_t v128 = (uint64_t)v333;
  uint64_t v129 = (uint64_t)v331;
  uint64_t v130 = swift_getKeyPath();
  sub_B678(v119, v129, &qword_2EDED8);
  long long v131 = (uint64_t *)(v129 + *(int *)(v403 + 36));
  uint64_t *v131 = v130;
  v131[1] = v127;
  sub_B6DC(v119, &qword_2EDED8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    long long v132 = (int *)v409;
    sub_41340(v128);
    uint64_t v133 = v389;
    uint64_t v134 = v399;
  }
  else
  {
    uint64_t v134 = v399;
    uint64_t v133 = v389;
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v128, enum case for BlendMode.normal(_:), v389);
    long long v132 = (int *)v409;
  }
  uint64_t v135 = (uint64_t)v330;
  long long v136 = &v330[*(int *)(v401 + 36)];
  v405 = *(void (**)(void, void, void))(v134 + 16);
  v406 = (char *)(v134 + 16);
  v405(v136, v128, v133);
  sub_B678(v129, v135, &qword_2EDEE0);
  uint64_t v404 = *(void *)(v134 + 8);
  ((void (*)(uint64_t, uint64_t))v404)(v128, v133);
  sub_B6DC(v129, &qword_2EDEE0);
  char v137 = sub_26B780();
  sub_26A640();
  uint64_t v139 = v138;
  uint64_t v141 = v140;
  uint64_t v143 = v142;
  uint64_t v145 = v144;
  uint64_t v146 = v349;
  sub_B678(v135, v349, &qword_2EDEE8);
  uint64_t v147 = v146 + *(int *)(v382 + 36);
  *(unsigned char *)uint64_t v147 = v137;
  *(void *)(v147 + 8) = v139;
  *(void *)(v147 + 16) = v141;
  *(void *)(v147 + 24) = v143;
  *(void *)(v147 + 32) = v145;
  *(unsigned char *)(v147 + 40) = 0;
  sub_B6DC(v135, &qword_2EDEE8);
  sub_19CC4(v146, v395, &qword_2EDEF0);
  sub_B678(a1 + v132[12], (uint64_t)v64, &qword_2ED2E0);
  uint64_t v148 = (uint64_t (**)(uint64_t))&v64[*(int *)(v390 + 28)];
  *uint64_t v148 = sub_75900;
  v148[1] = 0;
  uint64_t v149 = (uint64_t)v408;
  sub_4204C((uint64_t)v408);
  uint64_t v150 = sub_92184((unsigned int *)&enum case for Font.TextStyle.title2(_:), (unsigned int *)&enum case for Font.TextStyle.title(_:), (void (*)(uint64_t))&static Font.Weight.bold.getter);
  sub_9EAD4(v149, type metadata accessor for FontConstants);
  uint64_t v151 = swift_getKeyPath();
  uint64_t v152 = v378;
  sub_B678((uint64_t)v64, v378, &qword_2ED2E8);
  uint64_t v153 = (uint64_t *)(v152 + *(int *)(v402 + 36));
  *uint64_t v153 = v151;
  v153[1] = v150;
  sub_B6DC((uint64_t)v64, &qword_2ED2E8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v154 = v400;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v400);
    uint64_t v155 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4(v154, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v155 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  uint64_t v156 = v389;
  uint64_t v157 = swift_getKeyPath();
  uint64_t v158 = v378;
  uint64_t v159 = v379;
  sub_B678(v378, v379, &qword_2EDED8);
  uint64_t v160 = (uint64_t *)(v159 + *(int *)(v403 + 36));
  *uint64_t v160 = v157;
  v160[1] = v155;
  sub_B6DC(v158, &qword_2EDED8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    long long v161 = (int *)v409;
    uint64_t v162 = v335;
    sub_41340(v335);
  }
  else
  {
    uint64_t v162 = v335;
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v335, enum case for BlendMode.normal(_:), v156);
    long long v161 = (int *)v409;
  }
  uint64_t v163 = (uint64_t)v332;
  v405(&v332[*(int *)(v401 + 36)], v162, v156);
  uint64_t v164 = v379;
  sub_B678(v379, v163, &qword_2EDEE0);
  ((void (*)(uint64_t, uint64_t))v404)(v162, v156);
  sub_B6DC(v164, &qword_2EDEE0);
  sub_19CC4(v163, v396, &qword_2EDEE8);
  sub_B678(a1 + v161[13], (uint64_t)v64, &qword_2ED2E0);
  uint64_t v165 = (uint64_t (**)(uint64_t))&v64[*(int *)(v390 + 28)];
  *uint64_t v165 = sub_75900;
  v165[1] = 0;
  uint64_t v166 = (uint64_t)v408;
  sub_4204C((uint64_t)v408);
  uint64_t v167 = sub_92184((unsigned int *)&enum case for Font.TextStyle.body(_:), (unsigned int *)&enum case for Font.TextStyle.title2(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
  sub_9EAD4(v166, type metadata accessor for FontConstants);
  uint64_t v168 = swift_getKeyPath();
  uint64_t v169 = v351;
  sub_B678((uint64_t)v64, v351, &qword_2ED2E8);
  uint64_t v170 = (uint64_t *)(v169 + *(int *)(v402 + 36));
  *uint64_t v170 = v168;
  v170[1] = v167;
  sub_B6DC((uint64_t)v64, &qword_2ED2E8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v171 = v400;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v400);
    uint64_t v172 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4(v171, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v172 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  uint64_t v173 = swift_getKeyPath();
  uint64_t v174 = v380;
  sub_B678(v169, v380, &qword_2EDED8);
  uint64_t v175 = (uint64_t *)(v174 + *(int *)(v403 + 36));
  *uint64_t v175 = v173;
  v175[1] = v172;
  sub_B6DC(v169, &qword_2EDED8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v176 = (int *)v409;
    uint64_t v177 = v336;
    sub_41340(v336);
    uint64_t v178 = (uint64_t)v334;
  }
  else
  {
    uint64_t v177 = v336;
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v336, enum case for BlendMode.normal(_:), v156);
    uint64_t v178 = (uint64_t)v334;
    uint64_t v176 = (int *)v409;
  }
  v405(v178 + *(int *)(v401 + 36), v177, v156);
  uint64_t v179 = v380;
  sub_B678(v380, v178, &qword_2EDEE0);
  ((void (*)(uint64_t, uint64_t))v404)(v177, v156);
  sub_B6DC(v179, &qword_2EDEE0);
  sub_19CC4(v178, v397, &qword_2EDEE8);
  uint64_t v180 = (uint64_t)v352;
  sub_B678(a1 + v176[14], (uint64_t)v352, &qword_2ED2E0);
  uint64_t v181 = (uint64_t)v394;
  sub_9EA6C(a1, (uint64_t)v394, type metadata accessor for TopLockupMetadataView);
  uint64_t v182 = swift_allocObject();
  sub_9E1EC(v181, v182 + v393);
  uint64_t v183 = (uint64_t)v353;
  sub_19CC4(v180, (uint64_t)v353, &qword_2ED2E0);
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_9E934;
  *(void *)(v184 + 24) = v182;
  uint64_t v185 = (uint64_t (**)(uint64_t))(v183 + *(int *)(v390 + 28));
  *uint64_t v185 = sub_9E9E0;
  v185[1] = (uint64_t (*)(uint64_t))v184;
  sub_19CC4(v183, (uint64_t)v64, &qword_2ED2E8);
  uint64_t v186 = (uint64_t)v408;
  sub_4204C((uint64_t)v408);
  uint64_t v187 = sub_934B8();
  sub_9EAD4(v186, type metadata accessor for FontConstants);
  uint64_t v188 = swift_getKeyPath();
  uint64_t v189 = v381;
  sub_B678((uint64_t)v64, v381, &qword_2ED2E8);
  long long v190 = (uint64_t *)(v189 + *(int *)(v402 + 36));
  *long long v190 = v188;
  v190[1] = v187;
  sub_B6DC((uint64_t)v64, &qword_2ED2E8);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v191 = v400;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v400);
    uint64_t v192 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4(v191, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v192 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  uint64_t v193 = (uint64_t)v339;
  uint64_t v194 = swift_getKeyPath();
  uint64_t v195 = v381;
  uint64_t v196 = v383;
  sub_B678(v381, v383, &qword_2EDED8);
  uint64_t v197 = (uint64_t *)(v196 + *(int *)(v403 + 36));
  *uint64_t v197 = v194;
  v197[1] = v192;
  sub_B6DC(v195, &qword_2EDED8);
  uint64_t v198 = v337;
  if (*(unsigned char *)(a1 + v126) == 1) {
    sub_41340(v337);
  }
  else {
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v337, enum case for BlendMode.normal(_:), v156);
  }
  uint64_t v199 = (uint64_t)v355;
  v405(&v355[*(int *)(v401 + 36)], v198, v156);
  uint64_t v200 = v383;
  sub_B678(v383, v199, &qword_2EDEE0);
  ((void (*)(uint64_t, uint64_t))v404)(v198, v156);
  sub_B6DC(v200, &qword_2EDEE0);
  char v201 = sub_26B770();
  uint64_t v202 = *(void *)a1;
  LOBYTE(v200) = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v200);
  char v203 = sub_40900(v202, v200);
  sub_C374(v202, v200);
  if (v203)
  {
    uint64_t v204 = v375;
    sub_41378(v375);
    uint64_t v205 = v376;
    sub_9EA6C(v204, v376, type metadata accessor for SizeConstants.Environment);
    sub_9EAD4(v204, type metadata accessor for SizeConstants);
    sub_9EAD4(v205, type metadata accessor for SizeConstants.Spacing);
  }
  sub_26A640();
  uint64_t v207 = v206;
  uint64_t v209 = v208;
  uint64_t v211 = v210;
  uint64_t v213 = v212;
  uint64_t v214 = v354;
  sub_B678(v199, v354, &qword_2EDEE8);
  uint64_t v215 = v214 + *(int *)(v382 + 36);
  *(unsigned char *)uint64_t v215 = v201;
  *(void *)(v215 + 8) = v207;
  *(void *)(v215 + 16) = v209;
  *(void *)(v215 + 24) = v211;
  *(void *)(v215 + 32) = v213;
  *(unsigned char *)(v215 + 40) = 0;
  sub_B6DC(v199, &qword_2EDEE8);
  sub_19CC4(v214, v385, &qword_2EDEF0);
  uint64_t v216 = v356;
  sub_B678(a1 + *(int *)(v409 + 68), v356, &qword_2EDCA0);
  uint64_t v217 = (uint64_t)v394;
  sub_9EA6C(a1, (uint64_t)v394, type metadata accessor for TopLockupMetadataView);
  uint64_t v218 = swift_allocObject();
  sub_9E1EC(v217, v218 + v393);
  uint64_t v219 = v357;
  sub_19CC4(v216, v357, &qword_2EDCA0);
  uint64_t v220 = swift_allocObject();
  *(void *)(v220 + 16) = sub_9EA1C;
  *(void *)(v220 + 24) = v218;
  uint64_t v221 = (uint64_t (**)(uint64_t))(v219 + *(int *)(v358 + 28));
  *uint64_t v221 = sub_9EA34;
  v221[1] = (uint64_t (*)(uint64_t))v220;
  sub_19CC4(v219, v193, &qword_2EDEB0);
  uint64_t v222 = (uint64_t)v408;
  sub_4204C((uint64_t)v408);
  uint64_t v223 = sub_934B8();
  sub_9EAD4(v222, type metadata accessor for FontConstants);
  uint64_t v224 = swift_getKeyPath();
  uint64_t v225 = v361;
  sub_B678(v193, v361, &qword_2EDEB0);
  uint64_t v226 = (uint64_t *)(v225 + *(int *)(v359 + 36));
  *uint64_t v226 = v224;
  v226[1] = v223;
  sub_B6DC(v193, &qword_2EDEB0);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v227 = v400;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v400);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v228 = sub_26C1C0();
    swift_release();
    sub_9EAD4(v227, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v228 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  }
  uint64_t v229 = swift_getKeyPath();
  uint64_t v230 = v225;
  uint64_t v231 = v225;
  uint64_t v232 = v384;
  sub_B678(v230, v384, &qword_2EDEB8);
  v233 = (uint64_t *)(v232 + *(int *)(v360 + 36));
  uint64_t *v233 = v229;
  v233[1] = v228;
  sub_B6DC(v231, &qword_2EDEB8);
  uint64_t v234 = v338;
  if (*(unsigned char *)(a1 + v126) == 1) {
    sub_41340(v338);
  }
  else {
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v338, enum case for BlendMode.normal(_:), v156);
  }
  uint64_t v235 = (uint64_t)v341;
  uint64_t v236 = (uint64_t)v343;
  v405(&v341[*(int *)(v340 + 36)], v234, v156);
  uint64_t v237 = v384;
  sub_B678(v384, v235, &qword_2EDEC0);
  ((void (*)(uint64_t, uint64_t))v404)(v234, v156);
  sub_B6DC(v237, &qword_2EDEC0);
  char v238 = sub_26B770();
  uint64_t v239 = *(void *)a1;
  uint64_t v240 = v235;
  LOBYTE(v235) = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v235);
  char v241 = sub_40900(v239, v235);
  sub_C374(v239, v235);
  if ((v241 & 1) == 0)
  {
    uint64_t v242 = v375;
    sub_41378(v375);
    uint64_t v243 = v376;
    sub_9EA6C(v242, v376, type metadata accessor for SizeConstants.Environment);
    sub_9EAD4(v242, type metadata accessor for SizeConstants);
    sub_9EAD4(v243, type metadata accessor for SizeConstants.Spacing);
  }
  sub_26A640();
  uint64_t v245 = v244;
  uint64_t v247 = v246;
  uint64_t v249 = v248;
  uint64_t v251 = v250;
  uint64_t v252 = v362;
  sub_B678(v240, v362, &qword_2EDEC8);
  uint64_t v253 = v252 + *(int *)(v363 + 36);
  *(unsigned char *)uint64_t v253 = v238;
  *(void *)(v253 + 8) = v245;
  *(void *)(v253 + 16) = v247;
  *(void *)(v253 + 24) = v249;
  *(void *)(v253 + 32) = v251;
  *(unsigned char *)(v253 + 40) = 0;
  sub_B6DC(v240, &qword_2EDEC8);
  sub_19CC4(v252, v398, &qword_2EDED0);
  uint64_t v254 = v365;
  sub_B678(a1 + *(int *)(v409 + 72), v365, &qword_2EDCA8);
  uint64_t v255 = (uint64_t)v394;
  sub_9EA6C(a1, (uint64_t)v394, type metadata accessor for TopLockupMetadataView);
  uint64_t v256 = swift_allocObject();
  sub_9E1EC(v255, v256 + v393);
  uint64_t v257 = v254;
  uint64_t v258 = v366;
  sub_19CC4(v257, v366, &qword_2EDCA8);
  uint64_t v259 = swift_allocObject();
  *(void *)(v259 + 16) = sub_9EB38;
  *(void *)(v259 + 24) = v256;
  uint64_t v260 = (uint64_t (**)(uint64_t))(v258 + *(int *)(v367 + 28));
  *uint64_t v260 = sub_9EB50;
  v260[1] = (uint64_t (*)(uint64_t))v259;
  sub_19CC4(v258, v236, &qword_2EDE88);
  uint64_t v261 = (uint64_t)v408;
  sub_4204C((uint64_t)v408);
  uint64_t v262 = sub_934B8();
  sub_9EAD4(v261, type metadata accessor for FontConstants);
  uint64_t v263 = swift_getKeyPath();
  uint64_t v264 = v388;
  sub_B678(v236, v388, &qword_2EDE88);
  v265 = (uint64_t *)(v264 + *(int *)(v368 + 36));
  uint64_t *v265 = v263;
  v265[1] = v262;
  sub_B6DC(v236, &qword_2EDE88);
  if (*(unsigned char *)(a1 + v126) == 1)
  {
    uint64_t v266 = v400;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v400);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v267 = sub_26C1C0();
    swift_release();
    sub_9EAD4(v266, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v267 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  }
  uint64_t v268 = (uint64_t)v345;
  uint64_t v269 = v389;
  uint64_t v270 = (uint64_t)v347;
  uint64_t v271 = swift_getKeyPath();
  uint64_t v272 = v388;
  sub_B678(v388, v268, &qword_2EDE90);
  long long v273 = (uint64_t *)(v268 + *(int *)(v370 + 36));
  *long long v273 = v271;
  v273[1] = v267;
  sub_B6DC(v272, &qword_2EDE90);
  uint64_t v274 = v342;
  if (*(unsigned char *)(a1 + v126) == 1) {
    sub_41340(v342);
  }
  else {
    (*(void (**)(uint64_t, void, uint64_t))(v399 + 104))(v342, enum case for BlendMode.normal(_:), v269);
  }
  uint64_t v275 = v346;
  uint64_t v276 = v377;
  v405(v270 + *(int *)(v344 + 36), v274, v269);
  sub_B678(v268, v270, &qword_2EDE98);
  ((void (*)(uint64_t, uint64_t))v404)(v274, v269);
  sub_B6DC(v268, &qword_2EDE98);
  char v277 = sub_26B770();
  uint64_t v278 = *(void *)a1;
  char v279 = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v279);
  char v280 = sub_40900(v278, v279);
  sub_C374(v278, v279);
  if (v280)
  {
    uint64_t v281 = v375;
    sub_41378(v375);
    uint64_t v282 = v376;
    sub_9EA6C(v281, v376, type metadata accessor for SizeConstants.Environment);
    sub_9EAD4(v281, type metadata accessor for SizeConstants);
    sub_9EAD4(v282, type metadata accessor for SizeConstants.Spacing);
  }
  sub_26A640();
  uint64_t v284 = v283;
  uint64_t v286 = v285;
  uint64_t v288 = v287;
  uint64_t v290 = v289;
  uint64_t v291 = v371;
  sub_B678(v270, v371, &qword_2EDEA0);
  uint64_t v292 = v291 + *(int *)(v275 + 36);
  *(unsigned char *)uint64_t v292 = v277;
  *(void *)(v292 + 8) = v284;
  *(void *)(v292 + 16) = v286;
  *(void *)(v292 + 24) = v288;
  *(void *)(v292 + 32) = v290;
  *(unsigned char *)(v292 + 40) = 0;
  sub_B6DC(v270, &qword_2EDEA0);
  sub_19CC4(v291, v276, &qword_2EDEA8);
  uint64_t v293 = (uint64_t *)(a1 + *(int *)(v409 + 40));
  uint64_t v295 = *v293;
  uint64_t v294 = v293[1];
  uint64_t v410 = v295;
  uint64_t v411 = v294;
  sub_4A98(&qword_2EDEF8);
  sub_26C350();
  uint64_t v296 = v412;
  swift_getKeyPath();
  uint64_t v410 = v296;
  sub_A00C4((unint64_t *)&qword_2EDF00, (void (*)(uint64_t))type metadata accessor for HighlightAttributionViewLoader);
  sub_269A10();
  swift_release();
  long long v297 = *(void **)(v296 + 16);
  long long v298 = v297;
  swift_release();
  uint64_t v407 = (uint64_t)v297;
  v408 = v298;
  if (v297)
  {
    uint64_t v299 = *(void *)a1;
    char v300 = *(unsigned char *)(a1 + 8);
    sub_10E0C(*(void *)a1, v300);
    char v301 = sub_40900(v299, v300);
    sub_C374(v299, v300);
    if (v301) {
      uint64_t v302 = 2;
    }
    else {
      uint64_t v302 = 1;
    }
    uint64_t v303 = v298;
    unsigned __int8 v304 = sub_26B770();
    sub_10E0C(v299, v300);
    char v305 = sub_40900(v299, v300);
    sub_C374(v299, v300);
    if (v305)
    {
      uint64_t v306 = v375;
      sub_41378(v375);
      uint64_t v307 = v376;
      sub_9EA6C(v306, v376, type metadata accessor for SizeConstants.Environment);
      sub_9EAD4(v306, type metadata accessor for SizeConstants);
      sub_9EAD4(v307, type metadata accessor for SizeConstants.Spacing);
    }
    sub_26A640();
    uint64_t v309 = v308;
    uint64_t v311 = v310;
    uint64_t v313 = v312;
    uint64_t v315 = v314;

    uint64_t v409 = v304;
    v406 = (char *)v302;
  }
  else
  {
    v406 = 0;
    uint64_t v409 = 0;
    uint64_t v309 = 0;
    uint64_t v311 = 0;
    uint64_t v313 = 0;
    uint64_t v315 = 0;
  }
  uint64_t v316 = v386;
  sub_B678(v395, v386, &qword_2EDEF0);
  uint64_t v317 = v387;
  sub_B678(v396, v387, &qword_2EDEE8);
  uint64_t v318 = v369;
  sub_B678(v397, v369, &qword_2EDEE8);
  uint64_t v319 = v385;
  uint64_t v320 = v364;
  sub_B678(v385, v364, &qword_2EDEF0);
  uint64_t v321 = v372;
  sub_B678(v398, v372, &qword_2EDED0);
  uint64_t v322 = v276;
  uint64_t v323 = v373;
  sub_B678(v322, v373, &qword_2EDEA8);
  uint64_t v324 = v374;
  sub_B678(v316, v374, &qword_2EDEF0);
  uint64_t v325 = (int *)sub_4A98(&qword_2EDF08);
  sub_B678(v317, v324 + v325[12], &qword_2EDEE8);
  sub_B678(v318, v324 + v325[16], &qword_2EDEE8);
  sub_B678(v320, v324 + v325[20], &qword_2EDEF0);
  sub_B678(v321, v324 + v325[24], &qword_2EDED0);
  sub_B678(v323, v324 + v325[28], &qword_2EDEA8);
  uint64_t v326 = v324 + v325[32];
  uint64_t v327 = v406;
  *(void *)uint64_t v326 = v407;
  *(void *)(v326 + 8) = v327;
  *(void *)(v326 + 16) = v409;
  *(void *)(v326 + 24) = v309;
  *(void *)(v326 + 32) = v311;
  *(void *)(v326 + 40) = v313;
  *(void *)(v326 + 48) = v315;
  *(unsigned char *)(v326 + 56) = 0;
  long long v328 = v408;
  sub_B6DC(v377, &qword_2EDEA8);
  sub_B6DC(v398, &qword_2EDED0);
  sub_B6DC(v319, &qword_2EDEF0);
  sub_B6DC(v397, &qword_2EDEE8);
  sub_B6DC(v396, &qword_2EDEE8);
  sub_B6DC(v395, &qword_2EDEF0);

  sub_B6DC(v323, &qword_2EDEA8);
  sub_B6DC(v321, &qword_2EDED0);
  sub_B6DC(v320, &qword_2EDEF0);
  sub_B6DC(v318, &qword_2EDEE8);
  sub_B6DC(v387, &qword_2EDEE8);
  return sub_B6DC(v386, &qword_2EDEF0);
}

uint64_t sub_915A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v29 = a3;
  uint64_t v4 = sub_26B310();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TopLockupMetadataView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = sub_4A98(&qword_2EE108);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EE100);
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_9EA6C(a2, (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TopLockupMetadataView);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  sub_9E1EC((uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  uint64_t v30 = a2;
  uint64_t v31 = v25;
  sub_4A98(&qword_2EE118);
  sub_9FEDC();
  sub_26C3A0();
  uint64_t v19 = sub_7C18(&qword_2EE110, &qword_2EE108);
  unint64_t v20 = sub_9FC20();
  sub_26BC80();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_26AD30();
  uint64_t v32 = v11;
  uint64_t v33 = &type metadata for PressedButtonStyle;
  uint64_t v34 = v19;
  unint64_t v35 = v20;
  swift_getOpaqueTypeConformance2();
  sub_A00C4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v22 = v26;
  uint64_t v21 = v27;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v22);
}

uint64_t sub_919B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2EE130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_26B1C0();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = sub_4A98(&qword_2EE138);
  sub_91A9C(a1, a2, (uint64_t)&v8[*(int *)(v9 + 44)]);
  sub_B678((uint64_t)v8, a3, &qword_2EE130);
  *(_WORD *)(a3 + *(int *)(sub_4A98(&qword_2EE118) + 36)) = 1;
  return sub_B6DC((uint64_t)v8, &qword_2EE130);
}

uint64_t sub_91A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v58 = a1;
  uint64_t v66 = a3;
  uint64_t v3 = sub_4A98(&qword_2EDFF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26B980();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v17;
  uint64_t v59 = sub_4A98(&qword_2EDFE0);
  __chkstk_darwin(v59);
  uint64_t v62 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_4A98(&qword_2EE140);
  uint64_t v19 = __chkstk_darwin(v61);
  uint64_t v65 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v55 - v22;
  __chkstk_darwin(v21);
  uint64_t v64 = (uint64_t)&v55 - v23;
  uint64_t v24 = type metadata accessor for TopLockupMetadataView(0);
  sub_4204C((uint64_t)v17);
  uint64_t v25 = v11;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Font.TextStyle.caption(_:), v11);
  uint64_t v26 = enum case for Font.Design.rounded(_:);
  uint64_t v27 = sub_26B820();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v10, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
  sub_26B8B0();
  uint64_t v29 = sub_26B8E0();
  sub_B6DC((uint64_t)v10, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  uint64_t v30 = v58;
  sub_9EAD4((uint64_t)v57, type metadata accessor for FontConstants);
  if (*(unsigned char *)(v30 + *(int *)(v24 + 76)) == 1)
  {
    uint64_t v31 = v56;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v56);
    uint64_t v32 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4(v31, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v32 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  *(void *)uint64_t v5 = sub_26B1C0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v33 = sub_4A98(&qword_2EE000);
  sub_9644C(0, v63, v29, v32, v30, (uint64_t)&v5[*(int *)(v33 + 44)]);
  uint64_t v34 = v62;
  sub_B678((uint64_t)v5, v62, &qword_2EDFF8);
  *(_WORD *)(v34 + *(int *)(v59 + 36)) = 256;
  sub_B6DC((uint64_t)v5, &qword_2EDFF8);
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v60;
  sub_B678(v34, v60, &qword_2EDFE0);
  uint64_t v37 = v36 + *(int *)(v61 + 36);
  *(void *)uint64_t v37 = KeyPath;
  *(void *)(v37 + 8) = 1;
  *(unsigned char *)(v37 + 16) = 0;
  sub_B6DC(v34, &qword_2EDFE0);
  uint64_t v38 = v36;
  uint64_t v39 = v64;
  sub_19CC4(v38, v64, &qword_2EE140);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v96 = v91;
  char v97 = v92;
  uint64_t v98 = v93;
  char v99 = v94;
  long long v100 = v95;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B0294(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v67, 0.0, 1, 0.0, 1);
  uint64_t v40 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = v65;
  sub_B678(v39, v65, &qword_2EE140);
  uint64_t v43 = v66;
  sub_B678(v42, v66, &qword_2EE140);
  uint64_t v44 = (_OWORD *)(v43 + *(int *)(sub_4A98(&qword_2EE148) + 48));
  long long v83 = v73;
  long long v84 = v74;
  long long v85 = v75;
  long long v86 = v76;
  long long v81 = v71;
  long long v82 = v72;
  long long v45 = v69;
  long long v79 = v69;
  long long v80 = v70;
  long long v77 = v67;
  long long v78 = v68;
  *(void *)&long long v87 = v41;
  *((void *)&v87 + 1) = v40;
  long long v46 = v74;
  long long v47 = v76;
  long long v48 = v87;
  v44[8] = v75;
  v44[9] = v47;
  long long v49 = v80;
  long long v50 = v81;
  void v44[2] = v45;
  v44[3] = v49;
  long long v51 = v82;
  long long v52 = v83;
  v44[4] = v50;
  v44[5] = v51;
  v44[6] = v52;
  v44[7] = v46;
  long long v53 = v78;
  *uint64_t v44 = v77;
  v44[1] = v53;
  v44[10] = v48;
  sub_9FF7C((uint64_t)&v77);
  sub_B6DC(v39, &qword_2EE140);
  v88[6] = v73;
  v88[7] = v74;
  v88[8] = v75;
  v88[9] = v76;
  v88[2] = v69;
  v88[3] = v70;
  v88[4] = v71;
  v88[5] = v72;
  v88[0] = v67;
  v88[1] = v68;
  uint64_t v89 = v41;
  uint64_t v90 = v40;
  sub_9FFB0((uint64_t)v88);
  return sub_B6DC(v42, &qword_2EE140);
}

uint64_t sub_92184(unsigned int *a1, unsigned int *a2, void (*a3)(uint64_t))
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26B980();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (unsigned __int8 *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = *(unsigned __int8 *)(v7 + 1);
  sub_9EA6C(v7, (uint64_t)v17, type metadata accessor for FontConstants);
  if (v18 == 1)
  {
    sub_9EAD4((uint64_t)v17, type metadata accessor for FontConstants);
    uint64_t v19 = *a1;
  }
  else
  {
    int v20 = *v17;
    sub_9EAD4((uint64_t)v17, type metadata accessor for FontConstants);
    if (v20 == 1) {
      uint64_t v19 = *a1;
    }
    else {
      uint64_t v19 = *a2;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v14, v19, v11);
  uint64_t v21 = enum case for Font.Design.serif (_:);
  uint64_t v22 = sub_26B820();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v10, v21, v22);
  uint64_t v24 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v22);
  a3(v24);
  uint64_t v25 = sub_26B8E0();
  sub_B6DC((uint64_t)v10, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v25;
}

uint64_t sub_92448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v115 = a1;
  uint64_t v126 = a3;
  uint64_t v128 = sub_4A98(&qword_2EE0E0);
  uint64_t v114 = *(void *)(v128 - 8);
  uint64_t v4 = __chkstk_darwin(v128);
  uint64_t v112 = (char *)v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v113 = (char *)v98 - v6;
  uint64_t v124 = sub_4A98(&qword_2EE0E8);
  __chkstk_darwin(v124);
  uint64_t v125 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26CF30();
  uint64_t v120 = *(void *)(v8 - 8);
  uint64_t v121 = v8;
  __chkstk_darwin(v8);
  uint64_t v118 = (char *)v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_26B310();
  uint64_t v110 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v108 = (char *)v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_269BA0();
  __chkstk_darwin(v11 - 8);
  long long v100 = (char *)v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v13 - 8);
  uint64_t v111 = (uint64_t)v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_4A98(&qword_2EE0C8);
  __chkstk_darwin(v116);
  uint64_t v101 = (char *)v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2EE0C0);
  uint64_t v104 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v102 = (char *)v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2EE0B8);
  uint64_t v106 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v105 = (char *)v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_4A98(&qword_2EE0F0);
  uint64_t v109 = *(void *)(v123 - 8);
  uint64_t v18 = __chkstk_darwin(v123);
  uint64_t v103 = (char *)v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v107 = (char *)v98 - v20;
  uint64_t v21 = sub_4A98(&qword_2EDFF8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (int *)type metadata accessor for TopLockupMetadataView(0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_4A98(&qword_2EDFE0);
  v98[0] = *(void *)(v129 - 8);
  uint64_t v33 = __chkstk_darwin(v129);
  uint64_t v99 = (uint64_t)v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98[1] = v34;
  __chkstk_darwin(v33);
  uint64_t v127 = (uint64_t)v98 - v35;
  uint64_t v36 = a2 + v30[15];
  sub_B678(v36, (uint64_t)&v134, &qword_2EA838);
  uint64_t v37 = v137;
  sub_B6DC((uint64_t)&v134, &qword_2EA838);
  uint64_t v38 = a2;
  sub_9EA6C(a2, (uint64_t)v32, type metadata accessor for TopLockupMetadataView);
  if (v37)
  {
    uint64_t v39 = &v32[v30[9]];
    uint64_t v40 = *(void *)v39;
    char v41 = v39[8];
    sub_10E0C(*(void *)v39, v41);
    char v42 = sub_40900(v40, v41);
    sub_C374(v40, v41);
    sub_9EAD4((uint64_t)v32, type metadata accessor for TopLockupMetadataView);
    if (v42)
    {
      unsigned __int8 v43 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_9EAD4((uint64_t)v32, type metadata accessor for TopLockupMetadataView);
  }
  unsigned __int8 v43 = 2;
LABEL_6:
  uint64_t v44 = v38;
  sub_4204C((uint64_t)v29);
  uint64_t v45 = sub_934B8();
  sub_9EAD4((uint64_t)v29, type metadata accessor for FontConstants);
  if (*(unsigned char *)(v38 + v30[19]) == 1)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v26);
    uint64_t v46 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_9EAD4((uint64_t)v26, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v46 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  }
  uint64_t v47 = v127;
  uint64_t v48 = v128;
  uint64_t v49 = v115;
  *(void *)uint64_t v23 = sub_26B1C0();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v50 = sub_4A98(&qword_2EE000);
  sub_9644C(v43, v49, v45, v46, v44, (uint64_t)&v23[*(int *)(v50 + 44)]);
  sub_B678((uint64_t)v23, v47, &qword_2EDFF8);
  uint64_t v51 = v129;
  *(_WORD *)(v47 + *(int *)(v129 + 36)) = 256;
  sub_B6DC((uint64_t)v23, &qword_2EDFF8);
  swift_release();
  swift_release();
  sub_B678(v36, (uint64_t)&v130, &qword_2EA838);
  if (v132)
  {
    sub_AD44(&v130, (uint64_t)&v134);
    uint64_t v52 = v44 + v30[9];
    uint64_t v53 = *(void *)v52;
    char v54 = *(unsigned char *)(v52 + 8);
    sub_10E0C(*(void *)v52, v54);
    char v55 = sub_40900(v53, v54);
    sub_C374(v53, v54);
    if (v55)
    {
      uint64_t v56 = sub_26A630();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v111, 1, 1, v56);
      uint64_t v57 = v137;
      uint64_t v58 = v138;
      uint64_t v59 = sub_4ADC(&v134, v137);
      unint64_t v132 = v57;
      uint64_t v133 = *(void *)(v58 + 8);
      uint64_t v60 = sub_CA1C((uint64_t *)&v130);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(v60, v59, v57);
      uint64_t v61 = v99;
      sub_B678(v47, v99, &qword_2EDFE0);
      unint64_t v62 = (*(unsigned __int8 *)(v98[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v98[0] + 80);
      uint64_t v63 = swift_allocObject();
      sub_19CC4(v61, v63 + v62, &qword_2EDFE0);
      sub_269B80();
      uint64_t v64 = (uint64_t)v101;
      sub_269AB0();
      uint64_t v65 = (int *)v116;
      uint64_t v66 = v64 + *(int *)(v116 + 36);
      *(void *)uint64_t v66 = swift_getKeyPath();
      *(unsigned char *)(v66 + 8) = 0;
      long long v67 = (uint64_t *)(v64 + v65[10]);
      *long long v67 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v64 + v65[11];
      *(void *)uint64_t v68 = swift_getKeyPath();
      *(unsigned char *)(v68 + 40) = 0;
      sub_19CC4(v111, v64 + v65[12], qword_2EA3E0);
      sub_19CC4((uint64_t)&v130, v64 + v65[13], &qword_2EA818);
      long long v69 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v64 + v65[14]);
      *long long v69 = sub_9FE38;
      v69[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v63;
      uint64_t v70 = sub_7C18(&qword_2EE0D0, &qword_2EE0C8);
      unint64_t v71 = sub_9FC20();
      long long v72 = v102;
      sub_26BC80();
      sub_B6DC(v64, &qword_2EE0C8);
      long long v73 = v108;
      sub_26AD30();
      *(void *)&long long v130 = v65;
      *((void *)&v130 + 1) = &type metadata for PressedButtonStyle;
      uint64_t v131 = v70;
      unint64_t v132 = v71;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v75 = sub_A00C4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
      long long v76 = v105;
      uint64_t v77 = v117;
      uint64_t v78 = v122;
      sub_26BCC0();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v73, v78);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v72, v77);
      long long v79 = v118;
      sub_26CF20();
      *(void *)&long long v130 = v77;
      *((void *)&v130 + 1) = v78;
      uint64_t v131 = OpaqueTypeConformance2;
      unint64_t v132 = v75;
      uint64_t v80 = swift_getOpaqueTypeConformance2();
      long long v81 = v103;
      uint64_t v82 = v119;
      sub_26BB20();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v79, v121);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v76, v82);
      uint64_t v83 = v109;
      long long v84 = v107;
      uint64_t v85 = v123;
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v107, v81, v123);
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v125, v84, v85);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v130 = v82;
      *((void *)&v130 + 1) = v80;
      swift_getOpaqueTypeConformance2();
      unint64_t v86 = sub_9EC90();
      *(void *)&long long v130 = v129;
      *((void *)&v130 + 1) = v86;
      swift_getOpaqueTypeConformance2();
      sub_26B2F0();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
      sub_B6DC(v127, &qword_2EDFE0);
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v134);
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v134);
  }
  else
  {
    sub_B6DC((uint64_t)&v130, &qword_2EA838);
  }
  uint64_t v88 = v118;
  sub_26CF20();
  unint64_t v89 = sub_9EC90();
  uint64_t v90 = v112;
  sub_26BB20();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v88, v121);
  uint64_t v91 = v114;
  char v92 = v113;
  (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v90, v48);
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v125, v92, v48);
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = sub_7C18(&qword_2EE0D0, &qword_2EE0C8);
  unint64_t v94 = sub_9FC20();
  uint64_t v134 = v116;
  uint64_t v135 = &type metadata for PressedButtonStyle;
  uint64_t v136 = v93;
  uint64_t v137 = v94;
  uint64_t v95 = swift_getOpaqueTypeConformance2();
  uint64_t v96 = sub_A00C4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v134 = v117;
  uint64_t v135 = (ValueMetadata *)v122;
  uint64_t v136 = v95;
  uint64_t v137 = v96;
  uint64_t v97 = swift_getOpaqueTypeConformance2();
  uint64_t v134 = v119;
  uint64_t v135 = (ValueMetadata *)v97;
  swift_getOpaqueTypeConformance2();
  uint64_t v134 = v51;
  uint64_t v135 = (ValueMetadata *)v89;
  swift_getOpaqueTypeConformance2();
  sub_26B2F0();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v48);
  return sub_B6DC(v47, &qword_2EDFE0);
}

uint64_t sub_934B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26B980();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (unsigned __int8 *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 1);
  sub_9EA6C(v1, (uint64_t)v11, type metadata accessor for FontConstants);
  if (v12 == 1)
  {
    sub_9EAD4((uint64_t)v11, type metadata accessor for FontConstants);
    uint64_t v13 = (unsigned int *)&enum case for Font.TextStyle.subheadline(_:);
  }
  else
  {
    int v14 = *v11;
    sub_9EAD4((uint64_t)v11, type metadata accessor for FontConstants);
    uint64_t v13 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
    if (v14) {
      uint64_t v13 = (unsigned int *)&enum case for Font.TextStyle.subheadline(_:);
    }
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v13, v5);
  uint64_t v15 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_26B890();
  uint64_t v16 = sub_26B8E0();
  sub_B6DC((uint64_t)v4, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_9372C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v5 = sub_4A98(&qword_2EDFF8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EDCD0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2EDFE0);
  __chkstk_darwin(v31);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(int *)(v15 + 56);
  uint64_t v21 = sub_26A220();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v17, a1, v21);
  uint64_t v32 = a1;
  int v23 = *(unsigned __int8 *)(a1 + v20);
  v17[v20] = v23;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v21);
  uint64_t v24 = type metadata accessor for TopLockupMetadataView(0);
  sub_4204C((uint64_t)v13);
  uint64_t v25 = sub_934B8();
  sub_9EAD4((uint64_t)v13, type metadata accessor for FontConstants);
  if (*(unsigned char *)(a2 + *(int *)(v24 + 76)) == 1)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v10);
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v26 = sub_26C1C0();
    swift_release();
    sub_9EAD4((uint64_t)v10, type metadata accessor for ColorConstants);
  }
  else
  {
    uint64_t v26 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  }
  *(void *)uint64_t v7 = sub_26B1C0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v27 = (uint64_t)&v7[*(int *)(sub_4A98(&qword_2EE000) + 44)];
  if (v23) {
    unsigned __int8 v28 = 1;
  }
  else {
    unsigned __int8 v28 = 2;
  }
  sub_9644C(v28, v32, v25, v26, a2, v27);
  sub_B678((uint64_t)v7, (uint64_t)v19, &qword_2EDFF8);
  *(_WORD *)&v19[*(int *)(v31 + 36)] = 256;
  sub_B6DC((uint64_t)v7, &qword_2EDFF8);
  swift_release();
  swift_release();
  return sub_19CC4((uint64_t)v19, v33, &qword_2EDFE0);
}

uint64_t sub_93AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v31 = a3;
  uint64_t v29 = sub_26B600();
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EDF20);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_4A98(&qword_2EDF30);
  uint64_t v9 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4A98(&qword_2EDF10);
  __chkstk_darwin(v28);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v14 = sub_26B720();
  unsigned __int8 v15 = sub_26B740();
  char v16 = sub_26B730();
  sub_26B730();
  if (sub_26B730() != v14) {
    char v16 = sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v15) {
    char v16 = sub_26B730();
  }
  unsigned char *v8 = v16;
  uint64_t v17 = sub_4A98(&qword_2EDF38);
  sub_93E34(a2, v27, (uint64_t)&v8[*(int *)(v17 + 44)]);
  sub_26B5E0();
  sub_7C18(&qword_2EDF28, &qword_2EDF20);
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
  sub_B6DC((uint64_t)v8, &qword_2EDF20);
  uint64_t v18 = *(void *)a2;
  char v19 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v19);
  char v20 = sub_40900(v18, v19);
  sub_C374(v18, v19);
  char v21 = v20 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v30;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v30);
  uint64_t v24 = &v13[*(int *)(v28 + 36)];
  *(void *)uint64_t v24 = KeyPath;
  v24[8] = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  return sub_19CC4((uint64_t)v13, v31, &qword_2EDF10);
}

uint64_t sub_93E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v67 = a3;
  uint64_t v4 = sub_4A98(&qword_2EDF40);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v68 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v62 = (uint64_t *)((char *)&v59 - v8);
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v59 - v9;
  uint64_t v10 = sub_4A98(&qword_2EDF48);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_4A98(&qword_2EDF50);
  uint64_t v13 = __chkstk_darwin(v61);
  uint64_t v65 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v59 - v16;
  __chkstk_darwin(v15);
  uint64_t v64 = (uint64_t)&v59 - v18;
  uint64_t v19 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v19 - 8);
  char v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EDF58);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4A98(&qword_2EDF60);
  uint64_t v29 = v28 - 8;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v63 = (uint64_t)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v59 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v59 - v35;
  type metadata accessor for TopLockupMetadataView(0);
  sub_41378((uint64_t)v24);
  sub_9EA6C((uint64_t)v24, (uint64_t)v21, type metadata accessor for SizeConstants.Environment);
  sub_9EAD4((uint64_t)v24, type metadata accessor for SizeConstants);
  uint64_t v37 = (uint64_t)v21;
  uint64_t v38 = v60;
  sub_9EAD4(v37, type metadata accessor for SizeConstants.Spacing);
  *(void *)uint64_t v27 = sub_26B120();
  *((void *)v27 + 1) = 0x4010000000000000;
  v27[16] = 0;
  uint64_t v39 = sub_4A98(&qword_2EDF68);
  sub_94468(v38, &v27[*(int *)(v39 + 44)]);
  sub_B678((uint64_t)v27, (uint64_t)v34, &qword_2EDF58);
  *(_WORD *)&v34[*(int *)(v29 + 44)] = 1;
  sub_B6DC((uint64_t)v27, &qword_2EDF58);
  uint64_t v40 = (uint64_t)v36;
  sub_19CC4((uint64_t)v34, (uint64_t)v36, &qword_2EDF60);
  uint64_t v41 = *(void *)a1;
  LOBYTE(v24) = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, (char)v24);
  LOBYTE(v29) = sub_40900(v41, (char)v24);
  sub_C374(v41, (char)v24);
  if (v29) {
    uint64_t v42 = sub_26B1C0();
  }
  else {
    uint64_t v42 = sub_26B1D0();
  }
  *(void *)uint64_t v12 = v42;
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v43 = sub_4A98(&qword_2EDF70);
  sub_950E4(v38, (uint64_t)&v12[*(int *)(v43 + 44)]);
  sub_B678((uint64_t)v12, (uint64_t)v17, &qword_2EDF48);
  *(_WORD *)&v17[*(int *)(v61 + 36)] = 1;
  sub_B6DC((uint64_t)v12, &qword_2EDF48);
  uint64_t v44 = v64;
  sub_19CC4((uint64_t)v17, v64, &qword_2EDF50);
  uint64_t v45 = *(void *)a1;
  char v46 = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v46);
  char v47 = sub_40900(v45, v46);
  sub_C374(v45, v46);
  if (v47) {
    uint64_t v48 = sub_26B1C0();
  }
  else {
    uint64_t v48 = sub_26B1D0();
  }
  uint64_t v49 = (uint64_t)v62;
  *unint64_t v62 = v48;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 1;
  uint64_t v50 = sub_4A98(&qword_2EDF78);
  sub_95E04(v38, (char *)(v49 + *(int *)(v50 + 44)));
  uint64_t v51 = v66;
  sub_19CC4(v49, v66, &qword_2EDF40);
  uint64_t v52 = v40;
  uint64_t v53 = v63;
  sub_B678(v40, v63, &qword_2EDF60);
  uint64_t v54 = v65;
  sub_B678(v44, v65, &qword_2EDF50);
  uint64_t v55 = v68;
  sub_B678(v51, v68, &qword_2EDF40);
  uint64_t v56 = v67;
  sub_B678(v53, v67, &qword_2EDF60);
  uint64_t v57 = sub_4A98(&qword_2EDF80);
  sub_B678(v54, v56 + *(int *)(v57 + 48), &qword_2EDF50);
  sub_B678(v55, v56 + *(int *)(v57 + 64), &qword_2EDF40);
  sub_B6DC(v51, &qword_2EDF40);
  sub_B6DC(v44, &qword_2EDF50);
  sub_B6DC(v52, &qword_2EDF60);
  sub_B6DC(v55, &qword_2EDF40);
  sub_B6DC(v54, &qword_2EDF50);
  return sub_B6DC(v53, &qword_2EDF60);
}

uint64_t sub_94468@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = sub_4A98(&qword_2EDFB0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v118 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v124 = (uint64_t)&v104 - v6;
  uint64_t v7 = sub_4A98(&qword_2EA0C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v110 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v115 = (char *)&v104 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v104 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v104 - v15;
  uint64_t v17 = sub_4A98(&qword_2EDFB8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v120 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v119 = (uint64_t)&v104 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v104 - v23;
  __chkstk_darwin(v22);
  uint64_t v128 = (uint64_t)&v104 - v24;
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v111 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v104 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v108 = (char *)&v104 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v122 = (char *)&v104 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v104 - v36;
  uint64_t v123 = sub_26A160();
  uint64_t v127 = *(void *)(v123 - 8);
  uint64_t v38 = __chkstk_darwin(v123);
  uint64_t v109 = (char *)&v104 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v125 = (char *)&v104 - v41;
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v104 - v42;
  uint64_t v112 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v113 = v26 + 16;
  v112(v37, a1, v25);
  uint64_t v117 = v43;
  sub_26A170();
  uint64_t v44 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
  sub_B678(a1 + v44[5], (uint64_t)v16, &qword_2EA0C0);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v46 = v45(v16, 1, v25);
  uint64_t v114 = v31;
  uint64_t v116 = v26;
  if (v46 == 1)
  {
    uint64_t v14 = v16;
    uint64_t v47 = a1;
    uint64_t v48 = v115;
LABEL_5:
    sub_B6DC((uint64_t)v14, &qword_2EA0C0);
    uint64_t v52 = sub_4A98(&qword_2EDFC0);
    uint64_t v53 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v128, 1, 1, v52);
    goto LABEL_7;
  }
  uint64_t v49 = v26;
  uint64_t v50 = v44;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v51(v122, v16, v25);
  uint64_t v107 = v50;
  sub_B678(a1 + v50[7], (uint64_t)v14, &qword_2EA0C0);
  uint64_t v47 = a1;
  if (v45(v14, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v122, v25);
    uint64_t v48 = v115;
    uint64_t v44 = v107;
    goto LABEL_5;
  }
  uint64_t v54 = v108;
  v51(v108, v14, v25);
  uint64_t v55 = (void (*)(char *, char *, uint64_t))v112;
  v112(v37, (uint64_t)v54, v25);
  uint64_t v56 = v125;
  sub_26A170();
  sub_A00C4((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
  uint64_t v57 = v118;
  uint64_t v105 = v45;
  uint64_t v58 = v123;
  sub_26BE90();
  uint64_t v59 = v127;
  uint64_t v106 = v47;
  uint64_t v104 = *(void (**)(char *, uint64_t))(v127 + 8);
  v104(v56, v58);
  sub_19CC4(v57, v124, &qword_2EDFB0);
  v55(v37, v122, v25);
  sub_26A170();
  uint64_t v60 = v57;
  sub_B678(v124, v57, &qword_2EDFB0);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  unint64_t v62 = v109;
  v61(v109, v56, v58);
  uint64_t v63 = v60;
  uint64_t v64 = v126;
  sub_B678(v63, v126, &qword_2EDFB0);
  uint64_t v65 = sub_4A98(&qword_2EDFD0);
  v61((char *)(v64 + *(int *)(v65 + 48)), v62, v58);
  uint64_t v66 = v56;
  uint64_t v67 = v104;
  v104(v66, v58);
  sub_B6DC(v124, &qword_2EDFB0);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v116 + 8);
  v68(v108, v25);
  v68(v122, v25);
  uint64_t v69 = v58;
  uint64_t v45 = v105;
  v67(v62, v69);
  uint64_t v47 = v106;
  sub_B6DC(v118, &qword_2EDFB0);
  uint64_t v70 = sub_4A98(&qword_2EDFC0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v64, 0, 1, v70);
  uint64_t v71 = v64;
  uint64_t v53 = v128;
  sub_19CC4(v71, v128, &qword_2EDFB8);
  uint64_t v48 = v115;
  uint64_t v44 = v107;
LABEL_7:
  sub_B678(v47 + v44[6], (uint64_t)v48, &qword_2EA0C0);
  if (v45(v48, 1, v25) == 1)
  {
    uint64_t v72 = v123;
    uint64_t v73 = v127;
  }
  else
  {
    uint64_t v122 = v37;
    uint64_t v74 = v116;
    uint64_t v75 = *(void (**)(char *, void (*)(void, void), uint64_t))(v116 + 32);
    long long v76 = v114;
    v75(v114, (void (*)(void, void))v48, v25);
    uint64_t v48 = v110;
    sub_B678(v47 + v44[7], (uint64_t)v110, &qword_2EA0C0);
    if (v45(v48, 1, v25) != 1)
    {
      uint64_t v80 = v111;
      v75(v111, (void (*)(void, void))v48, v25);
      long long v81 = v122;
      v112(v122, (uint64_t)v80, v25);
      uint64_t v82 = v125;
      sub_26A170();
      sub_A00C4((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
      uint64_t v83 = v118;
      uint64_t v84 = v123;
      sub_26BE90();
      uint64_t v85 = v124;
      uint64_t v86 = v127;
      uint64_t v110 = *(char **)(v127 + 8);
      uint64_t v115 = (char *)(v127 + 8);
      ((void (*)(char *, uint64_t))v110)(v82, v84);
      sub_19CC4(v83, v85, &qword_2EDFB0);
      v112(v81, (uint64_t)v76, v25);
      sub_26A170();
      uint64_t v87 = v83;
      sub_B678(v85, v83, &qword_2EDFB0);
      long long v79 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
      uint64_t v88 = v109;
      v79(v109, v82, v84);
      uint64_t v89 = v87;
      uint64_t v90 = v126;
      sub_B678(v89, v126, &qword_2EDFB0);
      uint64_t v91 = sub_4A98(&qword_2EDFD0);
      v79((char *)(v90 + *(int *)(v91 + 48)), v88, v84);
      char v92 = (void (*)(char *, uint64_t))v110;
      ((void (*)(char *, uint64_t))v110)(v82, v84);
      sub_B6DC(v124, &qword_2EDFB0);
      uint64_t v93 = *(void (**)(char *, uint64_t))(v74 + 8);
      v93(v111, v25);
      v93(v114, v25);
      uint64_t v72 = v84;
      v92(v88, v84);
      uint64_t v53 = v128;
      sub_B6DC(v118, &qword_2EDFB0);
      uint64_t v94 = sub_4A98(&qword_2EDFC0);
      uint64_t v95 = v126;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v126, 0, 1, v94);
      uint64_t v78 = v119;
      sub_19CC4(v95, v119, &qword_2EDFB8);
      goto LABEL_13;
    }
    uint64_t v72 = v123;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v25);
    uint64_t v73 = v127;
    uint64_t v53 = v128;
  }
  sub_B6DC((uint64_t)v48, &qword_2EA0C0);
  uint64_t v77 = sub_4A98(&qword_2EDFC0);
  uint64_t v78 = v119;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v119, 1, 1, v77);
  long long v79 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
LABEL_13:
  uint64_t v96 = v125;
  uint64_t v97 = v117;
  v79(v125, v117, v72);
  uint64_t v98 = v126;
  sub_B678(v53, v126, &qword_2EDFB8);
  uint64_t v99 = v120;
  sub_B678(v78, v120, &qword_2EDFB8);
  long long v100 = v121;
  v79(v121, v96, v72);
  uint64_t v101 = sub_4A98(&qword_2EDFD8);
  sub_B678(v98, (uint64_t)&v100[*(int *)(v101 + 48)], &qword_2EDFB8);
  sub_B678(v99, (uint64_t)&v100[*(int *)(v101 + 64)], &qword_2EDFB8);
  sub_B6DC(v78, &qword_2EDFB8);
  sub_B6DC(v128, &qword_2EDFB8);
  uint64_t v102 = *(void (**)(char *, uint64_t))(v127 + 8);
  v102(v97, v72);
  sub_B6DC(v99, &qword_2EDFB8);
  sub_B6DC(v98, &qword_2EDFB8);
  return ((uint64_t (*)(char *, uint64_t))v102)(v96, v72);
}

uint64_t sub_950E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v54 = a2;
  uint64_t v2 = sub_26A160();
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  __chkstk_darwin(v2);
  uint64_t v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26A220();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v47 - v11;
  uint64_t v12 = sub_4A98(&qword_2EDF88);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2EDF98);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v47 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v47 - v30;
  type metadata accessor for TopLockupMetadataView(0);
  sub_41378((uint64_t)v22);
  sub_9EA6C((uint64_t)v22, (uint64_t)v19, type metadata accessor for SizeConstants.Environment);
  sub_9EAD4((uint64_t)v22, type metadata accessor for SizeConstants);
  sub_9EAD4((uint64_t)v19, type metadata accessor for SizeConstants.Spacing);
  *(void *)uint64_t v29 = sub_26B120();
  *((void *)v29 + 1) = 0x4010000000000000;
  v29[16] = 0;
  uint64_t v32 = sub_4A98(&qword_2EDFA0);
  uint64_t v33 = v50;
  sub_9567C(v50, &v29[*(int *)(v32 + 44)]);
  sub_19CC4((uint64_t)v29, (uint64_t)v31, &qword_2EDF98);
  uint64_t v34 = type metadata accessor for TopLockupMetadataView.Footer(0);
  sub_B678(v33 + *(int *)(v34 + 24), (uint64_t)v6, &qword_2EA0C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_B6DC((uint64_t)v6, &qword_2EA0C0);
    uint64_t v35 = 1;
    uint64_t v37 = v52;
    uint64_t v36 = v53;
  }
  else
  {
    uint64_t v38 = v47;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v47, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v48, v38, v7);
    uint64_t v39 = v49;
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v38, v7);
    uint64_t v40 = v52;
    uint64_t v41 = v39;
    uint64_t v42 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v16, v41, v53);
    uint64_t v35 = 0;
    uint64_t v36 = v42;
    uint64_t v37 = v40;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v16, v35, 1, v36);
  sub_B678((uint64_t)v31, (uint64_t)v26, &qword_2EDF98);
  uint64_t v43 = v51;
  sub_B678((uint64_t)v16, v51, &qword_2EDF88);
  uint64_t v44 = v54;
  sub_B678((uint64_t)v26, v54, &qword_2EDF98);
  uint64_t v45 = sub_4A98(&qword_2EDFA8);
  sub_B678(v43, v44 + *(int *)(v45 + 48), &qword_2EDF88);
  sub_B6DC((uint64_t)v16, &qword_2EDF88);
  sub_B6DC((uint64_t)v31, &qword_2EDF98);
  sub_B6DC(v43, &qword_2EDF88);
  return sub_B6DC((uint64_t)v26, &qword_2EDF98);
}

uint64_t sub_9567C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_4A98(&qword_2EDFB0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v64 = (uint64_t)&v58 - v6;
  uint64_t v7 = sub_4A98(&qword_2EA0C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v61 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = sub_4A98(&qword_2EDFB8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v69 = (uint64_t)&v58 - v16;
  uint64_t v17 = sub_26A220();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v63 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v71 = (char *)&v58 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v58 - v23;
  uint64_t v73 = sub_26A160();
  uint64_t v68 = *(void *)(v73 - 8);
  uint64_t v25 = __chkstk_darwin(v73);
  unint64_t v62 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v72 = (char *)&v58 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v58 - v29;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v60(v24, a1, v17);
  uint64_t v67 = v30;
  sub_26A170();
  uint64_t v31 = type metadata accessor for TopLockupMetadataView.Footer(0);
  sub_B678(a1 + *(int *)(v31 + 20), (uint64_t)v11, &qword_2EA0C0);
  uint64_t v66 = v18;
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v32(v11, 1, v17) != 1)
  {
    uint64_t v59 = v15;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v33(v71, v11, v17);
    uint64_t v11 = v61;
    sub_B678(a1 + *(int *)(v31 + 28), (uint64_t)v61, &qword_2EA0C0);
    if (v32(v11, 1, v17) != 1)
    {
      uint64_t v38 = v63;
      v33(v63, v11, v17);
      uint64_t v39 = (void (*)(char *, char *, uint64_t))v60;
      v60(v24, (uint64_t)v38, v17);
      uint64_t v40 = v72;
      sub_26A170();
      sub_A00C4((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
      uint64_t v41 = v65;
      uint64_t v42 = v73;
      sub_26BE90();
      uint64_t v43 = v68;
      uint64_t v58 = *(void (**)(char *, uint64_t))(v68 + 8);
      uint64_t v61 = (char *)(v68 + 8);
      v58(v40, v42);
      uint64_t v44 = v64;
      sub_19CC4(v41, v64, &qword_2EDFB0);
      v39(v24, v71, v17);
      uint64_t v36 = v43;
      sub_26A170();
      sub_B678(v44, v41, &qword_2EDFB0);
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      uint64_t v45 = v62;
      v37(v62, v40, v42);
      uint64_t v46 = v41;
      uint64_t v15 = v59;
      sub_B678(v46, (uint64_t)v59, &qword_2EDFB0);
      uint64_t v47 = sub_4A98(&qword_2EDFD0);
      v37(&v15[*(int *)(v47 + 48)], v45, v42);
      uint64_t v48 = v58;
      v58(v40, v42);
      sub_B6DC(v64, &qword_2EDFB0);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v66 + 8);
      v49(v63, v17);
      v49(v71, v17);
      v48(v62, v42);
      sub_B6DC(v65, &qword_2EDFB0);
      uint64_t v50 = sub_4A98(&qword_2EDFC0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v15, 0, 1, v50);
      uint64_t v35 = v69;
      sub_19CC4((uint64_t)v15, v69, &qword_2EDFB8);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v17);
    uint64_t v15 = v59;
  }
  sub_B6DC((uint64_t)v11, &qword_2EA0C0);
  uint64_t v34 = sub_4A98(&qword_2EDFC0);
  uint64_t v35 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v69, 1, 1, v34);
  uint64_t v36 = v68;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
LABEL_6:
  uint64_t v52 = v72;
  uint64_t v51 = v73;
  uint64_t v53 = v67;
  v37(v72, v67, v73);
  sub_B678(v35, (uint64_t)v15, &qword_2EDFB8);
  uint64_t v54 = v70;
  v37(v70, v52, v51);
  uint64_t v55 = sub_4A98(&qword_2EDFC8);
  sub_B678((uint64_t)v15, (uint64_t)&v54[*(int *)(v55 + 48)], &qword_2EDFB8);
  sub_B6DC(v35, &qword_2EDFB8);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v36 + 8);
  v56(v53, v51);
  sub_B6DC((uint64_t)v15, &qword_2EDFB8);
  return ((uint64_t (*)(char *, uint64_t))v56)(v52, v51);
}

uint64_t sub_95E04@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v59 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v55 - v6;
  uint64_t v8 = sub_4A98(&qword_2EDF88);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v61 = (uint64_t)&v55 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  uint64_t v65 = (uint64_t)&v55 - v15;
  uint64_t v16 = sub_26A220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v55 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v55 - v23;
  uint64_t v25 = sub_26A160();
  uint64_t v68 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v55 - v29;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v64(v24, a1, v16);
  uint64_t v66 = v30;
  sub_26A170();
  uint64_t v56 = type metadata accessor for TopLockupMetadataView.Footer(0);
  uint64_t v31 = *(int *)(v56 + 20);
  uint64_t v32 = a1;
  uint64_t v33 = v17;
  uint64_t v58 = v32;
  sub_B678(v32 + v31, (uint64_t)v7, &qword_2EA0C0);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v34 = v57(v7, 1, v16);
  uint64_t v67 = v28;
  if (v34 == 1)
  {
    sub_B6DC((uint64_t)v7, &qword_2EA0C0);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
    v35(v65, 1, 1, v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v7, v16);
    v64(v24, (uint64_t)v22, v16);
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    uint64_t v36 = v68;
    uint64_t v37 = v65;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v65, v28, v25);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v35(v37, 0, 1, v25);
  }
  uint64_t v38 = v25;
  uint64_t v39 = (void (*)(char *, char *, uint64_t))v64;
  uint64_t v40 = v59;
  sub_B678(v58 + *(int *)(v56 + 24), v59, &qword_2EA0C0);
  if (v57((char *)v40, 1, v16) == 1)
  {
    sub_B6DC(v40, &qword_2EA0C0);
    uint64_t v41 = 1;
    uint64_t v42 = (uint64_t)v60;
    uint64_t v43 = v67;
  }
  else
  {
    uint64_t v44 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v55, v40, v16);
    v39(v24, v44, v16);
    uint64_t v43 = v67;
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v44, v16);
    uint64_t v42 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v60, v43, v38);
    uint64_t v41 = 0;
  }
  uint64_t v45 = v68;
  v35(v42, v41, 1, v38);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v46(v43, v66, v38);
  uint64_t v47 = v65;
  uint64_t v48 = v61;
  sub_B678(v65, v61, &qword_2EDF88);
  uint64_t v49 = v62;
  sub_B678(v42, v62, &qword_2EDF88);
  uint64_t v50 = v43;
  uint64_t v51 = v63;
  v46(v63, v50, v38);
  uint64_t v52 = sub_4A98(&qword_2EDF90);
  sub_B678(v48, (uint64_t)&v51[*(int *)(v52 + 48)], &qword_2EDF88);
  sub_B678(v49, (uint64_t)&v51[*(int *)(v52 + 64)], &qword_2EDF88);
  sub_B6DC(v42, &qword_2EDF88);
  sub_B6DC(v47, &qword_2EDF88);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v45 + 8);
  v53(v66, v38);
  sub_B6DC(v49, &qword_2EDF88);
  sub_B6DC(v48, &qword_2EDF88);
  return ((uint64_t (*)(char *, uint64_t))v53)(v67, v38);
}

uint64_t sub_9644C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v65 = a5;
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v78 = a2;
  uint64_t v83 = a6;
  int v6 = a1;
  uint64_t v7 = sub_26A160();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  __chkstk_darwin(v7);
  uint64_t v70 = (void (**)(char *, uint64_t, uint64_t))((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_4A98(&qword_2EBFC8);
  __chkstk_darwin(v68);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_4A98(&qword_2EBFD0);
  uint64_t v11 = __chkstk_darwin(v82);
  uint64_t v69 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v63 - v13;
  uint64_t v77 = sub_4A98(&qword_2EE008);
  uint64_t v67 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v66 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_4A98(&qword_2EE010);
  __chkstk_darwin(v81);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_4A98(&qword_2EE018);
  __chkstk_darwin(v74);
  uint64_t v75 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2EE020);
  __chkstk_darwin(v18);
  long long v76 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TopLockupMetadataView(0);
  uint64_t v64 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v64 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = sub_26A220();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EE028);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v78, v22);
    uint64_t v31 = (char *)v70;
    sub_26A170();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v34 = v71;
    uint64_t v33 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v10, v31, v72);
    uint64_t v35 = (uint64_t *)&v10[*(int *)(v68 + 36)];
    uint64_t v36 = v79;
    *uint64_t v35 = KeyPath;
    v35[1] = v36;
    uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    swift_retain();
    v37(v31, v33);
    uint64_t v38 = swift_getKeyPath();
    uint64_t v39 = (uint64_t)v69;
    sub_B678((uint64_t)v10, (uint64_t)v69, &qword_2EBFC8);
    uint64_t v40 = (uint64_t *)(v39 + *(int *)(v82 + 36));
    uint64_t v41 = v80;
    uint64_t *v40 = v38;
    v40[1] = v41;
    swift_retain();
    sub_B6DC((uint64_t)v10, &qword_2EBFC8);
    uint64_t v42 = (uint64_t)v73;
    sub_19CC4(v39, (uint64_t)v73, &qword_2EBFD0);
    sub_B678(v42, (uint64_t)v16, &qword_2EBFD0);
    swift_storeEnumTagMultiPayload();
    sub_9ED30();
    sub_9EDF0();
    sub_26B2F0();
    return sub_B6DC(v42, &qword_2EBFD0);
  }
  else
  {
    uint64_t v69 = v30;
    uint64_t v70 = v28;
    uint64_t v71 = v27;
    uint64_t v72 = v18;
    uint64_t v73 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v78, v22);
    uint64_t v44 = v24 + 7;
    if (v6)
    {
      unint64_t v55 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      unint64_t v56 = (v44 + v55) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v57 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v57 + v55, (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
      uint64_t v58 = v80;
      *(void *)(v57 + v56) = v79;
      *(void *)(v57 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8)) = v58;
      swift_retain();
      swift_retain();
      sub_4A98(&qword_2EE058);
      sub_26A0F0();
      sub_26A0D0();
      sub_9F0D4();
      sub_A00C4(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_A00C4(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      uint64_t v59 = v66;
      sub_26A100();
      uint64_t v60 = v67;
      uint64_t v61 = v77;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v75, v59, v77);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EE038, &qword_2EE028);
      sub_7C18(&qword_2EE040, &qword_2EE008);
      uint64_t v62 = (uint64_t)v76;
      sub_26B2F0();
      sub_B678(v62, (uint64_t)v73, &qword_2EE020);
      swift_storeEnumTagMultiPayload();
      sub_9ED30();
      sub_9EDF0();
      sub_26B2F0();
      sub_B6DC(v62, &qword_2EE020);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v59, v61);
    }
    else
    {
      sub_9EA6C(v65, (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TopLockupMetadataView);
      unint64_t v45 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      unint64_t v46 = (v44 + v45) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = (*(unsigned __int8 *)(v64 + 80) + v47 + 8) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      uint64_t v49 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v49 + v45, v25, v22);
      uint64_t v50 = v80;
      *(void *)(v49 + v46) = v79;
      *(void *)(v49 + v47) = v50;
      sub_9E1EC((uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v49 + v48);
      swift_retain();
      swift_retain();
      sub_4A98(&qword_2EE078);
      sub_26A0F0();
      sub_26A0D0();
      sub_9F8FC();
      sub_A00C4(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_A00C4(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      uint64_t v51 = (uint64_t)v69;
      sub_26A100();
      uint64_t v53 = (uint64_t (**)(uint64_t, uint64_t))v70;
      uint64_t v52 = v71;
      v70[2](v75, v51, v71);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EE038, &qword_2EE028);
      sub_7C18(&qword_2EE040, &qword_2EE008);
      uint64_t v54 = (uint64_t)v76;
      sub_26B2F0();
      sub_B678(v54, (uint64_t)v73, &qword_2EE020);
      swift_storeEnumTagMultiPayload();
      sub_9ED30();
      sub_9EDF0();
      sub_26B2F0();
      sub_B6DC(v54, &qword_2EE020);
      return v53[1](v51, v52);
    }
  }
}

uint64_t sub_96F98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v54 = a5;
  uint64_t v9 = sub_26A220();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_4A98(&qword_2EE0A0) - 8;
  __chkstk_darwin(v50);
  uint64_t v49 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_269900();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_269920();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_26AB70();
  uint64_t v17 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v40 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_4A98(&qword_2EE090);
  __chkstk_darwin(v55);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2EE078);
  __chkstk_darwin(v21 - 8);
  unint64_t v48 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_9753C(a2, (uint64_t)a1, a3, a4, v56);
  uint64_t v23 = v56[0];
  uint64_t v24 = v56[1];
  char v25 = v57;
  uint64_t v39 = v58;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = a1;
  sub_4ADC(a1, a1[3]);
  sub_26D1B0();
  sub_269910();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v43);
  uint64_t v26 = sub_2698F0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
  uint64_t v27 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if (v26 != 2) {
    uint64_t v27 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v28 = v40;
  uint64_t v29 = v44;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v40, *v27, v44);
  uint64_t v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)v49 + *(int *)(v50 + 36), v28, v29);
  *uint64_t v30 = KeyPath;
  sub_B678((uint64_t)v30, (uint64_t)&v20[*(int *)(v55 + 36)], &qword_2EE0A0);
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v24;
  unsigned char v20[16] = v25;
  *((void *)v20 + 3) = v39;
  sub_45370(v23, v24, v25);
  swift_bridgeObjectRetain();
  sub_B6DC((uint64_t)v30, &qword_2EE0A0);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v28, v29);
  sub_3A380(v23, v24, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v45, v53);
  sub_C224((uint64_t)v42, (uint64_t)v56);
  uint64_t v31 = sub_26BA00();
  uint64_t v33 = v32;
  LOBYTE(v28) = v34 & 1;
  sub_9F9A8();
  uint64_t v35 = (uint64_t)v48;
  sub_26BE30();
  sub_3A380(v31, v33, (char)v28);
  swift_bridgeObjectRelease();
  sub_B6DC((uint64_t)v20, &qword_2EE090);
  return sub_19CC4(v35, v54, &qword_2EE078);
}

uint64_t sub_9753C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v55 = a3;
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26A220();
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_C224(a2, (uint64_t)v61);
  uint64_t v13 = sub_26BA00();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v18 = sub_26BA80();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_3A380(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_26BA30();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_3A380(v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_26BA60();
  uint64_t v57 = v29;
  uint64_t v58 = v30;
  int v56 = v31 & 1;
  sub_3A380(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_26C250();
  uint64_t v32 = sub_26BB10();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  uint64_t v37 = sub_26BA80();
  uint64_t v39 = v38;
  LOBYTE(v23) = v40 & 1;
  sub_3A380(v32, v34, v36);
  swift_bridgeObjectRelease();
  type metadata accessor for TopLockupMetadataView(0);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v9);
  id v41 = [self tertiaryLabelColor:v55];
  sub_26C230();
  sub_9EAD4((uint64_t)v9, type metadata accessor for ColorConstants);
  uint64_t v42 = sub_26BA30();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_3A380(v37, v39, v23);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v57;
  LOBYTE(v23) = v56;
  uint64_t v55 = sub_26BA60();
  uint64_t v49 = v48;
  char v51 = v50;
  uint64_t v59 = v52;
  sub_3A380(v42, v44, v46);
  swift_bridgeObjectRelease();
  sub_3A380(v28, v47, v23);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v54 = v60;
  *uint64_t v60 = v55;
  v54[1] = v49;
  *((unsigned char *)v54 + 16) = v51 & 1;
  v54[3] = v59;
  return result;
}

uint64_t sub_9790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v21[1] = a5;
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_97AB8(a2, a1, a3, a4, &v22);
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  char v15 = v24;
  uint64_t v26 = v22;
  uint64_t v27 = v23;
  char v28 = v24;
  uint64_t v29 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_C224(a1, (uint64_t)&v22);
  uint64_t v16 = sub_26BA00();
  uint64_t v18 = v17;
  LOBYTE(v12) = v19 & 1;
  sub_4A98(&qword_2EE070);
  sub_9F180();
  sub_26BE30();
  sub_3A380(v16, v18, (char)v12);
  swift_bridgeObjectRelease();
  sub_3A380(v13, v14, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_97AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v7 = sub_26A220();
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_C224(a2, (uint64_t)v54);
  uint64_t v10 = sub_26BA00();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v15 = sub_26BA80();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_3A380(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_26BA30();
  uint64_t v22 = v21;
  LOBYTE(v12) = v23 & 1;
  sub_3A380(v15, v17, v19);
  swift_bridgeObjectRelease();
  v49[0] = sub_26BA60();
  v49[1] = v24;
  uint64_t v50 = v25;
  char v27 = v26 & 1;
  sub_3A380(v20, v22, v12);
  swift_bridgeObjectRelease();
  sub_26C250();
  uint64_t v28 = sub_26BB10();
  uint64_t v30 = v29;
  LOBYTE(v12) = v31 & 1;
  uint64_t v32 = sub_26BA80();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_3A380(v28, v30, v12);
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_26BA30();
  uint64_t v39 = v38;
  LOBYTE(v12) = v40 & 1;
  sub_3A380(v32, v34, v36);
  swift_bridgeObjectRelease();
  uint64_t v41 = v50;
  uint64_t v42 = sub_26BA60();
  uint64_t v44 = v43;
  LOBYTE(v32) = v45;
  uint64_t v52 = v46;
  sub_3A380(v37, v39, v12);
  swift_bridgeObjectRelease();
  sub_3A380(v49[0], v41, v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v48 = v53;
  *uint64_t v53 = v42;
  v48[1] = v44;
  *((unsigned char *)v48 + 16) = v32 & 1;
  v48[3] = v52;
  return result;
}

uint64_t TopLockupMetadataView.Footer.init(leadingText:centerText:trailingText:separator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
  sub_19CC4(a2, a5 + v11[5], &qword_2EA0C0);
  sub_19CC4(a3, a5 + v11[6], &qword_2EA0C0);
  return sub_19CC4(a4, a5 + v11[7], &qword_2EA0C0);
}

uint64_t sub_97EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26B520();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EE150);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B530();
  if (sub_26B540()) {
    double v10 = 0.6;
  }
  else {
    double v10 = 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  *(double *)&v9[*(int *)(v7 + 44)] = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_19CC4((uint64_t)v9, a1, &qword_2EE150);
}

uint64_t sub_98024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - v7;
  sub_26ADD0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for ColorScheme.light(_:), v2);
  char v9 = sub_26A6D0();
  double v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  uint64_t v11 = sub_26C700();
  uint64_t v12 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  if ((v9 & 1) == 0) {
    uint64_t v12 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(a1, *v12, v11);
}

uint64_t type metadata accessor for TopLockupMetadataView(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EDD38);
}

uint64_t sub_981F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_26B050();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_9822C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_26B050();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_98260()
{
  return sub_26B060();
}

uint64_t sub_98290()
{
  return sub_26B060();
}

uint64_t sub_982C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFA0();
  *a1 = result;
  return result;
}

uint64_t sub_982EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26AFA0();
  *a1 = result;
  return result;
}

uint64_t sub_98318()
{
  return sub_26AFB0();
}

uint64_t sub_98340()
{
  return sub_26AFB0();
}

uint64_t type metadata accessor for TopLockupMetadataView.Footer(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EDE28);
}

uint64_t sub_98388()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for TopLockupMetadataView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    double v10 = (_WORD *)(a1 + v9);
    uint64_t v11 = (_WORD *)(a2 + v9);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v10 = *v11;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
      uint64_t v17 = v12[8];
      char v18 = (char *)v10 + v17;
      char v19 = (char *)v11 + v17;
      _OWORD v18[2] = v19[2];
      *(_WORD *)char v18 = *(_WORD *)v19;
    }
    else
    {
      *(void *)double v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[6];
    uint64_t v22 = (void *)(a1 + v21);
    char v23 = (void *)(a2 + v21);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[7];
    char v26 = (_WORD *)(a1 + v25);
    char v27 = (_WORD *)(a2 + v25);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *char v26 = *v27;
      uint64_t v28 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v29 = *(int *)(v28 + 24);
      uint64_t v30 = (char *)v26 + v29;
      char v31 = (char *)v27 + v29;
      uint64_t v32 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(void *)((char *)v26 + *(int *)(v28 + 28)) = *(void *)((char *)v27 + *(int *)(v28 + 28));
    }
    else
    {
      *(void *)char v26 = *(void *)v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[8];
    uint64_t v34 = (void *)(a1 + v33);
    char v35 = (void *)(a2 + v33);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[9];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = a2 + v37;
    uint64_t v40 = *(void *)v39;
    char v41 = *(unsigned char *)(v39 + 8);
    sub_10E0C(*(void *)v39, v41);
    *(void *)uint64_t v38 = v40;
    *(unsigned char *)(v38 + 8) = v41;
    uint64_t v42 = a3[10];
    uint64_t v43 = a3[11];
    uint64_t v44 = (void *)(a1 + v42);
    char v45 = (void *)(a2 + v42);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = (void *)(a1 + v43);
    uint64_t v48 = (const void *)(a2 + v43);
    swift_retain();
    swift_retain();
    uint64_t v49 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v50 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 16))(v47, v48, v50);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v51 = a3[12];
    uint64_t v52 = (void *)(a1 + v51);
    uint64_t v53 = (const void *)(a2 + v51);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v52, v53, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v54 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v55 = a3[13];
    int v56 = (void *)(a1 + v55);
    uint64_t v57 = (const void *)(a2 + v55);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v56, v57, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v58 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v59 = a3[14];
    uint64_t v60 = (void *)(a1 + v59);
    uint64_t v61 = (const void *)(a2 + v59);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v60, v61, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v62 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v63 = a3[15];
    uint64_t v64 = a1 + v63;
    uint64_t v65 = a2 + v63;
    uint64_t v66 = *(void *)(a2 + v63 + 24);
    if (v66)
    {
      uint64_t v67 = *(void *)(v65 + 32);
      *(void *)(v64 + 24) = v66;
      *(void *)(v64 + 32) = v67;
      (**(void (***)(void))(v66 - 8))();
    }
    else
    {
      long long v68 = *(_OWORD *)(v65 + 16);
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      *(_OWORD *)(v64 + 16) = v68;
      *(void *)(v64 + 32) = *(void *)(v65 + 32);
    }
    uint64_t v69 = a3[16];
    uint64_t v70 = (void *)(a1 + v69);
    uint64_t v71 = (const void *)(a2 + v69);
    uint64_t v72 = sub_26CE50();
    uint64_t v73 = *(void *)(v72 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      uint64_t v74 = sub_4A98(&qword_2EBFE8);
      memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    uint64_t v75 = a3[17];
    long long v76 = (void *)(a1 + v75);
    uint64_t v77 = (const void *)(a2 + v75);
    uint64_t v78 = sub_4A98(&qword_2EDCA0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      uint64_t v79 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 16))(v76, v77, v79);
      uint64_t v80 = sub_4A98(&qword_2EDCD0);
      *((unsigned char *)v76 + *(int *)(v80 + 48)) = *((unsigned char *)v77 + *(int *)(v80 + 48));
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v81 = a3[18];
    uint64_t v82 = (char *)(a1 + v81);
    uint64_t v83 = (char *)(a2 + v81);
    uint64_t v84 = sub_4A98(&qword_2EDCA8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      uint64_t v85 = sub_26A220();
      uint64_t v86 = *(void *)(v85 - 8);
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
      v87(v82, v83, v85);
      uint64_t v102 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
      uint64_t v88 = v102[5];
      __dst = &v82[v88];
      uint64_t v89 = &v83[v88];
      uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
      if (v103(&v83[v88], 1, v85))
      {
        uint64_t v90 = sub_4A98(&qword_2EA0C0);
        memcpy(__dst, v89, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        v87(__dst, v89, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v85);
      }
      uint64_t v91 = v102[6];
      char v92 = &v82[v91];
      uint64_t v93 = &v83[v91];
      if (v103(&v83[v91], 1, v85))
      {
        uint64_t v94 = sub_4A98(&qword_2EA0C0);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        uint64_t v95 = v86;
      }
      else
      {
        v87(v92, v93, v85);
        uint64_t v95 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v92, 0, 1, v85);
      }
      uint64_t v96 = v102[7];
      uint64_t v97 = &v82[v96];
      uint64_t v98 = &v83[v96];
      if (v103(v98, 1, v85))
      {
        uint64_t v99 = sub_4A98(&qword_2EA0C0);
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        v87(v97, v98, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v97, 0, 1, v85);
      }
      swift_storeEnumTagMultiPayload();
    }
    *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  }
  return a1;
}

uint64_t destroy for TopLockupMetadataView(uint64_t a1, int *a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v9 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v11 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[8];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  swift_release();
  swift_release();
  uint64_t v14 = a1 + a2[11];
  sub_4A98(&qword_2ED2E0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v15 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + a2[12];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v17 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + a2[13];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v19 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = a1 + a2[14];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v21 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = a1 + a2[15];
  if (*(void *)(v22 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v22);
  }
  uint64_t v23 = a1 + a2[16];
  uint64_t v24 = sub_26CE50();
  uint64_t v25 = *(void *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  uint64_t v26 = a1 + a2[17];
  sub_4A98(&qword_2EDCA0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v27 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  uint64_t v28 = a1 + a2[18];
  sub_4A98(&qword_2EDCA8);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v30 = sub_26A220();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(v28, v30);
    uint64_t v32 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v33 = v28 + v32[5];
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (!v34(v33, 1, v30)) {
      v37(v33, v30);
    }
    uint64_t v35 = v28 + v32[6];
    if (!v34(v35, 1, v30)) {
      v37(v35, v30);
    }
    uint64_t v36 = v28 + v32[7];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v36, 1, v30);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v37)(v36, v30);
    }
  }
  return result;
}

uint64_t initializeWithCopy for TopLockupMetadataView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = (char *)v10 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
    uint64_t v16 = v11[8];
    uint64_t v17 = (char *)v9 + v16;
    uint64_t v18 = (char *)v10 + v16;
    void v17[2] = v18[2];
    *(_WORD *)uint64_t v17 = *(_WORD *)v18;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = a3[7];
  uint64_t v24 = (_WORD *)(a1 + v23);
  uint64_t v25 = (_WORD *)(a2 + v23);
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v24 = *v25;
    uint64_t v26 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v27 = *(int *)(v26 + 24);
    uint64_t v28 = (char *)v24 + v27;
    uint64_t v29 = (char *)v25 + v27;
    uint64_t v30 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    *(void *)((char *)v24 + *(int *)(v26 + 28)) = *(void *)((char *)v25 + *(int *)(v26 + 28));
  }
  else
  {
    *(void *)uint64_t v24 = *(void *)v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3[8];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *uint64_t v32 = *v33;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[9];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_10E0C(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = v39;
  uint64_t v40 = a3[10];
  uint64_t v41 = a3[11];
  uint64_t v42 = (void *)(a1 + v40);
  uint64_t v43 = (void *)(a2 + v40);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  char v45 = (void *)(a1 + v41);
  uint64_t v46 = (const void *)(a2 + v41);
  swift_retain();
  swift_retain();
  uint64_t v47 = sub_4A98(&qword_2ED2E0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v48 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v49 = a3[12];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v50, v51, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v52 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v53 = a3[13];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v54, v55, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v56 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v57 = a3[14];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (const void *)(a2 + v57);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v58, v59, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v60 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = a3[15];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)(a2 + v61 + 24);
  if (v64)
  {
    uint64_t v65 = *(void *)(v63 + 32);
    *(void *)(v62 + 24) = v64;
    *(void *)(v62 + 32) = v65;
    (**(void (***)(void))(v64 - 8))();
  }
  else
  {
    long long v66 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v66;
    *(void *)(v62 + 32) = *(void *)(v63 + 32);
  }
  uint64_t v67 = a3[16];
  long long v68 = (void *)(a1 + v67);
  uint64_t v69 = (const void *)(a2 + v67);
  uint64_t v70 = sub_26CE50();
  uint64_t v71 = *(void *)(v70 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    uint64_t v72 = sub_4A98(&qword_2EBFE8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v73 = a3[17];
  uint64_t v74 = (void *)(a1 + v73);
  uint64_t v75 = (const void *)(a2 + v73);
  uint64_t v76 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    uint64_t v77 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v77 - 8) + 16))(v74, v75, v77);
    uint64_t v78 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v74 + *(int *)(v78 + 48)) = *((unsigned char *)v75 + *(int *)(v78 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v79 = a3[18];
  uint64_t v80 = (char *)(a1 + v79);
  uint64_t v81 = (char *)(a2 + v79);
  uint64_t v82 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    uint64_t v83 = sub_26A220();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    v85(v80, v81, v83);
    uint64_t v86 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v87 = *(int *)(v86 + 20);
    __dst = &v80[v87];
    uint64_t v102 = v86;
    uint64_t v88 = &v81[v87];
    uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
    uint64_t v100 = v84;
    if (v103(&v81[v87], 1, v83))
    {
      uint64_t v89 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v88, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      v85(__dst, v88, v83);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v83);
    }
    uint64_t v90 = *(int *)(v102 + 24);
    uint64_t v91 = &v80[v90];
    char v92 = &v81[v90];
    if (v103(&v81[v90], 1, v83))
    {
      uint64_t v93 = sub_4A98(&qword_2EA0C0);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
      uint64_t v94 = v100;
    }
    else
    {
      v85(v91, v92, v83);
      uint64_t v94 = v100;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v91, 0, 1, v83);
    }
    uint64_t v95 = *(int *)(v102 + 28);
    uint64_t v96 = &v80[v95];
    uint64_t v97 = &v81[v95];
    if (v103(v97, 1, v83))
    {
      uint64_t v98 = sub_4A98(&qword_2EA0C0);
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      v85(v96, v97, v83);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v96, 0, 1, v83);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithCopy for TopLockupMetadataView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (unsigned char *)(a1 + v10);
    uint64_t v12 = (unsigned char *)(a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      uint64_t v13 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v14 = v13[6];
      uint64_t v15 = &v11[v14];
      uint64_t v16 = &v12[v14];
      uint64_t v17 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      uint64_t v18 = v13[8];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      char v21 = v20[2];
      *(_WORD *)uint64_t v19 = *(_WORD *)v20;
      v19[2] = v21;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[6];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_B6DC(a1 + v22, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[7];
    uint64_t v27 = (unsigned char *)(a1 + v26);
    uint64_t v28 = (unsigned char *)(a2 + v26);
    sub_B6DC(a1 + v26, &qword_2EBC58);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v29 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v30 = *(int *)(v29 + 24);
      uint64_t v31 = &v27[v30];
      uint64_t v32 = &v28[v30];
      uint64_t v33 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = a3[8];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (void *)(a2 + v34);
    sub_B6DC(a1 + v34, &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *uint64_t v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v38 = a3[9];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)v40;
  char v42 = *(unsigned char *)(v40 + 8);
  sub_10E0C(*(void *)v40, v42);
  uint64_t v43 = *(void *)v39;
  char v44 = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = v42;
  sub_C374(v43, v44);
  uint64_t v45 = a3[10];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  swift_retain();
  swift_release();
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v48 = a3[11];
    uint64_t v49 = (void *)(a1 + v48);
    uint64_t v50 = (const void *)(a2 + v48);
    sub_B6DC(a1 + v48, &qword_2ED2E0);
    uint64_t v51 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v52 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v49, v50, v52);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v53 = a3[12];
    uint64_t v54 = (void *)(a1 + v53);
    uint64_t v55 = (const void *)(a2 + v53);
    sub_B6DC(a1 + v53, &qword_2ED2E0);
    uint64_t v56 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      uint64_t v57 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 16))(v54, v55, v57);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v58 = a3[13];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (const void *)(a2 + v58);
    sub_B6DC(a1 + v58, &qword_2ED2E0);
    uint64_t v61 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      uint64_t v62 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 16))(v59, v60, v62);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v63 = a3[14];
    uint64_t v64 = (void *)(a1 + v63);
    uint64_t v65 = (const void *)(a2 + v63);
    sub_B6DC(a1 + v63, &qword_2ED2E0);
    uint64_t v66 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      uint64_t v67 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v67 - 8) + 16))(v64, v65, v67);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v68 = a3[15];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = (uint64_t *)(a2 + v68);
  uint64_t v71 = *(void *)(a2 + v68 + 24);
  if (*(void *)(a1 + v68 + 24))
  {
    if (v71)
    {
      sub_16D58((uint64_t *)v69, v70);
      goto LABEL_35;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v69);
  }
  else if (v71)
  {
    *(void *)(v69 + 24) = v71;
    *(void *)(v69 + 32) = v70[4];
    (**(void (***)(uint64_t, long long *))(v71 - 8))(v69, (long long *)v70);
    goto LABEL_35;
  }
  long long v72 = *(_OWORD *)v70;
  long long v73 = *((_OWORD *)v70 + 1);
  *(void *)(v69 + 32) = v70[4];
  *(_OWORD *)uint64_t v69 = v72;
  *(_OWORD *)(v69 + 16) = v73;
LABEL_35:
  uint64_t v74 = a3[16];
  uint64_t v75 = (void *)(a1 + v74);
  uint64_t v76 = (void *)(a2 + v74);
  uint64_t v77 = sub_26CE50();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 16))(v75, v76, v77);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      if (a1 == a2) {
        goto LABEL_59;
      }
      goto LABEL_42;
    }
LABEL_41:
    uint64_t v82 = sub_4A98(&qword_2EBFE8);
    memcpy(v75, v76, *(void *)(*(void *)(v82 - 8) + 64));
    if (a1 == a2) {
      goto LABEL_59;
    }
    goto LABEL_42;
  }
  if (v81)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 24))(v75, v76, v77);
  if (a1 == a2) {
    goto LABEL_59;
  }
LABEL_42:
  uint64_t v83 = a3[17];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (const void *)(a2 + v83);
  sub_B6DC(a1 + v83, &qword_2EDCA0);
  uint64_t v86 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    uint64_t v87 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 16))(v84, v85, v87);
    uint64_t v88 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v84 + *(int *)(v88 + 48)) = *((unsigned char *)v85 + *(int *)(v88 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v89 = a3[18];
  uint64_t v90 = (char *)(a1 + v89);
  uint64_t v91 = (char *)(a2 + v89);
  sub_B6DC(a1 + v89, &qword_2EDCA8);
  uint64_t v92 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v93 = sub_26A220();
    uint64_t v94 = *(void *)(v93 - 8);
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    v95(v90, v91, v93);
    uint64_t v96 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v97 = *(int *)(v96 + 20);
    __dst = &v90[v97];
    uint64_t v112 = v96;
    uint64_t v98 = &v91[v97];
    uint64_t v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
    uint64_t v110 = v94;
    if (v113(&v91[v97], 1, v93))
    {
      uint64_t v99 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      v95(__dst, v98, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v93);
    }
    uint64_t v100 = *(int *)(v112 + 24);
    uint64_t v101 = &v90[v100];
    uint64_t v102 = &v91[v100];
    if (v113(&v91[v100], 1, v93))
    {
      uint64_t v103 = sub_4A98(&qword_2EA0C0);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      uint64_t v104 = v110;
    }
    else
    {
      v95(v101, v102, v93);
      uint64_t v104 = v110;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v101, 0, 1, v93);
    }
    uint64_t v105 = *(int *)(v112 + 28);
    uint64_t v106 = &v90[v105];
    uint64_t v107 = &v91[v105];
    if (v113(v107, 1, v93))
    {
      uint64_t v108 = sub_4A98(&qword_2EA0C0);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      v95(v106, v107, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v93);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_59:
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t initializeWithTake for TopLockupMetadataView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (_WORD *)(a1 + v6);
  uint64_t v8 = (_WORD *)(a2 + v6);
  uint64_t v9 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *char v7 = *v8;
    uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(void *)((char *)v7 + v10[7]) = *(void *)((char *)v8 + v10[7]);
    uint64_t v15 = v10[8];
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)v8 + v15;
    void v16[2] = v17[2];
    *(_WORD *)uint64_t v16 = *(_WORD *)v17;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = (_WORD *)(a1 + v23);
  uint64_t v25 = (_WORD *)(a2 + v23);
  uint64_t v26 = sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v24 = *v25;
    uint64_t v27 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v28 = *(int *)(v27 + 24);
    uint64_t v29 = (char *)v24 + v28;
    uint64_t v30 = (char *)v25 + v28;
    uint64_t v31 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    *(void *)((char *)v24 + *(int *)(v27 + 28)) = *(void *)((char *)v25 + *(int *)(v27 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v32 = a3[8];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_26C700();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v37 = a3[9];
  uint64_t v38 = a3[10];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(void *)uint64_t v39 = *(void *)v40;
  long long v41 = *(_OWORD *)(a2 + v38);
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(_OWORD *)(a1 + v38) = v41;
  uint64_t v42 = a3[11];
  uint64_t v43 = (void *)(a1 + v42);
  char v44 = (const void *)(a2 + v42);
  uint64_t v45 = sub_4A98(&qword_2ED2E0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v47 = a3[12];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v48, v49, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v50 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v51 = a3[13];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v52, v53, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v54 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v55 = a3[14];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (const void *)(a2 + v55);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v56, v57, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v58 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v59 = a3[15];
  uint64_t v60 = a3[16];
  uint64_t v61 = a1 + v59;
  uint64_t v62 = a2 + v59;
  long long v63 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v63;
  *(void *)(v61 + 32) = *(void *)(v62 + 32);
  uint64_t v64 = (void *)(a1 + v60);
  uint64_t v65 = (const void *)(a2 + v60);
  uint64_t v66 = sub_26CE50();
  uint64_t v67 = *(void *)(v66 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    uint64_t v68 = sub_4A98(&qword_2EBFE8);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 32))(v64, v65, v66);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  uint64_t v69 = a3[17];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (const void *)(a2 + v69);
  uint64_t v72 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    uint64_t v73 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v73 - 8) + 32))(v70, v71, v73);
    uint64_t v74 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v70 + *(int *)(v74 + 48)) = *((unsigned char *)v71 + *(int *)(v74 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = a3[18];
  uint64_t v76 = (char *)(a1 + v75);
  uint64_t v77 = (char *)(a2 + v75);
  uint64_t v78 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    uint64_t v79 = sub_26A220();
    uint64_t v80 = *(void *)(v79 - 8);
    int v81 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v81(v76, v77, v79);
    uint64_t v82 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v83 = *(int *)(v82 + 20);
    __dst = &v76[v83];
    uint64_t v98 = v82;
    uint64_t v84 = &v77[v83];
    uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
    uint64_t v96 = v80;
    if (v99(&v77[v83], 1, v79))
    {
      uint64_t v85 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v84, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      v81(__dst, v84, v79);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(__dst, 0, 1, v79);
    }
    uint64_t v86 = *(int *)(v98 + 24);
    uint64_t v87 = &v76[v86];
    uint64_t v88 = &v77[v86];
    if (v99(&v77[v86], 1, v79))
    {
      uint64_t v89 = sub_4A98(&qword_2EA0C0);
      memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
      uint64_t v90 = v96;
    }
    else
    {
      v81(v87, v88, v79);
      uint64_t v90 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v87, 0, 1, v79);
    }
    uint64_t v91 = *(int *)(v98 + 28);
    uint64_t v92 = &v76[v91];
    uint64_t v93 = &v77[v91];
    if (v99(v93, 1, v79))
    {
      uint64_t v94 = sub_4A98(&qword_2EA0C0);
      memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      v81(v92, v93, v79);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v92, 0, 1, v79);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for TopLockupMetadataView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (_WORD *)(a1 + v10);
    uint64_t v12 = (_WORD *)((char *)a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EB708);
    uint64_t v13 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v11 = *v12;
      uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = (char *)v11 + v15;
      uint64_t v17 = (char *)v12 + v15;
      uint64_t v18 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)((char *)v11 + v14[7]) = *(void *)((char *)v12 + v14[7]);
      uint64_t v19 = v14[8];
      uint64_t v20 = (char *)v11 + v19;
      uint64_t v21 = (char *)v12 + v19;
      void v20[2] = v21[2];
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v22 = a3[6];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (char *)a2 + v22;
    sub_B6DC(a1 + v22, &qword_2EA968);
    uint64_t v25 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_26A6E0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = (_WORD *)(a1 + v27);
    uint64_t v29 = (_WORD *)((char *)a2 + v27);
    sub_B6DC(a1 + v27, &qword_2EBC58);
    uint64_t v30 = sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v28 = *v29;
      uint64_t v31 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v32 = *(int *)(v31 + 24);
      uint64_t v33 = (char *)v28 + v32;
      uint64_t v34 = (char *)v29 + v32;
      uint64_t v35 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *(void *)((char *)v28 + *(int *)(v31 + 28)) = *(void *)((char *)v29 + *(int *)(v31 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    uint64_t v36 = a3[8];
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (char *)a2 + v36;
    sub_B6DC(a1 + v36, &qword_2EB3E8);
    uint64_t v39 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = sub_26C700();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)((char *)a2 + v41);
  uint64_t v44 = *v43;
  LOBYTE(v43) = *((unsigned char *)v43 + 8);
  uint64_t v45 = *(void *)v42;
  char v46 = *(unsigned char *)(v42 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = (_BYTE)v43;
  sub_C374(v45, v46);
  uint64_t v47 = a3[10];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t)a2 + v47;
  *(void *)(a1 + v47) = *(uint64_t *)((char *)a2 + v47);
  swift_release();
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v50 = a3[11];
    uint64_t v51 = (void *)(a1 + v50);
    uint64_t v52 = (char *)a2 + v50;
    sub_B6DC(a1 + v50, &qword_2ED2E0);
    uint64_t v53 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      uint64_t v54 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v51, v52, v54);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v55 = a3[12];
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (char *)a2 + v55;
    sub_B6DC(a1 + v55, &qword_2ED2E0);
    uint64_t v58 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      uint64_t v59 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v56, v57, v59);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v60 = a3[13];
    uint64_t v61 = (void *)(a1 + v60);
    uint64_t v62 = (char *)a2 + v60;
    sub_B6DC(a1 + v60, &qword_2ED2E0);
    uint64_t v63 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      uint64_t v64 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v65 = a3[14];
    uint64_t v66 = (void *)(a1 + v65);
    uint64_t v67 = (char *)a2 + v65;
    sub_B6DC(a1 + v65, &qword_2ED2E0);
    uint64_t v68 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      uint64_t v69 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v66, v67, v69);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v70 = a3[15];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = (uint64_t)a2 + v70;
  if (*(void *)(a1 + v70 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v71);
  }
  long long v73 = *(_OWORD *)(v72 + 16);
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  *(_OWORD *)(v71 + 16) = v73;
  *(void *)(v71 + 32) = *(void *)(v72 + 32);
  uint64_t v74 = a3[16];
  uint64_t v75 = (void *)(a1 + v74);
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = sub_26CE50();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      if ((uint64_t *)a1 == a2) {
        goto LABEL_53;
      }
      goto LABEL_36;
    }
LABEL_35:
    uint64_t v82 = sub_4A98(&qword_2EBFE8);
    memcpy(v75, v76, *(void *)(*(void *)(v82 - 8) + 64));
    if ((uint64_t *)a1 == a2) {
      goto LABEL_53;
    }
    goto LABEL_36;
  }
  if (v81)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
    goto LABEL_35;
  }
  (*(void (**)(void *, char *, uint64_t))(v78 + 40))(v75, v76, v77);
  if ((uint64_t *)a1 == a2) {
    goto LABEL_53;
  }
LABEL_36:
  uint64_t v83 = a3[17];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (char *)a2 + v83;
  sub_B6DC(a1 + v83, &qword_2EDCA0);
  uint64_t v86 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    uint64_t v87 = sub_26A220();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v84, v85, v87);
    uint64_t v88 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v84 + *(int *)(v88 + 48)) = v85[*(int *)(v88 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v89 = a3[18];
  uint64_t v90 = (char *)(a1 + v89);
  uint64_t v91 = (char *)a2 + v89;
  sub_B6DC(a1 + v89, &qword_2EDCA8);
  uint64_t v92 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v93 = sub_26A220();
    uint64_t v94 = *(void *)(v93 - 8);
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
    v95(v90, v91, v93);
    uint64_t v96 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v97 = *(int *)(v96 + 20);
    __dst = &v90[v97];
    uint64_t v112 = v96;
    uint64_t v98 = &v91[v97];
    uint64_t v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
    uint64_t v110 = v94;
    if (v113(&v91[v97], 1, v93))
    {
      uint64_t v99 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      v95(__dst, v98, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v93);
    }
    uint64_t v100 = *(int *)(v112 + 24);
    uint64_t v101 = &v90[v100];
    uint64_t v102 = &v91[v100];
    if (v113(&v91[v100], 1, v93))
    {
      uint64_t v103 = sub_4A98(&qword_2EA0C0);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      uint64_t v104 = v110;
    }
    else
    {
      v95(v101, v102, v93);
      uint64_t v104 = v110;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v101, 0, 1, v93);
    }
    uint64_t v105 = *(int *)(v112 + 28);
    uint64_t v106 = &v90[v105];
    uint64_t v107 = &v91[v105];
    if (v113(v107, 1, v93))
    {
      uint64_t v108 = sub_4A98(&qword_2EA0C0);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      v95(v106, v107, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v93);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_53:
  *(unsigned char *)(a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TopLockupMetadataView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9C19C);
}

uint64_t sub_9C19C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_19:
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v18(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_19;
  }
  uint64_t v11 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_19;
  }
  uint64_t v12 = sub_4A98(&qword_2EB3F8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_19;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[10]);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v15 = sub_4A98(&qword_2ED2E0);
    if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
    {
      uint64_t v7 = v15;
      uint64_t v8 = *(void *)(v15 - 8);
      uint64_t v9 = a3[11];
      goto LABEL_19;
    }
    uint64_t v16 = sub_4A98(&qword_2EBFE8);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v7 = v16;
      uint64_t v8 = *(void *)(v16 - 8);
      uint64_t v9 = a3[16];
      goto LABEL_19;
    }
    uint64_t v17 = sub_4A98(&qword_2EDCA0);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v7 = v17;
      uint64_t v8 = *(void *)(v17 - 8);
      uint64_t v9 = a3[17];
      goto LABEL_19;
    }
    uint64_t v19 = sub_4A98(&qword_2EDCA8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
    uint64_t v21 = v19;
    uint64_t v22 = a1 + a3[18];
    return v20(v22, a2, v21);
  }
}

uint64_t storeEnumTagSinglePayload for TopLockupMetadataView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9C4C8);
}

uint64_t sub_9C4C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_17:
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v18(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_17;
  }
  uint64_t v13 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_17;
  }
  uint64_t result = sub_4A98(&qword_2EB3F8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
    goto LABEL_17;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[10]) = (a2 - 1);
    return result;
  }
  uint64_t v15 = sub_4A98(&qword_2ED2E0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_17;
  }
  uint64_t v16 = sub_4A98(&qword_2EBFE8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v9 = v16;
    uint64_t v10 = *(void *)(v16 - 8);
    uint64_t v11 = a4[16];
    goto LABEL_17;
  }
  uint64_t v17 = sub_4A98(&qword_2EDCA0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(v17 - 8);
    uint64_t v11 = a4[17];
    goto LABEL_17;
  }
  uint64_t v19 = sub_4A98(&qword_2EDCA8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[18];

  return v20(v22, a2, a2, v21);
}

void sub_9C7E0()
{
  sub_9CB90(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_9CB90(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_9CB90(319, &qword_2EDD48, type metadata accessor for FontConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_9CB90(319, (unint64_t *)&qword_2EB470, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_9CB90(319, &qword_2EDD50, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PlaceholderTextView.ContentType);
          if (v4 <= 0x3F)
          {
            sub_9CB90(319, &qword_2EDD58, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
            if (v5 <= 0x3F)
            {
              sub_9CBF4();
              if (v6 <= 0x3F)
              {
                sub_9CB90(319, (unint64_t *)&unk_2EDD68, type metadata accessor for TopLockupMetadataView.Footer, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PlaceholderTextView.ContentType);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_9CB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_9CBF4()
{
  if (!qword_2EDD60)
  {
    sub_7B0C(&qword_2EDCD0);
    unint64_t v0 = type metadata accessor for PlaceholderTextView.ContentType();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EDD60);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TopLockupMetadataView.Footer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26A220();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v24((char *)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v24((char *)a2 + v15, 1, v7))
    {
      uint64_t v18 = sub_4A98(&qword_2EA0C0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v16, (uint64_t *)v17, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v24(v21, 1, v7))
    {
      uint64_t v22 = sub_4A98(&qword_2EA0C0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v20, (uint64_t *)v21, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for TopLockupMetadataView.Footer(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4)) {
    v11(v6, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v7(v8, 1, v4)) {
    v11(v8, v4);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v4);
  }
  return result;
}

char *initializeWithCopy for TopLockupMetadataView.Footer(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v24 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v7;
  uint64_t v15 = *(int *)(v24 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v12(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v8(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(v24 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (v12(v21, 1, v6))
  {
    uint64_t v22 = sub_4A98(&qword_2EA0C0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v8(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for TopLockupMetadataView.Footer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v28(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v28(v9, v10, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v28(v16, v17, v6);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v11(&a1[v21], 1, v6);
  int v25 = v11(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      v28(v22, v23, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    uint64_t v26 = sub_4A98(&qword_2EA0C0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  return a1;
}

char *initializeWithTake for TopLockupMetadataView.Footer(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v24 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v7;
  uint64_t v15 = *(int *)(v24 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v12(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v8(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(v24 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (v12(v21, 1, v6))
  {
    uint64_t v22 = sub_4A98(&qword_2EA0C0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v8(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for TopLockupMetadataView.Footer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v28(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v28(v9, v10, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v28(v16, v17, v6);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v11(&a1[v21], 1, v6);
  int v25 = v11(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      v28(v22, v23, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    uint64_t v26 = sub_4A98(&qword_2EA0C0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v22, v23, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TopLockupMetadataView.Footer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9DD6C);
}

uint64_t sub_9DD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2EA0C0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for TopLockupMetadataView.Footer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9DE7C);
}

uint64_t sub_9DE7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_26A220();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_9DF84()
{
  sub_26A220();
  if (v0 <= 0x3F)
  {
    sub_9CB90(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_9E084()
{
  unint64_t result = qword_2EDE70;
  if (!qword_2EDE70)
  {
    sub_7B0C(&qword_2EDCC0);
    sub_9E124();
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDE70);
  }
  return result;
}

unint64_t sub_9E124()
{
  unint64_t result = qword_2EDE78;
  if (!qword_2EDE78)
  {
    sub_7B0C(&qword_2EDCB8);
    sub_7C18(&qword_2EDE80, &qword_2EDCB0);
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDE78);
  }
  return result;
}

uint64_t sub_9E1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TopLockupMetadataView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9E250(uint64_t a1)
{
  return sub_9E94C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_915A4);
}

uint64_t sub_9E268()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_9E2A0(uint64_t a1)
{
  return sub_8E5AC(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_9E2BC()
{
  uint64_t v1 = (int *)type metadata accessor for TopLockupMetadataView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_C374(*(void *)v3, *(unsigned char *)(v3 + 8));
  uint64_t v4 = v3 + v1[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + v1[7];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v9 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v11 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v3 + v1[8];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v3 + v1[9]), *(unsigned char *)(v3 + v1[9] + 8));
  swift_release();
  swift_release();
  uint64_t v14 = v3 + v1[11];
  sub_4A98(&qword_2ED2E0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v15 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = v3 + v1[12];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v17 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = v3 + v1[13];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v19 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = v3 + v1[14];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v21 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = v3 + v1[15];
  if (*(void *)(v22 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v22);
  }
  uint64_t v23 = v3 + v1[16];
  uint64_t v24 = sub_26CE50();
  uint64_t v25 = *(void *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  uint64_t v26 = v3 + v1[17];
  sub_4A98(&qword_2EDCA0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v27 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  uint64_t v28 = v3 + v1[18];
  sub_4A98(&qword_2EDCA8);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v29 = sub_26A220();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v31(v28, v29);
    uint64_t v32 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v33 = v28 + v32[5];
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    if (!v34(v33, 1, v29)) {
      v31(v33, v29);
    }
    uint64_t v35 = v28 + v32[6];
    if (!v34(v35, 1, v29)) {
      v31(v35, v29);
    }
    uint64_t v36 = v28 + v32[7];
    if (!v34(v36, 1, v29)) {
      v31(v36, v29);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_9E934(uint64_t a1)
{
  return sub_9E94C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_92448);
}

uint64_t sub_9E94C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for TopLockupMetadataView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_9E9E0(uint64_t a1)
{
  return sub_8E4A8(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_2EE0A8, (void (*)(uint64_t))sub_9FA50);
}

uint64_t sub_9EA1C(uint64_t a1)
{
  return sub_9E94C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_9372C);
}

uint64_t sub_9EA34(uint64_t a1)
{
  return sub_8E4A8(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_2EDFE0, (void (*)(uint64_t))sub_9EC90);
}

uint64_t sub_9EA6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_9EAD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_9EB38(uint64_t a1)
{
  return sub_9E94C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_93AAC);
}

uint64_t sub_9EB50(uint64_t a1)
{
  return sub_8E4A8(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_2EDF10, (void (*)(uint64_t))sub_9EB90);
}

unint64_t sub_9EB90()
{
  unint64_t result = qword_2EDF18;
  if (!qword_2EDF18)
  {
    sub_7B0C(&qword_2EDF10);
    sub_7B0C(&qword_2EDF20);
    sub_7C18(&qword_2EDF28, &qword_2EDF20);
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EC678, &qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDF18);
  }
  return result;
}

unint64_t sub_9EC90()
{
  unint64_t result = qword_2EDFE8;
  if (!qword_2EDFE8)
  {
    sub_7B0C(&qword_2EDFE0);
    sub_7C18(&qword_2EDFF0, &qword_2EDFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDFE8);
  }
  return result;
}

unint64_t sub_9ED30()
{
  unint64_t result = qword_2EE030;
  if (!qword_2EE030)
  {
    sub_7B0C(&qword_2EE020);
    sub_7C18(&qword_2EE038, &qword_2EE028);
    sub_7C18(&qword_2EE040, &qword_2EE008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE030);
  }
  return result;
}

unint64_t sub_9EDF0()
{
  unint64_t result = qword_2EE048;
  if (!qword_2EE048)
  {
    sub_7B0C(&qword_2EBFD0);
    sub_9EE90();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE048);
  }
  return result;
}

unint64_t sub_9EE90()
{
  unint64_t result = qword_2EE050;
  if (!qword_2EE050)
  {
    sub_7B0C(&qword_2EBFC8);
    sub_A00C4((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE050);
  }
  return result;
}

uint64_t sub_9EF60()
{
  uint64_t v1 = sub_26A220();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_9F01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_26A220() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_9790C(a1, v2 + v6, v8, v9, a2);
}

unint64_t sub_9F0D4()
{
  unint64_t result = qword_2EE060;
  if (!qword_2EE060)
  {
    sub_7B0C(&qword_2EE058);
    sub_9F180();
    sub_A00C4((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE060);
  }
  return result;
}

unint64_t sub_9F180()
{
  unint64_t result = qword_2EE068;
  if (!qword_2EE068)
  {
    sub_7B0C(&qword_2EE070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE068);
  }
  return result;
}

uint64_t sub_9F1EC()
{
  uint64_t v1 = sub_26A220();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (int *)type metadata accessor for TopLockupMetadataView(0);
  uint64_t v34 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  unint64_t v6 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v6(v0 + v3, v1);
  swift_release();
  swift_release();
  uint64_t v7 = v0 + ((v4 + v34 + 8) & ~v34);
  sub_C374(*(void *)v7, *(unsigned char *)(v7 + 8));
  uint64_t v8 = v7 + v5[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v10 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v7 + v5[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v7 + v5[7];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = v13 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v15 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = v7 + v5[8];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v7 + v5[9]), *(unsigned char *)(v7 + v5[9] + 8));
  swift_release();
  swift_release();
  unint64_t v18 = v7 + v5[11];
  sub_4A98(&qword_2ED2E0);
  if (!swift_getEnumCaseMultiPayload()) {
    v6(v18, v1);
  }
  unint64_t v19 = v7 + v5[12];
  if (!swift_getEnumCaseMultiPayload()) {
    v6(v19, v1);
  }
  unint64_t v20 = v7 + v5[13];
  if (!swift_getEnumCaseMultiPayload()) {
    v6(v20, v1);
  }
  unint64_t v21 = v7 + v5[14];
  if (!swift_getEnumCaseMultiPayload()) {
    v6(v21, v1);
  }
  uint64_t v22 = v7 + v5[15];
  if (*(void *)(v22 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v22);
  }
  uint64_t v23 = v7 + v5[16];
  uint64_t v24 = sub_26CE50();
  uint64_t v25 = *(void *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  unint64_t v26 = v7 + v5[17];
  sub_4A98(&qword_2EDCA0);
  if (!swift_getEnumCaseMultiPayload()) {
    v6(v26, v1);
  }
  unint64_t v27 = v7 + v5[18];
  sub_4A98(&qword_2EDCA8);
  if (!swift_getEnumCaseMultiPayload())
  {
    v6(v27, v1);
    uint64_t v28 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
    unint64_t v29 = v27 + v28[5];
    uint64_t v30 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48);
    if (!v30(v29, 1, v1)) {
      v6(v29, v1);
    }
    unint64_t v31 = v27 + v28[6];
    if (!v30(v31, 1, v1)) {
      v6(v31, v1);
    }
    unint64_t v32 = v27 + v28[7];
    if (!v30(v32, 1, v1)) {
      v6(v32, v1);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_9F7FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_26A220() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for TopLockupMetadataView(0) - 8);
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = v2
      + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_96F98(a1, v2 + v6, v9, v10, a2);
}

unint64_t sub_9F8FC()
{
  unint64_t result = qword_2EE080;
  if (!qword_2EE080)
  {
    sub_7B0C(&qword_2EE078);
    sub_9F9A8();
    sub_A00C4((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE080);
  }
  return result;
}

unint64_t sub_9F9A8()
{
  unint64_t result = qword_2EE088;
  if (!qword_2EE088)
  {
    sub_7B0C(&qword_2EE090);
    sub_9F180();
    sub_7C18(&qword_2EE098, &qword_2EE0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE088);
  }
  return result;
}

unint64_t sub_9FA50()
{
  unint64_t result = qword_2EE0B0;
  if (!qword_2EE0B0)
  {
    sub_7B0C(&qword_2EE0A8);
    sub_7B0C(&qword_2EE0B8);
    sub_7B0C(&qword_2EE0C0);
    sub_26B310();
    sub_7B0C(&qword_2EE0C8);
    sub_7C18(&qword_2EE0D0, &qword_2EE0C8);
    sub_9FC20();
    swift_getOpaqueTypeConformance2();
    sub_A00C4((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7B0C(&qword_2EDFE0);
    sub_9EC90();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE0B0);
  }
  return result;
}

unint64_t sub_9FC20()
{
  unint64_t result = qword_2EE0D8;
  if (!qword_2EE0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE0D8);
  }
  return result;
}

uint64_t sub_9FC74()
{
  uint64_t v1 = *(void *)(sub_4A98(&qword_2EDFE0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v0 + *(int *)(sub_4A98(&qword_2EE000) + 44) + v2;
  sub_4A98(&qword_2EE010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A160();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    sub_4A98(&qword_2EBFC8);
    swift_release();
    swift_release();
    sub_4A98(&qword_2EBFD0);
    swift_release();
    swift_release();
  }
  else
  {
    sub_4A98(&qword_2EE018);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v5 = &qword_2EE008;
    }
    else {
      uint64_t v5 = &qword_2EE028;
    }
    uint64_t v6 = sub_4A98(v5);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
  }

  return swift_deallocObject();
}

uint64_t sub_9FE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_4A98(&qword_2EDFE0) - 8);
  return sub_B678(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, &qword_2EDFE0);
}

uint64_t sub_9FECC()
{
  return type metadata accessor for TopLockupMetadataView(0);
}

uint64_t sub_9FED4@<X0>(uint64_t a1@<X8>)
{
  return sub_919B4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_9FEDC()
{
  unint64_t result = qword_2EE120;
  if (!qword_2EE120)
  {
    sub_7B0C(&qword_2EE118);
    sub_7C18(&qword_2EE128, &qword_2EE130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE120);
  }
  return result;
}

uint64_t sub_9FF7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_9FFB0(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for PressedButtonStyle()
{
  return &type metadata for PressedButtonStyle;
}

uint64_t sub_9FFF8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_A0018()
{
  unint64_t result = qword_2EE158;
  if (!qword_2EE158)
  {
    sub_7B0C(&qword_2EE150);
    sub_A00C4((unint64_t *)&qword_2EBF38, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE158);
  }
  return result;
}

uint64_t sub_A00C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ToolbarActionShareLinkMenuItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolbarActionShareLinkMenuItem() + 20);
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ToolbarActionShareLinkMenuItem()
{
  uint64_t result = qword_2EE1D8;
  if (!qword_2EE1D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ToolbarActionShareLinkMenuItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionShareLinkMenuItem() + 24));
}

uint64_t ToolbarActionShareLinkMenuItem.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionShareLinkMenuItem() + 28));
}

uint64_t ToolbarActionShareLinkMenuItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolbarActionShareLinkMenuItem() + 32);
  uint64_t v4 = sub_2696C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ToolbarActionShareLinkMenuItem.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2696C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_4A98(&qword_2EE160);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(v11 + 32), v3);
  uint64_t v18 = v1;
  sub_4A98(&qword_2EE168);
  sub_7C18(&qword_2EE170, &qword_2EE168);
  sub_26C750();
  char v12 = sub_A0708();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v12 & 1;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a1, v10, v7);
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2EE178) + 36));
  uint64_t *v15 = KeyPath;
  v15[1] = (uint64_t)sub_A0BD8;
  _OWORD v15[2] = v14;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_A0520()
{
  return sub_26C2B0();
}

uint64_t sub_A05DC()
{
  return sub_A0520();
}

uint64_t sub_A05E4(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 20), v2);
  return sub_26A170();
}

uint64_t sub_A06C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

uint64_t sub_A0708()
{
  uint64_t v1 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (void **)&v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v0 + *(int *)(v2 + 24)) != 1)
  {
    char v8 = 1;
    return v8 & 1;
  }
  int v5 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 28));
  sub_A1644(v0, (uint64_t)v4);
  if (v5 != 1)
  {
    char v8 = 0;
    goto LABEL_7;
  }
  uint64_t v6 = *v4;
  if (*v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    sub_26A590();

    swift_release();
    swift_release();
    char v8 = v10[15] ^ 1;
LABEL_7:
    sub_A16A8((uint64_t)v4);
    return v8 & 1;
  }
  type metadata accessor for ProfileRestrictions();
  sub_A1714((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t result = sub_26AD60();
  __break(1u);
  return result;
}

uint64_t sub_A087C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2696C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_4A98(&qword_2EE160);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + *(int *)(a1 + 32), v5);
  uint64_t v19 = v2;
  sub_4A98(&qword_2EE168);
  sub_7C18(&qword_2EE170, &qword_2EE168);
  sub_26C750();
  char v13 = sub_A0708();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v13 & 1;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 16))(a2, v12, v9);
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(sub_4A98(&qword_2EE178) + 36));
  *uint64_t v16 = KeyPath;
  v16[1] = (uint64_t)sub_A1760;
  void v16[2] = v15;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_A0B04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26B030();
  *a1 = result & 1;
  return result;
}

uint64_t sub_A0B34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26B030();
  *a1 = result & 1;
  return result;
}

uint64_t sub_A0B64()
{
  return sub_26B040();
}

uint64_t sub_A0B8C()
{
  return sub_26B040();
}

unsigned char *sub_A0BB4(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_A0BC8()
{
  return swift_deallocObject();
}

unsigned char *sub_A0BD8(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_A0BF0()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ToolbarActionShareLinkMenuItem(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_26A220();
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    char v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[7];
    v7[a3[6]] = *((unsigned char *)a2 + a3[6]);
    v7[v14] = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = &v7[v15];
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_2696C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v7;
}

uint64_t destroy for ToolbarActionShareLinkMenuItem(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_26A220();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_2696C0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for ToolbarActionShareLinkMenuItem(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_26A220();
  char v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_2696C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ToolbarActionShareLinkMenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_2696C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_OWORD *initializeWithTake for ToolbarActionShareLinkMenuItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26A220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_2696C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ToolbarActionShareLinkMenuItem(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26A220();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_2696C0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarActionShareLinkMenuItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A1214);
}

uint64_t sub_A1214(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_26A220();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_2696C0();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 32);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ToolbarActionShareLinkMenuItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A1360);
}

void *sub_A1360(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_2696C0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_A148C()
{
  uint64_t result = sub_26A220();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2696C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_A1570()
{
  unint64_t result = qword_2EE220;
  if (!qword_2EE220)
  {
    sub_7B0C(&qword_2EE178);
    sub_7C18(&qword_2EE228, &qword_2EE160);
    sub_7C18(&qword_2EC028, &qword_2EC030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE220);
  }
  return result;
}

uint64_t sub_A1634()
{
  return swift_deallocObject();
}

uint64_t sub_A1644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A16A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A170C()
{
  return sub_A05E4(*(void *)(v0 + 16));
}

uint64_t sub_A1714(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Font.Design.serifIfSupported.getter@<X0>(uint64_t a1@<X8>)
{
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v2 = sub_26B820();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = enum case for Font.Design.serif (_:);
    uint64_t v8 = sub_26B820();
    uint64_t v10 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a1, v7, v8);
    int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v4 = v8;
  }

  return v3(v5, v6, 1, v4);
}

uint64_t sub_A1880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_26DEF0();
    sub_26D4B0();
    Swift::Int v6 = sub_26DF20();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_26DDB0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_26DDB0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_A19B8()
{
  uint64_t result = sub_A19D8();
  qword_2EE230 = result;
  return result;
}

uint64_t sub_A19D8()
{
  sub_4A98(&qword_2EE240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  uint64_t result = kCTFontUIFontDesignTrait;
  if (kCTFontUIFontDesignTrait)
  {
    *(void *)(inited + 32) = sub_26D430();
    *(void *)(inited + 40) = v2;
    uint64_t result = kCTFontUIFontDesignSerif;
    if (kCTFontUIFontDesignSerif)
    {
      *(void *)(inited + 48) = sub_26D430();
      *(void *)(inited + 56) = v3;
      unint64_t v4 = sub_9368(inited);
      sub_4A98(&qword_2EE248);
      uint64_t v5 = swift_initStackObject();
      *(_OWORD *)(v5 + 16) = xmmword_26F990;
      *(void *)(v5 + 32) = sub_26D430();
      *(void *)(v5 + 40) = v6;
      *(void *)(v5 + 48) = v4;
      sub_948C(v5);
      sub_4A98(&qword_2EE250);
      CFDictionaryRef isa = sub_26D230().super.isa;
      swift_bridgeObjectRelease();
      unint64_t v8 = CTFontDescriptorCreateWithAttributes(isa);

      uint64_t v9 = CTFontCreateWithFontDescriptor(v8, 14.0, 0);
      CFArrayRef v10 = CTFontCopySupportedLanguages(v9);
      sub_26D600();

      uint64_t v11 = sub_13A4C0((uint64_t)&_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static Font.Design.defaultIfUnsupported.getter@<X0>(uint64_t a1@<X8>)
{
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v2 = enum case for Font.Design.default(_:);
    uint64_t v3 = sub_26B820();
    uint64_t v10 = *(void *)(v3 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a1, v2, v3);
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = sub_26B820();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v7 = v8;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }

  return v4(v5, v6, 1, v7);
}

uint64_t _s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0()
{
  uint64_t v0 = sub_4A98(&qword_2EE238);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2698E0();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_269870();
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_269890();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self standardUserDefaults];
  NSString v13 = sub_26D3F0();
  unsigned __int8 v14 = [v12 BOOLForKey:v13];

  if (v14)
  {
    char v15 = 1;
  }
  else
  {
    id v16 = [self mainBundle];
    id v17 = [v16 preferredLocalizations];

    uint64_t v18 = sub_26D610();
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_269860();
      sub_269850();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
      sub_2698D0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
      uint64_t v19 = v27;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v2, 1, v9) == 1)
      {
        sub_A20A0((uint64_t)v2);
        char v15 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v11, v2, v9);
        if (qword_2E9BE8 != -1) {
          swift_once();
        }
        uint64_t v20 = qword_2EE230;
        uint64_t v21 = sub_269880();
        LOBYTE(v20) = sub_A1880(v21, v22, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
        char v15 = v20 ^ 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      char v15 = 1;
    }
  }
  return v15 & 1;
}

ValueMetadata *type metadata accessor for FallBackFontSpec()
{
  return &type metadata for FallBackFontSpec;
}

uint64_t sub_A20A0(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EE238);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A2100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_269840();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_A216C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_A23CC();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.referenceId.getter()
{
  sub_A2218();

  return sub_26B0B0();
}

unint64_t sub_A2218()
{
  unint64_t result = qword_2EE258;
  if (!qword_2EE258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE258);
  }
  return result;
}

uint64_t View.referenceId(_:)()
{
  swift_getKeyPath();
  sub_26BCB0();

  return swift_release();
}

uint64_t sub_A22F0()
{
  return swift_getWitnessTable();
}

unint64_t sub_A2360()
{
  unint64_t result = qword_2EE268;
  if (!qword_2EE268)
  {
    sub_7B0C(&qword_2EE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE268);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferenceIdKey()
{
  return &type metadata for ReferenceIdKey;
}

unint64_t sub_A23CC()
{
  unint64_t result = qword_2EE270;
  if (!qword_2EE270)
  {
    sub_7B0C(&qword_2EBC78);
    sub_A2440();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE270);
  }
  return result;
}

unint64_t sub_A2440()
{
  unint64_t result = qword_2EE278;
  if (!qword_2EE278)
  {
    sub_269840();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE278);
  }
  return result;
}

uint64_t Metrics.Location.adamId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t Metrics.Location.artistName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Metrics.Location.artistName.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.fcKind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Metrics.Location.fcKind.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*Metrics.Location.id.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.idType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*Metrics.Location.idType.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.kind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t Metrics.Location.locationPosition.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t Metrics.Location.locationPosition.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*Metrics.Location.locationPosition.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.locationType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*Metrics.Location.locationType.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*Metrics.Location.name.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.narratorName.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.narratorName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*Metrics.Location.narratorName.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t Metrics.Location.narratorType.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Metrics.Location.narratorType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

int8x16_t Metrics.Location.init(adamId:artistName:fcKind:id:idType:isSG:kind:locationPosition:locationType:name:narratorName:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int8x16_t *a9@<X8>, unsigned __int8 *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned char *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19 = *a10;
  unint64_t v20 = 0xE600000000000000;
  uint64_t v21 = 0x6E6F74747562;
  switch(*a15)
  {
    case 1:
      uint64_t v21 = 0x6E6D756C6F63;
      break;
    case 2:
      uint64_t v21 = 0x7265746C6966;
      break;
    case 3:
      uint64_t v21 = 0x70756B636F6CLL;
      break;
    case 4:
      unint64_t v20 = 0xE700000000000000;
      uint64_t v21 = 0x77656976657270;
      break;
    case 5:
      unint64_t v20 = 0xE700000000000000;
      uint64_t v21 = 0x6E6F6974636573;
      break;
    case 6:
      uint64_t v21 = 0x68736F6F7773;
      break;
    default:
      break;
  }
  unsigned int v22 = v19 == 2;
  unsigned int v23 = (v19 & 1) == 0;
  uint64_t v24 = 0x696F56736B6F6F42;
  if ((a11 & 1) == 0) {
    uint64_t v24 = 0;
  }
  unint64_t v25 = 0xEB00000000736563;
  if ((a11 & 1) == 0) {
    unint64_t v25 = 0;
  }
  a9->i64[0] = a1;
  a9->i64[1] = a2;
  a9[1].i64[0] = a3;
  a9[1].i64[1] = a4;
  int32x2_t v26 = vdup_n_s32(v23);
  a9[2].i64[0] = a5;
  a9[2].i64[1] = a6;
  v27.i64[0] = v26.u32[0];
  v27.i64[1] = v26.u32[1];
  int8x16_t v28 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v27, 0x3FuLL)), (int8x16_t)xmmword_274780, (int8x16_t)xmmword_274770);
  int32x2_t v29 = vdup_n_s32(v22);
  a9[3].i64[0] = a7;
  a9[3].i64[1] = a8;
  v27.i64[0] = v29.u32[0];
  v27.i64[1] = v29.u32[1];
  int8x16_t result = vandq_s8(v28, (int8x16_t)vcgezq_s64(vshlq_n_s64(v27, 0x3FuLL)));
  a9[4] = result;
  a9[5].i64[0] = a12;
  a9[5].i64[1] = a13;
  a9[6].i64[0] = a14;
  a9[6].i8[8] = 0;
  a9[7].i64[0] = v21;
  a9[7].i64[1] = v20;
  a9[8].i64[0] = a16;
  a9[8].i64[1] = a17;
  a9[9].i64[0] = a18;
  a9[9].i64[1] = a19;
  a9[10].i64[0] = v24;
  a9[10].i64[1] = v25;
  return result;
}

uint64_t Metrics.LocationType.rawValue.getter()
{
  uint64_t result = 0x6E6F74747562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6D756C6F63;
      break;
    case 2:
      uint64_t result = 0x7265746C6966;
      break;
    case 3:
      uint64_t result = 0x70756B636F6CLL;
      break;
    case 4:
      uint64_t result = 0x77656976657270;
      break;
    case 5:
      uint64_t result = 0x6E6F6974636573;
      break;
    case 6:
      uint64_t result = 0x68736F6F7773;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A2A9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v7 = sub_4A98(&qword_2EE2C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v35 - v11;
  sub_4ADC(a1, a1[3]);
  uint64_t v13 = sub_26A030();
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  sub_4ADC(a1, a1[3]);
  uint64_t v15 = sub_269DB0();
  uint64_t v37 = v16;
  uint64_t v38 = v15;
  sub_C224((uint64_t)a1, (uint64_t)v44);
  uint64_t v17 = sub_4A98(&qword_2EE2C8);
  uint64_t v18 = sub_269E60();
  v35[1] = v17;
  char v19 = swift_dynamicCast();
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if (v19)
  {
    v21(v12, 0, 1, v18);
    int v36 = sub_269E50();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v18);
  }
  else
  {
    v21(v12, 1, 1, v18);
    sub_A500C((uint64_t)v12);
    int v36 = 0;
  }
  sub_4ADC(a1, a1[3]);
  sub_269F20();
  char v22 = sub_26A050();
  sub_C224((uint64_t)a1, (uint64_t)v44);
  if (swift_dynamicCast())
  {
    v21(v10, 0, 1, v18);
    sub_A506C();
    unsigned int v23 = (void *)sub_269DD0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v18);
    if (v23)
    {
      uint64_t v24 = sub_269D60();
      uint64_t v26 = v25;

      goto LABEL_9;
    }
  }
  else
  {
    v21(v10, 1, 1, v18);
    sub_A500C((uint64_t)v10);
  }
  uint64_t v24 = 0;
  uint64_t v26 = 0;
LABEL_9:
  *(_DWORD *)(a5 + 105) = *(_DWORD *)v44;
  if (v22) {
    unint64_t v27 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v27 = 0xE500000000000000;
  }
  uint64_t v28 = 0x6B6F6F6265;
  if (v22) {
    uint64_t v28 = 0x6F6F626F69647561;
  }
  *(_DWORD *)(a5 + 108) = *(_DWORD *)&v44[3];
  BOOL v29 = (v36 & 1) == 0;
  uint64_t v30 = 0x696F56736B6F6F42;
  if ((v36 & 1) == 0) {
    uint64_t v30 = 0;
  }
  unint64_t v31 = 0xEB00000000736563;
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  if (v29) {
    unint64_t v31 = 0;
  }
  uint64_t v32 = v39;
  *(void *)(a5 + 16) = v40;
  *(void *)(a5 + 24) = v32;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  uint64_t v33 = v37;
  *(void *)(a5 + 48) = v38;
  *(void *)(a5 + 56) = v33;
  *(_OWORD *)(a5 + 64) = xmmword_274780;
  *(void *)(a5 + 80) = v28;
  *(void *)(a5 + 88) = v27;
  *(void *)(a5 + 96) = v41;
  *(unsigned char *)(a5 + 104) = 0;
  *(void *)(a5 + 112) = 0x70756B636F6CLL;
  *(void *)(a5 + 120) = 0xE600000000000000;
  *(void *)(a5 + 128) = v42;
  *(void *)(a5 + 136) = v43;
  *(void *)(a5 + 144) = v24;
  *(void *)(a5 + 152) = v26;
  *(void *)(a5 + 160) = v30;
  *(void *)(a5 + 168) = v31;
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

double static Metrics.Location.genericButton.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_A2E88(0x6E6F74747562, 0xE600000000000000, a1);
}

double static Metrics.Location.genericSection.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_A2E88(0x6E6F6974636573, 0xE700000000000000, a1);
}

double sub_A2E88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = a1;
  *(void *)(a3 + 120) = a2;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  return result;
}

uint64_t static Metrics.Location.lockup(for:locationPosition:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_C224((uint64_t)a1, (uint64_t)v9);
  sub_4ADC(a1, a1[3]);
  uint64_t v6 = sub_26A020();
  return sub_A2A9C(v9, v6, v7, a2, a3);
}

uint64_t static Metrics.Location.buyButton(for:locationPosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_C224(a1, (uint64_t)v6);
  return sub_A2A9C(v6, 0x6C6C6950797562, 0xE700000000000000, a2, a3);
}

uint64_t sub_A2F9C(char a1)
{
  uint64_t result = 0x64496D616461;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x614E747369747261;
      break;
    case 2:
      uint64_t result = 0x646E694B6366;
      break;
    case 3:
      uint64_t result = 25705;
      break;
    case 4:
      uint64_t result = 0x657079546469;
      break;
    case 5:
      uint64_t result = 1684957547;
      break;
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    case 7:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 8:
      uint64_t result = 1701667182;
      break;
    case 9:
      uint64_t result = 0x726F74617272616ELL;
      break;
    case 10:
      uint64_t result = 0x726F74617272616ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A30D8()
{
  return sub_A2F9C(*v0);
}

uint64_t sub_A30E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A4BAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_A3108(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_A3114(uint64_t a1)
{
  unint64_t v2 = sub_A34D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A3150(uint64_t a1)
{
  unint64_t v2 = sub_A34D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Metrics.Location.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2EE280);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v33 = *(void *)(v1 + 24);
  uint64_t v34 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v31 = *(void *)(v1 + 40);
  uint64_t v32 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v29 = *(void *)(v1 + 56);
  uint64_t v30 = v9;
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v26 = *(void *)(v1 + 72);
  uint64_t v27 = v10;
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v24 = *(void *)(v1 + 88);
  uint64_t v25 = v11;
  uint64_t v12 = *(void *)(v1 + 96);
  int v23 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v13 = *(void *)(v1 + 112);
  uint64_t v22[5] = *(void *)(v1 + 120);
  v22[6] = v12;
  uint64_t v14 = *(void *)(v1 + 128);
  unint64_t v22[3] = *(void *)(v1 + 136);
  v22[4] = v13;
  v22[0] = *(void *)(v1 + 144);
  v22[1] = *(void *)(v1 + 152);
  _OWORD v22[2] = v14;
  uint64_t v15 = *(void *)(v1 + 168);
  uint64_t v28 = *(void *)(v1 + 160);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1;
  uint64_t v19 = v18;
  sub_4ADC(v17, v16);
  sub_A34D4();
  sub_26DFE0();
  char v46 = 0;
  uint64_t v20 = v35;
  sub_26DCE0();
  if (!v20)
  {
    uint64_t v35 = v15;
    char v45 = 1;
    sub_26DCE0();
    char v44 = 2;
    sub_26DCE0();
    char v43 = 3;
    sub_26DCE0();
    char v42 = 4;
    sub_26DCE0();
    char v41 = 5;
    sub_26DCE0();
    char v40 = 6;
    sub_26DCF0();
    char v39 = 7;
    sub_26DD10();
    char v38 = 8;
    sub_26DCE0();
    char v37 = 9;
    sub_26DCE0();
    char v36 = 10;
    sub_26DCE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

unint64_t sub_A34D4()
{
  unint64_t result = qword_2EE288;
  if (!qword_2EE288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE288);
  }
  return result;
}

uint64_t Metrics.Location.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v73 = sub_4A98(&qword_2EE290);
  uint64_t v5 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v100 = 1;
  sub_4ADC(a1, a1[3]);
  sub_A34D4();
  sub_26DFC0();
  uint64_t v74 = a1;
  if (v2)
  {
    uint64_t v101 = v2;
    uint64_t v75 = 0;
    int v10 = 0;
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v71 = a2;
    LOBYTE(v87[0]) = 0;
    uint64_t v9 = sub_26DC30();
    uint64_t v13 = v12;
    uint64_t v70 = v9;
    LOBYTE(v87[0]) = 1;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_26DC30();
    uint64_t v69 = v13;
    LOBYTE(v87[0]) = 2;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_26DC30();
    uint64_t v18 = v17;
    uint64_t v66 = v16;
    uint64_t v67 = v15;
    LOBYTE(v87[0]) = 3;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_26DC30();
    uint64_t v65 = v18;
    LOBYTE(v87[0]) = 4;
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_26DC30();
    uint64_t v63 = v20;
    LOBYTE(v87[0]) = 5;
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_26DC30();
    uint64_t v61 = v22;
    LOBYTE(v87[0]) = 6;
    uint64_t v24 = v23;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_26DC40();
    int v58 = v25;
    char v100 = v25 & 1;
    LOBYTE(v87[0]) = 7;
    uint64_t v57 = sub_26DC70();
    LOBYTE(v87[0]) = 8;
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_26DC30();
    uint64_t v101 = 0;
    uint64_t v72 = v27;
    LOBYTE(v87[0]) = 9;
    uint64_t v75 = v28;
    swift_bridgeObjectRetain();
    uint64_t v29 = v101;
    uint64_t v30 = sub_26DC30();
    uint64_t v101 = v29;
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = v30;
      uint64_t v33 = v31;
      char v98 = 10;
      swift_bridgeObjectRetain();
      uint64_t v34 = v101;
      uint64_t v55 = sub_26DC30();
      uint64_t v101 = v34;
      if (!v34)
      {
        uint64_t v36 = v35;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v73);
        uint64_t v52 = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&long long v76 = v70;
        *((void *)&v76 + 1) = v69;
        *(void *)&long long v77 = v68;
        *((void *)&v77 + 1) = v67;
        *(void *)&long long v78 = v66;
        *((void *)&v78 + 1) = v65;
        *(void *)&long long v79 = v64;
        *((void *)&v79 + 1) = v63;
        *(void *)&long long v80 = v62;
        *((void *)&v80 + 1) = v61;
        *(void *)&long long v81 = v60;
        *((void *)&v81 + 1) = v24;
        uint64_t v53 = v24;
        uint64_t v54 = v32;
        *(void *)&long long v82 = v59;
        BYTE8(v82) = v58 & 1;
        uint64_t v37 = v72;
        *(void *)&long long v83 = v57;
        *((void *)&v83 + 1) = v72;
        uint64_t v38 = v75;
        *(void *)&long long v84 = v56;
        *((void *)&v84 + 1) = v75;
        *(void *)&long long v85 = v32;
        *((void *)&v85 + 1) = v33;
        uint64_t v39 = v33;
        uint64_t v40 = v52;
        *(void *)&long long v86 = v55;
        *((void *)&v86 + 1) = v52;
        sub_A3E88((uint64_t)&v76);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = v63;
        swift_bridgeObjectRelease();
        uint64_t v42 = v61;
        swift_bridgeObjectRelease();
        uint64_t v43 = v53;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v45 = v85;
        char v46 = v71;
        v71[8] = v84;
        v46[9] = v45;
        v46[10] = v86;
        long long v47 = v81;
        v46[4] = v80;
        v46[5] = v47;
        long long v48 = v83;
        v46[6] = v82;
        v46[7] = v48;
        long long v49 = v77;
        *char v46 = v76;
        v46[1] = v49;
        long long v50 = v79;
        v46[2] = v78;
        v46[3] = v50;
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v74);
        v87[0] = v70;
        v87[1] = v69;
        v87[2] = v68;
        v87[3] = v67;
        v87[4] = v66;
        v87[5] = v65;
        v87[6] = v64;
        v87[7] = v41;
        v87[8] = v62;
        v87[9] = v42;
        v87[10] = v60;
        v87[11] = v43;
        v87[12] = v59;
        char v88 = v100;
        *(_DWORD *)uint64_t v89 = *(_DWORD *)v99;
        *(_DWORD *)&v89[3] = *(_DWORD *)&v99[3];
        uint64_t v90 = v57;
        uint64_t v91 = v37;
        uint64_t v92 = v56;
        uint64_t v93 = v38;
        uint64_t v94 = v54;
        uint64_t v95 = v44;
        uint64_t v96 = v55;
        uint64_t v97 = v40;
        return sub_A3F40((uint64_t)v87);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v10 = 1;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_A3E88(uint64_t a1)
{
  return a1;
}

uint64_t sub_A3F40(uint64_t a1)
{
  return a1;
}

uint64_t sub_A3FF8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return Metrics.Location.init(from:)(a1, a2);
}

uint64_t sub_A4010(void *a1)
{
  return Metrics.Location.encode(to:)(a1);
}

uint64_t Metrics.LocationType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_2DB500;
  v9._object = a2;
  unint64_t v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 7;
  if (v6 < 7) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

unint64_t sub_A4084(uint64_t a1)
{
  unint64_t result = sub_A40AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_A40AC()
{
  unint64_t result = qword_2EE298;
  if (!qword_2EE298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE298);
  }
  return result;
}

uint64_t sub_A4100(unsigned __int8 *a1, char *a2)
{
  return sub_1089F8(*a1, *a2);
}

unint64_t sub_A4110()
{
  unint64_t result = qword_2EE2A0;
  if (!qword_2EE2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE2A0);
  }
  return result;
}

Swift::Int sub_A4164()
{
  return sub_181C10();
}

uint64_t sub_A4170()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_A4264()
{
  return sub_181C10();
}

uint64_t sub_A426C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Metrics.LocationType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_A4278(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E6F74747562;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6E6D756C6F63;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265746C6966;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x70756B636F6CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x77656976657270;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x6E6F6974636573;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 0x68736F6F7773;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE600000000000000;
      break;
  }
}

uint64_t _s8LocationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s8LocationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8LocationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v4;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s8LocationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t _s8LocationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8LocationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 120);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8LocationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 120) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.Location()
{
  return &type metadata for Metrics.Location;
}

unsigned char *_s12LocationTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA48D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.LocationType()
{
  return &type metadata for Metrics.LocationType;
}

uint64_t _s8LocationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8LocationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA4A6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8LocationV10CodingKeysOMa()
{
  return &_s8LocationV10CodingKeysON;
}

unint64_t sub_A4AA8()
{
  unint64_t result = qword_2EE2A8;
  if (!qword_2EE2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE2A8);
  }
  return result;
}

unint64_t sub_A4B00()
{
  unint64_t result = qword_2EE2B0;
  if (!qword_2EE2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE2B0);
  }
  return result;
}

unint64_t sub_A4B58()
{
  unint64_t result = qword_2EE2B8;
  if (!qword_2EE2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE2B8);
  }
  return result;
}

uint64_t sub_A4BAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496D616461 && a2 == 0xE600000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E694B6366 && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657079546469 && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002881E0 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F74617272616ELL && a2 == 0xEC000000656D614ELL || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726F74617272616ELL && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_A500C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EE2C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_A506C()
{
  unint64_t result = qword_2EE2D0;
  if (!qword_2EE2D0)
  {
    sub_269E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE2D0);
  }
  return result;
}

uint64_t ToolbarButtonStyle.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);

  return swift_storeEnumTagMultiPayload();
}

uint64_t ToolbarButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v93 = a2;
  uint64_t v2 = sub_26C5F0();
  uint64_t v82 = *(void *)(v2 - 8);
  uint64_t v83 = v2;
  __chkstk_darwin(v2);
  long long v81 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_4A98(&qword_2EE2D8);
  __chkstk_darwin(v79);
  long long v84 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26C700();
  uint64_t v75 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  __chkstk_darwin(v5);
  uint64_t v74 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_4A98(&qword_2EE2E0);
  __chkstk_darwin(v72);
  long long v78 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_4A98(&qword_2EE2E8);
  __chkstk_darwin(v73);
  long long v80 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_4A98(&qword_2EE2F0);
  uint64_t v9 = __chkstk_darwin(v92);
  uint64_t v77 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v85 = (uint64_t)&v67 - v11;
  uint64_t v90 = sub_4A98(&qword_2EE2F8);
  __chkstk_darwin(v90);
  uint64_t v91 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EE300);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_26B520();
  uint64_t v16 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2EE308);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_4A98(&qword_2EE310);
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_4A98(&qword_2EE318);
  uint64_t v24 = __chkstk_darwin(v89);
  uint64_t v69 = (uint64_t)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v71 = (uint64_t)&v67 - v26;
  uint64_t v27 = sub_26A6E0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v67 - v32;
  sub_40FB4((uint64_t)&v67 - v32);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v31, enum case for ColorScheme.light(_:), v27);
  int v86 = sub_26A6D0();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v28 + 8);
  v34(v31, v27);
  v34(v33, v27);
  uint64_t v35 = (uint64_t)v22;
  sub_26B530();
  sub_26B1E0();
  uint64_t v36 = sub_26B1F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 0, 1, v36);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = (uint64_t *)&v22[*(int *)(v20 + 44)];
  uint64_t v39 = sub_4A98(&qword_2EE320);
  sub_B678((uint64_t)v15, (uint64_t)v38 + *(int *)(v39 + 28), &qword_2EE300);
  *uint64_t v38 = KeyPath;
  uint64_t v40 = v87;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v18, v87);
  sub_B6DC((uint64_t)v15, &qword_2EE300);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v40);
  int v41 = sub_26B450();
  if (v86)
  {
    int v42 = sub_26B440();
    uint64_t v43 = v70;
    sub_B678((uint64_t)v22, v70, &qword_2EE308);
    uint64_t v44 = (_DWORD *)(v43 + *(int *)(v68 + 36));
    *uint64_t v44 = v41;
    v44[1] = 1055286886;
    void v44[2] = v42;
    v44[3] = 1051931443;
    sub_B6DC((uint64_t)v22, &qword_2EE308);
    uint64_t v45 = sub_26B8F0();
    uint64_t v46 = swift_getKeyPath();
    uint64_t v47 = v69;
    sub_B678(v43, v69, &qword_2EE310);
    long long v48 = (uint64_t *)(v47 + *(int *)(v89 + 36));
    *long long v48 = v46;
    v48[1] = v45;
    sub_B6DC(v43, &qword_2EE310);
    long long v49 = &qword_2EE318;
    uint64_t v50 = v71;
    sub_19CC4(v47, v71, &qword_2EE318);
    sub_B678(v50, v91, &qword_2EE318);
  }
  else
  {
    uint64_t v52 = v74;
    uint64_t v51 = v75;
    uint64_t v53 = v76;
    (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for BlendMode.lighten(_:), v76);
    uint64_t v54 = v78;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v78[*(int *)(v72 + 36)], v52, v53);
    *uint64_t v54 = v41;
    v54[1] = 1061997773;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    uint64_t v55 = v81;
    sub_26C5E0();
    uint64_t v57 = v82;
    uint64_t v56 = v83;
    uint64_t v58 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v84, v55, v83);
    *(_DWORD *)(v58 + *(int *)(v79 + 36)) = 1058642330;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
    uint64_t v59 = (uint64_t)v80;
    uint64_t v60 = (uint64_t)&v80[*(int *)(v73 + 36)];
    sub_B678((uint64_t)v54, v60, &qword_2EE2E0);
    uint64_t v61 = sub_4A98(&qword_2EE328);
    sub_B678(v58, v60 + *(int *)(v61 + 52), &qword_2EE2D8);
    sub_B678(v35, v59, &qword_2EE308);
    sub_B6DC(v58, &qword_2EE2D8);
    sub_B6DC((uint64_t)v54, &qword_2EE2E0);
    sub_B6DC(v35, &qword_2EE308);
    uint64_t v62 = sub_26B8F0();
    uint64_t v63 = swift_getKeyPath();
    uint64_t v64 = v77;
    sub_B678(v59, v77, &qword_2EE2E8);
    uint64_t v65 = (uint64_t *)(v64 + *(int *)(v92 + 36));
    *uint64_t v65 = v63;
    v65[1] = v62;
    sub_B6DC(v59, &qword_2EE2E8);
    long long v49 = &qword_2EE2F0;
    uint64_t v50 = v85;
    sub_19CC4(v64, v85, &qword_2EE2F0);
    sub_B678(v50, v91, &qword_2EE2F0);
  }
  swift_storeEnumTagMultiPayload();
  sub_A5EE4(&qword_2EE330, &qword_2EE318, (void (*)(void))sub_A5D4C);
  sub_A5EE4(&qword_2EE360, &qword_2EE2F0, (void (*)(void))sub_A5F88);
  sub_26B2F0();
  return sub_B6DC(v50, v49);
}

uint64_t sub_A5BE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26B010();
  *a1 = result;
  return result;
}

uint64_t sub_A5C0C()
{
  return sub_26B020();
}

uint64_t sub_A5C38()
{
  return sub_26AF80();
}

uint64_t sub_A5C5C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EE300);
  __chkstk_darwin(v2 - 8);
  sub_B678(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2EE300);
  return sub_26AF90();
}

uint64_t sub_A5CF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26B010();
  *a1 = result;
  return result;
}

uint64_t sub_A5D20()
{
  return sub_26B020();
}

unint64_t sub_A5D4C()
{
  unint64_t result = qword_2EE338;
  if (!qword_2EE338)
  {
    sub_7B0C(&qword_2EE310);
    sub_A5DEC();
    sub_7C18(&qword_2EE350, &qword_2EE358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE338);
  }
  return result;
}

unint64_t sub_A5DEC()
{
  unint64_t result = qword_2EE340;
  if (!qword_2EE340)
  {
    sub_7B0C(&qword_2EE308);
    sub_A5E8C();
    sub_7C18(&qword_2EE348, &qword_2EE320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE340);
  }
  return result;
}

unint64_t sub_A5E8C()
{
  unint64_t result = qword_2EBF38;
  if (!qword_2EBF38)
  {
    sub_26B520();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBF38);
  }
  return result;
}

uint64_t sub_A5EE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_A5F88()
{
  unint64_t result = qword_2EE368;
  if (!qword_2EE368)
  {
    sub_7B0C(&qword_2EE2E8);
    sub_A5DEC();
    sub_7C18(&qword_2EE370, &qword_2EE328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE368);
  }
  return result;
}

uint64_t sub_A6028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolbarButtonStyle(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_4A98(&qword_2EA970) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolbarButtonStyle(uint64_t a1)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_26A6E0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for ToolbarButtonStyle(void *a1, void *a2)
{
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ToolbarButtonStyle(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ToolbarButtonStyle(void *a1, const void *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ToolbarButtonStyle(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA970);
    uint64_t v4 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A6538);
}

uint64_t sub_A6538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EAB20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ToolbarButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A65BC);
}

uint64_t sub_A65BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EAB20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ToolbarButtonStyle()
{
  uint64_t result = qword_2EE3D0;
  if (!qword_2EE3D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_A667C()
{
  sub_5501C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_A670C()
{
  unint64_t result = qword_2EE408;
  if (!qword_2EE408)
  {
    sub_7B0C(&qword_2EE410);
    sub_A5EE4(&qword_2EE330, &qword_2EE318, (void (*)(void))sub_A5D4C);
    sub_A5EE4(&qword_2EE360, &qword_2EE2F0, (void (*)(void))sub_A5F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE408);
  }
  return result;
}

uint64_t sub_A67D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a4 + *(int *)(sub_4A98(qword_2EE450) + 48);
  sub_AF6BC(a1, a4, type metadata accessor for ButtonViewModel.Content);
  sub_AF6BC(a2, v8, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v9 = type metadata accessor for ModalActionSheet.Buttons();
  return sub_19CC4(a3, a4 + *(int *)(v9 + 36), &qword_2EE418);
}

uint64_t ModalActionSheet.init(buttons:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ModalActionSheet.Buttons();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  uint64_t v9 = type metadata accessor for ModalActionSheet();
  uint64_t v10 = (uint64_t *)(a4 + *(int *)(v9 + 40));
  uint64_t *v10 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = sub_26D980();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(a4, a1, v11);
  uint64_t v13 = (void *)(a4 + *(int *)(v9 + 36));
  *uint64_t v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for ModalActionSheet.Buttons()
{
  return sub_129B4();
}

uint64_t type metadata accessor for ModalActionSheet()
{
  return sub_129B4();
}

uint64_t ModalActionSheet.init(buttonContent:buttonAction:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v7 = sub_4A98(&qword_2EE418);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(a5, 1, 1, v10);
  uint64_t v12 = type metadata accessor for ModalActionSheet();
  uint64_t v13 = (uint64_t *)(a5 + *(int *)(v12 + 40));
  *uint64_t v13 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = sub_26D980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a5, v14);
  uint64_t v15 = sub_4A98(&qword_2EE420);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  sub_A67D0(a1, v20, (uint64_t)v9, a5);
  uint64_t result = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a5, 0, 1, v10);
  uint64_t v17 = (void *)(a5 + *(int *)(v12 + 36));
  uint64_t v18 = v22;
  *uint64_t v17 = v21;
  v17[1] = v18;
  return result;
}

uint64_t ModalActionSheet.init<A>(buttonTitle:buttonActionModel:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v44 = a6;
  uint64_t v45 = a8;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v12 = sub_4A98(&qword_2EE418);
  __chkstk_darwin(v12 - 8);
  uint64_t v47 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v43);
  uint64_t v15 = (void *)((char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = a5;
  v37[1] = a7;
  uint64_t v19 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v42 = sub_26D980();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v21 = (char *)v37 - v20;
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v38 = a9;
  uint64_t v39 = v22;
  v22(a9, 1, 1, v19);
  uint64_t v23 = type metadata accessor for ModalActionSheet();
  uint64_t v24 = (uint64_t *)&a9[*(int *)(v23 + 40)];
  *uint64_t v24 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = sub_26A220();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v18, v41, v25);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v44;
  uint64_t v28 = v45;
  v15[3] = v44;
  v15[4] = v28;
  uint64_t v30 = sub_CA1C(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v30, v46, v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = sub_4A98(&qword_2EE420);
  uint64_t v32 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v47, 1, 1, v31);
  sub_A67D0((uint64_t)v18, (uint64_t)v15, v32, (uint64_t)v21);
  v39(v21, 0, 1, v19);
  uint64_t v33 = v38;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v40 + 40))(v38, v21, v42);
  uint64_t v35 = &v33[*(int *)(v23 + 36)];
  uint64_t v36 = v49;
  *(void *)uint64_t v35 = v48;
  *((void *)v35 + 1) = v36;
  return result;
}

uint64_t ModalActionSheet.init<A, B>(firstButtonTitle:firstButtonActionModel:secondButtonTitle:secondButtonActionModel:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v71 = a6;
  uint64_t v72 = a8;
  uint64_t v69 = a4;
  uint64_t v70 = a5;
  uint64_t v67 = a3;
  uint64_t v63 = a2;
  uint64_t v51 = a1;
  uint64_t v68 = a13;
  uint64_t v56 = a12;
  uint64_t v66 = a10;
  uint64_t v16 = sub_4A98(&qword_2EE418);
  __chkstk_darwin(v16 - 8);
  uint64_t v62 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a7;
  uint64_t v54 = a11;
  uint64_t v24 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v25 = sub_26D980();
  uint64_t v64 = *(void *)(v25 - 8);
  uint64_t v65 = v25;
  __chkstk_darwin(v25);
  uint64_t v57 = (uint64_t)&v50 - v26;
  uint64_t v59 = v24;
  uint64_t v27 = *(void *)(v24 - 8);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v60 = v27 + 56;
  uint64_t v55 = a9;
  v58(a9, 1, 1, v24);
  uint64_t v61 = type metadata accessor for ModalActionSheet();
  uint64_t v28 = (uint64_t *)(a9 + *(int *)(v61 + 40));
  *uint64_t v28 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = sub_26A220();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v52 = v23;
  v31(v23, a1, v29);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v72;
  uint64_t v33 = v56;
  void v20[3] = v72;
  void v20[4] = v33;
  uint64_t v50 = v20;
  uint64_t v34 = sub_CA1C(v20);
  uint64_t v35 = *(void *)(v32 - 8);
  uint64_t v36 = v63;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 16))(v34, v63, v32);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = sub_4A98(&qword_2EE420);
  uint64_t v38 = (uint64_t)v62;
  uint64_t v39 = (uint64_t *)&v62[*(int *)(v37 + 48)];
  uint64_t v40 = v67;
  v31(v62, v67, v29);
  uint64_t v41 = v66;
  uint64_t v42 = v68;
  _OWORD v39[3] = v66;
  v39[4] = v42;
  uint64_t v43 = sub_CA1C(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v43, v69, v41);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v44(v40, v29);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v72);
  v44(v51, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v38, 0, 1, v37);
  uint64_t v45 = v57;
  sub_A67D0((uint64_t)v52, (uint64_t)v50, v38, v57);
  v58(v45, 0, 1, v59);
  uint64_t v46 = v55;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 40))(v55, v45, v65);
  uint64_t v48 = (void *)(v46 + *(int *)(v61 + 36));
  uint64_t v49 = v71;
  *uint64_t v48 = v70;
  v48[1] = v49;
  return result;
}

uint64_t ModalActionSheet.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  sub_7B0C(&qword_2EE428);
  swift_getTupleTypeMetadata3();
  sub_26C770();
  swift_getWitnessTable();
  uint64_t v9 = sub_26C440();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_26ABD0();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v32 = a1;
  uint64_t v33 = v2;
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v36 = v8;
  uint64_t v37 = v18;
  uint64_t v38 = v2;
  sub_26B1C0();
  sub_26C430();
  unsigned __int8 v19 = sub_26B790();
  unsigned __int8 v20 = sub_26B7B0();
  unsigned __int8 v21 = sub_26B770();
  sub_26B7A0();
  sub_26B7A0();
  if (sub_26B7A0() != v19) {
    sub_26B7A0();
  }
  sub_26B7A0();
  if (sub_26B7A0() != v20) {
    sub_26B7A0();
  }
  sub_26B7A0();
  if (sub_26B7A0() != v21) {
    sub_26B7A0();
  }
  uint64_t v22 = v30;
  sub_41378(v30);
  uint64_t v23 = v34;
  sub_AF724(v22, v34, type metadata accessor for SizeConstants.Environment);
  sub_AF830(v22, type metadata accessor for SizeConstants);
  sub_AF830(v23, type metadata accessor for SizeConstants.Spacing);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_26C000();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  uint64_t v39 = WitnessTable;
  uint64_t v40 = &protocol witness table for _PaddingLayout;
  uint64_t v25 = swift_getWitnessTable();
  sub_CCCC(v15, v12, v25);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v15, v12);
  sub_CCCC(v17, v12, v25);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v12);
}

uint64_t sub_A7950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v135 = a4;
  uint64_t v122 = sub_4A98(&qword_2EE560);
  uint64_t v7 = __chkstk_darwin(v122);
  uint64_t v102 = (uint64_t *)((char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v104 = (uint64_t)&v99 - v9;
  uint64_t v120 = sub_4A98(&qword_2EE568);
  __chkstk_darwin(v120);
  uint64_t v121 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_26B980();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_4A98(qword_2EE450);
  uint64_t v12 = __chkstk_darwin(v101);
  uint64_t v117 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v116 = (uint64_t)&v99 - v14;
  uint64_t v103 = type metadata accessor for ButtonViewModel(0);
  __chkstk_darwin(v103);
  uint64_t v106 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for ButtonView();
  __chkstk_darwin(v105);
  uint64_t v111 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2EE570);
  uint64_t v17 = __chkstk_darwin(v119);
  uint64_t v107 = (uint64_t)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v112 = (uint64_t)&v99 - v19;
  uint64_t v20 = sub_4A98(&qword_2EE418);
  __chkstk_darwin(v20 - 8);
  uint64_t v115 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_4A98(&qword_2EE420);
  unint64_t v113 = *(void *)(v114 - 8);
  uint64_t v22 = __chkstk_darwin(v114);
  uint64_t v99 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v100 = (char *)&v99 - v24;
  uint64_t v125 = sub_4A98(&qword_2EE578);
  uint64_t v133 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v118 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v124 = sub_26D980();
  uint64_t v123 = *(char **)(v124 - 8);
  uint64_t v27 = __chkstk_darwin(v124);
  uint64_t v29 = (char *)&v99 - v28;
  uint64_t v138 = *(void *)(v26 - 8);
  __chkstk_darwin(v27);
  uint64_t v137 = (uint64_t)&v99 - v30;
  uint64_t v130 = sub_4A98(&qword_2EE428);
  uint64_t v31 = __chkstk_darwin(v130);
  uint64_t v132 = (uint64_t)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v99 - v34;
  uint64_t v36 = *(void *)(a2 - 8);
  uint64_t v37 = __chkstk_darwin(v33);
  uint64_t v39 = (char *)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v99 - v40;
  uint64_t v42 = type metadata accessor for ModalActionSheet();
  (*(void (**)(void))(a1 + *(int *)(v42 + 36)))();
  uint64_t v43 = v138;
  uint64_t v129 = v41;
  uint64_t v44 = (uint64_t)v123;
  uint64_t v134 = a3;
  sub_CCCC(v39, a2, a3);
  uint64_t v126 = v36;
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
  uint64_t v131 = v39;
  uint64_t v136 = a2;
  uint64_t v46 = a2;
  uint64_t v47 = v124;
  uint64_t v128 = v36 + 8;
  uint64_t v127 = v45;
  v45(v39, v46);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v29, a1, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v29, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v47);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v35, 1, 1, v125);
    uint64_t v48 = v134;
  }
  else
  {
    uint64_t v123 = v35;
    uint64_t v49 = v137;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v137, v29, v26);
    uint64_t v124 = v26;
    uint64_t v50 = v49 + *(int *)(v26 + 36);
    uint64_t v51 = v115;
    sub_B678(v50, v115, &qword_2EE418);
    uint64_t v52 = v114;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v51, 1, v114) == 1)
    {
      sub_B6DC(v51, &qword_2EE418);
      uint64_t v53 = v101;
      uint64_t v54 = *(int *)(v101 + 48);
      uint64_t v55 = v137;
      uint64_t v56 = v137 + v54;
      uint64_t v57 = v116 + v54;
      uint64_t v115 = v116 + v54;
      sub_AF724(v137, v116, type metadata accessor for ButtonViewModel.Content);
      sub_AF724(v56, v57, type metadata accessor for ButtonViewModel.ActionKind);
      uint64_t v114 = v117 + *(int *)(v53 + 48);
      uint64_t v58 = v114;
      sub_AF724(v55, v117, type metadata accessor for ButtonViewModel.Content);
      sub_AF724(v56, v58, type metadata accessor for ButtonViewModel.ActionKind);
      *(void *)&long long v146 = 0x403C000000000000;
      uint64_t v59 = enum case for Font.TextStyle.subheadline(_:);
      uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 104);
      uint64_t v61 = v108;
      uint64_t v62 = v110;
      v60(v108, enum case for Font.TextStyle.subheadline(_:), v110);
      unint64_t v63 = sub_4F928();
      uint64_t v64 = (uint64_t)v106;
      unint64_t v113 = v63;
      sub_26A810();
      uint64_t v65 = (int *)v103;
      *(void *)&long long v146 = 0x4008000000000000;
      v60(v61, v59, v62);
      sub_26A810();
      uint64_t v66 = (uint64_t *)(v64 + v65[6]);
      *uint64_t v66 = swift_getKeyPath();
      sub_4A98(&qword_2EA968);
      swift_storeEnumTagMultiPayload();
      uint64_t v67 = v64 + v65[14];
      uint64_t v68 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
      *(unsigned char *)(v64 + v65[7]) = 1;
      *(unsigned char *)(v64 + v65[8]) = 1;
      *(unsigned char *)(v64 + v65[9]) = 0;
      uint64_t v69 = (void *)(v64 + v65[10]);
      *uint64_t v69 = 1;
      v69[1] = 0;
      v69[2] = 0;
      v69[3] = 0;
      sub_AF6BC(v116, v64 + v65[11], type metadata accessor for ButtonViewModel.Content);
      *(unsigned char *)(v64 + v65[12]) = 1;
      sub_AF6BC(v114, v64 + v65[13], type metadata accessor for ButtonViewModel.ActionKind);
      sub_AF830(v117, type metadata accessor for ButtonViewModel.Content);
      sub_AF830(v115, type metadata accessor for ButtonViewModel.ActionKind);
      *(void *)&long long v146 = 0x4020000000000000;
      v60(v61, v59, v62);
      uint64_t v70 = (uint64_t)v111;
      sub_26A810();
      uint64_t v71 = v105;
      *(void *)&long long v146 = 0x3FF8000000000000;
      v60(v61, v59, v62);
      sub_26A810();
      uint64_t v72 = (uint64_t *)(v70 + *(int *)(v71 + 24));
      *uint64_t v72 = swift_getKeyPath();
      sub_4A98(&qword_2EBCD8);
      swift_storeEnumTagMultiPayload();
      sub_AF6BC(v64, v70 + *(int *)(v71 + 28), type metadata accessor for ButtonViewModel);
      _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_26A8D0();
      uint64_t v73 = v107;
      sub_AF724(v70, v107, (uint64_t (*)(void))type metadata accessor for ButtonView);
      uint64_t v74 = (_OWORD *)(v73 + *(int *)(v119 + 36));
      long long v75 = v147;
      *uint64_t v74 = v146;
      v74[1] = v75;
      v74[2] = v148;
      sub_AF830(v70, (uint64_t (*)(void))type metadata accessor for ButtonView);
      uint64_t v76 = v112;
      sub_19CC4(v73, v112, &qword_2EE570);
      sub_B678(v76, v121, &qword_2EE570);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EE590, &qword_2EE560);
      sub_AF604();
      uint64_t v77 = (uint64_t)v118;
      sub_26B2F0();
      sub_B6DC(v76, &qword_2EE570);
      uint64_t v48 = v134;
    }
    else
    {
      uint64_t v78 = *(int *)(v52 + 48);
      uint64_t v79 = (uint64_t)v100;
      uint64_t v80 = (uint64_t)&v100[v78];
      long long v81 = (long long *)(v51 + v78);
      uint64_t v82 = sub_26A220();
      uint64_t v83 = *(void *)(v82 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v79, v51, v82);
      sub_AD44(v81, v80);
      uint64_t v84 = (uint64_t)v99;
      uint64_t v85 = (uint64_t)&v99[*(int *)(v52 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v99, v79, v82);
      sub_C224(v80, v85);
      uint64_t v86 = sub_26B1C0();
      uint64_t v87 = v102;
      *uint64_t v102 = v86;
      v87[1] = 0x4014000000000000;
      *((unsigned char *)v87 + 16) = 0;
      uint64_t v88 = sub_4A98(&qword_2EE5A0);
      uint64_t v48 = v134;
      sub_A8A58(v137, v84, (uint64_t)v87 + *(int *)(v88 + 44));
      sub_B6DC(v84, &qword_2EE420);
      uint64_t v89 = (uint64_t)v87;
      uint64_t v90 = v104;
      sub_19CC4(v89, v104, &qword_2EE560);
      sub_B678(v90, v121, &qword_2EE560);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2EE590, &qword_2EE560);
      sub_AF604();
      uint64_t v77 = (uint64_t)v118;
      sub_26B2F0();
      sub_B6DC(v90, &qword_2EE560);
      sub_B6DC(v79, &qword_2EE420);
    }
    uint64_t v91 = v125;
    uint64_t v92 = v133;
    uint64_t v35 = v123;
    sub_19CC4(v77, (uint64_t)v123, &qword_2EE578);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v35, 0, 1, v91);
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v137, v124);
  }
  uint64_t v93 = v131;
  uint64_t v94 = v129;
  uint64_t v95 = v136;
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v131, v129, v136);
  v145[0] = v93;
  uint64_t v96 = v132;
  sub_B678((uint64_t)v35, v132, &qword_2EE428);
  uint64_t v143 = 0;
  char v144 = 1;
  v145[1] = v96;
  v145[2] = &v143;
  v142[0] = v95;
  v142[1] = v130;
  v142[2] = &type metadata for Spacer;
  uint64_t v139 = v48;
  unint64_t v140 = sub_AF4F0();
  uint64_t v141 = &protocol witness table for Spacer;
  sub_1212DC((uint64_t)v145, 3uLL, (uint64_t)v142);
  sub_B6DC((uint64_t)v35, &qword_2EE428);
  uint64_t v97 = v127;
  v127(v94, v95);
  sub_B6DC(v96, &qword_2EE428);
  return v97(v93, v95);
}

uint64_t sub_A8A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v123 = a3;
  uint64_t v116 = type metadata accessor for BooksBorderlessButtonStyle(0);
  __chkstk_darwin(v116);
  uint64_t v115 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269BA0();
  __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EE420);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v107 = v7 - 8;
  uint64_t v112 = v8;
  uint64_t v111 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v108 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v106 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_4A98(&qword_2EE5A8);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EE5B0);
  uint64_t v121 = *(void *)(v13 - 8);
  uint64_t v122 = v13;
  __chkstk_darwin(v13);
  uint64_t v117 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2EE5B8) - 8;
  uint64_t v15 = __chkstk_darwin(v119);
  uint64_t v118 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v120 = (uint64_t)&v93 - v17;
  uint64_t v96 = sub_26B980();
  uint64_t v105 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(qword_2EE450);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = type metadata accessor for ButtonViewModel(0);
  uint64_t v28 = (int *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for ButtonView() - 8;
  __chkstk_darwin(v101);
  char v98 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_4A98(&qword_2EE570) - 8;
  uint64_t v32 = __chkstk_darwin(v103);
  uint64_t v102 = (uint64_t)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v104 = (uint64_t)&v93 - v34;
  uint64_t v35 = *(int *)(v21 + 56);
  uint64_t v36 = (uint64_t)v26;
  uint64_t v94 = v26;
  uint64_t v37 = (uint64_t)&v26[v35];
  uint64_t v97 = &v26[v35];
  uint64_t v38 = a1;
  uint64_t v39 = a1 + v35;
  sub_AF724(v38, v36, type metadata accessor for ButtonViewModel.Content);
  sub_AF724(v39, v37, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v40 = *(int *)(v21 + 56);
  uint64_t v41 = (uint64_t)v24;
  uint64_t v95 = v24;
  uint64_t v42 = (uint64_t)&v24[v40];
  uint64_t v93 = v42;
  sub_AF724(v38, v41, type metadata accessor for ButtonViewModel.Content);
  sub_AF724(v39, v42, type metadata accessor for ButtonViewModel.ActionKind);
  *(void *)&long long v127 = 0x403C000000000000;
  uint64_t v43 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 104);
  uint64_t v45 = v96;
  v44(v19, enum case for Font.TextStyle.subheadline(_:), v96);
  sub_4F928();
  sub_26A810();
  *(void *)&long long v127 = 0x4008000000000000;
  v44(v19, v43, v45);
  sub_26A810();
  uint64_t v46 = (uint64_t *)&v30[v28[8]];
  *uint64_t v46 = swift_getKeyPath();
  uint64_t v105 = sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = &v30[v28[16]];
  uint64_t v99 = sub_26A220();
  uint64_t v100 = *(void *)(v99 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v47, 1, 1, v99);
  v30[v28[9]] = 1;
  v30[v28[10]] = 1;
  v30[v28[11]] = 0;
  uint64_t v48 = &v30[v28[12]];
  *(_OWORD *)uint64_t v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  sub_AF6BC((uint64_t)v94, (uint64_t)&v30[v28[13]], type metadata accessor for ButtonViewModel.Content);
  v30[v28[14]] = 1;
  sub_AF6BC(v93, (uint64_t)&v30[v28[15]], type metadata accessor for ButtonViewModel.ActionKind);
  sub_AF830((uint64_t)v95, type metadata accessor for ButtonViewModel.Content);
  sub_AF830((uint64_t)v97, type metadata accessor for ButtonViewModel.ActionKind);
  *(void *)&long long v127 = 0x4020000000000000;
  v44(v19, v43, v45);
  uint64_t v49 = (uint64_t)v98;
  sub_26A810();
  uint64_t v50 = v101;
  *(void *)&long long v127 = 0x3FF8000000000000;
  v44(v19, v43, v45);
  sub_26A810();
  uint64_t v51 = (uint64_t *)(v49 + *(int *)(v50 + 32));
  *uint64_t v51 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD8);
  swift_storeEnumTagMultiPayload();
  sub_AF6BC((uint64_t)v30, v49 + *(int *)(v50 + 36), type metadata accessor for ButtonViewModel);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v52 = v102;
  sub_AF724(v49, v102, (uint64_t (*)(void))type metadata accessor for ButtonView);
  uint64_t v53 = (_OWORD *)(v52 + *(int *)(v103 + 44));
  long long v54 = v125;
  *uint64_t v53 = v124;
  v53[1] = v54;
  v53[2] = v126;
  sub_AF830(v49, (uint64_t (*)(void))type metadata accessor for ButtonView);
  uint64_t v55 = v104;
  sub_19CC4(v52, v104, &qword_2EE570);
  uint64_t v56 = sub_26A630();
  uint64_t v57 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v106, 1, 1, v56);
  uint64_t v58 = v107;
  uint64_t v59 = v113;
  uint64_t v60 = (void *)(v113 + *(int *)(v107 + 56));
  uint64_t v61 = v60[3];
  uint64_t v62 = v60[4];
  unint64_t v63 = sub_4ADC(v60, v61);
  *((void *)&v128 + 1) = v61;
  *(void *)&long long v129 = *(void *)(v62 + 8);
  uint64_t v64 = sub_CA1C((uint64_t *)&v127);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v64, v63, v61);
  uint64_t v65 = (uint64_t)v108;
  uint64_t v66 = (uint64_t)&v108[*(int *)(v58 + 56)];
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v108, v59, v99);
  sub_C224((uint64_t)v60, v66);
  unint64_t v67 = (*(unsigned __int8 *)(v112 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
  uint64_t v68 = swift_allocObject();
  sub_19CC4(v65, v68 + v67, &qword_2EE420);
  sub_269B80();
  uint64_t v69 = (uint64_t)v109;
  sub_269AB0();
  uint64_t v70 = (int *)v110;
  uint64_t v71 = v69 + *(int *)(v110 + 36);
  *(void *)uint64_t v71 = swift_getKeyPath();
  *(unsigned char *)(v71 + 8) = 0;
  uint64_t v72 = (uint64_t *)(v69 + v70[10]);
  *uint64_t v72 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = v69 + v70[11];
  *(void *)uint64_t v73 = swift_getKeyPath();
  *(unsigned char *)(v73 + 40) = 0;
  sub_19CC4(v57, v69 + v70[12], qword_2EA3E0);
  sub_19CC4((uint64_t)&v127, v69 + v70[13], &qword_2EA818);
  uint64_t v74 = (uint64_t (**)())(v69 + v70[14]);
  *uint64_t v74 = sub_AF790;
  v74[1] = (uint64_t (*)())v68;
  uint64_t v76 = v115;
  long long v75 = (int *)v116;
  uint64_t v77 = (uint64_t *)&v115[*(int *)(v116 + 20)];
  *uint64_t v77 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v78 = (uint64_t *)&v76[v75[6]];
  *uint64_t v78 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = (uint64_t *)&v76[v75[7]];
  uint64_t *v79 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v80 = (uint64_t *)&v76[v75[8]];
  *uint64_t v80 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  long long v81 = &v76[v75[9]];
  *(void *)long long v81 = swift_getKeyPath();
  v81[8] = 0;
  uint64_t v82 = (uint64_t *)&v76[v75[10]];
  uint64_t *v82 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v76 = 1;
  sub_7C18(&qword_2EE5C0, &qword_2EE5A8);
  sub_AFA0C(&qword_2EE5C8, (void (*)(uint64_t))type metadata accessor for BooksBorderlessButtonStyle);
  uint64_t v83 = v117;
  sub_26BC80();
  sub_AF830((uint64_t)v76, type metadata accessor for BooksBorderlessButtonStyle);
  sub_B6DC(v69, &qword_2EE5A8);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v85 = v121;
  uint64_t v84 = v122;
  uint64_t v86 = (uint64_t)v118;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v83, v122);
  uint64_t v87 = (_OWORD *)(v86 + *(int *)(v119 + 44));
  long long v88 = v128;
  _OWORD *v87 = v127;
  v87[1] = v88;
  v87[2] = v129;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v84);
  uint64_t v89 = v120;
  sub_19CC4(v86, v120, &qword_2EE5B8);
  sub_B678(v55, v52, &qword_2EE570);
  sub_B678(v89, v86, &qword_2EE5B8);
  uint64_t v90 = v123;
  sub_B678(v52, v123, &qword_2EE570);
  uint64_t v91 = sub_4A98(&qword_2EE5D0);
  sub_B678(v86, v90 + *(int *)(v91 + 48), &qword_2EE5B8);
  sub_B6DC(v89, &qword_2EE5B8);
  sub_B6DC(v55, &qword_2EE570);
  sub_B6DC(v86, &qword_2EE5B8);
  return sub_B6DC(v52, &qword_2EE570);
}

uint64_t sub_A98F8(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EE420);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(int *)(__chkstk_darwin(v2 - 8) + 56);
  uint64_t v6 = (char *)&v12 + v5 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + v5;
  uint64_t v8 = sub_26A220();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  sub_C224(v7, (uint64_t)v6);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_19CC4((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, &qword_2EE420);
  sub_26A0F0();
  sub_26A0D0();
  sub_AFA0C(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_AFA0C(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_A9B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2EE420);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = *(int *)(v7 + 56);
  uint64_t v11 = (uint64_t)&v9[v10];
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_26A220();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, a2, v13);
  sub_C224(v12, v11);
  sub_C224(a1, (uint64_t)v22);
  uint64_t v14 = sub_26BA00();
  uint64_t v16 = v15;
  LOBYTE(v9) = v17;
  uint64_t v19 = v18;
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(v11);
  *(void *)a3 = v14;
  *(void *)(a3 + 8) = v16;
  *(unsigned char *)(a3 + 16) = v9 & 1;
  *(void *)(a3 + 24) = v19;
  return result;
}

uint64_t sub_A9C54@<X0>(uint64_t a1@<X8>)
{
  return sub_A7950(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_A9C60()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_A9CA4()
{
  type metadata accessor for ModalActionSheet.Buttons();
  sub_26D980();
  if (v0 <= 0x3F)
  {
    sub_3EAB0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_A9D88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ModalActionSheet.Buttons();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_26D980();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for ButtonViewModel.Content(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_26A220();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          goto LABEL_13;
        case 1u:
          uint64_t v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
          uint64_t v14 = a2[1];
          *a1 = *a2;
          a1[1] = v14;
          uint64_t v15 = (void *)a2[2];
          a1[2] = (uint64_t)v15;
          swift_bridgeObjectRetain();
          id v16 = v15;
          uint64_t v17 = *(int *)(sub_4A98(&qword_2EE430) + 64);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = sub_26A220();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          goto LABEL_13;
        case 3u:
          uint64_t v21 = a2[1];
          *a1 = *a2;
          a1[1] = v21;
          swift_bridgeObjectRetain();
          uint64_t v22 = *(int *)(sub_4A98(&qword_2EE438) + 48);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_26A220();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
          goto LABEL_13;
        case 4u:
          uint64_t v26 = sub_26A220();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
          uint64_t v27 = *(int *)(sub_4A98(&qword_2EE440) + 48);
          uint64_t v28 = (uint64_t *)((char *)a1 + v27);
          uint64_t v29 = (uint64_t *)((char *)a2 + v27);
          uint64_t v30 = v29[1];
          *uint64_t v28 = *v29;
          v28[1] = v30;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 5u:
          uint64_t v31 = sub_26A220();
          uint64_t v32 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v31 - 8) + 16);
          v32(a1, a2, v31);
          uint64_t v33 = sub_4A98(&qword_2EE448);
          v32((uint64_t *)((char *)a1 + *(int *)(v33 + 48)), (uint64_t *)((char *)a2 + *(int *)(v33 + 48)), v31);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      uint64_t v34 = *(int *)(sub_4A98(qword_2EE450) + 48);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      type metadata accessor for ButtonViewModel.ActionKind(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v37 = sub_2696C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      }
      else
      {
        uint64_t v38 = *((void *)v36 + 3);
        if (v38)
        {
          uint64_t v39 = *((void *)v36 + 4);
          *((void *)v35 + 3) = v38;
          *((void *)v35 + 4) = v39;
          (**(void (***)(char *, char *))(v38 - 8))(v35, v36);
        }
        else
        {
          long long v40 = *((_OWORD *)v36 + 1);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          *((_OWORD *)v35 + 1) = v40;
          *((void *)v35 + 4) = *((void *)v36 + 4);
        }
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = *(int *)(v7 + 36);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_4A98(&qword_2EE420);
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        uint64_t v46 = sub_4A98(&qword_2EE418);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v47 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v42, v43, v47);
        uint64_t v48 = *(int *)(v44 + 48);
        long long v49 = *(_OWORD *)&v43[v48 + 24];
        *(_OWORD *)&v42[v48 + 24] = v49;
        (**(void (***)(void))(v49 - 8))();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v50 = *(int *)(a3 + 36);
    uint64_t v51 = *(int *)(a3 + 40);
    uint64_t v52 = (uint64_t *)((char *)a1 + v50);
    uint64_t v53 = (uint64_t *)((char *)a2 + v50);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = (_WORD *)((char *)a1 + v51);
    uint64_t v56 = (_WORD *)((char *)a2 + v51);
    swift_retain();
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v55 = *v56;
      uint64_t v57 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v58 = v57[6];
      uint64_t v59 = (char *)v55 + v58;
      uint64_t v60 = (char *)v56 + v58;
      uint64_t v61 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      *(void *)((char *)v55 + v57[7]) = *(void *)((char *)v56 + v57[7]);
      uint64_t v62 = v57[8];
      unint64_t v63 = (char *)v55 + v62;
      uint64_t v64 = (char *)v56 + v62;
      v63[2] = v64[2];
      *(_WORD *)unint64_t v63 = *(_WORD *)v64;
    }
    else
    {
      *(void *)uint64_t v55 = *(void *)v56;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_AA4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalActionSheet.Buttons();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v5 = sub_26A220();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();

        uint64_t v6 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        goto LABEL_7;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v6 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_7:
        uint64_t v7 = a1 + v6;
        uint64_t v8 = sub_26A220();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      case 4u:
        uint64_t v9 = sub_26A220();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
        sub_4A98(&qword_2EE440);
        swift_bridgeObjectRelease();
        break;
      case 5u:
        uint64_t v10 = sub_26A220();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
        v11(a1, v10);
        uint64_t v12 = sub_4A98(&qword_2EE448);
        v11(a1 + *(int *)(v12 + 48), v10);
        break;
      default:
        break;
    }
    uint64_t v13 = a1 + *(int *)(sub_4A98(qword_2EE450) + 48);
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2696C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    else if (*(void *)(v13 + 24))
    {
      _s7BooksUI13AnyPagedFrameVwxx_0(v13);
    }
    uint64_t v15 = a1 + *(int *)(v4 + 36);
    uint64_t v16 = sub_4A98(&qword_2EE420);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
    {
      uint64_t v17 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
      _s7BooksUI13AnyPagedFrameVwxx_0(v15 + *(int *)(v16 + 48));
    }
  }
  swift_release();
  uint64_t v18 = a1 + *(int *)(a2 + 40);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v18 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v20 = sub_26AB40();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    return v21(v19, v20);
  }
  else
  {
    return swift_release();
  }
}

void *sub_AA8E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_26D980();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_11;
      case 1u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 2u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = (void *)a2[2];
        a1[2] = v13;
        swift_bridgeObjectRetain();
        id v14 = v13;
        uint64_t v15 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        goto LABEL_11;
      case 3u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        swift_bridgeObjectRetain();
        uint64_t v20 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        goto LABEL_11;
      case 4u:
        uint64_t v24 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v26 = (void *)((char *)a1 + v25);
        uint64_t v27 = (void *)((char *)a2 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 5u:
        uint64_t v29 = sub_26A220();
        uint64_t v30 = *(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16);
        v30(a1, a2, v29);
        uint64_t v31 = sub_4A98(&qword_2EE448);
        v30((void *)((char *)a1 + *(int *)(v31 + 48)), (void *)((char *)a2 + *(int *)(v31 + 48)), v29);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    uint64_t v32 = *(int *)(sub_4A98(qword_2EE450) + 48);
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      uint64_t v36 = *((void *)v34 + 3);
      if (v36)
      {
        uint64_t v37 = *((void *)v34 + 4);
        *((void *)v33 + 3) = v36;
        *((void *)v33 + 4) = v37;
        (**(void (***)(char *, char *))(v36 - 8))(v33, v34);
      }
      else
      {
        long long v38 = *((_OWORD *)v34 + 1);
        *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
        *((_OWORD *)v33 + 1) = v38;
        *((void *)v33 + 4) = *((void *)v34 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = *(int *)(v6 + 36);
    long long v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_4A98(&qword_2EE420);
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      uint64_t v44 = sub_4A98(&qword_2EE418);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v45 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v40, v41, v45);
      uint64_t v46 = *(int *)(v42 + 48);
      long long v47 = *(_OWORD *)&v41[v46 + 24];
      *(_OWORD *)&v40[v46 + 24] = v47;
      (**(void (***)(void))(v47 - 8))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v48 = *(int *)(a3 + 36);
  uint64_t v49 = *(int *)(a3 + 40);
  uint64_t v50 = (void *)((char *)a1 + v48);
  uint64_t v51 = (void *)((char *)a2 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = (_WORD *)((char *)a1 + v49);
  uint64_t v54 = (_WORD *)((char *)a2 + v49);
  swift_retain();
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v53 = *v54;
    uint64_t v55 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v56 = v55[6];
    uint64_t v57 = (char *)v53 + v56;
    uint64_t v58 = (char *)v54 + v56;
    uint64_t v59 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    *(void *)((char *)v53 + v55[7]) = *(void *)((char *)v54 + v55[7]);
    uint64_t v60 = v55[8];
    uint64_t v61 = (char *)v53 + v60;
    uint64_t v62 = (char *)v54 + v60;
    v61[2] = v62[2];
    *(_WORD *)uint64_t v61 = *(_WORD *)v62;
  }
  else
  {
    *(void *)uint64_t v53 = *(void *)v54;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_AAFD0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 != a2)
      {
        sub_AF830((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
        uint64_t v16 = type metadata accessor for ButtonViewModel.Content(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_26A220();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            goto LABEL_40;
          case 1u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_40;
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v69 = (void *)a2[2];
            a1[2] = v69;
            swift_bridgeObjectRetain();
            id v70 = v69;
            uint64_t v71 = *(int *)(sub_4A98(&qword_2EE430) + 64);
            uint64_t v72 = (char *)a1 + v71;
            uint64_t v73 = (char *)a2 + v71;
            uint64_t v74 = sub_26A220();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
            goto LABEL_40;
          case 3u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            uint64_t v75 = *(int *)(sub_4A98(&qword_2EE438) + 48);
            uint64_t v76 = (char *)a1 + v75;
            uint64_t v77 = (char *)a2 + v75;
            uint64_t v78 = sub_26A220();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
            goto LABEL_40;
          case 4u:
            uint64_t v79 = sub_26A220();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
            uint64_t v80 = *(int *)(sub_4A98(&qword_2EE440) + 48);
            long long v81 = (void *)((char *)a1 + v80);
            uint64_t v82 = (void *)((char *)a2 + v80);
            *long long v81 = *v82;
            v81[1] = v82[1];
            swift_bridgeObjectRetain();
            goto LABEL_40;
          case 5u:
            uint64_t v83 = sub_26A220();
            uint64_t v84 = *(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16);
            v84(a1, a2, v83);
            uint64_t v85 = sub_4A98(&qword_2EE448);
            v84((void *)((char *)a1 + *(int *)(v85 + 48)), (void *)((char *)a2 + *(int *)(v85 + 48)), v83);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
            break;
        }
        uint64_t v86 = *(int *)(sub_4A98(qword_2EE450) + 48);
        uint64_t v87 = (char *)a1 + v86;
        long long v88 = (char *)a2 + v86;
        sub_AF830((uint64_t)a1 + v86, type metadata accessor for ButtonViewModel.ActionKind);
        type metadata accessor for ButtonViewModel.ActionKind(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v89 = sub_2696C0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
        }
        else
        {
          uint64_t v90 = *((void *)v88 + 3);
          if (v90)
          {
            *((void *)v87 + 3) = v90;
            *((void *)v87 + 4) = *((void *)v88 + 4);
            (**(void (***)(char *, char *))(v90 - 8))(v87, v88);
          }
          else
          {
            long long v91 = *(_OWORD *)v88;
            long long v92 = *((_OWORD *)v88 + 1);
            *((void *)v87 + 4) = *((void *)v88 + 4);
            *(_OWORD *)uint64_t v87 = v91;
            *((_OWORD *)v87 + 1) = v92;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v93 = *(int *)(v6 + 36);
      uint64_t v94 = (uint64_t)a1 + v93;
      uint64_t v95 = (char *)a2 + v93;
      uint64_t v96 = sub_4A98(&qword_2EE420);
      uint64_t v97 = *(void *)(v96 - 8);
      char v98 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
      int v99 = v98(v94, 1, v96);
      int v100 = v98((uint64_t)v95, 1, v96);
      if (v99)
      {
        if (!v100)
        {
          uint64_t v101 = sub_26A220();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v94, v95, v101);
          uint64_t v102 = *(int *)(v96 + 48);
          uint64_t v103 = v94 + v102;
          uint64_t v104 = *(void *)&v95[v102 + 24];
          *(void *)(v103 + 24) = v104;
          *(void *)(v103 + 32) = *(void *)&v95[v102 + 32];
          (**(void (***)(void))(v104 - 8))();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v100)
        {
          uint64_t v105 = sub_26A220();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v105 - 8) + 24))(v94, v95, v105);
          sub_16D58((uint64_t *)(v94 + *(int *)(v96 + 48)), (uint64_t *)&v95[*(int *)(v96 + 48)]);
          goto LABEL_28;
        }
        sub_B6DC(v94, &qword_2EE420);
      }
      size_t v13 = *(void *)(*(void *)(sub_4A98(&qword_2EE418) - 8) + 64);
      id v14 = (void *)v94;
      uint64_t v15 = v95;
LABEL_8:
      memcpy(v14, v15, v13);
      goto LABEL_28;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_26D980() - 8) + 64);
    id v14 = a1;
    uint64_t v15 = (char *)a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_18;
    case 1u:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 2u:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v18 = (void *)a2[2];
      a1[2] = v18;
      swift_bridgeObjectRetain();
      id v19 = v18;
      uint64_t v20 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      goto LABEL_18;
    case 3u:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v24 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      goto LABEL_18;
    case 4u:
      uint64_t v28 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 5u:
      uint64_t v32 = sub_26A220();
      uint64_t v33 = *(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16);
      v33(a1, a2, v32);
      uint64_t v34 = sub_4A98(&qword_2EE448);
      v33((void *)((char *)a1 + *(int *)(v34 + 48)), (void *)((char *)a2 + *(int *)(v34 + 48)), v32);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  uint64_t v35 = *(int *)(sub_4A98(qword_2EE450) + 48);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  }
  else
  {
    uint64_t v39 = *((void *)v37 + 3);
    if (v39)
    {
      *((void *)v36 + 3) = v39;
      *((void *)v36 + 4) = *((void *)v37 + 4);
      (**(void (***)(char *, char *))(v39 - 8))(v36, v37);
    }
    else
    {
      long long v40 = *(_OWORD *)v37;
      long long v41 = *((_OWORD *)v37 + 1);
      *((void *)v36 + 4) = *((void *)v37 + 4);
      *(_OWORD *)uint64_t v36 = v40;
      *((_OWORD *)v36 + 1) = v41;
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = *(int *)(v6 + 36);
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_4A98(&qword_2EE420);
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = sub_4A98(&qword_2EE418);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v48 = sub_26A220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v43, v44, v48);
    uint64_t v49 = *(int *)(v45 + 48);
    uint64_t v50 = &v43[v49];
    uint64_t v51 = *(void *)&v44[v49 + 24];
    *((void *)v50 + 3) = v51;
    *((void *)v50 + 4) = *(void *)&v44[v49 + 32];
    (**(void (***)(void))(v51 - 8))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_28:
  uint64_t v52 = *(int *)(a3 + 36);
  uint64_t v53 = (void *)((char *)a1 + v52);
  uint64_t v54 = (void *)((char *)a2 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v56 = *(int *)(a3 + 40);
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    sub_B6DC((uint64_t)a1 + v56, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v57 = *v58;
      v57[1] = v58[1];
      uint64_t v59 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v60 = v59[6];
      uint64_t v61 = &v57[v60];
      uint64_t v62 = &v58[v60];
      uint64_t v63 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      *(void *)&v57[v59[7]] = *(void *)&v58[v59[7]];
      uint64_t v64 = v59[8];
      uint64_t v65 = &v57[v64];
      uint64_t v66 = &v58[v64];
      char v67 = v66[2];
      *(_WORD *)uint64_t v65 = *(_WORD *)v66;
      v65[2] = v67;
    }
    else
    {
      *(void *)uint64_t v57 = *(void *)v58;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}