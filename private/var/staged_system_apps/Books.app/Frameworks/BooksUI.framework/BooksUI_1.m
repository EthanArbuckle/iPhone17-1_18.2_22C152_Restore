void *sub_ABD34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, void *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  long long v39;
  uint64_t v40;
  _WORD *v41;
  _WORD *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v6 = type metadata accessor for ModalActionSheet.Buttons();
  v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_26D980();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v10 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        goto LABEL_10;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v11 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_10;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v15 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_10;
      case 4u:
        v19 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = sub_4A98(&qword_2EE440);
        *(_OWORD *)((char *)a1 + *(int *)(v20 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v20 + 48));
        goto LABEL_10;
      case 5u:
        v21 = sub_26A220();
        v22 = *(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32);
        v22(a1, a2, v21);
        v23 = sub_4A98(&qword_2EE448);
        v22((void *)((char *)a1 + *(int *)(v23 + 48)), (void *)((char *)a2 + *(int *)(v23 + 48)), v21);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    v24 = *(int *)(sub_4A98(qword_2EE450) + 48);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    v29 = *(int *)(v6 + 36);
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_4A98(&qword_2EE420);
    v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_4A98(&qword_2EE418);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v35 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v30, v31, v35);
      v36 = *(int *)(v32 + 48);
      v37 = &v30[v36];
      v38 = &v31[v36];
      v39 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v39;
      *((void *)v37 + 4) = *((void *)v38 + 4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v40 = *(int *)(a3 + 40);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  v41 = (_WORD *)((char *)a1 + v40);
  v42 = (_WORD *)((char *)a2 + v40);
  v43 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v41 = *v42;
    v44 = (int *)type metadata accessor for SizeConstants.Environment(0);
    v45 = v44[6];
    v46 = (char *)v41 + v45;
    v47 = (char *)v42 + v45;
    v48 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    *(void *)((char *)v41 + v44[7]) = *(void *)((char *)v42 + v44[7]);
    v49 = v44[8];
    v50 = (char *)v41 + v49;
    v51 = (char *)v42 + v49;
    v50[2] = v51[2];
    *(_WORD *)v50 = *(_WORD *)v51;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  return a1;
}

void *sub_AC378(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v7 = *(void *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 != a2)
      {
        sub_AF830((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
        uint64_t v16 = type metadata accessor for ButtonViewModel.Content(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_26A220();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
            goto LABEL_35;
          case 2u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v60 = *(int *)(sub_4A98(&qword_2EE430) + 64);
            v61 = (char *)a1 + v60;
            v62 = (char *)a2 + v60;
            uint64_t v63 = sub_26A220();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
            goto LABEL_35;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v64 = *(int *)(sub_4A98(&qword_2EE438) + 48);
            v65 = (char *)a1 + v64;
            v66 = (char *)a2 + v64;
            uint64_t v67 = sub_26A220();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
            goto LABEL_35;
          case 4u:
            uint64_t v68 = sub_26A220();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
            uint64_t v69 = sub_4A98(&qword_2EE440);
            *(_OWORD *)((char *)a1 + *(int *)(v69 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v69 + 48));
            goto LABEL_35;
          case 5u:
            uint64_t v70 = sub_26A220();
            v71 = *(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 32);
            v71(a1, a2, v70);
            uint64_t v72 = sub_4A98(&qword_2EE448);
            v71((void *)((char *)a1 + *(int *)(v72 + 48)), (void *)((char *)a2 + *(int *)(v72 + 48)), v70);
LABEL_35:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
            break;
        }
        uint64_t v73 = *(int *)(sub_4A98(qword_2EE450) + 48);
        v74 = (char *)a1 + v73;
        v75 = (char *)a2 + v73;
        sub_AF830((uint64_t)a1 + v73, type metadata accessor for ButtonViewModel.ActionKind);
        uint64_t v76 = type metadata accessor for ButtonViewModel.ActionKind(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v77 = sub_2696C0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v74, v75, v77);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
        }
      }
      uint64_t v78 = *(int *)(v6 + 36);
      uint64_t v79 = (uint64_t)a1 + v78;
      v80 = (char *)a2 + v78;
      uint64_t v81 = sub_4A98(&qword_2EE420);
      uint64_t v82 = *(void *)(v81 - 8);
      v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
      int v84 = v83(v79, 1, v81);
      int v85 = v83((uint64_t)v80, 1, v81);
      if (v84)
      {
        if (!v85)
        {
          uint64_t v86 = sub_26A220();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v79, v80, v86);
          uint64_t v87 = *(int *)(v81 + 48);
          uint64_t v88 = v79 + v87;
          v89 = &v80[v87];
          long long v90 = *((_OWORD *)v89 + 1);
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
          *(_OWORD *)(v88 + 16) = v90;
          *(void *)(v88 + 32) = *((void *)v89 + 4);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
          goto LABEL_25;
        }
      }
      else
      {
        if (!v85)
        {
          uint64_t v91 = sub_26A220();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v91 - 8) + 40))(v79, v80, v91);
          uint64_t v92 = *(int *)(v81 + 48);
          uint64_t v93 = v79 + v92;
          v94 = &v80[v92];
          _s7BooksUI13AnyPagedFrameVwxx_0(v93);
          long long v95 = *((_OWORD *)v94 + 1);
          *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
          *(_OWORD *)(v93 + 16) = v95;
          *(void *)(v93 + 32) = *((void *)v94 + 4);
          goto LABEL_25;
        }
        sub_B6DC(v79, &qword_2EE420);
      }
      size_t v13 = *(void *)(*(void *)(sub_4A98(&qword_2EE418) - 8) + 64);
      v14 = (void *)v79;
      v15 = v80;
LABEL_8:
      memcpy(v14, v15, v13);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_26D980() - 8) + 64);
    v14 = a1;
    v15 = (char *)a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_17;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v18 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      uint64_t v21 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_17;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v22 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      uint64_t v25 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      goto LABEL_17;
    case 4u:
      uint64_t v26 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
      uint64_t v27 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)a1 + *(int *)(v27 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v27 + 48));
      goto LABEL_17;
    case 5u:
      uint64_t v28 = sub_26A220();
      v29 = *(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 32);
      v29(a1, a2, v28);
      uint64_t v30 = sub_4A98(&qword_2EE448);
      v29((void *)((char *)a1 + *(int *)(v30 + 48)), (void *)((char *)a2 + *(int *)(v30 + 48)), v28);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  uint64_t v31 = *(int *)(sub_4A98(qword_2EE450) + 48);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  uint64_t v36 = *(int *)(v6 + 36);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  uint64_t v39 = sub_4A98(&qword_2EE420);
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_4A98(&qword_2EE418);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = sub_26A220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v37, v38, v42);
    uint64_t v43 = *(int *)(v39 + 48);
    v44 = &v37[v43];
    v45 = &v38[v43];
    long long v46 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v46;
    *((void *)v44 + 4) = *((void *)v45 + 4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_25:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  swift_release();
  if (a1 != a2)
  {
    uint64_t v47 = *(int *)(a3 + 40);
    v48 = (_WORD *)((char *)a1 + v47);
    v49 = (_WORD *)((char *)a2 + v47);
    sub_B6DC((uint64_t)a1 + v47, &qword_2EB708);
    uint64_t v50 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v48 = *v49;
      v51 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v52 = v51[6];
      v53 = (char *)v48 + v52;
      v54 = (char *)v49 + v52;
      uint64_t v55 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      *(void *)((char *)v48 + v51[7]) = *(void *)((char *)v49 + v51[7]);
      uint64_t v56 = v51[8];
      v57 = (char *)v48 + v56;
      v58 = (char *)v49 + v56;
      v57[2] = v58[2];
      *(_WORD *)v57 = *(_WORD *)v58;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_ACF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ACF58);
}

uint64_t sub_ACF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ModalActionSheet.Buttons();
  uint64_t v6 = sub_26D980();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_4A98(&qword_2EB718);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_AD098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AD0AC);
}

uint64_t sub_AD0AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ModalActionSheet.Buttons();
  uint64_t result = sub_26D980();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_4A98(&qword_2EB718);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_AD1EC()
{
  type metadata accessor for ButtonViewModel.Content(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ButtonViewModel.ActionKind(319);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      sub_AF3A0();
      if (v3 <= 0x3F)
      {
        v4[5] = *(void *)(v2 - 8) + 64;
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_AD2FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = sub_26A220();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_11;
      case 1u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 2u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = (void *)a2[2];
        a1[2] = (uint64_t)v12;
        swift_bridgeObjectRetain();
        id v13 = v12;
        uint64_t v14 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_11;
      case 3u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        swift_bridgeObjectRetain();
        uint64_t v19 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        goto LABEL_11;
      case 4u:
        uint64_t v23 = sub_26A220();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v25 = (uint64_t *)((char *)a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        uint64_t v27 = v26[1];
        *uint64_t v25 = *v26;
        v25[1] = v27;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 5u:
        uint64_t v28 = sub_26A220();
        v29 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(a1, a2, v28);
        uint64_t v30 = sub_4A98(&qword_2EE448);
        v29((uint64_t *)((char *)a1 + *(int *)(v30 + 48)), (uint64_t *)((char *)a2 + *(int *)(v30 + 48)), v28);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v31 = *(int *)(sub_4A98(qword_2EE450) + 48);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      uint64_t v35 = *((void *)v33 + 3);
      if (v35)
      {
        uint64_t v36 = *((void *)v33 + 4);
        *((void *)v32 + 3) = v35;
        *((void *)v32 + 4) = v36;
        (**(void (***)(char *, char *))(v35 - 8))(v32, v33);
      }
      else
      {
        long long v37 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v37;
        *((void *)v32 + 4) = *((void *)v33 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = *(int *)(a3 + 36);
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    uint64_t v41 = sub_4A98(&qword_2EE420);
    uint64_t v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      uint64_t v43 = sub_4A98(&qword_2EE418);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v39, v40, v44);
      uint64_t v45 = *(int *)(v41 + 48);
      long long v46 = *(_OWORD *)&v40[v45 + 24];
      *(_OWORD *)&v39[v45 + 24] = v46;
      (**(void (***)(void))(v46 - 8))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
  }
  return a1;
}

uint64_t sub_AD894(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v5 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v5 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_6:
      uint64_t v6 = a1 + v5;
      uint64_t v7 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      break;
    case 4u:
      uint64_t v8 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v9 = sub_26A220();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(a1, v9);
      uint64_t v11 = sub_4A98(&qword_2EE448);
      v10(a1 + *(int *)(v11 + 48), v9);
      break;
    default:
      break;
  }
  uint64_t v12 = a1 + *(int *)(sub_4A98(qword_2EE450) + 48);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else if (*(void *)(v12 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v12);
  }
  uint64_t v14 = a1 + *(int *)(a2 + 36);
  uint64_t v15 = sub_4A98(&qword_2EE420);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (!result)
  {
    uint64_t v17 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v14, v17);
    uint64_t v18 = v14 + *(int *)(v15 + 48);
    return _s7BooksUI13AnyPagedFrameVwxx_0(v18);
  }
  return result;
}

void *sub_ADBCC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_9;
    case 1u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = (void *)a2[2];
      a1[2] = v10;
      swift_bridgeObjectRetain();
      id v11 = v10;
      uint64_t v12 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      goto LABEL_9;
    case 3u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      uint64_t v17 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      goto LABEL_9;
    case 4u:
      uint64_t v21 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      void *v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 5u:
      uint64_t v26 = sub_26A220();
      uint64_t v27 = *(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16);
      v27(a1, a2, v26);
      uint64_t v28 = sub_4A98(&qword_2EE448);
      v27((void *)((char *)a1 + *(int *)(v28 + 48)), (void *)((char *)a2 + *(int *)(v28 + 48)), v26);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v29 = *(int *)(sub_4A98(qword_2EE450) + 48);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    uint64_t v33 = *((void *)v31 + 3);
    if (v33)
    {
      uint64_t v34 = *((void *)v31 + 4);
      *((void *)v30 + 3) = v33;
      *((void *)v30 + 4) = v34;
      (**(void (***)(char *, char *))(v33 - 8))(v30, v31);
    }
    else
    {
      long long v35 = *((_OWORD *)v31 + 1);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v35;
      *((void *)v30 + 4) = *((void *)v31 + 4);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = *(int *)(a3 + 36);
  long long v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_4A98(&qword_2EE420);
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_4A98(&qword_2EE418);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = sub_26A220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v37, v38, v42);
    uint64_t v43 = *(int *)(v39 + 48);
    long long v44 = *(_OWORD *)&v38[v43 + 24];
    *(_OWORD *)&v37[v43 + 24] = v44;
    (**(void (***)(void))(v44 - 8))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  return a1;
}

void *sub_AE114(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_AF830((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
    uint64_t v6 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v8 = (void *)a2[2];
        a1[2] = v8;
        swift_bridgeObjectRetain();
        id v9 = v8;
        uint64_t v10 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        id v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v14 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v18 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (void *)((char *)a2 + v19);
        void *v20 = *v21;
        v20[1] = v21[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v22 = sub_26A220();
        uint64_t v23 = *(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16);
        v23(a1, a2, v22);
        uint64_t v24 = sub_4A98(&qword_2EE448);
        v23((void *)((char *)a1 + *(int *)(v24 + 48)), (void *)((char *)a2 + *(int *)(v24 + 48)), v22);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    uint64_t v25 = *(int *)(sub_4A98(qword_2EE450) + 48);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    sub_AF830((uint64_t)a1 + v25, type metadata accessor for ButtonViewModel.ActionKind);
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      uint64_t v29 = *((void *)v27 + 3);
      if (v29)
      {
        *((void *)v26 + 3) = v29;
        *((void *)v26 + 4) = *((void *)v27 + 4);
        (**(void (***)(char *, char *))(v29 - 8))(v26, v27);
      }
      else
      {
        long long v30 = *(_OWORD *)v27;
        long long v31 = *((_OWORD *)v27 + 1);
        *((void *)v26 + 4) = *((void *)v27 + 4);
        *(_OWORD *)uint64_t v26 = v30;
        *((_OWORD *)v26 + 1) = v31;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = *(int *)(a3 + 36);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_4A98(&qword_2EE420);
  uint64_t v36 = *(void *)(v35 - 8);
  long long v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      uint64_t v46 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v33, v34, v46);
      sub_16D58((uint64_t *)&v33[*(int *)(v35 + 48)], (uint64_t *)&v34[*(int *)(v35 + 48)]);
      return a1;
    }
    sub_B6DC((uint64_t)v33, &qword_2EE420);
    goto LABEL_21;
  }
  if (v39)
  {
LABEL_21:
    uint64_t v44 = sub_4A98(&qword_2EE418);
    memcpy(v33, v34, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  uint64_t v40 = sub_26A220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v33, v34, v40);
  uint64_t v41 = *(int *)(v35 + 48);
  uint64_t v42 = &v33[v41];
  uint64_t v43 = *(void *)&v34[v41 + 24];
  *((void *)v42 + 3) = v43;
  *((void *)v42 + 4) = *(void *)&v34[v41 + 32];
  (**(void (***)(void))(v43 - 8))();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  return a1;
}

void *sub_AE75C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_8;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      goto LABEL_8;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v12 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      goto LABEL_8;
    case 4u:
      uint64_t v16 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      uint64_t v17 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)a1 + *(int *)(v17 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v17 + 48));
      goto LABEL_8;
    case 5u:
      uint64_t v18 = sub_26A220();
      uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      uint64_t v20 = sub_4A98(&qword_2EE448);
      v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v21 = *(int *)(sub_4A98(qword_2EE450) + 48);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v26 = *(int *)(a3 + 36);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_4A98(&qword_2EE420);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_4A98(&qword_2EE418);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = sub_26A220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v27, v28, v32);
    uint64_t v33 = *(int *)(v29 + 48);
    uint64_t v34 = &v27[v33];
    uint64_t v35 = &v28[v33];
    long long v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    *((void *)v34 + 4) = *((void *)v35 + 4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

void *sub_AEBF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_AF830((uint64_t)a1, type metadata accessor for ButtonViewModel.Content);
    uint64_t v6 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_9;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v8 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        id v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_9;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v12 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_9;
      case 4u:
        uint64_t v16 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        uint64_t v17 = sub_4A98(&qword_2EE440);
        *(_OWORD *)((char *)a1 + *(int *)(v17 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v17 + 48));
        goto LABEL_9;
      case 5u:
        uint64_t v18 = sub_26A220();
        uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32);
        v19(a1, a2, v18);
        uint64_t v20 = sub_4A98(&qword_2EE448);
        v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    uint64_t v21 = *(int *)(sub_4A98(qword_2EE450) + 48);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_AF830((uint64_t)a1 + v21, type metadata accessor for ButtonViewModel.ActionKind);
    uint64_t v24 = type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  uint64_t v26 = *(int *)(a3 + 36);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_4A98(&qword_2EE420);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      uint64_t v41 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v27, v28, v41);
      uint64_t v42 = *(int *)(v29 + 48);
      uint64_t v43 = (uint64_t)&v27[v42];
      uint64_t v44 = &v28[v42];
      _s7BooksUI13AnyPagedFrameVwxx_0(v43);
      long long v45 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v45;
      *(void *)(v43 + 32) = *((void *)v44 + 4);
      return a1;
    }
    sub_B6DC((uint64_t)v27, &qword_2EE420);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    uint64_t v39 = sub_4A98(&qword_2EE418);
    memcpy(v27, v28, *(void *)(*(void *)(v39 - 8) + 64));
    return a1;
  }
  uint64_t v34 = sub_26A220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v27, v28, v34);
  uint64_t v35 = *(int *)(v29 + 48);
  long long v36 = &v27[v35];
  long long v37 = &v28[v35];
  long long v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)long long v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v38;
  *((void *)v36 + 4) = *((void *)v37 + 4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

uint64_t sub_AF16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AF180);
}

uint64_t sub_AF180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(qword_2EE450);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2EE418);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 36);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_AF280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AF294);
}

uint64_t sub_AF294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(qword_2EE450);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2EE418);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 36);
    return v13(v15, a2, a2, v14);
  }
}

void sub_AF3A0()
{
  if (!qword_2EE558)
  {
    sub_7B0C(&qword_2EE420);
    unint64_t v0 = sub_26D980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EE558);
    }
  }
}

uint64_t sub_AF3FC()
{
  return swift_getWitnessTable();
}

unint64_t sub_AF4F0()
{
  unint64_t result = qword_2EE580;
  if (!qword_2EE580)
  {
    sub_7B0C(&qword_2EE428);
    sub_AF564();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE580);
  }
  return result;
}

unint64_t sub_AF564()
{
  unint64_t result = qword_2EE588;
  if (!qword_2EE588)
  {
    sub_7B0C(&qword_2EE578);
    sub_7C18(&qword_2EE590, &qword_2EE560);
    sub_AF604();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE588);
  }
  return result;
}

unint64_t sub_AF604()
{
  unint64_t result = qword_2EE598;
  if (!qword_2EE598)
  {
    sub_7B0C(&qword_2EE570);
    sub_AFA0C(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE598);
  }
  return result;
}

uint64_t sub_AF6BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_AF724(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_AF790()
{
  uint64_t v1 = *(void *)(sub_4A98(&qword_2EE420) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_A98F8(v2);
}

uint64_t sub_AF830(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_AF894()
{
  uint64_t v1 = (int *)(sub_4A98(&qword_2EE420) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  _s7BooksUI13AnyPagedFrameVwxx_0(v2 + v1[14]);

  return swift_deallocObject();
}

uint64_t sub_AF988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_4A98(&qword_2EE420) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_A9B30(a1, v6, a2);
}

uint64_t sub_AFA0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_AFA54@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for CoverView, (void (*)(uint64_t, uint64_t, uint64_t))sub_BE568, &qword_2EB858).n128_u64[0];
  return result;
}

double sub_AFACC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_2EB828, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EB830).n128_u64[0];
  return result;
}

__n128 sub_AFB3C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  uint64_t v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    uint64_t v31 = (void *)sub_26B710();
    sub_26A300();

    uint64_t v21 = a18;
    uint64_t v20 = a17;
  }
  sub_26AC90();
  v20(v18, a9, a16);
  int v32 = (_OWORD *)(a9 + *(int *)(sub_4A98(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  _OWORD *v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_AFD20@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_2EBEC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EBEC8).n128_u64[0];
  return result;
}

uint64_t sub_AFD90@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    uint64_t v31 = (void *)sub_26B710();
    sub_26A300();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_26AC90();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_45370(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

double sub_AFF84@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EC5B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EC5B8).n128_u64[0];
  return result;
}

uint64_t sub_AFFF4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    uint64_t v27 = (void *)sub_26B710();
    sub_26A300();

    uint64_t v18 = a16;
  }
  sub_26AC90();
  *(void *)a9 = v18;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;

  return swift_retain();
}

double sub_B01B4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2ED008, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EEB28).n128_u64[0];
  return result;
}

double sub_B0224@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2ED040, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2ED048).n128_u64[0];
  return result;
}

__n128 sub_B0294@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    uint64_t v23 = (void *)sub_26B710();
    sub_26A300();
  }
  sub_26AC90();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  __n128 result = *(__n128 *)(v13 + 32);
  *(_OWORD *)(a9 + 96) = v29;
  *(_OWORD *)(a9 + 112) = v30;
  *(_OWORD *)(a9 + 128) = v31;
  *(_OWORD *)(a9 + 144) = v32;
  *(__n128 *)(a9 + 32) = result;
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 64) = v27;
  *(_OWORD *)(a9 + 80) = v28;
  return result;
}

double sub_B043C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE8D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE8D8).n128_u64[0];
  return result;
}

uint64_t sub_B04AC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  char v19 = a18;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    long long v29 = (void *)sub_26B710();
    sub_26A300();

    char v19 = a18;
    uint64_t v20 = a17;
  }
  char v30 = v19 & 1;
  sub_26AC90();
  *(_OWORD *)(a9 + 72) = v35;
  *(_OWORD *)(a9 + 88) = v36;
  *(_OWORD *)(a9 + 104) = v37;
  *(_OWORD *)(a9 + 120) = v38;
  *(_OWORD *)(a9 + 24) = v32;
  *(_OWORD *)(a9 + 40) = v33;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v20;
  *(unsigned char *)(a9 + 16) = v30;
  *(_OWORD *)(a9 + 56) = v34;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double sub_B0684@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_B0A64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_2EE978, &qword_2EE980).n128_u64[0];
  return result;
}

double sub_B06E0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for BulletPointStack, (void (*)(uint64_t, uint64_t, uint64_t))sub_BE568, &qword_2EE970).n128_u64[0];
  return result;
}

double sub_B0758@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for SeriesEntityCardView.CardContents, (void (*)(uint64_t, uint64_t, uint64_t))sub_BE568, &qword_2EE968).n128_u64[0];
  return result;
}

double sub_B07D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for SeriesEntityCardView.TextLockupView, (void (*)(uint64_t, uint64_t, uint64_t))sub_BE568, &qword_2EE8B8).n128_u64[0];
  return result;
}

double sub_B0848@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE8C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE8C8).n128_u64[0];
  return result;
}

double sub_B08B8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EEB30, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EEB38).n128_u64[0];
  return result;
}

double sub_B0928@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE8F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE8F8).n128_u64[0];
  return result;
}

double sub_B0998@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_2EE910, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE918).n128_u64[0];
  return result;
}

double sub_B0A08@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_B0A64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_2EE900, &qword_2EE908).n128_u64[0];
  return result;
}

__n128 sub_B0A64@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  char v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    long long v28 = (void *)sub_26B710();
    sub_26A300();

    char v19 = a16;
  }
  sub_26AC90();
  uint64_t v29 = sub_4A98(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  char v30 = (_OWORD *)(a9 + *(int *)(sub_4A98(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *char v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_B0C60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE958, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE960).n128_u64[0];
  return result;
}

double sub_B0CD0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE8E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE8E8).n128_u64[0];
  return result;
}

double sub_B0D40@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE948, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE950).n128_u64[0];
  return result;
}

double sub_B0DB0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for SeriesQuickActionButtonView, (void (*)(uint64_t, uint64_t, uint64_t))sub_BE568, &qword_2EE940).n128_u64[0];
  return result;
}

double sub_B0E28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE930, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE938).n128_u64[0];
  return result;
}

uint64_t sub_B0E98@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_26D850();
    uint64_t v23 = (void *)sub_26B710();
    sub_26A300();
  }
  sub_26AC90();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;

  return sub_BE224((uint64_t)v13);
}

double sub_B1060@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_AFB3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2EE920, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE928).n128_u64[0];
  return result;
}

uint64_t BooksBorderlessButtonStyle.init(size:)@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = (int *)type metadata accessor for BooksBorderlessButtonStyle(0);
  uint64_t v5 = (uint64_t *)&a2[v4[5]];
  *uint64_t v5 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (uint64_t *)&a2[v4[6]];
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (uint64_t *)&a2[v4[7]];
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)&a2[v4[8]];
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = &a2[v4[9]];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = (uint64_t *)&a2[v4[10]];
  *uint64_t v10 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a2 = v3;
  return result;
}

uint64_t type metadata accessor for BooksBorderlessButtonStyle(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EE850);
}

uint64_t BooksBorderedButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v25[1] = a2;
  uint64_t v5 = sub_4A98(&qword_2EE5D8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_4A98(&qword_2EE5E0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EE5E8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v2 + *(int *)(type metadata accessor for BooksBorderedButtonStyle(0) + 32);
  if (*(unsigned char *)(v17 + *(int *)(type metadata accessor for ButtonViewModel(0) + 28)) == 2)
  {
    sub_B173C(v3, a1, (uint64_t)v16);
    uint64_t v18 = &qword_2EE5E8;
    sub_B678((uint64_t)v16, (uint64_t)v13, &qword_2EE5E8);
    swift_storeEnumTagMultiPayload();
    sub_B842C();
    sub_7C18(&qword_2EE6C0, &qword_2EE5D8);
    sub_26B2F0();
    uint64_t v19 = (uint64_t)v16;
  }
  else
  {
    v25[0] = v5;
    unsigned __int8 v20 = sub_26B720();
    unsigned __int8 v21 = sub_26B740();
    char v22 = sub_26B730();
    sub_26B730();
    if (sub_26B730() != v20) {
      char v22 = sub_26B730();
    }
    sub_26B730();
    if (sub_26B730() != v21) {
      char v22 = sub_26B730();
    }
    *uint64_t v8 = v22;
    uint64_t v23 = sub_4A98(&qword_2EE6C8);
    sub_B1578(v3, a1, (uint64_t)&v8[*(int *)(v23 + 44)]);
    uint64_t v18 = &qword_2EE5D8;
    sub_19CC4((uint64_t)v8, (uint64_t)v10, &qword_2EE5D8);
    sub_B678((uint64_t)v10, (uint64_t)v13, &qword_2EE5D8);
    swift_storeEnumTagMultiPayload();
    sub_B842C();
    sub_7C18(&qword_2EE6C0, &qword_2EE5D8);
    sub_26B2F0();
    uint64_t v19 = (uint64_t)v10;
  }
  return sub_B6DC(v19, v18);
}

uint64_t sub_B1578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2EE990);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = sub_4A98(&qword_2EE5E8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v20 - v16;
  sub_B173C(a1, a2, (uint64_t)&v20 - v16);
  sub_B5D30(a1, a2, (uint64_t)v11);
  sub_B678((uint64_t)v17, (uint64_t)v15, &qword_2EE5E8);
  sub_B678((uint64_t)v11, (uint64_t)v9, &qword_2EE990);
  sub_B678((uint64_t)v15, a3, &qword_2EE5E8);
  uint64_t v18 = sub_4A98(&qword_2EE998);
  sub_B678((uint64_t)v9, a3 + *(int *)(v18 + 48), &qword_2EE990);
  sub_B6DC((uint64_t)v11, &qword_2EE990);
  sub_B6DC((uint64_t)v17, &qword_2EE5E8);
  sub_B6DC((uint64_t)v9, &qword_2EE990);
  return sub_B6DC((uint64_t)v15, &qword_2EE5E8);
}

uint64_t sub_B173C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v138 = a3;
  uint64_t v5 = sub_26A780();
  uint64_t v136 = *(void *)(v5 - 8);
  uint64_t v137 = v5;
  __chkstk_darwin(v5);
  v135 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EEA50);
  __chkstk_darwin(v7 - 8);
  v133 = (uint64_t *)((char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_26DD70();
  uint64_t v131 = *(void *)(v9 - 8);
  uint64_t v132 = v9;
  __chkstk_darwin(v9);
  v130 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v123);
  uint64_t v113 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_26B980();
  uint64_t v12 = *(void *)(v112 - 8);
  uint64_t v13 = __chkstk_darwin(v112);
  v111 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v110 = (char *)&v107 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v109 = (char *)&v107 - v18;
  __chkstk_darwin(v17);
  v108 = (char *)&v107 - v19;
  uint64_t v114 = sub_4A98(&qword_2EE988);
  uint64_t v20 = __chkstk_darwin(v114);
  char v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v107 = (uint64_t)&v107 - v23;
  uint64_t v24 = type metadata accessor for SizeConstants(0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  long long v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  long long v30 = (char *)&v107 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  long long v33 = (char *)&v107 - v32;
  __chkstk_darwin(v31);
  __n128 v35 = (char *)&v107 - v34;
  uint64_t v36 = sub_4A98(&qword_2EE640);
  __chkstk_darwin(v36 - 8);
  long long v38 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_4A98(&qword_2EE630);
  __chkstk_darwin(v116);
  uint64_t v121 = (uint64_t)&v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_4A98(&qword_2EE620);
  __chkstk_darwin(v115);
  v122 = (char *)&v107 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_4A98(&qword_2EE610);
  __chkstk_darwin(v120);
  uint64_t v124 = (uint64_t)&v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_4A98(&qword_2EE5F8);
  __chkstk_darwin(v126);
  v129 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4A98(&qword_2EEA58);
  uint64_t v127 = *(void *)(v43 - 8);
  uint64_t v128 = v43;
  __chkstk_darwin(v43);
  v125 = (char *)&v107 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = v38;
  uint64_t v134 = a2;
  sub_B2514((uint64_t)v38);
  uint64_t v45 = *(int *)(type metadata accessor for BooksBorderedButtonStyle(0) + 32);
  uint64_t v139 = a1;
  uint64_t v46 = a1 + v45;
  uint64_t v118 = type metadata accessor for ButtonViewModel(0);
  uint64_t v47 = *(int *)(v118 + 28);
  uint64_t v119 = v46;
  if (*(unsigned char *)(v46 + v47) == 2)
  {
    sub_41378((uint64_t)v35);
    v48 = v108;
    uint64_t v49 = v112;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v108, enum case for Font.TextStyle.subheadline(_:), v112);
    sub_BE568((uint64_t)v35, (uint64_t)v33, type metadata accessor for SizeConstants);
    uint64_t v50 = (uint64_t)v109;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v109, v48, v49);
    uint64_t v51 = v107;
    sub_BE568((uint64_t)v33, v107, type metadata accessor for SizeConstants);
    uint64_t v52 = v113;
    sub_BE568((uint64_t)v33, v113, type metadata accessor for SizeConstants.Environment);
    uint64_t v53 = v123;
    uint64_t v54 = v52 + *(int *)(v123 + 24);
    double v55 = sub_1AB90(v50, v54);
    uint64_t v56 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v54, v56);
    double v57 = 1.0;
    if ((*(void *)&v55 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v57 = v55;
    }
    if ((~*(void *)&v55 & 0x7FF0000000000000) == 0) {
      double v55 = v57;
    }
    sub_BE298((uint64_t)v33, type metadata accessor for SizeConstants);
    v58 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v58(v50, v49);
    uint64_t v59 = *(int *)(v114 + 36);
    *(double *)(v51 + v59) = v55;
    v58((uint64_t)v48, v49);
    sub_BE298((uint64_t)v35, type metadata accessor for SizeConstants);
    double v60 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v51 + v59)) * 28.0;
    double v61 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v51 + *(int *)(v53 + 28)));
    uint64_t v63 = (uint64_t)v130;
    uint64_t v62 = v131;
    uint64_t v64 = v132;
    (*(void (**)(char *, void, uint64_t))(v131 + 104))(v130, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v132);
    *(double *)&long long v140 = v60;
    sub_196FB4(v63, v61);
  }
  else
  {
    sub_41378((uint64_t)v30);
    v65 = v110;
    uint64_t v66 = v112;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v110, enum case for Font.TextStyle.subheadline(_:), v112);
    sub_BE568((uint64_t)v30, (uint64_t)v27, type metadata accessor for SizeConstants);
    uint64_t v67 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v111, v65, v66);
    sub_BE568((uint64_t)v27, (uint64_t)v22, type metadata accessor for SizeConstants);
    uint64_t v68 = v113;
    sub_BE568((uint64_t)v27, v113, type metadata accessor for SizeConstants.Environment);
    uint64_t v69 = v123;
    uint64_t v70 = v68 + *(int *)(v123 + 24);
    double v71 = sub_1AB90(v67, v70);
    uint64_t v72 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v70, v72);
    double v73 = 1.0;
    if ((*(void *)&v71 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v73 = v71;
    }
    if ((~*(void *)&v71 & 0x7FF0000000000000) == 0) {
      double v71 = v73;
    }
    sub_BE298((uint64_t)v27, type metadata accessor for SizeConstants);
    v74 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v74(v67, v66);
    uint64_t v75 = *(int *)(v114 + 36);
    *(double *)&v22[v75] = v71;
    v74((uint64_t)v65, v66);
    sub_BE298((uint64_t)v30, type metadata accessor for SizeConstants);
    double v76 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)&v22[v75]) * 48.0;
    double v77 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)&v22[*(int *)(v69 + 28)]);
    uint64_t v63 = (uint64_t)v130;
    uint64_t v62 = v131;
    uint64_t v64 = v132;
    (*(void (**)(char *, void, uint64_t))(v131 + 104))(v130, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v132);
    *(double *)&long long v140 = v76;
    sub_196FB4(v63, v77);
    uint64_t v51 = (uint64_t)v22;
  }
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
  sub_B6DC(v51, &qword_2EE988);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v78 = (uint64_t)v117;
  uint64_t v79 = v121;
  sub_B678((uint64_t)v117, v121, &qword_2EE640);
  v80 = (_OWORD *)(v79 + *(int *)(v116 + 36));
  long long v81 = v141;
  _OWORD *v80 = v140;
  v80[1] = v81;
  v80[2] = v142;
  sub_B6DC(v78, &qword_2EE640);
  uint64_t v82 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v84 = v83;
  uint64_t v85 = (uint64_t)v122;
  uint64_t v86 = (uint64_t *)&v122[*(int *)(v115 + 36)];
  *uint64_t v86 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v86[1] = v87;
  uint64_t v88 = sub_4A98(&qword_2EEA60);
  uint64_t v89 = v139;
  sub_B4268(v139, (uint64_t)v86 + *(int *)(v88 + 44));
  long long v90 = (uint64_t *)((char *)v86 + *(int *)(sub_4A98(&qword_2EE6A0) + 36));
  *long long v90 = v82;
  v90[1] = v84;
  sub_19CC4(v79, v85, &qword_2EE630);
  uint64_t v91 = v134;
  if (sub_26B540()) {
    double v92 = 0.6;
  }
  else {
    double v92 = 1.0;
  }
  uint64_t v93 = v124;
  sub_B678(v85, v124, &qword_2EE620);
  *(double *)(v93 + *(int *)(v120 + 36)) = v92;
  sub_B6DC(v85, &qword_2EE620);
  uint64_t v94 = sub_26B120();
  uint64_t v95 = (uint64_t)v133;
  uint64_t *v133 = v94;
  *(void *)(v95 + 8) = 0;
  *(unsigned char *)(v95 + 16) = 1;
  uint64_t v96 = sub_4A98(&qword_2EEA68);
  sub_B4F24(v89, v91, v95 + *(int *)(v96 + 44));
  uint64_t v97 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v99 = v98;
  uint64_t v100 = (uint64_t)v129;
  uint64_t v101 = (uint64_t)&v129[*(int *)(v126 + 36)];
  sub_B678(v95, v101, &qword_2EEA50);
  v102 = (uint64_t *)(v101 + *(int *)(sub_4A98(&qword_2EE6B0) + 36));
  uint64_t *v102 = v97;
  v102[1] = v99;
  sub_B678(v93, v100, &qword_2EE610);
  sub_B6DC(v95, &qword_2EEA50);
  sub_B6DC(v93, &qword_2EE610);
  v103 = v135;
  if (*(unsigned char *)(v119 + *(int *)(v118 + 36))) {
    sub_26A770();
  }
  else {
    sub_26A760();
  }
  sub_B8524();
  sub_B8B78(&qword_2EE6B8, (void (*)(uint64_t))&type metadata accessor for HoverEffect);
  v104 = v125;
  uint64_t v105 = v137;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v103, v105);
  sub_B6DC(v100, &qword_2EE5F8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v127 + 32))(v138, v104, v128);
}

uint64_t sub_B2514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v268 = a1;
  uint64_t v266 = sub_4A98(&qword_2EEA38);
  __chkstk_darwin(v266);
  v267 = (char *)&v222 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_4A98(&qword_2EEA40);
  __chkstk_darwin(v253);
  uint64_t v254 = (uint64_t)&v222 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_26DD70();
  uint64_t v274 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  v263 = (char *)&v222 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = sub_4A98(&qword_2EEA48);
  __chkstk_darwin(v250);
  uint64_t v251 = (uint64_t)&v222 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v273);
  uint64_t v270 = (uint64_t)&v222 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = sub_26B980();
  v261 = *(char **)(v262 - 8);
  uint64_t v7 = __chkstk_darwin(v262);
  v248 = (uint64_t (*)(uint64_t))((char *)&v222 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  v247 = (char *)&v222 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v241 = (char *)&v222 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v240 = (char *)&v222 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v234 = (void (*)(uint64_t, uint64_t))((char *)&v222 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  v233 = (char *)&v222 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v232 = (uint64_t (*)(uint64_t))((char *)&v222 - v20);
  __chkstk_darwin(v19);
  v231 = (char *)&v222 - v21;
  uint64_t v271 = sub_4A98(&qword_2EE988);
  uint64_t v22 = __chkstk_darwin(v271);
  uint64_t v246 = (uint64_t)&v222 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v239 = (uint64_t)&v222 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v230 = (uint64_t)&v222 - v27;
  __chkstk_darwin(v26);
  uint64_t v228 = (uint64_t)&v222 - v28;
  uint64_t v29 = type metadata accessor for SizeConstants(0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v242 = (uint64_t)&v222 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v243 = (uint64_t *)((char *)&v222 - v33);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v235 = (uint64_t)&v222 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v236 = (uint64_t)&v222 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v224 = (uint64_t)&v222 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v225 = (uint64_t)&v222 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v222 = (uint64_t)&v222 - v43;
  __chkstk_darwin(v42);
  uint64_t v223 = (uint64_t)&v222 - v44;
  uint64_t v260 = sub_4A98(&qword_2EE670);
  uint64_t v45 = __chkstk_darwin(v260);
  v259 = (char *)&v222 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v249 = (uint64_t)&v222 - v48;
  __chkstk_darwin(v47);
  uint64_t v229 = (uint64_t)&v222 - v49;
  uint64_t v265 = sub_4A98(&qword_2EE660);
  uint64_t v50 = __chkstk_darwin(v265);
  v244 = (uint64_t (*)(uint64_t))((char *)&v222 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = __chkstk_darwin(v50);
  v245 = (uint64_t *)((char *)&v222 - v53);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v237 = (uint64_t)&v222 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v238 = (uint64_t)&v222 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v226 = (uint64_t)&v222 - v59;
  __chkstk_darwin(v58);
  uint64_t v227 = (uint64_t)&v222 - v60;
  uint64_t v264 = sub_4A98(&qword_2EE650);
  __chkstk_darwin(v264);
  v252 = (char *)&v222 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = (void (*)(void))sub_26C700();
  uint64_t v257 = *((void *)v258 - 1);
  __chkstk_darwin(v258);
  v256 = (uint64_t *)((char *)&v222 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_26B520();
  uint64_t v64 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v66 = (char *)&v222 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_4A98(&qword_2EE690);
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v222 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = sub_4A98(&qword_2EE680);
  __chkstk_darwin(v255);
  uint64_t v276 = (uint64_t)&v222 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26B530();
  uint64_t v71 = type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v72 = *(int *)(v71 + 32);
  uint64_t v269 = v1;
  uint64_t v73 = v1 + v72;
  v275 = (int *)type metadata accessor for ButtonViewModel(0);
  if (*(unsigned char *)(v73 + v275[12]) == 1)
  {
    ButtonViewModel.theme.getter((uint64_t *)&v277);
    uint64_t v74 = v277;
  }
  else
  {
    ButtonViewModel.theme.getter((uint64_t *)&v277);
    uint64_t v74 = *((void *)&v278 + 1);
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v69, v66, v63);
  double v76 = (uint64_t *)&v69[*(int *)(v67 + 36)];
  *double v76 = KeyPath;
  v76[1] = v74;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v63);
  uint64_t v77 = *(void *)(v73 + v275[10]);
  if (v77 == 1)
  {
    uint64_t v80 = v269 + *(int *)(v71 + 28);
    uint64_t v81 = *(void *)v80;
    char v82 = *(unsigned char *)(v80 + 8);
    sub_10E0C(*(void *)v80, v82);
    char v83 = sub_40900(v81, v82);
    sub_C374(v81, v82);
    if (v83)
    {
      uint64_t v84 = v256;
      sub_41340((uint64_t)v256);
      uint64_t v79 = v84;
      goto LABEL_9;
    }
  }
  else if (v77 == 2)
  {
    uint64_t v78 = v256;
    sub_41340((uint64_t)v256);
    uint64_t v79 = v78;
LABEL_9:
    uint64_t v85 = (uint64_t)v259;
    uint64_t v86 = v258;
    uint64_t v87 = v257;
    goto LABEL_11;
  }
  uint64_t v87 = v257;
  uint64_t v79 = v256;
  uint64_t v86 = v258;
  (*(void (**)(uint64_t *, void, void (*)(void)))(v257 + 104))(v256, enum case for BlendMode.normal(_:), v258);
  uint64_t v85 = (uint64_t)v259;
LABEL_11:
  uint64_t v88 = v276;
  (*(void (**)(uint64_t, uint64_t *, void (*)(void)))(v87 + 16))(v276 + *(int *)(v255 + 36), v79, v86);
  sub_B678((uint64_t)v69, v88, &qword_2EE690);
  (*(void (**)(uint64_t *, void (*)(void)))(v87 + 8))(v79, v86);
  sub_B6DC((uint64_t)v69, &qword_2EE690);
  int v89 = *(unsigned __int8 *)(v73 + v275[7]);
  if (v89 == 2)
  {
    char v90 = sub_26B760();
    sub_B678(v276, v85, &qword_2EE680);
    uint64_t v91 = v85 + *(int *)(v260 + 36);
    *(unsigned char *)uint64_t v91 = v90;
    *(_OWORD *)(v91 + 8) = 0u;
    *(_OWORD *)(v91 + 24) = 0u;
    uint64_t v92 = v85;
    *(unsigned char *)(v91 + 40) = 1;
    uint64_t v93 = (void (*)(void, void, void))v243;
    sub_41378((uint64_t)v243);
    uint64_t v94 = (void (**)(uint64_t (*)(uint64_t), char *, uint64_t))v261;
    uint64_t v95 = v247;
    uint64_t v96 = v262;
    (*((void (**)(char *, void, uint64_t))v261 + 13))(v247, enum case for Font.TextStyle.subheadline(_:), v262);
    uint64_t v97 = v242;
    sub_BE568((uint64_t)v93, v242, type metadata accessor for SizeConstants);
    uint64_t v98 = v248;
    v94[2](v248, v95, v96);
    uint64_t v99 = v246;
    sub_BE568(v97, v246, type metadata accessor for SizeConstants);
    uint64_t v100 = v270;
    sub_BE568(v97, v270, type metadata accessor for SizeConstants.Environment);
    uint64_t v101 = v273;
    uint64_t v102 = v100 + *(int *)(v273 + 24);
    double v103 = sub_1AB90((uint64_t)v98, v102);
    uint64_t v104 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v104 - 8) + 8))(v102, v104);
    double v105 = 1.0;
    if ((*(void *)&v103 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v105 = v103;
    }
    if ((~*(void *)&v103 & 0x7FF0000000000000) == 0) {
      double v103 = v105;
    }
    sub_BE298(v97, type metadata accessor for SizeConstants);
    v106 = v94[1];
    ((void (*)(uint64_t (*)(uint64_t), uint64_t))v106)(v98, v96);
    uint64_t v107 = *(int *)(v271 + 36);
    *(double *)(v99 + v107) = v103;
    ((void (*)(char *, uint64_t))v106)(v95, v96);
    sub_BE298((uint64_t)v93, type metadata accessor for SizeConstants);
    double v108 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v99 + v107)) * 80.0;
    double v109 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v99 + *(int *)(v101 + 28)));
    uint64_t v110 = v274;
    uint64_t v111 = (uint64_t)v263;
    uint64_t v112 = v272;
    (*(void (**)(char *, void, uint64_t))(v274 + 104))(v263, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v272);
    *(double *)&long long v277 = v108;
    sub_196FB4(v111, v109);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v112);
    sub_B6DC(v99, &qword_2EE988);
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v113 = (uint64_t)v267;
    sub_26AC90();
    uint64_t v114 = v244;
    sub_B678(v92, (uint64_t)v244, &qword_2EE670);
    uint64_t v115 = (_OWORD *)((char *)v114 + *(int *)(v265 + 36));
    long long v116 = v282;
    v115[4] = v281;
    v115[5] = v116;
    v115[6] = v283;
    long long v117 = v278;
    *uint64_t v115 = v277;
    v115[1] = v117;
    long long v118 = v280;
    v115[2] = v279;
    v115[3] = v118;
    sub_B6DC(v92, &qword_2EE670);
    uint64_t v119 = (void (*)(void, void))v245;
    sub_19CC4((uint64_t)v114, (uint64_t)v245, &qword_2EE660);
    sub_B678((uint64_t)v119, v113, &qword_2EE660);
    swift_storeEnumTagMultiPayload();
    sub_B87E0();
    sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
    sub_26B2F0();
    uint64_t v120 = (uint64_t)v119;
    uint64_t v121 = &qword_2EE660;
  }
  else
  {
    if (v89)
    {
      uint64_t v184 = v223;
      sub_41378(v223);
      v185 = (void (**)(uint64_t (*)(uint64_t), char *, uint64_t))v261;
      v186 = v231;
      uint64_t v187 = v262;
      (*((void (**)(char *, void, uint64_t))v261 + 13))(v231, enum case for Font.TextStyle.subheadline(_:), v262);
      uint64_t v188 = v222;
      sub_BE568(v184, v222, type metadata accessor for SizeConstants);
      v189 = v232;
      v185[2](v232, v186, v187);
      uint64_t v190 = v228;
      sub_BE568(v188, v228, type metadata accessor for SizeConstants);
      uint64_t v191 = v270;
      sub_BE568(v188, v270, type metadata accessor for SizeConstants.Environment);
      uint64_t v192 = v273;
      uint64_t v193 = v191 + *(int *)(v273 + 24);
      double v194 = sub_1AB90((uint64_t)v189, v193);
      uint64_t v195 = sub_26AB40();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v195 - 8) + 8))(v193, v195);
      double v196 = 1.0;
      if ((*(void *)&v194 & 0xFFFFFFFFFFFFFLL) == 0) {
        double v196 = v194;
      }
      if ((~*(void *)&v194 & 0x7FF0000000000000) == 0) {
        double v194 = v196;
      }
      sub_BE298(v188, type metadata accessor for SizeConstants);
      v197 = v185[1];
      ((void (*)(uint64_t (*)(uint64_t), uint64_t))v197)(v189, v187);
      uint64_t v198 = *(int *)(v271 + 36);
      *(double *)(v190 + v198) = v194;
      ((void (*)(char *, uint64_t))v197)(v186, v187);
      uint64_t v199 = v184;
      uint64_t v183 = (uint64_t)v252;
      sub_BE298(v199, type metadata accessor for SizeConstants);
      uint64_t v200 = v251;
      sub_BE568(v190, v251, type metadata accessor for SizeConstants.Environment);
      uint64_t v201 = *(int *)(v250 + 36);
      *(void *)(v200 + v201) = *(void *)(v190 + v198);
      sub_B6DC(v190, &qword_2EE988);
      double v202 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v200 + v201)) * 6.0;
      double v203 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v200 + *(int *)(v192 + 28)));
      uint64_t v204 = v274;
      uint64_t v205 = (uint64_t)v263;
      uint64_t v206 = v272;
      (*(void (**)(char *, void, uint64_t))(v274 + 104))(v263, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v272);
      *(double *)&long long v277 = v202;
      sub_196FB4(v205, v203);
      (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v205, v206);
      sub_B6DC(v200, &qword_2EEA48);
      LOBYTE(v206) = sub_26B760();
      sub_26A640();
      uint64_t v208 = v207;
      uint64_t v210 = v209;
      uint64_t v212 = v211;
      uint64_t v214 = v213;
      uint64_t v215 = v229;
      sub_B678(v276, v229, &qword_2EE680);
      uint64_t v216 = v215 + *(int *)(v260 + 36);
      *(unsigned char *)uint64_t v216 = v206;
      *(void *)(v216 + 8) = v208;
      *(void *)(v216 + 16) = v210;
      *(void *)(v216 + 24) = v212;
      *(void *)(v216 + 32) = v214;
      *(unsigned char *)(v216 + 40) = 0;
      uint64_t v217 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      uint64_t v218 = v226;
      sub_AFB3C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v226, 0.0, 1, 0.0, 1, v217, v219, (uint64_t)&qword_2EE670, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE660);
      sub_B6DC(v215, &qword_2EE670);
      uint64_t v182 = v227;
      sub_19CC4(v218, v227, &qword_2EE660);
      sub_B678(v182, v254, &qword_2EE660);
      swift_storeEnumTagMultiPayload();
      sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
    }
    else
    {
      LODWORD(v257) = sub_26B750();
      uint64_t v122 = v225;
      sub_41378(v225);
      LODWORD(v259) = enum case for Font.TextStyle.subheadline(_:);
      uint64_t v123 = v261;
      v258 = (void (*)(void))*((void *)v261 + 13);
      v275 = (int *)(v261 + 104);
      uint64_t v124 = v233;
      uint64_t v125 = v262;
      v258(v233);
      uint64_t v126 = v224;
      v248 = type metadata accessor for SizeConstants;
      sub_BE568(v122, v224, type metadata accessor for SizeConstants);
      uint64_t v127 = (uint64_t *)*((void *)v123 + 2);
      uint64_t v255 = (uint64_t)(v123 + 16);
      v256 = v127;
      uint64_t v128 = (uint64_t)v234;
      ((void (*)(void (*)(uint64_t, uint64_t), char *, uint64_t))v127)(v234, v124, v125);
      uint64_t v129 = v230;
      sub_BE568(v126, v230, type metadata accessor for SizeConstants);
      uint64_t v130 = v270;
      v232 = type metadata accessor for SizeConstants.Environment;
      sub_BE568(v126, v270, type metadata accessor for SizeConstants.Environment);
      uint64_t v131 = v130 + *(int *)(v273 + 24);
      double v132 = sub_1AB90(v128, v131);
      uint64_t v246 = sub_26AB40();
      uint64_t v133 = *(void *)(v246 - 8);
      v245 = *(uint64_t **)(v133 + 8);
      v247 = (char *)(v133 + 8);
      ((void (*)(uint64_t, uint64_t))v245)(v131, v246);
      if ((*(void *)&v132 & 0xFFFFFFFFFFFFFLL) != 0) {
        double v134 = 1.0;
      }
      else {
        double v134 = v132;
      }
      if ((~*(void *)&v132 & 0x7FF0000000000000) == 0) {
        double v132 = v134;
      }
      v244 = type metadata accessor for SizeConstants;
      sub_BE298(v126, type metadata accessor for SizeConstants);
      v135 = (char *)*((void *)v123 + 1);
      v261 = v135;
      ((void (*)(uint64_t, uint64_t))v135)(v128, v125);
      uint64_t v136 = *(int *)(v271 + 36);
      *(double *)(v129 + v136) = v132;
      ((void (*)(char *, uint64_t))v135)(v124, v125);
      sub_BE298(v122, type metadata accessor for SizeConstants);
      uint64_t v137 = v251;
      sub_BE568(v129, v251, type metadata accessor for SizeConstants.Environment);
      uint64_t v138 = *(void *)(v129 + v136);
      uint64_t v139 = *(int *)(v250 + 36);
      *(void *)(v137 + v139) = v138;
      sub_B6DC(v129, &qword_2EE988);
      double v140 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v137 + v139)) * 12.0;
      double v141 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v137 + *(int *)(v273 + 28)));
      LODWORD(v250) = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
      uint64_t v142 = v274;
      v143 = *(uint64_t **)(v274 + 104);
      uint64_t v242 = v274 + 104;
      v243 = v143;
      uint64_t v144 = (uint64_t)v263;
      uint64_t v145 = v272;
      ((void (*)(char *))v143)(v263);
      *(double *)&long long v277 = v140;
      sub_196FB4(v144, v141);
      v146 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
      uint64_t v274 = v142 + 8;
      v234 = v146;
      v146(v144, v145);
      sub_B6DC(v137, &qword_2EEA48);
      sub_26A640();
      uint64_t v148 = v147;
      uint64_t v150 = v149;
      uint64_t v152 = v151;
      uint64_t v154 = v153;
      uint64_t v155 = v249;
      sub_B678(v276, v249, &qword_2EE680);
      uint64_t v156 = v155 + *(int *)(v260 + 36);
      *(unsigned char *)uint64_t v156 = v257;
      *(void *)(v156 + 8) = v148;
      *(void *)(v156 + 16) = v150;
      *(void *)(v156 + 24) = v152;
      *(void *)(v156 + 32) = v154;
      *(unsigned char *)(v156 + 40) = 0;
      uint64_t v157 = v236;
      sub_41378(v236);
      v158 = v240;
      ((void (*)(char *, void, uint64_t))v258)(v240, v259, v125);
      uint64_t v159 = v235;
      v160 = v248;
      sub_BE568(v157, v235, v248);
      uint64_t v161 = (uint64_t)v241;
      ((void (*)(char *, char *, uint64_t))v256)(v241, v158, v125);
      uint64_t v162 = v239;
      sub_BE568(v159, v239, v160);
      uint64_t v163 = v270;
      sub_BE568(v159, v270, v232);
      uint64_t v164 = v273;
      uint64_t v165 = v163 + *(int *)(v273 + 24);
      double v166 = sub_1AB90(v161, v165);
      ((void (*)(uint64_t, uint64_t))v245)(v165, v246);
      if ((*(void *)&v166 & 0xFFFFFFFFFFFFFLL) != 0) {
        double v167 = 1.0;
      }
      else {
        double v167 = v166;
      }
      if ((~*(void *)&v166 & 0x7FF0000000000000) == 0) {
        double v166 = v167;
      }
      uint64_t v168 = v159;
      v169 = v244;
      sub_BE298(v168, v244);
      uint64_t v170 = v161;
      v171 = (void (*)(char *, uint64_t))v261;
      ((void (*)(uint64_t, uint64_t))v261)(v170, v125);
      uint64_t v172 = *(int *)(v271 + 36);
      *(double *)(v162 + v172) = v166;
      v171(v158, v125);
      sub_BE298(v157, v169);
      double v173 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v162 + v172)) * 200.0;
      double v174 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v162 + *(int *)(v164 + 28)));
      uint64_t v175 = v272;
      ((void (*)(uint64_t, void, uint64_t))v243)(v144, v250, v272);
      *(double *)&long long v277 = v173;
      sub_196FB4(v144, v174);
      v234(v144, v175);
      sub_B6DC(v162, &qword_2EE988);
      _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      sub_26AC90();
      uint64_t v176 = v249;
      uint64_t v177 = v237;
      sub_B678(v249, v237, &qword_2EE670);
      v178 = (_OWORD *)(v177 + *(int *)(v265 + 36));
      long long v179 = v282;
      v178[4] = v281;
      v178[5] = v179;
      v178[6] = v283;
      long long v180 = v278;
      _OWORD *v178 = v277;
      v178[1] = v180;
      long long v181 = v280;
      v178[2] = v279;
      v178[3] = v181;
      sub_B6DC(v176, &qword_2EE670);
      uint64_t v182 = v238;
      sub_19CC4(v177, v238, &qword_2EE660);
      sub_B678(v182, v254, &qword_2EE660);
      swift_storeEnumTagMultiPayload();
      sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
      uint64_t v183 = (uint64_t)v252;
    }
    sub_26B2F0();
    uint64_t v220 = (uint64_t)v267;
    sub_B6DC(v182, &qword_2EE660);
    sub_B678(v183, v220, &qword_2EE650);
    swift_storeEnumTagMultiPayload();
    sub_B87E0();
    sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
    sub_26B2F0();
    uint64_t v120 = v183;
    uint64_t v121 = &qword_2EE650;
  }
  sub_B6DC(v120, v121);
  return sub_B6DC(v276, &qword_2EE680);
}

uint64_t sub_B4268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = sub_26C4E0();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_4A98(&qword_2EEAE0);
  __chkstk_darwin(v82);
  uint64_t v92 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_4A98(&qword_2EEAE8);
  uint64_t v7 = __chkstk_darwin(v96);
  uint64_t v84 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (uint64_t)&v79 - v9;
  uint64_t v95 = sub_4A98(&qword_2EEAF0);
  __chkstk_darwin(v95);
  uint64_t v89 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_26C700();
  uint64_t v97 = *(void *)(v91 - 8);
  uint64_t v11 = __chkstk_darwin(v91);
  uint64_t v79 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v80 = (uint64_t)&v79 - v13;
  uint64_t v14 = sub_26AC50();
  __chkstk_darwin(v14);
  uint64_t v16 = (double *)((char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_4A98(&qword_2ECB78);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2EEA18);
  uint64_t v20 = __chkstk_darwin(v94);
  uint64_t v81 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v83 = (uint64_t)&v79 - v22;
  uint64_t v23 = sub_4A98(&qword_2EEAF8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v88 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v87 = (char *)&v79 - v26;
  uint64_t v27 = sub_4A98(&qword_2EEA20);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v86 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v79 - v30;
  uint64_t v98 = type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v99 = a1;
  uint64_t v32 = a1 + *(int *)(v98 + 28);
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_10E0C(*(void *)v32, v34);
  char v35 = sub_40900(v33, v34);
  sub_C374(v33, v34);
  uint64_t v93 = v31;
  if (v35)
  {
    sub_BE250();
    sub_26A8C0();
    uint64_t v36 = sub_4A98(&qword_2EEA28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v31, 0, 1, v36);
  }
  else
  {
    uint64_t v37 = sub_4A98(&qword_2EEA28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v31, 1, 1, v37);
  }
  uint64_t v38 = v99 + *(int *)(v98 + 32);
  uint64_t v39 = type metadata accessor for ButtonViewModel(0);
  uint64_t v40 = (int *)v39;
  if (*(unsigned char *)(v38 + *(int *)(v39 + 32)) == 1)
  {
    if (*(unsigned char *)(v38 + *(int *)(v39 + 28)) == 2) {
      double v41 = 5.0;
    }
    else {
      double v41 = 12.0;
    }
    uint64_t v42 = (char *)v16 + *(int *)(v14 + 20);
    uint64_t v43 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v44 = sub_26B160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
    *uint64_t v16 = v41;
    v16[1] = v41;
    if (*(unsigned char *)(v38 + v40[9]) == 1)
    {
      uint64_t v45 = sub_26C170();
    }
    else
    {
      if (*(unsigned char *)(v38 + v40[12]) == 1)
      {
        ButtonViewModel.theme.getter(&v100);
        uint64_t v45 = v101;
      }
      else
      {
        ButtonViewModel.theme.getter(&v100);
        uint64_t v45 = v102;
      }
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v49 = (uint64_t)v87;
    sub_BE568((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(void *)&v19[*(int *)(v17 + 52)] = v45;
    *(_WORD *)&v19[*(int *)(v17 + 56)] = 256;
    sub_BE298((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v50 = *(void *)(v38 + v40[10]);
    if (v50 == 1)
    {
      uint64_t v54 = *(void *)v32;
      char v55 = *(unsigned char *)(v32 + 8);
      sub_10E0C(*(void *)v32, v55);
      char v56 = sub_40900(v54, v55);
      sub_C374(v54, v55);
      uint64_t v52 = v90;
      uint64_t v53 = (uint64_t)v86;
      uint64_t v51 = v80;
      if ((v56 & 1) == 0)
      {
        uint64_t v58 = v97;
        uint64_t v57 = v91;
        (*(void (**)(uint64_t, void, uint64_t))(v97 + 104))(v80, enum case for BlendMode.normal(_:), v91);
        goto LABEL_34;
      }
      sub_41340(v80);
    }
    else
    {
      if (v50 != 2)
      {
        uint64_t v58 = v97;
        uint64_t v51 = v80;
        uint64_t v57 = v91;
        (*(void (**)(uint64_t, void, uint64_t))(v97 + 104))(v80, enum case for BlendMode.normal(_:), v91);
        uint64_t v52 = v90;
        uint64_t v53 = (uint64_t)v86;
        goto LABEL_34;
      }
      uint64_t v51 = v80;
      sub_41340(v80);
      uint64_t v52 = v90;
      uint64_t v53 = (uint64_t)v86;
    }
    uint64_t v57 = v91;
    uint64_t v58 = v97;
LABEL_34:
    uint64_t v70 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(&v81[*(int *)(v94 + 36)], v51, v57);
    sub_B678((uint64_t)v19, v70, &qword_2ECB78);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v51, v57);
    sub_B6DC((uint64_t)v19, &qword_2ECB78);
    uint64_t v71 = v83;
    sub_19CC4(v70, v83, &qword_2EEA18);
    sub_B678(v71, v89, &qword_2EEA18);
    swift_storeEnumTagMultiPayload();
    sub_BE4CC(&qword_2EEB00, &qword_2EEA18, &qword_2EEB08, &qword_2ECB78);
    sub_BE4CC(&qword_2EEB10, &qword_2EEAE8, &qword_2EEB18, &qword_2EEAE0);
    sub_26B2F0();
    sub_B6DC(v71, &qword_2EEA18);
    uint64_t v60 = (uint64_t)v88;
    uint64_t v72 = (uint64_t)v93;
    goto LABEL_37;
  }
  uint64_t v46 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v47 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v5, v46, v47);
  if (*(unsigned char *)(v38 + v40[9]) == 1)
  {
    uint64_t v48 = sub_26C170();
  }
  else
  {
    if (*(unsigned char *)(v38 + v40[12]) == 1)
    {
      ButtonViewModel.theme.getter(&v100);
      uint64_t v48 = v101;
    }
    else
    {
      ButtonViewModel.theme.getter(&v100);
      uint64_t v48 = v102;
    }
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v60 = (uint64_t)v88;
  uint64_t v59 = v89;
  uint64_t v61 = v97;
  uint64_t v62 = v92;
  sub_BE568((uint64_t)v5, v92, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v63 = v82;
  *(void *)(v62 + *(int *)(v82 + 52)) = v48;
  *(_WORD *)(v62 + *(int *)(v63 + 56)) = 256;
  sub_BE298((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v64 = *(void *)(v38 + v40[10]);
  if (v64 == 1)
  {
    uint64_t v67 = *(void *)v32;
    char v68 = *(unsigned char *)(v32 + 8);
    sub_10E0C(*(void *)v32, v68);
    char v69 = sub_40900(v67, v68);
    sub_C374(v67, v68);
    uint64_t v53 = (uint64_t)v86;
    uint64_t v65 = v79;
    if (v69)
    {
      sub_41340(v79);
      uint64_t v66 = v91;
      uint64_t v61 = v97;
    }
    else
    {
      uint64_t v61 = v97;
      uint64_t v66 = v91;
      (*(void (**)(uint64_t, void, uint64_t))(v97 + 104))(v79, enum case for BlendMode.normal(_:), v91);
    }
  }
  else
  {
    uint64_t v65 = v79;
    if (v64 == 2)
    {
      sub_41340(v79);
      uint64_t v53 = (uint64_t)v86;
      uint64_t v66 = v91;
    }
    else
    {
      uint64_t v66 = v91;
      (*(void (**)(uint64_t, void, uint64_t))(v61 + 104))(v79, enum case for BlendMode.normal(_:), v91);
      uint64_t v53 = (uint64_t)v86;
    }
  }
  uint64_t v73 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(&v84[*(int *)(v96 + 36)], v65, v66);
  uint64_t v74 = v92;
  sub_B678(v92, v73, &qword_2EEAE0);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, v66);
  sub_B6DC(v74, &qword_2EEAE0);
  uint64_t v75 = v73;
  uint64_t v76 = v85;
  sub_19CC4(v75, v85, &qword_2EEAE8);
  sub_B678(v76, v59, &qword_2EEAE8);
  swift_storeEnumTagMultiPayload();
  sub_BE4CC(&qword_2EEB00, &qword_2EEA18, &qword_2EEB08, &qword_2ECB78);
  sub_BE4CC(&qword_2EEB10, &qword_2EEAE8, &qword_2EEB18, &qword_2EEAE0);
  uint64_t v49 = (uint64_t)v87;
  sub_26B2F0();
  sub_B6DC(v76, &qword_2EEAE8);
  uint64_t v72 = (uint64_t)v93;
  uint64_t v52 = v90;
LABEL_37:
  sub_B678(v72, v53, &qword_2EEA20);
  sub_B678(v49, v60, &qword_2EEAF8);
  sub_B678(v53, v52, &qword_2EEA20);
  uint64_t v77 = sub_4A98(&qword_2EEB20);
  sub_B678(v60, v52 + *(int *)(v77 + 48), &qword_2EEAF8);
  sub_B6DC(v49, &qword_2EEAF8);
  sub_B6DC(v72, &qword_2EEA20);
  sub_B6DC(v60, &qword_2EEAF8);
  return sub_B6DC(v53, &qword_2EEA20);
}

uint64_t sub_B4F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v122 = a2;
  uint64_t v131 = a3;
  uint64_t v4 = sub_26C4E0();
  __chkstk_darwin(v4 - 8);
  uint64_t v129 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EEA70);
  __chkstk_darwin(v6 - 8);
  uint64_t v121 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2EEA78);
  __chkstk_darwin(v113);
  uint64_t v114 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_4A98(&qword_2EEA80);
  uint64_t v9 = __chkstk_darwin(v123);
  uint64_t v117 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v118 = (char *)&v103 - v11;
  uint64_t v126 = sub_4A98(&qword_2EEA88);
  __chkstk_darwin(v126);
  uint64_t v119 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_26C700();
  uint64_t v124 = *(void *)(v13 - 8);
  uint64_t v125 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v115 = (uint64_t)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v116 = (uint64_t)&v103 - v16;
  uint64_t v128 = sub_26AC50();
  __chkstk_darwin(v128);
  uint64_t v127 = (double *)((char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_4A98(&qword_2EE9E8);
  __chkstk_darwin(v18 - 8);
  uint64_t v120 = (uint64_t)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2EE9F0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4A98(&qword_2EE9F8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v103 - v27;
  uint64_t v29 = sub_4A98(&qword_2EEA90);
  uint64_t v132 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v33 = a1;
  uint64_t v34 = a1 + *(int *)(v32 + 32);
  char v35 = (int *)type metadata accessor for ButtonViewModel(0);
  uint64_t v36 = v35[9];
  uint64_t v130 = v34;
  if (*(unsigned char *)(v34 + v36) == 1)
  {
    uint64_t v104 = v20;
    double v105 = v26;
    v106 = v22;
    uint64_t v107 = v28;
    uint64_t v37 = (uint64_t)v129;
    uint64_t v108 = v32;
    uint64_t v109 = v33;
    uint64_t v110 = v31;
    uint64_t v112 = v23;
    uint64_t v111 = v29;
    uint64_t v38 = v130;
    uint64_t v39 = v35;
    if (*(unsigned char *)(v130 + v35[8]) == 1)
    {
      if (*(unsigned char *)(v130 + v35[7]) == 2) {
        double v40 = 5.0;
      }
      else {
        double v40 = 12.0;
      }
      double v41 = v127;
      uint64_t v42 = (char *)v127 + *(int *)(v128 + 20);
      uint64_t v43 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v44 = sub_26B160();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
      *double v41 = v40;
      v41[1] = v40;
      if (*(unsigned char *)(v38 + v39[12]) == 1)
      {
        ButtonViewModel.theme.getter((uint64_t *)&v133);
        uint64_t v45 = *((void *)&v133 + 1);
      }
      else
      {
        ButtonViewModel.theme.getter((uint64_t *)&v133);
        uint64_t v45 = v134;
      }
      swift_release();
      swift_release();
      swift_release();
      uint64_t v52 = v109;
      uint64_t v53 = v108;
      uint64_t v54 = v120;
      sub_26A7B0();
      sub_BE568((uint64_t)v41, v54, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      uint64_t v55 = v54 + *(int *)(sub_4A98(&qword_2EEA00) + 36);
      long long v56 = v134;
      *(_OWORD *)uint64_t v55 = v133;
      *(_OWORD *)(v55 + 16) = v56;
      *(void *)(v55 + 32) = v135;
      uint64_t v57 = sub_4A98(&qword_2EEA08);
      *(void *)(v54 + *(int *)(v57 + 52)) = v45;
      *(_WORD *)(v54 + *(int *)(v57 + 56)) = 256;
      uint64_t v58 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      uint64_t v60 = v59;
      uint64_t v61 = (uint64_t *)(v54 + *(int *)(sub_4A98(&qword_2EEA10) + 36));
      uint64_t *v61 = v58;
      v61[1] = v60;
      sub_BE298((uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      uint64_t v62 = *(void *)(v38 + v39[10]);
      if (v62 == 1)
      {
        uint64_t v84 = v52 + *(int *)(v53 + 28);
        uint64_t v85 = *(void *)v84;
        char v86 = *(unsigned char *)(v84 + 8);
        sub_10E0C(*(void *)v84, v86);
        char v87 = sub_40900(v85, v86);
        sub_C374(v85, v86);
        uint64_t v64 = v131;
        uint64_t v65 = (uint64_t)v119;
        uint64_t v66 = (uint64_t)v110;
        uint64_t v88 = v104;
        if (v87)
        {
          uint64_t v63 = v116;
          sub_41340(v116);
          uint64_t v68 = v124;
          uint64_t v67 = v125;
        }
        else
        {
          uint64_t v68 = v124;
          uint64_t v67 = v125;
          uint64_t v63 = v116;
          (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v116, enum case for BlendMode.normal(_:), v125);
        }
        uint64_t v89 = (uint64_t)v106;
      }
      else
      {
        if (v62 == 2)
        {
          uint64_t v63 = v116;
          sub_41340(v116);
          uint64_t v64 = v131;
          uint64_t v65 = (uint64_t)v119;
          uint64_t v66 = (uint64_t)v110;
          uint64_t v68 = v124;
          uint64_t v67 = v125;
        }
        else
        {
          uint64_t v68 = v124;
          uint64_t v67 = v125;
          uint64_t v63 = v116;
          (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v116, enum case for BlendMode.normal(_:), v125);
          uint64_t v64 = v131;
          uint64_t v65 = (uint64_t)v119;
          uint64_t v66 = (uint64_t)v110;
        }
        uint64_t v89 = (uint64_t)v106;
        uint64_t v88 = v104;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v89 + *(int *)(v88 + 36), v63, v67);
      uint64_t v96 = v120;
      sub_B678(v120, v89, &qword_2EE9E8);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v63, v67);
      sub_B6DC(v96, &qword_2EE9E8);
      if (sub_26B540()) {
        double v97 = 0.6;
      }
      else {
        double v97 = 1.0;
      }
      uint64_t v98 = (uint64_t)v105;
      sub_B678(v89, (uint64_t)v105, &qword_2EE9F0);
      *(double *)(v98 + *(int *)(v112 + 36)) = v97;
      sub_B6DC(v89, &qword_2EE9F0);
      uint64_t v99 = (uint64_t)v107;
      sub_19CC4(v98, (uint64_t)v107, &qword_2EE9F8);
      sub_B678(v99, v65, &qword_2EE9F8);
      swift_storeEnumTagMultiPayload();
      sub_BE2F8();
      sub_BE394();
      sub_26B2F0();
      sub_B6DC(v99, &qword_2EE9F8);
      uint64_t v81 = v111;
    }
    else
    {
      uint64_t v49 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v50 = sub_26B160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v37, v49, v50);
      if (*(unsigned char *)(v38 + v39[12]) == 1)
      {
        ButtonViewModel.theme.getter((uint64_t *)&v133);
        uint64_t v51 = *((void *)&v133 + 1);
      }
      else
      {
        ButtonViewModel.theme.getter((uint64_t *)&v133);
        uint64_t v51 = v134;
      }
      swift_release();
      swift_release();
      swift_release();
      uint64_t v69 = (uint64_t)v119;
      uint64_t v70 = (uint64_t)v118;
      uint64_t v71 = v121;
      sub_26A7B0();
      sub_BE568(v37, v71, (uint64_t (*)(void))&type metadata accessor for Capsule);
      uint64_t v72 = v71 + *(int *)(sub_4A98(&qword_2EEA98) + 36);
      long long v73 = v134;
      *(_OWORD *)uint64_t v72 = v133;
      *(_OWORD *)(v72 + 16) = v73;
      *(void *)(v72 + 32) = v135;
      uint64_t v74 = sub_4A98(&qword_2EEAA0);
      *(void *)(v71 + *(int *)(v74 + 52)) = v51;
      *(_WORD *)(v71 + *(int *)(v74 + 56)) = 256;
      uint64_t v75 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      uint64_t v77 = v76;
      uint64_t v78 = (uint64_t *)(v71 + *(int *)(sub_4A98(&qword_2EEAA8) + 36));
      *uint64_t v78 = v75;
      v78[1] = v77;
      sub_BE298(v37, (uint64_t (*)(void))&type metadata accessor for Capsule);
      uint64_t v79 = *(void *)(v130 + v39[10]);
      if (v79 == 1)
      {
        uint64_t v90 = v109 + *(int *)(v108 + 28);
        uint64_t v91 = *(void *)v90;
        char v92 = *(unsigned char *)(v90 + 8);
        sub_10E0C(*(void *)v90, v92);
        char v93 = sub_40900(v91, v92);
        sub_C374(v91, v92);
        uint64_t v64 = v131;
        uint64_t v81 = v111;
        uint64_t v94 = (uint64_t)v114;
        uint64_t v95 = v113;
        if (v93)
        {
          uint64_t v80 = v115;
          sub_41340(v115);
          uint64_t v83 = v124;
          uint64_t v82 = v125;
        }
        else
        {
          uint64_t v83 = v124;
          uint64_t v82 = v125;
          uint64_t v80 = v115;
          (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v115, enum case for BlendMode.normal(_:), v125);
        }
        uint64_t v70 = (uint64_t)v118;
      }
      else
      {
        if (v79 == 2)
        {
          uint64_t v80 = v115;
          sub_41340(v115);
          uint64_t v64 = v131;
          uint64_t v81 = v111;
          uint64_t v83 = v124;
          uint64_t v82 = v125;
        }
        else
        {
          uint64_t v83 = v124;
          uint64_t v82 = v125;
          uint64_t v80 = v115;
          (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v115, enum case for BlendMode.normal(_:), v125);
          uint64_t v64 = v131;
          uint64_t v81 = v111;
        }
        uint64_t v94 = (uint64_t)v114;
        uint64_t v95 = v113;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v94 + *(int *)(v95 + 36), v80, v82);
      uint64_t v100 = v121;
      sub_B678(v121, v94, &qword_2EEA70);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v80, v82);
      sub_B6DC(v100, &qword_2EEA70);
      if (sub_26B540()) {
        double v101 = 0.6;
      }
      else {
        double v101 = 1.0;
      }
      uint64_t v102 = v117;
      sub_B678(v94, v117, &qword_2EEA78);
      *(double *)(v102 + *(int *)(v123 + 36)) = v101;
      sub_B6DC(v94, &qword_2EEA78);
      sub_19CC4(v102, v70, &qword_2EEA80);
      sub_B678(v70, v69, &qword_2EEA80);
      swift_storeEnumTagMultiPayload();
      sub_BE2F8();
      sub_BE394();
      uint64_t v66 = (uint64_t)v110;
      sub_26B2F0();
      sub_B6DC(v70, &qword_2EEA80);
    }
    sub_19CC4(v66, v64, &qword_2EEA90);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v64, 0, 1, v81);
  }
  else
  {
    uint64_t v46 = v131;
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56);
    return v47(v46, 1, 1, v29);
  }
}

uint64_t sub_B5D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v59 = a3;
  uint64_t v4 = sub_4A98(&qword_2EE9A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_26AC50();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (_OWORD *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_4A98(&qword_2EE640);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EE9A8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2EE9B0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2EE9B8);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v55 = (uint64_t)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4A98(&qword_2EE9C0) - 8;
  __chkstk_darwin(v57);
  long long v56 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B2514((uint64_t)v12);
  uint64_t v25 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v27 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  __asm { FMOV            V0.2D, #25.0 }
  *uint64_t v9 = _Q0;
  uint64_t v33 = (uint64_t)&v16[*(int *)(v14 + 44)];
  sub_BE568((uint64_t)v9, v33, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v33 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v12, (uint64_t)v16, &qword_2EE640);
  sub_BE298((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v12, &qword_2EE640);
  uint64_t v34 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v36 = v35;
  uint64_t v37 = (uint64_t *)&v20[*(int *)(v18 + 44)];
  uint64_t *v37 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  v37[1] = v38;
  uint64_t v39 = sub_4A98(&qword_2EE9C8);
  sub_B61FC(a1, (uint64_t)v37 + *(int *)(v39 + 44));
  double v40 = (uint64_t *)((char *)v37 + *(int *)(sub_4A98(&qword_2EE9D0) + 36));
  *double v40 = v34;
  v40[1] = v36;
  sub_19CC4((uint64_t)v16, (uint64_t)v20, &qword_2EE9A8);
  uint64_t v41 = v54;
  if (sub_26B540()) {
    double v42 = 0.6;
  }
  else {
    double v42 = 1.0;
  }
  uint64_t v43 = v55;
  sub_B678((uint64_t)v20, v55, &qword_2EE9B0);
  *(double *)(v43 + *(int *)(v22 + 44)) = v42;
  sub_B6DC((uint64_t)v20, &qword_2EE9B0);
  uint64_t v44 = sub_26B120();
  uint64_t v45 = (uint64_t)v58;
  uint64_t *v58 = v44;
  *(void *)(v45 + 8) = 0;
  *(unsigned char *)(v45 + 16) = 1;
  uint64_t v46 = sub_4A98(&qword_2EE9D8);
  sub_B6898(a1, v41, v45 + *(int *)(v46 + 44));
  uint64_t v47 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t)v56;
  uint64_t v51 = (uint64_t)&v56[*(int *)(v57 + 44)];
  sub_B678(v45, v51, &qword_2EE9A0);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(sub_4A98(&qword_2EE9E0) + 36));
  *uint64_t v52 = v47;
  v52[1] = v49;
  sub_B678(v43, v50, &qword_2EE9B8);
  sub_B6DC(v45, &qword_2EE9A0);
  sub_B6DC(v43, &qword_2EE9B8);
  return sub_19CC4(v50, v59, &qword_2EE9C0);
}

uint64_t sub_B61FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_26C700();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  __chkstk_darwin(v3);
  uint64_t v51 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26AC50();
  __chkstk_darwin(v5);
  uint64_t v7 = (double *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_4A98(&qword_2ECB78);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_4A98(&qword_2EEA18);
  uint64_t v11 = __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  uint64_t v57 = (uint64_t)&v48 - v16;
  uint64_t v17 = sub_4A98(&qword_2EEA20);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v56 = (uint64_t)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v58 = type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v59 = a1;
  uint64_t v22 = a1 + *(int *)(v58 + 28);
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_10E0C(*(void *)v22, v24);
  char v25 = sub_40900(v23, v24);
  sub_C374(v23, v24);
  if (v25)
  {
    sub_BE250();
    sub_26A8C0();
    uint64_t v26 = sub_4A98(&qword_2EEA28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = sub_4A98(&qword_2EEA28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v21, 1, 1, v27);
  }
  uint64_t v28 = v59 + *(int *)(v58 + 32);
  uint64_t v29 = (int *)type metadata accessor for ButtonViewModel(0);
  if (*(unsigned char *)(v28 + v29[7]) == 2) {
    double v30 = 5.0;
  }
  else {
    double v30 = 12.0;
  }
  uint64_t v31 = (char *)v7 + *(int *)(v5 + 20);
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  *uint64_t v7 = v30;
  v7[1] = v30;
  if (*(unsigned char *)(v28 + v29[9]) == 1)
  {
    uint64_t v34 = sub_26C170();
  }
  else
  {
    if (*(unsigned char *)(v28 + v29[12]) == 1)
    {
      ButtonViewModel.theme.getter(v60);
      uint64_t v34 = v60[1];
      uint64_t v49 = v60[0];
    }
    else
    {
      ButtonViewModel.theme.getter(v60);
      uint64_t v49 = v60[0];
      uint64_t v34 = v60[2];
    }
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v35 = v50;
  sub_BE568((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v10[*(int *)(v8 + 52)] = v34;
  *(_WORD *)&v10[*(int *)(v8 + 56)] = 256;
  sub_BE298((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v36 = *(void *)(v28 + v29[10]);
  if (v36 == 1)
  {
    uint64_t v40 = *(void *)v22;
    char v41 = *(unsigned char *)(v22 + 8);
    sub_10E0C(*(void *)v22, v41);
    char v42 = sub_40900(v40, v41);
    sub_C374(v40, v41);
    uint64_t v39 = v53;
    uint64_t v38 = v54;
    uint64_t v37 = v51;
    uint64_t v43 = (uint64_t)v52;
    if (v42) {
      sub_41340(v51);
    }
    else {
      (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v51, enum case for BlendMode.normal(_:), v54);
    }
  }
  else
  {
    if (v36 == 2)
    {
      uint64_t v37 = v51;
      sub_41340(v51);
      uint64_t v39 = v53;
      uint64_t v38 = v54;
    }
    else
    {
      uint64_t v39 = v53;
      uint64_t v38 = v54;
      uint64_t v37 = v51;
      (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v51, enum case for BlendMode.normal(_:), v54);
    }
    uint64_t v43 = (uint64_t)v52;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(&v15[*(int *)(v55 + 36)], v37, v38);
  sub_B678((uint64_t)v10, (uint64_t)v15, &qword_2ECB78);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  sub_B6DC((uint64_t)v10, &qword_2ECB78);
  uint64_t v44 = v57;
  sub_19CC4((uint64_t)v15, v57, &qword_2EEA18);
  uint64_t v45 = v56;
  sub_B678((uint64_t)v21, v56, &qword_2EEA20);
  sub_B678(v44, v43, &qword_2EEA18);
  sub_B678(v45, v35, &qword_2EEA20);
  uint64_t v46 = sub_4A98(&qword_2EEA30);
  sub_B678(v43, v35 + *(int *)(v46 + 48), &qword_2EEA18);
  sub_B6DC(v44, &qword_2EEA18);
  sub_B6DC((uint64_t)v21, &qword_2EEA20);
  sub_B6DC(v43, &qword_2EEA18);
  return sub_B6DC(v45, &qword_2EEA20);
}

uint64_t sub_B6898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v70 = a3;
  uint64_t v65 = sub_26C700();
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v68 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_26AC50();
  __chkstk_darwin(v69);
  uint64_t v6 = (double *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_4A98(&qword_2EE9E8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EE9F0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EE9F8);
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v19 = type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v20 = a1;
  uint64_t v21 = a1 + *(int *)(v19 + 32);
  uint64_t v22 = type metadata accessor for ButtonViewModel(0);
  if (*(unsigned char *)(v21 + *(int *)(v22 + 36)) == 1)
  {
    uint64_t v58 = v19;
    uint64_t v59 = v9;
    uint64_t v62 = v10;
    uint64_t v63 = v18;
    uint64_t v64 = v16;
    uint64_t v60 = v12;
    uint64_t v61 = v13;
    uint64_t v23 = v20;
    if (*(unsigned char *)(v21 + *(int *)(v22 + 28)) == 2) {
      double v24 = 5.0;
    }
    else {
      double v24 = 12.0;
    }
    uint64_t v25 = (uint64_t)v68;
    uint64_t v26 = (char *)v6 + *(int *)(v69 + 20);
    uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v28 = v22;
    uint64_t v29 = sub_26B160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v26, v27, v29);
    *uint64_t v6 = v24;
    v6[1] = v24;
    if (*(unsigned char *)(v21 + *(int *)(v28 + 48)) == 1)
    {
      ButtonViewModel.theme.getter((uint64_t *)&v72);
      uint64_t v30 = *((void *)&v72 + 1);
    }
    else
    {
      ButtonViewModel.theme.getter((uint64_t *)&v72);
      uint64_t v30 = v73;
    }
    swift_release();
    swift_release();
    uint64_t v34 = v30;
    swift_release();
    uint64_t v35 = v23;
    uint64_t v37 = (uint64_t)v59;
    uint64_t v36 = (uint64_t)v60;
    uint64_t v38 = v58;
    sub_26A7B0();
    sub_BE568((uint64_t)v6, v37, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v39 = v37 + *(int *)(sub_4A98(&qword_2EEA00) + 36);
    long long v40 = v73;
    *(_OWORD *)uint64_t v39 = v72;
    *(_OWORD *)(v39 + 16) = v40;
    *(void *)(v39 + 32) = v74;
    uint64_t v41 = sub_4A98(&qword_2EEA08);
    *(void *)(v37 + *(int *)(v41 + 52)) = v34;
    *(_WORD *)(v37 + *(int *)(v41 + 56)) = 256;
    uint64_t v42 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v44 = v43;
    uint64_t v45 = (uint64_t *)(v37 + *(int *)(sub_4A98(&qword_2EEA10) + 36));
    uint64_t *v45 = v42;
    v45[1] = v44;
    sub_BE298((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v46 = *(void *)(v21 + *(int *)(v28 + 40));
    if (v46 == 1)
    {
      uint64_t v50 = v35 + *(int *)(v38 + 28);
      uint64_t v69 = v35;
      uint64_t v51 = *(void *)v50;
      char v52 = *(unsigned char *)(v50 + 8);
      sub_10E0C(*(void *)v50, v52);
      char v53 = sub_40900(v51, v52);
      sub_C374(v51, v52);
      uint64_t v47 = v70;
      uint64_t v48 = v65;
      uint64_t v54 = v61;
      if (v53)
      {
        sub_41340(v25);
        uint64_t v49 = v67;
      }
      else
      {
        uint64_t v49 = v67;
        (*(void (**)(uint64_t, void, uint64_t))(v67 + 104))(v25, enum case for BlendMode.normal(_:), v65);
      }
    }
    else
    {
      if (v46 == 2)
      {
        sub_41340(v25);
        uint64_t v47 = v70;
        uint64_t v48 = v65;
        uint64_t v49 = v67;
      }
      else
      {
        uint64_t v49 = v67;
        uint64_t v48 = v65;
        (*(void (**)(uint64_t, void, uint64_t))(v67 + 104))(v25, enum case for BlendMode.normal(_:), v65);
        uint64_t v47 = v70;
      }
      uint64_t v54 = v61;
    }
    uint64_t v55 = (uint64_t)v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v36 + *(int *)(v62 + 36), v25, v48);
    sub_B678(v37, v36, &qword_2EE9E8);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v25, v48);
    sub_B6DC(v37, &qword_2EE9E8);
    if (sub_26B540()) {
      double v56 = 0.6;
    }
    else {
      double v56 = 1.0;
    }
    sub_B678(v36, v55, &qword_2EE9F0);
    *(double *)(v55 + *(int *)(v54 + 36)) = v56;
    sub_B6DC(v36, &qword_2EE9F0);
    uint64_t v57 = (uint64_t)v63;
    sub_19CC4(v55, (uint64_t)v63, &qword_2EE9F8);
    sub_19CC4(v57, v47, &qword_2EE9F8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v47, 0, 1, v54);
  }
  else
  {
    uint64_t v31 = v70;
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
    return v32(v31, 1, 1, v13);
  }
}

uint64_t BooksBorderlessButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v113 = a2;
  uint64_t v5 = sub_26B310();
  uint64_t v111 = *(void *)(v5 - 8);
  uint64_t v112 = v5;
  __chkstk_darwin(v5);
  uint64_t v110 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26C700();
  uint64_t v108 = *(void *)(v7 - 8);
  uint64_t v109 = v7;
  __chkstk_darwin(v7);
  uint64_t v107 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_26A6E0();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v9 = __chkstk_darwin(v86);
  uint64_t v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v83 = (uint64_t)&v81 - v11;
  uint64_t v12 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v82 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_26B910();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_26B980();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FontConstants.Button(0);
  __chkstk_darwin(v22 - 8);
  double v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_26B520();
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2EE6D0);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  char v87 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2EE6D8);
  __chkstk_darwin(v95);
  uint64_t v93 = (uint64_t)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2EE6E0);
  __chkstk_darwin(v94);
  uint64_t v98 = (uint64_t)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_4A98(&qword_2EE6E8);
  __chkstk_darwin(v97);
  uint64_t v99 = (uint64_t)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_4A98(&qword_2EE6F0);
  __chkstk_darwin(v96);
  uint64_t v100 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_4A98(&qword_2EE6F8);
  __chkstk_darwin(v102);
  uint64_t v104 = (uint64_t)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_4A98(&qword_2EE700);
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  double v101 = (char *)&v81 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a1;
  sub_26B530();
  uint64_t v36 = type metadata accessor for BooksBorderlessButtonStyle(0);
  sub_4208C((uint64_t)v24);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for Font.TextStyle.subheadline(_:), v18);
  uint64_t v37 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
  sub_26B8B0();
  sub_26B8E0();
  sub_B6DC((uint64_t)v17, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v38 = v91;
  uint64_t v39 = v89;
  uint64_t v40 = v92;
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v89, enum case for Font.Leading.tight(_:), v92);
  uint64_t v41 = sub_26B930();
  swift_release();
  uint64_t v42 = v38;
  uint64_t v43 = v36;
  uint64_t v44 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v40);
  sub_BE298((uint64_t)v24, type metadata accessor for FontConstants.Button);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v88;
  uint64_t v47 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v44, v26, v90);
  uint64_t v48 = (uint64_t *)(v44 + *(int *)(v28 + 44));
  uint64_t *v48 = KeyPath;
  v48[1] = v41;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v47);
  uint64_t v49 = &v3[*(int *)(v43 + 36)];
  uint64_t v50 = *(void *)v49;
  LOBYTE(v47) = v49[8];
  sub_10E0C(*(void *)v49, v47);
  LOBYTE(v40) = sub_40900(v50, v47);
  sub_C374(v50, v47);
  if (v40)
  {
    uint64_t v51 = v82;
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v82);
    uint64_t v52 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    sub_BE298(v51, type metadata accessor for ColorConstants);
    uint64_t v114 = v52;
  }
  else
  {
    int v115 = sub_26B460();
  }
  uint64_t v53 = sub_26A8E0();
  uint64_t v54 = v93;
  sub_B678(v44, v93, &qword_2EE6D0);
  *(void *)(v54 + *(int *)(v95 + 36)) = v53;
  sub_B6DC(v44, &qword_2EE6D0);
  LOBYTE(v53) = sub_26B760();
  uint64_t v55 = v98;
  sub_B678(v54, v98, &qword_2EE6D8);
  uint64_t v56 = v55 + *(int *)(v94 + 36);
  *(unsigned char *)uint64_t v56 = v53;
  *(_OWORD *)(v56 + 8) = 0u;
  *(_OWORD *)(v56 + 24) = 0u;
  *(unsigned char *)(v56 + 40) = 1;
  sub_B6DC(v54, &qword_2EE6D8);
  double v57 = 1.0;
  if (sub_26B540())
  {
    uint64_t v58 = v83;
    sub_40FB4(v83);
    uint64_t v59 = v85;
    uint64_t v60 = v84;
    uint64_t v61 = v86;
    (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for ColorScheme.dark(_:), v86);
    char v62 = sub_26A6D0();
    uint64_t v63 = *(void (**)(char *, uint64_t))(v59 + 8);
    v63(v60, v61);
    v63((char *)v58, v61);
    if (v62) {
      double v57 = 0.4;
    }
    else {
      double v57 = 0.2;
    }
  }
  uint64_t v64 = v99;
  sub_B678(v55, v99, &qword_2EE6E0);
  *(double *)(v64 + *(int *)(v97 + 36)) = v57;
  sub_B6DC(v55, &qword_2EE6E0);
  uint64_t v65 = v107;
  sub_41340(v107);
  uint64_t v66 = (uint64_t)v100;
  uint64_t v68 = v108;
  uint64_t v67 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(&v100[*(int *)(v96 + 36)], v65, v109);
  sub_B678(v64, v66, &qword_2EE6E8);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v65, v67);
  sub_B6DC(v64, &qword_2EE6E8);
  uint64_t v69 = sub_B7C2C();
  char v71 = v70 & 1;
  char v72 = *v3 & 1;
  if (v72) {
    double v73 = INFINITY;
  }
  else {
    double v73 = 0.0;
  }
  uint64_t v74 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v75 = v104;
  sub_AFB3C(*(double *)&v69, v71, 0.0, 1, v73, v72 ^ 1, 0.0, 1, v104, 0.0, 1, 0.0, 1, v74, v76, (uint64_t)&qword_2EE6F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_B678, &qword_2EE6F8);
  sub_B6DC(v66, &qword_2EE6F0);
  uint64_t v77 = v110;
  sub_26AD30();
  sub_B86BC(&qword_2EE708, &qword_2EE6F8, (void (*)(void))sub_B8A28);
  sub_B8B78((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v78 = v101;
  uint64_t v79 = v112;
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v77, v79);
  sub_B6DC(v75, &qword_2EE6F8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v103 + 32))(v113, v78, v105);
}

uint64_t sub_B7C2C()
{
  uint64_t v1 = sub_26DD70();
  uint64_t v67 = *(void *)(v1 - 8);
  uint64_t v68 = v1;
  __chkstk_darwin(v1);
  uint64_t v66 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v69);
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26B980();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  char v62 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v61 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v61 - v12;
  __chkstk_darwin(v11);
  uint64_t v64 = (char *)&v61 - v14;
  uint64_t v65 = sub_4A98(&qword_2EE988);
  uint64_t v15 = __chkstk_darwin(v65);
  uint64_t v63 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = type metadata accessor for SizeConstants(0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v61 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v61 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v61 - v29;
  int v31 = *v0;
  if (v31 == 2)
  {
    type metadata accessor for BooksBorderlessButtonStyle(0);
    sub_41378((uint64_t)v30);
    uint64_t v32 = v64;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v64, enum case for Font.TextStyle.subheadline(_:), v5);
    sub_BE568((uint64_t)v30, (uint64_t)v28, type metadata accessor for SizeConstants);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v32, v5);
    sub_BE568((uint64_t)v28, (uint64_t)v18, type metadata accessor for SizeConstants);
    sub_BE568((uint64_t)v28, (uint64_t)v4, type metadata accessor for SizeConstants.Environment);
    uint64_t v33 = (uint64_t)&v4[*(int *)(v69 + 24)];
    double v34 = sub_1AB90((uint64_t)v13, v33);
    uint64_t v35 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v33, v35);
    double v36 = 1.0;
    if ((*(void *)&v34 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v36 = v34;
    }
    if ((~*(void *)&v34 & 0x7FF0000000000000) == 0) {
      double v34 = v36;
    }
    sub_BE298((uint64_t)v28, type metadata accessor for SizeConstants);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v6 + 8);
    v37(v13, v5);
    uint64_t v38 = *(int *)(v65 + 36);
    *(double *)&v18[v38] = v34;
    v37(v32, v5);
    sub_BE298((uint64_t)v30, type metadata accessor for SizeConstants);
    double v39 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)&v18[v38]) * 80.0;
    double v40 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)&v18[*(int *)(v69 + 28)]);
    uint64_t v41 = (uint64_t)v66;
    uint64_t v42 = v67;
    uint64_t v43 = v68;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v68);
    double v70 = v39;
    sub_196FB4(v41, v40);
    double v44 = v70;
  }
  else
  {
    uint64_t v45 = v69;
    if (v31)
    {
      double v44 = 0.0;
      return *(void *)&v44;
    }
    uint64_t v46 = v5;
    type metadata accessor for BooksBorderlessButtonStyle(0);
    sub_41378((uint64_t)v25);
    uint64_t v47 = v6;
    uint64_t v48 = v61;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v61, enum case for Font.TextStyle.subheadline(_:), v46);
    sub_BE568((uint64_t)v25, (uint64_t)v22, type metadata accessor for SizeConstants);
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v50 = (uint64_t)v62;
    v49(v62, v48, v46);
    uint64_t v51 = v63;
    sub_BE568((uint64_t)v22, v63, type metadata accessor for SizeConstants);
    sub_BE568((uint64_t)v22, (uint64_t)v4, type metadata accessor for SizeConstants.Environment);
    uint64_t v52 = (uint64_t)&v4[*(int *)(v45 + 24)];
    double v53 = sub_1AB90(v50, v52);
    uint64_t v54 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v52, v54);
    double v55 = 1.0;
    if ((*(void *)&v53 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v55 = v53;
    }
    if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
      double v53 = v55;
    }
    sub_BE298((uint64_t)v22, type metadata accessor for SizeConstants);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v56(v50, v46);
    uint64_t v57 = *(int *)(v65 + 36);
    *(double *)(v51 + v57) = v53;
    v56((uint64_t)v48, v46);
    sub_BE298((uint64_t)v25, type metadata accessor for SizeConstants);
    double v58 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v51 + v57)) * 200.0;
    double v59 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v51 + *(int *)(v45 + 28)));
    uint64_t v41 = (uint64_t)v66;
    uint64_t v42 = v67;
    uint64_t v43 = v68;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v68);
    double v70 = v58;
    sub_196FB4(v41, v59);
    double v44 = v70;
    uint64_t v18 = (char *)v51;
  }
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  sub_B6DC((uint64_t)v18, &qword_2EE988);
  return *(void *)&v44;
}

uint64_t sub_B83B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26B030();
  *a1 = result & 1;
  return result;
}

uint64_t sub_B83E0()
{
  return sub_26B040();
}

uint64_t type metadata accessor for BooksBorderedButtonStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2EE7A8);
}

unint64_t sub_B842C()
{
  unint64_t result = qword_2EE5F0;
  if (!qword_2EE5F0)
  {
    sub_7B0C(&qword_2EE5E8);
    sub_7B0C(&qword_2EE5F8);
    sub_26A780();
    sub_B8524();
    sub_B8B78(&qword_2EE6B8, (void (*)(uint64_t))&type metadata accessor for HoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE5F0);
  }
  return result;
}

unint64_t sub_B8524()
{
  unint64_t result = qword_2EE600;
  if (!qword_2EE600)
  {
    sub_7B0C(&qword_2EE5F8);
    sub_B86BC(&qword_2EE608, &qword_2EE610, (void (*)(void))sub_B85F0);
    sub_7C18(&qword_2EE6A8, &qword_2EE6B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE600);
  }
  return result;
}

unint64_t sub_B85F0()
{
  unint64_t result = qword_2EE618;
  if (!qword_2EE618)
  {
    sub_7B0C(&qword_2EE620);
    sub_B86BC(&qword_2EE628, &qword_2EE630, (void (*)(void))sub_B8738);
    sub_7C18(&qword_2EE698, &qword_2EE6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE618);
  }
  return result;
}

uint64_t sub_B86BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_B8738()
{
  unint64_t result = qword_2EE638;
  if (!qword_2EE638)
  {
    sub_7B0C(&qword_2EE640);
    sub_B87E0();
    sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE638);
  }
  return result;
}

unint64_t sub_B87E0()
{
  unint64_t result = qword_2EE648;
  if (!qword_2EE648)
  {
    sub_7B0C(&qword_2EE650);
    sub_B86BC(&qword_2EE658, &qword_2EE660, (void (*)(void))sub_B8880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE648);
  }
  return result;
}

uint64_t sub_B8880()
{
  return sub_B86BC(&qword_2EE668, &qword_2EE670, (void (*)(void))sub_B88B0);
}

unint64_t sub_B88B0()
{
  unint64_t result = qword_2EE678;
  if (!qword_2EE678)
  {
    sub_7B0C(&qword_2EE680);
    sub_B894C(&qword_2EE688, &qword_2EE690, (unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE678);
  }
  return result;
}

uint64_t sub_B894C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_B8B78((unint64_t *)&qword_2EBF38, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_B8A28()
{
  return sub_B86BC(&qword_2EE710, &qword_2EE6F0, (void (*)(void))sub_B8A58);
}

uint64_t sub_B8A58()
{
  return sub_B86BC(&qword_2EE718, &qword_2EE6E8, (void (*)(void))sub_B8A88);
}

uint64_t sub_B8A88()
{
  return sub_B86BC(&qword_2EE720, &qword_2EE6E0, (void (*)(void))sub_B8AB8);
}

unint64_t sub_B8AB8()
{
  unint64_t result = qword_2EE728;
  if (!qword_2EE728)
  {
    sub_7B0C(&qword_2EE6D8);
    sub_B894C(&qword_2EE730, &qword_2EE6D0, (unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    sub_7C18(&qword_2EE738, &qword_2EE740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE728);
  }
  return result;
}

uint64_t sub_B8B78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_B8BC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_B8BDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksBorderedButtonStyle(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[5];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[6];
    uint64_t v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[7];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)v26;
    char v28 = v26[8];
    sub_10E0C(*(void *)v26, v28);
    *(void *)uint64_t v25 = v27;
    v25[8] = v28;
    uint64_t v29 = a3[8];
    uint64_t v30 = (char *)a1 + v29;
    int v31 = (char *)a2 + v29;
    uint64_t v32 = sub_4A98(&qword_2EBDF0);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    double v34 = (int *)type metadata accessor for ButtonViewModel(0);
    v33(&v30[v34[5]], &v31[v34[5]], v32);
    uint64_t v35 = v34[6];
    double v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *(void *)double v36 = *(void *)v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v30[v34[7]] = v31[v34[7]];
    v30[v34[8]] = v31[v34[8]];
    v30[v34[9]] = v31[v34[9]];
    uint64_t v39 = v34[10];
    double v40 = &v30[v39];
    uint64_t v41 = &v31[v39];
    if (*(void *)v41 >= 3uLL)
    {
      uint64_t v43 = *((void *)v41 + 1);
      uint64_t v44 = *((void *)v41 + 2);
      *(void *)double v40 = *(void *)v41;
      *((void *)v40 + 1) = v43;
      uint64_t v45 = *((void *)v41 + 3);
      *((void *)v40 + 2) = v44;
      *((void *)v40 + 3) = v45;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)double v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
    }
    uint64_t v46 = v34[11];
    uint64_t v47 = &v30[v46];
    uint64_t v48 = &v31[v46];
    uint64_t v49 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v50 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v47, v48, v50);
        goto LABEL_26;
      case 1u:
        uint64_t v51 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v51;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 2u:
        uint64_t v52 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v52;
        double v53 = (void *)*((void *)v48 + 2);
        *((void *)v47 + 2) = v53;
        swift_bridgeObjectRetain();
        id v54 = v53;
        uint64_t v55 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v56 = &v47[v55];
        uint64_t v57 = &v48[v55];
        uint64_t v58 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        goto LABEL_26;
      case 3u:
        uint64_t v59 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v59;
        swift_bridgeObjectRetain();
        uint64_t v60 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v61 = &v47[v60];
        char v62 = &v48[v60];
        uint64_t v63 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        goto LABEL_26;
      case 4u:
        uint64_t v64 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v47, v48, v64);
        uint64_t v65 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v66 = &v47[v65];
        uint64_t v67 = &v48[v65];
        uint64_t v68 = *((void *)v67 + 1);
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = v68;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 5u:
        uint64_t v69 = sub_26A220();
        double v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        v70(v47, v48, v69);
        uint64_t v71 = sub_4A98(&qword_2EE448);
        v70(&v47[*(int *)(v71 + 48)], &v48[*(int *)(v71 + 48)], v69);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        break;
    }
    v30[v34[12]] = v31[v34[12]];
    uint64_t v72 = v34[13];
    double v73 = &v30[v72];
    uint64_t v74 = &v31[v72];
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
    }
    else
    {
      uint64_t v76 = *((void *)v74 + 3);
      if (v76)
      {
        uint64_t v77 = *((void *)v74 + 4);
        *((void *)v73 + 3) = v76;
        *((void *)v73 + 4) = v77;
        (**(void (***)(char *, char *))(v76 - 8))(v73, v74);
      }
      else
      {
        long long v78 = *((_OWORD *)v74 + 1);
        *(_OWORD *)double v73 = *(_OWORD *)v74;
        *((_OWORD *)v73 + 1) = v78;
        *((void *)v73 + 4) = *((void *)v74 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = v34[14];
    uint64_t v80 = &v30[v79];
    uint64_t v81 = &v31[v79];
    uint64_t v82 = sub_26A220();
    uint64_t v83 = *(void *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      uint64_t v84 = sub_4A98(&qword_2EA0C0);
      memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
  }
  return a1;
}

uint64_t destroy for BooksBorderedButtonStyle(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[5];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_26C700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = sub_4A98(&qword_2EBDF0);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = (int *)type metadata accessor for ButtonViewModel(0);
  v12(v10 + v13[5], v11);
  uint64_t v14 = v10 + v13[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v10 + v13[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v16 = v10 + v13[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_20;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v17 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_19;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_19:
      v16 += v17;
LABEL_20:
      uint64_t v18 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
      break;
    case 4u:
      uint64_t v19 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v16, v19);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v20 = sub_26A220();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
      v21(v16, v20);
      uint64_t v22 = sub_4A98(&qword_2EE448);
      v21(v16 + *(int *)(v22 + 48), v20);
      break;
    default:
      break;
  }
  uint64_t v23 = v10 + v13[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  else if (*(void *)(v23 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v23);
  }
  uint64_t v25 = v10 + v13[14];
  uint64_t v26 = sub_26A220();
  uint64_t v29 = *(void *)(v26 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v25, 1, v26);
  if (!result)
  {
    char v28 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
    return v28(v25, v26);
  }
  return result;
}

_WORD *initializeWithCopy for BooksBorderedButtonStyle(_WORD *a1, _WORD *a2, int *a3)
{
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[5];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    void *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    void *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = v24[8];
  sub_10E0C(*(void *)v24, v26);
  *(void *)uint64_t v23 = v25;
  v23[8] = v26;
  uint64_t v27 = a3[8];
  char v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_4A98(&qword_2EBDF0);
  int v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v31(v28, v29, v30);
  uint64_t v32 = (int *)type metadata accessor for ButtonViewModel(0);
  v31(&v28[v32[5]], &v29[v32[5]], v30);
  uint64_t v33 = v32[6];
  double v34 = &v28[v33];
  uint64_t v35 = &v29[v33];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  else
  {
    *(void *)double v34 = *(void *)v35;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v28[v32[7]] = v29[v32[7]];
  v28[v32[8]] = v29[v32[8]];
  v28[v32[9]] = v29[v32[9]];
  uint64_t v37 = v32[10];
  uint64_t v38 = &v28[v37];
  uint64_t v39 = &v29[v37];
  if (*(void *)v39 >= 3uLL)
  {
    uint64_t v41 = *((void *)v39 + 1);
    uint64_t v42 = *((void *)v39 + 2);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v41;
    uint64_t v43 = *((void *)v39 + 3);
    *((void *)v38 + 2) = v42;
    *((void *)v38 + 3) = v43;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v40 = *((_OWORD *)v39 + 1);
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v40;
  }
  uint64_t v44 = v32[11];
  uint64_t v45 = &v28[v44];
  uint64_t v46 = &v29[v44];
  uint64_t v47 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v48 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
      goto LABEL_24;
    case 1u:
      uint64_t v49 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v49;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 2u:
      uint64_t v50 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v50;
      uint64_t v51 = (void *)*((void *)v46 + 2);
      *((void *)v45 + 2) = v51;
      swift_bridgeObjectRetain();
      id v52 = v51;
      uint64_t v53 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      uint64_t v56 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      goto LABEL_24;
    case 3u:
      uint64_t v57 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v57;
      swift_bridgeObjectRetain();
      uint64_t v58 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v59 = &v45[v58];
      uint64_t v60 = &v46[v58];
      uint64_t v61 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      goto LABEL_24;
    case 4u:
      uint64_t v62 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v45, v46, v62);
      uint64_t v63 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v64 = &v45[v63];
      uint64_t v65 = &v46[v63];
      uint64_t v66 = *((void *)v65 + 1);
      *(void *)uint64_t v64 = *(void *)v65;
      *((void *)v64 + 1) = v66;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 5u:
      uint64_t v67 = sub_26A220();
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
      v68(v45, v46, v67);
      uint64_t v69 = sub_4A98(&qword_2EE448);
      v68(&v45[*(int *)(v69 + 48)], &v46[*(int *)(v69 + 48)], v67);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      break;
  }
  v28[v32[12]] = v29[v32[12]];
  uint64_t v70 = v32[13];
  uint64_t v71 = &v28[v70];
  uint64_t v72 = &v29[v70];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v73 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
  }
  else
  {
    uint64_t v74 = *((void *)v72 + 3);
    if (v74)
    {
      uint64_t v75 = *((void *)v72 + 4);
      *((void *)v71 + 3) = v74;
      *((void *)v71 + 4) = v75;
      (**(void (***)(char *, char *))(v74 - 8))(v71, v72);
    }
    else
    {
      long long v76 = *((_OWORD *)v72 + 1);
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v76;
      *((void *)v71 + 4) = *((void *)v72 + 4);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = v32[14];
  long long v78 = &v28[v77];
  uint64_t v79 = &v29[v77];
  uint64_t v80 = sub_26A220();
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    uint64_t v82 = sub_4A98(&qword_2EA0C0);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  return a1;
}

unsigned char *assignWithCopy for BooksBorderedButtonStyle(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[5];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_B6DC((uint64_t)&a1[v15], &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[6];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_B6DC((uint64_t)&a1[v19], &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      void *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_10E0C(*(void *)v25, v27);
  uint64_t v28 = *(void *)v24;
  char v29 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = v27;
  sub_C374(v28, v29);
  uint64_t v30 = a3[8];
  int v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_4A98(&qword_2EBDF0);
  double v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 24);
  v34(v31, v32, v33);
  uint64_t v35 = (int *)type metadata accessor for ButtonViewModel(0);
  v34(&v31[v35[5]], &v32[v35[5]], v33);
  if (a1 != a2)
  {
    uint64_t v36 = v35[6];
    uint64_t v37 = &v31[v36];
    uint64_t v38 = &v32[v36];
    sub_B6DC((uint64_t)&v31[v36], &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      void *v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v31[v35[7]] = v32[v35[7]];
  v31[v35[8]] = v32[v35[8]];
  v31[v35[9]] = v32[v35[9]];
  uint64_t v40 = v35[10];
  uint64_t v41 = &v31[v40];
  uint64_t v42 = &v32[v40];
  unint64_t v43 = *(void *)&v32[v40];
  if (*(void *)&v31[v40] >= 3uLL)
  {
    if (v43 < 3)
    {
      sub_B6DC((uint64_t)&v31[v40], &qword_2EE748);
      long long v45 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v45;
      if (a1 == a2) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    *(void *)uint64_t v41 = v43;
    swift_retain();
    swift_release();
    *((void *)v41 + 1) = *((void *)v42 + 1);
    swift_retain();
    swift_release();
    *((void *)v41 + 2) = *((void *)v42 + 2);
    swift_retain();
    swift_release();
    *((void *)v41 + 3) = *((void *)v42 + 3);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_25;
    }
LABEL_28:
    v31[v35[12]] = v32[v35[12]];
    goto LABEL_41;
  }
  if (v43 >= 3)
  {
    *(void *)uint64_t v41 = v43;
    *((void *)v41 + 1) = *((void *)v42 + 1);
    *((void *)v41 + 2) = *((void *)v42 + 2);
    *((void *)v41 + 3) = *((void *)v42 + 3);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_25;
    }
    goto LABEL_28;
  }
  long long v44 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v44;
  if (a1 == a2) {
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v46 = v35[11];
  uint64_t v47 = &v31[v46];
  uint64_t v48 = &v32[v46];
  sub_BE298((uint64_t)&v31[v46], type metadata accessor for ButtonViewModel.Content);
  uint64_t v49 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v50 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v47, v48, v50);
      goto LABEL_34;
    case 1u:
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 2u:
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      uint64_t v51 = (void *)v48[2];
      v47[2] = v51;
      swift_bridgeObjectRetain();
      id v52 = v51;
      uint64_t v53 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v54 = (char *)v47 + v53;
      uint64_t v55 = (char *)v48 + v53;
      uint64_t v56 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      goto LABEL_34;
    case 3u:
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      swift_bridgeObjectRetain();
      uint64_t v57 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v58 = (char *)v47 + v57;
      uint64_t v59 = (char *)v48 + v57;
      uint64_t v60 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      goto LABEL_34;
    case 4u:
      uint64_t v61 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v47, v48, v61);
      uint64_t v62 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v63 = (void *)((char *)v47 + v62);
      uint64_t v64 = (void *)((char *)v48 + v62);
      *uint64_t v63 = *v64;
      v63[1] = v64[1];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 5u:
      uint64_t v65 = sub_26A220();
      uint64_t v66 = *(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16);
      v66(v47, v48, v65);
      uint64_t v67 = sub_4A98(&qword_2EE448);
      v66((void *)((char *)v47 + *(int *)(v67 + 48)), (void *)((char *)v48 + *(int *)(v67 + 48)), v65);
LABEL_34:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      break;
  }
  v31[v35[12]] = v32[v35[12]];
  uint64_t v68 = v35[13];
  uint64_t v69 = &v31[v68];
  uint64_t v70 = &v32[v68];
  sub_BE298((uint64_t)&v31[v68], type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v71 = sub_2696C0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
  }
  else
  {
    uint64_t v72 = *((void *)v70 + 3);
    if (v72)
    {
      *((void *)v69 + 3) = v72;
      *((void *)v69 + 4) = *((void *)v70 + 4);
      (**(void (***)(unsigned char *, unsigned char *))(v72 - 8))(v69, v70);
    }
    else
    {
      long long v73 = *(_OWORD *)v70;
      long long v74 = *((_OWORD *)v70 + 1);
      *((void *)v69 + 4) = *((void *)v70 + 4);
      *(_OWORD *)uint64_t v69 = v73;
      *((_OWORD *)v69 + 1) = v74;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_41:
  uint64_t v75 = v35[14];
  long long v76 = &v31[v75];
  uint64_t v77 = &v32[v75];
  uint64_t v78 = sub_26A220();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v79 + 48);
  int v81 = v80(v76, 1, v78);
  int v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 24))(v76, v77, v78);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v76, v78);
    goto LABEL_46;
  }
  if (v82)
  {
LABEL_46:
    uint64_t v83 = sub_4A98(&qword_2EA0C0);
    memcpy(v76, v77, *(void *)(*(void *)(v83 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 16))(v76, v77, v78);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  return a1;
}

_WORD *initializeWithTake for BooksBorderedButtonStyle(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_26C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v24;
  char v27 = (char *)a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = (char *)a1 + v25;
  char v29 = (char *)a2 + v25;
  uint64_t v30 = sub_4A98(&qword_2EBDF0);
  int v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
  v31(v28, v29, v30);
  uint64_t v32 = (int *)type metadata accessor for ButtonViewModel(0);
  v31(&v28[v32[5]], &v29[v32[5]], v30);
  uint64_t v33 = v32[6];
  double v34 = &v28[v33];
  uint64_t v35 = &v29[v33];
  uint64_t v36 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  v28[v32[7]] = v29[v32[7]];
  v28[v32[8]] = v29[v32[8]];
  v28[v32[9]] = v29[v32[9]];
  uint64_t v38 = v32[10];
  uint64_t v39 = &v28[v38];
  uint64_t v40 = &v29[v38];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  uint64_t v42 = v32[11];
  unint64_t v43 = &v28[v42];
  long long v44 = &v29[v42];
  uint64_t v45 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v46 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
      goto LABEL_20;
    case 2u:
      *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
      *((void *)v43 + 2) = *((void *)v44 + 2);
      uint64_t v47 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v48 = &v43[v47];
      uint64_t v49 = &v44[v47];
      uint64_t v50 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      goto LABEL_20;
    case 3u:
      *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
      uint64_t v51 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v52 = &v43[v51];
      uint64_t v53 = &v44[v51];
      uint64_t v54 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      goto LABEL_20;
    case 4u:
      uint64_t v55 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v43, v44, v55);
      uint64_t v56 = sub_4A98(&qword_2EE440);
      *(_OWORD *)&v43[*(int *)(v56 + 48)] = *(_OWORD *)&v44[*(int *)(v56 + 48)];
      goto LABEL_20;
    case 5u:
      uint64_t v57 = sub_26A220();
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
      v58(v43, v44, v57);
      uint64_t v59 = sub_4A98(&qword_2EE448);
      v58(&v43[*(int *)(v59 + 48)], &v44[*(int *)(v59 + 48)], v57);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      break;
  }
  v28[v32[12]] = v29[v32[12]];
  uint64_t v60 = v32[13];
  uint64_t v61 = &v28[v60];
  uint64_t v62 = &v29[v60];
  uint64_t v63 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v64 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  uint64_t v65 = v32[14];
  uint64_t v66 = &v28[v65];
  uint64_t v67 = &v29[v65];
  uint64_t v68 = sub_26A220();
  uint64_t v69 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    uint64_t v70 = sub_4A98(&qword_2EA0C0);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  return a1;
}

_WORD *assignWithTake for BooksBorderedButtonStyle(_WORD *a1, _WORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EB708);
    uint64_t v6 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      char v14 = (char *)a2 + v12;
      v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v15 = a3[5];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    sub_B6DC((uint64_t)a1 + v15, &qword_2EB3E8);
    uint64_t v18 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_B6DC((uint64_t)a1 + v20, &qword_2EB3E8);
    uint64_t v23 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_26C700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  LOBYTE(v27) = v27[8];
  uint64_t v29 = *(void *)v26;
  char v30 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  sub_C374(v29, v30);
  uint64_t v31 = a3[8];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_4A98(&qword_2EBDF0);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40);
  v35(v32, v33, v34);
  uint64_t v36 = (int *)type metadata accessor for ButtonViewModel(0);
  v35(&v32[v36[5]], &v33[v36[5]], v34);
  if (a1 != a2)
  {
    uint64_t v37 = v36[6];
    uint64_t v38 = &v32[v37];
    uint64_t v39 = &v33[v37];
    sub_B6DC((uint64_t)&v32[v37], &qword_2EA968);
    uint64_t v40 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
  }
  v32[v36[7]] = v33[v36[7]];
  v32[v36[8]] = v33[v36[8]];
  v32[v36[9]] = v33[v36[9]];
  uint64_t v42 = v36[10];
  unint64_t v43 = &v32[v42];
  long long v44 = &v33[v42];
  if (*(void *)&v32[v42] >= 3uLL)
  {
    if (*(void *)v44 >= 3uLL)
    {
      *(void *)unint64_t v43 = *(void *)v44;
      swift_release();
      *((void *)v43 + 1) = *((void *)v44 + 1);
      swift_release();
      *((void *)v43 + 2) = *((void *)v44 + 2);
      swift_release();
      *((void *)v43 + 3) = *((void *)v44 + 3);
      swift_release();
      if (a1 != a2) {
        goto LABEL_19;
      }
LABEL_22:
      v32[v36[12]] = v33[v36[12]];
      goto LABEL_32;
    }
    sub_B6DC((uint64_t)v43, &qword_2EE748);
  }
  long long v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  if (a1 == a2) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v46 = v36[11];
  uint64_t v47 = &v32[v46];
  uint64_t v48 = &v33[v46];
  sub_BE298((uint64_t)&v32[v46], type metadata accessor for ButtonViewModel.Content);
  uint64_t v49 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v50 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
      goto LABEL_28;
    case 2u:
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((void *)v47 + 2) = *((void *)v48 + 2);
      uint64_t v51 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v52 = &v47[v51];
      uint64_t v53 = &v48[v51];
      uint64_t v54 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      goto LABEL_28;
    case 3u:
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      uint64_t v55 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v56 = &v47[v55];
      uint64_t v57 = &v48[v55];
      uint64_t v58 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      goto LABEL_28;
    case 4u:
      uint64_t v59 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v47, v48, v59);
      uint64_t v60 = sub_4A98(&qword_2EE440);
      *(_OWORD *)&v47[*(int *)(v60 + 48)] = *(_OWORD *)&v48[*(int *)(v60 + 48)];
      goto LABEL_28;
    case 5u:
      uint64_t v61 = sub_26A220();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32);
      v62(v47, v48, v61);
      uint64_t v63 = sub_4A98(&qword_2EE448);
      v62(&v47[*(int *)(v63 + 48)], &v48[*(int *)(v63 + 48)], v61);
LABEL_28:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      break;
  }
  v32[v36[12]] = v33[v36[12]];
  uint64_t v64 = v36[13];
  uint64_t v65 = &v32[v64];
  uint64_t v66 = &v33[v64];
  sub_BE298((uint64_t)&v32[v64], type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v67 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
LABEL_32:
  uint64_t v69 = v36[14];
  uint64_t v70 = &v32[v69];
  uint64_t v71 = &v33[v69];
  uint64_t v72 = sub_26A220();
  uint64_t v73 = *(void *)(v72 - 8);
  long long v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v70, v71, v72);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_37;
  }
  if (v76)
  {
LABEL_37:
    uint64_t v77 = sub_4A98(&qword_2EA0C0);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksBorderedButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BBE38);
}

uint64_t sub_BBE38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB718);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB3F8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[7] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = type metadata accessor for ButtonViewModel(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for BooksBorderedButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BBFD0);
}

uint64_t sub_BBFD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB718);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_4A98(&qword_2EB3F8);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[7] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = type metadata accessor for ButtonViewModel(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_BC158()
{
  sub_BE054(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
  if (v0 <= 0x3F)
  {
    sub_BE054(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ButtonViewModel(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksBorderlessButtonStyle(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (_WORD *)((char *)a1 + v7);
    uint64_t v9 = (_WORD *)((char *)a2 + v7);
    sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = (char *)v8 + v11;
      uint64_t v13 = (char *)v9 + v11;
      uint64_t v14 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)((char *)v8 + *(int *)(v10 + 28)) = *(void *)((char *)v9 + *(int *)(v10 + 28));
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[6];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[7];
    uint64_t v21 = (_WORD *)((char *)v4 + v20);
    uint64_t v22 = (_WORD *)((char *)a2 + v20);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v21 = *v22;
      uint64_t v23 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v24 = v23[6];
      uint64_t v25 = (char *)v21 + v24;
      uint64_t v26 = (char *)v22 + v24;
      uint64_t v27 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      *(void *)((char *)v21 + v23[7]) = *(void *)((char *)v22 + v23[7]);
      uint64_t v28 = v23[8];
      uint64_t v29 = (char *)v21 + v28;
      char v30 = (char *)v22 + v28;
      v29[2] = v30[2];
      *(_WORD *)uint64_t v29 = *(_WORD *)v30;
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = a3[8];
    uint64_t v32 = (uint64_t *)((char *)v4 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3[9];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *(void *)v37;
    char v39 = v37[8];
    sub_10E0C(*(void *)v37, v39);
    *(void *)uint64_t v36 = v38;
    v36[8] = v39;
    uint64_t v40 = a3[10];
    uint64_t v41 = (uint64_t *)((char *)v4 + v40);
    uint64_t v42 = (uint64_t *)((char *)a2 + v40);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    }
    else
    {
      *uint64_t v41 = *v42;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for BooksBorderlessButtonStyle(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v9 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v11 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[8];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v14 = a1 + a2[10];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_26C700();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    return v16(v14, v15);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *initializeWithCopy for BooksBorderlessButtonStyle(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v7 = *v8;
    uint64_t v9 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    uint64_t v13 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)((char *)v8 + *(int *)(v9 + 28));
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    void *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v19 = *v20;
    uint64_t v21 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v22 = v21[6];
    uint64_t v23 = (char *)v19 + v22;
    uint64_t v24 = (char *)v20 + v22;
    uint64_t v25 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    *(void *)((char *)v19 + v21[7]) = *(void *)((char *)v20 + v21[7]);
    uint64_t v26 = v21[8];
    uint64_t v27 = (char *)v19 + v26;
    uint64_t v28 = (char *)v20 + v26;
    v27[2] = v28[2];
    *(_WORD *)uint64_t v27 = *(_WORD *)v28;
  }
  else
  {
    *(void *)uint64_t v19 = *(void *)v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = a3[8];
  char v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    *char v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a3[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  char v37 = v35[8];
  sub_10E0C(*(void *)v35, v37);
  *(void *)uint64_t v34 = v36;
  v34[8] = v37;
  uint64_t v38 = a3[10];
  char v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = sub_26C700();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  else
  {
    *char v39 = *v40;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for BooksBorderlessButtonStyle(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    sub_B6DC((uint64_t)&a1[v6], &qword_2EBCD8);
    sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      uint64_t v9 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v10 = *(int *)(v9 + 24);
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      *(void *)&v7[*(int *)(v9 + 28)] = *(void *)&v8[*(int *)(v9 + 28)];
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_B6DC((uint64_t)&a1[v14], &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    sub_B6DC((uint64_t)&a1[v18], &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v19 = *v20;
      v19[1] = v20[1];
      uint64_t v21 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v22 = v21[6];
      uint64_t v23 = &v19[v22];
      uint64_t v24 = &v20[v22];
      uint64_t v25 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
      uint64_t v26 = v21[8];
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      char v29 = v28[2];
      *(_WORD *)uint64_t v27 = *(_WORD *)v28;
      v27[2] = v29;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[8];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    sub_B6DC((uint64_t)&a1[v30], &qword_2EA970);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      *uint64_t v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  char v38 = v36[8];
  sub_10E0C(*(void *)v36, v38);
  uint64_t v39 = *(void *)v35;
  char v40 = v35[8];
  *(void *)uint64_t v35 = v37;
  v35[8] = v38;
  sub_C374(v39, v40);
  if (a1 != a2)
  {
    uint64_t v41 = a3[10];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    sub_B6DC((uint64_t)&a1[v41], &qword_2EB3E8);
    sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = sub_26C700();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *uint64_t v42 = *v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for BooksBorderlessButtonStyle(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v7 = *v8;
    uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(void *)((char *)v7 + *(int *)(v10 + 28)) = *(void *)((char *)v8 + *(int *)(v10 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_26A6E0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v21 = *v22;
    uint64_t v24 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v25 = v24[6];
    uint64_t v26 = (char *)v21 + v25;
    uint64_t v27 = (char *)v22 + v25;
    uint64_t v28 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    *(void *)((char *)v21 + v24[7]) = *(void *)((char *)v22 + v24[7]);
    uint64_t v29 = v24[8];
    uint64_t v30 = (char *)v21 + v29;
    uint64_t v31 = (char *)v22 + v29;
    v30[2] = v31[2];
    *(_WORD *)uint64_t v30 = *(_WORD *)v31;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_26A6E0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v37 = a3[9];
  uint64_t v38 = a3[10];
  uint64_t v39 = &a1[v37];
  char v40 = &a2[v37];
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = &a1[v38];
  uint64_t v42 = &a2[v38];
  uint64_t v43 = sub_4A98(&qword_2EB3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = sub_26C700();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for BooksBorderlessButtonStyle(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    sub_B6DC((uint64_t)&a1[v6], &qword_2EBCD8);
    uint64_t v9 = sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = (char *)v7 + v11;
      uint64_t v13 = (char *)v8 + v11;
      uint64_t v14 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(void *)((char *)v7 + *(int *)(v10 + 28)) = *(void *)((char *)v8 + *(int *)(v10 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_B6DC((uint64_t)&a1[v15], &qword_2EA968);
    uint64_t v18 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_26A6E0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    sub_B6DC((uint64_t)&a1[v20], &qword_2EB708);
    uint64_t v23 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v21 = *v22;
      uint64_t v24 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v25 = v24[6];
      uint64_t v26 = (char *)v21 + v25;
      uint64_t v27 = (char *)v22 + v25;
      uint64_t v28 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(void *)((char *)v21 + v24[7]) = *(void *)((char *)v22 + v24[7]);
      uint64_t v29 = v24[8];
      uint64_t v30 = (char *)v21 + v29;
      uint64_t v31 = (char *)v22 + v29;
      v30[2] = v31[2];
      *(_WORD *)uint64_t v30 = *(_WORD *)v31;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v32 = a3[8];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    sub_B6DC((uint64_t)&a1[v32], &qword_2EA970);
    uint64_t v35 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_26A6E0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = a3[9];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = *(void *)v39;
  LOBYTE(v39) = v39[8];
  uint64_t v41 = *(void *)v38;
  char v42 = v38[8];
  *(void *)uint64_t v38 = v40;
  v38[8] = (_BYTE)v39;
  sub_C374(v41, v42);
  if (a1 != a2)
  {
    uint64_t v43 = a3[10];
    uint64_t v44 = &a1[v43];
    long long v45 = &a2[v43];
    sub_B6DC((uint64_t)&a1[v43], &qword_2EB3E8);
    uint64_t v46 = sub_4A98(&qword_2EB3E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = sub_26C700();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksBorderlessButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BD9D8);
}

uint64_t sub_BD9D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EE7F0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_9;
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_9;
  }
  uint64_t v12 = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_9;
  }
  if (a2 == 254)
  {
    unsigned int v15 = *(unsigned __int8 *)(a1 + a3[9] + 8);
    if (v15 > 1) {
      return (v15 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v16 = sub_4A98(&qword_2EB3F8);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[10];
    return v17(v19, a2, v18);
  }
}

uint64_t storeEnumTagSinglePayload for BooksBorderlessButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BDC10);
}

uint64_t sub_BDC10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EE7F0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    unsigned int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t result = sub_4A98(&qword_2EAB20);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[9] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v16 = sub_4A98(&qword_2EB3F8);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a4[10];
    return v17(v19, a2, a2, v18);
  }
  return result;
}

void sub_BDE38()
{
  sub_BE054(319, (unint64_t *)&qword_2EE860, (void (*)(uint64_t))type metadata accessor for FontConstants.Button);
  if (v0 <= 0x3F)
  {
    sub_BE054(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
    if (v1 <= 0x3F)
    {
      sub_BE054(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
      if (v2 <= 0x3F)
      {
        sub_BE054(319, (unint64_t *)&qword_2EABA0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
        if (v3 <= 0x3F)
        {
          sub_BE054(319, (unint64_t *)&qword_2EB470, (void (*)(uint64_t))&type metadata accessor for BlendMode);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_BE054(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_BE0AC()
{
  unint64_t result = qword_2EE8A8;
  if (!qword_2EE8A8)
  {
    sub_7B0C(&qword_2EE8B0);
    sub_B842C();
    sub_7C18(&qword_2EE6C0, &qword_2EE5D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EE8A8);
  }
  return result;
}

uint64_t sub_BE14C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_BE224(uint64_t a1)
{
  return a1;
}

unint64_t sub_BE250()
{
  unint64_t result = qword_2EDC10;
  if (!qword_2EDC10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2EDC10);
  }
  return result;
}

uint64_t sub_BE298(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_BE2F8()
{
  unint64_t result = qword_2EEAB0;
  if (!qword_2EEAB0)
  {
    sub_7B0C(&qword_2EE9F8);
    sub_BE430(&qword_2EEAB8, &qword_2EE9F0, &qword_2EEAC0, &qword_2EE9E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEAB0);
  }
  return result;
}

unint64_t sub_BE394()
{
  unint64_t result = qword_2EEAC8;
  if (!qword_2EEAC8)
  {
    sub_7B0C(&qword_2EEA80);
    sub_BE430(&qword_2EEAD0, &qword_2EEA78, &qword_2EEAD8, &qword_2EEA70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEAC8);
  }
  return result;
}

uint64_t sub_BE430(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_BE4CC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_BE568(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ActionContextFieldProvider.addExpensiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = a2;
  uint64_t v3 = sub_4A98((uint64_t *)&unk_2EEB60);
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_BE694, 0, 0);
}

uint64_t sub_BE694()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  sub_26CED0();
  sub_4A98(&qword_2E9F90);
  sub_26CF00();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 96);
  if (v4)
  {
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_9E10(0x6570795465676170, 0xE800000000000000), (v6 & 1) != 0))
    {
      sub_BEAB0(*(void *)(v4 + 56) + 32 * v5, v0 + 16);
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 40))
    {
      if (swift_dynamicCast())
      {
        uint64_t v7 = *(void *)(v0 + 104);
        uint64_t v8 = *(void *)(v0 + 80);
        uint64_t v9 = *(void *)(v0 + 88);
        *(void *)(v0 + 72) = &type metadata for String;
        *(void *)(v0 + 48) = v8;
        *(void *)(v0 + 56) = v9;
        sub_14714(v7, *(void *)(v7 + 24));
        sub_26CEB0();
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 48);
      }
    }
    else
    {
      sub_BEA50(v0 + 16);
    }
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_BE86C()
{
  return sub_26CF70();
}

uint64_t sub_BE884(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_12134;
  return ActionContextFieldProvider.addExpensiveMetricsFields(into:using:)(a1, a2);
}

uint64_t sub_BE924()
{
  return sub_26CF80();
}

uint64_t sub_BE93C()
{
  uint64_t v0 = sub_26D100();
  sub_6E18(v0, qword_2EEB40);
  sub_6B14(v0, (uint64_t)qword_2EEB40);
  return sub_26D0F0();
}

uint64_t static MetricsFieldInclusionRequest.actionContext.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_26D100();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2EEB40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_BEA50(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA0B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BEAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for ActionContextFieldProvider()
{
  return &type metadata for ActionContextFieldProvider;
}

uint64_t sub_BEB20()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_26C940();
  return v1;
}

uint64_t dispatch thunk of SynchronousNativeIntentImplementation.syncIntentKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SynchronousNativeIntentImplementation.performSync(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C224(v1, a1);
}

uint64_t CodeAnyComponentModel.wrappedValue.setter(long long *a1)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v1);

  return sub_AD44(a1, v1);
}

uint64_t CodeAnyComponentModel.description.getter()
{
  return 0;
}

uint64_t CodeAnyComponentModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  unint64_t v5 = Decoder.componentKindTable.getter();
  Decoder.decodeComponentModel<A>(using:)((uint64_t)v5, (uint64_t)v8);
  if (!v2)
  {
    sub_AD44(v8, (uint64_t)v9);
    long long v6 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 32) = v10;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t Decoder.decodeComponentModel()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Decoder.componentKindTable.getter();
  return Decoder.decodeComponentModel<A>(using:)((uint64_t)v2, a1);
}

uint64_t sub_BED9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  Decoder.decodeComponentModel()((uint64_t)v7);
  if (!v2)
  {
    sub_AD44(v7, (uint64_t)v8);
    long long v5 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v9;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

ValueMetadata *Decoder.componentKindTable.getter()
{
  sub_26DFA0();
  if (qword_2E9C00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_4A98(&qword_2EEB90);
  sub_6B14(v0, (uint64_t)qword_2EEB78);
  sub_4A98(&qword_2EEB98);
  sub_26D280();
  swift_bridgeObjectRelease();
  uint64_t v1 = v3;
  if (!v3)
  {
    uint64_t v1 = &type metadata for EmptyComponentKindTable;
    sub_BF660();
  }
  return v1;
}

uint64_t Decoder.decodeComponentModel<A>(using:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v14[6] = a1;
  uint64_t v11 = sub_4A98(&qword_2EEBA8);
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26DF90();
  if (v2)
  {
    sub_26DFA0();
    sub_26C9E0();
    sub_4A98(&qword_2EEBB0);
    sub_26D280();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
    sub_BF6B4((uint64_t)v14, (uint64_t)&v12);
    if (v13)
    {
      sub_4ADC(&v12, v13);
      swift_getMetatypeMetadata();
      sub_26CFC0();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v12);
    }
    else
    {
      sub_BF71C((uint64_t)&v12);
    }
    swift_willThrow();
    return sub_BF71C((uint64_t)v14);
  }
  else
  {
    uint64_t v9 = a2;
    uint64_t v10 = v14[4];
    sub_4ADC(v14, v14[3]);
    sub_26C890();
    swift_getWitnessTable();
    sub_26DDD0();
    sub_AD44(&v12, v9);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v14);
  }
}

unint64_t sub_BF14C()
{
  unint64_t result = sub_95B4((uint64_t)&_swiftEmptyArrayStorage);
  qword_2EEB70 = result;
  return result;
}

uint64_t sub_BF174()
{
  if (qword_2E9BF8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

unint64_t sub_BF1D0()
{
  if (qword_2E9BF8 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_BF994(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_BF240@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_BF258(a1, a2, a3);
}

uint64_t sub_BF258@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_26CA10();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_26C8F0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_BF8B8(a1);
  if (v9)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    sub_C224((uint64_t)a2, (uint64_t)v29);
    *(void *)&long long v31 = v12;
    *((void *)&v31 + 1) = v13;
    uint64_t v32 = v14;
    sub_CA1C(v30);
    sub_26D730();
    if (v3) {
      return sub_BF940((uint64_t)v30);
    }
LABEL_7:
    long long v28 = v31;
    uint64_t v22 = v31;
    uint64_t v23 = sub_4ADC(v30, v31);
    *(_OWORD *)(a3 + 24) = v28;
    uint64_t v24 = sub_CA1C((uint64_t *)a3);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v24, v23, v22);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v30);
  }
  uint64_t v16 = sub_BF8B8(a1);
  if (v16)
  {
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    uint64_t v21 = v18;
    sub_C224((uint64_t)a2, (uint64_t)v29);
    uint64_t result = sub_26C8D0();
    if (v3) {
      return result;
    }
    sub_4ADC(a2, a2[3]);
    sub_26DFA0();
    sub_26CA00();
    *(void *)&long long v31 = v19;
    *((void *)&v31 + 1) = v20;
    uint64_t v32 = v21;
    sub_CA1C(v30);
    sub_26CDE0();
    goto LABEL_7;
  }
  uint64_t v25 = sub_26DAD0();
  swift_allocError();
  uint64_t v27 = v26;
  sub_4A98(&qword_2EBAB0);
  *uint64_t v27 = a1;
  sub_4ADC(a2, a2[3]);
  sub_26DF80();
  sub_26DA90(21);
  swift_bridgeObjectRelease();
  v30[0] = 60;
  v30[1] = 0xE100000000000000;
  v33._countAndFlagsBits = sub_26E0F0();
  sub_26D4E0(v33);
  swift_bridgeObjectRelease();
  v34._object = (void *)0x8000000000289370;
  v34._countAndFlagsBits = 0xD000000000000012;
  sub_26D4E0(v34);
  sub_26DAC0();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
  return swift_willThrow();
}

uint64_t sub_BF5E4()
{
  uint64_t v0 = sub_4A98(&qword_2EEB90);
  sub_6E18(v0, qword_2EEB78);
  sub_6B14(v0, (uint64_t)qword_2EEB78);
  sub_4A98(&qword_2EEB98);
  return sub_26C9F0();
}

unint64_t sub_BF660()
{
  unint64_t result = qword_2EEBA0;
  if (!qword_2EEBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEBA0);
  }
  return result;
}

uint64_t sub_BF6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EEBB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BF71C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EEBB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static JSONContext.Property<A>.booksComponentKindTable.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9C00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4A98(&qword_2EEB90);
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2EEB78);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t destroy for CodeAnyComponentModel(uint64_t a1)
{
  return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
}

ValueMetadata *type metadata accessor for CodeAnyComponentModel()
{
  return &type metadata for CodeAnyComponentModel;
}

ValueMetadata *type metadata accessor for EmptyComponentKindTable()
{
  return &type metadata for EmptyComponentKindTable;
}

unint64_t sub_BF864()
{
  unint64_t result = qword_2EEBC0;
  if (!qword_2EEBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEBC0);
  }
  return result;
}

uint64_t sub_BF8B8(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_BF940(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

unint64_t sub_BF994(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_4A98(&qword_2EEBC8);
    uint64_t v2 = (void *)sub_26DBD0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_2EEBD0;
  uint64_t v9 = (uint64_t *)&unk_2EEBD8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_36;
  }
  if (v17 >= v30) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v30) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v30) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v30) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = i + 5;
          if (i + 5 >= v30) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v31 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = i + 6;
            if (i + 6 >= v30) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v31 + 8 * v19);
            int64_t v20 = i + 6;
            if (!v18)
            {
              while (1)
              {
                int64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_37;
                }
                if (v19 >= v30) {
                  break;
                }
                unint64_t v18 = *(void *)(v31 + 8 * v19);
                ++v20;
                if (v18) {
                  goto LABEL_27;
                }
              }
LABEL_33:
              sub_BFCB4();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
  }
LABEL_27:
  unint64_t v5 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_4A98(v8);
    sub_4A98(v9);
    swift_dynamicCast();
    unint64_t result = sub_23E49C(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      unint64_t v32 = v5;
      uint64_t v10 = v1;
      int64_t v11 = i;
      uint64_t v12 = v9;
      uint64_t v13 = v8;
      uint64_t v14 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v14 = v23;
      v14[1] = v22;
      uint64_t v8 = v13;
      uint64_t v9 = v12;
      int64_t i = v11;
      uint64_t v1 = v10;
      unint64_t v5 = v32;
      *(void *)(v2[7] + 8 * v24) = v33;
      if (!v32) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v26 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v33;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_35;
    }
    v2[2] = v29;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_BFCB4()
{
  return swift_release();
}

uint64_t ToolbarActionMenu.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionMenu(0);
  return sub_B678(v1 + *(int *)(v3 + 20), a1, &qword_2EA0C0);
}

uint64_t type metadata accessor for ToolbarActionMenu(uint64_t a1)
{
  return sub_2A148(a1, qword_2EECD8);
}

uint64_t ToolbarActionMenu.items.getter()
{
  type metadata accessor for ToolbarActionMenu(0);

  return swift_bridgeObjectRetain();
}

uint64_t (*ToolbarActionMenu.preSelectionActionProvider.getter())()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 28));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (*v1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    unint64_t v5 = sub_BFE78;
  }
  else
  {
    unint64_t v5 = 0;
  }
  sub_82C24(v2);
  return v5;
}

uint64_t sub_BFDDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 28));
  uint64_t v5 = *v4;
  sub_82C24(v2);
  uint64_t result = sub_82C34(v5);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t sub_BFE40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_BFE78()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t ToolbarActionMenu.preSelectionActionProvider.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    long long v6 = sub_BFF38;
  }
  else
  {
    long long v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 28));
  uint64_t result = sub_82C34(*v7);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t sub_BFF38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t (*ToolbarActionMenu.preSelectionActionProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ToolbarActionMenu(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (*v4)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_C7608;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v7;
  sub_82C24(v5);
  return sub_C0010;
}

uint64_t sub_C0010(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)@<X0>(uint64_t *@<X8>))a1;
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v3)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = sub_C7648;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 16) + *(int *)(a1 + 24));
    uint64_t v10 = *v9;
    sub_82C24((uint64_t)v3);
    sub_82C34(v10);
    *uint64_t v9 = (uint64_t)v6;
    v9[1] = v5;
    return sub_82C34((uint64_t)v3);
  }
  else
  {
    if (v3)
    {
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v3;
      *(void *)(v8 + 24) = v7;
      uint64_t v3 = sub_C7648;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 16) + *(int *)(a1 + 24));
    uint64_t result = sub_82C34(*v12);
    *uint64_t v12 = (uint64_t)v3;
    v12[1] = v8;
  }
  return result;
}

uint64_t (*ToolbarActionMenu.postSelectionActionProvider.getter())()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 32));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (*v1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = sub_C7608;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_82C24(v2);
  return v5;
}

uint64_t sub_C01D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 32));
  uint64_t v5 = *v4;
  sub_82C24(v2);
  uint64_t result = sub_82C34(v5);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t ToolbarActionMenu.postSelectionActionProvider.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = sub_C7648;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 32));
  uint64_t result = sub_82C34(*v7);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t (*ToolbarActionMenu.postSelectionActionProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ToolbarActionMenu(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (*v4)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_C7608;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v7;
  sub_82C24(v5);
  return sub_C0368;
}

uint64_t sub_C0368(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)@<X0>(uint64_t *@<X8>))a1;
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v3)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = sub_C7648;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 16) + *(int *)(a1 + 24));
    uint64_t v10 = *v9;
    sub_82C24((uint64_t)v3);
    sub_82C34(v10);
    *uint64_t v9 = (uint64_t)v6;
    v9[1] = v5;
    return sub_82C34((uint64_t)v3);
  }
  else
  {
    if (v3)
    {
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v3;
      *(void *)(v8 + 24) = v7;
      uint64_t v3 = sub_C7648;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 16) + *(int *)(a1 + 24));
    uint64_t result = sub_82C34(*v12);
    *uint64_t v12 = (uint64_t)v3;
    v12[1] = v8;
  }
  return result;
}

uint64_t ToolbarActionMenu.init(id:name:items:preSelectionActionProvider:postSelectionActionProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)@<X0>(uint64_t *@<X8>)@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  unint64_t v16 = (int *)type metadata accessor for ToolbarActionMenu(0);
  int64_t v17 = (void *)((char *)a9 + v16[7]);
  *int64_t v17 = 0;
  v17[1] = 0;
  unint64_t v18 = (void *)((char *)a9 + v16[8]);
  *unint64_t v18 = 0;
  v18[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_B678(a3, (uint64_t)a9 + v16[5], &qword_2EA0C0);
  *(void *)((char *)a9 + v16[6]) = a4;
  if (a5)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    int64_t v20 = sub_C7648;
  }
  else
  {
    int64_t v20 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v21 = *v17;
  sub_82C24(a5);
  sub_82C34(v21);
  *int64_t v17 = (uint64_t)v20;
  v17[1] = v19;
  uint64_t v22 = a7;
  if (a7)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a7;
    *(void *)(v23 + 24) = a8;
    uint64_t v22 = sub_C7648;
  }
  else
  {
    uint64_t v23 = 0;
  }
  sub_82C34(*v18);
  sub_82C34(a5);
  *unint64_t v18 = (uint64_t)v22;
  v18[1] = v23;
  return sub_B6DC(a3, &qword_2EA0C0);
}

uint64_t ToolbarActionMenu.contentView.getter()
{
  uint64_t v1 = type metadata accessor for ToolbarActionMenu(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  v7[1] = *(void *)(v0 + *(int *)(__chkstk_darwin(v1 - 8) + 32));
  sub_C24B0(v0, (uint64_t)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ToolbarActionMenu);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_C2FE4((uint64_t)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, type metadata accessor for ToolbarActionMenu);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EEBE0);
  sub_4A98(&qword_2EEBE8);
  sub_7C18(&qword_2EEBF0, &qword_2EEBE0);
  sub_C1820();
  sub_C19A8(&qword_2EEC28, (void (*)(uint64_t))type metadata accessor for ToolbarActionMenuItem);
  return sub_26C500();
}

uint64_t sub_C0808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v96 = a3;
  uint64_t v88 = sub_26A220();
  char v87 = *(void (***)(char *, uint64_t, uint64_t))(v88 - 8);
  __chkstk_darwin(v88);
  int v82 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for ToolbarActionButtonMenuItem();
  uint64_t v5 = __chkstk_darwin(v95);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v84 = (uint64_t)&v77 - v8;
  uint64_t v9 = sub_4A98(&qword_2EA0C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v81 = (uint64_t)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v77 - v12;
  uint64_t v91 = type metadata accessor for ToolbarActionShareLinkMenuItem();
  __chkstk_darwin(v91);
  uint64_t v14 = (uint64_t *)((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_2696C0();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_4A98(&qword_2EEEB0);
  __chkstk_darwin(v92);
  uint64_t v94 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_4A98(&qword_2EEEB8);
  __chkstk_darwin(v86);
  uint64_t v89 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_4A98(&qword_2EEC08);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v22 = __chkstk_darwin(v85);
  unint64_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v77 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t))((char *)&v77 - v28);
  uint64_t v30 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  __chkstk_darwin(v30);
  unint64_t v32 = (unsigned __int8 *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C24B0(a1 + v19[9], (uint64_t)v32, type metadata accessor for ToolbarActionMenuItemButtonType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v34 = v79;
      uint64_t v35 = v78;
      uint64_t v36 = v80;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v79 + 32))(v78, v32, v80);
      uint64_t v37 = (int *)v91;
      v87[2]((char *)v14 + *(int *)(v91 + 20), a1 + v19[5], v88);
      char v38 = *(unsigned char *)(a1 + v19[7]);
      char v39 = *(unsigned char *)(a1 + v19[8]);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v14 + v37[8], v35, v36);
      type metadata accessor for ProfileRestrictions();
      sub_C19A8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
      uint64_t *v14 = sub_26AD70();
      v14[1] = v40;
      *((unsigned char *)v14 + v37[6]) = v38;
      *((unsigned char *)v14 + v37[7]) = v39;
      sub_C24B0((uint64_t)v14, v89, (uint64_t (*)(void))type metadata accessor for ToolbarActionShareLinkMenuItem);
      swift_storeEnumTagMultiPayload();
      sub_C19A8(&qword_2EEC10, (void (*)(uint64_t))type metadata accessor for ToolbarActionToggleMenuItem);
      sub_C19A8(&qword_2EEC18, (void (*)(uint64_t))type metadata accessor for ToolbarActionShareLinkMenuItem);
      uint64_t v41 = (uint64_t)v90;
      sub_26B2F0();
      sub_B678(v41, v94, &qword_2EEC08);
      swift_storeEnumTagMultiPayload();
      sub_C18CC();
      sub_C19A8(&qword_2EEC20, (void (*)(uint64_t))type metadata accessor for ToolbarActionButtonMenuItem);
      sub_26B2F0();
      sub_B6DC(v41, &qword_2EEC08);
      sub_C30A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ToolbarActionShareLinkMenuItem);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    }
    else
    {
      uint64_t v49 = sub_4A98(&qword_2EED20);
      uint64_t v50 = (uint64_t *)&v32[*(int *)(v49 + 48)];
      uint64_t v52 = *v50;
      uint64_t v51 = (char *)v50[1];
      uint64_t v91 = v52;
      uint64_t v90 = v51;
      uint64_t v53 = (uint64_t)&v32[*(int *)(v49 + 64)];
      uint64_t v54 = v83;
      sub_19CC4((uint64_t)v32, v83, &qword_2EA0C0);
      sub_19CC4(v53, (uint64_t)v99, &qword_2EBAC8);
      uint64_t v55 = (uint64_t)v87;
      uint64_t v56 = v82;
      uint64_t v57 = v88;
      v87[2](v82, a1 + v19[5], v88);
      uint64_t v58 = v19[6];
      LODWORD(v86) = *(unsigned __int8 *)(a1 + v19[7]);
      LODWORD(v89) = *(unsigned __int8 *)(a1 + v19[8]);
      sub_C1A5C(a1 + v58, (uint64_t)v97);
      sub_AD44(v97, (uint64_t)v98);
      uint64_t v59 = v81;
      sub_B678(v54, v81, &qword_2EA0C0);
      sub_B678((uint64_t)v99, (uint64_t)v97, &qword_2EBAC8);
      type metadata accessor for ProfileRestrictions();
      sub_C19A8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
      *(void *)uint64_t v7 = sub_26AD70();
      *((void *)v7 + 1) = v60;
      *((void *)v7 + 2) = swift_getKeyPath();
      v7[56] = 0;
      uint64_t v61 = (int *)v95;
      uint64_t v62 = (uint64_t *)&v7[*(int *)(v95 + 24)];
      uint64_t *v62 = swift_getKeyPath();
      sub_4A98(&qword_2EBC98);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v7[v61[7]], v56, v57);
      v7[v61[8]] = v86;
      v7[v61[9]] = v89;
      sub_AD44(v98, (uint64_t)&v7[v61[10]]);
      sub_19CC4(v59, (uint64_t)&v7[v61[11]], &qword_2EA0C0);
      uint64_t v63 = (uint64_t *)&v7[v61[12]];
      uint64_t v64 = v90;
      *uint64_t v63 = v91;
      v63[1] = (uint64_t)v64;
      sub_19CC4((uint64_t)v97, (uint64_t)&v7[v61[13]], &qword_2EBAC8);
      uint64_t v65 = v84;
      sub_C2FE4((uint64_t)v7, v84, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
      sub_C24B0(v65, v94, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
      swift_storeEnumTagMultiPayload();
      sub_C18CC();
      sub_C19A8(&qword_2EEC20, (void (*)(uint64_t))type metadata accessor for ToolbarActionButtonMenuItem);
      sub_26B2F0();
      sub_C30A0(v65, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
      sub_B6DC((uint64_t)v99, &qword_2EBAC8);
      return sub_B6DC(v54, &qword_2EA0C0);
    }
  }
  else
  {
    char v87 = v29;
    LODWORD(v83) = *v32;
    sub_C24B0(a1, (uint64_t)v21, type metadata accessor for ToolbarActionMenuItem);
    uint64_t v43 = type metadata accessor for ToolbarActionMenu(0);
    uint64_t v44 = v77;
    long long v45 = (uint64_t *)(v77 + *(int *)(v43 + 28));
    uint64_t v46 = *v45;
    uint64_t v47 = v45[1];
    if (*v45)
    {
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v46;
      *(void *)(v48 + 24) = v47;
      uint64_t v88 = (uint64_t)sub_C7608;
    }
    else
    {
      uint64_t v88 = 0;
      uint64_t v48 = 0;
    }
    uint64_t v66 = (uint64_t *)(v44 + *(int *)(v43 + 32));
    uint64_t v67 = *v66;
    uint64_t v68 = (char *)v66[1];
    uint64_t v84 = v47;
    int v82 = v68;
    if (v67)
    {
      uint64_t v69 = swift_allocObject();
      *(void *)(v69 + 16) = v67;
      *(void *)(v69 + 24) = v68;
      uint64_t v70 = sub_C7608;
    }
    else
    {
      uint64_t v70 = 0;
      uint64_t v69 = 0;
    }
    *(void *)unint64_t v24 = swift_getKeyPath();
    v24[40] = 0;
    uint64_t v71 = (int *)v85;
    uint64_t v72 = (uint64_t *)&v24[*(int *)(v85 + 20)];
    *uint64_t v72 = swift_getKeyPath();
    sub_4A98(&qword_2EBC98);
    swift_storeEnumTagMultiPayload();
    sub_C2FE4((uint64_t)v21, (uint64_t)&v24[v71[6]], type metadata accessor for ToolbarActionMenuItem);
    v24[v71[7]] = v83;
    uint64_t v73 = &v24[v71[8]];
    *(void *)uint64_t v73 = v88;
    *((void *)v73 + 1) = v48;
    long long v74 = (uint64_t (**)())&v24[v71[9]];
    char *v74 = v70;
    v74[1] = (uint64_t (*)())v69;
    sub_C2FE4((uint64_t)v24, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
    uint64_t v75 = (uint64_t)v87;
    sub_C2FE4((uint64_t)v27, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
    sub_C24B0(v75, v89, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
    swift_storeEnumTagMultiPayload();
    sub_82C24(v46);
    sub_82C24(v67);
    sub_C19A8(&qword_2EEC10, (void (*)(uint64_t))type metadata accessor for ToolbarActionToggleMenuItem);
    sub_C19A8(&qword_2EEC18, (void (*)(uint64_t))type metadata accessor for ToolbarActionShareLinkMenuItem);
    uint64_t v76 = (uint64_t)v90;
    sub_26B2F0();
    sub_B678(v76, v94, &qword_2EEC08);
    swift_storeEnumTagMultiPayload();
    sub_C18CC();
    sub_C19A8(&qword_2EEC20, (void (*)(uint64_t))type metadata accessor for ToolbarActionButtonMenuItem);
    sub_26B2F0();
    sub_B6DC(v76, &qword_2EEC08);
    return sub_C30A0(v75, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
  }
}

uint64_t sub_C1628()
{
  uint64_t v1 = (int *)type metadata accessor for ToolbarActionMenu(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[5];
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v1[7])) {
    swift_release();
  }
  if (*(void *)(v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_C17A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ToolbarActionMenu(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_C0808(a1, v6, a2);
}

unint64_t sub_C1820()
{
  unint64_t result = qword_2EEBF8;
  if (!qword_2EEBF8)
  {
    sub_7B0C(&qword_2EEBE8);
    sub_C18CC();
    sub_C19A8(&qword_2EEC20, (void (*)(uint64_t))type metadata accessor for ToolbarActionButtonMenuItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEBF8);
  }
  return result;
}

unint64_t sub_C18CC()
{
  unint64_t result = qword_2EEC00;
  if (!qword_2EEC00)
  {
    sub_7B0C(&qword_2EEC08);
    sub_C19A8(&qword_2EEC10, (void (*)(uint64_t))type metadata accessor for ToolbarActionToggleMenuItem);
    sub_C19A8(&qword_2EEC18, (void (*)(uint64_t))type metadata accessor for ToolbarActionShareLinkMenuItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEC00);
  }
  return result;
}

uint64_t sub_C19A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ToolbarActionMenuItem(uint64_t a1)
{
  return sub_2A148(a1, qword_2EED80);
}

uint64_t ToolbarActionMenuItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionMenuItem(0);
  sub_C1A5C(v1 + *(int *)(v3 + 24), (uint64_t)v5);
  return sub_AD44(v5, a1);
}

uint64_t sub_C1A5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_C1AB8(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x736D657469;
      break;
    case 3:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      uint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C1B64()
{
  return sub_C1AB8(*v0);
}

uint64_t sub_C1B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C71AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_C1B94(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_C1BA0(uint64_t a1)
{
  unint64_t v2 = sub_C211C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C1BDC(uint64_t a1)
{
  unint64_t v2 = sub_C211C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ToolbarActionMenu.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EEC30);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolbarActionMenu(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (uint64_t *)((char *)v13 + *(int *)(v11 + 28));
  uint64_t *v14 = 0;
  v14[1] = 0;
  uint64_t v29 = v14;
  uint64_t v15 = (uint64_t *)((char *)v13 + *(int *)(v11 + 32));
  uint64_t *v15 = 0;
  v15[1] = 0;
  uint64_t v30 = v15;
  sub_4ADC(a1, a1[3]);
  sub_C211C();
  uint64_t v28 = v9;
  sub_26DFC0();
  if (v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    uint64_t v18 = v30;
    sub_82C34(*v29);
    return sub_82C34(*v18);
  }
  else
  {
    uint64_t v16 = v26;
    uint64_t v17 = v27;
    unint64_t v24 = a1;
    LOBYTE(v31) = 0;
    *uint64_t v13 = sub_26DC70();
    v13[1] = v19;
    sub_26A220();
    LOBYTE(v31) = 1;
    sub_C19A8(&qword_2EEC40, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
    sub_26DC60();
    sub_19CC4((uint64_t)v6, (uint64_t)v13 + *(int *)(v10 + 20), &qword_2EA0C0);
    sub_4A98(&qword_2EEBE0);
    char v32 = 2;
    sub_C2170();
    sub_26DC90();
    uint64_t v23 = 0;
    *(uint64_t *)((char *)v13 + *(int *)(v10 + 24)) = v31;
    sub_4A98(&qword_2EEC58);
    char v32 = 3;
    sub_7C18(&qword_2EEC60, &qword_2EEC58);
    sub_26DC90();
    *(_OWORD *)uint64_t v29 = v31;
    char v32 = 4;
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v17);
    long long v20 = v31;
    uint64_t v21 = v30;
    sub_82C34(*v30);
    *(_OWORD *)uint64_t v21 = v20;
    sub_C24B0(0, v25, type metadata accessor for ToolbarActionMenu);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v24);
    return sub_C30A0(0, type metadata accessor for ToolbarActionMenu);
  }
}

unint64_t sub_C211C()
{
  unint64_t result = qword_2EEC38;
  if (!qword_2EEC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEC38);
  }
  return result;
}

unint64_t sub_C2170()
{
  unint64_t result = qword_2EEC48;
  if (!qword_2EEC48)
  {
    sub_7B0C(&qword_2EEBE0);
    sub_C19A8(&qword_2EEC50, (void (*)(uint64_t))type metadata accessor for ToolbarActionMenuItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEC48);
  }
  return result;
}

uint64_t sub_C2214@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_C2220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolbarActionMenu.init(from:)(a1, a2);
}

uint64_t static ToolbarActionMenuItem.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_26DDB0();
  }
}

uint64_t ToolbarActionMenuItem.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolbarActionMenuItem(0) + 20);
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_C22E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ToolbarActionMenuItem(0);
  sub_C1A5C(a1 + *(int *)(v4 + 24), (uint64_t)v6);
  return sub_AD44(v6, a2);
}

uint64_t sub_C2330(uint64_t a1, uint64_t a2)
{
  sub_C224(a1, (uint64_t)v5);
  uint64_t v3 = a2 + *(int *)(type metadata accessor for ToolbarActionMenuItem(0) + 24);
  _s7BooksUI13AnyPagedFrameVwxx_0(v3);
  return sub_AD44(v5, v3);
}

uint64_t ToolbarActionMenuItem.action.setter(long long *a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolbarActionMenuItem(0) + 24);
  _s7BooksUI13AnyPagedFrameVwxx_0(v3);

  return sub_AD44(a1, v3);
}

double (*ToolbarActionMenuItem.action.modify())(double)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ToolbarActionMenuItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionMenuItem(0) + 28));
}

uint64_t ToolbarActionMenuItem.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionMenuItem(0) + 32));
}

uint64_t ToolbarActionMenuItem.buttonType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionMenuItem(0);
  return sub_C24B0(v1 + *(int *)(v3 + 36), a1, type metadata accessor for ToolbarActionMenuItemButtonType);
}

uint64_t sub_C24B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ToolbarActionMenuItemButtonType(uint64_t a1)
{
  return sub_2A148(a1, qword_2EEE38);
}

uint64_t ToolbarActionMenuItem.init(id:name:action:isEnabled:isExplicit:buttonType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  HIDWORD(v25) = a6;
  uint64_t v13 = type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = a1;
  v16[1] = a2;
  uint64_t v17 = (char *)v16 + v14[7];
  uint64_t v18 = sub_26A220();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, v18);
  uint64_t v21 = a4[3];
  uint64_t v20 = a4[4];
  uint64_t v22 = sub_4ADC(a4, v21);
  uint64_t v29 = v21;
  uint64_t v30 = *(void *)(v20 + 8);
  uint64_t v23 = sub_CA1C((uint64_t *)&v28);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v23, v22, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a3, v18);
  sub_AD44(&v28, (uint64_t)v16 + v14[8]);
  *((unsigned char *)v16 + v14[9]) = a5;
  *((unsigned char *)v16 + v14[10]) = BYTE4(v25);
  sub_C2FE4(v26, (uint64_t)v16 + v14[11], type metadata accessor for ToolbarActionMenuItemButtonType);
  sub_C2FE4((uint64_t)v16, v27, type metadata accessor for ToolbarActionMenuItem);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a4);
}

uint64_t sub_C2724()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x6E6F69746361;
      break;
    case 3:
      uint64_t result = 0x656C62616E457369;
      break;
    case 4:
      uint64_t result = 0x63696C7078457369;
      break;
    case 5:
      uint64_t result = 0x79546E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C27E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C7390(a1, a2);
  *a3 = result;
  return result;
}

void sub_C280C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_C2818(uint64_t a1)
{
  unint64_t v2 = sub_C304C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C2854(uint64_t a1)
{
  unint64_t v2 = sub_C304C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ToolbarActionMenuItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  __chkstk_darwin(v21);
  uint64_t v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26A220();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EEC68);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_4ADC(a1, a1[3]);
  sub_C304C();
  uint64_t v26 = v8;
  uint64_t v12 = (uint64_t)v27;
  sub_26DFC0();
  if (v12) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  uint64_t v27 = a1;
  uint64_t v13 = v24;
  LOBYTE(v28) = 0;
  *uint64_t v11 = sub_26DC70();
  v11[1] = v14;
  LOBYTE(v28) = 1;
  sub_C19A8(&qword_2EEC40, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
  sub_26DC90();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v11 + v9[5], v6, v4);
  char v31 = 2;
  sub_3FBD4();
  sub_26DC90();
  uint64_t v15 = (char *)v11 + v9[6];
  long long v16 = v29;
  *(_OWORD *)uint64_t v15 = v28;
  *((_OWORD *)v15 + 1) = v16;
  *((void *)v15 + 4) = v30;
  LOBYTE(v28) = 3;
  uint64_t v19 = 0;
  *((unsigned char *)v11 + v9[7]) = sub_26DC80() & 1;
  LOBYTE(v28) = 4;
  *((unsigned char *)v11 + v9[8]) = sub_26DC80() & 1;
  LOBYTE(v28) = 5;
  sub_C19A8(&qword_2EEC78, (void (*)(uint64_t))type metadata accessor for ToolbarActionMenuItemButtonType);
  uint64_t v17 = (uint64_t)v22;
  sub_26DC90();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
  sub_C2FE4(v17, (uint64_t)v11 + v9[9], type metadata accessor for ToolbarActionMenuItemButtonType);
  sub_C24B0((uint64_t)v11, v20, type metadata accessor for ToolbarActionMenuItem);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v27);
  return sub_C30A0((uint64_t)v11, type metadata accessor for ToolbarActionMenuItem);
}

uint64_t sub_C2E14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolbarActionMenuItem.init(from:)(a1, a2);
}

unint64_t ToolbarItemType.id.getter()
{
  sub_C3100(v0, (uint64_t)&v3);
  switch(v5[185])
  {
    case 1:
      unint64_t v1 = 0x69576E6F74747562;
      swift_bridgeObjectRelease();
      swift_release();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v5);
      break;
    case 2:
      unint64_t v1 = 0x69576E6F74747562;
      swift_bridgeObjectRelease();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v5);
      break;
    case 3:
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v4);
      unint64_t v1 = 0x74754274696B6975;
      break;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2D738((uint64_t)&v3);
      unint64_t v1 = 0x70756B636F6CLL;
      break;
    case 5:
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v4);
      unint64_t v1 = 0xD000000000000016;
      break;
    default:
      sub_C3138((uint64_t)&v3);
      unint64_t v1 = 0x4D747865746E6F63;
      break;
  }
  return v1;
}

unint64_t sub_C2FBC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ToolbarItemType.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_C2FE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_C304C()
{
  unint64_t result = qword_2EEC70;
  if (!qword_2EEC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEC70);
  }
  return result;
}

uint64_t sub_C30A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_C3100(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_C3138(uint64_t a1)
{
  return a1;
}

uint64_t sub_C3168@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;

  return sub_82C24(v4);
}

uint64_t sub_C31B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ToolbarActionMenu(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;

  return sub_82C24(v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolbarActionMenu(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A220();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_4A98(&qword_2EA0C0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v20 = *((void *)v18 + 1);
      *uint64_t v17 = v19;
      v17[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    if (*v23)
    {
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
  }
  return v4;
}

uint64_t destroy for ToolbarActionMenu(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_26A220();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[8]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for ToolbarActionMenu(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 1);
    void *v15 = v17;
    v15[1] = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (*v21)
  {
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  }
  return a1;
}

void *assignWithCopy for ToolbarActionMenu(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a1 + v15);
  uint64_t v19 = *(void *)((char *)a2 + v15);
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = *((void *)v17 + 1);
      *uint64_t v16 = v19;
      v16[1] = v20;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = *((void *)v17 + 1);
    *uint64_t v16 = v19;
    v16[1] = v21;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
LABEL_14:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = *(void *)((char *)a1 + v22);
  uint64_t v26 = *v24;
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = v24[1];
      void *v23 = v26;
      v23[1] = v28;
      swift_retain();
      return a1;
    }
LABEL_20:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v27 = v24[1];
  void *v23 = v26;
  v23[1] = v27;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for ToolbarActionMenu(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_4A98(&qword_2EA0C0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ToolbarActionMenu(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a1 + v16);
  uint64_t v20 = *(void *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *((void *)v18 + 1);
      *uint64_t v17 = v20;
      v17[1] = v21;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *((void *)v18 + 1);
    *uint64_t v17 = v20;
    v17[1] = v22;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_14:
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = *(void *)((char *)a1 + v23);
  uint64_t v27 = *v25;
  if (!v26)
  {
    if (v27)
    {
      uint64_t v29 = v25[1];
      void *v24 = v27;
      v24[1] = v29;
      return a1;
    }
LABEL_20:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    return a1;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v28 = v25[1];
  void *v24 = v27;
  v24[1] = v28;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarActionMenu(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C3CB4);
}

uint64_t sub_C3CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EA0C0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ToolbarActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C3D7C);
}

uint64_t sub_C3D7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EA0C0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_C3E28()
{
  sub_C3ED8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_C3ED8()
{
  if (!qword_2EDE38)
  {
    sub_26A220();
    unint64_t v0 = sub_26D980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EDE38);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ToolbarActionMenuItem(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A220();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v4 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    uint64_t v16 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
      {
        uint64_t v24 = sub_4A98(&qword_2EA0C0);
        memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v13(v18, v19, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      }
      uint64_t v25 = sub_4A98(&qword_2EED20);
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      uint64_t v30 = *(void *)v28;
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = v30;
      *((void *)v27 + 1) = v29;
      uint64_t v31 = *(int *)(v25 + 64);
      char v32 = &v18[v31];
      uint64_t v33 = &v19[v31];
      uint64_t v34 = *((void *)v33 + 3);
      swift_bridgeObjectRetain();
      if (v34)
      {
        uint64_t v35 = *((void *)v33 + 4);
        *((void *)v32 + 3) = v34;
        *((void *)v32 + 4) = v35;
        (**(void (***)(char *, char *, uint64_t))(v34 - 8))(v32, v33, v34);
      }
      else
      {
        long long v36 = *((_OWORD *)v33 + 1);
        *(_OWORD *)char v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v36;
        *((void *)v32 + 4) = *((void *)v33 + 4);
      }
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return v4;
    }
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return v4;
}

uint64_t destroy for ToolbarActionMenuItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_26A220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[6]);
  uint64_t v8 = a1 + a2[9];
  type metadata accessor for ToolbarActionMenuItemButtonType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
      v7(v8, v5);
    }
    uint64_t v12 = sub_4A98(&qword_2EED20);
    swift_bridgeObjectRelease();
    uint64_t result = v8 + *(int *)(v12 + 64);
    if (*(void *)(result + 24))
    {
      return _s7BooksUI13AnyPagedFrameVwxx_0(result);
    }
  }
  else if (result == 1)
  {
    uint64_t v10 = sub_2696C0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

void *initializeWithCopy for ToolbarActionMenuItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
  *(_OWORD *)((char *)a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  uint64_t v15 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10))
    {
      uint64_t v22 = sub_4A98(&qword_2EA0C0);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v12(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    }
    uint64_t v23 = sub_4A98(&qword_2EED20);
    uint64_t v24 = *(int *)(v23 + 48);
    uint64_t v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v27;
    uint64_t v29 = *(int *)(v23 + 64);
    uint64_t v30 = &v17[v29];
    uint64_t v31 = &v18[v29];
    uint64_t v32 = *((void *)v31 + 3);
    swift_bridgeObjectRetain();
    if (v32)
    {
      uint64_t v33 = *((void *)v31 + 4);
      *((void *)v30 + 3) = v32;
      *((void *)v30 + 4) = v33;
      (**(void (***)(char *, char *, uint64_t))(v32 - 8))(v30, v31, v32);
    }
    else
    {
      long long v34 = *((_OWORD *)v31 + 1);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v34;
      *((void *)v30 + 4) = *((void *)v31 + 4);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v17, v18, v21);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  return a1;
}

void *assignWithCopy for ToolbarActionMenuItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
  sub_16D58((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[9];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_C30A0((uint64_t)a1 + v11, type metadata accessor for ToolbarActionMenuItemButtonType);
    uint64_t v14 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9))
      {
        uint64_t v17 = sub_4A98(&qword_2EA0C0);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v13, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      }
      uint64_t v18 = sub_4A98(&qword_2EED20);
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = &v12[v19];
      uint64_t v21 = &v13[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      uint64_t v22 = *(int *)(v18 + 64);
      uint64_t v23 = &v12[v22];
      uint64_t v24 = &v13[v22];
      uint64_t v25 = *((void *)v24 + 3);
      swift_bridgeObjectRetain();
      if (v25)
      {
        *((void *)v23 + 3) = v25;
        *((void *)v23 + 4) = *((void *)v24 + 4);
        (**(void (***)(char *, char *, uint64_t))(v25 - 8))(v23, v24, v25);
      }
      else
      {
        long long v26 = *(_OWORD *)v24;
        long long v27 = *((_OWORD *)v24 + 1);
        *((void *)v23 + 4) = *((void *)v24 + 4);
        *(_OWORD *)uint64_t v23 = v26;
        *((_OWORD *)v23 + 1) = v27;
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v12, v13, v16);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for ToolbarActionMenuItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  long long v16 = *(_OWORD *)v15;
  long long v17 = *((_OWORD *)v15 + 1);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *(_OWORD *)uint64_t v14 = v16;
  *((_OWORD *)v14 + 1) = v17;
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9))
    {
      uint64_t v24 = sub_4A98(&qword_2EA0C0);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v11(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v25 = sub_4A98(&qword_2EED20);
    *(_OWORD *)&v19[*(int *)(v25 + 48)] = *(_OWORD *)&v20[*(int *)(v25 + 48)];
    uint64_t v26 = *(int *)(v25 + 64);
    long long v27 = &v19[v26];
    uint64_t v28 = &v20[v26];
    *((void *)v27 + 4) = *((void *)v28 + 4);
    long long v29 = *((_OWORD *)v28 + 1);
    *(_OWORD *)long long v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v29;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v23 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  return a1;
}

void *assignWithTake for ToolbarActionMenuItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1 + v12);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  if (a1 != a2)
  {
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_C30A0((uint64_t)a1 + v17, type metadata accessor for ToolbarActionMenuItemButtonType);
    uint64_t v20 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10))
      {
        uint64_t v23 = sub_4A98(&qword_2EA0C0);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      }
      uint64_t v24 = sub_4A98(&qword_2EED20);
      *(_OWORD *)&v18[*(int *)(v24 + 48)] = *(_OWORD *)&v19[*(int *)(v24 + 48)];
      uint64_t v25 = *(int *)(v24 + 64);
      uint64_t v26 = &v18[v25];
      long long v27 = &v19[v25];
      *((void *)v26 + 4) = *((void *)v27 + 4);
      long long v28 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v28;
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarActionMenuItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C4F18);
}

uint64_t sub_C4F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ToolbarActionMenuItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C5058);
}

uint64_t sub_C5058(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_C5184()
{
  uint64_t result = sub_26A220();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ToolbarActionMenuItemButtonType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolbarActionMenuItemButtonType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_26A220();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_4A98(&qword_2EA0C0);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v13 = sub_4A98(&qword_2EED20);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      void *v15 = v18;
      v15[1] = v17;
      uint64_t v19 = *(int *)(v13 + 64);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *((void *)v21 + 3);
      swift_bridgeObjectRetain();
      if (v22)
      {
        uint64_t v23 = *((void *)v21 + 4);
        *((void *)v20 + 3) = v22;
        *((void *)v20 + 4) = v23;
        (**(void (***)(char *, char *, uint64_t))(v22 - 8))(v20, v21, v22);
      }
      else
      {
        long long v24 = *((_OWORD *)v21 + 1);
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v24;
        *((void *)v20 + 4) = *((void *)v21 + 4);
      }
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_2696C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for ToolbarActionMenuItemButtonType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v5 = sub_26A220();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    }
    uint64_t v7 = sub_4A98(&qword_2EED20);
    swift_bridgeObjectRelease();
    uint64_t result = a1 + *(int *)(v7 + 64);
    if (*(void *)(result + 24))
    {
      return _s7BooksUI13AnyPagedFrameVwxx_0(result);
    }
  }
  else if (result == 1)
  {
    uint64_t v3 = sub_2696C0();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *initializeWithCopy for ToolbarActionMenuItemButtonType(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_4A98(&qword_2EA0C0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = sub_4A98(&qword_2EED20);
    uint64_t v12 = *(int *)(v11 + 48);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = v16;
    *((void *)v13 + 1) = v15;
    uint64_t v17 = *(int *)(v11 + 64);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *((void *)v19 + 3);
    swift_bridgeObjectRetain();
    if (v20)
    {
      uint64_t v21 = *((void *)v19 + 4);
      *((void *)v18 + 3) = v20;
      *((void *)v18 + 4) = v21;
      (**(void (***)(char *, char *, uint64_t))(v20 - 8))(v18, v19, v20);
    }
    else
    {
      long long v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v22;
      *((void *)v18 + 4) = *((void *)v19 + 4);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for ToolbarActionMenuItemButtonType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_C30A0((uint64_t)a1, type metadata accessor for ToolbarActionMenuItemButtonType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_26A220();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = sub_4A98(&qword_2EA0C0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = sub_4A98(&qword_2EED20);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      uint64_t v15 = *(int *)(v11 + 64);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      if (v18)
      {
        *((void *)v16 + 3) = v18;
        *((void *)v16 + 4) = *((void *)v17 + 4);
        (**(void (***)(char *, char *, uint64_t))(v18 - 8))(v16, v17, v18);
      }
      else
      {
        long long v19 = *(_OWORD *)v17;
        long long v20 = *((_OWORD *)v17 + 1);
        *((void *)v16 + 4) = *((void *)v17 + 4);
        *(_OWORD *)uint64_t v16 = v19;
        *((_OWORD *)v16 + 1) = v20;
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for ToolbarActionMenuItemButtonType(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_4A98(&qword_2EA0C0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = sub_4A98(&qword_2EED20);
    *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
    uint64_t v12 = *(int *)(v11 + 64);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    *((void *)v13 + 4) = *((void *)v14 + 4);
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_2696C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for ToolbarActionMenuItemButtonType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_C30A0((uint64_t)a1, type metadata accessor for ToolbarActionMenuItemButtonType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_26A220();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = sub_4A98(&qword_2EA0C0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = sub_4A98(&qword_2EED20);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
      uint64_t v12 = *(int *)(v11 + 64);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      *((void *)v13 + 4) = *((void *)v14 + 4);
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_C5F10()
{
  unint64_t v4 = &unk_275340;
  uint64_t v0 = sub_2696C0();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v0 - 8) + 64;
    sub_C3ED8();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t destroy for ToolbarItemType(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 201);
  if (v2 >= 6) {
    unsigned int v2 = *(_DWORD *)a1 + 6;
  }
  switch(v2)
  {
    case 1u:
      swift_bridgeObjectRelease();
      _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
      return swift_release();
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + 16;
      goto LABEL_9;
    case 3u:
    case 5u:
      uint64_t v3 = a1 + 8;
LABEL_9:
      return _s7BooksUI13AnyPagedFrameVwxx_0(v3);
    case 4u:
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    default:
LABEL_17:
      return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for ToolbarItemType(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 201);
  if (v4 >= 6) {
    unsigned int v4 = *(_DWORD *)a2 + 6;
  }
  switch(v4)
  {
    case 1u:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      long long v6 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v6;
      uint64_t v7 = v6;
      uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
      swift_bridgeObjectRetain();
      v8(a1 + 16, a2 + 16, v7);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 201) = 1;
      swift_retain();
      return a1;
    case 2u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = a2 + 16;
      long long v11 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v11;
      uint64_t v12 = v11;
      uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
      swift_bridgeObjectRetain();
      v13(a1 + 16, v10, v12);
      char v14 = 2;
      goto LABEL_11;
    case 3u:
      *(void *)a1 = *(void *)a2;
      long long v15 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 8, a2 + 8);
      char v14 = 3;
      goto LABEL_11;
    case 4u:
      if (*(unsigned char *)(a2 + 56))
      {
        long long v16 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      }
      else
      {
        long long v18 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v18;
        (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      uint64_t v19 = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      if (v19)
      {
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = v19;
        uint64_t v20 = *(void *)(a2 + 136);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = v20;
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        uint64_t v21 = *(void *)(a2 + 160);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v22 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v22;
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
      }
      uint64_t v23 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v23;
      uint64_t v24 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v24;
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(unsigned char *)(a1 + 201) = 4;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 5u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      long long v17 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v17;
      (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 8, a2 + 8);
      char v14 = 5;
LABEL_11:
      *(unsigned char *)(a1 + 201) = v14;
      break;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 201) = 0;
LABEL_17:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t assignWithCopy for ToolbarItemType(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 201);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 1u:
        swift_bridgeObjectRelease();
        _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
        swift_release();
        goto LABEL_15;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v5 = a1 + 16;
        goto LABEL_8;
      case 3u:
      case 5u:
        uint64_t v5 = a1 + 8;
LABEL_8:
        _s7BooksUI13AnyPagedFrameVwxx_0(v5);
        goto LABEL_15;
      case 4u:
        if (!*(unsigned char *)(a1 + 56)) {
          _s7BooksUI13AnyPagedFrameVwxx_0(a1);
        }
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 120))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_14;
      default:
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_15:
        unsigned int v6 = *((unsigned __int8 *)a2 + 201);
        if (v6 >= 6) {
          unsigned int v6 = *(_DWORD *)a2 + 6;
        }
        switch(v6)
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            uint64_t v7 = *((void *)a2 + 5);
            *(void *)(a1 + 40) = v7;
            *(void *)(a1 + 48) = *((void *)a2 + 6);
            uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
            swift_bridgeObjectRetain();
            v8(a1 + 16, (uint64_t)(a2 + 1), v7);
            *(void *)(a1 + 56) = *((void *)a2 + 7);
            *(unsigned char *)(a1 + 201) = 1;
            swift_retain();
            return a1;
          case 2u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            uint64_t v9 = a2 + 1;
            uint64_t v10 = *((void *)a2 + 5);
            *(void *)(a1 + 40) = v10;
            *(void *)(a1 + 48) = *((void *)a2 + 6);
            long long v11 = **(void (***)(uint64_t, long long *, uint64_t))(v10 - 8);
            swift_bridgeObjectRetain();
            v11(a1 + 16, v9, v10);
            char v12 = 2;
            goto LABEL_25;
          case 3u:
            *(void *)a1 = *(void *)a2;
            uint64_t v13 = *((void *)a2 + 4);
            *(void *)(a1 + 32) = v13;
            *(void *)(a1 + 40) = *((void *)a2 + 5);
            (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 8, (uint64_t)a2 + 8);
            char v12 = 3;
            goto LABEL_25;
          case 4u:
            if (*((unsigned char *)a2 + 56))
            {
              long long v14 = *a2;
              long long v15 = a2[1];
              long long v16 = a2[2];
              *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
              *(_OWORD *)(a1 + 16) = v15;
              *(_OWORD *)(a1 + 32) = v16;
              *(_OWORD *)a1 = v14;
            }
            else
            {
              uint64_t v18 = *((void *)a2 + 3);
              *(void *)(a1 + 24) = v18;
              *(void *)(a1 + 32) = *((void *)a2 + 4);
              (**(void (***)(uint64_t, long long *))(v18 - 8))(a1, a2);
              *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
              *(unsigned char *)(a1 + 56) = 0;
            }
            *(_OWORD *)(a1 + 64) = a2[4];
            *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
            *(void *)(a1 + 88) = *((void *)a2 + 11);
            *(void *)(a1 + 96) = *((void *)a2 + 12);
            *(void *)(a1 + 104) = *((void *)a2 + 13);
            uint64_t v19 = *((void *)a2 + 15);
            swift_bridgeObjectRetain();
            if (v19)
            {
              *(void *)(a1 + 112) = *((void *)a2 + 14);
              *(void *)(a1 + 120) = *((void *)a2 + 15);
              *(void *)(a1 + 128) = *((void *)a2 + 16);
              *(void *)(a1 + 136) = *((void *)a2 + 17);
              *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
              *(void *)(a1 + 152) = *((void *)a2 + 19);
              *(void *)(a1 + 160) = *((void *)a2 + 20);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v20 = a2[7];
              long long v21 = a2[8];
              long long v22 = a2[9];
              *(void *)(a1 + 160) = *((void *)a2 + 20);
              *(_OWORD *)(a1 + 128) = v21;
              *(_OWORD *)(a1 + 144) = v22;
              *(_OWORD *)(a1 + 112) = v20;
            }
            *(void *)(a1 + 168) = *((void *)a2 + 21);
            *(void *)(a1 + 176) = *((void *)a2 + 22);
            *(void *)(a1 + 184) = *((void *)a2 + 23);
            *(void *)(a1 + 192) = *((void *)a2 + 24);
            *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
            *(unsigned char *)(a1 + 201) = 4;
            swift_bridgeObjectRetain();
            goto LABEL_31;
          case 5u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v17 = *((void *)a2 + 4);
            *(void *)(a1 + 32) = v17;
            *(void *)(a1 + 40) = *((void *)a2 + 5);
            (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 8, (uint64_t)a2 + 8);
            char v12 = 5;
LABEL_25:
            *(unsigned char *)(a1 + 201) = v12;
            break;
          default:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(unsigned char *)(a1 + 201) = 0;
LABEL_31:
            swift_bridgeObjectRetain();
            break;
        }
        break;
    }
  }
  return a1;
}

__n128 initializeWithTake for ToolbarItemType(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 186) = *(_OWORD *)(a2 + 186);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ToolbarItemType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 201);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 1u:
        swift_bridgeObjectRelease();
        _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
        swift_release();
        goto LABEL_15;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v5 = a1 + 16;
        goto LABEL_8;
      case 3u:
      case 5u:
        uint64_t v5 = a1 + 8;
LABEL_8:
        _s7BooksUI13AnyPagedFrameVwxx_0(v5);
        goto LABEL_15;
      case 4u:
        if (!*(unsigned char *)(a1 + 56)) {
          _s7BooksUI13AnyPagedFrameVwxx_0(a1);
        }
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 120))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_14;
      default:
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_15:
        unsigned int v6 = *(unsigned __int8 *)(a2 + 201);
        if (v6 >= 6) {
          unsigned int v6 = *(_DWORD *)a2 + 6;
        }
        switch(v6)
        {
          case 1u:
            long long v8 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v8;
            long long v9 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v9;
            char v7 = 1;
            break;
          case 2u:
            long long v10 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v10;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            char v7 = 2;
            break;
          case 3u:
            long long v11 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v11;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            char v7 = 3;
            break;
          case 4u:
            long long v12 = *(_OWORD *)(a2 + 176);
            *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
            *(_OWORD *)(a1 + 176) = v12;
            *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
            long long v13 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v13;
            long long v14 = *(_OWORD *)(a2 + 144);
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
            *(_OWORD *)(a1 + 144) = v14;
            long long v15 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v15;
            long long v16 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 80) = v16;
            long long v17 = *(_OWORD *)(a2 + 16);
            char v7 = 4;
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v17;
            break;
          case 5u:
            long long v18 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v18;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            char v7 = 5;
            break;
          default:
            char v7 = 0;
            *(_OWORD *)a1 = *(_OWORD *)a2;
            break;
        }
        *(unsigned char *)(a1 + 201) = v7;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarItemType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 202)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 201);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ToolbarItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 186) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 202) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 202) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 201) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_C6B94(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 201);
  if (result >= 6) {
    return (*(_DWORD *)a1 + 6);
  }
  return result;
}

uint64_t sub_C6BB0(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(_OWORD *)(result + 185) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 201) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ToolbarItemType()
{
  return &type metadata for ToolbarItemType;
}

unint64_t sub_C6C00()
{
  unint64_t result = qword_2EEE70;
  if (!qword_2EEE70)
  {
    sub_7B0C(&qword_2EEE78);
    sub_C1820();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEE70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryAssetState.Ownership(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolbarActionMenuItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC6DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarActionMenuItem.CodingKeys()
{
  return &type metadata for ToolbarActionMenuItem.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ToolbarActionMenu.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolbarActionMenu.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC6F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarActionMenu.CodingKeys()
{
  return &type metadata for ToolbarActionMenu.CodingKeys;
}

unint64_t sub_C6FA0()
{
  unint64_t result = qword_2EEE80;
  if (!qword_2EEE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEE80);
  }
  return result;
}

unint64_t sub_C6FF8()
{
  unint64_t result = qword_2EEE88;
  if (!qword_2EEE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEE88);
  }
  return result;
}

unint64_t sub_C7050()
{
  unint64_t result = qword_2EEE90;
  if (!qword_2EEE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEE90);
  }
  return result;
}

unint64_t sub_C70A8()
{
  unint64_t result = qword_2EEE98;
  if (!qword_2EEE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEE98);
  }
  return result;
}

unint64_t sub_C7100()
{
  unint64_t result = qword_2EEEA0;
  if (!qword_2EEEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEEA0);
  }
  return result;
}

unint64_t sub_C7158()
{
  unint64_t result = qword_2EEEA8;
  if (!qword_2EEEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEEA8);
  }
  return result;
}

uint64_t sub_C71AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002893C0 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000000002893E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_C7390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x79546E6F74747562 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t Localizer.string(forKey:with:defaultValue:macDefaultValue:comment:using:)()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_26D1C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Localizer.string(withCount:forKey:with:defaultValue:defaultOneValue:macDefaultValue:macDefaultOneValue:comment:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_C7714(a1, a2, a3, a4, a5, a6, a7, a8, a11, a12, a13);
}

uint64_t Localizer.decimal(forNumber:in:)()
{
  return sub_26D1E0();
}

uint64_t sub_C7714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v21[1] = a11;
  v21[2] = a10;
  uint64_t v14 = sub_26CF60();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1) {
    uint64_t v18 = a6;
  }
  else {
    uint64_t v18 = a5;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_26D1D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v19;
}

uint64_t Color.init(hexString:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_26C0D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v35[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_26D4C0();
  if (result != 6)
  {
    uint64_t result = sub_26D4C0();
    if (result != 8) {
      goto LABEL_62;
    }
  }
  uint64_t v9 = HIBYTE(a2) & 0xF;
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  if (!((a2 & 0x2000000000000000) != 0 ? HIBYTE(a2) & 0xF : a1 & 0xFFFFFFFFFFFFLL)) {
    goto LABEL_62;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = (unint64_t)sub_C7CF0(a1, a2, 16);
    char v33 = v32;
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      long long v12 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      long long v12 = (unsigned __int8 *)sub_26DAE0();
    }
    unint64_t v13 = (unint64_t)sub_C7E18(v12, v10, 16);
    if ((v14 & 1) == 0)
    {
LABEL_12:
      uint64_t v15 = sub_26D4C0();
      swift_bridgeObjectRelease();
      unint64_t v16 = v13 >> 8;
      if (v15 == 8) {
        double v17 = (double)v13 / 255.0;
      }
      else {
        double v17 = 1.0;
      }
      if (v15 != 8) {
        LODWORD(v16) = v13;
      }
      if ((double)BYTE2(v16) / 255.0 <= 1.0
        && (double)BYTE1(v16) / 255.0 <= 1.0
        && (double)v16 / 255.0 <= 1.0
        && v17 <= 1.0)
      {
        (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
        return sub_26C220();
      }
      return 0;
    }
LABEL_62:
    swift_bridgeObjectRelease();
    return 0;
  }
  v35[0] = a1;
  v35[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (v9)
    {
      uint64_t v25 = v9 - 1;
      if (v25)
      {
        unint64_t v13 = 0;
        uint64_t v26 = (unsigned __int8 *)v35 + 1;
        while (1)
        {
          int v27 = *v26;
          unsigned __int8 v28 = v27 - 48;
          if ((v27 - 48) >= 0xA)
          {
            if ((v27 - 65) < 6)
            {
              unsigned __int8 v28 = v27 - 55;
            }
            else
            {
              if ((v27 - 97) > 5) {
                goto LABEL_62;
              }
              unsigned __int8 v28 = v27 - 87;
            }
          }
          if (v13 >> 60) {
            break;
          }
          unint64_t v13 = 16 * v13 + v28;
          ++v26;
          if (!--v25) {
            goto LABEL_12;
          }
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    if (a1 != 45)
    {
      if (v9)
      {
        unint64_t v13 = 0;
        long long v29 = (unsigned __int8 *)v35;
        while (1)
        {
          int v30 = *v29;
          unsigned __int8 v31 = v30 - 48;
          if ((v30 - 48) >= 0xA)
          {
            if ((v30 - 65) < 6)
            {
              unsigned __int8 v31 = v30 - 55;
            }
            else
            {
              if ((v30 - 97) > 5) {
                goto LABEL_62;
              }
              unsigned __int8 v31 = v30 - 87;
            }
          }
          if (v13 >> 60) {
            break;
          }
          unint64_t v13 = 16 * v13 + v31;
          ++v29;
          if (!--v9) {
            goto LABEL_12;
          }
        }
      }
      goto LABEL_62;
    }
    if (v9)
    {
      uint64_t v20 = v9 - 1;
      if (v20)
      {
        unint64_t v13 = 0;
        long long v21 = (unsigned __int8 *)v35 + 1;
        while (1)
        {
          int v22 = *v21;
          unsigned __int8 v23 = v22 - 48;
          if ((v22 - 48) >= 0xA)
          {
            if ((v22 - 65) < 6)
            {
              unsigned __int8 v23 = v22 - 55;
            }
            else
            {
              if ((v22 - 97) > 5) {
                goto LABEL_62;
              }
              unsigned __int8 v23 = v22 - 87;
            }
          }
          if (v13 >> 60) {
            break;
          }
          BOOL v24 = 16 * v13 >= v23;
          unint64_t v13 = 16 * v13 - v23;
          if (!v24) {
            break;
          }
          ++v21;
          if (!--v20) {
            goto LABEL_12;
          }
        }
      }
      goto LABEL_62;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

double Color.rgbaComponents.getter()
{
  uint64_t v5 = 0;
  double v6 = 0.0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  sub_C7DD8();
  swift_retain();
  uint64_t v0 = (void *)sub_26D930();
  unsigned int v1 = [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];

  double result = 0.0;
  if (v1) {
    return v6;
  }
  return result;
}

unsigned __int8 *sub_C7CF0(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26D560();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    BOOL v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_268BFC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    BOOL v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    BOOL v7 = (unsigned __int8 *)sub_26DAE0();
  }
LABEL_7:
  long long v11 = sub_C7E18(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_C7DD8()
{
  unint64_t result = qword_2EEEC0;
  if (!qword_2EEEC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2EEEC0);
  }
  return result;
}

unsigned __int8 *sub_C7E18(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  long long v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t dispatch thunk of CoverStackCoverLayout.model.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoverStackCoverLayout.zIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoverStackCoverLayout.offset(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoverStackCoverLayout.height(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoverStackCoverLayout.scale(forOverscrollOffset:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverStackCoverLayout.offset(forOverscrollOffset:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void sub_C810C()
{
  qword_3152C8 = 0x4000000000000000;
}

uint64_t VerticalMasonryCoverGridViewModel.init(assets:gridWidth:gridStyle:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_26B660();
  __chkstk_darwin(v8 - 8);
  uint64_t v34 = sub_26B6B0();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unsigned int v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *a2;
  if (*(void *)(a1 + 16) < 0x16EuLL)
  {
    unsigned __int8 v15 = (void *)a1;
  }
  else
  {
    sub_26DE10();
    swift_unknownObjectRetain_n();
    uint64_t v13 = (void *)swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = &_swiftEmptyArrayStorage;
    }
    uint64_t v14 = v13[2];
    swift_release();
    if (v14 == 365)
    {
      unsigned __int8 v15 = (void *)swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_9;
      }
      unsigned __int8 v15 = &_swiftEmptyArrayStorage;
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned __int8 v15 = sub_E6ACC(a1, a1 + 32, 0, 0x2DBuLL);
    }
    swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v16 = v15[2];
  v37[0] = v12;
  uint64_t v17 = sub_D4FE4(v16, v37);
  unsigned __int8 v18 = sub_D5098((uint64_t)v15, v17, a4);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_D5280((uint64_t)v18, v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_D4CC0(v20);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v31 = v19;
    int v32 = v12;
    uint64_t v33 = a3;
    uint64_t v41 = &_swiftEmptyArrayStorage;
    sub_2B92C(0, v22, 0);
    v30[1] = v21;
    uint64_t v23 = v21 + 32;
    do
    {
      sub_6C0F8(v23, (uint64_t)v37);
      if (v38)
      {
        uint64_t v25 = v39;
        unint64_t v24 = v40;
        swift_bridgeObjectRetain();
        sub_26B140();
        sub_26B670();
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v24 = 0xE000000000000000;
        sub_26B140();
        sub_26B670();
        uint64_t v25 = 0;
      }
      uint64_t v35 = v25;
      unint64_t v36 = v24;
      sub_CC78();
      sub_26BB00();
      sub_26B6C0();
      sub_2D738((uint64_t)v37);
      unsigned __int8 v26 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2B92C(0, v26[2] + 1, 1);
        unsigned __int8 v26 = v41;
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1)
      {
        sub_2B92C(v27 > 1, v28 + 1, 1);
        unsigned __int8 v26 = v41;
      }
      v26[2] = v28 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, v11, v34);
      uint64_t v41 = v26;
      v23 += 168;
      --v22;
    }
    while (v22);
    uint64_t result = swift_release();
    a3 = v33;
    LOBYTE(v12) = v32;
    uint64_t v19 = v31;
  }
  else
  {
    uint64_t result = swift_release();
    unsigned __int8 v26 = &_swiftEmptyArrayStorage;
  }
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v26;
  *(unsigned char *)(a3 + 16) = v12;
  return result;
}

uint64_t sub_C8540@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v69 = a1;
  uint64_t v74 = sub_269920();
  uint64_t v76 = *(void *)(v74 - 8);
  uint64_t v3 = __chkstk_darwin(v74);
  uint64_t v73 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v63 = (char *)&v52 - v5;
  uint64_t v64 = sub_26D3E0();
  uint64_t v75 = *(void *)(v64 - 8);
  uint64_t v6 = __chkstk_darwin(v64);
  uint64_t v71 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v52 - v8;
  uint64_t v60 = (void (*)(char *, char *, uint64_t))sub_26B600();
  uint64_t v59 = *((void *)v60 - 1);
  __chkstk_darwin(v60);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v72 = sub_4A98(&qword_2EF198);
  __chkstk_darwin(v72);
  int v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EF1A0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v67 = v13;
  uint64_t v68 = v14;
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4A98(&qword_2EF1A8);
  uint64_t v16 = __chkstk_darwin(v66);
  uint64_t v62 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v52 - v18;
  uint64_t v19 = *v2;
  uint64_t v20 = v2[1];
  char v21 = *((unsigned char *)v2 + 16);
  *(void *)int v12 = sub_26B100();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  sub_4A98(&qword_2EF1B0);
  uint64_t v22 = *(void *)(v19 + 16);
  uint64_t v79 = 0;
  uint64_t v80 = v22;
  swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v20;
  uint64_t v61 = v20;
  *(unsigned char *)(v23 + 32) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EF1B8);
  sub_4A98(&qword_2EE8D8);
  sub_DBD38();
  sub_DBE08();
  sub_26C4F0();
  sub_26B5E0();
  uint64_t v52 = sub_7C18(&qword_2EF1E0, &qword_2EF198);
  sub_26BEA0();
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v59 + 8))(v10, v60);
  sub_B6DC((uint64_t)v12, &qword_2EF198);
  unint64_t v24 = v70;
  sub_26D370();
  uint64_t v25 = v63;
  sub_2698C0();
  uint64_t v26 = v75;
  unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  uint64_t v59 = v75 + 16;
  uint64_t v60 = v27;
  uint64_t v28 = v64;
  v27(v71, v24, v64);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v57 = ObjCClassFromMetadata;
  id v56 = self;
  id v30 = [v56 bundleForClass:ObjCClassFromMetadata];
  uint64_t v31 = v76;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v32 = v74;
  v55(v73, v25, v74);
  uint64_t v33 = sub_26D460();
  uint64_t v35 = v34;
  unint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v76 = v31 + 8;
  uint64_t v54 = v36;
  v36(v25, v32);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v75 = v26 + 8;
  uint64_t v53 = v37;
  uint64_t v38 = v70;
  v37(v70, v28);
  uint64_t v79 = v33;
  uint64_t v80 = v35;
  unint64_t v77 = v72;
  uint64_t v78 = v52;
  swift_getOpaqueTypeConformance2();
  unint64_t v72 = sub_CC78();
  uint64_t v39 = (uint64_t)v62;
  uint64_t v40 = v67;
  uint64_t v41 = v58;
  sub_26BE40();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v40);
  uint64_t v42 = (uint64_t)v65;
  sub_26AB90();
  sub_B6DC(v39, &qword_2EF1A8);
  sub_26D370();
  uint64_t v43 = v25;
  sub_2698C0();
  uint64_t v44 = v38;
  uint64_t v45 = v28;
  v60(v71, v38, v28);
  id v46 = [v56 bundleForClass:v57];
  uint64_t v47 = v74;
  v55(v73, v43, v74);
  uint64_t v48 = sub_26D460();
  uint64_t v50 = v49;
  v54(v43, v47);
  v53(v44, v45);
  uint64_t v79 = v48;
  uint64_t v80 = v50;
  sub_26ABA0();
  swift_bridgeObjectRelease();
  return sub_B6DC(v42, &qword_2EF1A8);
}

uint64_t sub_C8D7C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_4A98(&qword_2EE8D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  *(void *)uint64_t v8 = sub_26B1C0();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t result = sub_4A98(&qword_2EF1E8);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)(a2 + 16))
  {
    v13[1] = *(void *)(a2 + 8 * v9 + 32);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_4A98(&qword_2EF1F0);
    sub_4A98(&qword_2EF1F8);
    sub_7C18(&qword_2EF200, &qword_2EF1F0);
    sub_DBEA8();
    sub_26C4F0();
    uint64_t v11 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_B043C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, 0.0, 1, v11, v12);
    return sub_B6DC((uint64_t)v8, &qword_2EE8D0);
  }
  __break(1u);
  return result;
}

uint64_t sub_C8F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v41[1] = a2;
  uint64_t v42 = sub_26B190();
  v41[0] = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CoverView();
  uint64_t v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EF228);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EF218);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6C0F8(a1, (uint64_t)v46);
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[40] = 0;
  *((void *)v8 + 6) = swift_getKeyPath();
  v8[56] = 0;
  uint64_t v16 = (uint64_t *)&v8[v6[8]];
  *uint64_t v16 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)&v8[v6[9]];
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (uint64_t *)&v8[v6[10]];
  type metadata accessor for ProfileRestrictions();
  sub_DD984((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *uint64_t v18 = sub_26AD70();
  v18[1] = v19;
  uint64_t v20 = &v8[v6[11]];
  char v43 = 1;
  sub_26C340();
  uint64_t v21 = v45;
  char *v20 = v44;
  *((void *)v20 + 1) = v21;
  uint64_t v22 = &v8[v6[12]];
  long long v23 = v46[7];
  long long v24 = v46[9];
  *((_OWORD *)v22 + 8) = v46[8];
  *((_OWORD *)v22 + 9) = v24;
  *((void *)v22 + 20) = v47;
  long long v25 = v46[5];
  *((_OWORD *)v22 + 4) = v46[4];
  *((_OWORD *)v22 + 5) = v25;
  *((_OWORD *)v22 + 6) = v46[6];
  *((_OWORD *)v22 + 7) = v23;
  long long v26 = v46[1];
  *(_OWORD *)uint64_t v22 = v46[0];
  *((_OWORD *)v22 + 1) = v26;
  long long v27 = v46[3];
  *((_OWORD *)v22 + 2) = v46[2];
  *((_OWORD *)v22 + 3) = v27;
  v8[v6[13]] = 0;
  uint64_t v28 = *(void *)(a1 + 88);
  sub_D5750((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CoverView);
  unint64_t v29 = &v12[*(int *)(v10 + 44)];
  *(void *)unint64_t v29 = v28;
  *((_WORD *)v29 + 4) = 0;
  sub_DDB6C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CoverView);
  if (qword_2E9C08 != -1) {
    swift_once();
  }
  char v30 = sub_26B760();
  sub_26A640();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_B678((uint64_t)v12, (uint64_t)v15, &qword_2EF228);
  uint64_t v39 = &v15[*(int *)(v13 + 36)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_B6DC((uint64_t)v12, &qword_2EF228);
  sub_26B180();
  sub_D5A90(&qword_2EF210, &qword_2EF218, (void (*)(void))sub_DBF80);
  sub_26BF40();
  (*(void (**)(char *, uint64_t))(v41[0] + 8))(v4, v42);
  return sub_B6DC((uint64_t)v15, &qword_2EF218);
}

double SharableAssetLayoutStyle.size.getter()
{
  return *(double *)v0;
}

void sub_C942C()
{
  qword_3152D0 = 0x4072C00000000000;
}

void sub_C9440()
{
  qword_3152D8 = 0x4030000000000000;
}

uint64_t SharableAssetViewModel.init(assets:localizedYear:layoutStyle:lowAssetCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  long long v10 = *a4;
  unsigned __int8 v11 = *((unsigned char *)a4 + 16);
  long long v32 = *a4;
  if (a5)
  {
    if (qword_2E9C10 == -1)
    {
      int64_t v12 = *(void *)(a1 + 16);
      if (v12) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_once();
      int64_t v12 = *(void *)(a1 + 16);
      if (v12)
      {
LABEL_4:
        double v13 = *(double *)&qword_3152D0;
        uint64_t v49 = &_swiftEmptyArrayStorage;
        sub_2B8EC(0, v12, 0);
        uint64_t v14 = a1 + 32;
        uint64_t v15 = &_swiftEmptyArrayStorage;
        do
        {
          sub_C224(v14, (uint64_t)v37);
          sub_C224((uint64_t)v37, (uint64_t)v33);
          sub_4ADC(v37, v37[3]);
          sub_269FF0();
          double v34 = v13 * v16;
          double v35 = v13;
          char v36 = 0;
          CoverViewModel.init(style:)((uint64_t)v33, (uint64_t)&v38);
          _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2B8EC(0, v15[2] + 1, 1);
            uint64_t v15 = v49;
          }
          unint64_t v18 = v15[2];
          unint64_t v17 = v15[3];
          if (v18 >= v17 >> 1)
          {
            sub_2B8EC(v17 > 1, v18 + 1, 1);
            uint64_t v15 = v49;
          }
          v15[2] = v18 + 1;
          uint64_t v19 = (char *)&v15[21 * v18];
          long long v20 = v38;
          long long v21 = v40;
          *((_OWORD *)v19 + 3) = v39;
          *((_OWORD *)v19 + 4) = v21;
          *((_OWORD *)v19 + 2) = v20;
          long long v22 = v41;
          long long v23 = v42;
          long long v24 = v44;
          *((_OWORD *)v19 + 7) = v43;
          *((_OWORD *)v19 + 8) = v24;
          *((_OWORD *)v19 + 5) = v22;
          *((_OWORD *)v19 + 6) = v23;
          long long v25 = v45;
          long long v26 = v46;
          long long v27 = v47;
          *((void *)v19 + 24) = v48;
          *((_OWORD *)v19 + 10) = v26;
          *((_OWORD *)v19 + 11) = v27;
          *((_OWORD *)v19 + 9) = v25;
          v14 += 40;
          --v12;
        }
        while (v12);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v29 = 0;
        char v30 = 0;
        long long v31 = v32;
        goto LABEL_16;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    char v30 = 0;
    uint64_t v15 = &_swiftEmptyArrayStorage;
    long long v31 = v32;
    goto LABEL_16;
  }
  if (qword_2E9C18 != -1)
  {
    swift_once();
    *(void *)&long long v10 = v32;
  }
  v33[0] = v11;
  uint64_t result = VerticalMasonryCoverGridViewModel.init(assets:gridWidth:gridStyle:)(a1, v33, (uint64_t)&v38, *(double *)&v10 - *(double *)&qword_3152D8);
  long long v31 = v32;
  uint64_t v29 = *((void *)&v38 + 1);
  uint64_t v15 = (void *)v38;
  char v30 = v39 | 0x80;
LABEL_16:
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 16) = v15;
  *(void *)(a6 + 24) = v29;
  *(unsigned char *)(a6 + 32) = v30;
  *(_OWORD *)(a6 + 40) = v31;
  *(unsigned char *)(a6 + 56) = v11;
  return result;
}

uint64_t sub_C96F8()
{
  uint64_t v24 = sub_269920();
  uint64_t v1 = *(void *)(v24 - 8);
  uint64_t v2 = __chkstk_darwin(v24);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v23 = sub_26D3E0();
  uint64_t v7 = *(void *)(v23 - 8);
  uint64_t v8 = __chkstk_darwin(v23);
  long long v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_26D3C0();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = *v0;
  uint64_t v15 = (void *)v0[1];
  sub_26D3B0();
  v25._countAndFlagsBits = 0x20794D2A2ALL;
  v25._object = (void *)0xE500000000000000;
  sub_26D3A0(v25);
  v26._countAndFlagsBits = v14;
  v26._object = v15;
  sub_26D390(v26);
  v27._object = (void *)0x80000000002896C0;
  v27._countAndFlagsBits = 0xD000000000000011;
  sub_26D3A0(v27);
  sub_26D3D0();
  sub_2698C0();
  uint64_t v16 = v23;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v23);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v24);
  uint64_t v20 = sub_26D460();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v16);
  return v20;
}

__n128 ShareableAsset.init(model:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v13 = *a1;
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  unsigned __int8 v5 = a1[2].n128_u8[0];
  unint64_t v6 = a1[2].n128_u64[1];
  unint64_t v7 = a1[3].n128_u64[0];
  unsigned __int8 v8 = a1[3].n128_u8[8];
  uint64_t v9 = type metadata accessor for ShareableAsset(0);
  long long v10 = (uint64_t *)((char *)a2 + *(int *)(v9 + 20));
  *long long v10 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (uint64_t *)((char *)a2 + *(int *)(v9 + 24));
  *uint64_t v11 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  __n128 result = v13;
  *a2 = v13;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u8[0] = v5;
  a2[2].n128_u64[1] = v6;
  a2[3].n128_u64[0] = v7;
  a2[3].n128_u8[8] = v8;
  return result;
}

uint64_t ShareableAsset.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShareableAsset(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_D5750(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareableAsset);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_D57D0((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for ShareableAsset);
  *a1 = sub_D5714;
  a1[1] = v7;
  return result;
}

uint64_t sub_C9C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[1] = a3;
  v23[0] = sub_26AB40();
  uint64_t v5 = *(void *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26A6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EF268);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EF270);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C9F10(a2, a1, (uint64_t)v14);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorScheme.dark(_:), v8);
  uint64_t v19 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  uint64_t v20 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v19 + *(int *)(v20 + 28), v11, v8);
  uint64_t *v19 = KeyPath;
  sub_B678((uint64_t)v14, (uint64_t)v17, &qword_2EF268);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_B6DC((uint64_t)v14, &qword_2EF268);
  uint64_t v21 = v23[0];
  (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for DynamicTypeSize.large(_:), v23[0]);
  sub_DD9D4();
  sub_26BD80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  return sub_B6DC((uint64_t)v17, &qword_2EF270);
}

uint64_t sub_C9F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[0] = a2;
  v23[1] = a3;
  uint64_t v4 = sub_4A98(&qword_2EF2B0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EF2B8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EF2A0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *(unsigned char *)(a1 + 56);
  type metadata accessor for ShareableAsset(0);
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v12);
  sub_DDB6C((uint64_t)v12, type metadata accessor for SizeConstants.Spacing);
  uint64_t v17 = sub_26B1C0();
  if (v16)
  {
    *(void *)uint64_t v6 = v17;
    *((void *)v6 + 1) = 0x4028000000000000;
    v6[16] = 0;
    uint64_t v18 = sub_4A98(&qword_2EF2C0);
    sub_CAF1C(a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
    uint64_t v19 = &qword_2EF2B0;
    sub_B678((uint64_t)v6, (uint64_t)v9, &qword_2EF2B0);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2EF298, &qword_2EF2A0);
    sub_7C18(&qword_2EF2A8, &qword_2EF2B0);
    sub_26B2F0();
    uint64_t v20 = (uint64_t)v6;
  }
  else
  {
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = 0x4030000000000000;
    v15[16] = 0;
    uint64_t v21 = sub_4A98(&qword_2EF2C8);
    sub_CA24C((long long *)a1, (uint64_t)&v15[*(int *)(v21 + 44)]);
    uint64_t v19 = &qword_2EF2A0;
    sub_B678((uint64_t)v15, (uint64_t)v9, &qword_2EF2A0);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2EF298, &qword_2EF2A0);
    sub_7C18(&qword_2EF2A8, &qword_2EF2B0);
    sub_26B2F0();
    uint64_t v20 = (uint64_t)v15;
  }
  return sub_B6DC(v20, v19);
}

uint64_t sub_CA24C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EF2D0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v75 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t)&v61 - v7;
  uint64_t v8 = sub_26AB40();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  __chkstk_darwin(v8);
  uint64_t v66 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v61 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TextLockup();
  char v16 = (int *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v71 = (uint64_t)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v61 - v19);
  uint64_t v21 = *((void *)a1 + 2);
  uint64_t v22 = *((void *)a1 + 3);
  int v23 = *((char *)a1 + 32);
  unsigned int v73 = (~v23 >> 7) & 1;
  BOOL v74 = v23 < 0;
  sub_CA930((uint64_t)v88);
  char v24 = *((unsigned char *)a1 + 56);
  long long v92 = *a1;
  *(void *)&long long v93 = v21;
  *((void *)&v93 + 1) = v22;
  LOBYTE(v94[0]) = v23;
  *(_OWORD *)((char *)v94 + 8) = *(long long *)((char *)a1 + 40);
  BYTE8(v94[1]) = v24;
  uint64_t v25 = sub_C96F8();
  uint64_t v67 = v26;
  uint64_t v68 = v25;
  type metadata accessor for ShareableAsset(0);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v14);
  uint64_t v27 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_DDB6C((uint64_t)v14, type metadata accessor for ColorConstants);
  unint64_t v65 = v27 | 0x8000000000000000;
  uint64_t v28 = sub_26B820();
  uint64_t v29 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v61, 1, 1, v28);
  uint64_t v30 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v63 = v31;
  uint64_t v64 = v30;
  uint64_t v62 = sub_26B1D0();
  uint64_t v33 = v69;
  uint64_t v32 = v70;
  double v34 = v66;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v66, enum case for DynamicTypeSize.accessibility2(_:), v70);
  uint64_t *v20 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  double v35 = (uint64_t *)((char *)v20 + v16[7]);
  *double v35 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  char v36 = (char *)v20 + v16[8];
  *(void *)char v36 = swift_getKeyPath();
  v36[8] = 0;
  uint64_t v37 = (char *)v20 + v16[9];
  *(void *)uint64_t v37 = swift_getKeyPath();
  v37[8] = 0;
  long long v38 = (char *)v20 + v16[10];
  *(void *)long long v38 = swift_getKeyPath();
  v38[8] = 0;
  long long v39 = (char *)v20 + v16[11];
  *(void *)long long v39 = swift_getKeyPath();
  v39[8] = 0;
  *((unsigned char *)v20 + v16[12]) = 1;
  long long v40 = (uint64_t *)((char *)v20 + v16[13]);
  *long long v40 = 0;
  v40[1] = 0;
  long long v41 = (uint64_t *)((char *)v20 + v16[14]);
  uint64_t v42 = v67;
  *long long v41 = v68;
  v41[1] = v42;
  void v41[2] = v65;
  long long v43 = (uint64_t *)((char *)v20 + v16[15]);
  *long long v43 = 0;
  v43[1] = 0;
  sub_19CC4(v29, (uint64_t)v20 + v16[16], &qword_2EBFC0);
  *(uint64_t *)((char *)v20 + v16[17]) = v62;
  long long v44 = (uint64_t *)((char *)v20 + v16[18]);
  uint64_t v45 = v63;
  uint64_t *v44 = v64;
  v44[1] = v45;
  *((unsigned char *)v20 + v16[19]) = 1;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v20 + v16[20], v34, v32);
  uint64_t v46 = v72;
  sub_CABE4(v72);
  long long v84 = v88[8];
  long long v85 = v88[9];
  long long v86 = v88[10];
  __int16 v87 = v89;
  long long v80 = v88[4];
  long long v81 = v88[5];
  long long v82 = v88[6];
  long long v83 = v88[7];
  long long v76 = v88[0];
  long long v77 = v88[1];
  long long v78 = v88[2];
  long long v79 = v88[3];
  uint64_t v47 = v71;
  sub_D5750((uint64_t)v20, v71, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v48 = v75;
  sub_B678(v46, v75, &qword_2EF2D0);
  long long v49 = v85;
  v90[8] = v84;
  v90[9] = v85;
  long long v50 = v86;
  v90[10] = v86;
  long long v51 = v80;
  long long v52 = v81;
  v90[4] = v80;
  v90[5] = v81;
  long long v53 = v82;
  long long v54 = v83;
  v90[6] = v82;
  v90[7] = v83;
  long long v55 = v76;
  long long v56 = v77;
  v90[0] = v76;
  v90[1] = v77;
  long long v57 = v78;
  long long v58 = v79;
  v90[2] = v78;
  v90[3] = v79;
  *(_OWORD *)(a2 + 144) = v84;
  *(_OWORD *)(a2 + 160) = v49;
  *(_OWORD *)(a2 + 176) = v50;
  *(_OWORD *)(a2 + 80) = v51;
  *(_OWORD *)(a2 + 96) = v52;
  *(_OWORD *)(a2 + 112) = v53;
  *(_OWORD *)(a2 + 128) = v54;
  *(_OWORD *)(a2 + 16) = v55;
  *(_OWORD *)(a2 + 32) = v56;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v73;
  *(unsigned char *)(a2 + 9) = v74;
  __int16 v91 = v87;
  *(_WORD *)(a2 + 192) = v87;
  *(_OWORD *)(a2 + 48) = v57;
  *(_OWORD *)(a2 + 64) = v58;
  *(void *)(a2 + 200) = 0;
  *(unsigned char *)(a2 + 208) = 1;
  uint64_t v59 = sub_4A98(&qword_2EF2D8);
  sub_D5750(v47, a2 + *(int *)(v59 + 80), (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_B678(v48, a2 + *(int *)(v59 + 96), &qword_2EF2D0);
  sub_DDC28((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_DDBE8);
  sub_B6DC(v46, &qword_2EF2D0);
  sub_DDB6C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_B6DC(v48, &qword_2EF2D0);
  sub_DDB6C(v47, (uint64_t (*)(void))type metadata accessor for TextLockup);
  v94[6] = v84;
  v94[7] = v85;
  v94[8] = v86;
  __int16 v95 = v87;
  v94[2] = v80;
  v94[3] = v81;
  v94[4] = v82;
  v94[5] = v83;
  long long v92 = v76;
  long long v93 = v77;
  v94[0] = v78;
  v94[1] = v79;
  return sub_DDC28((uint64_t)&v92, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_DDCA4);
}

double sub_CA930@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  int v5 = *(char *)(v1 + 32);
  if (v5 < 0)
  {
    uint64_t v16 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_26C620();
    sub_B04AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v32, 0.0, 1, INFINITY, 0, v17, v18, v4, v16, v5 & 1);
    sub_D56C8(v4, v16, v5);
    char v19 = sub_26B770();
    sub_26A640();
    v31[184] = 0;
    char v41 = v19;
    uint64_t v42 = v20;
    uint64_t v43 = v21;
    uint64_t v44 = v22;
    uint64_t v45 = v23;
    char v46 = 0;
    sub_DDE14((uint64_t)&v32);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_26A940();
    if (*(unsigned char *)(v2 + 56)) {
      char v7 = 1;
    }
    else {
      char v7 = 3;
    }
    LOBYTE(v32) = v7;
    SeriesHeaderCoverStackLayout.init(covers:pageWidth:heroWidthScale:)(v4, (char *)&v32, (char **)v47, v6);
    uint64_t v8 = *(void *)&v47[0];
    if (*(void *)&v47[0])
    {
      long long v30 = *(_OWORD *)((char *)v47 + 8);
      unsigned __int8 v9 = sub_26B770();
      sub_26A640();
      long long v14 = v30;
      uint64_t v15 = v9;
    }
    else
    {
      uint64_t v15 = 0;
      long long v14 = 0uLL;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
    long long v33 = v14;
    uint64_t v32 = v8;
    uint64_t v34 = 0;
    uint64_t v35 = v15;
    uint64_t v36 = v10;
    uint64_t v37 = v11;
    uint64_t v38 = v12;
    uint64_t v39 = v13;
    char v40 = 0;
    sub_DDFB0((uint64_t)&v32);
  }
  sub_19CC4((uint64_t)&v32, (uint64_t)v31, &qword_2EF310);
  sub_4A98(&qword_2EF318);
  sub_4A98(&qword_2EF320);
  sub_DDE20(&qword_2EF328, &qword_2EF318, (void (*)(void))sub_DDE8C);
  sub_D5A90(&qword_2EF350, &qword_2EF320, (void (*)(void))sub_DDF2C);
  sub_26B2F0();
  long long v24 = v55;
  *(_OWORD *)(a1 + 128) = v54;
  *(_OWORD *)(a1 + 144) = v24;
  *(_OWORD *)(a1 + 160) = v56;
  *(_WORD *)(a1 + 176) = v57;
  long long v25 = v51;
  *(_OWORD *)(a1 + 64) = v50;
  *(_OWORD *)(a1 + 80) = v25;
  long long v26 = v53;
  *(_OWORD *)(a1 + 96) = v52;
  *(_OWORD *)(a1 + 112) = v26;
  long long v27 = v47[1];
  *(_OWORD *)a1 = v47[0];
  *(_OWORD *)(a1 + 16) = v27;
  double result = *(double *)&v48;
  long long v29 = v49;
  *(_OWORD *)(a1 + 32) = v48;
  *(_OWORD *)(a1 + 48) = v29;
  return result;
}

uint64_t sub_CABE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v36 = sub_4A98(&qword_2EF2E0);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v34 = &v28[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_4A98(&qword_2EF2E8) - 8;
  __chkstk_darwin(v33);
  uint64_t v32 = &v28[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_26BAA0();
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  int v29 = v7 & 1;
  sub_26C650();
  sub_26A8D0();
  uint64_t v9 = v50;
  char v10 = v51;
  uint64_t v11 = v52;
  char v12 = v53;
  uint64_t v14 = v54;
  uint64_t v13 = v55;
  uint64_t v15 = sub_26B7E0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v3;
  uint64_t v17 = v31;
  uint64_t v39 = v31;
  char v40 = v8;
  uint64_t v41 = v6;
  uint64_t v42 = v9;
  char v43 = v10;
  uint64_t v44 = v11;
  char v45 = v12;
  uint64_t v46 = v14;
  uint64_t v47 = v13;
  uint64_t v48 = KeyPath;
  uint64_t v49 = v15;
  sub_26B890();
  sub_4A98(&qword_2EF2F0);
  sub_DDCF8();
  uint64_t v18 = v34;
  sub_26BC40();
  sub_3A380(v30, v17, v29);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = v35;
  uint64_t v21 = (uint64_t)v32;
  uint64_t v22 = v36;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v32, v18, v36);
  uint64_t v23 = v21 + *(int *)(v33 + 44);
  *(void *)uint64_t v23 = v19;
  *(void *)(v23 + 8) = 1;
  *(unsigned char *)(v23 + 16) = 0;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v18, v22);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = v37;
  sub_B678(v21, v37, &qword_2EF2E8);
  long long v26 = (uint64_t *)(v25 + *(int *)(sub_4A98(&qword_2EF2D0) + 36));
  *long long v26 = v24;
  v26[1] = 0x3FE0000000000000;
  return sub_B6DC(v21, &qword_2EF2E8);
}

uint64_t sub_CAF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EF370);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  char v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  int v10 = *(char *)(a1 + 32);
  BOOL v11 = v10 < 0;
  unsigned int v12 = (~v10 >> 7) & 1;
  sub_CA930((uint64_t)v38);
  *(void *)uint64_t v9 = sub_26B0E0();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v13 = sub_4A98(&qword_2EF378);
  sub_CB1A0((uint64_t *)a1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  long long v34 = v38[8];
  long long v35 = v38[9];
  long long v36 = v38[10];
  __int16 v37 = v39;
  long long v30 = v38[4];
  long long v31 = v38[5];
  long long v32 = v38[6];
  long long v33 = v38[7];
  long long v26 = v38[0];
  long long v27 = v38[1];
  long long v28 = v38[2];
  long long v29 = v38[3];
  sub_B678((uint64_t)v9, (uint64_t)v7, &qword_2EF370);
  long long v14 = v35;
  v40[8] = v34;
  v40[9] = v35;
  long long v15 = v36;
  v40[10] = v36;
  long long v16 = v30;
  long long v17 = v31;
  v40[4] = v30;
  v40[5] = v31;
  long long v18 = v32;
  long long v19 = v33;
  v40[6] = v32;
  v40[7] = v33;
  long long v20 = v26;
  long long v21 = v27;
  v40[0] = v26;
  v40[1] = v27;
  long long v22 = v28;
  long long v23 = v29;
  v40[2] = v28;
  v40[3] = v29;
  *(_OWORD *)(a2 + 144) = v34;
  *(_OWORD *)(a2 + 160) = v14;
  *(_OWORD *)(a2 + 176) = v15;
  *(_OWORD *)(a2 + 80) = v16;
  *(_OWORD *)(a2 + 96) = v17;
  *(_OWORD *)(a2 + 112) = v18;
  *(_OWORD *)(a2 + 128) = v19;
  *(_OWORD *)(a2 + 16) = v20;
  *(_OWORD *)(a2 + 32) = v21;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 9) = v11;
  __int16 v41 = v37;
  *(_WORD *)(a2 + 192) = v37;
  *(_OWORD *)(a2 + 48) = v22;
  *(_OWORD *)(a2 + 64) = v23;
  *(void *)(a2 + 200) = 0;
  *(unsigned char *)(a2 + 208) = 1;
  uint64_t v24 = sub_4A98(&qword_2EF380);
  sub_B678((uint64_t)v7, a2 + *(int *)(v24 + 80), &qword_2EF370);
  sub_DDC28((uint64_t)v40, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_DDBE8);
  sub_B6DC((uint64_t)v9, &qword_2EF370);
  sub_B6DC((uint64_t)v7, &qword_2EF370);
  v42[8] = v34;
  v42[9] = v35;
  v42[10] = v36;
  __int16 v43 = v37;
  v42[4] = v30;
  v42[5] = v31;
  v42[6] = v32;
  v42[7] = v33;
  v42[0] = v26;
  v42[1] = v27;
  v42[2] = v28;
  v42[3] = v29;
  return sub_DDC28((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_DDCA4);
}

uint64_t sub_CB1A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_4A98(&qword_2EF2D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v61 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v7 = (char *)&v53 - v6;
  uint64_t v60 = sub_26AB40();
  uint64_t v8 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  int v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v10;
  uint64_t v11 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v14 - 8);
  long long v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TextLockup();
  long long v18 = (int *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v23 = (uint64_t *)((char *)&v53 - v22);
  uint64_t v24 = a1[1];
  char v25 = *((unsigned char *)a1 + 32);
  char v26 = *((unsigned char *)a1 + 56);
  uint64_t v63 = *a1;
  uint64_t v64 = v24;
  long long v65 = *((_OWORD *)a1 + 1);
  char v66 = v25;
  long long v67 = *(_OWORD *)(a1 + 5);
  char v68 = v26;
  uint64_t v27 = sub_C96F8();
  uint64_t v58 = v28;
  uint64_t v59 = v27;
  type metadata accessor for ShareableAsset(0);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v16);
  uint64_t v29 = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_DDB6C((uint64_t)v16, type metadata accessor for ColorConstants);
  unint64_t v57 = v29 | 0x8000000000000000;
  uint64_t v30 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
  uint64_t v31 = sub_26C650();
  uint64_t v55 = v32;
  uint64_t v56 = v31;
  uint64_t v33 = sub_26B1D0();
  long long v34 = v10;
  uint64_t v35 = v60;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v34, enum case for DynamicTypeSize.accessibility2(_:), v60);
  uint64_t *v23 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  long long v36 = (uint64_t *)((char *)v23 + v18[7]);
  *long long v36 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  __int16 v37 = (char *)v23 + v18[8];
  *(void *)__int16 v37 = swift_getKeyPath();
  v37[8] = 0;
  uint64_t v38 = (char *)v23 + v18[9];
  *(void *)uint64_t v38 = swift_getKeyPath();
  v38[8] = 0;
  __int16 v39 = (char *)v23 + v18[10];
  *(void *)__int16 v39 = swift_getKeyPath();
  v39[8] = 0;
  char v40 = (char *)v23 + v18[11];
  *(void *)char v40 = swift_getKeyPath();
  v40[8] = 0;
  *((unsigned char *)v23 + v18[12]) = 0;
  __int16 v41 = (uint64_t *)((char *)v23 + v18[13]);
  *__int16 v41 = 0;
  v41[1] = 0;
  uint64_t v42 = (uint64_t *)((char *)v23 + v18[14]);
  uint64_t v43 = v58;
  *uint64_t v42 = v59;
  v42[1] = v43;
  v42[2] = v57;
  uint64_t v44 = (uint64_t *)((char *)v23 + v18[15]);
  void *v44 = 0;
  v44[1] = 0;
  sub_19CC4((uint64_t)v13, (uint64_t)v23 + v18[16], &qword_2EBFC0);
  *(uint64_t *)((char *)v23 + v18[17]) = v33;
  char v45 = (uint64_t *)((char *)v23 + v18[18]);
  uint64_t v46 = v54;
  uint64_t v47 = v55;
  uint64_t *v45 = v56;
  v45[1] = v47;
  *((unsigned char *)v23 + v18[19]) = 0;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v23 + v18[20], v46, v35);
  sub_CABE4((uint64_t)v7);
  sub_D5750((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v48 = v61;
  sub_B678((uint64_t)v7, v61, &qword_2EF2D0);
  uint64_t v49 = v62;
  sub_D5750((uint64_t)v21, v62, (uint64_t (*)(void))type metadata accessor for TextLockup);
  uint64_t v50 = sub_4A98(&qword_2EF388);
  uint64_t v51 = v49 + *(int *)(v50 + 48);
  *(void *)uint64_t v51 = 0;
  *(unsigned char *)(v51 + 8) = 1;
  sub_B678(v48, v49 + *(int *)(v50 + 64), &qword_2EF2D0);
  sub_B6DC((uint64_t)v7, &qword_2EF2D0);
  sub_DDB6C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_B6DC(v48, &qword_2EF2D0);
  return sub_DDB6C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextLockup);
}

uint64_t sub_CB6F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_D5750(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareableAsset);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_D57D0((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for ShareableAsset);
  *a2 = sub_D5714;
  a2[1] = v7;
  return result;
}

uint64_t SummaryFrameViewModel.init(localizedYear:exposureData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v9 = (void *)((char *)a4 + *(int *)(v8 + 24));
  *uint64_t v9 = 0xD000000000000013;
  v9[1] = 0x80000000002878F0;
  *a4 = a1;
  a4[1] = a2;
  int v10 = (char *)a4 + *(int *)(v8 + 20);
  uint64_t v11 = sub_269BE0();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_CB8C0()
{
  uint64_t v1 = sub_269920();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v20[-v6];
  uint64_t v8 = sub_26D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v20[-v13];
  uint64_t v15 = sub_26D3C0();
  __chkstk_darwin(v15 - 8);
  sub_26D3B0();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  sub_26D3A0(v21);
  sub_26D390(*v0);
  v22._countAndFlagsBits = 0x6E69207261655920;
  v22._object = (void *)0xEF77656976655220;
  sub_26D3A0(v22);
  sub_26D3D0();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  uint64_t v18 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  return v18;
}

uint64_t sub_CBBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a3;
  v22[2] = a4;
  uint64_t v4 = sub_269920();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = sub_26D3E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)v22 - v16;
  sub_26D370();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v20 = sub_26D460();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v20;
}

uint64_t SharableAsset.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  uint64_t v5 = sub_269840();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SharableAsset.init(viewModel:image:item:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v27 = sub_269840();
  uint64_t v16 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1 + 8);
  char v20 = *(unsigned char *)(a1 + 32);
  char v21 = *(unsigned char *)(a1 + 56);
  *(void *)a8 = *(void *)a1;
  *(void *)(a8 + 8) = v19;
  *(_OWORD *)(a8 + 16) = *(_OWORD *)(a1 + 16);
  *(unsigned char *)(a8 + 32) = v20;
  *(_OWORD *)(a8 + 40) = *(_OWORD *)(a1 + 40);
  *(unsigned char *)(a8 + 56) = v21;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  Swift::String v22 = (int *)type metadata accessor for SharableAsset();
  uint64_t v23 = *(void *)(a4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a8 + v22[13], a2, a4);
  uint64_t v24 = *(void *)(a5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(a8 + v22[14], a3, a5);
  sub_269830();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a3, a5);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a2, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a8 + v22[15], v18, v27);
}

uint64_t SummaryFrame.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_D5750(v1, a1, type metadata accessor for PageBackground);
}

uint64_t SummaryFrame.exposureData.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v6 = sub_269BE0();
  a2[3] = v6;
  a2[4] = sub_DD984(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a2[5] = sub_DD984(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v7 = sub_CA1C(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v8(v7, v5, v6);
}

uint64_t SummaryFrame.init(model:sharableAssets:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v12 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (char *)a7 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  id v16 = [self secondarySystemBackgroundColor];
  *a7 = sub_26C0C0();
  uint64_t v17 = enum case for ColorScheme.light(_:);
  uint64_t v18 = sub_26A6E0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v15, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  type metadata accessor for PageBackground(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  char v20 = (int *)type metadata accessor for SummaryFrame();
  char v21 = (uint64_t *)((char *)a7 + v20[13]);
  *char v21 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a7 + v20[16]) = 0;
  *(uint64_t *)((char *)a7 + v20[17]) = 0x4020000000000000;
  *(uint64_t *)((char *)a7 + v20[18]) = 0x4034000000000000;
  *(uint64_t *)((char *)a7 + v20[19]) = 0x4034000000000000;
  *(uint64_t *)((char *)a7 + v20[20]) = 0x4024000000000000;
  uint64_t v22 = v20[21];
  sub_26C150();
  uint64_t v23 = sub_26C1C0();
  swift_release();
  *(uint64_t *)((char *)a7 + v22) = v23;
  uint64_t v24 = (uint64_t *)((char *)a7 + v20[22]);
  uint64_t v35 = 0;
  sub_26C340();
  uint64_t v25 = v32;
  void *v24 = v31;
  v24[1] = v25;
  uint64_t v26 = sub_269840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  sub_CC4B8((uint64_t)v14);
  uint64_t result = sub_D57D0(v29, (uint64_t)a7 + v20[14], type metadata accessor for SummaryFrameViewModel);
  *(uint64_t *)((char *)a7 + v20[15]) = v30;
  return result;
}

uint64_t sub_CC4B8(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v2);
  sub_B678(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2EBC78);
  sub_26C340();
  return sub_B6DC(a1, &qword_2EBC78);
}

double sub_CC570()
{
  sub_4A98(&qword_2EB598);
  sub_26C350();
  return v1;
}

uint64_t sub_CC5C8()
{
  return sub_26C360();
}

uint64_t sub_CC620(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v2 - 8);
  sub_B678(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2EBC78);
  sub_4A98(qword_2EF0F8);
  sub_26C360();
  return sub_B6DC(a1, &qword_2EBC78);
}

uint64_t SummaryFrame.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v3 = sub_26A6E0();
  uint64_t v93 = *(void *)(v3 - 8);
  uint64_t v94 = v3;
  __chkstk_darwin(v3);
  long long v92 = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v90 = (uint64_t)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_7B0C(&qword_2EEEC8);
  __int16 v89 = a1;
  uint64_t v7 = a1[2];
  uint64_t v8 = (char *)a1[3];
  uint64_t v9 = (void *)a1[4];
  uint64_t v97 = (void *)a1[5];
  uint64_t v98 = v8;
  uint64_t v110 = v7;
  uint64_t v111 = v8;
  __int16 v87 = v9;
  uint64_t v88 = v7;
  uint64_t v112 = v9;
  uint64_t v113 = v97;
  uint64_t v10 = v9;
  type metadata accessor for SharableAsset();
  uint64_t v96 = sub_26D680();
  uint64_t v82 = sub_269840();
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v11 = sub_26ABD0();
  long long v133 = v10;
  long long v134 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v131 = WitnessTable;
  uint64_t v132 = v13;
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v130 = &protocol witness table for _ShadowEffect;
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v128 = &protocol witness table for _ScaleEffect;
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v126 = &protocol witness table for _FrameLayout;
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_D5838();
  uint64_t v110 = v11;
  uint64_t v111 = &type metadata for CGFloat;
  uint64_t v112 = (void *)v14;
  uint64_t v113 = (void *)v15;
  swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v11;
  uint64_t v111 = &type metadata for CGFloat;
  uint64_t v112 = (void *)v14;
  uint64_t v113 = (void *)v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = sub_26C460();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v110 = v16;
  uint64_t v111 = (void *)v17;
  long long v86 = &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = v96;
  uint64_t v20 = swift_getWitnessTable();
  long long v85 = (void (**)(char *, uint64_t))v20;
  uint64_t v21 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v22 = (void *)v82;
  uint64_t v110 = v19;
  uint64_t v111 = (void *)v82;
  uint64_t v112 = (void *)OpaqueTypeMetadata2;
  uint64_t v113 = (void *)v20;
  uint64_t v114 = v21;
  uint64_t v23 = sub_26C510();
  uint64_t v110 = v16;
  uint64_t v111 = (void *)v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  long long v84 = &protocol conformance descriptor for <> ForEach<A, B, C>;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v110 = v23;
  uint64_t v111 = (void *)v24;
  swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v23;
  uint64_t v111 = (void *)v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = sub_26A670();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v110 = v25;
  uint64_t v111 = (void *)v26;
  swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v25;
  uint64_t v111 = (void *)v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = sub_26A690();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v110 = v27;
  uint64_t v111 = (void *)v28;
  uint64_t v29 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v27;
  uint64_t v111 = (void *)v28;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v29;
  uint64_t v111 = v22;
  uint64_t v31 = v22;
  uint64_t v112 = (void *)v30;
  uint64_t v113 = (void *)v21;
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  uint64_t v33 = sub_26B700();
  uint64_t v110 = v29;
  uint64_t v111 = v31;
  uint64_t v112 = (void *)v30;
  uint64_t v113 = (void *)v21;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v32;
  uint64_t v111 = (void *)v33;
  uint64_t v112 = (void *)v34;
  uint64_t v113 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v35 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v32;
  uint64_t v111 = (void *)v33;
  uint64_t v112 = (void *)v34;
  uint64_t v113 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v35;
  uint64_t v111 = (void *)v36;
  uint64_t v37 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = v35;
  uint64_t v111 = (void *)v36;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v37;
  uint64_t v111 = (void *)v38;
  swift_getOpaqueTypeMetadata2();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v110 = v37;
  uint64_t v111 = (void *)v38;
  uint64_t v122 = swift_getOpaqueTypeConformance2();
  uint64_t v123 = &protocol witness table for _FlexFrameLayout;
  long long v83 = (char *)&protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v121 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  uint64_t v136 = sub_26AA50();
  uint64_t v39 = sub_7B0C(&qword_2EEED8);
  uint64_t v110 = v96;
  uint64_t v111 = v31;
  uint64_t v112 = (void *)v39;
  uint64_t v113 = v85;
  uint64_t v114 = v21;
  sub_26C510();
  unint64_t v119 = sub_D588C();
  swift_getWitnessTable();
  uint64_t v137 = sub_26C3C0();
  uint64_t v40 = sub_26DAF0();
  uint64_t v41 = sub_7B0C(&qword_2EE980);
  uint64_t v42 = swift_getWitnessTable();
  unint64_t v43 = sub_D59AC();
  uint64_t v110 = v40;
  uint64_t v111 = &type metadata for Never;
  uint64_t v112 = &type metadata for Never;
  uint64_t v113 = (void *)v41;
  uint64_t v114 = v42;
  int v115 = &protocol witness table for Never;
  uint64_t v116 = &protocol witness table for Never;
  unint64_t v117 = v43;
  long long v118 = v97;
  uint64_t v44 = sub_26C760();
  uint64_t v45 = sub_26B650();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = sub_DD984(&qword_2EEF28, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v110 = v44;
  uint64_t v111 = (void *)v45;
  uint64_t v112 = (void *)v46;
  uint64_t v113 = (void *)v47;
  swift_getOpaqueTypeMetadata2();
  sub_7B0C(&qword_2EEF30);
  sub_26ABD0();
  sub_7B0C(&qword_2EBF48);
  uint64_t v48 = sub_26ABD0();
  uint64_t v49 = sub_7B0C(&qword_2EB4B8);
  uint64_t v110 = v44;
  uint64_t v111 = (void *)v45;
  uint64_t v112 = (void *)v46;
  uint64_t v113 = (void *)v47;
  uint64_t v50 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = sub_7C18(&qword_2EEF38, &qword_2EEF30);
  uint64_t v108 = v50;
  uint64_t v109 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
  uint64_t v106 = v52;
  uint64_t v107 = v53;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = sub_7C18(&qword_2EB618, &qword_2EB4B8);
  uint64_t v110 = v48;
  uint64_t v111 = (void *)v49;
  uint64_t v112 = (void *)v54;
  uint64_t v113 = (void *)v55;
  swift_getOpaqueTypeMetadata2();
  sub_26ABD0();
  uint64_t v138 = sub_26D980();
  swift_getTupleTypeMetadata();
  uint64_t v82 = sub_26C770();
  v81[2] = swift_getWitnessTable();
  uint64_t v56 = sub_26C440();
  long long v85 = *(void (***)(char *, uint64_t))(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)v81 - v57;
  sub_7B0C(&qword_2EAEE8);
  uint64_t v59 = sub_26ABD0();
  uint64_t v96 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v61 = (char *)v81 - v60;
  uint64_t v62 = swift_getWitnessTable();
  v81[1] = v62;
  uint64_t v63 = sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
  uint64_t v104 = v62;
  uint64_t v105 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v110 = v59;
  uint64_t v111 = (void *)v64;
  long long v84 = (void *)v64;
  uint64_t v65 = swift_getOpaqueTypeMetadata2();
  long long v86 = *(void **)(v65 - 8);
  uint64_t v66 = __chkstk_darwin(v65);
  char v68 = (char *)v81 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  long long v83 = (char *)v81 - v69;
  uint64_t v70 = v90;
  uint64_t v71 = v91;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v90);
  sub_DDB6C(v70, type metadata accessor for SizeConstants.Spacing);
  uint64_t v99 = v88;
  uint64_t v100 = v98;
  double v101 = v87;
  uint64_t v102 = v97;
  uint64_t v103 = v71;
  sub_26B1C0();
  sub_26C430();
  uint64_t v72 = v92;
  uint64_t v73 = v93;
  uint64_t v74 = v94;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, enum case for ColorScheme.light(_:), v94);
  uint64_t v98 = v61;
  sub_26BC90();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  v85[1](v58, v56);
  LOBYTE(v58) = sub_26B720();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v58) {
    sub_26B730();
  }
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v75 = v84;
  long long v76 = v98;
  sub_26BF20();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v59);
  uint64_t v110 = v59;
  uint64_t v111 = v75;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  long long v78 = v83;
  sub_CCCC(v68, v65, v77);
  long long v79 = (void (*)(char *, uint64_t))v86[1];
  v79(v68, v65);
  sub_CCCC(v78, v65, v77);
  return ((uint64_t (*)(char *, uint64_t))v79)(v78, v65);
}

uint64_t sub_CD520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v250 = a5;
  uint64_t v249 = a4;
  uint64_t v251 = a3;
  uint64_t v248 = a2;
  uint64_t v247 = a1;
  uint64_t v218 = a6;
  uint64_t v252 = sub_4A98(&qword_2EB4B8);
  __chkstk_darwin(v252);
  uint64_t v217 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26ACC0();
  uint64_t v210 = *(void *)(v9 - 8);
  uint64_t v211 = v9;
  __chkstk_darwin(v9);
  uint64_t v209 = (char *)&v175 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26B650();
  uint64_t v207 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v206 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EF230);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v205 = (char *)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = *(a3 - 1);
  __chkstk_darwin(v14);
  uint64_t v204 = (char *)&v175 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26DAF0();
  uint64_t v18 = sub_7B0C(&qword_2EE980);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v20 = sub_D59AC();
  uint64_t v269 = v17;
  uint64_t v270 = &type metadata for Never;
  uint64_t v271 = &type metadata for Never;
  uint64_t v272 = (void *)v18;
  uint64_t v200 = v18;
  uint64_t v273 = WitnessTable;
  uint64_t v274 = &protocol witness table for Never;
  v275 = &protocol witness table for Never;
  unint64_t v276 = v20;
  unint64_t v195 = v20;
  long long v277 = a5;
  uint64_t v21 = sub_26C760();
  uint64_t v202 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v201 = (char *)&v175 - v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_DD984(&qword_2EEF28, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v269 = v21;
  uint64_t v270 = (void *)v11;
  uint64_t v271 = (void *)v23;
  uint64_t v272 = (void *)v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v197 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v191 = (char *)&v175 - v26;
  sub_7B0C(&qword_2EEF30);
  uint64_t v198 = OpaqueTypeMetadata2;
  uint64_t v27 = sub_26ABD0();
  uint64_t v194 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v190 = (char *)&v175 - v28;
  sub_7B0C(&qword_2EBF48);
  uint64_t v29 = sub_26ABD0();
  uint64_t v181 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v199 = (char *)&v175 - v30;
  uint64_t v203 = v21;
  uint64_t v269 = v21;
  uint64_t v270 = (void *)v11;
  uint64_t v208 = v11;
  uint64_t v192 = v23;
  uint64_t v271 = (void *)v23;
  uint64_t v272 = (void *)v24;
  uint64_t v189 = v24;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = sub_7C18(&qword_2EEF38, &qword_2EEF30);
  uint64_t v187 = OpaqueTypeConformance2;
  v268[24] = OpaqueTypeConformance2;
  v268[25] = v32;
  uint64_t v230 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v196 = v27;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
  uint64_t v188 = v33;
  v268[22] = v33;
  v268[23] = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = sub_7C18(&qword_2EB618, &qword_2EB4B8);
  uint64_t v246 = v29;
  uint64_t v269 = v29;
  uint64_t v270 = (void *)v252;
  uint64_t v238 = (void *)v35;
  uint64_t v271 = (void *)v35;
  uint64_t v272 = (void *)v36;
  uint64_t v235 = (void *)v36;
  uint64_t v37 = swift_getOpaqueTypeMetadata2();
  uint64_t v178 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v176 = (char *)&v175 - v38;
  uint64_t v180 = v39;
  uint64_t v40 = sub_26ABD0();
  uint64_t v213 = *(void *)(v40 - 8);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v177 = (char *)&v175 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  long long v179 = (char *)&v175 - v43;
  uint64_t v44 = v248;
  uint64_t v45 = v251;
  uint64_t v269 = v248;
  uint64_t v270 = v251;
  uint64_t v46 = v249;
  uint64_t v47 = v250;
  uint64_t v271 = v249;
  uint64_t v272 = v250;
  uint64_t v48 = type metadata accessor for SharableAsset();
  uint64_t v49 = sub_26D980();
  uint64_t v185 = *(void *)(v49 - 8);
  uint64_t v186 = v49;
  uint64_t v50 = __chkstk_darwin(v49);
  v231 = (char *)&v175 - v51;
  uint64_t v241 = v48;
  uint64_t v240 = *(void *)(v48 - 8);
  __chkstk_darwin(v50);
  uint64_t v212 = (char *)&v175 - v52;
  uint64_t v216 = v40;
  uint64_t v53 = sub_26D980();
  uint64_t v236 = *(void *)(v53 - 8);
  uint64_t v237 = v53;
  uint64_t v54 = __chkstk_darwin(v53);
  uint64_t v214 = (char *)&v175 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  uint64_t v215 = (char *)&v175 - v56;
  uint64_t v57 = sub_26D680();
  uint64_t v58 = sub_269840();
  uint64_t v226 = v58;
  uint64_t v59 = sub_7B0C(&qword_2EEED8);
  uint64_t v60 = v57;
  uint64_t v227 = v57;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v228 = (void *)v61;
  uint64_t v225 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v269 = v60;
  uint64_t v270 = (void *)v58;
  uint64_t v271 = (void *)v59;
  uint64_t v272 = (void *)v61;
  uint64_t v273 = v225;
  sub_26C510();
  v268[21] = sub_D588C();
  uint64_t v229 = (void (*)(uint64_t, uint64_t))&protocol conformance descriptor for <> ForEach<A, B, C>;
  swift_getWitnessTable();
  uint64_t v245 = sub_26C3C0();
  uint64_t v242 = *(void *)(v245 - 8);
  uint64_t v62 = __chkstk_darwin(v245);
  uint64_t v243 = (uint64_t)&v175 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  v244 = (char *)&v175 - v64;
  uint64_t v269 = v44;
  uint64_t v270 = v45;
  uint64_t v271 = v46;
  uint64_t v272 = v47;
  uint64_t v253 = (void *)type metadata accessor for SummaryFrame();
  uint64_t v223 = *(v253 - 1);
  uint64_t v224 = *(void *)(v223 + 64);
  __chkstk_darwin(v253);
  uint64_t v222 = (char *)&v175 - v65;
  uint64_t v232 = sub_26AB40();
  uint64_t v66 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  char v68 = (char *)&v175 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v69 - 8);
  uint64_t v71 = (char *)&v175 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TextLockup();
  __chkstk_darwin(v72 - 8);
  uint64_t v74 = (uint64_t *)((char *)&v175 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v239 = sub_4A98(&qword_2EEEC8);
  uint64_t v75 = __chkstk_darwin(v239);
  uint64_t v77 = (char *)&v175 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  long long v79 = (char *)&v175 - v78;
  v233 = (char *)sub_CBBB8(0xD000000000000012, 0x8000000000289670, (uint64_t)"Year in Review: Summarized frame title", 38);
  uint64_t v221 = v80;
  uint64_t v81 = sub_CBBB8(0x1000000000000041, 0x80000000002895F0, (uint64_t)"Year in Review: Summarized frame subtitle", 41);
  uint64_t v219 = v82;
  uint64_t v220 = v81;
  uint64_t v83 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v71, 1, 1, v83);
  uint64_t v84 = sub_26B1C0();
  uint64_t v85 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v87 = v86;
  uint64_t v88 = *(void (**)(void))(v66 + 104);
  unsigned int v183 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v184 = v66 + 104;
  uint64_t v182 = (void (*)(char *, void, uint64_t))v88;
  v88(v68);
  sub_1DC1D0(3, 0, 0, (uint64_t)v233, v221, v220, v219, (uint64_t)v71, v74, v84, v85, v87, 1, (uint64_t)v68);
  LOBYTE(v66) = sub_26B750();
  sub_D5750((uint64_t)v74, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for TextLockup);
  __int16 v89 = &v77[*(int *)(v239 + 36)];
  char *v89 = v66;
  *(_OWORD *)(v89 + 8) = 0u;
  *(_OWORD *)(v89 + 24) = 0u;
  v89[40] = 1;
  sub_DDB6C((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for TextLockup);
  v233 = v79;
  v234 = v77;
  sub_19CC4((uint64_t)v77, (uint64_t)v79, &qword_2EEEC8);
  uint64_t v91 = v222;
  uint64_t v90 = v223;
  long long v92 = v253;
  (*(void (**)(char *, uint64_t, void *))(v223 + 16))(v222, v247, v253);
  uint64_t v93 = v90;
  unint64_t v94 = (*(unsigned __int8 *)(v90 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v95 = (char *)swift_allocObject();
  uint64_t v96 = v251;
  *((void *)v95 + 2) = v248;
  *((void *)v95 + 3) = v96;
  uint64_t v97 = v249;
  uint64_t v98 = v250;
  *((void *)v95 + 4) = v249;
  *((void *)v95 + 5) = v98;
  (*(void (**)(char *, char *, void *))(v93 + 32))(&v95[v94], v91, v92);
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v99 = sub_26ABD0();
  v268[17] = v97;
  v268[18] = &protocol witness table for _FrameLayout;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  v268[15] = v100;
  v268[16] = v101;
  v268[13] = swift_getWitnessTable();
  v268[14] = &protocol witness table for _ShadowEffect;
  v268[11] = swift_getWitnessTable();
  v268[12] = &protocol witness table for _ScaleEffect;
  v268[9] = swift_getWitnessTable();
  v268[10] = &protocol witness table for _FrameLayout;
  uint64_t v102 = swift_getWitnessTable();
  unint64_t v103 = sub_D5838();
  uint64_t v269 = v99;
  uint64_t v270 = &type metadata for CGFloat;
  uint64_t v271 = (void *)v102;
  uint64_t v272 = (void *)v103;
  swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v99;
  uint64_t v270 = &type metadata for CGFloat;
  uint64_t v271 = (void *)v102;
  uint64_t v272 = (void *)v103;
  swift_getOpaqueTypeConformance2();
  uint64_t v104 = sub_26C460();
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v269 = v104;
  uint64_t v270 = (void *)v105;
  uint64_t v106 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = (void *)v226;
  uint64_t v269 = v227;
  uint64_t v270 = (void *)v226;
  uint64_t v271 = (void *)v106;
  uint64_t v272 = v228;
  uint64_t v108 = (void *)v225;
  uint64_t v273 = v225;
  uint64_t v109 = sub_26C510();
  uint64_t v269 = v104;
  uint64_t v270 = (void *)v105;
  v268[8] = swift_getOpaqueTypeConformance2();
  uint64_t v110 = swift_getWitnessTable();
  uint64_t v269 = v109;
  uint64_t v270 = (void *)v110;
  swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v109;
  uint64_t v270 = (void *)v110;
  swift_getOpaqueTypeConformance2();
  uint64_t v111 = sub_26A670();
  uint64_t v112 = swift_getWitnessTable();
  uint64_t v269 = v111;
  uint64_t v270 = (void *)v112;
  swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v111;
  uint64_t v270 = (void *)v112;
  swift_getOpaqueTypeConformance2();
  uint64_t v113 = sub_26A690();
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v269 = v113;
  uint64_t v270 = (void *)v114;
  uint64_t v115 = swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v113;
  uint64_t v270 = (void *)v114;
  uint64_t v116 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v115;
  uint64_t v270 = v107;
  unint64_t v117 = v107;
  uint64_t v271 = (void *)v116;
  uint64_t v272 = v108;
  uint64_t v118 = swift_getOpaqueTypeMetadata2();
  uint64_t v119 = sub_26B700();
  uint64_t v269 = v115;
  uint64_t v270 = v117;
  uint64_t v271 = (void *)v116;
  uint64_t v272 = v108;
  uint64_t v120 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v118;
  uint64_t v270 = (void *)v119;
  uint64_t v271 = (void *)v120;
  uint64_t v272 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v121 = swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v118;
  uint64_t v270 = (void *)v119;
  uint64_t v271 = (void *)v120;
  uint64_t v272 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v122 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v121;
  uint64_t v270 = (void *)v122;
  uint64_t v123 = swift_getOpaqueTypeMetadata2();
  uint64_t v269 = v121;
  uint64_t v270 = (void *)v122;
  uint64_t v124 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v123;
  uint64_t v270 = (void *)v124;
  swift_getOpaqueTypeMetadata2();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v269 = v123;
  uint64_t v270 = (void *)v124;
  v268[6] = swift_getOpaqueTypeConformance2();
  v268[7] = &protocol witness table for _FlexFrameLayout;
  v268[4] = swift_getWitnessTable();
  v268[5] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  uint64_t v269 = sub_26AA40();
  uint64_t v270 = v125;
  uint64_t v126 = sub_26AA50();
  uint64_t v227 = swift_getWitnessTable();
  uint64_t v228 = (void *)v126;
  sub_CCCC(&v269, v126, v227);
  swift_release();
  uint64_t v127 = v243;
  sub_D0D40(v253, v243, *(double *)(v247 + *((int *)v253 + 20)));
  uint64_t v128 = v245;
  uint64_t v226 = swift_getWitnessTable();
  sub_CCCC(v127, v128, v226);
  uint64_t v229 = *(void (**)(uint64_t, uint64_t))(v242 + 8);
  uint64_t v230 = (void *)(v242 + 8);
  v229(v127, v128);
  uint64_t v129 = v231;
  sub_D105C();
  uint64_t v130 = v129;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v240 + 48))(v129, 1, v241) == 1)
  {
    (*(void (**)(char *, uint64_t))(v185 + 8))(v129, v186);
    uint64_t v131 = v214;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v213 + 56))(v214, 1, 1, v216);
    uint64_t v269 = v246;
    uint64_t v270 = (void *)v252;
    uint64_t v271 = v238;
    uint64_t v272 = v235;
    v268[2] = swift_getOpaqueTypeConformance2();
    v268[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable();
    uint64_t v132 = v215;
    uint64_t v133 = (uint64_t)v215;
    uint64_t v134 = (uint64_t)v131;
LABEL_5:
    sub_8D3B4(v134, v133);
    uint64_t v253 = *(void **)(v236 + 8);
    ((void (*)(char *, uint64_t))v253)(v131, v237);
    uint64_t v166 = (uint64_t)v234;
    sub_B678((uint64_t)v233, (uint64_t)v234, &qword_2EEEC8);
    v268[0] = v268[19];
    v268[1] = v268[20];
    uint64_t v269 = v166;
    uint64_t v270 = v268;
    uint64_t v167 = v243;
    uint64_t v168 = v244;
    uint64_t v169 = v245;
    (*(void (**)(uint64_t, char *, uint64_t))(v242 + 16))(v243, v244, v245);
    uint64_t v271 = (void *)v167;
    uint64_t v170 = v237;
    (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v131, v132, v237);
    uint64_t v272 = v131;
    swift_retain();
    v267[0] = v239;
    v267[1] = v228;
    v267[2] = v169;
    v267[3] = v170;
    unint64_t v263 = sub_DC334();
    uint64_t v264 = v227;
    uint64_t v265 = v226;
    uint64_t v259 = v246;
    uint64_t v260 = v252;
    v261 = v238;
    uint64_t v262 = v235;
    uint64_t v257 = swift_getOpaqueTypeConformance2();
    v258 = &protocol witness table for _FrameLayout;
    uint64_t v256 = swift_getWitnessTable();
    uint64_t v266 = swift_getWitnessTable();
    sub_1212DC((uint64_t)&v269, 4uLL, (uint64_t)v267);
    v171 = v132;
    uint64_t v172 = (void (*)(char *, uint64_t))v253;
    ((void (*)(char *, uint64_t))v253)(v171, v170);
    double v173 = v168;
    double v174 = v229;
    v229((uint64_t)v173, v169);
    swift_release();
    sub_B6DC((uint64_t)v233, &qword_2EEEC8);
    v172(v131, v170);
    v174(v167, v169);
    swift_release();
    return sub_B6DC((uint64_t)v234, &qword_2EEEC8);
  }
  uint64_t v135 = v238;
  uint64_t v136 = v246;
  uint64_t v137 = (uint64_t)v212;
  uint64_t v138 = v130;
  uint64_t v139 = v241;
  (*(void (**)(char *, char *, uint64_t))(v240 + 32))(v212, v138, v241);
  (*(void (**)(char *, uint64_t, void *))(v193 + 16))(v204, v137 + *(int *)(v139 + 56), v251);
  id v140 = sub_D1134(v137, v253);
  uint64_t v272 = (void *)sub_DC3E0();
  uint64_t v269 = (uint64_t)v140;
  uint64_t v141 = sub_26A850();
  __chkstk_darwin(v141);
  uint64_t v142 = v201;
  sub_26C740();
  v143 = v206;
  sub_26B640();
  uint64_t v144 = v191;
  uint64_t v145 = v203;
  uint64_t v146 = v208;
  sub_26BC70();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v143, v146);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v142, v145);
  uint64_t v147 = v209;
  sub_26ACA0();
  uint64_t v148 = v190;
  uint64_t v149 = v198;
  sub_26BDE0();
  (*(void (**)(char *, uint64_t))(v210 + 8))(v147, v211);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v144, v149);
  sub_26C150();
  uint64_t v150 = v199;
  uint64_t v151 = v196;
  sub_26BF90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v194 + 8))(v148, v151);
  v182(v217, v183, v232);
  sub_DD984(&qword_2EB610, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_26D360();
  if (result)
  {
    uint64_t v153 = v176;
    uint64_t v154 = (uint64_t)v217;
    uint64_t v155 = v136;
    uint64_t v156 = (void *)v252;
    uint64_t v157 = v235;
    sub_26BD90();
    sub_B6DC(v154, &qword_2EB4B8);
    (*(void (**)(char *, uint64_t))(v181 + 8))(v150, v155);
    sub_CC570();
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v269 = v155;
    uint64_t v270 = v156;
    uint64_t v271 = v135;
    uint64_t v272 = v157;
    uint64_t v158 = swift_getOpaqueTypeConformance2();
    uint64_t v159 = v177;
    uint64_t v160 = v180;
    sub_26BFA0();
    (*(void (**)(char *, uint64_t))(v178 + 8))(v153, v160);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v212, v241);
    uint64_t v254 = v158;
    uint64_t v255 = &protocol witness table for _FrameLayout;
    uint64_t v161 = v216;
    uint64_t v162 = swift_getWitnessTable();
    uint64_t v163 = v179;
    sub_CCCC(v159, v161, v162);
    uint64_t v164 = v213;
    uint64_t v165 = *(void (**)(char *, uint64_t))(v213 + 8);
    v165(v159, v161);
    uint64_t v131 = v214;
    sub_CCCC(v163, v161, v162);
    v165(v163, v161);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v164 + 56))(v131, 0, 1, v161);
    uint64_t v132 = v215;
    uint64_t v133 = (uint64_t)v215;
    uint64_t v134 = (uint64_t)v131;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_CF210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a6;
  uint64_t v24 = a4;
  uint64_t v27 = a2;
  uint64_t v26 = a1;
  uint64_t v28 = a7;
  uint64_t v23 = a3;
  uint64_t v22 = a5;
  type metadata accessor for SharableAsset();
  sub_26D680();
  sub_269840();
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v47 = a5;
  uint64_t v48 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v46 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = &protocol witness table for _ShadowEffect;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = &protocol witness table for _ScaleEffect;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  sub_D5838();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_26C460();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getWitnessTable();
  uint64_t v38 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_26C510();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_26A670();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_26A690();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  sub_26B700();
  uint64_t v8 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  uint64_t v36 = v8;
  uint64_t v37 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = OpaqueTypeMetadata2;
  uint64_t v35 = v10;
  swift_getOpaqueTypeMetadata2();
  sub_26ABD0();
  uint64_t v11 = sub_26ABD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v34 = v23;
  uint64_t v35 = v24;
  uint64_t v36 = v22;
  uint64_t v37 = v25;
  uint64_t v18 = (void *)type metadata accessor for SummaryFrame();
  sub_CF96C(v26, v18, (uint64_t)v15);
  uint64_t v34 = OpaqueTypeMetadata2;
  uint64_t v35 = v10;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = &protocol witness table for _FlexFrameLayout;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v19 = swift_getWitnessTable();
  sub_CCCC(v15, v11, v19);
  unint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  sub_CCCC(v17, v11, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

uint64_t sub_CF96C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v155 = a1;
  uint64_t v149 = a3;
  uint64_t v148 = *(a2 - 1);
  __chkstk_darwin(a1);
  uint64_t v146 = v4;
  uint64_t v147 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_26B430();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v142 = (uint64_t)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_26B5B0();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26B6E0();
  __chkstk_darwin(v9 - 8);
  uint64_t v137 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_26B700();
  uint64_t v138 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v136 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EF258);
  __chkstk_darwin(v12 - 8);
  uint64_t v135 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = a2;
  uint64_t v14 = a2[2];
  uint64_t v153 = (void *)a2[3];
  uint64_t v15 = a2[4];
  uint64_t v151 = (void *)a2[5];
  uint64_t v170 = v14;
  v171 = v153;
  uint64_t v154 = v14;
  uint64_t v172 = v15;
  double v173 = v151;
  uint64_t v16 = v15;
  uint64_t v152 = v15;
  type metadata accessor for SharableAsset();
  uint64_t v17 = sub_26D680();
  uint64_t v18 = sub_269840();
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v19 = sub_26ABD0();
  uint64_t v183 = v16;
  uint64_t v184 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v181 = WitnessTable;
  uint64_t v182 = v21;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v180 = &protocol witness table for _ShadowEffect;
  uint64_t v177 = swift_getWitnessTable();
  uint64_t v178 = &protocol witness table for _ScaleEffect;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v176 = &protocol witness table for _FrameLayout;
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_D5838();
  uint64_t v170 = v19;
  v171 = &type metadata for CGFloat;
  uint64_t v172 = v22;
  double v173 = (void *)v23;
  swift_getOpaqueTypeMetadata2();
  uint64_t v170 = v19;
  v171 = &type metadata for CGFloat;
  uint64_t v172 = v22;
  double v173 = (void *)v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_26C460();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v170 = v24;
  v171 = (void *)v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v170 = v17;
  v171 = (void *)v18;
  uint64_t v172 = OpaqueTypeMetadata2;
  double v173 = (void *)v27;
  uint64_t v174 = v28;
  uint64_t v29 = (void *)v28;
  uint64_t v30 = sub_26C510();
  uint64_t v170 = v24;
  v171 = (void *)v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v170 = v30;
  v171 = (void *)v31;
  swift_getOpaqueTypeMetadata2();
  uint64_t v170 = v30;
  v171 = (void *)v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = sub_26A670();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v170 = v32;
  v171 = (void *)v33;
  uint64_t v114 = swift_getOpaqueTypeMetadata2();
  uint64_t v170 = v32;
  v171 = (void *)v33;
  uint64_t v113 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = sub_26A690();
  uint64_t v115 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v105 - v35;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v170 = v34;
  v171 = (void *)v37;
  uint64_t v38 = (void *)v37;
  uint64_t v110 = v37;
  uint64_t v39 = swift_getOpaqueTypeMetadata2();
  uint64_t v117 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v109 = (char *)&v105 - v40;
  uint64_t v170 = v34;
  v171 = v38;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v170 = v39;
  v171 = (void *)v18;
  uint64_t v108 = v18;
  uint64_t v172 = v41;
  double v173 = v29;
  uint64_t v42 = v41;
  uint64_t v111 = v41;
  uint64_t v112 = v29;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v116 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v105 - v44;
  uint64_t v170 = v39;
  v171 = (void *)v18;
  uint64_t v172 = v42;
  double v173 = v29;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v47 = (void *)v150;
  uint64_t v170 = v43;
  v171 = (void *)v150;
  uint64_t v172 = v46;
  double v173 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v107 = v46;
  uint64_t v48 = swift_getOpaqueTypeMetadata2();
  uint64_t v119 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v106 = (char *)&v105 - v49;
  uint64_t v170 = v43;
  v171 = v47;
  uint64_t v172 = v46;
  double v173 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v50 = swift_getOpaqueTypeConformance2();
  uint64_t v170 = v48;
  v171 = (void *)v50;
  uint64_t v51 = swift_getOpaqueTypeMetadata2();
  uint64_t v124 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v122 = (char *)&v105 - v52;
  uint64_t v120 = v48;
  uint64_t v170 = v48;
  v171 = (void *)v50;
  uint64_t v118 = v50;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v126 = v51;
  uint64_t v170 = v51;
  v171 = (void *)v53;
  uint64_t v121 = v53;
  uint64_t v54 = swift_getOpaqueTypeMetadata2();
  uint64_t v125 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v123 = (char *)&v105 - v55;
  uint64_t v127 = v56;
  uint64_t v57 = sub_26ABD0();
  uint64_t v131 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v128 = (char *)&v105 - v58;
  uint64_t v132 = v59;
  uint64_t v60 = sub_26ABD0();
  uint64_t v133 = *(void *)(v60 - 8);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v129 = (char *)&v105 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  uint64_t v130 = (char *)&v105 - v63;
  sub_26A940();
  double v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = (uint64_t)v134;
  uint64_t v69 = v156;
  sub_D1D60((uint64_t)v134, v64);
  uint64_t v71 = v70;
  sub_26B720();
  uint64_t v157 = v154;
  uint64_t v158 = v153;
  uint64_t v159 = v152;
  uint64_t v160 = v151;
  uint64_t v161 = v69;
  uint64_t v162 = v71;
  double v163 = v65;
  uint64_t v164 = v67;
  sub_16F5D0();
  uint64_t v72 = v109;
  sub_26BE70();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v36, v34);
  sub_4A98(qword_2EF0F8);
  uint64_t v73 = v135;
  sub_26C370();
  sub_26C7E0();
  swift_checkMetadataState();
  sub_26BD60();
  uint64_t v74 = (uint64_t)v73;
  uint64_t v75 = v106;
  sub_B6DC(v74, &qword_2EF258);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v72, v39);
  sub_26B6D0();
  uint64_t v76 = v136;
  sub_26B6F0();
  uint64_t v77 = v150;
  sub_26BEC0();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v76, v77);
  uint64_t v78 = v45;
  long long v79 = v139;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v78, v43);
  sub_26B590();
  LOBYTE(v76) = sub_26B740();
  unsigned __int8 v80 = sub_26B720();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v76) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v80) {
    sub_26B730();
  }
  uint64_t v81 = v122;
  uint64_t v82 = v120;
  sub_26BDD0();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v79, v141);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v75, v82);
  sub_26B750();
  sub_26A940();
  uint64_t v83 = v156;
  uint64_t v84 = v142;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v142);
  sub_DDB6C(v84, type metadata accessor for SizeConstants.Spacing);
  uint64_t v85 = v143;
  sub_26B410();
  uint64_t v86 = v123;
  uint64_t v87 = v126;
  uint64_t v88 = (void *)v121;
  sub_26BD50();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v85, v145);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v81, v87);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v170 = v87;
  v171 = v88;
  uint64_t v104 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = v127;
  uint64_t v90 = v128;
  sub_26BFB0();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v86, v89);
  uint64_t v91 = v148;
  long long v92 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v147, v83, v68);
  unint64_t v93 = (*(unsigned __int8 *)(v91 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  unint64_t v94 = (char *)swift_allocObject();
  uint64_t v95 = v153;
  *((void *)v94 + 2) = v154;
  *((void *)v94 + 3) = v95;
  uint64_t v96 = v151;
  *((void *)v94 + 4) = v152;
  *((void *)v94 + 5) = v96;
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v94[v93], v92, v68);
  uint64_t v167 = v104;
  uint64_t v168 = &protocol witness table for _FlexFrameLayout;
  uint64_t v97 = v132;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v99 = v129;
  sub_26C040();
  swift_release();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v90, v97);
  uint64_t v165 = v98;
  uint64_t v166 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = v130;
  sub_CCCC(v99, v60, v100);
  uint64_t v102 = *(void (**)(char *, uint64_t))(v133 + 8);
  v102(v99, v60);
  sub_CCCC(v101, v60, v100);
  return ((uint64_t (*)(char *, uint64_t))v102)(v101, v60);
}

uint64_t sub_D0D40@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4 = v3;
  uint64_t v31 = a2;
  uint64_t v7 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[5];
  uint64_t v29 = a1[4];
  uint64_t v30 = v10;
  uint64_t v28 = v12;
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v41 = v29;
  uint64_t v42 = v12;
  type metadata accessor for SharableAsset();
  uint64_t v13 = sub_26D680();
  uint64_t v14 = sub_269840();
  uint64_t v15 = sub_7B0C(&qword_2EEED8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  uint64_t v41 = v15;
  uint64_t v42 = WitnessTable;
  uint64_t v43 = v17;
  sub_26C510();
  unint64_t v38 = sub_D588C();
  swift_getWitnessTable();
  uint64_t v18 = sub_26C3C0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v28 - v23;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v9);
  sub_DDB6C((uint64_t)v9, type metadata accessor for SizeConstants.Spacing);
  uint64_t v32 = v11;
  uint64_t v33 = v30;
  uint64_t v34 = v29;
  uint64_t v35 = v28;
  uint64_t v36 = v4;
  double v37 = a3;
  sub_26B120();
  sub_26C3B0();
  uint64_t v25 = swift_getWitnessTable();
  sub_CCCC(v22, v18, v25);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v22, v18);
  sub_CCCC(v24, v18, v25);
  return ((uint64_t (*)(char *, uint64_t))v26)(v24, v18);
}

uint64_t sub_D105C()
{
  return swift_bridgeObjectRelease();
}

id sub_D1134(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v20 = a2[3];
  uint64_t v4 = a2[5];
  uint64_t v21 = a2[4];
  uint64_t v22 = v3;
  uint64_t v23 = v3;
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  uint64_t v26 = v4;
  uint64_t v5 = type metadata accessor for SharableAsset();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - v7;
  id v9 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  sub_CB8C0();
  NSString v10 = sub_26D3F0();
  swift_bridgeObjectRelease();
  [v9 setTitle:v10];

  sub_CBBB8(0x6F4220656C707041, 0xEB00000000736B6FLL, (uint64_t)"Apple Books app name - appears in Year in Review share sheet preview summary", 76);
  NSString v11 = sub_26D3F0();
  swift_bridgeObjectRelease();
  [v9 setSummary:v11];

  id v12 = [objc_allocWithZone((Class)LPImageProperties) init];
  [v12 setType:1];
  id v13 = [objc_allocWithZone((Class)NSItemProvider) init];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v16 = v20;
  *((void *)v15 + 2) = v22;
  *((void *)v15 + 3) = v16;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v4;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[v14], v8, v5);
  sub_26D870();
  swift_release();
  id v17 = [objc_allocWithZone((Class)LPImage) initWithItemProvider:v13 properties:v12 placeholderImage:0];
  [v9 setImage:v17];

  return v9;
}

uint64_t sub_D13EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v53 = a6;
  uint64_t v10 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EA3C8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EEF20);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_4A98(&qword_2EEF08);
  __chkstk_darwin(v48);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4A98(&qword_2EE978);
  uint64_t v51 = *(void *)(v22 - 8);
  uint64_t v52 = v22;
  __chkstk_darwin(v22);
  uint64_t v49 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2EE980);
  __chkstk_darwin(v24 - 8);
  uint64_t v46 = (uint64_t)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a2;
  uint64_t v55 = v50;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  type metadata accessor for SummaryFrame();
  uint64_t v54 = sub_CBBB8(0x6572616853, 0xE500000000000000, (uint64_t)"Share button string in the year summarized frame.", 49);
  uint64_t v55 = v26;
  type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v50 = a1;
  sub_CC78();
  swift_bridgeObjectRetain();
  sub_26C2C0();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v15, v12);
  uint64_t v28 = &v19[*(int *)(v17 + 44)];
  *(void *)uint64_t v28 = KeyPath;
  *((void *)v28 + 1) = 1;
  v28[16] = 0;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  LOBYTE(v17) = sub_26B7C0();
  char v29 = sub_26B7A0();
  sub_26B7A0();
  if (sub_26B7A0() != v17) {
    char v29 = sub_26B7A0();
  }
  uint64_t v30 = v47;
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0(v47);
  sub_DDB6C(v30, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_B678((uint64_t)v19, (uint64_t)v21, &qword_2EEF20);
  uint64_t v39 = &v21[*(int *)(v48 + 36)];
  *uint64_t v39 = v29;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_B6DC((uint64_t)v19, &qword_2EEF20);
  sub_26B8B0();
  sub_D5A90(&qword_2EEF10, &qword_2EEF08, (void (*)(void))sub_D5B0C);
  uint64_t v40 = v49;
  sub_26BC40();
  sub_B6DC((uint64_t)v21, &qword_2EEF08);
  uint64_t v41 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v42 = v46;
  double v44 = sub_B0684(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v46, 0.0, 1, 0.0, 1, v41, v43);
  (*(void (**)(char *, uint64_t, double))(v51 + 8))(v40, v52, v44);
  return sub_19CC4(v42, v53, &qword_2EE980);
}

uint64_t sub_D1914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a2;
  uint64_t v42 = a6;
  uint64_t v43 = a1;
  uint64_t v9 = sub_269840();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EF250);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2EBC78);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v49 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v38 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v23 = v42;
  uint64_t v47 = a5;
  uint64_t v48 = v42;
  uint64_t v24 = v43 + *(int *)(type metadata accessor for SharableAsset() + 60);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v40 = v9;
  v25(v22, v24, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v48 = v23;
  uint64_t v26 = v10;
  uint64_t v27 = (uint64_t)v41;
  type metadata accessor for SummaryFrame();
  sub_4A98(qword_2EF0F8);
  sub_26C350();
  uint64_t v28 = v27 + *(int *)(v13 + 56);
  sub_B678((uint64_t)v22, v27, &qword_2EBC78);
  uint64_t v29 = v40;
  sub_B678((uint64_t)v20, v28, &qword_2EBC78);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v30(v27, 1, v29) == 1)
  {
    sub_B6DC((uint64_t)v20, &qword_2EBC78);
    sub_B6DC((uint64_t)v22, &qword_2EBC78);
    int v31 = v30(v28, 1, v29);
    if (v31 == 1) {
      uint64_t v32 = &qword_2EBC78;
    }
    else {
      uint64_t v32 = &qword_2EF250;
    }
    if (v31 == 1) {
      char v33 = -1;
    }
    else {
      char v33 = 0;
    }
  }
  else
  {
    uint64_t v34 = (uint64_t)v20;
    sub_B678(v27, (uint64_t)v49, &qword_2EBC78);
    if (v30(v28, 1, v29) == 1)
    {
      sub_B6DC((uint64_t)v20, &qword_2EBC78);
      sub_B6DC((uint64_t)v22, &qword_2EBC78);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v49, v29);
      char v33 = 0;
      uint64_t v32 = &qword_2EF250;
    }
    else
    {
      uint64_t v35 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v39, v28, v29);
      sub_DD984((unint64_t *)&qword_2EE278, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v33 = sub_26D360();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v26 + 8);
      v36(v35, v29);
      uint64_t v32 = &qword_2EBC78;
      sub_B6DC(v34, &qword_2EBC78);
      sub_B6DC((uint64_t)v22, &qword_2EBC78);
      v36(v49, v29);
    }
  }
  sub_B6DC(v27, v32);
  return v33 & 1;
}

uint64_t sub_D1D60(uint64_t a1, double a2)
{
  long long v5 = *(_OWORD *)(a1 + 32);
  v14[0] = *(_OWORD *)(a1 + 16);
  v14[1] = v5;
  uint64_t v6 = type metadata accessor for SharableAsset();
  uint64_t v7 = sub_26D980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - v9;
  *(void *)&v14[0] = *(void *)(v2 + *(int *)(a1 + 60));
  sub_26D680();
  swift_getWitnessTable();
  sub_26D7E0();
  uint64_t v11 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v6);
  uint64_t result = sub_26D910();
  if (v13 > a2)
  {
    sub_26D8F0();
    return sub_26D910();
  }
  return result;
}

uint64_t sub_D1F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  unint64_t v49 = a5;
  uint64_t v48 = a3;
  uint64_t v51 = a1;
  uint64_t v52 = a6;
  uint64_t v16 = sub_26B3D0();
  __chkstk_darwin(v16 - 8);
  uint64_t v50 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  unint64_t v65 = a5;
  uint64_t v47 = a4;
  type metadata accessor for SharableAsset();
  uint64_t v18 = sub_26D680();
  uint64_t v46 = sub_269840();
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v19 = sub_26ABD0();
  uint64_t v75 = a4;
  uint64_t v76 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v73 = WitnessTable;
  uint64_t v74 = v21;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v72 = &protocol witness table for _ShadowEffect;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v70 = &protocol witness table for _ScaleEffect;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = &protocol witness table for _FrameLayout;
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_D5838();
  uint64_t v62 = v19;
  uint64_t v63 = &type metadata for CGFloat;
  uint64_t v64 = v22;
  unint64_t v65 = v23;
  swift_getOpaqueTypeMetadata2();
  uint64_t v62 = v19;
  uint64_t v63 = &type metadata for CGFloat;
  uint64_t v64 = v22;
  unint64_t v65 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_26C460();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v62 = v24;
  uint64_t v63 = (void *)v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v62 = v18;
  uint64_t v63 = (void *)v46;
  uint64_t v64 = OpaqueTypeMetadata2;
  unint64_t v65 = v27;
  uint64_t v66 = v28;
  uint64_t v29 = sub_26C510();
  uint64_t v62 = v24;
  uint64_t v63 = (void *)v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v62 = v29;
  uint64_t v63 = (void *)v30;
  swift_getOpaqueTypeMetadata2();
  uint64_t v62 = v29;
  uint64_t v63 = (void *)v30;
  v45[1] = swift_getOpaqueTypeConformance2();
  uint64_t v31 = sub_26A670();
  uint64_t v46 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  char v33 = (char *)v45 - v32;
  v45[0] = swift_getWitnessTable();
  uint64_t v62 = v31;
  uint64_t v63 = (void *)v45[0];
  v45[2] = &opaque type descriptor for <<opaque return type of View.scrollTargetLayout(isEnabled:)>>;
  uint64_t v34 = swift_getOpaqueTypeMetadata2();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)v45 - v39;
  uint64_t v53 = a2;
  uint64_t v54 = v48;
  uint64_t v55 = v47;
  unint64_t v56 = v49;
  uint64_t v57 = v51;
  double v58 = a7;
  double v59 = a8;
  double v60 = a9;
  sub_26B120();
  sub_D404C();
  sub_26A660();
  uint64_t v41 = (void *)v45[0];
  sub_26BE80();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v31);
  uint64_t v62 = v31;
  uint64_t v63 = v41;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  sub_CCCC(v38, v34, v42);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  v43(v38, v34);
  sub_CCCC(v40, v34, v42);
  return ((uint64_t (*)(char *, uint64_t))v43)(v40, v34);
}

uint64_t sub_D2640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v75 = a1;
  uint64_t v77 = a6;
  uint64_t v79 = a2;
  unsigned __int8 v80 = a3;
  uint64_t v73 = a3;
  uint64_t v81 = a4;
  unint64_t v82 = a5;
  unint64_t v74 = a5;
  uint64_t v70 = type metadata accessor for SummaryFrame();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(void *)(v71 + 64);
  __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v55 - v16;
  uint64_t v79 = a2;
  unsigned __int8 v80 = a3;
  uint64_t v68 = a2;
  uint64_t v81 = a4;
  unint64_t v82 = a5;
  uint64_t v67 = a4;
  uint64_t v76 = type metadata accessor for SharableAsset();
  uint64_t v17 = sub_26D680();
  uint64_t v18 = sub_269840();
  uint64_t v60 = v18;
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v19 = sub_26ABD0();
  uint64_t v92 = a4;
  unint64_t v93 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v90 = WitnessTable;
  uint64_t v91 = v21;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = &protocol witness table for _ShadowEffect;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = &protocol witness table for _ScaleEffect;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v85 = &protocol witness table for _FrameLayout;
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_D5838();
  uint64_t v79 = v19;
  unsigned __int8 v80 = &type metadata for CGFloat;
  uint64_t v81 = v22;
  unint64_t v82 = v23;
  swift_getOpaqueTypeMetadata2();
  uint64_t v79 = v19;
  unsigned __int8 v80 = &type metadata for CGFloat;
  uint64_t v81 = v22;
  unint64_t v82 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_26C460();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v79 = v24;
  unsigned __int8 v80 = (void *)v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v59 = OpaqueTypeMetadata2;
  uint64_t v61 = v17;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v58 = v27;
  uint64_t v28 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v79 = v17;
  unsigned __int8 v80 = (void *)v18;
  uint64_t v81 = OpaqueTypeMetadata2;
  unint64_t v82 = v27;
  uint64_t v83 = v28;
  uint64_t v29 = sub_26C510();
  uint64_t v66 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v56 = (char *)&v55 - v30;
  uint64_t v79 = v24;
  unsigned __int8 v80 = (void *)v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v78 = OpaqueTypeConformance2;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v79 = v29;
  unsigned __int8 v80 = (void *)v31;
  uint64_t v63 = v31;
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  uint64_t v65 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v62 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v64 = (char *)&v55 - v35;
  uint64_t v36 = v70;
  uint64_t v79 = *(void *)(v75 + *(int *)(v70 + 60));
  uint64_t v37 = v71;
  uint64_t v38 = v69;
  (*(void (**)(char *))(v71 + 16))(v69);
  unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v40 = (v72 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v42 = v73;
  *((void *)v41 + 2) = v68;
  *((void *)v41 + 3) = v42;
  unint64_t v43 = v74;
  *((void *)v41 + 4) = v67;
  *((void *)v41 + 5) = v43;
  uint64_t v44 = v36;
  uint64_t v45 = v56;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v41[v39], v38, v44);
  *(double *)&v41[v40] = a7;
  uint64_t v46 = (double *)&v41[(v40 + 15) & 0xFFFFFFFFFFFFFFF8];
  *uint64_t v46 = a8;
  v46[1] = a9;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_26C500();
  unsigned __int8 v47 = sub_26B740();
  unsigned __int8 v48 = sub_26B720();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v47) {
    sub_26B730();
  }
  sub_26B730();
  if (sub_26B730() != v48) {
    sub_26B730();
  }
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  unint64_t v49 = v62;
  uint64_t v50 = (void *)v63;
  sub_26BF20();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v29);
  uint64_t v79 = v29;
  unsigned __int8 v80 = v50;
  uint64_t v51 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = v64;
  sub_CCCC(v49, v32, v51);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v65 + 8);
  v53(v49, v32);
  sub_CCCC(v52, v32, v51);
  return ((uint64_t (*)(char *, uint64_t))v53)(v52, v32);
}

uint64_t sub_D2E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  uint64_t v38 = a6;
  uint64_t v33 = a5;
  uint64_t v37 = a4;
  uint64_t v34 = a3;
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v39 = a7;
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  sub_26ABD0();
  sub_26ABD0();
  uint64_t v14 = sub_26ABD0();
  uint64_t v61 = a5;
  uint64_t v62 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v60 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = &protocol witness table for _ShadowEffect;
  uint64_t v55 = swift_getWitnessTable();
  unint64_t v56 = &protocol witness table for _ScaleEffect;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = &protocol witness table for _FrameLayout;
  uint64_t v15 = swift_getWitnessTable();
  unint64_t v16 = sub_D5838();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v49 = v14;
  uint64_t v50 = &type metadata for CGFloat;
  uint64_t v51 = v15;
  unint64_t v52 = v16;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_26C460();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&OpaqueTypeMetadata2 - v19;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v49 = v17;
  uint64_t v50 = (void *)v21;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&OpaqueTypeMetadata2 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&OpaqueTypeMetadata2 - v27;
  sub_26C630();
  uint64_t v40 = v34;
  uint64_t v41 = v37;
  uint64_t v42 = v33;
  uint64_t v43 = v38;
  uint64_t v44 = v35;
  uint64_t v45 = v36;
  double v46 = a8;
  double v47 = a9;
  double v48 = a10;
  sub_26C450();
  sub_26B740();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26BF20();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v49 = v17;
  uint64_t v50 = (void *)v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_CCCC(v26, v22, OpaqueTypeConformance2);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v23 + 8);
  v30(v26, v22);
  sub_CCCC(v28, v22, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v30)(v28, v22);
}

uint64_t sub_D3350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  unint64_t v71 = a6;
  uint64_t v72 = a4;
  uint64_t v62 = a2;
  uint64_t v65 = a1;
  uint64_t v70 = a7;
  double v83 = a3;
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  unint64_t v86 = a6;
  uint64_t v64 = type metadata accessor for SummaryFrame();
  uint64_t v68 = *(void *)(v64 - 8);
  uint64_t v69 = *(void *)(v68 + 64);
  __chkstk_darwin(v64);
  uint64_t v67 = (char *)&v48 - v11;
  double v12 = a3;
  double v51 = a3;
  sub_26ABD0();
  sub_7B0C(&qword_2EB8C0);
  sub_26ABD0();
  uint64_t v13 = sub_26ABD0();
  uint64_t v61 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v58 = (uint64_t)&v48 - v14;
  uint64_t v15 = sub_26ABD0();
  uint64_t v63 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v56 = (char *)&v48 - v16;
  *(double *)&uint64_t v17 = COERCE_DOUBLE(sub_26ABD0());
  uint64_t v66 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v57 = (char *)&v48 - v18;
  uint64_t v81 = a5;
  unint64_t v82 = &protocol witness table for _FrameLayout;
  uint64_t v50 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v79 = WitnessTable;
  uint64_t v80 = v20;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = &protocol witness table for _ShadowEffect;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v75 = v49;
  uint64_t v76 = &protocol witness table for _ScaleEffect;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v73 = v52;
  unint64_t v74 = &protocol witness table for _FrameLayout;
  uint64_t v55 = v17;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v54 = v21;
  unint64_t v53 = sub_D5838();
  double v83 = *(double *)&v17;
  uint64_t v84 = &type metadata for CGFloat;
  uint64_t v85 = v21;
  unint64_t v86 = v53;
  uint64_t v59 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v60 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v23 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v48 - v26;
  double v83 = v12;
  uint64_t v84 = v72;
  uint64_t v85 = a5;
  unint64_t v86 = v71;
  type metadata accessor for SharableAsset();
  uint64_t v28 = v58;
  uint64_t v29 = v64;
  uint64_t v30 = v65;
  sub_D3AEC(v64, v58);
  sub_26C7D0();
  uint64_t v31 = v56;
  sub_26BCE0();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v28, v13);
  sub_26C630();
  uint64_t v32 = v57;
  sub_26BFA0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v15);
  double v83 = a8;
  uint64_t v33 = v68;
  uint64_t v34 = v67;
  uint64_t v35 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v30, v29);
  uint64_t v36 = v33;
  unint64_t v37 = (*(unsigned __int8 *)(v33 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v38 = (v69 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v72;
  *((double *)v39 + 2) = v51;
  *((void *)v39 + 3) = v40;
  unint64_t v41 = v71;
  *((void *)v39 + 4) = v50;
  *((void *)v39 + 5) = v41;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v39[v37], v34, v35);
  *(double *)&v39[v38] = a8;
  double v42 = *(double *)&v55;
  uint64_t v43 = v54;
  unint64_t v44 = v53;
  sub_26C060();
  swift_release();
  (*(void (**)(char *, double))(v66 + 8))(v32, COERCE_DOUBLE(*(void *)&v42));
  double v83 = v42;
  uint64_t v84 = &type metadata for CGFloat;
  uint64_t v85 = v43;
  unint64_t v86 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_CCCC(v25, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  double v46 = *(void (**)(char *, uint64_t))(v60 + 8);
  v46(v25, OpaqueTypeMetadata2);
  sub_CCCC(v27, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v46)(v27, OpaqueTypeMetadata2);
}

uint64_t sub_D3AEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v32 = sub_26AC50();
  __chkstk_darwin(v32);
  long long v5 = (char **)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = sub_26ABD0();
  uint64_t v36 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v30 = (char *)&v30 - v8;
  sub_7B0C(&qword_2EB8C0);
  uint64_t v34 = sub_26ABD0();
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v30 - v9;
  uint64_t v10 = sub_26ABD0();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v30 - v13;
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v47 = v6;
  uint64_t v48 = v14;
  long long v40 = *(_OWORD *)(a1 + 32);
  long long v49 = v40;
  type metadata accessor for SharableAsset();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26BFA0();
  uint64_t v15 = *(void *)(v2 + *(int *)(a1 + 72));
  uint64_t v16 = (char *)v5 + *(int *)(v32 + 20);
  uint64_t v17 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v18 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  *long long v5 = v15;
  v5[1] = v15;
  uint64_t v45 = v40;
  double v46 = &protocol witness table for _FrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_DD984(&qword_2EF260, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
  uint64_t v20 = v31;
  uint64_t v21 = v30;
  sub_26C080();
  sub_DDB6C((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v7);
  uint64_t v22 = sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
  uint64_t v43 = WitnessTable;
  uint64_t v44 = v22;
  uint64_t v23 = v34;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = v33;
  sub_26BFD0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v23);
  uint64_t v41 = v24;
  double v42 = &protocol witness table for _ShadowEffect;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v35;
  sub_CCCC(v25, v10, v26);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v38 + 8);
  v28(v25, v10);
  sub_CCCC(v27, v10, v26);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v10);
}

uint64_t sub_D404C()
{
  return sub_26E0E0();
}

uint64_t sub_D40CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v10 = type metadata accessor for SharableAsset();
  uint64_t v11 = sub_26D980();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v24 = *(void *)(a1 + *(int *)(type metadata accessor for SummaryFrame() + 60));
  sub_26D680();
  swift_getWitnessTable();
  sub_26D7E0();
  uint64_t v18 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v19 = sub_269840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  else
  {
    uint64_t v20 = &v14[*(int *)(v10 + 60)];
    uint64_t v21 = sub_269840();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v17, v20, v21);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v17, 0, 1, v21);
  }
  return sub_CC620((uint64_t)v17);
}

uint64_t sub_D43CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v41 = a5;
  uint64_t v42 = a1;
  uint64_t v44 = a6;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v40 = a4;
  uint64_t v12 = type metadata accessor for SummaryFrame();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v37 - v14;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v43 = type metadata accessor for SharableAsset();
  uint64_t v16 = sub_26D680();
  uint64_t v17 = sub_269840();
  v37[3] = v17;
  uint64_t v18 = sub_7B0C(&qword_2EEED8);
  v37[2] = v18;
  uint64_t v19 = v16;
  v37[0] = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  v37[1] = WitnessTable;
  uint64_t v21 = sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v46 = v19;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  uint64_t v49 = WitnessTable;
  uint64_t v50 = v21;
  uint64_t v22 = sub_26C510();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v37 - v27;
  uint64_t v46 = *(void *)(v42 + *(int *)(v12 + 60));
  (*(void (**)(char *))(v13 + 16))(v15);
  unint64_t v29 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v39;
  *(void *)(v30 + 16) = v38;
  *(void *)(v30 + 24) = v31;
  uint64_t v32 = v41;
  *(void *)(v30 + 32) = v40;
  *(void *)(v30 + 40) = v32;
  *(double *)(v30 + 48) = a7;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v30 + v29, v15, v12);
  unint64_t v33 = sub_D588C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_26C500();
  unint64_t v45 = v33;
  uint64_t v34 = swift_getWitnessTable();
  sub_CCCC(v26, v22, v34);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v23 + 8);
  v35(v26, v22);
  sub_CCCC(v28, v22, v34);
  return ((uint64_t (*)(char *, uint64_t))v35)(v28, v22);
}

uint64_t sub_D477C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v39 = a6;
  uint64_t v38 = a5;
  uint64_t v42 = a2;
  uint64_t v40 = a1;
  uint64_t v41 = a7;
  uint64_t v9 = sub_269840();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EF250);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EBC78);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v37 - v22;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v49 = v54;
  uint64_t v50 = a3;
  int v48 = v55;
  uint64_t v47 = v56;
  int v46 = v57;
  uint64_t v44 = v59;
  uint64_t v45 = v58;
  uint64_t v24 = v38;
  uint64_t v51 = a4;
  uint64_t v52 = v38;
  uint64_t v25 = v39;
  uint64_t v53 = v39;
  uint64_t v26 = type metadata accessor for SharableAsset();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v23, v40 + *(int *)(v26 + 60), v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = v24;
  uint64_t v53 = v25;
  type metadata accessor for SummaryFrame();
  sub_4A98(qword_2EF0F8);
  sub_26C350();
  uint64_t v27 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_B678((uint64_t)v23, (uint64_t)v15, &qword_2EBC78);
  sub_B678((uint64_t)v21, v27, &qword_2EBC78);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v28((uint64_t)v15, 1, v9) != 1)
  {
    sub_B678((uint64_t)v15, v43, &qword_2EBC78);
    if (v28(v27, 1, v9) != 1)
    {
      unint64_t v29 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v37, v27, v9);
      sub_DD984((unint64_t *)&qword_2EE278, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = v43;
      char v31 = sub_26D360();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
      v32(v29, v9);
      sub_B6DC((uint64_t)v21, &qword_2EBC78);
      sub_B6DC((uint64_t)v23, &qword_2EBC78);
      v32((char *)v30, v9);
      sub_B6DC((uint64_t)v15, &qword_2EBC78);
      if (v31) {
        goto LABEL_8;
      }
LABEL_9:
      sub_26C150();
      uint64_t v34 = sub_26C1C0();
      uint64_t result = swift_release();
      goto LABEL_10;
    }
    sub_B6DC((uint64_t)v21, &qword_2EBC78);
    sub_B6DC((uint64_t)v23, &qword_2EBC78);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v43, v9);
LABEL_6:
    sub_B6DC((uint64_t)v15, &qword_2EF250);
    goto LABEL_9;
  }
  sub_B6DC((uint64_t)v21, &qword_2EBC78);
  sub_B6DC((uint64_t)v23, &qword_2EBC78);
  if (v28(v27, 1, v9) != 1) {
    goto LABEL_6;
  }
  sub_B6DC((uint64_t)v15, &qword_2EBC78);
LABEL_8:
  uint64_t result = sub_26C150();
  uint64_t v34 = result;
LABEL_10:
  uint64_t v35 = v41;
  *uint64_t v41 = v49;
  *((unsigned char *)v35 + 8) = v48;
  v35[2] = v47;
  *((unsigned char *)v35 + 24) = v46;
  uint64_t v36 = v44;
  v35[4] = v45;
  v35[5] = v36;
  v35[6] = v34;
  return result;
}

uint64_t sub_D4CC0(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = &_swiftEmptyArrayStorage;
  uint64_t v7 = (char *)&_swiftEmptyArrayStorage + 32;
LABEL_4:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    while (1)
    {
      uint64_t v10 = *(void *)(v2 + 8 * v5);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      if (v10)
      {
        unint64_t v8 = *(void *)(v10 + 16);
        if (v8)
        {
          unint64_t v12 = 0;
          ++v5;
          while (v12 < v8)
          {
            sub_6C0F8(v10 + 168 * v12 + 32, (uint64_t)&v35);
            uint64_t result = sub_19CC4((uint64_t)&v35, (uint64_t)&v46, &qword_2ECDF0);
            if (!*((void *)&v52 + 1)) {
              goto LABEL_29;
            }
            long long v65 = v54;
            long long v66 = v55;
            uint64_t v67 = v56;
            long long v61 = v50;
            long long v62 = v51;
            long long v63 = v52;
            long long v64 = v53;
            long long v57 = v46;
            long long v58 = v47;
            long long v59 = v48;
            long long v60 = v49;
            if (!v4)
            {
              unint64_t v13 = v6[3];
              if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0) {
                goto LABEL_37;
              }
              int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
              if (v14 <= 1) {
                uint64_t v15 = 1;
              }
              else {
                uint64_t v15 = v14;
              }
              sub_4A98(&qword_2EADE8);
              uint64_t v16 = (void *)swift_allocObject();
              uint64_t v17 = (uint64_t)(j__malloc_size(v16) - 32) / 168;
              v16[2] = v15;
              v16[3] = 2 * v17;
              unint64_t v18 = (unint64_t)(v16 + 4);
              uint64_t v19 = v6[3] >> 1;
              if (v6[2])
              {
                uint64_t v20 = v6 + 4;
                uint64_t v34 = v6;
                if (v16 != v6 || v18 >= (unint64_t)v20 + 168 * v19)
                {
                  uint64_t v21 = v17;
                  memmove(v16 + 4, v20, 168 * v19);
                  uint64_t v17 = v21;
                }
                v34[2] = 0;
              }
              uint64_t v7 = (char *)(v18 + 168 * v19);
              uint64_t v4 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
              uint64_t result = swift_release();
              uint64_t v6 = v16;
            }
            BOOL v22 = __OFSUB__(v4--, 1);
            if (v22) {
              goto LABEL_35;
            }
            ++v12;
            long long v23 = v58;
            *(_OWORD *)uint64_t v7 = v57;
            *((_OWORD *)v7 + 1) = v23;
            long long v24 = v59;
            long long v25 = v60;
            long long v26 = v62;
            *((_OWORD *)v7 + 4) = v61;
            *((_OWORD *)v7 + 5) = v26;
            *((_OWORD *)v7 + 2) = v24;
            *((_OWORD *)v7 + 3) = v25;
            long long v27 = v63;
            long long v28 = v64;
            long long v29 = v65;
            long long v30 = v66;
            *((void *)v7 + 20) = v67;
            *((_OWORD *)v7 + 8) = v29;
            *((_OWORD *)v7 + 9) = v30;
            *((_OWORD *)v7 + 6) = v27;
            *((_OWORD *)v7 + 7) = v28;
            v7 += 168;
            unint64_t v8 = *(void *)(v10 + 16);
            if (v12 == v8)
            {
              uint64_t v45 = 0;
              long long v43 = 0u;
              long long v44 = 0u;
              long long v41 = 0u;
              long long v42 = 0u;
              long long v39 = 0u;
              long long v40 = 0u;
              long long v37 = 0u;
              long long v38 = 0u;
              long long v35 = 0u;
              long long v36 = 0u;
              uint64_t result = sub_B6DC((uint64_t)&v35, &qword_2ECDF0);
              goto LABEL_4;
            }
          }
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        uint64_t v45 = 0;
        long long v43 = 0u;
        long long v44 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        long long v39 = 0u;
        long long v40 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        uint64_t result = sub_B6DC((uint64_t)&v35, &qword_2ECDF0);
      }
      ++v5;
      unint64_t v11 = *(void *)(a1 + 16);
      if (v5 == v11) {
        break;
      }
      if (v5 >= v11) {
        goto LABEL_33;
      }
    }
  }
  uint64_t v56 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_B6DC((uint64_t)&v46, &qword_2ECDF0);
  unint64_t v31 = v6[3];
  if (v31 >= 2)
  {
    unint64_t v32 = v31 >> 1;
    BOOL v22 = __OFSUB__(v32, v4);
    uint64_t v33 = v32 - v4;
    if (v22) {
      goto LABEL_36;
    }
    long long v6[2] = v33;
  }
  return (uint64_t)v6;
}

uint64_t sub_D4FE4(uint64_t result, unsigned char *a2)
{
  double v2 = sqrt((double)result);
  uint64_t v3 = *(void *)&v2 & 0x7FF0000000000000;
  if ((*a2 & 1) == 0) {
    goto LABEL_8;
  }
  if (v3 == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = (uint64_t)v2;
  uint64_t result = (uint64_t)v2 + 2;
  if (!__OFADD__((uint64_t)v2, 2)) {
    return result;
  }
  __break(1u);
LABEL_8:
  if (v3 == 0x7FF0000000000000)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = (uint64_t)v2 + 1;
  if (__OFADD__((uint64_t)v2, 1)) {
LABEL_19:
  }
    __break(1u);
  return result;
}

void *sub_D5098(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_2E9C08 != -1) {
    swift_once();
  }
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = &_swiftEmptyArrayStorage;
  if (v6)
  {
    double v8 = a3 / (double)a2 * 1.5 - (*(double *)&qword_3152C8 + *(double *)&qword_3152C8);
    long long v30 = &_swiftEmptyArrayStorage;
    sub_2B8EC(0, v6, 0);
    uint64_t v9 = a1 + 32;
    uint64_t v7 = &_swiftEmptyArrayStorage;
    do
    {
      sub_C224(v9, (uint64_t)v27);
      sub_C224((uint64_t)v27, (uint64_t)v23);
      sub_4ADC(v27, v27[3]);
      sub_269FF0();
      double v24 = v8;
      double v25 = v8 / v10;
      char v26 = 0;
      CoverViewModel.init(style:)((uint64_t)v23, (uint64_t)v28);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2B8EC(0, v7[2] + 1, 1);
        uint64_t v7 = v30;
      }
      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_2B8EC(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v30;
      }
      void v7[2] = v12 + 1;
      unint64_t v13 = (char *)&v7[21 * v12];
      long long v14 = v28[0];
      long long v15 = v28[2];
      *((_OWORD *)v13 + 3) = v28[1];
      *((_OWORD *)v13 + 4) = v15;
      *((_OWORD *)v13 + 2) = v14;
      long long v16 = v28[3];
      long long v17 = v28[4];
      long long v18 = v28[6];
      *((_OWORD *)v13 + 7) = v28[5];
      *((_OWORD *)v13 + 8) = v18;
      *((_OWORD *)v13 + 5) = v16;
      *((_OWORD *)v13 + 6) = v17;
      long long v19 = v28[7];
      long long v20 = v28[8];
      long long v21 = v28[9];
      *((void *)v13 + 24) = v29;
      *((_OWORD *)v13 + 10) = v20;
      *((_OWORD *)v13 + 11) = v21;
      *((_OWORD *)v13 + 9) = v19;
      v9 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_D5280(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    goto LABEL_54;
  }
  uint64_t v4 = &_swiftEmptyArrayStorage;
  if (a2)
  {
    sub_4A98(&qword_2EF1F0);
    unint64_t v5 = (char *)sub_26D650();
    int64_t v6 = v5;
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 4) = &_swiftEmptyArrayStorage;
    if (a2 != 1) {
      memset_pattern16(v5 + 40, &off_2DFFD0, 8 * a2 - 8);
    }
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      return (uint64_t)v6;
    }
  }
  else
  {
    int64_t v6 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      return (uint64_t)v6;
    }
  }
  uint64_t v40 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (1)
  {
    sub_6C0F8(v40 + 168 * v8, (uint64_t)v49);
    int64_t v9 = *((void *)v6 + 2);
    if (v9)
    {
      double v10 = v4;
      long long v48 = (double *)v4;
      swift_bridgeObjectRetain();
      sub_2B90C(0, v9, 0);
      for (uint64_t i = 0; i != v9; ++i)
      {
        uint64_t v12 = *(void *)&v6[8 * i + 32];
        uint64_t v13 = *(void *)(v12 + 16);
        if (v13)
        {
          uint64_t v14 = v12 + 32;
          swift_bridgeObjectRetain();
          double v15 = 0.0;
          do
          {
            sub_6C0F8(v14, (uint64_t)v41);
            double v15 = v15 + 1.0 / *((double *)&v42 + 1);
            sub_2D738((uint64_t)v41);
            v14 += 168;
            --v13;
          }
          while (v13);
          swift_bridgeObjectRelease();
        }
        else
        {
          double v15 = 0.0;
        }
        long long v16 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2B90C(0, *((void *)v16 + 2) + 1, 1);
          long long v16 = v48;
        }
        unint64_t v18 = *((void *)v16 + 2);
        unint64_t v17 = *((void *)v16 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_2B90C(v17 > 1, v18 + 1, 1);
          long long v16 = v48;
        }
        *((void *)v16 + 2) = v18 + 1;
        v16[v18 + 4] = v15;
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = v10;
      uint64_t v19 = *((void *)v16 + 2);
      if (!v19)
      {
LABEL_9:
        sub_2D738((uint64_t)v49);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else
    {
      long long v16 = (double *)v4;
      uint64_t v19 = v4[2];
      if (!v19) {
        goto LABEL_9;
      }
    }
    if (v19 == 1) {
      goto LABEL_32;
    }
    uint64_t v20 = 0;
    double v21 = v16[4];
    do
    {
      if (v16[v20 + 5] < v21) {
        double v21 = v16[v20 + 5];
      }
      ++v20;
    }
    while (v19 - 1 != v20);
    if (v16[4] == v21)
    {
LABEL_32:
      unint64_t v22 = 0;
    }
    else
    {
      uint64_t v37 = 5;
      while (1)
      {
        unint64_t v22 = v37 - 4;
        if (v16[v37] == v21) {
          break;
        }
        uint64_t v38 = v37 - 3;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
          goto LABEL_52;
        }
        ++v37;
        if (v38 == v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_6C0F8((uint64_t)v49, (uint64_t)v41);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v22 & 0x8000000000000000) != 0) {
        break;
      }
      goto LABEL_35;
    }
    int64_t v6 = sub_231FD4((uint64_t)v6);
    if ((v22 & 0x8000000000000000) != 0) {
      break;
    }
LABEL_35:
    if (v22 >= *((void *)v6 + 2)) {
      goto LABEL_53;
    }
    long long v23 = v6 + 32;
    double v24 = *(char **)&v6[8 * v22 + 32];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v6[8 * v22 + 32] = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      double v24 = sub_E5DBC(0, *((void *)v24 + 2) + 1, 1, v24);
      *(void *)&v23[8 * v22] = v24;
    }
    unint64_t v27 = *((void *)v24 + 2);
    unint64_t v26 = *((void *)v24 + 3);
    if (v27 >= v26 >> 1)
    {
      double v24 = sub_E5DBC((char *)(v26 > 1), v27 + 1, 1, v24);
      *(void *)&v23[8 * v22] = v24;
    }
    *((void *)v24 + 2) = v27 + 1;
    long long v28 = &v24[168 * v27];
    long long v29 = v41[0];
    long long v30 = v41[2];
    *((_OWORD *)v28 + 3) = v41[1];
    *((_OWORD *)v28 + 4) = v30;
    *((_OWORD *)v28 + 2) = v29;
    long long v31 = v41[3];
    long long v32 = v41[4];
    long long v33 = v43;
    *((_OWORD *)v28 + 7) = v42;
    *((_OWORD *)v28 + 8) = v33;
    *((_OWORD *)v28 + 5) = v31;
    *((_OWORD *)v28 + 6) = v32;
    long long v34 = v44;
    long long v35 = v45;
    long long v36 = v46;
    *((void *)v28 + 24) = v47;
    *((_OWORD *)v28 + 10) = v35;
    *((_OWORD *)v28 + 11) = v36;
    *((_OWORD *)v28 + 9) = v34;
LABEL_41:
    sub_2D738((uint64_t)v49);
LABEL_10:
    if (++v8 == v7)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_26DB90();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ShareableAsset(uint64_t a1)
{
  return sub_2A148(a1, qword_2EEFA0);
}

uint64_t sub_D56C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a3 < 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for SummaryFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2EF038);
}

uint64_t type metadata accessor for SharableAsset()
{
  return swift_getGenericMetadata();
}

uint64_t sub_D5750(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SummaryFrame()
{
  return swift_getGenericMetadata();
}

uint64_t sub_D57D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_D5838()
{
  unint64_t result = qword_2EEED0;
  if (!qword_2EEED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEED0);
  }
  return result;
}

unint64_t sub_D588C()
{
  unint64_t result = qword_2EEEE0;
  if (!qword_2EEEE0)
  {
    sub_7B0C(&qword_2EEED8);
    sub_D5A90(&qword_2EEEE8, &qword_2EEEF0, (void (*)(void))sub_D5958);
    sub_7C18(&qword_2EB0E0, &qword_2EB0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEEE0);
  }
  return result;
}

unint64_t sub_D5958()
{
  unint64_t result = qword_2EEEF8;
  if (!qword_2EEEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEEF8);
  }
  return result;
}

unint64_t sub_D59AC()
{
  unint64_t result = qword_2EEF00;
  if (!qword_2EEF00)
  {
    sub_7B0C(&qword_2EE980);
    sub_7B0C(&qword_2EEF08);
    sub_D5A90(&qword_2EEF10, &qword_2EEF08, (void (*)(void))sub_D5B0C);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEF00);
  }
  return result;
}

uint64_t sub_D5A90(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_D5B0C()
{
  unint64_t result = qword_2EEF18;
  if (!qword_2EEF18)
  {
    sub_7B0C(&qword_2EEF20);
    sub_7C18(&qword_2EA3D8, &qword_2EA3C8);
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEF18);
  }
  return result;
}

uint64_t sub_D5BD0()
{
  return sub_DC438((uint64_t (*)(void, void, void, void, void))sub_CD520);
}

unint64_t sub_D5BEC()
{
  unint64_t result = qword_2EEF40;
  if (!qword_2EEF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EEF40);
  }
  return result;
}

uint64_t sub_D5C40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_D5C5C()
{
  return sub_DD984(qword_2EC7D8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_D5CA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D5CE0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D5D1C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for VerticalMasonryCoverGridViewModel()
{
  return &type metadata for VerticalMasonryCoverGridViewModel;
}

unsigned char *storeEnumTagSinglePayload for VerticalMasonryCoverGridViewModel.GridStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD5E50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalMasonryCoverGridViewModel.GridStyle()
{
  return &type metadata for VerticalMasonryCoverGridViewModel.GridStyle;
}

uint64_t sub_D5E8C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
  {
    swift_bridgeObjectRetain();
  }
  else if (((v3 ^ (2 * v3)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SharableAssetCoverStyle(uint64_t a1)
{
  return sub_D56C8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7BooksUI23SharableAssetCoverStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_D5E8C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SharableAssetCoverStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_D5E8C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_D56C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SharableAssetCoverStyle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_D56C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharableAssetCoverStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SharableAssetCoverStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_D6078(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_D6084(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_D6094(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SharableAssetCoverStyle()
{
  return &type metadata for SharableAssetCoverStyle;
}

ValueMetadata *type metadata accessor for SharableAssetLayoutStyle()
{
  return &type metadata for SharableAssetLayoutStyle;
}

uint64_t destroy for SharableAssetViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);

  return sub_D56C8(v2, v3, v4);
}

uint64_t initializeWithCopy for SharableAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_D5E8C(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for SharableAssetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_D5E8C(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_D56C8(v7, v8, v9);
  long long v10 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v10;
  return a1;
}

uint64_t assignWithTake for SharableAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_D56C8(v6, v7, v8);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharableAssetViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharableAssetViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableAssetViewModel()
{
  return &type metadata for SharableAssetViewModel;
}

uint64_t initializeBufferWithCopyOfBuffer for ShareableAsset(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    swift_bridgeObjectRetain();
    sub_D5E8C(v8, v9, v10);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 24);
    unint64_t v17 = (_WORD *)(a1 + v16);
    unint64_t v18 = (_WORD *)((char *)a2 + v16);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *unint64_t v17 = *v18;
      uint64_t v19 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v20 = v19[6];
      double v21 = (char *)v17 + v20;
      unint64_t v22 = (char *)v18 + v20;
      uint64_t v23 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(void *)((char *)v17 + v19[7]) = *(void *)((char *)v18 + v19[7]);
      uint64_t v24 = v19[8];
      double v25 = (char *)v17 + v24;
      unint64_t v26 = (char *)v18 + v24;
      void v25[2] = v26[2];
      *(_WORD *)double v25 = *(_WORD *)v26;
    }
    else
    {
      *(void *)unint64_t v17 = *(void *)v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShareableAsset(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_D56C8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ShareableAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_D5E8C(v7, v8, v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (_WORD *)(a1 + v14);
  uint64_t v16 = (_WORD *)(a2 + v14);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v15 = *v16;
    unint64_t v17 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v18 = v17[6];
    uint64_t v19 = (char *)v15 + v18;
    uint64_t v20 = (char *)v16 + v18;
    uint64_t v21 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)((char *)v15 + v17[7]) = *(void *)((char *)v16 + v17[7]);
    uint64_t v22 = v17[8];
    uint64_t v23 = (char *)v15 + v22;
    uint64_t v24 = (char *)v16 + v22;
    void v23[2] = v24[2];
    *(_WORD *)uint64_t v23 = *(_WORD *)v24;
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ShareableAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_D5E8C(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_D56C8(v9, v10, v11);
  long long v12 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v12;
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_B6DC(a1 + v13, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (unsigned char *)(a1 + v17);
    uint64_t v19 = (unsigned char *)(a2 + v17);
    sub_B6DC(a1 + v17, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v20 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v21 = v20[6];
      uint64_t v22 = &v18[v21];
      uint64_t v23 = &v19[v21];
      uint64_t v24 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(void *)&v18[v20[7]] = *(void *)&v19[v20[7]];
      uint64_t v25 = v20[8];
      unint64_t v26 = &v18[v25];
      unint64_t v27 = &v19[v25];
      char v28 = v27[2];
      *(_WORD *)unint64_t v26 = *(_WORD *)v27;
      v26[2] = v28;
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ShareableAsset(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v7 = *(int *)(a3 + 20);
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (_WORD *)((char *)a1 + v12);
  uint64_t v14 = (_WORD *)((char *)a2 + v12);
  uint64_t v15 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v13 = *v14;
    uint64_t v16 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    uint64_t v20 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(void *)((char *)v13 + v16[7]) = *(void *)((char *)v14 + v16[7]);
    uint64_t v21 = v16[8];
    uint64_t v22 = (char *)v13 + v21;
    uint64_t v23 = (char *)v14 + v21;
    v22[2] = v23[2];
    *(_WORD *)uint64_t v22 = *(_WORD *)v23;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ShareableAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_D56C8(v8, v9, v10);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_B6DC(a1 + v11, &qword_2EA968);
    uint64_t v14 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (_WORD *)(a1 + v16);
    uint64_t v18 = (_WORD *)(a2 + v16);
    sub_B6DC(a1 + v16, &qword_2EA978);
    uint64_t v19 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v18;
      uint64_t v20 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v21 = v20[6];
      uint64_t v22 = (char *)v17 + v21;
      uint64_t v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(void *)((char *)v17 + v20[7]) = *(void *)((char *)v18 + v20[7]);
      uint64_t v25 = v20[8];
      unint64_t v26 = (char *)v17 + v25;
      unint64_t v27 = (char *)v18 + v25;
      v26[2] = v27[2];
      *(_WORD *)unint64_t v26 = *(_WORD *)v27;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareableAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D6EF0);
}

uint64_t sub_D6EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EAB18);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EAB28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShareableAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D7038);
}

uint64_t sub_D7038(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EAB18);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_4A98(&qword_2EAB28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_D716C()
{
  sub_D7278(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_D7278(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_D7278(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryFrameViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_269BE0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SummaryFrameViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SummaryFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_269BE0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SummaryFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SummaryFrameViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for SummaryFrameViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D7758);
}

uint64_t sub_D7758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269BE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SummaryFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D781C);
}

uint64_t sub_D781C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269BE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_D78C4()
{
  uint64_t result = sub_269BE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_D795C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_269840();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_D7A74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v29 = *(void *)(v31 - 8);
  int v5 = *(_DWORD *)(v29 + 80);
  uint64_t v6 = v5;
  uint64_t v30 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v30 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v28 = *(void *)(v29 + 64) + v8;
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = sub_269840();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  unint64_t v14 = v8 | (unint64_t)v5 | v12;
  if (v14 > 7
    || ((v8 | v5 | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || ((v13
       + ((v28 + ((v5 + 57) & ~(unint64_t)v5)) & ~(unint64_t)v8)) & ~v12)
     + *(void *)(*(void *)(v10 - 8) + 64) > 0x18)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v14 & 0xF8 ^ 0x1F8) & (v14 + 16));
    swift_retain();
  }
  else
  {
    unint64_t v25 = ~(unint64_t)v8;
    uint64_t v26 = ~v12;
    uint64_t v27 = v10;
    uint64_t v18 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v18;
    uint64_t v19 = a2[2];
    uint64_t v20 = a2[3];
    char v21 = *((unsigned char *)a2 + 32);
    swift_bridgeObjectRetain();
    sub_D5E8C(v19, v20, v21);
    *(void *)(a1 + 16) = v19;
    *(void *)(a1 + 24) = v20;
    *(unsigned char *)(a1 + 32) = v21;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v22 = ((unint64_t)a2 + v6 + 57) & ~v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))((a1 + v6 + 57) & ~v6, v22, v31);
    uint64_t v23 = (((a1 + v6 + 57) & ~v6) + v28) & v25;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v23, (v22 + v28) & v25, v30);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))((v23 + v13) & v26, (((v22 + v28) & v25) + v13) & v26, v27);
  }
  return a1;
}

uint64_t sub_D7D08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_D56C8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v10);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t v12 = sub_269840();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 8);
  uint64_t v15 = v12;
  unint64_t v16 = (v10 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);

  return v14(v16, v15);
}

uint64_t sub_D7E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_D5E8C(v7, v8, v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 57 + a1) & ~v12;
  uint64_t v14 = (v12 + 57 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 48);
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 48);
  uint64_t v23 = sub_269840();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16))((v22 + *(unsigned __int8 *)(v24 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (v22 + *(unsigned __int8 *)(v24 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), v23);
  return a1;
}

uint64_t sub_D7F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_D5E8C(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_D56C8(v9, v10, v11);
  long long v12 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v15 + 57 + a1) & ~v15;
  uint64_t v17 = (v15 + 57 + a2) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  uint64_t v18 = *(void *)(v14 + 40);
  uint64_t v19 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v20 = v19 + 24;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = (v22 + v16) & ~v21;
  uint64_t v24 = (v22 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v23, v24);
  uint64_t v25 = *(void *)(v20 + 40);
  uint64_t v26 = sub_269840();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 24))((v25 + *(unsigned __int8 *)(v27 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (v25 + *(unsigned __int8 *)(v27 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), v26);
  return a1;
}

_OWORD *sub_D810C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 57) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 57) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 32);
  uint64_t v19 = sub_269840();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))((v18 + *(unsigned __int8 *)(v20 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (v18 + *(unsigned __int8 *)(v20 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), v19);
  return a1;
}

uint64_t sub_D8248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_D56C8(v8, v9, v10);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 57 + a1) & ~v13;
  uint64_t v15 = (v13 + 57 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v18 = v17 + 40;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 24);
  uint64_t v24 = sub_269840();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))((v23 + *(unsigned __int8 *)(v25 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v23 + *(unsigned __int8 *)(v25 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_D83AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v35 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v35 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v7 <= v9) {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = sub_269840();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
  if (v10 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v17 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v17 = v10;
  }
  if (v17 <= 0x7FFFFFFF) {
    unsigned int v18 = 0x7FFFFFFF;
  }
  else {
    unsigned int v18 = v17;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v8 + 64) + v16;
  if (a2 <= v18) {
    goto LABEL_31;
  }
  uint64_t v20 = ((v19 + ((v14 + v15 + ((v13 + 57) & ~v13)) & ~v15)) & ~v16) + *(void *)(*(void *)(v11 - 8) + 64);
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_13;
  }
  unsigned int v24 = ((a2 - v18 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v24))
  {
    int v22 = *(_DWORD *)((char *)a1 + v20);
    if (v22) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v24 <= 0xFF)
    {
      if (v24 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v22 = *((unsigned __int8 *)a1 + v20);
      if (!*((unsigned char *)a1 + v20)) {
        goto LABEL_31;
      }
LABEL_21:
      int v25 = (v22 - 1) << v21;
      if (v20 > 3) {
        int v25 = 0;
      }
      if (v20)
      {
        if (v20 <= 3) {
          int v26 = v20;
        }
        else {
          int v26 = 4;
        }
        switch(v26)
        {
          case 2:
            int v27 = *a1;
            break;
          case 3:
            int v27 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v27 = *(_DWORD *)a1;
            break;
          default:
            int v27 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v27 = 0;
      }
      return v18 + (v27 | v25) + 1;
    }
    int v22 = *(unsigned __int16 *)((char *)a1 + v20);
    if (*(unsigned __int16 *)((char *)a1 + v20)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if ((v17 & 0x80000000) == 0)
  {
    unint64_t v28 = *((void *)a1 + 1);
    if (v28 >= 0xFFFFFFFF) {
      LODWORD(v28) = -1;
    }
    return (v28 + 1);
  }
  uint64_t v29 = ((unint64_t)a1 + v13 + 57) & ~v13;
  if (v7 == v18)
  {
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v31 = v7;
    uint64_t v32 = v5;
    return v30(v29, v31, v32);
  }
  uint64_t v29 = (v29 + v14 + v15) & ~v15;
  if (v9 == v18)
  {
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v31 = v9;
    uint64_t v32 = v35;
    return v30(v29, v31, v32);
  }
  uint64_t v33 = (v19 + v29) & ~v16;
  long long v34 = *(uint64_t (**)(uint64_t))(v12 + 48);

  return v34(v33);
}

void sub_D8748(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v35 = *(void *)(a4 + 24);
  uint64_t v36 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v37 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v35 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v12 = *(void *)(sub_269840() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  if (v11 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v18 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v18 = v11;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = v16 + v17;
  size_t v21 = ((v16 + v17 + ((v14 + v15 + ((v13 + 57) & ~v13)) & ~v15)) & ~v17) + *(void *)(v12 + 64);
  if (a3 <= v19)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v26 = ((a3 - v19 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v26))
    {
      int v22 = 4;
    }
    else if (v26 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v26 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v19 < a2)
  {
    unsigned int v23 = ~v19 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v21)
      {
        int v27 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *a1 = v27;
          *((unsigned char *)a1 + 2) = BYTE2(v27);
        }
        else if (v21 == 2)
        {
          *a1 = v27;
        }
        else
        {
          *(unsigned char *)a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        *((unsigned char *)a1 + v21) = v24;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v21) = v24;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)((char *)a1 + v21) = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v17;
  switch(v22)
  {
    case 1:
      *((unsigned char *)a1 + v21) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)((char *)a1 + v21) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0xD8B70);
    case 4:
      *(_DWORD *)((char *)a1 + v21) = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if ((v18 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(a1 + 20) = 0u;
          *(_OWORD *)(a1 + 12) = 0u;
          *(_OWORD *)(a1 + 4) = 0u;
          *((unsigned char *)a1 + 56) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
        return;
      }
      uint64_t v28 = ((unint64_t)a1 + v13 + 57) & ~v13;
      if (v8 == v19)
      {
        uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
        uint64_t v30 = a2;
        uint64_t v31 = v8;
        uint64_t v32 = v36;
LABEL_39:
        v29(v28, v30, v31, v32);
        return;
      }
      uint64_t v28 = (v28 + v14 + v15) & ~v15;
      if (v10 == v19)
      {
        uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v30 = a2;
        uint64_t v31 = v10;
        uint64_t v32 = v35;
        goto LABEL_39;
      }
      uint64_t v33 = (v20 + v28) & v25;
      long long v34 = *(void (**)(uint64_t, uint64_t))(v12 + 56);
      v34(v33, a2);
      return;
  }
}

void sub_D8B98()
{
  type metadata accessor for PageBackground(319);
  if (v0 <= 0x3F)
  {
    sub_D7278(319, (unint64_t *)&qword_2EABA8, (void (*)(uint64_t))type metadata accessor for SizeConstants.Spacing);
    if (v1 <= 0x3F)
    {
      type metadata accessor for SummaryFrameViewModel(319);
      if (v2 <= 0x3F)
      {
        sub_DB098();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_D8D30(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v8 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      }
      else
      {
        long long v21 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v21;
        (**(void (***)(uint64_t, uint64_t *))(v21 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(void *)(a1 + 104) = a2[13];
      uint64_t v22 = a2[15];
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v22;
        uint64_t v23 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v23;
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        uint64_t v24 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 128) = v25;
        *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
        *(void *)(a1 + 160) = a2[20];
      }
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
      uint64_t v15 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_26A6E0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_4A98(&qword_2EA940);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[13];
    int v27 = (_WORD *)(a1 + v26);
    uint64_t v28 = (_WORD *)((char *)a2 + v26);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *int v27 = *v28;
      uint64_t v29 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v30 = v29[6];
      uint64_t v31 = (char *)v27 + v30;
      uint64_t v32 = (char *)v28 + v30;
      uint64_t v33 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)((char *)v27 + v29[7]) = *(void *)((char *)v28 + v29[7]);
      uint64_t v34 = v29[8];
      uint64_t v35 = (char *)v27 + v34;
      uint64_t v36 = (char *)v28 + v34;
      v35[2] = v36[2];
      *(_WORD *)uint64_t v35 = *(_WORD *)v36;
    }
    else
    {
      *(void *)int v27 = *(void *)v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[14];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (uint64_t)a2 + v37;
    uint64_t v40 = *(uint64_t *)((char *)a2 + v37 + 8);
    void *v38 = *(uint64_t *)((char *)a2 + v37);
    v38[1] = v40;
    uint64_t v41 = type metadata accessor for SummaryFrameViewModel(0);
    uint64_t v42 = *(int *)(v41 + 20);
    uint64_t v66 = v39 + v42;
    uint64_t v67 = (char *)v38 + v42;
    uint64_t v43 = sub_269BE0();
    long long v44 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    v44(v67, v66, v43);
    uint64_t v45 = *(int *)(v41 + 24);
    long long v46 = (void *)((char *)v38 + v45);
    uint64_t v47 = (void *)(v39 + v45);
    uint64_t v48 = v47[1];
    *long long v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = a3[16];
    *(void *)(a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(void *)(a1 + v49) = *(uint64_t *)((char *)a2 + v49);
    uint64_t v50 = a3[18];
    *(void *)(a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(void *)(a1 + v50) = *(uint64_t *)((char *)a2 + v50);
    uint64_t v51 = a3[20];
    *(void *)(a1 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    *(void *)(a1 + v51) = *(uint64_t *)((char *)a2 + v51);
    uint64_t v52 = a3[22];
    *(void *)(a1 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
    long long v53 = (void *)(a1 + v52);
    long long v54 = (uint64_t *)((char *)a2 + v52);
    uint64_t v55 = *v54;
    uint64_t v56 = v54[1];
    uint64_t v57 = a3[23];
    long long v58 = (char *)a2 + v57;
    long long v59 = (char *)(a1 + v57);
    void *v53 = v55;
    v53[1] = v56;
    uint64_t v60 = sub_269840();
    uint64_t v61 = *(void *)(v60 - 8);
    long long v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v62(v58, 1, v60))
    {
      uint64_t v63 = sub_4A98(&qword_2EBC78);
      memcpy(v59, v58, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v58, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v59, 0, 1, v60);
    }
    uint64_t v64 = sub_4A98(qword_2EF0F8);
    *(void *)&v59[*(int *)(v64 + 28)] = *(void *)&v58[*(int *)(v64 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_D932C(uint64_t a1, int *a2)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(a1 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(a1);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = a1 + a2[13];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[14];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v15 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v16 = a1 + a2[23];
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_4A98(qword_2EF0F8);

  return swift_release();
}

uint64_t sub_D9658(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v8;
    swift_bridgeObjectRetain();
    uint64_t v9 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      long long v19 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v19;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    uint64_t v20 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v20;
      uint64_t v21 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v21;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v22 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v23;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    uint64_t v13 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    uint64_t v16 = sub_26A6E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EA940);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[13];
  long long v25 = (_WORD *)(a1 + v24);
  uint64_t v26 = (_WORD *)(a2 + v24);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *long long v25 = *v26;
    int v27 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v28 = v27[6];
    uint64_t v29 = (char *)v25 + v28;
    uint64_t v30 = (char *)v26 + v28;
    uint64_t v31 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(void *)((char *)v25 + v27[7]) = *(void *)((char *)v26 + v27[7]);
    uint64_t v32 = v27[8];
    uint64_t v33 = (char *)v25 + v32;
    uint64_t v34 = (char *)v26 + v32;
    v33[2] = v34[2];
    *(_WORD *)uint64_t v33 = *(_WORD *)v34;
  }
  else
  {
    *(void *)long long v25 = *(void *)v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)(a2 + v35 + 8);
  *uint64_t v36 = *(void *)(a2 + v35);
  v36[1] = v38;
  uint64_t v39 = type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v40 = *(int *)(v39 + 20);
  uint64_t v64 = v37 + v40;
  long long v65 = (char *)v36 + v40;
  uint64_t v41 = sub_269BE0();
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
  swift_bridgeObjectRetain();
  v42(v65, v64, v41);
  uint64_t v43 = *(int *)(v39 + 24);
  long long v44 = (void *)((char *)v36 + v43);
  uint64_t v45 = (void *)(v37 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v47) = *(void *)(a2 + v47);
  uint64_t v48 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v48) = *(void *)(a2 + v48);
  uint64_t v49 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  uint64_t v50 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *v52;
  uint64_t v54 = v52[1];
  uint64_t v55 = a3[23];
  uint64_t v56 = (char *)(a2 + v55);
  uint64_t v57 = (char *)(a1 + v55);
  void *v51 = v53;
  v51[1] = v54;
  uint64_t v58 = sub_269840();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v60(v56, 1, v58))
  {
    uint64_t v61 = sub_4A98(&qword_2EBC78);
    memcpy(v57, v56, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v56, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v57, 0, 1, v58);
  }
  uint64_t v62 = sub_4A98(qword_2EF0F8);
  *(void *)&v57[*(int *)(v62 + 28)] = *(void *)&v56[*(int *)(v62 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_D9C04(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    sub_DDB6C(a1, type metadata accessor for PageBackground);
    type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = (uint64_t)a2 + v10;
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 56))
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        long long v9 = a2[2];
        *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        *(_OWORD *)a1 = v7;
      }
      else
      {
        uint64_t v20 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v20 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        *(unsigned char *)(a1 + 56) = 0;
      }
      *(_OWORD *)(a1 + 64) = a2[4];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      uint64_t v21 = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v22 = a2[7];
        long long v23 = a2[8];
        long long v24 = a2[9];
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(_OWORD *)(a1 + 128) = v23;
        *(_OWORD *)(a1 + 144) = v24;
        *(_OWORD *)(a1 + 112) = v22;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_4A98(&qword_2EA940);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[13];
    uint64_t v26 = (unsigned char *)(a1 + v25);
    int v27 = (char *)a2 + v25;
    sub_B6DC(a1 + v25, &qword_2EA978);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      uint64_t v28 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v29 = v28[6];
      uint64_t v30 = &v26[v29];
      uint64_t v31 = &v27[v29];
      uint64_t v32 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
      uint64_t v33 = v28[8];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      char v36 = v35[2];
      *(_WORD *)uint64_t v34 = *(_WORD *)v35;
      v34[2] = v36;
    }
    else
    {
      *(void *)uint64_t v26 = *(void *)v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = a3[14];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t)a2 + v37;
  void *v38 = *(void *)((char *)a2 + v37);
  v38[1] = *(void *)((char *)a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v41 = *(int *)(v40 + 20);
  uint64_t v42 = (char *)v38 + v41;
  uint64_t v43 = v39 + v41;
  uint64_t v44 = sub_269BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  uint64_t v45 = *(int *)(v40 + 24);
  uint64_t v46 = (void *)((char *)v38 + v45);
  uint64_t v47 = (void *)(v39 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)(a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_retain();
  swift_release();
  uint64_t v48 = a3[22];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)((char *)a2 + v48);
  void *v49 = *v50;
  v49[1] = v50[1];
  swift_retain();
  swift_release();
  uint64_t v51 = a3[23];
  uint64_t v52 = (char *)(a1 + v51);
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_269840();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  LODWORD(v42) = v56(v52, 1, v54);
  int v57 = v56(v53, 1, v54);
  if (!v42)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v52, v53, v54);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
    goto LABEL_23;
  }
  if (v57)
  {
LABEL_23:
    uint64_t v58 = sub_4A98(&qword_2EBC78);
    memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
LABEL_24:
  uint64_t v59 = sub_4A98(qword_2EF0F8);
  *(void *)&v52[*(int *)(v59 + 28)] = *(void *)&v53[*(int *)(v59 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_DA2BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_9;
    }
    *(void *)a1 = *(void *)a2;
    uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26A6E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EA940);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v18 = a3[13];
  uint64_t v19 = (_WORD *)((char *)a1 + v18);
  uint64_t v20 = (_WORD *)((char *)a2 + v18);
  uint64_t v21 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v19 = *v20;
    long long v22 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v23 = v22[6];
    long long v24 = (char *)v19 + v23;
    uint64_t v25 = (char *)v20 + v23;
    uint64_t v26 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    *(void *)((char *)v19 + v22[7]) = *(void *)((char *)v20 + v22[7]);
    uint64_t v27 = v22[8];
    uint64_t v28 = (char *)v19 + v27;
    uint64_t v29 = (char *)v20 + v27;
    v28[2] = v29[2];
    *(_WORD *)uint64_t v28 = *(_WORD *)v29;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v30 = a3[14];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *(_OWORD *)((char *)a1 + v30) = *(_OWORD *)((char *)a2 + v30);
  uint64_t v33 = type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v34 = *(int *)(v33 + 20);
  uint64_t v35 = &v31[v34];
  char v36 = &v32[v34];
  uint64_t v37 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  *(_OWORD *)&v31[*(int *)(v33 + 24)] = *(_OWORD *)&v32[*(int *)(v33 + 24)];
  uint64_t v38 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v39 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  uint64_t v40 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  uint64_t v41 = a3[22];
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  uint64_t v42 = a3[23];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(_OWORD *)((char *)a1 + v41) = *(_OWORD *)((char *)a2 + v41);
  uint64_t v45 = sub_269840();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = sub_4A98(&qword_2EBC78);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = sub_4A98(qword_2EF0F8);
  *(void *)&v43[*(int *)(v48 + 28)] = *(void *)&v44[*(int *)(v48 + 28)];
  return a1;
}

_OWORD *sub_DA754(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_DDB6C((uint64_t)a1, type metadata accessor for PageBackground);
    uint64_t v6 = type metadata accessor for PageBackground(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_10;
      }
      *(void *)a1 = *(void *)a2;
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EA950) + 48);
      long long v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26A6E0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_4A98(&qword_2EA940);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_10:
    uint64_t v18 = a3[13];
    uint64_t v19 = (_WORD *)((char *)a1 + v18);
    uint64_t v20 = (_WORD *)((char *)a2 + v18);
    sub_B6DC((uint64_t)a1 + v18, &qword_2EA978);
    uint64_t v21 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v19 = *v20;
      long long v22 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v23 = v22[6];
      long long v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(void *)((char *)v19 + v22[7]) = *(void *)((char *)v20 + v22[7]);
      uint64_t v27 = v22[8];
      uint64_t v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      v28[2] = v29[2];
      *(_WORD *)uint64_t v28 = *(_WORD *)v29;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v30 = a3[14];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)((char *)a2 + v30 + 8);
  *uint64_t v31 = *(void *)((char *)a2 + v30);
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for SummaryFrameViewModel(0);
  uint64_t v35 = *(int *)(v34 + 20);
  char v36 = (char *)v31 + v35;
  uint64_t v37 = &v32[v35];
  uint64_t v38 = sub_269BE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = *(int *)(v34 + 24);
  uint64_t v40 = (void *)((char *)v31 + v39);
  uint64_t v41 = &v32[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
  uint64_t v45 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);
  uint64_t v46 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
  swift_release();
  uint64_t v47 = a3[22];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  void *v48 = *v49;
  v48[1] = v49[1];
  swift_release();
  uint64_t v50 = a3[23];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_269840();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  LODWORD(v36) = v55(v51, 1, v53);
  int v56 = v55(v52, 1, v53);
  if (!v36)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_18;
  }
  if (v56)
  {
LABEL_18:
    uint64_t v57 = sub_4A98(&qword_2EBC78);
    memcpy(v51, v52, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_19:
  uint64_t v58 = sub_4A98(qword_2EF0F8);
  *(void *)&v51[*(int *)(v58 + 28)] = *(void *)&v52[*(int *)(v58 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_DACC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DACDC);
}

uint64_t sub_DACDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PageBackground(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[13];
LABEL_7:
    uint64_t v10 = a1 + v13;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for SummaryFrameViewModel(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[15]);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = sub_4A98(qword_2EF0F8);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[23];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_DAEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DAEC4);
}

uint64_t sub_DAEC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for PageBackground(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EAB28);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[13];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = type metadata accessor for SummaryFrameViewModel(0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[14];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[15]) = (a2 - 1);
  }
  else
  {
    uint64_t v17 = sub_4A98(qword_2EF0F8);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[23];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_DB098()
{
  if (!qword_2EF180)
  {
    sub_7B0C(&qword_2EBC78);
    unint64_t v0 = sub_26C380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EF180);
    }
  }
}

uint64_t sub_DB0F4()
{
  return sub_7C18(&qword_2EF188, &qword_2EF190);
}

uint64_t sub_DB130()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for VerticalMasonryCoverGrid()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s7BooksUI33VerticalMasonryCoverGridViewModelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7BooksUI33VerticalMasonryCoverGridViewModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s7BooksUI33VerticalMasonryCoverGridViewModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s7BooksUI33VerticalMasonryCoverGridViewModelVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_DBC80(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalMasonryCoverGrid()
{
  return &type metadata for VerticalMasonryCoverGrid;
}

uint64_t sub_DBCD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_DBCEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_DBD2C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C8D7C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_DBD38()
{
  unint64_t result = qword_2EF1C0;
  if (!qword_2EF1C0)
  {
    sub_7B0C(&qword_2EF1B8);
    sub_DBDB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF1C0);
  }
  return result;
}

unint64_t sub_DBDB4()
{
  unint64_t result = qword_2EF1C8;
  if (!qword_2EF1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF1C8);
  }
  return result;
}

unint64_t sub_DBE08()
{
  unint64_t result = qword_2EF1D0;
  if (!qword_2EF1D0)
  {
    sub_7B0C(&qword_2EE8D8);
    sub_7C18(&qword_2EF1D8, &qword_2EE8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF1D0);
  }
  return result;
}

unint64_t sub_DBEA8()
{
  unint64_t result = qword_2EF208;
  if (!qword_2EF208)
  {
    sub_7B0C(&qword_2EF1F8);
    sub_D5A90(&qword_2EF210, &qword_2EF218, (void (*)(void))sub_DBF80);
    sub_DD984((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF208);
  }
  return result;
}

unint64_t sub_DBF80()
{
  unint64_t result = qword_2EF220;
  if (!qword_2EF220)
  {
    sub_7B0C(&qword_2EF228);
    sub_DD984(&qword_2EB880, (void (*)(uint64_t))type metadata accessor for CoverView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF220);
  }
  return result;
}

uint64_t sub_DC048()
{
  uint64_t v1 = type metadata accessor for ShareableAsset(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  sub_D56C8(*(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 24);
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_DC1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ShareableAsset(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_C9C08(a1, v6, a2);
}

uint64_t sub_DC278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for SummaryFrame() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_CF210(a1, v10, v5, v6, v7, v8, a2);
}

unint64_t sub_DC334()
{
  unint64_t result = qword_2EF238;
  if (!qword_2EF238)
  {
    sub_7B0C(&qword_2EEEC8);
    sub_DD984((unint64_t *)&qword_2EF240, (void (*)(uint64_t))type metadata accessor for TextLockup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF238);
  }
  return result;
}

unint64_t sub_DC3E0()
{
  unint64_t result = qword_2EF248;
  if (!qword_2EF248)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2EF248);
  }
  return result;
}

uint64_t sub_DC420()
{
  return sub_DC438((uint64_t (*)(void, void, void, void, void))sub_D13EC);
}

uint64_t sub_DC438(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_DC458()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for SharableAsset() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  sub_D56C8(*(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[15], v1);
  (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v3 + v2[16]);
  uint64_t v4 = v3 + v2[17];
  uint64_t v5 = sub_269840();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_DC5E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for SharableAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = type metadata accessor for SharableAsset();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1 + *(int *)(v6 + 56) + v5, v3);
}

uint64_t sub_DC6BC(uint64_t a1)
{
  return sub_D1914(a1, v1[6], v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_DC6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_D43CC(*(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1, *(double *)(v1 + 56));
}

uint64_t sub_DC6F8()
{
  uint64_t v1 = (int *)type metadata accessor for SummaryFrame();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = v3 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(v3 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = v3 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = v3 + v1[13];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v3 + v1[14];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v15 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v16 = v3 + v1[23];
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_4A98(qword_2EF0F8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_DCAAC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for SummaryFrame() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_D477C(a1, v10, v5, v6, v7, v8, a2);
}

uint64_t sub_DCB6C()
{
  return sub_DCFF8((uint64_t (*)(void, void, void, void, void, double, double, double))sub_D1F60);
}

uint64_t sub_DCB88()
{
  uint64_t v1 = (int *)type metadata accessor for SummaryFrame();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = v3 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(v3 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = v3 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = v3 + v1[13];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v3 + v1[14];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v15 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v16 = v3 + v1[23];
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_4A98(qword_2EF0F8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_DCF3C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void *)(type metadata accessor for SummaryFrame() - 8);
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_D40CC(v6, v1, v2, v3, v4);
}

uint64_t sub_DCFE0()
{
  return sub_DCFF8((uint64_t (*)(void, void, void, void, void, double, double, double))sub_D2640);
}

uint64_t sub_DCFF8(uint64_t (*a1)(void, void, void, void, void, double, double, double))
{
  return a1(*(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_DD018()
{
  uint64_t v1 = (int *)type metadata accessor for SummaryFrame();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = v3 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(v3 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = v3 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = v3 + v1[13];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v3 + v1[14];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v15 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v16 = v3 + v1[23];
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_4A98(qword_2EF0F8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_DD3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for SummaryFrame() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  double v13 = *(double *)((char *)v2 + v11);
  double v14 = *(double *)((char *)v2 + v12);
  double v15 = *(double *)((char *)v2 + v12 + 8);

  return sub_D2E64(a1, (uint64_t)v2 + v10, v5, v6, v7, v8, a2, v13, v14, v15);
}

uint64_t sub_DD4D8@<X0>(uint64_t a1@<X8>)
{
  return sub_D3350(*(void *)(v1 + 48), *(void *)(v1 + 56), *(double *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1, *(double *)(v1 + 64));
}

uint64_t sub_DD4F0()
{
  uint64_t v1 = (int *)type metadata accessor for SummaryFrame();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  type metadata accessor for PageBackground(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = v3 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      uint64_t v9 = sub_26A6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      break;
    case 1:
      if (!*(unsigned char *)(v3 + 56)) {
        _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 120))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      uint64_t v5 = v3 + *(int *)(sub_4A98(&qword_2EA950) + 48);
      uint64_t v6 = sub_26A6E0();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
  }
  uint64_t v10 = v3 + v1[13];
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v3 + v1[14];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for SummaryFrameViewModel(0) + 20);
  uint64_t v15 = sub_269BE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v16 = v3 + v1[23];
  uint64_t v17 = sub_269840();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_4A98(qword_2EF0F8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_DD8B0()
{
  return sub_CC5C8();
}

uint64_t sub_DD984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_DD9D4()
{
  unint64_t result = qword_2EF278;
  if (!qword_2EF278)
  {
    sub_7B0C(&qword_2EF270);
    sub_DDE20(&qword_2EF280, &qword_2EF268, (void (*)(void))sub_DDAAC);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF278);
  }
  return result;
}

unint64_t sub_DDAAC()
{
  unint64_t result = qword_2EF288;
  if (!qword_2EF288)
  {
    sub_7B0C(&qword_2EF290);
    sub_7C18(&qword_2EF298, &qword_2EF2A0);
    sub_7C18(&qword_2EF2A8, &qword_2EF2B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF288);
  }
  return result;
}

uint64_t sub_DDB6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_DDBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  if (a24) {
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_DDC28(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176));
  return a1;
}

uint64_t sub_DDCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a24)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_DDCF8()
{
  unint64_t result = qword_2EF2F8;
  if (!qword_2EF2F8)
  {
    sub_7B0C(&qword_2EF2F0);
    sub_DDD98();
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF2F8);
  }
  return result;
}

unint64_t sub_DDD98()
{
  unint64_t result = qword_2EF300;
  if (!qword_2EF300)
  {
    sub_7B0C(&qword_2EF308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF300);
  }
  return result;
}

uint64_t sub_DDE14(uint64_t result)
{
  *(unsigned char *)(result + 177) = 1;
  return result;
}

uint64_t sub_DDE20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_DDE8C()
{
  unint64_t result = qword_2EF330;
  if (!qword_2EF330)
  {
    sub_7B0C(&qword_2EF338);
    sub_7C18(&qword_2EF340, &qword_2EF348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF330);
  }
  return result;
}

uint64_t sub_DDF2C()
{
  return sub_D5A90(&qword_2EF358, &qword_2EF360, (void (*)(void))sub_DDF5C);
}

unint64_t sub_DDF5C()
{
  unint64_t result = qword_2EF368;
  if (!qword_2EF368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF368);
  }
  return result;
}

uint64_t sub_DDFB0(uint64_t result)
{
  *(unsigned char *)(result + 177) = 0;
  return result;
}

unint64_t sub_DDFBC()
{
  unint64_t result = qword_2EF390;
  if (!qword_2EF390)
  {
    sub_7B0C(&qword_2EF1A8);
    sub_7B0C(&qword_2EF198);
    sub_7C18(&qword_2EF1E0, &qword_2EF198);
    swift_getOpaqueTypeConformance2();
    sub_DD984((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF390);
  }
  return result;
}

uint64_t View.useDarkColorSchemeWhenInVibrantContext(isEnabled:)(char a1)
{
  uint64_t v2 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = swift_getKeyPath();
  v4[8] = 0;
  uint64_t v5 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *uint64_t v5 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  v4[*(int *)(v2 + 24)] = a1;
  sub_26C030();
  return sub_69098((uint64_t)v4);
}

uint64_t type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier()
{
  uint64_t result = qword_2EF3F0;
  if (!qword_2EF3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_DE22C()
{
  return swift_getWitnessTable();
}

unint64_t sub_DE298()
{
  unint64_t result = qword_2ECD18;
  if (!qword_2ECD18)
  {
    type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2ECD18);
  }
  return result;
}

unint64_t sub_DE2F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_DE434(uint64_t a1, uint64_t a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_DE4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_DE5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_DE6F4(a1 + v10);
    sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_DE6F4(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_DE754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_DE84C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_DE6F4(a1 + v10);
    uint64_t v13 = sub_4A98(&qword_2EA970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_DE960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DE974);
}

uint64_t sub_DE974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EAB20);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_DEA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DEA34);
}

uint64_t sub_DEA34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EAB20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_DEADC()
{
  sub_5501C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_DEB7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_DEB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UseDarkColorSchemeWhenInVibrantContextViewModifier();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_26A6E0();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EF430);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 24));
  sub_69034(v2, (uint64_t)v7);
  uint64_t v28 = a1;
  if (v14 != 1)
  {
    sub_69098((uint64_t)v7);
    uint64_t v19 = v27;
    goto LABEL_5;
  }
  uint64_t v26 = a2;
  uint64_t v15 = *(void *)v7;
  char v16 = v7[8];
  sub_10E0C(*(void *)v7, v16);
  char v17 = sub_40900(v15, v16);
  uint64_t v18 = v15;
  a2 = v26;
  sub_C374(v18, v16);
  sub_69098((uint64_t)v7);
  uint64_t v19 = v27;
  if ((v17 & 1) == 0)
  {
LABEL_5:
    sub_40FB4((uint64_t)v10);
    goto LABEL_6;
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ColorScheme.dark(_:), v27);
LABEL_6:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  uint64_t v22 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v21 + *(int *)(v22 + 28), v10, v19);
  *uint64_t v21 = KeyPath;
  uint64_t v23 = sub_4A98(&qword_2EF438);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v28, v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  return sub_DEF4C((uint64_t)v13, a2);
}

uint64_t sub_DEE5C()
{
  return sub_26ADD0();
}

uint64_t sub_DEE80(uint64_t a1)
{
  uint64_t v2 = sub_26A6E0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26ADE0();
}

uint64_t sub_DEF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EF430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_DEFB8()
{
  unint64_t result = qword_2EF440;
  if (!qword_2EF440)
  {
    sub_7B0C(&qword_2EF430);
    sub_7C18(&qword_2EF448, &qword_2EF438);
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF440);
  }
  return result;
}

uint64_t FlatCoverView.init(assetInfo:intrinsicSize:cornerRadius:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = swift_getKeyPath();
  *(unsigned char *)(a2 + 56) = 0;
  type metadata accessor for ProfileRestrictions();
  sub_E103C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *(void *)(a2 + 64) = sub_26AD70();
  *(void *)(a2 + 72) = v10;
  uint64_t v11 = (int *)type metadata accessor for FlatCoverView();
  uint64_t v12 = (uint64_t *)(a2 + v11[7]);
  *uint64_t v12 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t result = sub_AD44(a1, a2 + v11[8]);
  int v14 = (double *)(a2 + v11[9]);
  double *v14 = a3;
  v14[1] = a4;
  *(double *)(a2 + v11[10]) = a5;
  return result;
}

uint64_t FlatCoverView.body.getter@<X0>(void (**a1)(void *a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3 = type metadata accessor for FlatCoverView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_DF348();
  sub_E0FD4(v1, (uint64_t)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FlatCoverView);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_E00D8((uint64_t)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  type metadata accessor for ImageResourceLoader();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  sub_4A98(&qword_2EC2A8);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 28) = 0;
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = 0;
  *(void *)(v9 + 24) = v10;
  swift_retain();
  sub_269A40();
  v14[1] = v9;
  sub_26C340();
  uint64_t result = swift_release();
  uint64_t v12 = (void (*)(void *@<X0>, uint64_t@<X8>))v14[2];
  uint64_t v13 = (void (*)(void *@<X0>, uint64_t@<X8>))v14[3];
  *a1 = sub_E013C;
  a1[1] = (void (*)(void *@<X0>, uint64_t@<X8>))v8;
  a1[2] = (void (*)(void *@<X0>, uint64_t@<X8>))v6;
  a1[3] = v12;
  a1[4] = v13;
  return result;
}

uint64_t sub_DF348()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FlatCoverView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22[-2] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC((void *)(v0 + *(int *)(v3 + 32)), *(void *)(v0 + *(int *)(v3 + 32) + 24));
  uint64_t v6 = sub_269FA0();
  uint64_t v8 = v7;
  sub_E0FD4(v0, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
  if (v8)
  {
    uint64_t v9 = v8;
  }
  else
  {
    sub_4ADC(&v5[*(int *)(v2 + 32)], *(void *)&v5[*(int *)(v2 + 32) + 24]);
    uint64_t v6 = sub_269DB0();
    uint64_t v9 = v10;
  }
  sub_E1084((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
  sub_412A8((uint64_t)v25);
  uint64_t v11 = v26;
  uint64_t v12 = v27;
  sub_4ADC(v25, v26);
  v23[0] = v6;
  v23[1] = v9;
  BOOL v24 = v8 != 0;
  uint64_t v13 = (double *)(v0 + *(int *)(v2 + 36));
  double v14 = *v13;
  double v15 = v13[1];
  uint64_t v16 = *(void *)(v0 + 48);
  char v17 = *(unsigned char *)(v1 + 56);
  sub_10E0C(*(void *)(v1 + 48), v17);
  double v18 = sub_401C0(v16, v17);
  sub_C374(v16, v17);
  sub_DF980(v22);
  uint64_t v19 = (*(uint64_t (**)(void *, _WORD *, uint64_t, uint64_t, double, double, double))(v12 + 16))(v23, v22, v11, v12, v14, v15, v18);
  sub_2D7A4();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v25);
  return v19;
}

void sub_DF560(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = sub_4A98(&qword_2EF508);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_4A98(&qword_2EB8C0);
  __chkstk_darwin(v8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_26AC50();
  __chkstk_darwin(v11);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = sub_4A98(&qword_2EF510);
  uint64_t v14 = __chkstk_darwin(v37);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  double v18 = &v28[-v17];
  if (a1)
  {
    double v19 = *(double *)(a2 + *(int *)(type metadata accessor for FlatCoverView() + 40));
    id v20 = a1;
    UIImage.cornerRadius(_:)(v19);
    *uint64_t v7 = sub_26C240();
    swift_storeEnumTagMultiPayload();
    sub_E0E8C();
    swift_retain();
    sub_26B2F0();
    swift_release();
  }
  else
  {
    uint64_t v34 = sub_26C120();
    uint64_t v21 = type metadata accessor for FlatCoverView();
    uint64_t v33 = v8;
    uint64_t v35 = v5;
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v32 = v38;
    int v31 = v39;
    uint64_t v30 = v40;
    int v29 = v41;
    uint64_t v22 = *(void *)(a2 + *(int *)(v21 + 40));
    uint64_t v23 = v42;
    uint64_t v24 = v43;
    uint64_t v25 = (char *)v13 + *(int *)(v11 + 20);
    uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v27 = sub_26B160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
    *uint64_t v13 = v22;
    v13[1] = v22;
    sub_E0FD4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v10[*(int *)(v33 + 36)] = 256;
    sub_B678((uint64_t)v10, (uint64_t)&v16[*(int *)(v37 + 36)], &qword_2EB8C0);
    *(void *)uint64_t v16 = v34;
    *((_WORD *)v16 + 4) = 256;
    *((void *)v16 + 2) = v32;
    v16[24] = v31;
    *((void *)v16 + 4) = v30;
    v16[40] = v29;
    *((void *)v16 + 6) = v23;
    *((void *)v16 + 7) = v24;
    swift_retain();
    sub_B6DC((uint64_t)v10, &qword_2EB8C0);
    sub_E1084((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    swift_release();
    sub_E0E24((uint64_t)v16, (uint64_t)v18);
    sub_B678((uint64_t)v18, (uint64_t)v7, &qword_2EF510);
    swift_storeEnumTagMultiPayload();
    sub_E0E8C();
    sub_26B2F0();
    sub_B6DC((uint64_t)v18, &qword_2EF510);
  }
}

uint64_t sub_DF980@<X0>(_WORD *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_4A98(&qword_2EF540);
  __chkstk_darwin(v2 - 8);
  uint64_t v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26A6E0();
  uint64_t v37 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlatCoverView();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v1 + 64);
  if (v15)
  {
    unsigned int v16 = 16710908;
    swift_getKeyPath();
    swift_getKeyPath();
    id v17 = v15;
    sub_26A590();

    swift_release();
    swift_release();
    LOBYTE(v17) = v39[0];
    sub_E0FD4(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
    if (v17)
    {
      uint64_t result = sub_E1084((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
    }
    else
    {
      sub_4ADC(&v14[*(int *)(v12 + 32)], *(void *)&v14[*(int *)(v12 + 32) + 24]);
      char v19 = sub_269F30();
      uint64_t result = sub_E1084((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
      if (v19)
      {
        _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v11);
        sub_E0FD4((uint64_t)v11, (uint64_t)v8, type metadata accessor for ColorConstants.Environment);
        uint64_t v21 = v36;
        uint64_t v20 = v37;
        (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for ColorScheme.dark(_:), v4);
        sub_E103C((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
        char v22 = sub_26D360();
        uint64_t v23 = *(void (**)(char *, uint64_t))(v20 + 8);
        v23(v21, v4);
        v23(v8, v4);
        sub_E1084((uint64_t)v11, type metadata accessor for ColorConstants);
        char v24 = v22 ^ 1;
        uint64_t v25 = (void *)(v1 + *(int *)(v12 + 32));
        sub_4ADC(v25, v25[3]);
        uint64_t result = sub_269F20();
        if ((_BYTE)result)
        {
          if (result == 1)
          {
            sub_C224((uint64_t)v25, (uint64_t)v39);
            sub_4A98(&qword_2EE2C8);
            uint64_t v26 = sub_269D50();
            uint64_t v27 = (uint64_t)v35;
            int v28 = swift_dynamicCast();
            int v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
            if (v28)
            {
              uint64_t v30 = *(void *)(v26 - 8);
              v29(v27, 0, 1, v26);
              char v31 = sub_269D40();
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v27, v26);
            }
            else
            {
              v29(v27, 1, 1, v26);
              uint64_t result = sub_B6DC(v27, &qword_2EF540);
              char v31 = 0;
            }
            if (v22) {
              int v32 = 0x10000;
            }
            else {
              int v32 = 65792;
            }
            unsigned int v16 = v32 & 0xFFFFFFFE | v31 & 1;
          }
          else
          {
            unsigned int v16 = v24 & 1 | 0xFF800000;
          }
        }
        else
        {
          unsigned int v16 = (v24 & 1 | 0x10100) + 4128768;
        }
      }
    }
    uint64_t v33 = v38;
    _WORD *v38 = v16;
    *((unsigned char *)v33 + 2) = BYTE2(v16);
  }
  else
  {
    type metadata accessor for ProfileRestrictions();
    sub_E103C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    uint64_t result = sub_26AD60();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FlatCoverView()
{
  uint64_t result = qword_2EF4A8;
  if (!qword_2EF4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_DFF78()
{
  uint64_t v1 = type metadata accessor for FlatCoverView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  if (*(unsigned char *)(v0 + v2 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
  }
  else {
    swift_release();
  }
  sub_C374(*(void *)(v3 + 48), *(unsigned char *)(v3 + 56));

  uint64_t v4 = v3 + *(int *)(v1 + 28);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v3 + *(int *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_E00D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlatCoverView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_E013C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FlatCoverView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_DF560(a1, v6, a2);
}

uint64_t sub_E01BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for FlatCoverView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 40);
    if (v7)
    {
      long long v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    *(unsigned char *)(v4 + 40) = v7;
    uint64_t v10 = a2[6];
    char v11 = *((unsigned char *)a2 + 56);
    sub_10E0C(v10, v11);
    *(void *)(v4 + 48) = v10;
    *(unsigned char *)(v4 + 56) = v11;
    uint64_t v12 = (void *)a2[8];
    uint64_t v13 = a2[9];
    *(void *)(v4 + 64) = v12;
    *(void *)(v4 + 72) = v13;
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(v4 + v14);
    unsigned int v16 = (uint64_t *)((char *)a2 + v14);
    id v17 = v12;
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[8];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)(v4 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[10];
    *(_OWORD *)(v4 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    *(void *)(v4 + v21) = *(uint64_t *)((char *)a2 + v21);
  }
  return v4;
}

uint64_t destroy for FlatCoverView(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  else {
    swift_release();
  }
  sub_C374(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return _s7BooksUI13AnyPagedFrameVwxx_0(v6);
}

uint64_t initializeWithCopy for FlatCoverView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 40);
  if (v6)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  *(unsigned char *)(a1 + 40) = v6;
  uint64_t v8 = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a2 + 56);
  sub_10E0C(v8, v9);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  uint64_t v10 = *(void **)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  id v15 = v10;
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[8];
  long long v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  uint64_t v19 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t assignWithCopy for FlatCoverView(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, &qword_2EAB10);
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  sub_10E0C(v7, v8);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  sub_C374(v9, v10);
  uint64_t v11 = *(void **)(a1 + 64);
  uint64_t v12 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v12;
  id v13 = v12;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    id v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_B6DC(a1 + v14, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_16D58((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  long long v20 = (void *)(a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for FlatCoverView(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = a3[7];
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v10 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v12;
  id v15 = (long long *)(a2 + v12);
  long long v16 = *v15;
  long long v17 = v15[1];
  *(void *)(v14 + 32) = *((void *)v15 + 4);
  *(_OWORD *)uint64_t v14 = v16;
  *(_OWORD *)(v14 + 16) = v17;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for FlatCoverView(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, &qword_2EAB10);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v7;
  sub_C374(v8, v9);
  uint64_t v10 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_B6DC(a1 + v11, &qword_2EA968);
    uint64_t v14 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlatCoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E0B1C);
}

uint64_t sub_E0B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 24);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FlatCoverView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E0BFC);
}

uint64_t sub_E0BFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 24) = (a2 - 1);
  }
  return result;
}

void sub_E0CC4()
{
  sub_E0D90();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_E0D90()
{
  if (!qword_2EAB98)
  {
    type metadata accessor for ColorConstants(255);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EAB98);
    }
  }
}

uint64_t sub_E0DE8()
{
  return sub_7C18(&qword_2EF4F8, &qword_2EF500);
}

uint64_t sub_E0E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EF510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_E0E8C()
{
  unint64_t result = qword_2EF518;
  if (!qword_2EF518)
  {
    sub_7B0C(&qword_2EF510);
    sub_E0F2C();
    sub_7C18(&qword_2EB8B8, &qword_2EB8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF518);
  }
  return result;
}

unint64_t sub_E0F2C()
{
  unint64_t result = qword_2EF520;
  if (!qword_2EF520)
  {
    sub_7B0C(&qword_2EF528);
    sub_7C18(&qword_2EF530, &qword_2EF538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF520);
  }
  return result;
}

uint64_t sub_E0FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_E103C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_E1084(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_E10E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_4A98(&qword_2EA770);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  long long v19 = (char *)&v33 - v18;
  uint64_t v37 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  sub_41AD8(a1);
  sub_E1F34(v1, (uint64_t)v8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v20(v8, 1, v9) == 1)
  {
    sub_B6DC((uint64_t)v8, &qword_2EA770);
  }
  else
  {
    uint64_t v34 = v1;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v33(v19, v8, v9);
    sub_E3C74(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (sub_26D340())
    {
      uint64_t v21 = v17;
      char v22 = (char *)a1;
    }
    else
    {
      uint64_t v21 = v17;
      char v22 = v19;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v22, v9);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
    v23(v19, v9);
    v23((char *)a1, v9);
    v33((char *)a1, v17, v9);
    uint64_t v2 = v34;
  }
  uint64_t v24 = v38;
  sub_E1F34(v2 + *(int *)(v37 + 20), v38);
  if (v20((char *)v24, 1, v9) == 1) {
    return sub_B6DC(v24, &qword_2EA770);
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  uint64_t v27 = v35;
  v26(v35, v24, v9);
  sub_E3C74(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v28 = sub_26D330();
  int v29 = v36;
  if (v28)
  {
    uint64_t v30 = v36;
    uint64_t v31 = a1;
  }
  else
  {
    uint64_t v30 = v36;
    uint64_t v31 = (uint64_t)v27;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v30, v31, v9);
  int v32 = *(void (**)(char *, uint64_t))(v10 + 8);
  v32(v27, v9);
  v32((char *)a1, v9);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(a1, v29, v9);
}

uint64_t sub_E150C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26B0A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EA770);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E3998();
  sub_26B0B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  uint64_t v10 = sub_26AB40();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_26AE90();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_B6DC((uint64_t)v9, &qword_2EA770);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v9, v10);
  }
}

uint64_t sub_E1710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EA770);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E3998();
  sub_26B0B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = sub_26AB40();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_26AE90();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_B6DC((uint64_t)v10, &qword_2EA770);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v10, v11);
  }
}

uint64_t sub_E1918(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26AB40();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9(v8, a1, v5);
  v9(v4, (uint64_t)v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_E3998();
  sub_26B0C0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_E1AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = sub_26AB40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EF608);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_41AD8((uint64_t)v6);
  uint64_t v11 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  uint64_t v12 = sub_4A98(&qword_2EF610);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v11 + *(int *)(v12 + 28), v6, v3);
  *uint64_t v11 = KeyPath;
  uint64_t v13 = sub_4A98(&qword_2EF618);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, a1, v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  sub_E10E4((uint64_t)v6);
  sub_E38D4();
  sub_26BD80();
  v14(v6, v3);
  return sub_B6DC((uint64_t)v9, &qword_2EF608);
}

uint64_t View.restrictedDynamicTypeSize(min:max:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v23[2] = a4;
  v23[1] = a3;
  uint64_t v6 = sub_4A98(&qword_2EA770);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v23 - v16;
  sub_E1F34(a1, (uint64_t)v11);
  sub_E1F34(a2, (uint64_t)v9);
  uint64_t v18 = sub_26AB40();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v15, 1, 1, v18);
  uint64_t v20 = (uint64_t)&v15[*(int *)(v12 + 20)];
  v19((char *)v20, 1, 1, v18);
  uint64_t v21 = (uint64_t *)&v15[*(int *)(v12 + 24)];
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  sub_E1FA4((uint64_t)v11, (uint64_t)v15);
  sub_E1FA4((uint64_t)v9, v20);
  sub_E200C((uint64_t)v15, (uint64_t)v17);
  sub_26C030();
  return sub_E2070((uint64_t)v17);
}

uint64_t type metadata accessor for RestrictedDynamicTypeSizeViewModifier()
{
  uint64_t result = qword_2EF5C0;
  if (!qword_2EF5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_E1F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E1FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_E200C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_E2070(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.nonAXDynamicTypeSize()(uint64_t a1, uint64_t a2)
{
  v20[2] = a2;
  v20[1] = a1;
  uint64_t v2 = sub_4A98(&qword_2EA770);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t v8 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v14 = sub_26AB40();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v16(v7, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v5, enum case for DynamicTypeSize.xxxLarge(_:), v14);
  v16(v5, 0, 1, v14);
  v16(v11, 1, 1, v14);
  uint64_t v17 = (uint64_t)&v11[*(int *)(v8 + 20)];
  v16((char *)v17, 1, 1, v14);
  uint64_t v18 = (uint64_t *)&v11[*(int *)(v8 + 24)];
  *uint64_t v18 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  sub_E1FA4((uint64_t)v7, (uint64_t)v11);
  sub_E1FA4((uint64_t)v5, v17);
  sub_E200C((uint64_t)v11, (uint64_t)v13);
  sub_26C030();
  return sub_E2070((uint64_t)v13);
}

uint64_t View.unrestrictedDynamicTypeSize()(uint64_t a1, uint64_t a2)
{
  v19[2] = a2;
  v19[1] = a1;
  uint64_t v2 = sub_4A98(&qword_2EA770);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v19 - v6;
  uint64_t v8 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v14 = sub_26AB40();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v15(v11, 1, 1, v14);
  uint64_t v16 = (uint64_t)&v11[*(int *)(v8 + 20)];
  v15((char *)v16, 1, 1, v14);
  uint64_t v17 = (uint64_t *)&v11[*(int *)(v8 + 24)];
  *uint64_t v17 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  sub_E1FA4((uint64_t)v7, (uint64_t)v11);
  sub_E1FA4((uint64_t)v5, v16);
  sub_E200C((uint64_t)v11, (uint64_t)v13);
  sub_26C030();
  return sub_E2070((uint64_t)v13);
}

uint64_t sub_E2580()
{
  return swift_getWitnessTable();
}

uint64_t *sub_E261C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26AB40();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_4A98(&qword_2EA770);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_4A98(&qword_2EA770);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v17, v18, v7);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_E28B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26AB40();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v8(v7, v4);
  }
  else
  {
    return swift_release();
  }
}

char *sub_E2A34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_4A98(&qword_2EA770);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA770);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_E2C78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA770);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v17 = sub_4A98(&qword_2EA770);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_14;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
  if (a1 == a2) {
    return a1;
  }
LABEL_14:
  uint64_t v18 = *(int *)(a3 + 24);
  long long v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  sub_B6DC((uint64_t)&a1[v18], &qword_2EBC60);
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  }
  else
  {
    *(void *)long long v19 = *(void *)v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_E2FA4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_4A98(&qword_2EA770);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA770);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  uint64_t v17 = sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

char *sub_E31F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4A98(&qword_2EA770);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v17 = sub_4A98(&qword_2EA770);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_14;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
  if (a1 == a2) {
    return a1;
  }
LABEL_14:
  uint64_t v18 = *(int *)(a3 + 24);
  long long v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  sub_B6DC((uint64_t)&a1[v18], &qword_2EBC60);
  uint64_t v21 = sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  return a1;
}

uint64_t sub_E3524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E3538);
}

uint64_t sub_E3538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2ED0D8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_E3638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E364C);
}

uint64_t sub_E364C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EA770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2ED0D8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_E3758()
{
  sub_E3858(319, (unint64_t *)&qword_2EF5D0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_E3858(319, (unint64_t *)&qword_2ED148, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_E3858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_26AB40();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_E38B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_E38D4()
{
  unint64_t result = qword_2EF620;
  if (!qword_2EF620)
  {
    sub_7B0C(&qword_2EF608);
    sub_7C18(&qword_2EF628, &qword_2EF618);
    sub_7C18(&qword_2EF630, &qword_2EF610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF620);
  }
  return result;
}

unint64_t sub_E3998()
{
  unint64_t result = qword_2EF638;
  if (!qword_2EF638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF638);
  }
  return result;
}

ValueMetadata *type metadata accessor for OriginalDynamicTypeSizeKey()
{
  return &type metadata for OriginalDynamicTypeSizeKey;
}

uint64_t sub_E39FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_E3A58()
{
  uint64_t v0 = sub_4A98(&qword_2EA770);
  sub_6E18(v0, qword_2EF548);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2EF548);
  uint64_t v2 = sub_26AB40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_E3AF0@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9C20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4A98(&qword_2EA770);
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2EF548);

  return sub_E1F34(v3, a1);
}

uint64_t sub_E3B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_E3BD0();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_E3BD0()
{
  unint64_t result = qword_2EF640;
  if (!qword_2EF640)
  {
    sub_7B0C(&qword_2EA770);
    sub_E3C74(&qword_2EB610, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF640);
  }
  return result;
}

uint64_t sub_E3C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ListItemMetadataTitleWithSubtitle.init(title:subtitle:size:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a5;
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = v6;
  return result;
}

void ListItemMetadataTitleWithSubtitle.size.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *ListItemMetadataTitleWithSubtitle.size.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t ListItemMetadataTitleWithSubtitle.title(localizer:)()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ListItemMetadataTitleWithSubtitle.subtitle(localizer:)()
{
  if (*(void *)(v0 + 24)) {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_E3D88()
{
  uint64_t v1 = 0x656C746974627573;
  if (*v0 != 1) {
    uint64_t v1 = 1702521203;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_E3DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_E473C(a1, a2);
  *a3 = result;
  return result;
}

void sub_E3E00(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_E3E0C(uint64_t a1)
{
  unint64_t v2 = sub_E4114();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E3E48(uint64_t a1)
{
  unint64_t v2 = sub_E4114();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListItemMetadataTitleWithSubtitle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2EF648);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_E4114();
  sub_26DFC0();
  if (v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  else
  {
    char v22 = 0;
    uint64_t v9 = sub_26DC70();
    uint64_t v12 = v11;
    uint64_t v18 = v9;
    char v21 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_26DC30();
    uint64_t v15 = v14;
    uint64_t v17 = v13;
    char v19 = 2;
    sub_E4168();
    swift_bridgeObjectRetain();
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v16 = v20;
    *(void *)a2 = v18;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 32) = v16;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_E4114()
{
  unint64_t result = qword_2EF650;
  if (!qword_2EF650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF650);
  }
  return result;
}

unint64_t sub_E4168()
{
  unint64_t result = qword_2EF658;
  if (!qword_2EF658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF658);
  }
  return result;
}

unint64_t sub_E41BC(uint64_t a1)
{
  unint64_t result = sub_E41E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_E41E4()
{
  unint64_t result = qword_2EF660;
  if (!qword_2EF660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF660);
  }
  return result;
}

unint64_t sub_E4238(uint64_t a1)
{
  unint64_t result = sub_E4260();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_E4260()
{
  unint64_t result = qword_2EF668;
  if (!qword_2EF668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF668);
  }
  return result;
}

uint64_t sub_E42B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListItemMetadataTitleWithSubtitle.init(from:)(a1, a2);
}

unint64_t sub_E42CC(uint64_t a1)
{
  unint64_t result = sub_E42F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_E42F4()
{
  unint64_t result = qword_2EF670;
  if (!qword_2EF670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF670);
  }
  return result;
}

uint64_t destroy for ListItemMetadataTitleWithSubtitle()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListItemMetadataTitleWithSubtitle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ListItemMetadataTitleWithSubtitle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ListItemMetadataTitleWithSubtitle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataTitleWithSubtitle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataTitleWithSubtitle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataTitleWithSubtitle()
{
  return &type metadata for ListItemMetadataTitleWithSubtitle;
}

unsigned char *storeEnumTagSinglePayload for ListItemMetadataTitleWithSubtitle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE45FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataTitleWithSubtitle.CodingKeys()
{
  return &type metadata for ListItemMetadataTitleWithSubtitle.CodingKeys;
}

unint64_t sub_E4638()
{
  unint64_t result = qword_2EF678;
  if (!qword_2EF678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF678);
  }
  return result;
}

unint64_t sub_E4690()
{
  unint64_t result = qword_2EF680;
  if (!qword_2EF680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF680);
  }
  return result;
}

unint64_t sub_E46E8()
{
  unint64_t result = qword_2EF688;
  if (!qword_2EF688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF688);
  }
  return result;
}

uint64_t sub_E473C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t SeriesHeaderCoverStackLayout.init(covers:pageWidth:heroWidthScale:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char **a3@<X8>, double a4@<D0>)
{
  uint64_t v7 = *a2;
  if (*(void *)(a1 + 16) >= 5uLL) {
    uint64_t v8 = 5;
  }
  else {
    uint64_t v8 = *(void *)(a1 + 16);
  }
  sub_26DE10();
  swift_unknownObjectRetain_n();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = &_swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  swift_release();
  if (v10 == v8)
  {
    uint64_t v11 = (double *)swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = (double *)&_swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (double *)sub_E6888(a1, a1 + 32, 0, (2 * v8) | 1);
  }
  swift_bridgeObjectRelease();
  if (*((void *)v11 + 2))
  {
    uint64_t v58 = &v57;
    uint64_t v59 = a3;
    uint64_t v12 = (uint64_t)(v11 + 4);
    double v13 = v11[15];
    double v14 = dbl_2763E0[v7] * a4;
    uint64_t v15 = *((void *)v11 + 2);
    swift_retain();
    if (v15)
    {
      unint64_t v16 = 0;
      uint64_t v60 = &v65;
      uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
      long long v61 = xmmword_276260;
      uint64_t v18 = (uint64_t)(v11 + 4);
      do
      {
        sub_6C0F8(v18, (uint64_t)v78 + 8);
        unint64_t v83 = v16;
        long long v92 = *(_OWORD *)((char *)&v78[8] + 8);
        long long v93 = *(_OWORD *)((char *)&v78[9] + 8);
        uint64_t v94 = *((void *)&v78[10] + 1);
        long long v88 = *(_OWORD *)((char *)&v78[4] + 8);
        long long v89 = *(_OWORD *)((char *)&v78[5] + 8);
        long long v90 = *(_OWORD *)((char *)&v78[6] + 8);
        long long v91 = *(_OWORD *)((char *)&v78[7] + 8);
        long long v84 = *(_OWORD *)((char *)v78 + 8);
        long long v85 = *(_OWORD *)((char *)&v78[1] + 8);
        long long v86 = *(_OWORD *)((char *)&v78[2] + 8);
        long long v87 = *(_OWORD *)((char *)&v78[3] + 8);
        sub_6C0F8((uint64_t)&v84, (uint64_t)v76);
        uint64_t v19 = *((void *)v11 + 2);
        *(_OWORD *)&v64[8] = v61;
        *(void *)&v64[24] = 0x3FE4834834834834;
        if (v16 > 4)
        {
          sub_2D738((uint64_t)v76);
          memset(v78, 0, sizeof(v78));
          long long v79 = 0u;
          long long v80 = 0u;
          long long v81 = 0u;
          uint64_t v82 = 0;
        }
        else
        {
          LOBYTE(v62) = v16;
          sub_6C0F8((uint64_t)v76, (uint64_t)v60);
          uint64_t v20 = v77;
          sub_2D738((uint64_t)v76);
          *((void *)&v62 + 1) = v20;
          *(double *)&long long v63 = v13;
          *((double *)&v63 + 1) = v14;
          *(void *)uint64_t v64 = v19;
          sub_E6A1C((uint64_t)&v62, (uint64_t)v78);
          sub_E6A78((uint64_t)&v62);
        }
        sub_B6DC((uint64_t)&v83, &qword_2EF690);
        if (*((void *)&v78[10] + 1))
        {
          long long v73 = v80;
          long long v74 = v81;
          uint64_t v75 = v82;
          long long v69 = v78[8];
          long long v70 = v78[9];
          long long v71 = v78[10];
          long long v72 = v79;
          long long v65 = v78[4];
          long long v66 = v78[5];
          long long v67 = v78[6];
          long long v68 = v78[7];
          long long v62 = v78[0];
          long long v63 = v78[1];
          *(_OWORD *)uint64_t v64 = v78[2];
          *(_OWORD *)&v64[16] = v78[3];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v17 = sub_E5C90(0, *((void *)v17 + 2) + 1, 1, v17);
          }
          unint64_t v22 = *((void *)v17 + 2);
          unint64_t v21 = *((void *)v17 + 3);
          if (v22 >= v21 >> 1) {
            uint64_t v17 = sub_E5C90((char *)(v21 > 1), v22 + 1, 1, v17);
          }
          *((void *)v17 + 2) = v22 + 1;
          uint64_t v23 = &v17[232 * v22];
          long long v24 = v62;
          long long v25 = *(_OWORD *)v64;
          *((_OWORD *)v23 + 3) = v63;
          *((_OWORD *)v23 + 4) = v25;
          *((_OWORD *)v23 + 2) = v24;
          long long v26 = *(_OWORD *)&v64[16];
          long long v27 = v65;
          long long v28 = v67;
          *((_OWORD *)v23 + 7) = v66;
          *((_OWORD *)v23 + 8) = v28;
          *((_OWORD *)v23 + 5) = v26;
          *((_OWORD *)v23 + 6) = v27;
          long long v29 = v68;
          long long v30 = v69;
          long long v31 = v71;
          *((_OWORD *)v23 + 11) = v70;
          *((_OWORD *)v23 + 12) = v31;
          *((_OWORD *)v23 + 9) = v29;
          *((_OWORD *)v23 + 10) = v30;
          long long v32 = v72;
          long long v33 = v73;
          long long v34 = v74;
          *((void *)v23 + 32) = v75;
          *((_OWORD *)v23 + 14) = v33;
          *((_OWORD *)v23 + 15) = v34;
          *((_OWORD *)v23 + 13) = v32;
        }
        else
        {
          sub_B6DC((uint64_t)v78, &qword_2EF698);
        }
        ++v16;
        v18 += 168;
      }
      while (v15 != v16);
    }
    else
    {
      uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
    }
    swift_release();
    double v36 = v13 * v14 + sub_E6D5C((uint64_t)v17);
    double v37 = v36 + sub_E6E4C((uint64_t)v17);
    if (v37 <= a4)
    {
      uint64_t result = swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v58 = &v57;
      double v14 = v14 * (a4 / v37);
      uint64_t v38 = *((void *)v11 + 2);
      swift_retain();
      if (v38)
      {
        unint64_t v39 = 0;
        uint64_t v60 = &v65;
        uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
        long long v61 = xmmword_276260;
        do
        {
          sub_6C0F8(v12, (uint64_t)v78 + 8);
          unint64_t v83 = v39;
          long long v92 = *(_OWORD *)((char *)&v78[8] + 8);
          long long v93 = *(_OWORD *)((char *)&v78[9] + 8);
          uint64_t v94 = *((void *)&v78[10] + 1);
          long long v88 = *(_OWORD *)((char *)&v78[4] + 8);
          long long v89 = *(_OWORD *)((char *)&v78[5] + 8);
          long long v90 = *(_OWORD *)((char *)&v78[6] + 8);
          long long v91 = *(_OWORD *)((char *)&v78[7] + 8);
          long long v84 = *(_OWORD *)((char *)v78 + 8);
          long long v85 = *(_OWORD *)((char *)&v78[1] + 8);
          long long v86 = *(_OWORD *)((char *)&v78[2] + 8);
          long long v87 = *(_OWORD *)((char *)&v78[3] + 8);
          sub_6C0F8((uint64_t)&v84, (uint64_t)v76);
          uint64_t v40 = *((void *)v11 + 2);
          *(_OWORD *)&v64[8] = v61;
          *(void *)&v64[24] = 0x3FE4834834834834;
          if (v39 > 4)
          {
            sub_2D738((uint64_t)v76);
            memset(v78, 0, sizeof(v78));
            long long v79 = 0u;
            long long v80 = 0u;
            long long v81 = 0u;
            uint64_t v82 = 0;
          }
          else
          {
            LOBYTE(v62) = v39;
            sub_6C0F8((uint64_t)v76, (uint64_t)v60);
            uint64_t v41 = v77;
            sub_2D738((uint64_t)v76);
            *((void *)&v62 + 1) = v41;
            *(double *)&long long v63 = v13;
            *((double *)&v63 + 1) = v14;
            *(void *)uint64_t v64 = v40;
            sub_E6A1C((uint64_t)&v62, (uint64_t)v78);
            sub_E6A78((uint64_t)&v62);
          }
          sub_B6DC((uint64_t)&v83, &qword_2EF690);
          if (*((void *)&v78[10] + 1))
          {
            long long v73 = v80;
            long long v74 = v81;
            uint64_t v75 = v82;
            long long v69 = v78[8];
            long long v70 = v78[9];
            long long v71 = v78[10];
            long long v72 = v79;
            long long v65 = v78[4];
            long long v66 = v78[5];
            long long v67 = v78[6];
            long long v68 = v78[7];
            long long v62 = v78[0];
            long long v63 = v78[1];
            *(_OWORD *)uint64_t v64 = v78[2];
            *(_OWORD *)&v64[16] = v78[3];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v17 = sub_E5C90(0, *((void *)v17 + 2) + 1, 1, v17);
            }
            unint64_t v43 = *((void *)v17 + 2);
            unint64_t v42 = *((void *)v17 + 3);
            if (v43 >= v42 >> 1) {
              uint64_t v17 = sub_E5C90((char *)(v42 > 1), v43 + 1, 1, v17);
            }
            *((void *)v17 + 2) = v43 + 1;
            uint64_t v44 = &v17[232 * v43];
            long long v45 = v62;
            long long v46 = *(_OWORD *)v64;
            *((_OWORD *)v44 + 3) = v63;
            *((_OWORD *)v44 + 4) = v46;
            *((_OWORD *)v44 + 2) = v45;
            long long v47 = *(_OWORD *)&v64[16];
            long long v48 = v65;
            long long v49 = v67;
            *((_OWORD *)v44 + 7) = v66;
            *((_OWORD *)v44 + 8) = v49;
            *((_OWORD *)v44 + 5) = v47;
            *((_OWORD *)v44 + 6) = v48;
            long long v50 = v68;
            long long v51 = v69;
            long long v52 = v71;
            *((_OWORD *)v44 + 11) = v70;
            *((_OWORD *)v44 + 12) = v52;
            *((_OWORD *)v44 + 9) = v50;
            *((_OWORD *)v44 + 10) = v51;
            long long v53 = v72;
            long long v54 = v73;
            long long v55 = v74;
            *((void *)v44 + 32) = v75;
            *((_OWORD *)v44 + 14) = v54;
            *((_OWORD *)v44 + 15) = v55;
            *((_OWORD *)v44 + 13) = v53;
          }
          else
          {
            sub_B6DC((uint64_t)v78, &qword_2EF698);
          }
          ++v39;
          v12 += 168;
        }
        while (v38 != v39);
      }
      else
      {
        uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
      }
      uint64_t result = swift_release_n();
    }
    int v56 = v59;
    *uint64_t v59 = v17;
    *((double *)v56 + 1) = v14;
    *((double *)v56 + 2) = v13;
  }
  else
  {
    uint64_t result = swift_release();
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

void SeriesHeaderCoverStackLayout.HeroWidthScale.init(rawValue:)(char *a1@<X8>, double a2@<D0>)
{
  if (a2 == 0.27)
  {
    *a1 = 0;
  }
  else if (a2 == 0.51)
  {
    *a1 = 1;
  }
  else if (a2 == 0.78)
  {
    *a1 = 2;
  }
  else
  {
    if (a2 == 1.0) {
      char v2 = 3;
    }
    else {
      char v2 = 4;
    }
    *a1 = v2;
  }
}

double SeriesHeaderCoverStackLayout.HeroWidthScale.rawValue.getter()
{
  return dbl_2763E0[*v0];
}

BOOL sub_E4F80(char *a1, char *a2)
{
  return dbl_2763E0[*a1] == dbl_2763E0[*a2];
}

Swift::Int sub_E4FA4()
{
  return sub_181AC8(0, *v0);
}

void sub_E4FB0()
{
  sub_26DF10(qword_2763C0[*v0]);
}

Swift::Int sub_E4FE8(uint64_t a1)
{
  return sub_181AC8(a1, *v1);
}

void sub_E4FF0(double *a1@<X0>, char *a2@<X8>)
{
}

double sub_E4FF8@<D0>(double *a1@<X8>)
{
  double result = dbl_2763E0[*v1];
  *a1 = result;
  return result;
}

uint64_t SeriesHeaderCoverStackLayout.axIsSeries.getter()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 16) < 2uLL) {
    return 0;
  }
  sub_E6A1C(v1 + 32, (uint64_t)v12);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  uint64_t v4 = v16;
  uint64_t v5 = v17;
  sub_E6F48(v14, v15);
  sub_2D738((uint64_t)&v13);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v1 + 256);
    while (*(v7 - 5) && v5 != 0)
    {
      if (!*v7 || (*(v7 - 1) == v4 ? (BOOL v9 = *v7 == v5) : (BOOL v9 = 0), !v9 && (sub_26DDB0() & 1) == 0))
      {
        uint64_t v10 = 0;
        goto LABEL_20;
      }
      v7 += 29;
      if (!--v6) {
        goto LABEL_18;
      }
    }
    uint64_t v10 = 0;
  }
  else
  {
LABEL_18:
    uint64_t v10 = 1;
  }
LABEL_20:
  sub_E6F98(v2, v3);
  return v10;
}

uint64_t SeriesHeaderCoverStackLayout.axLabel.getter()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 16) < 2uLL) {
    return 0;
  }
  sub_E6A1C(v1 + 32, (uint64_t)v13);
  uint64_t v3 = v14[14];
  uint64_t v2 = v15;
  uint64_t v4 = v16;
  uint64_t v5 = v17;
  swift_bridgeObjectRetain();
  sub_E6F48(v3, v2);
  sub_2D738((uint64_t)v14);
  if (!v2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v1 + 256);
    while (1)
    {
      if (!*(v7 - 5))
      {
LABEL_14:
        uint64_t v9 = v3;
        uint64_t v10 = v2;
        goto LABEL_20;
      }
      if (!v5) {
        break;
      }
      if (!*v7) {
        goto LABEL_14;
      }
      BOOL v8 = *(v7 - 1) == v4 && *v7 == v5;
      if (!v8 && (sub_26DDB0() & 1) == 0) {
        goto LABEL_14;
      }
      v7 += 29;
      if (!--v6) {
        goto LABEL_15;
      }
    }
    uint64_t v9 = v3;
    uint64_t v10 = v2;
LABEL_20:
    sub_E6F98(v9, v10);
    goto LABEL_21;
  }
LABEL_15:
  sub_E6F98(v3, v2);
  swift_bridgeObjectRelease();
  sub_E6A1C(v1 + 32, (uint64_t)v13);
  uint64_t v11 = 0;
  if (v15 && v17)
  {
    uint64_t v11 = v16;
    swift_bridgeObjectRetain();
  }
  sub_2D738((uint64_t)v14);
  return v11;
}

double SeriesHeaderCoverStackLayout.intrinsicSize.getter()
{
  double v1 = *(double *)(v0 + 8) * *(double *)(v0 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  double v3 = v1 + sub_E6D5C(v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  double v5 = sub_E6E4C(v4);
  swift_bridgeObjectRelease_n();
  return v3 + v5;
}

double SeriesHeaderCoverStackLayout.centeringOffset.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  double v3 = sub_E6D5C(v2);
  double v4 = sub_E6E4C(v1);
  swift_bridgeObjectRelease();
  return (v3 - v4) * 0.5;
}

BOOL static SeriesHeaderCoverStackLayout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 8);
  double v2 = *(double *)(a1 + 16);
  double v5 = *(double *)(a2 + 8);
  double v4 = *(double *)(a2 + 16);
  char v6 = sub_E5440(*(void *)a1, *(void *)a2);
  BOOL result = 0;
  if ((v6 & 1) != 0 && v3 == v5) {
    return v2 == v4;
  }
  return result;
}

uint64_t sub_E5440(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a1 + 32;
    for (uint64_t i = a2 + 32; ; i += 232)
    {
      sub_E6A1C(v3, (uint64_t)v57);
      sub_E6A1C(i, (uint64_t)v37);
      if (v57[0] != v37[0]
        || v58 != v38
        || v59 != v39
        || v60 != v40
        || v61 != v41
        || v62 != v42
        || v63 != v43
        || v64 != v44
        || (_s7BooksUI14CoverViewModelV5StyleO2eeoiySbAE_AEtFZ_0((uint64_t)v65, (uint64_t)v45) & 1) == 0
        || v65[8] != v45[8]
        || v65[9] != v45[9]
        || v66 != v46
        || v67 != v47)
      {
        break;
      }
      if ((v68 != v48 || v69 != v49) && (sub_26DDB0() & 1) == 0) {
        break;
      }
      uint64_t v5 = v70;
      uint64_t v6 = v71;
      uint64_t v7 = v72;
      uint64_t v8 = v73;
      int v9 = v74;
      uint64_t v10 = v75;
      uint64_t v11 = v76;
      uint64_t v12 = v50;
      uint64_t v13 = v51;
      uint64_t v14 = v52;
      uint64_t v15 = v53;
      int v17 = v54;
      uint64_t v16 = v55;
      uint64_t v18 = v56;
      if (v71)
      {
        if (!v51)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = 0;
LABEL_45:
          sub_E6F48(v12, v13);
          sub_E6F98(v5, v6);
          sub_E6F98(v12, v13);
          break;
        }
        if (v70 != v50 || v71 != v51)
        {
          uint64_t v19 = v76;
          uint64_t v35 = v73;
          uint64_t v36 = v52;
          uint64_t v34 = v53;
          uint64_t v20 = v72;
          int v21 = v54;
          int v22 = v74;
          uint64_t v23 = v75;
          uint64_t v24 = v56;
          uint64_t v25 = v55;
          char v26 = sub_26DDB0();
          uint64_t v14 = v36;
          int v9 = v22;
          int v17 = v21;
          uint64_t v7 = v20;
          uint64_t v15 = v34;
          uint64_t v8 = v35;
          uint64_t v16 = v25;
          uint64_t v18 = v24;
          uint64_t v11 = v19;
          uint64_t v10 = v23;
          if ((v26 & 1) == 0) {
            break;
          }
        }
        if (v7 == v14 && v8 == v15)
        {
          if ((v17 ^ v9)) {
            break;
          }
        }
        else
        {
          uint64_t v27 = v11;
          int v28 = v17;
          int v29 = v9;
          uint64_t v30 = v10;
          uint64_t v31 = v18;
          uint64_t v32 = v16;
          if ((sub_26DDB0() & 1) == 0) {
            break;
          }
          uint64_t v16 = v32;
          uint64_t v18 = v31;
          uint64_t v11 = v27;
          uint64_t v10 = v30;
          if ((v28 ^ v29)) {
            break;
          }
        }
        if (v11)
        {
          if (!v18 || (v10 != v16 || v11 != v18) && (sub_26DDB0() & 1) == 0) {
            break;
          }
        }
        else if (v18)
        {
          break;
        }
      }
      else if (v51)
      {
        goto LABEL_45;
      }
      sub_E6A78((uint64_t)v37);
      sub_E6A78((uint64_t)v57);
      v3 += 232;
      uint64_t result = 1;
      if (!--v2) {
        return result;
      }
    }
    sub_E6A78((uint64_t)v37);
    sub_E6A78((uint64_t)v57);
  }
  return 0;
}

uint64_t sub_E5808(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a1 + 32;
    for (uint64_t i = a2 + 32; ; i += 208)
    {
      sub_E7BC4(v3, (uint64_t)v54);
      sub_E7BC4(i, (uint64_t)v37);
      if (v54[0] != v37[0]
        || v55 != v38
        || v56 != v39
        || v57 != v40
        || v58 != v41
        || (_s7BooksUI14CoverViewModelV5StyleO2eeoiySbAE_AEtFZ_0((uint64_t)v59, (uint64_t)v42) & 1) == 0
        || v59[8] != v42[8]
        || v59[9] != v42[9]
        || v60 != v43
        || v61 != v44)
      {
        break;
      }
      if ((v62 != v45 || v63 != v46) && (sub_26DDB0() & 1) == 0) {
        break;
      }
      uint64_t v6 = v64;
      uint64_t v7 = v65;
      uint64_t v8 = v66;
      uint64_t v9 = v67;
      int v10 = v68;
      uint64_t v11 = v69;
      uint64_t v12 = v70;
      uint64_t v13 = v47;
      uint64_t v14 = v48;
      uint64_t v15 = v49;
      uint64_t v16 = v50;
      int v18 = v51;
      uint64_t v17 = v52;
      uint64_t v19 = v53;
      if (v65)
      {
        if (!v48)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
LABEL_41:
          sub_E6F48(v13, v14);
          sub_E6F98(v6, v7);
          sub_E6F98(v13, v14);
          break;
        }
        if (v64 != v47 || v65 != v48)
        {
          uint64_t v20 = v70;
          uint64_t v35 = v67;
          uint64_t v36 = v49;
          uint64_t v34 = v50;
          uint64_t v21 = v66;
          int v22 = v51;
          int v23 = v68;
          uint64_t v24 = v69;
          uint64_t v25 = v53;
          uint64_t v26 = v52;
          char v27 = sub_26DDB0();
          uint64_t v15 = v36;
          int v10 = v23;
          int v18 = v22;
          uint64_t v8 = v21;
          uint64_t v16 = v34;
          uint64_t v9 = v35;
          uint64_t v17 = v26;
          uint64_t v19 = v25;
          uint64_t v12 = v20;
          uint64_t v11 = v24;
          if ((v27 & 1) == 0) {
            break;
          }
        }
        if (v8 == v15 && v9 == v16)
        {
          if ((v18 ^ v10)) {
            break;
          }
        }
        else
        {
          uint64_t v28 = v12;
          int v29 = v18;
          int v30 = v10;
          uint64_t v31 = v11;
          uint64_t v32 = v19;
          uint64_t v33 = v17;
          if ((sub_26DDB0() & 1) == 0) {
            break;
          }
          uint64_t v17 = v33;
          uint64_t v19 = v32;
          uint64_t v12 = v28;
          uint64_t v11 = v31;
          if ((v29 ^ v30)) {
            break;
          }
        }
        if (v12)
        {
          if (!v19 || (v11 != v17 || v12 != v19) && (sub_26DDB0() & 1) == 0) {
            break;
          }
        }
        else if (v19)
        {
          break;
        }
      }
      else if (v48)
      {
        goto LABEL_41;
      }
      sub_E7C20((uint64_t)v37);
      sub_E7C20((uint64_t)v54);
      v3 += 208;
      uint64_t result = 1;
      if (!--v2) {
        return result;
      }
    }
    sub_E7C20((uint64_t)v37);
    sub_E7C20((uint64_t)v54);
  }
  return 0;
}

uint64_t sub_E5B9C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_26DDB0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_26DDB0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_E5C6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E6284(a1, a2, a3, a4, &qword_2EF700, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage, type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage);
}

char *sub_E5C90(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EF738);
      int v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 232);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[232 * v8 + 32]) {
          memmove(v12, a4 + 32, 232 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E6C68(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_E5DBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EADE8);
      int v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 168);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[168 * v8 + 32]) {
          memmove(v12, a4 + 32, 168 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E7388(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_E5EEC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_E676C(a1, a2, a3, a4, &qword_2EF730, &qword_2EF1F0);
}

void *sub_E5F00(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EADB0);
      int v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_E7570(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_E6010(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EF720);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4]) {
          memmove(v12, a4 + 4, 176 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E7664(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_E613C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EADC8);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E7758(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_E6260(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E6284(a1, a2, a3, a4, &qword_2EF718, (uint64_t (*)(void))&type metadata accessor for PageMetrics.Instruction, (uint64_t (*)(void))&type metadata accessor for PageMetrics.Instruction);
}

uint64_t sub_E6284(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    int v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_4A98(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  int v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_26DB90();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_E7970(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_E6504(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EF710);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E747C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_E6630(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4A98(&qword_2EF708);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E7ACC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_E6758(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_E676C(a1, a2, a3, a4, &qword_2EADA8, &qword_2E9F90);
}

char *sub_E676C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_4A98(a5);
      uint64_t v13 = (char *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 32;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v16 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[8 * v11 + 32]) {
          memmove(v16, a4 + 32, 8 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_E7868(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_E6888(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return &_swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      char v8 = &_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 168 * a3;
        if (v10 < (unint64_t)&v8[21 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 168 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_4A98(&qword_2EADE8);
      char v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      _OWORD v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 168);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E6A1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_E6A78(uint64_t a1)
{
  return a1;
}

void *sub_E6ACC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return &_swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      char v8 = &_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5) {
          goto LABEL_17;
        }
        sub_4A98(&qword_2EE2C8);
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_4A98(&qword_2EF728);
      char v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      _OWORD v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E6C68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 232 * a1 + 32;
    unint64_t v6 = a3 + 232 * v4;
    if (v5 >= v6 || v5 + 232 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

double sub_E6D5C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 <= 1)
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v5 = 0u;
    long long v6 = 0u;
    goto LABEL_7;
  }
  sub_E6A1C(a1 + 232 * (v1 & 0x7FFFFFFFFFFFFFFELL) - 200, (uint64_t)&v5);
  if (!*((void *)&v15 + 1))
  {
LABEL_7:
    sub_B6DC((uint64_t)&v5, &qword_2EF698);
    return 0.0;
  }
  double v2 = *((double *)&v6 + 1) * *((double *)&v8 + 1);
  if (v5 - 1 < 2)
  {
    double v3 = v2 * 0.25;
  }
  else if (v5 - 3 >= 2)
  {
    double v3 = 0.0;
  }
  else
  {
    double v3 = v2 * 0.45;
  }
  sub_E6A78((uint64_t)&v5);
  return v3;
}

double sub_E6E4C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 <= ((v1 & 1) == 0))
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v5 = 0u;
    long long v6 = 0u;
    goto LABEL_7;
  }
  sub_E6A1C(a1 + 232 * ((v1 | 0xFFFFFFFFFFFFFFFELL) + v1) + 32, (uint64_t)&v5);
  if (!*((void *)&v15 + 1))
  {
LABEL_7:
    sub_B6DC((uint64_t)&v5, &qword_2EF698);
    return 0.0;
  }
  double v2 = *((double *)&v6 + 1) * *((double *)&v8 + 1);
  if (v5 - 1 < 2)
  {
    double v3 = v2 * 0.25;
  }
  else if (v5 - 3 >= 2)
  {
    double v3 = 0.0;
  }
  else
  {
    double v3 = v2 * 0.45;
  }
  sub_E6A78((uint64_t)&v5);
  return v3;
}

uint64_t sub_E6F48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_E6F98(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_E6FEC()
{
  unint64_t result = qword_2EF6A0;
  if (!qword_2EF6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF6A0);
  }
  return result;
}

unint64_t sub_E7044()
{
  unint64_t result = qword_2EF6A8;
  if (!qword_2EF6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF6A8);
  }
  return result;
}

unint64_t sub_E7098(uint64_t a1)
{
  unint64_t result = sub_E70C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_E70C0()
{
  unint64_t result = qword_2EF6F8;
  if (!qword_2EF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF6F8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SeriesHeaderCoverStackLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SeriesHeaderCoverStackLayout()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SeriesHeaderCoverStackLayout(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for SeriesHeaderCoverStackLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesHeaderCoverStackLayout(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesHeaderCoverStackLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesHeaderCoverStackLayout()
{
  return &type metadata for SeriesHeaderCoverStackLayout;
}

unsigned char *storeEnumTagSinglePayload for SeriesHeaderCoverStackLayout.HeroWidthScale(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE7350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesHeaderCoverStackLayout.HeroWidthScale()
{
  return &type metadata for SeriesHeaderCoverStackLayout.HeroWidthScale;
}

uint64_t sub_E7388(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 168 * a1 + 32;
    unint64_t v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E747C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7570(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7664(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 176 * a1 + 32;
    unint64_t v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7758(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_4A98(&qword_2EA840);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_4A98(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7ACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_E7BC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_E7C20(uint64_t a1)
{
  return a1;
}

uint64_t sub_E7C78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void static ListItemViewModel.perfHacks.getter(void *a1@<X8>)
{
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1)
  {
    id v2 = [self standardUserDefaults];
    NSString v3 = sub_26D3F0();
    id v4 = [v2 integerForKey:v3];
  }
  else
  {
    id v4 = 0;
  }
  *a1 = v4;
}

__n128 ListItemViewModel.init(layout:number:thumbnailModel:metadataModel:accessoryModel:assetInfo:cardInfo:origin:)@<Q0>(void *__src@<X4>, char *a2@<X0>, uint64_t a3@<X1>, char a4@<W2>, long long *a5@<X3>, uint64_t a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14 = a9 + 376;
  *(_OWORD *)(a9 + 376) = 0u;
  *(_OWORD *)(a9 + 392) = 0u;
  long long v15 = *a5;
  *(_OWORD *)(a9 + 40) = a5[1];
  long long v16 = a5[3];
  *(_OWORD *)(a9 + 56) = a5[2];
  *(_OWORD *)(a9 + 72) = v16;
  char v17 = *a2;
  *(void *)(a9 + 408) = 0;
  *(unsigned char *)a9 = v17;
  *(void *)(a9 + 8) = a3;
  *(unsigned char *)(a9 + 16) = a4 & 1;
  *(_WORD *)(a9 + 88) = *((_WORD *)a5 + 32);
  *(_OWORD *)(a9 + 24) = v15;
  memcpy((void *)(a9 + 96), __src, 0x118uLL);
  sub_8B6B0(a6, v14);
  sub_AD44(a7, a9 + 416);
  uint64_t v18 = type metadata accessor for ListItemViewModel();
  sub_19CC4(a8, a9 + *(int *)(v18 + 40), &qword_2EDB60);
  uint64_t v19 = a9 + *(int *)(v18 + 44);
  long long v20 = *(_OWORD *)(a10 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(a10 + 96);
  *(_OWORD *)(v19 + 112) = v20;
  *(_OWORD *)(v19 + 128) = *(_OWORD *)(a10 + 128);
  *(unsigned char *)(v19 + 144) = *(unsigned char *)(a10 + 144);
  long long v21 = *(_OWORD *)(a10 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(a10 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  long long v22 = *(_OWORD *)(a10 + 80);
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(a10 + 64);
  *(_OWORD *)(v19 + 80) = v22;
  __n128 result = *(__n128 *)a10;
  long long v24 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a10;
  *(_OWORD *)(v19 + 16) = v24;
  return result;
}

uint64_t sub_E7EB0()
{
  uint64_t v1 = 0x656E6961746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 1819042164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72616C75676572;
  }
}

uint64_t sub_E7F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_ED658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E7F30(uint64_t a1)
{
  unint64_t v2 = sub_E9104();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E7F6C(uint64_t a1)
{
  unint64_t v2 = sub_E9104();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t static DecodeDefault.Providers.EmptyString.defaultValue.getter()
{
  return 0;
}

void sub_E7FB4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_E7FC0(uint64_t a1)
{
  unint64_t v2 = sub_E91AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E7FFC(uint64_t a1)
{
  unint64_t v2 = sub_E91AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E8038(uint64_t a1)
{
  unint64_t v2 = sub_E9200();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E8074(uint64_t a1)
{
  unint64_t v2 = sub_E9200();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E80B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_E80E0(uint64_t a1)
{
  unint64_t v2 = sub_E9158();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E811C(uint64_t a1)
{
  unint64_t v2 = sub_E9158();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListItemViewModel.Layout.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_4A98(&qword_2EF748);
  uint64_t v33 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  double v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2EF750);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EF758);
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EF760);
  uint64_t v36 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_E9104();
  uint64_t v12 = (uint64_t)v39;
  sub_26DFC0();
  if (v12) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  double v39 = a1;
  long long v15 = v11;
  uint64_t v16 = sub_26DCA0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_26DAD0();
    swift_allocError();
    unint64_t v23 = v22;
    sub_4A98(&qword_2EBAB0);
    void *v23 = &type metadata for ListItemViewModel.Layout;
    sub_26DC20();
    sub_26DAC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_E91AC();
      uint64_t v18 = v30;
      sub_26DC10();
      long long v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_E9158();
      uint64_t v25 = v30;
      sub_26DC10();
      long long v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_E9200();
    uint64_t v24 = v30;
    sub_26DC10();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    long long v20 = v35;
  }
  unsigned char *v20 = v17;
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v39);
}

uint64_t sub_E8710@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ListItemViewModel.Layout.init(from:)(a1, a2);
}

void ShelfGridPaddleButtonView.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ListItemViewModel.layout.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t ListItemViewModel.number.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ListItemViewModel.number.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*ListItemViewModel.number.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemViewModel.thumbnailModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_3EB44(v1 + 24, a1);
}

uint64_t ListItemViewModel.thumbnailModel.setter(uint64_t a1)
{
  return sub_E9254(a1, v1 + 24);
}

uint64_t (*ListItemViewModel.thumbnailModel.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemViewModel.metadataModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E92B0(v1 + 96, a1);
}

uint64_t ListItemViewModel.metadataModel.setter(uint64_t a1)
{
  return sub_E930C(a1, v1 + 96);
}

uint64_t ListItemViewModel.accessoryModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_B678(v1 + 376, a1, &qword_2EDB70);
}

uint64_t ListItemViewModel.accessoryModel.setter(uint64_t a1)
{
  return sub_8B6B0(a1, v1 + 376);
}

uint64_t (*ListItemViewModel.accessoryModel.modify())()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ListItemViewModel.assetInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C224(v1 + 416, a1);
}

uint64_t ListItemViewModel.cardInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ListItemViewModel();
  return sub_B678(v1 + *(int *)(v3 + 40), a1, &qword_2EDB60);
}

uint64_t ListItemViewModel.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListItemViewModel() + 44);
  long long v4 = *(_OWORD *)(v3 + 112);
  long long v5 = *(_OWORD *)(v3 + 80);
  long long v21 = *(_OWORD *)(v3 + 96);
  long long v22 = v4;
  long long v6 = *(_OWORD *)(v3 + 112);
  long long v23 = *(_OWORD *)(v3 + 128);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v9 = *(_OWORD *)(v3 + 16);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v10 = *(_OWORD *)(v3 + 48);
  long long v11 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v12 = v19;
  long long v20 = v11;
  long long v13 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v14 = v16[0];
  v16[1] = v13;
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v5;
  char v24 = *(unsigned char *)(v3 + 144);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(v3 + 144);
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v9;
  return sub_54B0((uint64_t)v16);
}

uint64_t ListItemViewModel.assetID.getter()
{
  sub_4ADC((void *)(v0 + 416), *(void *)(v0 + 440));
  return sub_269DB0();
}

uint64_t ListItemViewModel.title.getter()
{
  return sub_E8974((uint64_t (*)(uint64_t, uint64_t))&AssetInfo.title.getter);
}

uint64_t ListItemViewModel.author.getter()
{
  return sub_E8974((uint64_t (*)(uint64_t, uint64_t))&AssetInfo.author.getter);
}

uint64_t sub_E8974(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1 + 52;
  uint64_t v5 = v1[55];
  uint64_t v4 = v1[56];
  sub_4ADC(v3, v5);
  return a1(v5, v4);
}

uint64_t ListItemViewModel.isAudiobook.getter()
{
  uint64_t v1 = sub_4A98(&qword_2EE2C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_C224(v0 + 416, (uint64_t)v8);
  sub_4A98(&qword_2EE2C8);
  uint64_t v4 = sub_269E60();
  uint64_t v5 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, v5 ^ 1, 1, v4);
  sub_B6DC((uint64_t)v3, &qword_2EE2C0);
  return v5;
}

uint64_t ListItemViewModel.isSG.getter()
{
  uint64_t v1 = sub_4A98(&qword_2EE2C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_C224(v0 + 416, (uint64_t)v11);
  sub_4A98(&qword_2EE2C8);
  uint64_t v4 = sub_269E60();
  int v5 = swift_dynamicCast();
  long long v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  if (v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    v6(v3, 0, 1, v4);
    char v8 = sub_269E50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v4);
  }
  else
  {
    v6(v3, 1, 1, v4);
    sub_B6DC((uint64_t)v3, &qword_2EE2C0);
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t ListItemViewModel.isPurchased.getter()
{
  sub_4ADC((void *)(v0 + 416), *(void *)(v0 + 440));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_26D980();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v10[-1] - v4;
  sub_269DA0();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 2;
  }
  else
  {
    v10[3] = AssociatedTypeWitness;
    v10[4] = swift_getAssociatedConformanceWitness();
    sub_CA1C(v10);
    (*(void (**)(void))(v6 + 32))();
    uint64_t v7 = sub_269EC0() & 1;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
  }
  return v7;
}

uint64_t ShelfGridItemColumnSpan.Context.offset.getter()
{
  return *(void *)v0;
}

void static ListItemViewModel.PerfHacks.hideBuyButton.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static ListItemViewModel.PerfHacks.hideDetails.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static ListItemViewModel.PerfHacks.hideCover.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static ListItemViewModel.PerfHacks.ignoreCoverImage.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static ListItemViewModel.PerfHacks.hideDetailsRatingData.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static ListItemViewModel.PerfHacks.ignoreAssetState.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static ListItemViewModel.PerfHacks.skipCacheGeometry.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static ListItemViewModel.PerfHacks.disableSwiftUIList.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void *sub_E8E7C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_E8E88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_E8E9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_E8EB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_E8EC4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_E8EF4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_E8F20@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_E8F44(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_E8F58(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_E8F6C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_E8F80@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_E8F94(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_E8FA8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_E8FBC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_E8FD0()
{
  return *v0 == 0;
}

uint64_t sub_E8FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_E8FF8(void *result)
{
  *v1 &= ~*result;
  return result;
}

void sub_E9010()
{
  if (sub_269E40())
  {
    id v0 = [self standardUserDefaults];
    NSString v1 = sub_26D3F0();
    id v2 = [v0 integerForKey:v1];

    BOOL v3 = v2 != 0;
  }
  else
  {
    BOOL v3 = 0;
  }
  byte_2EF740 = v3;
}

uint64_t type metadata accessor for ListItemViewModel()
{
  uint64_t result = qword_2EF868;
  if (!qword_2EF868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_E9104()
{
  unint64_t result = qword_2EF768;
  if (!qword_2EF768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF768);
  }
  return result;
}

unint64_t sub_E9158()
{
  unint64_t result = qword_2EF770;
  if (!qword_2EF770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF770);
  }
  return result;
}

unint64_t sub_E91AC()
{
  unint64_t result = qword_2EF778;
  if (!qword_2EF778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF778);
  }
  return result;
}

unint64_t sub_E9200()
{
  unint64_t result = qword_2EF780;
  if (!qword_2EF780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF780);
  }
  return result;
}

uint64_t sub_E9254(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_E92B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_E930C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void ListItemViewModel.unscaledDividerInset(isCompact:isAX:)(char a1, char a2)
{
  if ((a1 & 1) == 0 || (a2 & 1) == 0)
  {
    char v2 = a1 & 1;
    ListItemThumbnailViewModel.unscaledThumbnailSize(isCompact:)(a1 & 1);
    ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(v2);
  }
}

uint64_t ListItemViewModel.actionForListItem()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  unint64_t v103 = a1;
  long long v86 = (int *)type metadata accessor for FlowAction();
  __chkstk_darwin(v86);
  long long v85 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_269C00();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v97 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269CC0();
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  __chkstk_darwin(v5);
  uint64_t v95 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v7 - 8);
  uint64_t v102 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v83);
  long long v84 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_269840();
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  __chkstk_darwin(v10);
  long long v87 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v12 - 8);
  uint64_t v82 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26CB80();
  uint64_t v100 = *(void *)(v17 - 8);
  uint64_t v101 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v104 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v21 = (char *)&v82 - v20;
  int v22 = ListItemViewModel.isPurchased.getter();
  long long v23 = (void *)(v1 + 416);
  sub_4ADC((void *)(v1 + 416), *(void *)(v1 + 440));
  long long v90 = (void (*)(char *, char *, uint64_t))sub_269DB0();
  uint64_t v91 = v24;
  v129[1] = 4;
  LODWORD(v92) = v22;
  int v25 = v22 & 1;
  if (v22) {
    char v26 = 20;
  }
  else {
    char v26 = 18;
  }
  v129[0] = v26;
  sub_4A98(&qword_2E9F88);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_26F990;
  *(void *)(v27 + 32) = 0x5050557369;
  *(void *)(v27 + 40) = 0xE500000000000000;
  sub_4ADC(v23, *(void *)(v1 + 440));
  char v28 = sub_26A010();
  *(void *)(v27 + 72) = &type metadata for Bool;
  *(unsigned char *)(v27 + 48) = v28 & 1;
  unint64_t v29 = sub_8D70(v27);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v99 = v21;
  if (!v25)
  {
    sub_4ADC(v23, *(void *)(v1 + 440));
    sub_269F60();
    uint64_t v32 = sub_2696C0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v32) == 1)
    {
      sub_B6DC((uint64_t)v16, &qword_2F46A0);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v30 = sub_269680();
      uint64_t v31 = v34;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v32);
    }
    long long v21 = v99;
  }
  sub_C224((uint64_t)v23, (uint64_t)&v117);
  sub_4ADC(v23, *(void *)(v1 + 440));
  uint64_t v35 = sub_26A020();
  sub_A2A9C(&v117, v35, v36, 0, (uint64_t)v128);
  long long v125 = v128[8];
  long long v126 = v128[9];
  long long v127 = v128[10];
  long long v121 = v128[4];
  long long v122 = v128[5];
  long long v123 = v128[6];
  long long v124 = v128[7];
  long long v117 = v128[0];
  long long v118 = v128[1];
  long long v119 = v128[2];
  long long v120 = v128[3];
  static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)((uint64_t)v90, v91, v129, v29, v30, v31, &v117, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_A3F40((uint64_t)v128);
  if (v92)
  {
    *(void *)&long long v117 = 0;
    *((void *)&v117 + 1) = 0xE000000000000000;
    sub_26DA90(32);
    swift_bridgeObjectRelease();
    *(void *)&long long v117 = 0xD00000000000001ELL;
    *((void *)&v117 + 1) = 0x80000000002898B0;
    sub_4ADC(v23, *(void *)(v1 + 440));
    v131._countAndFlagsBits = sub_269DB0();
    sub_26D4E0(v131);
    swift_bridgeObjectRelease();
    uint64_t v91 = *((void *)&v117 + 1);
    uint64_t v92 = v117;
    sub_4ADC(v23, *(void *)(v1 + 440));
    long long v90 = (void (*)(char *, char *, uint64_t))sub_269DB0();
    long long v86 = (int *)v63;
    uint64_t v64 = type metadata accessor for ListItemViewModel();
    uint64_t v65 = v82;
    sub_B678(v1 + *(int *)(v64 + 40), v82, &qword_2EDB60);
    uint64_t v66 = type metadata accessor for CardInfo();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(v65, 1, v66) == 1)
    {
      sub_B6DC(v65, &qword_2EDB60);
      long long v85 = 0;
      uint64_t v82 = 0;
    }
    else
    {
      uint64_t v67 = v65 + *(int *)(v66 + 20);
      uint64_t v68 = v87;
      uint64_t v69 = v88;
      uint64_t v70 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v67, v89);
      sub_EB0E4(v65);
      long long v85 = (char *)sub_269820();
      uint64_t v82 = v71;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    }
    sub_4ADC(v23, *(void *)(v2 + 440));
    char v72 = sub_269F30();
    uint64_t v74 = v100;
    uint64_t v73 = v101;
    uint64_t v75 = (uint64_t)v104;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v104, v21, v101);
    uint64_t v76 = (uint64_t)v84;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t))(v93 + 104))(v95, enum case for ClickData.TargetType.navigate(_:), v94);
    (*(void (**)(char *, void, uint64_t))(v96 + 104))(v97, enum case for LinkActionType.click(_:), v98);
    uint64_t v77 = (uint64_t)v102;
    sub_269CD0();
    uint64_t v78 = sub_269CE0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
    uint64_t v79 = type metadata accessor for AssetAction(0);
    long long v80 = v103;
    v103[3] = v79;
    v80[4] = sub_EB140(&qword_2EF798, (void (*)(uint64_t))type metadata accessor for AssetAction);
    long long v81 = sub_CA1C(v80);
    AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v92, v91, (uint64_t)v90, (uint64_t)v86, (uint64_t)v85, v82, v72 & 1, v75, (uint64_t)v81, v76, v77);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v21, v73);
  }
  else
  {
    *(void *)&long long v117 = 0;
    *((void *)&v117 + 1) = 0xE000000000000000;
    sub_26DA90(31);
    swift_bridgeObjectRelease();
    *(void *)&long long v117 = 0xD00000000000001DLL;
    *((void *)&v117 + 1) = 0x8000000000289890;
    sub_4ADC(v23, *(void *)(v1 + 440));
    v130._countAndFlagsBits = sub_269DB0();
    sub_26D4E0(v130);
    swift_bridgeObjectRelease();
    uint64_t v91 = *((void *)&v117 + 1);
    uint64_t v92 = v117;
    uint64_t v38 = v100;
    uint64_t v37 = v101;
    long long v90 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    v90(v104, v21, v101);
    (*(void (**)(char *, void, uint64_t))(v93 + 104))(v95, enum case for ClickData.TargetType.navigate(_:), v94);
    (*(void (**)(char *, void, uint64_t))(v96 + 104))(v97, enum case for LinkActionType.click(_:), v98);
    uint64_t v39 = (uint64_t)v102;
    sub_269CD0();
    uint64_t v40 = sub_269CE0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    sub_4ADC(v23, *(void *)(v1 + 440));
    uint64_t v41 = sub_269DB0();
    uint64_t v106 = &type metadata for FlowAction.NewCardSetDestination;
    uint64_t v107 = &protocol witness table for FlowAction.NewCardSetDestination;
    *(void *)&long long v105 = v41;
    *((void *)&v105 + 1) = v42;
    uint64_t v43 = v1 + *(int *)(type metadata accessor for ListItemViewModel() + 44);
    long long v44 = *(_OWORD *)(v43 + 112);
    long long v45 = *(_OWORD *)(v43 + 80);
    long long v113 = *(_OWORD *)(v43 + 96);
    long long v114 = v44;
    long long v46 = *(_OWORD *)(v43 + 112);
    long long v115 = *(_OWORD *)(v43 + 128);
    long long v47 = *(_OWORD *)(v43 + 48);
    long long v48 = *(_OWORD *)(v43 + 16);
    long long v109 = *(_OWORD *)(v43 + 32);
    long long v110 = v47;
    long long v49 = *(_OWORD *)(v43 + 48);
    long long v50 = *(_OWORD *)(v43 + 80);
    long long v111 = *(_OWORD *)(v43 + 64);
    long long v112 = v50;
    long long v51 = *(_OWORD *)(v43 + 16);
    v108[0] = *(_OWORD *)v43;
    v108[1] = v51;
    long long v123 = v113;
    long long v124 = v46;
    long long v125 = *(_OWORD *)(v43 + 128);
    long long v119 = v109;
    long long v120 = v49;
    long long v121 = v111;
    long long v122 = v45;
    char v116 = *(unsigned char *)(v43 + 144);
    LOBYTE(v126) = *(unsigned char *)(v43 + 144);
    long long v117 = v108[0];
    long long v118 = v48;
    KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)&v125);
    uint64_t v52 = v103;
    uint64_t v53 = v86;
    v103[3] = (uint64_t)v86;
    v52[4] = sub_EB140((unint64_t *)&qword_2EF788, (void (*)(uint64_t))type metadata accessor for FlowAction);
    unint64_t v103 = sub_CA1C(v52);
    sub_54B0((uint64_t)v108);
    uint64_t v54 = v87;
    sub_269830();
    sub_269820();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v89);
    swift_bridgeObjectRelease();
    uint64_t v55 = v53[11];
    double v56 = v85;
    v85[v55] = 0;
    uint64_t v57 = v91;
    *(void *)double v56 = v92;
    *((void *)v56 + 1) = v57;
    double v58 = v104;
    v90(&v56[v53[5]], v104, v37);
    sub_B678(v39, (uint64_t)&v56[v53[6]], &qword_2EA820);
    sub_AD44(&v105, (uint64_t)&v56[v53[7]]);
    sub_B6DC(v39, &qword_2EA820);
    double v59 = *(void (**)(char *, uint64_t))(v38 + 8);
    v59(v58, v37);
    sub_19CC4((uint64_t)&v117, (uint64_t)&v56[v53[8]], &qword_2EF790);
    char v60 = &v56[v53[9]];
    *(void *)char v60 = 0;
    *((void *)v60 + 1) = 0;
    double v61 = &v56[v53[10]];
    strcpy(v61, "cardsPresent");
    v61[13] = 0;
    *((_WORD *)v61 + 7) = -5120;
    v56[v55] = 0;
    sub_EB080((uint64_t)v56, (uint64_t)v103);
    return ((uint64_t (*)(char *, uint64_t))v59)(v99, v37);
  }
}

uint64_t ListItemViewModel.contentData(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v74 = a2;
  uint64_t v5 = sub_4A98(&qword_2EF7A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v76 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EF7A8);
  __chkstk_darwin(v7 - 8);
  uint64_t v83 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_269EA0();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v78 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EF7B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v79 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2EF7B8);
  __chkstk_darwin(v14 - 8);
  uint64_t v82 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EF7C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v81 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2EE2C0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_269B70();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  long long v80 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_269EB0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for BooksFeatureFlag.unifiedProductPage(_:), v24);
  sub_EB140(&qword_2EF7C8, (void (*)(uint64_t))&type metadata accessor for BooksFeatureFlag);
  sub_EB188();
  int v75 = sub_26D590();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
  uint64_t v28 = sub_269DB0();
  uint64_t v72 = v29;
  uint64_t v73 = v28;
  sub_C224(v3 + 416, (uint64_t)v84);
  sub_4A98(&qword_2EE2C8);
  uint64_t v30 = sub_269E60();
  int v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v33 = (void (**)(char *, void, uint64_t))(v22 + 104);
  if (v31)
  {
    v32(v20, 0, 1, v30);
    sub_B6DC((uint64_t)v20, &qword_2EE2C0);
    uint64_t v34 = (unsigned int *)&enum case for ContentType.audiobook(_:);
  }
  else
  {
    v32(v20, 1, 1, v30);
    sub_B6DC((uint64_t)v20, &qword_2EE2C0);
    uint64_t v34 = (unsigned int *)&enum case for ContentType.book(_:);
  }
  (*v33)(v80, *v34, v21);
  uint64_t v35 = v76;
  if (a1)
  {
    sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
    v85._countAndFlagsBits = sub_269DB0();
    uint64_t v36 = sub_269CB0(v85);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    if (v38) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 0;
    }
    uint64_t v70 = v39;
    sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
    v86._countAndFlagsBits = sub_269DB0();
    uint64_t v40 = sub_269CA0(v86);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v71 = v40;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v70 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = 0;
LABEL_12:
  uint64_t v43 = v81;
  sub_EAB3C(v81);
  uint64_t v44 = sub_269C70();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
  uint64_t v45 = enum case for ContentSubType.unknown(_:);
  uint64_t v46 = sub_269BF0();
  uint64_t v47 = *(void *)(v46 - 8);
  long long v48 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v82, v45, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
  sub_269FE0();
  int v49 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v11, v78);
  if (v49 == enum case for SeriesOrdering.nonSeries(_:))
  {
    long long v50 = (unsigned int *)&enum case for SeriesType.nonSeries(_:);
LABEL_16:
    uint64_t v52 = *v50;
    uint64_t v53 = sub_269B40();
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104);
    uint64_t v55 = v79;
    double v56 = v79;
    uint64_t v57 = v52;
LABEL_17:
    v54(v56, v57, v53);
    goto LABEL_18;
  }
  int v51 = v49;
  if (v49 == enum case for SeriesOrdering.orderedSeries(_:))
  {
    long long v50 = (unsigned int *)&enum case for SeriesType.ordered(_:);
    goto LABEL_16;
  }
  int v63 = enum case for SeriesOrdering.unorderedSeries(_:);
  uint64_t v53 = sub_269B40();
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104);
  if (v51 == v63)
  {
    uint64_t v57 = enum case for SeriesType.unOrdered(_:);
    uint64_t v55 = v79;
    double v56 = v79;
    goto LABEL_17;
  }
  uint64_t v67 = v79;
  v54(v79, enum case for SeriesType.nonSeries(_:), v53);
  uint64_t v68 = v11;
  uint64_t v55 = v67;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v68, v78);
LABEL_18:
  sub_269B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v55, 0, 1, v53);
  uint64_t v58 = v83;
  sub_EAE04(v83);
  uint64_t v59 = sub_269C10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
  uint64_t v60 = sub_269D20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v35, 1, 1, v60);
  if (v75)
  {
    sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
    double v61 = (void *)sub_269DD0();
    if (v61)
    {
      uint64_t v62 = v61;
      [v61 supportsUnifiedProductPage:v70, v71];
    }
    sub_4ADC((void *)(v3 + 416), *(void *)(v3 + 440));
    uint64_t v64 = (void *)sub_269DD0();
    uint64_t v65 = v64;
    if (v64)
    {
      id v66 = [v64 editionKind];

      if (v66)
      {
        sub_26D430();
      }
    }
  }
  v84[0] = 1;
  return sub_269B50();
}

uint64_t sub_EAB3C@<X0>(uint64_t a1@<X8>)
{
  sub_4ADC((void *)(v1 + 416), *(void *)(v1 + 440));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_26D980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - v6;
  sub_269DA0();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_8:
    uint64_t v14 = enum case for ContentAcquisitionType.unknown(_:);
    uint64_t v15 = sub_269C70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
  }
  uint64_t v17 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_CA1C((uint64_t *)&v16);
  (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v9, v7, AssociatedTypeWitness);
  sub_AD44(&v16, (uint64_t)v19);
  sub_4ADC(v19, v20);
  if ((sub_269EC0() & 1) == 0)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v19);
    goto LABEL_8;
  }
  sub_4ADC(v19, v20);
  char v10 = sub_269ED0();
  uint64_t v11 = sub_269C70();
  uint64_t v12 = (unsigned int *)&enum case for ContentAcquisitionType.nonStoreBought(_:);
  if ((v10 & 1) == 0) {
    uint64_t v12 = (unsigned int *)&enum case for ContentAcquisitionType.storeBought(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(a1, *v12, v11);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v19);
}

uint64_t sub_EAE04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4A98(&qword_2EE2C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  uint64_t v8 = &v19[-v7 - 8];
  sub_C224(v1 + 416, (uint64_t)v19);
  sub_4A98(&qword_2EE2C8);
  uint64_t v9 = sub_269E60();
  int v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  if (!v10)
  {
    v11(v8, 1, 1, v9);
    sub_B6DC((uint64_t)v8, &qword_2EE2C0);
    uint64_t v14 = (unsigned int *)&enum case for ProductionType.unknown(_:);
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  v11(v8, 0, 1, v9);
  sub_B6DC((uint64_t)v8, &qword_2EE2C0);
  sub_C224(v1 + 416, (uint64_t)v19);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v11(v6, 1, 1, v9);
    sub_B6DC((uint64_t)v6, &qword_2EE2C0);
    goto LABEL_7;
  }
  v11(v6, 0, 1, v9);
  char v13 = sub_269E50();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v6, v9);
  if ((v13 & 1) == 0)
  {
LABEL_7:
    uint64_t v14 = (unsigned int *)&enum case for ProductionType.nonSGProduction(_:);
    goto LABEL_8;
  }
  uint64_t v14 = (unsigned int *)&enum case for ProductionType.sgProduction(_:);
LABEL_8:
  uint64_t v15 = *v14;
  uint64_t v16 = sub_269C10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
}

uint64_t sub_EB080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_EB0E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CardInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_EB140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_EB188()
{
  unint64_t result = qword_2EF7D0;
  if (!qword_2EF7D0)
  {
    sub_7B0C(&qword_2EF7D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF7D0);
  }
  return result;
}

unint64_t sub_EB1E8()
{
  unint64_t result = qword_2EF7E0;
  if (!qword_2EF7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF7E0);
  }
  return result;
}

unint64_t sub_EB23C(uint64_t a1)
{
  unint64_t result = sub_EB264();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_EB264()
{
  unint64_t result = qword_2EF7E8;
  if (!qword_2EF7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF7E8);
  }
  return result;
}

unint64_t sub_EB2BC()
{
  unint64_t result = qword_2EF7F0;
  if (!qword_2EF7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF7F0);
  }
  return result;
}

unint64_t sub_EB314()
{
  unint64_t result = qword_2EF7F8;
  if (!qword_2EF7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF7F8);
  }
  return result;
}

unint64_t sub_EB36C()
{
  unint64_t result = qword_2EF800;
  if (!qword_2EF800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF800);
  }
  return result;
}

unint64_t sub_EB3C4()
{
  unint64_t result = qword_2EF808;
  if (!qword_2EF808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF808);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ListItemViewModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    char v7 = *((unsigned char *)a2 + 89);
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, (uint64_t)(a2 + 3));
    uint64_t v9 = (unsigned char *)(v4 + 64);
    int v10 = a2 + 8;
    if (v7)
    {
      *uint64_t v9 = *v10;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(unsigned char *)(v4 + 72) = *((unsigned char *)a2 + 72);
      *(void *)(v4 + 80) = a2[10];
      *(unsigned char *)(v4 + 88) = *((unsigned char *)a2 + 88);
    }
    *(unsigned char *)(v4 + 89) = v7;
    uint64_t v12 = (_OWORD *)(v4 + 96);
    char v13 = a2 + 12;
    uint64_t v14 = a2[15];
    if (v14)
    {
      uint64_t v15 = a2[16];
      *(void *)(v4 + 120) = v14;
      *(void *)(v4 + 128) = v15;
      (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
    }
    else
    {
      long long v16 = *((_OWORD *)a2 + 7);
      *uint64_t v12 = *v13;
      *(_OWORD *)(v4 + 112) = v16;
      *(void *)(v4 + 128) = a2[16];
    }
    uint64_t v17 = (_OWORD *)(v4 + 136);
    uint64_t v18 = a2 + 17;
    uint64_t v19 = a2[20];
    if (v19)
    {
      uint64_t v20 = a2[21];
      *(void *)(v4 + 160) = v19;
      *(void *)(v4 + 168) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 19);
      *uint64_t v17 = *v18;
      *(_OWORD *)(v4 + 152) = v21;
      *(void *)(v4 + 168) = a2[21];
    }
    uint64_t v22 = (_OWORD *)(v4 + 176);
    uint64_t v23 = a2 + 22;
    uint64_t v24 = a2[25];
    if (v24)
    {
      uint64_t v25 = a2[26];
      *(void *)(v4 + 200) = v24;
      *(void *)(v4 + 208) = v25;
      (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
    }
    else
    {
      long long v26 = *((_OWORD *)a2 + 12);
      *uint64_t v22 = *v23;
      *(_OWORD *)(v4 + 192) = v26;
      *(void *)(v4 + 208) = a2[26];
    }
    uint64_t v27 = (_OWORD *)(v4 + 216);
    uint64_t v28 = a2 + 27;
    uint64_t v29 = a2[30];
    if (v29)
    {
      uint64_t v30 = a2[31];
      *(void *)(v4 + 240) = v29;
      *(void *)(v4 + 248) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
    }
    else
    {
      long long v31 = *(_OWORD *)(a2 + 29);
      *uint64_t v27 = *v28;
      *(_OWORD *)(v4 + 232) = v31;
      *(void *)(v4 + 248) = a2[31];
    }
    uint64_t v32 = (_OWORD *)(v4 + 256);
    uint64_t v33 = a2 + 32;
    uint64_t v34 = a2[35];
    if (v34)
    {
      uint64_t v35 = a2[36];
      *(void *)(v4 + 280) = v34;
      *(void *)(v4 + 288) = v35;
      (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
    }
    else
    {
      long long v36 = *((_OWORD *)a2 + 17);
      _OWORD *v32 = *v33;
      *(_OWORD *)(v4 + 272) = v36;
      *(void *)(v4 + 288) = a2[36];
    }
    uint64_t v37 = (_OWORD *)(v4 + 296);
    uint64_t v38 = a2 + 37;
    uint64_t v39 = a2[40];
    if (v39)
    {
      uint64_t v40 = a2[41];
      *(void *)(v4 + 320) = v39;
      *(void *)(v4 + 328) = v40;
      (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
    }
    else
    {
      long long v41 = *(_OWORD *)(a2 + 39);
      _OWORD *v37 = *v38;
      *(_OWORD *)(v4 + 312) = v41;
      *(void *)(v4 + 328) = a2[41];
    }
    uint64_t v42 = (_OWORD *)(v4 + 336);
    uint64_t v43 = a2 + 42;
    uint64_t v44 = a2[45];
    if (v44)
    {
      uint64_t v45 = a2[46];
      *(void *)(v4 + 360) = v44;
      *(void *)(v4 + 368) = v45;
      (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
    }
    else
    {
      long long v46 = *((_OWORD *)a2 + 22);
      *uint64_t v42 = *v43;
      *(_OWORD *)(v4 + 352) = v46;
      *(void *)(v4 + 368) = a2[46];
    }
    uint64_t v47 = (_OWORD *)(v4 + 376);
    long long v48 = a2 + 47;
    uint64_t v49 = a2[50];
    if (v49)
    {
      uint64_t v50 = a2[51];
      *(void *)(v4 + 400) = v49;
      *(void *)(v4 + 408) = v50;
      (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
    }
    else
    {
      long long v51 = *(_OWORD *)(a2 + 49);
      *uint64_t v47 = *v48;
      *(_OWORD *)(v4 + 392) = v51;
      *(void *)(v4 + 408) = a2[51];
    }
    uint64_t v52 = a2[55];
    uint64_t v53 = a2[56];
    *(void *)(v4 + 440) = v52;
    *(void *)(v4 + 448) = v53;
    (**(void (***)(uint64_t, uint64_t))(v52 - 8))(v4 + 416, (uint64_t)(a2 + 52));
    uint64_t v54 = *(int *)(a3 + 40);
    uint64_t v55 = (void *)(v4 + v54);
    double v56 = (uint64_t *)((char *)a2 + v54);
    uint64_t v57 = type metadata accessor for CardInfo();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = sub_4A98(&qword_2EDB60);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      *uint64_t v55 = *v56;
      uint64_t v60 = *(int *)(v57 + 20);
      uint64_t v76 = (char *)v56 + v60;
      uint64_t v77 = (char *)v55 + v60;
      uint64_t v61 = sub_269840();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v77, v76, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v63 = *(int *)(a3 + 44);
    uint64_t v64 = v4 + v63;
    uint64_t v65 = (uint64_t)a2 + v63;
    uint64_t v66 = *(void *)(v65 + 8);
    *(void *)uint64_t v64 = *(void *)v65;
    *(void *)(v64 + 8) = v66;
    uint64_t v67 = *(void *)(v65 + 24);
    *(void *)(v64 + 16) = *(void *)(v65 + 16);
    *(void *)(v64 + 24) = v67;
    uint64_t v68 = *(void *)(v65 + 40);
    *(void *)(v64 + 32) = *(void *)(v65 + 32);
    *(void *)(v64 + 40) = v68;
    uint64_t v69 = *(void *)(v65 + 56);
    *(void *)(v64 + 48) = *(void *)(v65 + 48);
    *(void *)(v64 + 56) = v69;
    uint64_t v70 = *(void *)(v65 + 72);
    *(void *)(v64 + 64) = *(void *)(v65 + 64);
    *(void *)(v64 + 72) = v70;
    uint64_t v71 = *(void *)(v65 + 88);
    *(void *)(v64 + 80) = *(void *)(v65 + 80);
    *(void *)(v64 + 88) = v71;
    uint64_t v72 = *(void *)(v65 + 104);
    *(void *)(v64 + 96) = *(void *)(v65 + 96);
    *(void *)(v64 + 104) = v72;
    uint64_t v73 = *(void *)(v65 + 120);
    *(void *)(v64 + 112) = *(void *)(v65 + 112);
    *(void *)(v64 + 120) = v73;
    uint64_t v74 = *(void *)(v65 + 136);
    *(void *)(v64 + 128) = *(void *)(v65 + 128);
    *(void *)(v64 + 136) = v74;
    *(unsigned char *)(v64 + 144) = *(unsigned char *)(v65 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ListItemViewModel(void *a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 3));
  if (a1[15]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 12));
  }
  if (a1[20]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 17));
  }
  if (a1[25]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 22));
  }
  if (a1[30]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 27));
  }
  if (a1[35]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 32));
  }
  if (a1[40]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 37));
  }
  if (a1[45]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 42));
  }
  if (a1[50]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 47));
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 52));
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = &v4[*(int *)(v5 + 20)];
    uint64_t v7 = sub_269840();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 89);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, a2 + 24);
  long long v8 = (unsigned char *)(a1 + 64);
  uint64_t v9 = (unsigned char *)(a2 + 64);
  if (v6)
  {
    *long long v8 = *v9;
  }
  else
  {
    *(void *)long long v8 = *(void *)v9;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  *(unsigned char *)(a1 + 89) = v6;
  int v10 = (_OWORD *)(a1 + 96);
  uint64_t v11 = (_OWORD *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 120);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v12;
    *(void *)(a1 + 128) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 112);
    *int v10 = *v11;
    *(_OWORD *)(a1 + 112) = v14;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
  }
  uint64_t v15 = (_OWORD *)(a1 + 136);
  long long v16 = (_OWORD *)(a2 + 136);
  uint64_t v17 = *(void *)(a2 + 160);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v17;
    *(void *)(a1 + 168) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 152);
    _OWORD *v15 = *v16;
    *(_OWORD *)(a1 + 152) = v19;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  uint64_t v20 = (_OWORD *)(a1 + 176);
  long long v21 = (_OWORD *)(a2 + 176);
  uint64_t v22 = *(void *)(a2 + 200);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v22;
    *(void *)(a1 + 208) = v23;
    (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 192);
    _OWORD *v20 = *v21;
    *(_OWORD *)(a1 + 192) = v24;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
  }
  uint64_t v25 = (_OWORD *)(a1 + 216);
  long long v26 = (_OWORD *)(a2 + 216);
  uint64_t v27 = *(void *)(a2 + 240);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v27;
    *(void *)(a1 + 248) = v28;
    (**(void (***)(_OWORD *, _OWORD *))(v27 - 8))(v25, v26);
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 232);
    *uint64_t v25 = *v26;
    *(_OWORD *)(a1 + 232) = v29;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  uint64_t v30 = (_OWORD *)(a1 + 256);
  long long v31 = (_OWORD *)(a2 + 256);
  uint64_t v32 = *(void *)(a2 + 280);
  if (v32)
  {
    uint64_t v33 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = v32;
    *(void *)(a1 + 288) = v33;
    (**(void (***)(_OWORD *, _OWORD *))(v32 - 8))(v30, v31);
  }
  else
  {
    long long v34 = *(_OWORD *)(a2 + 272);
    *uint64_t v30 = *v31;
    *(_OWORD *)(a1 + 272) = v34;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
  }
  uint64_t v35 = (_OWORD *)(a1 + 296);
  long long v36 = (_OWORD *)(a2 + 296);
  uint64_t v37 = *(void *)(a2 + 320);
  if (v37)
  {
    uint64_t v38 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v37;
    *(void *)(a1 + 328) = v38;
    (**(void (***)(_OWORD *, _OWORD *))(v37 - 8))(v35, v36);
  }
  else
  {
    long long v39 = *(_OWORD *)(a2 + 312);
    *uint64_t v35 = *v36;
    *(_OWORD *)(a1 + 312) = v39;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
  }
  uint64_t v40 = (_OWORD *)(a1 + 336);
  long long v41 = (_OWORD *)(a2 + 336);
  uint64_t v42 = *(void *)(a2 + 360);
  if (v42)
  {
    uint64_t v43 = *(void *)(a2 + 368);
    *(void *)(a1 + 360) = v42;
    *(void *)(a1 + 368) = v43;
    (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
  }
  else
  {
    long long v44 = *(_OWORD *)(a2 + 352);
    *uint64_t v40 = *v41;
    *(_OWORD *)(a1 + 352) = v44;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
  }
  uint64_t v45 = (_OWORD *)(a1 + 376);
  long long v46 = (_OWORD *)(a2 + 376);
  uint64_t v47 = *(void *)(a2 + 400);
  if (v47)
  {
    uint64_t v48 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = v47;
    *(void *)(a1 + 408) = v48;
    (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
  }
  else
  {
    long long v49 = *(_OWORD *)(a2 + 392);
    _OWORD *v45 = *v46;
    *(_OWORD *)(a1 + 392) = v49;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
  }
  uint64_t v50 = *(void *)(a2 + 440);
  uint64_t v51 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = v50;
  *(void *)(a1 + 448) = v51;
  (**(void (***)(uint64_t, uint64_t))(v50 - 8))(a1 + 416, a2 + 416);
  uint64_t v52 = *(int *)(a3 + 40);
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = type metadata accessor for CardInfo();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = sub_4A98(&qword_2EDB60);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    void *v53 = *v54;
    uint64_t v58 = *(int *)(v55 + 20);
    uint64_t v74 = (char *)v54 + v58;
    int v75 = (char *)v53 + v58;
    uint64_t v59 = sub_269840();
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v60(v75, v74, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  uint64_t v61 = *(int *)(a3 + 44);
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)(v63 + 8);
  *(void *)uint64_t v62 = *(void *)v63;
  *(void *)(v62 + 8) = v64;
  uint64_t v65 = *(void *)(v63 + 24);
  *(void *)(v62 + 16) = *(void *)(v63 + 16);
  *(void *)(v62 + 24) = v65;
  uint64_t v66 = *(void *)(v63 + 40);
  *(void *)(v62 + 32) = *(void *)(v63 + 32);
  *(void *)(v62 + 40) = v66;
  uint64_t v67 = *(void *)(v63 + 56);
  *(void *)(v62 + 48) = *(void *)(v63 + 48);
  *(void *)(v62 + 56) = v67;
  uint64_t v68 = *(void *)(v63 + 72);
  *(void *)(v62 + 64) = *(void *)(v63 + 64);
  *(void *)(v62 + 72) = v68;
  uint64_t v69 = *(void *)(v63 + 88);
  *(void *)(v62 + 80) = *(void *)(v63 + 80);
  *(void *)(v62 + 88) = v69;
  uint64_t v70 = *(void *)(v63 + 104);
  *(void *)(v62 + 96) = *(void *)(v63 + 96);
  *(void *)(v62 + 104) = v70;
  uint64_t v71 = *(void *)(v63 + 120);
  *(void *)(v62 + 112) = *(void *)(v63 + 112);
  *(void *)(v62 + 120) = v71;
  uint64_t v72 = *(void *)(v63 + 136);
  *(void *)(v62 + 128) = *(void *)(v63 + 128);
  *(void *)(v62 + 136) = v72;
  *(unsigned char *)(v62 + 144) = *(unsigned char *)(v63 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    char v7 = *(unsigned char *)(a2 + 89);
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, a2 + 24);
    uint64_t v9 = (unsigned char *)(a1 + 64);
    int v10 = (unsigned char *)(a2 + 64);
    if (v7)
    {
      *uint64_t v9 = *v10;
    }
    else
    {
      uint64_t v11 = *(void *)v10;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)uint64_t v9 = v11;
      uint64_t v12 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v12;
    }
    *(unsigned char *)(a1 + 89) = v7;
  }
  uint64_t v13 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v13)
    {
      sub_16D58((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
      goto LABEL_13;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  else if (v13)
  {
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 96, a2 + 96);
    goto LABEL_13;
  }
  long long v14 = *(_OWORD *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v14;
  *(_OWORD *)(a1 + 112) = v15;
LABEL_13:
  uint64_t v16 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v16)
    {
      sub_16D58((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_20;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  else if (v16)
  {
    *(void *)(a1 + 160) = v16;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 136, a2 + 136);
    goto LABEL_20;
  }
  long long v17 = *(_OWORD *)(a2 + 136);
  long long v18 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v17;
  *(_OWORD *)(a1 + 152) = v18;
LABEL_20:
  uint64_t v19 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v19)
    {
      sub_16D58((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
      goto LABEL_27;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  else if (v19)
  {
    *(void *)(a1 + 200) = v19;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 176, a2 + 176);
    goto LABEL_27;
  }
  long long v20 = *(_OWORD *)(a2 + 176);
  long long v21 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 192) = v21;
LABEL_27:
  uint64_t v22 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v22)
    {
      sub_16D58((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
      goto LABEL_34;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  else if (v22)
  {
    *(void *)(a1 + 240) = v22;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 216, a2 + 216);
    goto LABEL_34;
  }
  long long v23 = *(_OWORD *)(a2 + 216);
  long long v24 = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 216) = v23;
  *(_OWORD *)(a1 + 232) = v24;
LABEL_34:
  uint64_t v25 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280))
  {
    if (v25)
    {
      sub_16D58((uint64_t *)(a1 + 256), (uint64_t *)(a2 + 256));
      goto LABEL_41;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  else if (v25)
  {
    *(void *)(a1 + 280) = v25;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 256, a2 + 256);
    goto LABEL_41;
  }
  long long v26 = *(_OWORD *)(a2 + 256);
  long long v27 = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(_OWORD *)(a1 + 256) = v26;
  *(_OWORD *)(a1 + 272) = v27;
LABEL_41:
  uint64_t v28 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v28)
    {
      sub_16D58((uint64_t *)(a1 + 296), (uint64_t *)(a2 + 296));
      goto LABEL_48;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  else if (v28)
  {
    *(void *)(a1 + 320) = v28;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 296, a2 + 296);
    goto LABEL_48;
  }
  long long v29 = *(_OWORD *)(a2 + 296);
  long long v30 = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 296) = v29;
  *(_OWORD *)(a1 + 312) = v30;
LABEL_48:
  uint64_t v31 = *(void *)(a2 + 360);
  if (*(void *)(a1 + 360))
  {
    if (v31)
    {
      sub_16D58((uint64_t *)(a1 + 336), (uint64_t *)(a2 + 336));
      goto LABEL_55;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  else if (v31)
  {
    *(void *)(a1 + 360) = v31;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    (**(void (***)(uint64_t, uint64_t))(v31 - 8))(a1 + 336, a2 + 336);
    goto LABEL_55;
  }
  long long v32 = *(_OWORD *)(a2 + 336);
  long long v33 = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(_OWORD *)(a1 + 336) = v32;
  *(_OWORD *)(a1 + 352) = v33;
LABEL_55:
  uint64_t v34 = *(void *)(a2 + 400);
  if (*(void *)(a1 + 400))
  {
    if (v34)
    {
      sub_16D58((uint64_t *)(a1 + 376), (uint64_t *)(a2 + 376));
      goto LABEL_62;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  else if (v34)
  {
    *(void *)(a1 + 400) = v34;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    (**(void (***)(uint64_t, uint64_t))(v34 - 8))(a1 + 376, a2 + 376);
    goto LABEL_62;
  }
  long long v35 = *(_OWORD *)(a2 + 376);
  long long v36 = *(_OWORD *)(a2 + 392);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(_OWORD *)(a1 + 376) = v35;
  *(_OWORD *)(a1 + 392) = v36;
LABEL_62:
  sub_16D58((uint64_t *)(a1 + 416), (uint64_t *)(a2 + 416));
  uint64_t v37 = *(int *)(a3 + 40);
  uint64_t v38 = (void *)(a1 + v37);
  long long v39 = (void *)(a2 + v37);
  uint64_t v40 = type metadata accessor for CardInfo();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      void *v38 = *v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v54 = *(int *)(v40 + 20);
      uint64_t v55 = (char *)v38 + v54;
      uint64_t v56 = (char *)v39 + v54;
      uint64_t v57 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
      goto LABEL_68;
    }
    sub_EB0E4((uint64_t)v38);
    goto LABEL_67;
  }
  if (v44)
  {
LABEL_67:
    uint64_t v49 = sub_4A98(&qword_2EDB60);
    memcpy(v38, v39, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_68;
  }
  void *v38 = *v39;
  uint64_t v45 = *(int *)(v40 + 20);
  uint64_t v58 = (char *)v39 + v45;
  uint64_t v59 = (char *)v38 + v45;
  uint64_t v46 = sub_269840();
  uint64_t v47 = a3;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
  swift_bridgeObjectRetain();
  v48(v59, v58, v46);
  a3 = v47;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_68:
  uint64_t v50 = *(int *)(a3 + 44);
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  *(void *)uint64_t v51 = *(void *)(a2 + v50);
  *(void *)(v51 + 8) = *(void *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 16) = *(void *)(v52 + 16);
  *(void *)(v51 + 24) = *(void *)(v52 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 32) = *(void *)(v52 + 32);
  *(void *)(v51 + 40) = *(void *)(v52 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 48) = *(void *)(v52 + 48);
  *(void *)(v51 + 56) = *(void *)(v52 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 64) = *(void *)(v52 + 64);
  *(void *)(v51 + 72) = *(void *)(v52 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 80) = *(void *)(v52 + 80);
  *(void *)(v51 + 88) = *(void *)(v52 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 96) = *(void *)(v52 + 96);
  *(void *)(v51 + 104) = *(void *)(v52 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 112) = *(void *)(v52 + 112);
  *(void *)(v51 + 120) = *(void *)(v52 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 128) = *(void *)(v52 + 128);
  *(void *)(v51 + 136) = *(void *)(v52 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v51 + 144) = *(unsigned char *)(v52 + 144);
  return a1;
}

uint64_t initializeWithTake for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  memcpy((void *)(a1 + 96), (const void *)(a2 + 96), 0x118uLL);
  long long v6 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v6;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v7 = *(_OWORD *)(a2 + 416);
  long long v8 = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v9 = *(int *)(a3 + 40);
  int v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(_OWORD *)(a1 + 416) = v7;
  *(_OWORD *)(a1 + 432) = v8;
  uint64_t v12 = type metadata accessor for CardInfo();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_4A98(&qword_2EDB60);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *int v10 = *v11;
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = (char *)v10 + v15;
    long long v17 = (char *)v11 + v15;
    uint64_t v18 = sub_269840();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v19 = *(int *)(a3 + 44);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  long long v22 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v22;
  *(_OWORD *)(v20 + 128) = *(_OWORD *)(v21 + 128);
  *(unsigned char *)(v20 + 144) = *(unsigned char *)(v21 + 144);
  long long v23 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v23;
  long long v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  long long v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  return a1;
}

uint64_t assignWithTake for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  if (*(void *)(a1 + 120)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  if (*(void *)(a1 + 160)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  if (*(void *)(a1 + 200)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  if (*(void *)(a1 + 240)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  long long v9 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v9;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  if (*(void *)(a1 + 280)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  long long v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  if (*(void *)(a1 + 320)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  long long v11 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v11;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  if (*(void *)(a1 + 360)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  long long v12 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v12;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  if (*(void *)(a1 + 400)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  long long v13 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v13;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 416);
  long long v14 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v14;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = (void *)(a1 + v15);
  long long v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for CardInfo();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      swift_bridgeObjectRelease();
      uint64_t v41 = *(int *)(v18 + 20);
      uint64_t v42 = (char *)v16 + v41;
      int v43 = (char *)v17 + v41;
      uint64_t v44 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
      goto LABEL_25;
    }
    sub_EB0E4((uint64_t)v16);
    goto LABEL_24;
  }
  if (v22)
  {
LABEL_24:
    uint64_t v27 = sub_4A98(&qword_2EDB60);
    memcpy(v16, v17, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_25;
  }
  *uint64_t v16 = *v17;
  uint64_t v23 = *(int *)(v18 + 20);
  long long v24 = (char *)v16 + v23;
  long long v25 = (char *)v17 + v23;
  uint64_t v26 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_25:
  uint64_t v28 = *(int *)(a3 + 44);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v30 + 40);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v30 + 56);
  *(void *)(v29 + 48) = *(void *)(v30 + 48);
  *(void *)(v29 + 56) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v30 + 72);
  *(void *)(v29 + 64) = *(void *)(v30 + 64);
  *(void *)(v29 + 72) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v30 + 88);
  *(void *)(v29 + 80) = *(void *)(v30 + 80);
  *(void *)(v29 + 88) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v30 + 104);
  *(void *)(v29 + 96) = *(void *)(v30 + 96);
  *(void *)(v29 + 104) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v30 + 120);
  *(void *)(v29 + 112) = *(void *)(v30 + 112);
  *(void *)(v29 + 120) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v30 + 136);
  *(void *)(v29 + 128) = *(void *)(v30 + 128);
  *(void *)(v29 + 136) = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 144) = *(unsigned char *)(v30 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ECF48);
}

uint64_t sub_ECF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 440);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EDB60);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ED010);
}

uint64_t sub_ED010(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 440) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EDB60);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_ED0BC()
{
  sub_ED18C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_ED18C()
{
  if (!qword_2EF878)
  {
    type metadata accessor for CardInfo();
    unint64_t v0 = sub_26D980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EF878);
    }
  }
}

ValueMetadata *type metadata accessor for ListItemViewModel.Layout()
{
  return &type metadata for ListItemViewModel.Layout;
}

ValueMetadata *type metadata accessor for ListItemViewModel.PerfHacks()
{
  return &type metadata for ListItemViewModel.PerfHacks;
}

unsigned char *_s7BooksUI17ListItemViewModelV6LayoutOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xED2D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemViewModel.Layout.CodingKeys()
{
  return &type metadata for ListItemViewModel.Layout.CodingKeys;
}

ValueMetadata *type metadata accessor for ListItemViewModel.Layout.RegularCodingKeys()
{
  return &type metadata for ListItemViewModel.Layout.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for ListItemViewModel.Layout.ContainedCodingKeys()
{
  return &type metadata for ListItemViewModel.Layout.ContainedCodingKeys;
}

ValueMetadata *type metadata accessor for ListItemViewModel.Layout.TallCodingKeys()
{
  return &type metadata for ListItemViewModel.Layout.TallCodingKeys;
}

unint64_t sub_ED344()
{
  unint64_t result = qword_2EF8C0;
  if (!qword_2EF8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8C0);
  }
  return result;
}

unint64_t sub_ED39C()
{
  unint64_t result = qword_2EF8C8;
  if (!qword_2EF8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8C8);
  }
  return result;
}

unint64_t sub_ED3F4()
{
  unint64_t result = qword_2EF8D0;
  if (!qword_2EF8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8D0);
  }
  return result;
}

unint64_t sub_ED44C()
{
  unint64_t result = qword_2EF8D8;
  if (!qword_2EF8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8D8);
  }
  return result;
}

unint64_t sub_ED4A4()
{
  unint64_t result = qword_2EF8E0;
  if (!qword_2EF8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8E0);
  }
  return result;
}

unint64_t sub_ED4FC()
{
  unint64_t result = qword_2EF8E8;
  if (!qword_2EF8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8E8);
  }
  return result;
}

unint64_t sub_ED554()
{
  unint64_t result = qword_2EF8F0;
  if (!qword_2EF8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8F0);
  }
  return result;
}

unint64_t sub_ED5AC()
{
  unint64_t result = qword_2EF8F8;
  if (!qword_2EF8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF8F8);
  }
  return result;
}

unint64_t sub_ED604()
{
  unint64_t result = qword_2EF900;
  if (!qword_2EF900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF900);
  }
  return result;
}

uint64_t sub_ED658(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xE900000000000064 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819042164 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t PageUpdateAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26CB80();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t BooksAlertAction.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BooksAlertAction(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BooksAlertAction(uint64_t a1)
{
  return sub_2A148(a1, qword_2EF9D0);
}

uint64_t BooksAlertAction.message.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BooksAlertAction(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BooksAlertAction.buttons.getter()
{
  type metadata accessor for BooksAlertAction(0);

  return swift_bridgeObjectRetain();
}

uint64_t BooksAlertAction.dialogData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BooksAlertAction(0) + 32);
  uint64_t v4 = sub_269B00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BooksAlertAction.actionOrigin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BooksAlertAction(0) + 36);
  long long v4 = *(_OWORD *)(v3 + 112);
  long long v5 = *(_OWORD *)(v3 + 80);
  long long v21 = *(_OWORD *)(v3 + 96);
  long long v22 = v4;
  long long v6 = *(_OWORD *)(v3 + 112);
  long long v23 = *(_OWORD *)(v3 + 128);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v9 = *(_OWORD *)(v3 + 16);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v10 = *(_OWORD *)(v3 + 48);
  long long v11 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v12 = v19;
  long long v20 = v11;
  long long v13 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v14 = v16[0];
  v16[1] = v13;
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v5;
  char v24 = *(unsigned char *)(v3 + 144);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(v3 + 144);
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v9;
  return sub_54B0((uint64_t)v16);
}

double BooksAlertAction.init(actionMetrics:title:message:buttons:dialogType:actionOrigin:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v44 = a5;
  uint64_t v43 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  uint64_t v39 = a1;
  uint64_t v42 = sub_269B10();
  uint64_t v14 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_269B00();
  uint64_t v17 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  long long v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a8[7];
  long long v52 = a8[6];
  long long v53 = v20;
  long long v54 = a8[8];
  char v55 = *((unsigned char *)a8 + 144);
  long long v21 = a8[3];
  long long v48 = a8[2];
  long long v49 = v21;
  long long v22 = a8[5];
  long long v50 = a8[4];
  long long v51 = v22;
  long long v23 = a8[1];
  long long v46 = *a8;
  long long v47 = v23;
  uint64_t v24 = sub_26CB80();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(a9, a1, v24);
  uint64_t v26 = (int *)type metadata accessor for BooksAlertAction(0);
  uint64_t v27 = (void *)(a9 + v26[5]);
  uint64_t v28 = v41;
  *uint64_t v27 = v40;
  v27[1] = v28;
  uint64_t v29 = (void *)(a9 + v26[6]);
  uint64_t v30 = v44;
  *uint64_t v29 = v43;
  v29[1] = v30;
  *(void *)(a9 + v26[7]) = a6;
  uint64_t v31 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a7, v42);
  sub_269AF0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a7, v31);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v39, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9 + v26[8], v19, v45);
  uint64_t v32 = a9 + v26[9];
  long long v33 = v53;
  *(_OWORD *)(v32 + 96) = v52;
  *(_OWORD *)(v32 + 112) = v33;
  *(_OWORD *)(v32 + 128) = v54;
  *(unsigned char *)(v32 + 144) = v55;
  long long v34 = v49;
  *(_OWORD *)(v32 + 32) = v48;
  *(_OWORD *)(v32 + 48) = v34;
  long long v35 = v51;
  *(_OWORD *)(v32 + 64) = v50;
  *(_OWORD *)(v32 + 80) = v35;
  double result = *(double *)&v46;
  long long v37 = v47;
  *(_OWORD *)uint64_t v32 = v46;
  *(_OWORD *)(v32 + 16) = v37;
  return result;
}

uint64_t sub_EDD08()
{
  uint64_t result = 0x654D6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 3:
      uint64_t result = 0x736E6F74747562;
      break;
    case 4:
      uint64_t result = 0x6144676F6C616964;
      break;
    case 5:
      uint64_t result = 0x724F6E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_EDDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F10C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_EDE0C(uint64_t a1)
{
  unint64_t v2 = sub_EE5DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EDE48(uint64_t a1)
{
  unint64_t v2 = sub_EE5DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BooksAlertAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = sub_269B00();
  uint64_t v38 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  long long v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26CB80();
  uint64_t v34 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_4A98(&qword_2EF908);
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (int *)type metadata accessor for BooksAlertAction(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_EE5DC();
  uint64_t v39 = v8;
  uint64_t v12 = (uint64_t)v40;
  sub_26DFC0();
  if (v12) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  long long v13 = v4;
  uint64_t v40 = a1;
  LOBYTE(v41) = 0;
  sub_EE6D4(&qword_2EF918, (void (*)(uint64_t))&type metadata accessor for ActionMetrics);
  uint64_t v14 = v35;
  uint64_t v15 = v36;
  sub_26DC90();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v11, v14, v5);
  LOBYTE(v41) = 1;
  uint64_t v16 = sub_26DC30();
  uint64_t v17 = (uint64_t *)&v11[v9[5]];
  *uint64_t v17 = v16;
  v17[1] = v18;
  LOBYTE(v41) = 2;
  uint64_t v19 = sub_26DC30();
  long long v20 = (uint64_t *)&v11[v9[6]];
  uint64_t *v20 = v19;
  v20[1] = v21;
  sub_4A98(&qword_2EF920);
  char v51 = 3;
  sub_EE630();
  sub_26DC90();
  uint64_t v22 = v9[7];
  long long v35 = v11;
  *(void *)&v11[v22] = v41;
  LOBYTE(v41) = 4;
  sub_EE6D4(&qword_2EF938, (void (*)(uint64_t))&type metadata accessor for DialogData);
  uint64_t v23 = v33;
  sub_26DC90();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v35[v9[8]], v13, v23);
  char v51 = 5;
  sub_EE73C();
  sub_26DC90();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v15);
  uint64_t v24 = (uint64_t)v35;
  uint64_t v25 = &v35[v9[9]];
  long long v26 = v48;
  *((_OWORD *)v25 + 6) = v47;
  *((_OWORD *)v25 + 7) = v26;
  *((_OWORD *)v25 + 8) = v49;
  v25[144] = v50;
  long long v27 = v44;
  *((_OWORD *)v25 + 2) = v43;
  *((_OWORD *)v25 + 3) = v27;
  long long v28 = v46;
  *((_OWORD *)v25 + 4) = v45;
  *((_OWORD *)v25 + 5) = v28;
  long long v29 = v42;
  *(_OWORD *)uint64_t v25 = v41;
  *((_OWORD *)v25 + 1) = v29;
  sub_EF288(v24, v32, type metadata accessor for BooksAlertAction);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v40);
  return sub_EF2F0(v24, type metadata accessor for BooksAlertAction);
}

unint64_t sub_EE5DC()
{
  unint64_t result = qword_2EF910;
  if (!qword_2EF910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF910);
  }
  return result;
}

unint64_t sub_EE630()
{
  unint64_t result = qword_2EF928;
  if (!qword_2EF928)
  {
    sub_7B0C(&qword_2EF920);
    sub_EE6D4(&qword_2EF930, (void (*)(uint64_t))type metadata accessor for BooksAlertAction.Button);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF928);
  }
  return result;
}

uint64_t sub_EE6D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for BooksAlertAction.Button(uint64_t a1)
{
  return sub_2A148(a1, qword_2EFA70);
}

unint64_t sub_EE73C()
{
  unint64_t result = qword_2EF940;
  if (!qword_2EF940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF940);
  }
  return result;
}

uint64_t sub_EE790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BooksAlertAction.init(from:)(a1, a2);
}

uint64_t BooksAlertAction.Button.action.getter@<X0>(uint64_t a1@<X8>)
{
  sub_EE7E8(v1 + 32, (uint64_t)v4);
  return sub_EE844((uint64_t)v4, a1);
}

uint64_t sub_EE7E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_EE844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t BooksAlertAction.Button.action.setter(uint64_t a1)
{
  return sub_3F970(a1, v1 + 32);
}

uint64_t BooksAlertAction.Button.dialogActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BooksAlertAction.Button(0) + 28);
  uint64_t v4 = sub_269C30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BooksAlertAction.Button.init(title:role:action:dialogActionType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v13 = sub_269C30();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_3F9E4((uint64_t)v29, (uint64_t)v28);
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_3F970((uint64_t)v28, (uint64_t)&v25);
  long long v17 = v26;
  *(_OWORD *)(a7 + 32) = v25;
  *(_OWORD *)(a7 + 48) = v17;
  *(void *)(a7 + 64) = v27;
  sub_EEB20((uint64_t)v29);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  sub_3F9E4(a5, (uint64_t)v29);
  sub_3FC28(a7 + 32);
  sub_3F9E4((uint64_t)v29, (uint64_t)v28);
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_3F970((uint64_t)v28, (uint64_t)&v25);
  long long v18 = v26;
  *(_OWORD *)(a7 + 32) = v25;
  *(_OWORD *)(a7 + 48) = v18;
  *(void *)(a7 + 64) = v27;
  sub_EEB20((uint64_t)v29);
  uint64_t v19 = v24;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = v19;
  sub_269C40();
  sub_269C20();
  uint64_t v20 = sub_269C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a6, v20);
  sub_EEB20(a5);
  uint64_t v21 = type metadata accessor for BooksAlertAction.Button(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a7 + *(int *)(v21 + 28), v16, v13);
}

uint64_t sub_EEB20(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_EEB80()
{
  unint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701605234;
      break;
    case 2:
      unint64_t result = 0x6E6F69746361;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_EEC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F1388(a1, a2);
  *a3 = result;
  return result;
}

void sub_EEC2C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_EEC38(uint64_t a1)
{
  unint64_t v2 = sub_EF130();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EEC74(uint64_t a1)
{
  unint64_t v2 = sub_EF130();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BooksAlertAction.Button.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_269C30();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EF948);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BooksAlertAction.Button(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v12 + 32;
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  sub_3F9E4((uint64_t)v34, (uint64_t)v33);
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  sub_3F970((uint64_t)v33, (uint64_t)&v30);
  long long v13 = v31;
  *((_OWORD *)v12 + 2) = v30;
  *((_OWORD *)v12 + 3) = v13;
  *((void *)v12 + 8) = v32;
  sub_EEB20((uint64_t)v34);
  uint64_t v14 = a1[3];
  long long v29 = a1;
  sub_4ADC(a1, v14);
  sub_EF130();
  sub_26DFC0();
  if (v2)
  {
    uint64_t v18 = (uint64_t)v36;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
    return sub_3FC28(v18);
  }
  else
  {
    uint64_t v15 = v6;
    LOBYTE(v34[0]) = 0;
    uint64_t v17 = v27;
    uint64_t v16 = v28;
    *(void *)uint64_t v12 = sub_26DC70();
    *((void *)v12 + 1) = v19;
    v33[0] = 1;
    sub_EF184();
    sub_26DC60();
    *((_OWORD *)v12 + 1) = v34[0];
    v33[0] = 2;
    sub_EF1D8();
    uint64_t v24 = 0;
    sub_26DC90();
    sub_EF22C((uint64_t)v34, (uint64_t)v36);
    LOBYTE(v34[0]) = 3;
    sub_EE6D4(&qword_2EF968, (void (*)(uint64_t))&type metadata accessor for DialogActionData);
    uint64_t v23 = v15;
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    uint64_t v20 = (uint64_t)v29;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v12[*(int *)(v10 + 28)], v23, v4);
    sub_EF288((uint64_t)v12, v26, type metadata accessor for BooksAlertAction.Button);
    _s7BooksUI13AnyPagedFrameVwxx_0(v20);
    return sub_EF2F0((uint64_t)v12, type metadata accessor for BooksAlertAction.Button);
  }
}

unint64_t sub_EF130()
{
  unint64_t result = qword_2EF950;
  if (!qword_2EF950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF950);
  }
  return result;
}

unint64_t sub_EF184()
{
  unint64_t result = qword_2EF958;
  if (!qword_2EF958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF958);
  }
  return result;
}

unint64_t sub_EF1D8()
{
  unint64_t result = qword_2EF960;
  if (!qword_2EF960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF960);
  }
  return result;
}

uint64_t sub_EF22C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_EF288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_EF2F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_EF350@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BooksAlertAction.Button.init(from:)(a1, a2);
}

uint64_t static BooksAlertAction.ButtonRole.cancel.getter()
{
  return 0x6C65636E6163;
}

uint64_t static BooksAlertAction.ButtonRole.destructive.getter()
{
  return 0x7463757274736564;
}

uint64_t BooksAlertAction.ButtonRole.rawValue.getter(uint64_t a1)
{
  return a1;
}

void *sub_EF3D0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

unint64_t sub_EF3E0()
{
  unint64_t result = qword_2EF970;
  if (!qword_2EF970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF970);
  }
  return result;
}

Swift::Int sub_EF434()
{
  return sub_26DF20();
}

uint64_t sub_EF490()
{
  swift_bridgeObjectRetain();
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_EF4E8()
{
  return sub_26DF20();
}

uint64_t sub_EF540()
{
  return sub_26D5E0();
}

uint64_t sub_EF5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_EE7E8(a1 + 32, (uint64_t)v4);
  return sub_EE844((uint64_t)v4, a2);
}

uint64_t sub_EF5E0(uint64_t a1, uint64_t a2)
{
  sub_3F9E4(a1, (uint64_t)v4);
  return sub_3F970((uint64_t)v4, a2 + 32);
}

uint64_t *initializeBufferWithCopyOfBuffer for BooksAlertAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26CB80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    long long v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *long long v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v34 = (char *)a1 + v16;
    uint64_t v17 = (char *)a2 + v16;
    uint64_t v18 = sub_269B00();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v34, v17, v18);
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v25;
    uint64_t v26 = *((void *)v22 + 7);
    *((void *)v21 + 6) = *((void *)v22 + 6);
    *((void *)v21 + 7) = v26;
    uint64_t v27 = *((void *)v22 + 9);
    *((void *)v21 + 8) = *((void *)v22 + 8);
    *((void *)v21 + 9) = v27;
    uint64_t v28 = *((void *)v22 + 11);
    *((void *)v21 + 10) = *((void *)v22 + 10);
    *((void *)v21 + 11) = v28;
    uint64_t v29 = *((void *)v22 + 13);
    *((void *)v21 + 12) = *((void *)v22 + 12);
    *((void *)v21 + 13) = v29;
    uint64_t v30 = *((void *)v22 + 15);
    *((void *)v21 + 14) = *((void *)v22 + 14);
    *((void *)v21 + 15) = v30;
    uint64_t v31 = *((void *)v22 + 17);
    *((void *)v21 + 16) = *((void *)v22 + 16);
    *((void *)v21 + 17) = v31;
    v21[144] = v22[144];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BooksAlertAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = sub_269B00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BooksAlertAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  long long v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v32 = a1 + v15;
  uint64_t v16 = a2 + v15;
  uint64_t v17 = sub_269B00();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v32, v16, v17);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v22;
  uint64_t v23 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v23;
  uint64_t v24 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v24;
  uint64_t v25 = *(void *)(v21 + 56);
  *(void *)(v20 + 48) = *(void *)(v21 + 48);
  *(void *)(v20 + 56) = v25;
  uint64_t v26 = *(void *)(v21 + 72);
  *(void *)(v20 + 64) = *(void *)(v21 + 64);
  *(void *)(v20 + 72) = v26;
  uint64_t v27 = *(void *)(v21 + 88);
  *(void *)(v20 + 80) = *(void *)(v21 + 80);
  *(void *)(v20 + 88) = v27;
  uint64_t v28 = *(void *)(v21 + 104);
  *(void *)(v20 + 96) = *(void *)(v21 + 96);
  *(void *)(v20 + 104) = v28;
  uint64_t v29 = *(void *)(v21 + 120);
  *(void *)(v20 + 112) = *(void *)(v21 + 112);
  *(void *)(v20 + 120) = v29;
  uint64_t v30 = *(void *)(v21 + 136);
  *(void *)(v20 + 128) = *(void *)(v21 + 128);
  *(void *)(v20 + 136) = v30;
  *(unsigned char *)(v20 + 144) = *(unsigned char *)(v21 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BooksAlertAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_269B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 48) = *(void *)(v19 + 48);
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 64) = *(void *)(v19 + 64);
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 80) = *(void *)(v19 + 80);
  *(void *)(v18 + 88) = *(void *)(v19 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 96) = *(void *)(v19 + 96);
  *(void *)(v18 + 104) = *(void *)(v19 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 112) = *(void *)(v19 + 112);
  *(void *)(v18 + 120) = *(void *)(v19 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 128) = *(void *)(v19 + 128);
  *(void *)(v18 + 136) = *(void *)(v19 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 144) = *(unsigned char *)(v19 + 144);
  return a1;
}

uint64_t initializeWithTake for BooksAlertAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_269B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v15;
  *(_OWORD *)(v13 + 128) = *(_OWORD *)(v14 + 128);
  *(unsigned char *)(v13 + 144) = *(unsigned char *)(v14 + 144);
  long long v16 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  return a1;
}

uint64_t assignWithTake for BooksAlertAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_269B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v23 + 24);
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  *(void *)(v22 + 24) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v23 + 40);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v23 + 56);
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  *(void *)(v22 + 56) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v23 + 72);
  *(void *)(v22 + 64) = *(void *)(v23 + 64);
  *(void *)(v22 + 72) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v23 + 88);
  *(void *)(v22 + 80) = *(void *)(v23 + 80);
  *(void *)(v22 + 88) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v23 + 104);
  *(void *)(v22 + 96) = *(void *)(v23 + 96);
  *(void *)(v22 + 104) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v23 + 120);
  *(void *)(v22 + 112) = *(void *)(v23 + 112);
  *(void *)(v22 + 120) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v23 + 136);
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  *(void *)(v22 + 136) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + 144) = *(unsigned char *)(v23 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksAlertAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F0064);
}

uint64_t sub_F0064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_269B00();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for BooksAlertAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F01A4);
}

uint64_t sub_F01A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_26CB80();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_269B00();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_F02D0()
{
  uint64_t result = sub_26CB80();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_269B00();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BooksAlertAction.Button(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2 + 4;
    uint64_t v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      uint64_t v11 = a2[8];
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 32, (uint64_t)(a2 + 4), v10);
    }
    else
    {
      long long v13 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *v9;
      *(_OWORD *)(a1 + 48) = v13;
      *(void *)(a1 + 64) = a2[8];
    }
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_269C30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for BooksAlertAction.Button(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 32);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_269C30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for BooksAlertAction.Button(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = a2 + 4;
  uint64_t v9 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    (**(void (***)(uint64_t, void *, uint64_t))(v9 - 8))(a1 + 32, v8, v9);
  }
  else
  {
    long long v11 = *((_OWORD *)v8 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 48) = v11;
    *(void *)(a1 + 64) = v8[4];
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_269C30();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for BooksAlertAction.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 56) = v6;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v8 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 32);
    goto LABEL_7;
  }
  sub_16D58((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_269C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for BooksAlertAction.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_269C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for BooksAlertAction.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_269C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksAlertAction.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F0950);
}

uint64_t sub_F0950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_269C30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BooksAlertAction.Button(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F0A14);
}

uint64_t sub_F0A14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_269C30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_F0ABC()
{
  uint64_t result = sub_269C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BooksAlertAction.ButtonRole(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LibraryAssetState()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for BooksAlertAction.ButtonRole(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BooksAlertAction.ButtonRole(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksAlertAction.ButtonRole(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksAlertAction.ButtonRole(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksAlertAction.ButtonRole()
{
  return &type metadata for BooksAlertAction.ButtonRole;
}

unsigned char *storeEnumTagSinglePayload for BooksAlertAction.Button.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF0D78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksAlertAction.Button.CodingKeys()
{
  return &type metadata for BooksAlertAction.Button.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BooksAlertAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF0E7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksAlertAction.CodingKeys()
{
  return &type metadata for BooksAlertAction.CodingKeys;
}

unint64_t sub_F0EB8()
{
  unint64_t result = qword_2EFAB0;
  if (!qword_2EFAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAB0);
  }
  return result;
}

unint64_t sub_F0F10()
{
  unint64_t result = qword_2EFAB8;
  if (!qword_2EFAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAB8);
  }
  return result;
}

unint64_t sub_F0F68()
{
  unint64_t result = qword_2EFAC0;
  if (!qword_2EFAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAC0);
  }
  return result;
}

unint64_t sub_F0FC0()
{
  unint64_t result = qword_2EFAC8;
  if (!qword_2EFAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAC8);
  }
  return result;
}

unint64_t sub_F1018()
{
  unint64_t result = qword_2EFAD0;
  if (!qword_2EFAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAD0);
  }
  return result;
}

unint64_t sub_F1070()
{
  unint64_t result = qword_2EFAD8;
  if (!qword_2EFAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAD8);
  }
  return result;
}

uint64_t sub_F10C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144676F6C616964 && a2 == 0xEA00000000006174 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x724F6E6F69746361 && a2 == 0xEC0000006E696769)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_F1388(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002898D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_F1520()
{
  unint64_t result = qword_2EFAE0;
  if (!qword_2EFAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFAE0);
  }
  return result;
}

uint64_t SeriesQuickActionButtonViewModel.init(style:seriesInfo:seriesData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_F2FC8(a1, a4, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
  uint64_t v7 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v8 = a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a3, v9);
  uint64_t v10 = a4 + *(int *)(v7 + 24);

  return sub_AD44(a2, v10);
}

uint64_t type metadata accessor for SeriesQuickActionButtonViewModel.Style(uint64_t a1)
{
  return sub_2A148(a1, qword_2EFBF8);
}

uint64_t type metadata accessor for SeriesQuickActionButtonViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2EFB48);
}

uint64_t static SeriesQuickActionButtonViewModel.actionModelForOpenProductPage(for:cardInfo:seriesTitle:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v58 = a3;
  uint64_t v64 = a2;
  char v55 = a1;
  uint64_t v65 = a5;
  uint64_t v63 = sub_269840();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (int *)type metadata accessor for FlowAction();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_269C00();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_269CC0();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v13 - 8);
  uint64_t v56 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_26CB80();
  uint64_t v57 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CardInfo();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v64, (uint64_t)v19, &qword_2EDB60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_B6DC((uint64_t)v19, &qword_2EDB60);
    sub_26CB50();
    uint64_t v24 = sub_26C920();
    uint64_t v25 = v65;
    v65[3] = v24;
    v25[4] = (uint64_t)&protocol witness table for EmptyAction;
    sub_CA1C(v25);
    return sub_26C910();
  }
  else
  {
    uint64_t v27 = (uint64_t)v23;
    long long v49 = v23;
    sub_F2FC8((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CardInfo);
    sub_4ADC(v55, v55[3]);
    uint64_t v28 = sub_269DB0();
    uint64_t v64 = v29;
    char v50 = v16;
    sub_26CB50();
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v12, enum case for ClickData.TargetType.navigate(_:), v52);
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v10, enum case for LinkActionType.click(_:), v54);
    uint64_t v30 = (uint64_t)v56;
    sub_269CD0();
    uint64_t v31 = sub_269CE0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v67 = type metadata accessor for FlowAction.NewSingleCardDestination();
    uint64_t v68 = &protocol witness table for FlowAction.NewSingleCardDestination;
    uint64_t v32 = sub_CA1C((uint64_t *)&v66);
    sub_F3030(v27, (uint64_t)v32);
    long long v69 = xmmword_276ED0;
    uint64_t v70 = v58;
    uint64_t v71 = v61;
    long long v72 = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    uint64_t v78 = v28;
    uint64_t v79 = v64;
    char v80 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(0.0);
    uint64_t v33 = v65;
    v65[3] = (uint64_t)v6;
    v33[4] = sub_F3094();
    uint64_t v65 = sub_CA1C(v33);
    swift_bridgeObjectRetain();
    uint64_t v34 = v59;
    sub_269830();
    uint64_t v35 = sub_269820();
    uint64_t v37 = v36;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v39 = v63;
    v38(v34, v63);
    *uint64_t v8 = v35;
    v8[1] = v37;
    uint64_t v40 = v6[11];
    *((unsigned char *)v8 + v40) = 0;
    sub_269830();
    uint64_t v41 = sub_269820();
    uint64_t v43 = v42;
    v38(v34, v39);
    swift_bridgeObjectRelease();
    *uint64_t v8 = v41;
    v8[1] = v43;
    uint64_t v44 = v57;
    long long v45 = v50;
    uint64_t v46 = v60;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v8 + v6[5], v50, v60);
    sub_B678(v30, (uint64_t)v8 + v6[6], &qword_2EA820);
    sub_AD44(&v66, (uint64_t)v8 + v6[7]);
    sub_B6DC(v30, &qword_2EA820);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    sub_F30EC((uint64_t)&v69, (uint64_t)v8 + v6[8]);
    long long v47 = (uint64_t *)((char *)v8 + v6[9]);
    *long long v47 = 0;
    v47[1] = 0;
    long long v48 = (char *)v8 + v6[10];
    strcpy(v48, "cardsPresent");
    v48[13] = 0;
    *((_WORD *)v48 + 7) = -5120;
    *((unsigned char *)v8 + v40) = 0;
    sub_F2FC8((uint64_t)v8, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FlowAction);
    return sub_F415C((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CardInfo);
  }
}

uint64_t static SeriesQuickActionButtonViewModel.impressionMetricsForSamples(for:in:with:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_26CDD0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_269840();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_26CE10();
  __chkstk_darwin(v15 - 8);
  if (*(void *)(a2 + 8) && *(unsigned char *)(a2 + 16) == 5)
  {
    uint64_t v27 = v12;
    uint64_t v32 = a5;
    uint64_t v29 = a3;
    sub_4ADC(a1, a1[3]);
    uint64_t v31 = sub_26A030();
    uint64_t v30 = v16;
    sub_4ADC(a1, a1[3]);
    uint64_t v28 = sub_269DB0();
    uint64_t v18 = v17;
    LOBYTE(v36[0]) = 0;
    char v33 = 5;
    sub_4ADC(a1, a1[3]);
    sub_269F20();
    char v19 = sub_26A050();
    uint64_t v20 = 0x6B6F6F6265;
    if (v19) {
      uint64_t v20 = 0x6F6F626F69647561;
    }
    uint64_t v21 = 0xE500000000000000;
    if (v19) {
      uint64_t v21 = 0xE90000000000006BLL;
    }
    Metrics.Impression.init(artistName:id:idType:impressionIndex:impressionType:isSG:kind:name:narratorName:parentId:)(v31, v30, v28, v18, (unsigned __int8 *)v36, 0, &v33, 0, v34, v20, v21, v29, a4, 0, 0, 0, 0);
    v36[0] = v35;
    if (v34[3])
    {
      swift_bridgeObjectRetain();
      sub_F3154((uint64_t)v36);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_F3154((uint64_t)v36);
      sub_269830();
      sub_269820();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
    }
    swift_bridgeObjectRetain();
    sub_26CE00();
    sub_F3180((uint64_t)v34);
    sub_17EE08();
    sub_F322C((uint64_t)v34);
    sub_26CDC0();
    sub_F32D8((uint64_t)_swiftEmptyArrayStorage);
    sub_F32D8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v25 = v32;
    sub_26CE20();
    sub_F322C((uint64_t)v34);
    uint64_t v26 = sub_26CE50();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    uint64_t v22 = sub_26CE50();
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return v23(a5, 1, 1, v22);
  }
}

uint64_t static SeriesQuickActionButtonViewModel.preheader(for:seriesOrdering:isAudiobook:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  long long v76 = a3;
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v81 = a4;
  uint64_t v80 = type metadata accessor for ShrinkableText();
  __chkstk_darwin(v80);
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EA0C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v70 - v10;
  uint64_t v75 = sub_26CFD0();
  uint64_t v11 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26CF60();
  uint64_t v77 = *(void *)(v14 - 8);
  uint64_t v78 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_26A220();
  uint64_t v82 = *(void *)(v79 - 8);
  uint64_t v17 = __chkstk_darwin(v79);
  long long v73 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v85 = (char *)&v70 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  long long v87 = (char *)&v70 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v70 - v23;
  uint64_t v25 = sub_269EA0();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v26 + 16))(v28, v76, v25);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
  Swift::String v86 = v24;
  long long v74 = v5;
  long long v84 = v9;
  if (v29 == enum case for SeriesOrdering.notAvailable(_:) || v29 == enum case for SeriesOrdering.nonSeries(_:)) {
    goto LABEL_6;
  }
  if (v29 == enum case for SeriesOrdering.orderedSeries(_:))
  {
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v71;
    *(void *)(v30 + 24) = v72;
    swift_bridgeObjectRetain();
    sub_26A1C0();
    swift_release();
    uint64_t v31 = v16;
    sub_26CF50();
    uint64_t v32 = enum case for LocalizerLookupStrategy.default(_:);
    long long v76 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    uint64_t v33 = v75;
    v76(v13, enum case for LocalizerLookupStrategy.default(_:), v75);
    sub_26A1D0();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v13, v33);
    uint64_t v35 = v78;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v77 + 8);
    v36(v31, v78);
    sub_26CF50();
    v76(v13, v32, v33);
    sub_26A1D0();
    v34(v13, v33);
    v36(v31, v35);
    uint64_t v37 = v82;
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    uint64_t v39 = v73;
    uint64_t v40 = v79;
    v38(v73, v86, v79);
    uint64_t v41 = (uint64_t)v83;
    v38(v83, v87, v40);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v42(v41, 0, 1, v40);
    uint64_t v43 = (uint64_t)v84;
    uint64_t v44 = v85;
    v38(v84, v85, v40);
    v42(v43, 0, 1, v40);
    uint64_t v45 = v80;
    uint64_t v46 = (uint64_t)v74;
    uint64_t v47 = (uint64_t)&v74[*(int *)(v80 + 20)];
    v42(v47, 1, 1, v40);
    uint64_t v48 = v46 + *(int *)(v45 + 24);
    v42(v48, 1, 1, v40);
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v46, v39, v40);
    sub_F3450(v41, v47);
    sub_F3450((uint64_t)v84, v48);
    sub_F2FC8(v46, v81, (uint64_t (*)(void))type metadata accessor for ShrinkableText);
    long long v49 = *(void (**)(char *, uint64_t))(v37 + 8);
    v49(v44, v40);
    v49(v87, v40);
    return ((uint64_t (*)(char *, uint64_t))v49)(v86, v40);
  }
  if (v29 == enum case for SeriesOrdering.unorderedSeries(_:))
  {
LABEL_6:
    uint64_t v51 = v16;
    sub_26CF50();
    uint64_t v52 = enum case for LocalizerLookupStrategy.default(_:);
    long long v76 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    uint64_t v53 = v75;
    v76(v13, enum case for LocalizerLookupStrategy.default(_:), v75);
    sub_26A1D0();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v11 + 8);
    v54(v13, v53);
    uint64_t v55 = v78;
    uint64_t v56 = *(void (**)(char *, uint64_t))(v77 + 8);
    v56(v51, v78);
    sub_26CF50();
    v76(v13, v52, v53);
    uint64_t v57 = v87;
    sub_26A1D0();
    v54(v13, v53);
    v56(v51, v55);
    uint64_t v58 = v82;
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    uint64_t v60 = v85;
    uint64_t v61 = v79;
    v59(v85, v86, v79);
    uint64_t v62 = (uint64_t)v83;
    v59(v83, v57, v61);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v63(v62, 0, 1, v61);
    uint64_t v64 = (uint64_t)v84;
    v63((uint64_t)v84, 1, 1, v61);
    uint64_t v65 = v80;
    uint64_t v66 = (uint64_t)v74;
    uint64_t v67 = (uint64_t)&v74[*(int *)(v80 + 20)];
    v63(v67, 1, 1, v61);
    uint64_t v68 = v66 + *(int *)(v65 + 24);
    v63(v68, 1, 1, v61);
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v66, v60, v61);
    sub_F3450(v62, v67);
    sub_F3450(v64, v68);
    sub_F2FC8(v66, v81, (uint64_t (*)(void))type metadata accessor for ShrinkableText);
    long long v69 = *(void (**)(char *, uint64_t))(v58 + 8);
    v69(v87, v61);
    return ((uint64_t (*)(char *, uint64_t))v69)(v86, v61);
  }
  else
  {
    uint64_t result = sub_26DBA0();
    __break(1u);
  }
  return result;
}

uint64_t sub_F2CCC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26CF60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v13 = a1[3];
    v21[1] = a1[4];
    sub_4ADC(a1, v13);
    sub_4A98(&qword_2EE240);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_26F990;
    strcpy((char *)(inited + 32), "sequenceLabel");
    *(_WORD *)(inited + 46) = -4864;
    v21[2] = a2;
    void v21[3] = a3;
    sub_4ADC(a1, a1[3]);
    sub_26D1B0();
    uint64_t v15 = sub_269920();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_CC78();
    uint64_t v16 = sub_26D9C0();
    uint64_t v18 = v17;
    sub_B6DC((uint64_t)v8, &qword_2EA130);
    *(void *)(inited + 48) = v16;
    *(void *)(inited + 56) = v18;
    sub_9368(inited);
    sub_26CF50();
    uint64_t v19 = sub_26D210();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_4ADC(a1, a1[3]);
    sub_26CF50();
    uint64_t v19 = sub_26D200();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

uint64_t sub_F2FC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_F3030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_F3094()
{
  unint64_t result = qword_2EF788;
  if (!qword_2EF788)
  {
    type metadata accessor for FlowAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF788);
  }
  return result;
}

uint64_t sub_F30EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EF790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F3154(uint64_t a1)
{
  return a1;
}

uint64_t sub_F3180(uint64_t a1)
{
  return a1;
}

uint64_t sub_F322C(uint64_t a1)
{
  return a1;
}

unint64_t sub_F32D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_4A98(&qword_2EA0A8);
  uint64_t v2 = sub_26DBD0();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_B678(v6, (uint64_t)&v15, &qword_2EA0B0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_23E49C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_89B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_F3410()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_F3448(void *a1)
{
  return sub_F2CCC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_F3450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesQuickActionButtonViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        long long v11 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v11;
        (**(void (***)(uint64_t *, uint64_t *))(v11 - 8))(a1, a2);
        uint64_t v12 = sub_4A98(&qword_2EFAE8);
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = type metadata accessor for CardInfo();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          uint64_t v18 = sub_4A98(&qword_2EDB60);
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          void *v14 = *v15;
          uint64_t v19 = *(int *)(v16 + 20);
          uint64_t v33 = (char *)v15 + v19;
          uint64_t v34 = (char *)v14 + v19;
          uint64_t v20 = sub_269840();
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v34, v33, v20);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
        uint64_t v21 = *(int *)(v12 + 64);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_269C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        goto LABEL_13;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_14:
        uint64_t v25 = *(int *)(a3 + 20);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_269B30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        uint64_t v29 = *(int *)(a3 + 24);
        long long v30 = *(_OWORD *)((char *)a2 + v29 + 24);
        *(_OWORD *)((char *)a1 + v29 + 24) = v30;
        (**(void (***)(void))(v30 - 8))();
        return a1;
      }
    }
    long long v9 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 3) = v9;
    (**(void (***)(uint64_t *, uint64_t *))(v9 - 8))(a1, a2);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for SeriesQuickActionButtonViewModel(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_4:
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_8;
    }
    goto LABEL_4;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t v5 = sub_4A98(&qword_2EFAE8);
  uint64_t v6 = a1 + *(int *)(v5 + 48);
  uint64_t v7 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    uint64_t v9 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(v5 + 64);
  uint64_t v11 = sub_269C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
LABEL_8:
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = a1 + *(int *)(a2 + 24);

  return _s7BooksUI13AnyPagedFrameVwxx_0(v14);
}

uint64_t initializeWithCopy for SeriesQuickActionButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_4;
    case 1:
      long long v9 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
      uint64_t v10 = sub_4A98(&qword_2EFAE8);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = (void *)(a1 + v11);
      uint64_t v13 = (void *)(a2 + v11);
      uint64_t v14 = type metadata accessor for CardInfo();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_4A98(&qword_2EDB60);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        uint64_t v17 = *(int *)(v14 + 20);
        uint64_t v31 = (char *)v13 + v17;
        uint64_t v32 = (char *)v12 + v17;
        uint64_t v18 = sub_269840();
        long long v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v32, v31, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v19 = *(int *)(v10 + 64);
      uint64_t v20 = a1 + v19;
      uint64_t v21 = a2 + v19;
      uint64_t v22 = sub_269C90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      goto LABEL_11;
    case 0:
LABEL_4:
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      goto LABEL_12;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 24);
  long long v28 = *(_OWORD *)(a2 + v27 + 24);
  *(_OWORD *)(a1 + v27 + 24) = v28;
  (**(void (***)(void))(v28 - 8))();
  return a1;
}

void *assignWithCopy for SeriesQuickActionButtonViewModel(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_F415C((uint64_t)a1, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_5;
      case 1:
        uint64_t v9 = a2[3];
        a1[3] = v9;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v9 - 8))(a1, a2);
        uint64_t v10 = sub_4A98(&qword_2EFAE8);
        uint64_t v11 = *(int *)(v10 + 48);
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for CardInfo();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          uint64_t v16 = sub_4A98(&qword_2EDB60);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          *uint64_t v12 = *v13;
          uint64_t v17 = *(int *)(v14 + 20);
          uint64_t v29 = (char *)v13 + v17;
          long long v30 = (char *)v12 + v17;
          uint64_t v18 = sub_269840();
          long long v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v28(v30, v29, v18);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        uint64_t v19 = *(int *)(v10 + 64);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_269C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        goto LABEL_12;
      case 0:
LABEL_5:
        uint64_t v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v8 - 8))(a1, a2);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_13:
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  sub_16D58((void *)((char *)a1 + *(int *)(a3 + 24)), (void *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_F415C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for SeriesQuickActionButtonViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v8 = sub_4A98(&qword_2EFAE8);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for CardInfo();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_4A98(&qword_2EDB60);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *uint64_t v10 = *v11;
      uint64_t v15 = *(int *)(v12 + 20);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v11 + v15;
      uint64_t v18 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v19 = *(int *)(v8 + 64);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_269C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 24);
  long long v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)long long v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  *((void *)v28 + 4) = *((void *)v29 + 4);
  return a1;
}

_OWORD *assignWithTake for SeriesQuickActionButtonViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_F415C((uint64_t)a1, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v8 = sub_4A98(&qword_2EFAE8);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = type metadata accessor for CardInfo();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_4A98(&qword_2EDB60);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        *uint64_t v10 = *v11;
        uint64_t v15 = *(int *)(v12 + 20);
        uint64_t v16 = (char *)v10 + v15;
        uint64_t v17 = (char *)v11 + v15;
        uint64_t v18 = sub_269840();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v19 = *(int *)(v8 + 64);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_269C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 24);
  long long v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1 + v27);
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)long long v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  *((void *)v28 + 4) = *((void *)v29 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesQuickActionButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F46E4);
}

uint64_t sub_F46E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_269B30();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesQuickActionButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F4810);
}

uint64_t sub_F4810(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_269B30();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_F4924()
{
  uint64_t result = type metadata accessor for SeriesQuickActionButtonViewModel.Style(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_269B30();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesQuickActionButtonViewModel.Style(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2) {
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
      return a1;
    }
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 3) = v8;
    (**(void (***)(uint64_t *, uint64_t *))(v8 - 8))(a1, a2);
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  long long v11 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 3) = v11;
  (**(void (***)(uint64_t *, uint64_t *))(v11 - 8))(a1, a2);
  uint64_t v12 = sub_4A98(&qword_2EFAE8);
  uint64_t v13 = *(int *)(v12 + 48);
  uint64_t v14 = (uint64_t *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for CardInfo();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_4A98(&qword_2EDB60);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    void *v14 = *v15;
    uint64_t v19 = *(int *)(v16 + 20);
    uint64_t v26 = (char *)v15 + v19;
    uint64_t v27 = (char *)v14 + v19;
    uint64_t v20 = sub_269840();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v27, v26, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v21 = *(int *)(v12 + 64);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_269C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t destroy for SeriesQuickActionButtonViewModel.Style(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_4:
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_4;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t v3 = sub_4A98(&qword_2EFAE8);
  uint64_t v4 = a1 + *(int *)(v3 + 48);
  uint64_t v5 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(v3 + 64);
  uint64_t v9 = sub_269C90();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t initializeWithCopy for SeriesQuickActionButtonViewModel.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_4;
    case 1:
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      uint64_t v9 = sub_4A98(&qword_2EFAE8);
      uint64_t v10 = *(int *)(v9 + 48);
      long long v11 = (void *)(a1 + v10);
      uint64_t v12 = (void *)(a2 + v10);
      uint64_t v13 = type metadata accessor for CardInfo();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_4A98(&qword_2EDB60);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *long long v11 = *v12;
        uint64_t v16 = *(int *)(v13 + 20);
        uint64_t v24 = (char *)v12 + v16;
        uint64_t v25 = (char *)v11 + v16;
        uint64_t v17 = sub_269840();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v25, v24, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v18 = *(int *)(v9 + 64);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      uint64_t v21 = sub_269C90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      goto LABEL_11;
    case 0:
LABEL_4:
      long long v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for SeriesQuickActionButtonViewModel.Style(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_F415C((uint64_t)a1, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_5;
      case 1:
        uint64_t v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v8 - 8))(a1, a2);
        uint64_t v9 = sub_4A98(&qword_2EFAE8);
        uint64_t v10 = *(int *)(v9 + 48);
        long long v11 = (void *)((char *)a1 + v10);
        uint64_t v12 = (void *)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for CardInfo();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          uint64_t v15 = sub_4A98(&qword_2EDB60);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          *long long v11 = *v12;
          uint64_t v16 = *(int *)(v13 + 20);
          uint64_t v24 = (char *)v12 + v16;
          uint64_t v25 = (char *)v11 + v16;
          uint64_t v17 = sub_269840();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v25, v24, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        uint64_t v18 = *(int *)(v9 + 64);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_269C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        goto LABEL_12;
      case 0:
LABEL_5:
        uint64_t v7 = a2[3];
        a1[3] = v7;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v7 - 8))(a1, a2);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for SeriesQuickActionButtonViewModel.Style(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v7 = sub_4A98(&qword_2EFAE8);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for CardInfo();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_4A98(&qword_2EDB60);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(v7 + 64);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_269C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for SeriesQuickActionButtonViewModel.Style(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_F415C((uint64_t)a1, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v7 = sub_4A98(&qword_2EFAE8);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for CardInfo();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_4A98(&qword_2EDB60);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *uint64_t v9 = *v10;
        uint64_t v14 = *(int *)(v11 + 20);
        uint64_t v15 = (char *)v9 + v14;
        uint64_t v16 = (char *)v10 + v14;
        uint64_t v17 = sub_269840();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v18 = *(int *)(v7 + 64);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_269C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_F58D8()
{
  uint64_t v3 = "(";
  sub_ED18C();
  if (v0 <= 0x3F)
  {
    sub_269C90();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v4 = &v2;
      uint64_t v5 = "(";
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_F59C0(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB5C8;
  v7._object = a2;
  Swift::Int v4 = sub_26DC00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_F5A14(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 1684957547;
  }
}

uint64_t sub_F5A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F5AA8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F5B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F5B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F5BF4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_F59C0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_F5C34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_F5A14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_F5C70()
{
  return sub_F5A14(*v0);
}

uint64_t sub_F5C88@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F59C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F5CC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_46954();
  *a1 = result;
  return result;
}

uint64_t sub_F5CF8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_F5D4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PageUpdateInstruction<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v53 = a7;
  *(void *)&long long v71 = a2;
  *((void *)&v71 + 1) = a3;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v57 = a6;
  uint64_t v74 = a6;
  _s10CodingKeysOMa_1();
  swift_getWitnessTable();
  uint64_t v58 = sub_26DCC0();
  uint64_t v55 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v13 = (char *)&v49 - v12;
  *(void *)&long long v71 = a2;
  *((void *)&v71 + 1) = a3;
  uint64_t v59 = a3;
  uint64_t v56 = a4;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v52 = a5;
  uint64_t updated = type metadata accessor for PageUpdateInstruction();
  uint64_t v54 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v16 = (uint64_t *)((char *)&v49 - v15);
  uint64_t v17 = a1[3];
  uint64_t v60 = a1;
  sub_4ADC(a1, v17);
  uint64_t v18 = v61;
  sub_26DFC0();
  if (!v18)
  {
    uint64_t v19 = v56;
    uint64_t v20 = v57;
    uint64_t v21 = v59;
    uint64_t v51 = v16;
    uint64_t v61 = updated;
    LOBYTE(v71) = 0;
    uint64_t v22 = v58;
    uint64_t v23 = sub_26DC70();
    uint64_t v27 = v23;
    uint64_t v28 = v24;
    BOOL v29 = v23 == 0x506563616C706572 && v24 == 0xEB00000000656761;
    if (v29 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for CodeAnyIntentModel();
      LOBYTE(v69) = 1;
      swift_getWitnessTable();
      sub_26DC90();
      long long v30 = v13;
      uint64_t v25 = v60;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v22);
      uint64_t v31 = v51;
      sub_AD44(&v71, (uint64_t)v51);
      uint64_t v32 = v61;
LABEL_11:
      swift_storeEnumTagMultiPayload();
LABEL_19:
      uint64_t v34 = v53;
      uint64_t v35 = v54;
LABEL_20:
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v35 + 32))(v34, v31, v32);
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v25);
    }
    BOOL v33 = v27 == 0x6853646E65707061 && v28 == 0xED00007365766C65;
    if (v33 || (sub_26DDB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_26D680();
      LOBYTE(v69) = 1;
      uint64_t v62 = v20;
      swift_getWitnessTable();
      sub_26DC90();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v22);
      uint64_t v31 = v51;
      uint64_t *v51 = v71;
      uint64_t v32 = v61;
    }
    else
    {
      BOOL v36 = v27 == 0x536563616C706572 && v28 == 0xEE007365766C6568;
      if (v36 || (sub_26DDB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_26D680();
        LOBYTE(v69) = 1;
        uint64_t v63 = v20;
        swift_getWitnessTable();
        sub_26DC90();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v22);
        uint64_t v31 = v51;
        uint64_t *v51 = v71;
        uint64_t v32 = v61;
      }
      else
      {
        BOOL v37 = v27 == 0x685365766F6D6572 && v28 == 0xED00007365766C65;
        if (v37 || (sub_26DDB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_4A98(&qword_2E9F78);
          LOBYTE(v69) = 1;
          sub_F7070();
          sub_26DC90();
          uint64_t v38 = v13;
          uint64_t v25 = v60;
          (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v22);
          uint64_t v31 = v51;
          uint64_t *v51 = v71;
          uint64_t v32 = v61;
          goto LABEL_11;
        }
        if (v27 == 0xD000000000000012 && v28 == 0x8000000000289AE0 || (sub_26DDB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = v53;
          LOBYTE(v71) = 1;
          uint64_t v39 = v58;
          uint64_t v40 = sub_26DC70();
          uint64_t v41 = v13;
          uint64_t v25 = v60;
          uint64_t v35 = v54;
          uint64_t v43 = v42;
          (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v39);
          uint64_t v31 = v51;
          uint64_t *v51 = v40;
          v31[1] = v43;
          uint64_t v32 = v61;
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        }
        uint64_t v50 = v28;
        if (v27 == 0x7449646E65707061 && v50 == 0xEB00000000736D65)
        {
          swift_bridgeObjectRelease();
          uint64_t v21 = v59;
        }
        else
        {
          long long v49 = v13;
          if ((sub_26DDB0() & 1) == 0)
          {
            if (v27 == 0x744965766F6D6572 && v50 == 0xEB00000000736D65 || (sub_26DDB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              *(void *)&long long v71 = a2;
              *((void *)&v71 + 1) = v21;
              uint64_t v72 = v19;
              uint64_t v73 = v52;
              type metadata accessor for PageUpdateInstruction.ShelfItemRemovalDescriptor();
              sub_26D680();
              LOBYTE(v71) = 1;
              uint64_t WitnessTable = swift_getWitnessTable();
              swift_getWitnessTable();
              sub_26DC90();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t *v51 = v69;
              uint64_t v32 = v61;
            }
            else if (v27 == 0x496563616C706572 && v50 == 0xEC000000736D6574 || (sub_26DDB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              *(void *)&long long v71 = a2;
              *((void *)&v71 + 1) = v21;
              uint64_t v72 = v19;
              uint64_t v73 = v52;
              type metadata accessor for PageUpdateInstruction.ShelfItemUpdateDescriptor();
              sub_26D680();
              LOBYTE(v71) = 1;
              uint64_t v66 = swift_getWitnessTable();
              swift_getWitnessTable();
              sub_26DC90();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t *v51 = v69;
              uint64_t v32 = v61;
            }
            else if (v27 == 0xD000000000000013 && v50 == 0x8000000000289B00 || (sub_26DDB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              *(void *)&long long v71 = a2;
              *((void *)&v71 + 1) = v21;
              uint64_t v72 = v19;
              uint64_t v73 = v52;
              type metadata accessor for PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor();
              sub_26D680();
              LOBYTE(v71) = 1;
              uint64_t v67 = swift_getWitnessTable();
              swift_getWitnessTable();
              sub_26DC90();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t *v51 = v69;
              uint64_t v32 = v61;
            }
            else if (v27 == 0xD000000000000013 && v50 == 0x8000000000289B20 || (sub_26DDB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              *(void *)&long long v71 = a2;
              *((void *)&v71 + 1) = v21;
              uint64_t v72 = v19;
              uint64_t v73 = v52;
              type metadata accessor for PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor();
              sub_26D680();
              LOBYTE(v71) = 1;
              uint64_t v68 = swift_getWitnessTable();
              swift_getWitnessTable();
              sub_26DC90();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t *v51 = v69;
              uint64_t v32 = v61;
            }
            else if (v27 == 0x646E756F706D6F63 && v50 == 0xE800000000000000 || (sub_26DDB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              sub_26D680();
              LOBYTE(v69) = 1;
              uint64_t v75 = v20;
              uint64_t v70 = swift_getWitnessTable();
              swift_getWitnessTable();
              sub_26DC90();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t *v51 = v71;
              uint64_t v32 = v61;
            }
            else if (v27 == 0xD000000000000010 && v50 == 0x8000000000289B40 || (sub_26DDB0() & 1) != 0)
            {
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              swift_bridgeObjectRelease();
              uint64_t v31 = v51;
              uint64_t v32 = v61;
            }
            else
            {
              if (v27 == 0x646E6550706F7473 && v50 == 0xEF61746144676E69)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v45 = sub_26DDB0();
                swift_bridgeObjectRelease();
                if ((v45 & 1) == 0)
                {
                  uint64_t v46 = sub_26DAD0();
                  swift_allocError();
                  uint64_t v48 = v47;
                  uint64_t v25 = v60;
                  sub_4ADC(v60, v60[3]);
                  sub_26DF80();
                  sub_26DAC0();
                  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for DecodingError.dataCorrupted(_:), v46);
                  swift_willThrow();
                  (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
                  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v25);
                }
              }
              (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v58);
              uint64_t v31 = v51;
              uint64_t v32 = v61;
            }
            goto LABEL_18;
          }
          swift_bridgeObjectRelease();
          uint64_t v13 = v49;
        }
        *(void *)&long long v71 = a2;
        *((void *)&v71 + 1) = v21;
        uint64_t v72 = v19;
        uint64_t v73 = v52;
        type metadata accessor for PageUpdateInstruction.ShelfItemUpdateDescriptor();
        sub_26D680();
        LOBYTE(v71) = 1;
        uint64_t v64 = swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v44 = v58;
        sub_26DC90();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v44);
        uint64_t v31 = v51;
        uint64_t *v51 = v69;
        uint64_t v32 = v61;
      }
    }
LABEL_18:
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v60;
    goto LABEL_19;
  }
  uint64_t v25 = v60;
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v25);
}

uint64_t _s10CodingKeysOMa_1()
{
  return swift_getGenericMetadata();
}

unint64_t sub_F7070()
{
  unint64_t result = qword_2EFC30;
  if (!qword_2EFC30)
  {
    sub_7B0C(&qword_2E9F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFC30);
  }
  return result;
}

uint64_t sub_F70DC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB618;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_F712C(char a1)
{
  if (!a1) {
    return 0x736D657469;
  }
  if (a1 == 1) {
    return 0x4449666C656873;
  }
  return 0xD000000000000010;
}

uint64_t sub_F7184@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return PageUpdateInstruction<>.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], *(void *)(a3 - 8), a4);
}

uint64_t sub_F71AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F7220(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F728C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F72FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F736C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_F70DC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_F73A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_F712C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_F73DC()
{
  return sub_F712C(*v0);
}

uint64_t sub_F73EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_F7128(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a4 = result;
  return result;
}

uint64_t sub_F7420@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_F81D4(a1, (uint64_t (*)(void, void, void, void))sub_F8884, a2);
}

uint64_t sub_F7438(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_F748C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PageUpdateInstruction.ShelfItemUpdateDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  *(void *)&long long v30 = a2;
  *((void *)&v30 + 1) = a3;
  *(void *)uint64_t v31 = a4;
  *(void *)&v31[8] = a5;
  _s10CodingKeysOMa_0();
  swift_getWitnessTable();
  uint64_t v7 = sub_26DCC0();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  sub_4ADC(a1, a1[3]);
  uint64_t v10 = v35;
  sub_26DFC0();
  if (!v10)
  {
    uint64_t v11 = v25;
    LOBYTE(v27[0]) = 0;
    sub_F77EC();
    sub_26DC90();
    uint64_t v12 = v30;
    LOBYTE(v30) = 1;
    uint64_t v21 = sub_26DC70();
    uint64_t v22 = v13;
    uint64_t v35 = v12;
    LOBYTE(v27[0]) = 2;
    sub_F7840();
    sub_26DC60();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v26);
    v27[0] = v30;
    v27[1] = *(_OWORD *)v31;
    uint64_t v28 = *(void *)&v31[16];
    char v29 = v32;
    PageUpdateInstruction.ShelfItemUpdateDescriptor.init(items:shelfID:paginationUpdate:)(v35, v21, v22, (uint64_t)v27, (uint64_t)&v30);
    uint64_t v15 = *(void *)v31;
    uint64_t v16 = v33;
    char v17 = v34;
    long long v18 = *(_OWORD *)&v31[8];
    long long v19 = v32;
    uint64_t v20 = v24;
    _OWORD *v24 = v30;
    *((void *)v20 + 2) = v15;
    *(_OWORD *)((char *)v20 + 24) = v18;
    *(_OWORD *)((char *)v20 + 40) = v19;
    *((void *)v20 + 7) = v16;
    *((unsigned char *)v20 + 64) = v17;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t _s10CodingKeysOMa_0()
{
  return swift_getGenericMetadata();
}

unint64_t sub_F77EC()
{
  unint64_t result = qword_2EFC38;
  if (!qword_2EFC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EFC38);
  }
  return result;
}

unint64_t sub_F7840()
{
  unint64_t result = qword_2EFC40[0];
  if (!qword_2EFC40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2EFC40);
  }
  return result;
}

uint64_t sub_F7894(char a1)
{
  if (a1) {
    return 0x4449666C656873;
  }
  else {
    return 0x7344496D657469;
  }
}

uint64_t sub_F78C4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return PageUpdateInstruction.ShelfItemUpdateDescriptor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_F78E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F795C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F79C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F7A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F7AA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_F7AB4(a1, a2, (Swift::OpaquePointer)&off_2DB680, a3);
}

uint64_t sub_F7AB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, Swift::OpaquePointer a3@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_F7EB0(*(void *)a1, *(void **)(a1 + 8), a2[2], a2[3], a2[4], a2[5], a3);
  *a4 = result;
  return result;
}

uint64_t sub_F7AF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_F813C(a1, (uint64_t (*)(void, void, void, void, void))sub_F7894, a2);
}

uint64_t sub_F7B0C(void *a1, uint64_t a2)
{
  return sub_F8194(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_F7894);
}

uint64_t sub_F7B24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_F7B30(a1, a2, a3, (Swift::OpaquePointer)&off_2DB680, a4);
}

uint64_t sub_F7B30@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, Swift::OpaquePointer a4@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = sub_F7EB0(a1, a2, a3[2], a3[3], a3[4], a3[5], a4);
  *a5 = result;
  return result;
}

uint64_t sub_F7B68@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_F81D4(a1, (uint64_t (*)(void, void, void, void))sub_F888C, a2);
}

uint64_t sub_F7B80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_F7BD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PageUpdateInstruction.ShelfItemRemovalDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  long long v19 = a6;
  *(void *)&long long v24 = a2;
  *((void *)&v24 + 1) = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v23 = sub_26DCC0();
  uint64_t v20 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v18 - v8;
  sub_4ADC(a1, a1[3]);
  sub_26DFC0();
  if (!v6)
  {
    uint64_t v10 = v20;
    sub_4A98(&qword_2E9F78);
    char v27 = 0;
    sub_F7070();
    sub_26DC90();
    uint64_t v18 = v24;
    LOBYTE(v24) = 1;
    uint64_t v11 = sub_26DC70();
    uint64_t v12 = v9;
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    PageUpdateInstruction.ShelfItemRemovalDescriptor.init(itemIDs:shelfID:)(v18, v11, v14, &v24);
    uint64_t v15 = v25;
    uint64_t v16 = v19;
    _OWORD *v19 = v24;
    *((void *)v16 + 2) = v15;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t _s10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_F7EB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::OpaquePointer a7)
{
  v12._countAndFlagsBits = a1;
  v12._object = a2;
  Swift::Int v9 = sub_26DC00(a7, v12);
  swift_bridgeObjectRelease();
  if (v9 == 1) {
    unsigned int v10 = 1;
  }
  else {
    unsigned int v10 = 2;
  }
  if (v9) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_F7F00(char a1)
{
  if (a1) {
    return 0x4449666C656873;
  }
  else {
    return 0x6C65646F6DLL;
  }
}

uint64_t sub_F7F34@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return PageUpdateInstruction.ShelfItemRemovalDescriptor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_F7F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F7FCC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F8038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F80A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_F8118@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_F7AB4(a1, a2, (Swift::OpaquePointer)&off_2DB6D0, a3);
}

uint64_t sub_F8124@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_F813C(a1, (uint64_t (*)(void, void, void, void, void))sub_F7F00, a2);
}

uint64_t sub_F813C@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_F817C(void *a1, uint64_t a2)
{
  return sub_F8194(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_F7F00);
}

uint64_t sub_F8194(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_F81B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_F7B30(a1, a2, a3, (Swift::OpaquePointer)&off_2DB6D0, a4);
}

uint64_t sub_F81BC@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_F81D4(a1, (uint64_t (*)(void, void, void, void))sub_46954, a2);
}

uint64_t sub_F81D4@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_F8210(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_F8264(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v19 = a6;
  *(void *)&long long v21 = a2;
  *((void *)&v21 + 1) = a3;
  v17[0] = a4;
  v17[1] = a5;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  _s11descr2D9B09C10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v24 = sub_26DCC0();
  uint64_t v18 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  Swift::Int v9 = (char *)v17 - v8;
  sub_4ADC(a1, a1[3]);
  sub_26DFC0();
  if (!v6)
  {
    uint64_t v11 = v18;
    uint64_t v10 = v19;
    LOBYTE(v20[0]) = 0;
    sub_7A234();
    sub_26DC90();
    LOBYTE(v20[0]) = 1;
    Swift::String v12 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v13 = sub_26DC70();
    uint64_t v15 = v14;
    (*v12)(v9, v24);
    sub_AD44(&v21, (uint64_t)v20);
    PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.init(model:shelfID:)(v20, v13, v15, v10);
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t _s11descr2D9B09C10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_F8520@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

unsigned char *sub_F854C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF8618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_F8640(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF870CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_F8734()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8750()
{
  return swift_getWitnessTable();
}

uint64_t sub_F876C()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8788()
{
  return swift_getWitnessTable();
}

uint64_t sub_F87A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_F87C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_F87DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_F87F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8814()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8830()
{
  return swift_getWitnessTable();
}

uint64_t sub_F884C()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8868()
{
  return swift_getWitnessTable();
}

uint64_t sub_F8884()
{
  return 3;
}

uint64_t static Defaults.shelfGridDebugUIEnabled.getter()
{
  uint64_t v0 = sub_4A98(&qword_2EFE60);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2E9C30 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_6B14(v0, (uint64_t)qword_2EFE48);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_269E10();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return v6[15];
}

uint64_t static Defaults.shelfGridDebugUIEnabled.setter(char a1)
{
  uint64_t v2 = sub_4A98(&qword_2EFE60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2E9C30 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_6B14(v2, (uint64_t)qword_2EFE48);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v8[15] = a1 & 1;
  sub_269E20();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

void (*static Defaults.shelfGridDebugUIEnabled.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_4A98(&qword_2EFE60);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_2E9C30 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_6B14(v3, (uint64_t)qword_2EFE48);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_269E00();
  return sub_F8C30;
}

void sub_F8C30(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_F8CA8()
{
  uint64_t v0 = sub_4A98(&qword_2EFE60);
  sub_6E18(v0, qword_2EFE48);
  sub_6B14(v0, (uint64_t)qword_2EFE48);
  id v1 = [self standardUserDefaults];
  return sub_269E30();
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

double NavigationBarTransitionInfo.startOffset.getter()
{
  return *(double *)v0;
}

double NavigationBarTransitionInfo.endOffset.getter()
{
  return *(double *)(v0 + 8);
}

void NavigationBarTransitionInfo.init(startOffset:endOffset:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

BOOL static NavigationBarTransitionInfo.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t View.navigationStyle(_:localizer:scrollContentOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12 = type metadata accessor for NavigationStyle(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v15 = type metadata accessor for NavigationStyleViewModifier(0);
  __chkstk_darwin(v15);
  char v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_103E4C(a1, (uint64_t)v14, type metadata accessor for NavigationStyle);
  sub_C224(a2, (uint64_t)v20);
  swift_retain();
  swift_retain();
  sub_F8F7C((uint64_t)v14, (uint64_t)v20, a3, a4, (uint64_t)v17, a5, a6);
  sub_26C030();
  return sub_FA8D8((uint64_t)v17, type metadata accessor for NavigationStyleViewModifier);
}

uint64_t type metadata accessor for NavigationStyle(uint64_t a1)
{
  return sub_2A148(a1, qword_2EFF70);
}

uint64_t type metadata accessor for NavigationStyleViewModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2F0008);
}

uint64_t sub_F8F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v46 = a2;
  uint64_t v11 = type metadata accessor for ToolbarPrincipalType(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v45 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NavigationStyle(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_26A220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = (int *)type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v24 = a5 + v23[7];
  uint64_t v53 = 0;
  char v54 = 1;
  sub_4A98(&qword_2F0328);
  sub_26C340();
  char v25 = v51;
  uint64_t v26 = v52;
  *(void *)uint64_t v24 = v50;
  *(unsigned char *)(v24 + 8) = v25;
  *(void *)(v24 + 16) = v26;
  char v27 = (uint64_t *)(a5 + v23[8]);
  *char v27 = swift_getKeyPath();
  sub_4A98(&qword_2EBC58);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = (uint64_t *)(a5 + v23[9]);
  *uint64_t v28 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  char v29 = (uint64_t *)(a5 + v23[10]);
  *char v29 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a5 + v23[11];
  *(void *)uint64_t v30 = swift_getKeyPath();
  *(unsigned char *)(v30 + 8) = 0;
  sub_103E4C(a1, a5 + v23[5], type metadata accessor for NavigationStyle);
  uint64_t v47 = a1;
  sub_103E4C(a1, (uint64_t)v15, type metadata accessor for NavigationStyle);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v31 = (uint64_t)&v15[*(int *)(sub_4A98(&qword_2EFEF8) + 48)];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v45;
    sub_103EB8(v31, v45, type metadata accessor for ToolbarPrincipalType);
    uint64_t v33 = v32 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v22, v32, v16);
    sub_B6DC(v33, &qword_2EA0C0);
  }
  else
  {
    sub_4A98(&qword_2EFEF0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  uint64_t v34 = v46;
  sub_C224(v46, (uint64_t)&v50);
  uint64_t v35 = sub_26BA00();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v41 = v40;
  _s7BooksUI13AnyPagedFrameVwxx_0(v34);
  sub_FA8D8(v47, type metadata accessor for NavigationStyle);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  *(void *)a5 = v35;
  *(void *)(a5 + 8) = v37;
  *(unsigned char *)(a5 + 16) = v39 & 1;
  *(void *)(a5 + 24) = v41;
  uint64_t v43 = a5 + v23[6];
  uint64_t v44 = v49;
  *(void *)uint64_t v43 = v48;
  *(void *)(v43 + 8) = v44;
  *(double *)(v43 + 16) = a6;
  *(double *)(v43 + 24) = a7;
  return result;
}

ValueMetadata *type metadata accessor for NavigationBarTransitionInfo()
{
  return &type metadata for NavigationBarTransitionInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolbarPrincipalType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_26A220();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v8(a1, a2, v6);
    uint64_t v9 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
    {
      uint64_t v12 = sub_4A98(&qword_2EA0C0);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for ToolbarPrincipalType(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(a1, v2);
  uint64_t v4 = a1 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v2);
  }
  return result;
}

char *initializeWithCopy for ToolbarPrincipalType(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  v6(a1, a2, v4);
  uint64_t v7 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
  {
    uint64_t v10 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    v6(v8, v9, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
  }
  return a1;
}

char *assignWithCopy for ToolbarPrincipalType(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  uint64_t v7 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v11 = v10(&a1[v7], 1, v4);
  int v12 = v10(v9, 1, v4);
  if (!v11)
  {
    if (!v12)
    {
      v6(v8, v9, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v9, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
  return a1;
}

char *initializeWithTake for ToolbarPrincipalType(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  uint64_t v7 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
  {
    uint64_t v10 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    v6(v8, v9, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
  }
  return a1;
}

char *assignWithTake for ToolbarPrincipalType(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  uint64_t v7 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v11 = v10(&a1[v7], 1, v4);
  int v12 = v10(v9, 1, v4);
  if (!v11)
  {
    if (!v12)
    {
      v6(v8, v9, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v9, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarPrincipalType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EFE68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ToolbarPrincipalType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EFE68);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for ToolbarPrincipalType(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2EFEE0);
}

void sub_F9DF8(uint64_t a1)
{
  sub_26A220();
  if (v2 <= 0x3F)
  {
    sub_FD550(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSingleCase();
      *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      swift_retain();
      swift_retain();
      uint64_t v7 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v8 = v7[12];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26A220();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v13(v9, v10, v11);
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        uint64_t v17 = sub_4A98(&qword_2EA0C0);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      *(uint64_t *)((char *)a1 + v7[20]) = *(uint64_t *)((char *)a2 + v7[20]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = sub_26A220();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = (int *)sub_4A98(&qword_2EFEF0);
      *(uint64_t *)((char *)a1 + v20[12]) = *(uint64_t *)((char *)a2 + v20[12]);
      *(uint64_t *)((char *)a1 + v20[16]) = *(uint64_t *)((char *)a2 + v20[16]);
      uint64_t v21 = v20[20];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      *((_OWORD *)v22 + 1) = *((_OWORD *)v23 + 1);
      v22[32] = v23[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for NavigationStyle(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v2 = a1 + *(int *)(sub_4A98(&qword_2EFEF8) + 48);
    uint64_t v3 = sub_26A220();
    uint64_t v4 = *(void *)(v3 - 8);
    int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v5(v2, v3);
    uint64_t v6 = v2 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3)) {
      v5(v6, v3);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    sub_4A98(&qword_2EFEF0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

void *initializeWithCopy for NavigationStyle(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    swift_retain();
    swift_retain();
    int v5 = (int *)sub_4A98(&qword_2EFEF8);
    uint64_t v6 = v5[12];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_26A220();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v11(v7, v8, v9);
    uint64_t v12 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
    {
      uint64_t v15 = sub_4A98(&qword_2EA0C0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
    }
    *(void *)((char *)a1 + v5[16]) = *(void *)((char *)a2 + v5[16]);
    *(void *)((char *)a1 + v5[20]) = *(void *)((char *)a2 + v5[20]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = sub_26A220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    uint64_t v17 = (int *)sub_4A98(&qword_2EFEF0);
    *(void *)((char *)a1 + v17[12]) = *(void *)((char *)a2 + v17[12]);
    *(void *)((char *)a1 + v17[16]) = *(void *)((char *)a2 + v17[16]);
    uint64_t v18 = v17[20];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
    v19[32] = v20[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for NavigationStyle(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_FA8D8((uint64_t)a1, type metadata accessor for NavigationStyle);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_retain();
      swift_retain();
      uint64_t v4 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v5 = v4[12];
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_26A220();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v10(v6, v7, v8);
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      uint64_t v12 = &v6[v11];
      uint64_t v13 = &v7[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
      {
        uint64_t v14 = sub_4A98(&qword_2EA0C0);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v10(v12, v13, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      }
      *(void *)((char *)a1 + v4[16]) = *(void *)((char *)a2 + v4[16]);
      *(void *)((char *)a1 + v4[20]) = *(void *)((char *)a2 + v4[20]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = (int *)sub_4A98(&qword_2EFEF0);
      *(void *)((char *)a1 + v16[12]) = *(void *)((char *)a2 + v16[12]);
      *(void *)((char *)a1 + v16[16]) = *(void *)((char *)a2 + v16[16]);
      uint64_t v17 = v16[20];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      long long v20 = *((_OWORD *)v19 + 1);
      v18[32] = v19[32];
      *((_OWORD *)v18 + 1) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_FA8D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for NavigationStyle(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v4 = (int *)sub_4A98(&qword_2EFEF8);
    uint64_t v5 = v4[12];
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)(a2 + v5);
    uint64_t v8 = sub_26A220();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
    v10(v6, v7, v8);
    uint64_t v11 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
    uint64_t v12 = &v6[v11];
    uint64_t v13 = &v7[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
    {
      uint64_t v14 = sub_4A98(&qword_2EA0C0);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v10(v12, v13, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    }
    *(void *)(a1 + v4[16]) = *(void *)(a2 + v4[16]);
    *(void *)(a1 + v4[20]) = *(void *)(a2 + v4[20]);
  }
  else
  {
    uint64_t v15 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
    uint64_t v16 = (int *)sub_4A98(&qword_2EFEF0);
    *(void *)(a1 + v16[12]) = *(void *)(a2 + v16[12]);
    *(void *)(a1 + v16[16]) = *(void *)(a2 + v16[16]);
    uint64_t v17 = v16[20];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    long long v20 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v20;
    *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NavigationStyle(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_FA8D8(a1, type metadata accessor for NavigationStyle);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v4 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v5 = v4[12];
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_26A220();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
      v10(v6, v7, v8);
      uint64_t v11 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      uint64_t v12 = (void *)(v6 + v11);
      uint64_t v13 = (const void *)(v7 + v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
      {
        uint64_t v14 = sub_4A98(&qword_2EA0C0);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v10((uint64_t)v12, (uint64_t)v13, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      }
      *(void *)(a1 + v4[16]) = *(void *)(a2 + v4[16]);
      *(void *)(a1 + v4[20]) = *(void *)(a2 + v4[20]);
    }
    else
    {
      uint64_t v15 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      uint64_t v16 = (int *)sub_4A98(&qword_2EFEF0);
      *(void *)(a1 + v16[12]) = *(void *)(a2 + v16[12]);
      *(void *)(a1 + v16[16]) = *(void *)(a2 + v16[16]);
      uint64_t v17 = v16[20];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      long long v20 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v20;
      *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_FADD4()
{
  sub_26A220();
  if (v0 <= 0x3F)
  {
    uint64_t v5 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v6 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v7 = "!";
    swift_getTupleTypeLayout();
    uint64_t v9 = &v8;
    uint64_t v4 = &unk_2775E8;
    sub_FD550(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = (char *)&v2;
      uint64_t v6 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v7 = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_getTupleTypeLayout();
      uint64_t v10 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_FAF40()
{
  return swift_getWitnessTable();
}

unint64_t sub_FAFDC(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_45370(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    type metadata accessor for NavigationStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      v11[2] = v12[2];
      swift_retain();
      swift_retain();
      uint64_t v67 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v14 = v67[12];
      uint64_t v15 = (char *)v11 + v14;
      uint64_t v16 = (char *)v12 + v14;
      uint64_t v17 = sub_26A220();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      v66(v15, v16, v17);
      uint64_t v19 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      long long v20 = &v15[v19];
      uint64_t v21 = &v16[v19];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v21, 1, v17))
      {
        uint64_t v22 = sub_4A98(&qword_2EA0C0);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v66(v20, v21, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v17);
      }
      *(void *)((char *)v11 + v67[16]) = *(void *)((char *)v12 + v67[16]);
      *(void *)((char *)v11 + v67[20]) = *(void *)((char *)v12 + v67[20]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
      char v25 = (int *)sub_4A98(&qword_2EFEF0);
      *(void *)((char *)v11 + v25[12]) = *(void *)((char *)v12 + v25[12]);
      *(void *)((char *)v11 + v25[16]) = *(void *)((char *)v12 + v25[16]);
      uint64_t v26 = v25[20];
      char v27 = (char *)v11 + v26;
      uint64_t v28 = (char *)v12 + v26;
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)char v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      *((_OWORD *)v27 + 1) = *((_OWORD *)v28 + 1);
      v27[32] = v28[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[6];
    uint64_t v31 = a3[7];
    uint64_t v32 = a1 + v30;
    uint64_t v33 = a2 + v30;
    uint64_t v34 = *(void *)(v33 + 8);
    *(void *)uint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = v34;
    *(_OWORD *)(v32 + 16) = *(_OWORD *)(v33 + 16);
    uint64_t v35 = a1 + v31;
    uint64_t v36 = a2 + v31;
    *(void *)uint64_t v35 = *(void *)v36;
    *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    uint64_t v37 = a3[8];
    char v38 = (_WORD *)(a1 + v37);
    char v39 = (_WORD *)(a2 + v37);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v38 = *v39;
      uint64_t v40 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v41 = *(int *)(v40 + 24);
      uint64_t v42 = (char *)v38 + v41;
      uint64_t v43 = (char *)v39 + v41;
      uint64_t v44 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      *(void *)((char *)v38 + *(int *)(v40 + 28)) = *(void *)((char *)v39 + *(int *)(v40 + 28));
    }
    else
    {
      *(void *)char v38 = *(void *)v39;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = a3[9];
    uint64_t v46 = (_WORD *)(a1 + v45);
    uint64_t v47 = (_WORD *)(a2 + v45);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v46 = *v47;
      uint64_t v48 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v49 = v48[6];
      uint64_t v50 = (char *)v46 + v49;
      char v51 = (char *)v47 + v49;
      uint64_t v52 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      *(void *)((char *)v46 + v48[7]) = *(void *)((char *)v47 + v48[7]);
      uint64_t v53 = v48[8];
      char v54 = (char *)v46 + v53;
      uint64_t v55 = (char *)v47 + v53;
      v54[2] = v55[2];
      *(_WORD *)char v54 = *(_WORD *)v55;
    }
    else
    {
      *(void *)uint64_t v46 = *(void *)v47;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = a3[10];
    uint64_t v57 = (void *)(a1 + v56);
    uint64_t v58 = (void *)(a2 + v56);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v59 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    }
    else
    {
      void *v57 = *v58;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = a3[11];
    uint64_t v61 = a1 + v60;
    uint64_t v62 = a2 + v60;
    uint64_t v63 = *(void *)v62;
    char v64 = *(unsigned char *)(v62 + 8);
    sub_10E0C(*(void *)v62, v64);
    *(void *)uint64_t v61 = v63;
    *(unsigned char *)(v61 + 8) = v64;
  }
  return a1;
}

uint64_t sub_FB5A0(uint64_t a1, int *a2)
{
  sub_3A380(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  type metadata accessor for NavigationStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v5 = v4 + *(int *)(sub_4A98(&qword_2EFEF8) + 48);
    uint64_t v6 = sub_26A220();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v5, v6);
    uint64_t v9 = v5 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
      v8(v9, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
    sub_4A98(&qword_2EFEF0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = a1 + a2[8];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = v11 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v13 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = a1 + a2[9];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v14 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v16 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = a1 + a2[10];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  uint64_t v19 = a1 + a2[11];
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);

  return sub_C374(v20, v21);
}

uint64_t sub_FB924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_45370(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  type metadata accessor for NavigationStyle(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v66 = a3;
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    v10[2] = v11[2];
    swift_retain();
    swift_retain();
    uint64_t v65 = (int *)sub_4A98(&qword_2EFEF8);
    uint64_t v13 = v65[12];
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = (char *)v11 + v13;
    uint64_t v16 = sub_26A220();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v18(v14, v15, v16);
    uint64_t v19 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
    uint64_t v20 = &v14[v19];
    char v21 = &v15[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16))
    {
      uint64_t v22 = sub_4A98(&qword_2EA0C0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    *(void *)((char *)v10 + v65[16]) = *(void *)((char *)v11 + v65[16]);
    *(void *)((char *)v10 + v65[20]) = *(void *)((char *)v11 + v65[20]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = v66;
  }
  else
  {
    uint64_t v23 = sub_26A220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v11, v23);
    uint64_t v24 = (int *)sub_4A98(&qword_2EFEF0);
    *(void *)((char *)v10 + v24[12]) = *(void *)((char *)v11 + v24[12]);
    *(void *)((char *)v10 + v24[16]) = *(void *)((char *)v11 + v24[16]);
    uint64_t v25 = v24[20];
    uint64_t v26 = (char *)v10 + v25;
    char v27 = (char *)v11 + v25;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
    v26[32] = v27[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = a3[6];
  uint64_t v30 = a3[7];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  uint64_t v33 = *(void *)(v32 + 8);
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = v33;
  *(_OWORD *)(v31 + 16) = *(_OWORD *)(v32 + 16);
  uint64_t v34 = a1 + v30;
  uint64_t v35 = a2 + v30;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  uint64_t v36 = a3[8];
  uint64_t v37 = (_WORD *)(a1 + v36);
  char v38 = (_WORD *)(a2 + v36);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v37 = *v38;
    uint64_t v39 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v40 = *(int *)(v39 + 24);
    uint64_t v41 = (char *)v37 + v40;
    uint64_t v42 = (char *)v38 + v40;
    uint64_t v43 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    *(void *)((char *)v37 + *(int *)(v39 + 28)) = *(void *)((char *)v38 + *(int *)(v39 + 28));
  }
  else
  {
    *(void *)uint64_t v37 = *(void *)v38;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = a3[9];
  uint64_t v45 = (_WORD *)(a1 + v44);
  uint64_t v46 = (_WORD *)(a2 + v44);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v45 = *v46;
    uint64_t v47 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v48 = v47[6];
    uint64_t v49 = (char *)v45 + v48;
    uint64_t v50 = (char *)v46 + v48;
    uint64_t v51 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    *(void *)((char *)v45 + v47[7]) = *(void *)((char *)v46 + v47[7]);
    uint64_t v52 = v47[8];
    uint64_t v53 = (char *)v45 + v52;
    char v54 = (char *)v46 + v52;
    v53[2] = v54[2];
    *(_WORD *)uint64_t v53 = *(_WORD *)v54;
  }
  else
  {
    *(void *)uint64_t v45 = *(void *)v46;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = a3[10];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (void *)(a2 + v55);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v58 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  }
  else
  {
    *uint64_t v56 = *v57;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = a3[11];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = *(void *)v61;
  char v63 = *(unsigned char *)(v61 + 8);
  sub_10E0C(*(void *)v61, v63);
  *(void *)uint64_t v60 = v62;
  *(unsigned char *)(v60 + 8) = v63;
  return a1;
}

uint64_t sub_FBE90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_45370(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_3A380(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = a3[5];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_FA8D8(a1 + v12, type metadata accessor for NavigationStyle);
    type metadata accessor for NavigationStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v71 = a3;
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      void v13[2] = v14[2];
      swift_retain();
      swift_retain();
      uint64_t v70 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v15 = v70[12];
      uint64_t v16 = (char *)v13 + v15;
      uint64_t v17 = (char *)v14 + v15;
      uint64_t v18 = sub_26A220();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v20(v16, v17, v18);
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      uint64_t v22 = &v16[v21];
      uint64_t v23 = &v17[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18))
      {
        uint64_t v24 = sub_4A98(&qword_2EA0C0);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v20(v22, v23, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
      }
      *(void *)((char *)v13 + v70[16]) = *(void *)((char *)v14 + v70[16]);
      *(void *)((char *)v13 + v70[20]) = *(void *)((char *)v14 + v70[20]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v71;
    }
    else
    {
      uint64_t v25 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v13, v14, v25);
      uint64_t v26 = (int *)sub_4A98(&qword_2EFEF0);
      *(void *)((char *)v13 + v26[12]) = *(void *)((char *)v14 + v26[12]);
      *(void *)((char *)v13 + v26[16]) = *(void *)((char *)v14 + v26[16]);
      uint64_t v27 = v26[20];
      uint64_t v28 = (char *)v13 + v27;
      uint64_t v29 = (char *)v14 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      long long v30 = *((_OWORD *)v29 + 1);
      v28[32] = v29[32];
      *((_OWORD *)v28 + 1) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[6];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_retain();
  swift_release();
  v32[1] = v33[1];
  swift_retain();
  swift_release();
  v32[2] = v33[2];
  v32[3] = v33[3];
  uint64_t v34 = a3[7];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  *(void *)(v35 + 16) = v36[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v38 = a3[8];
    uint64_t v39 = (unsigned char *)(a1 + v38);
    uint64_t v40 = (unsigned char *)(a2 + v38);
    sub_B6DC(a1 + v38, &qword_2EBC58);
    sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v39 = *v40;
      v39[1] = v40[1];
      uint64_t v41 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v42 = *(int *)(v41 + 24);
      uint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      *(void *)&v39[*(int *)(v41 + 28)] = *(void *)&v40[*(int *)(v41 + 28)];
    }
    else
    {
      *(void *)uint64_t v39 = *(void *)v40;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = a3[9];
    uint64_t v47 = (unsigned char *)(a1 + v46);
    uint64_t v48 = (unsigned char *)(a2 + v46);
    sub_B6DC(a1 + v46, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      uint64_t v49 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v50 = v49[6];
      uint64_t v51 = &v47[v50];
      uint64_t v52 = &v48[v50];
      uint64_t v53 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      *(void *)&v47[v49[7]] = *(void *)&v48[v49[7]];
      uint64_t v54 = v49[8];
      uint64_t v55 = &v47[v54];
      uint64_t v56 = &v48[v54];
      char v57 = v56[2];
      *(_WORD *)uint64_t v55 = *(_WORD *)v56;
      v55[2] = v57;
    }
    else
    {
      *(void *)uint64_t v47 = *(void *)v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = a3[10];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (void *)(a2 + v58);
    sub_B6DC(a1 + v58, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v61 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    }
    else
    {
      *uint64_t v59 = *v60;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v62 = a3[11];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  uint64_t v65 = *(void *)v64;
  char v66 = *(unsigned char *)(v64 + 8);
  sub_10E0C(*(void *)v64, v66);
  uint64_t v67 = *(void *)v63;
  char v68 = *(unsigned char *)(v63 + 8);
  *(void *)uint64_t v63 = v65;
  *(unsigned char *)(v63 + 8) = v66;
  sub_C374(v67, v68);
  return a1;
}

_OWORD *sub_FC4C8(_OWORD *a1, _OWORD *a2, int *a3)
{
  char v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  type metadata accessor for NavigationStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v64 = v3;
    *(_OWORD *)char v8 = *(_OWORD *)v9;
    *((void *)v8 + 2) = *((void *)v9 + 2);
    uint64_t v63 = (int *)sub_4A98(&qword_2EFEF8);
    uint64_t v10 = v63[12];
    char v11 = &v8[v10];
    uint64_t v12 = &v9[v10];
    uint64_t v13 = sub_26A220();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v15(v11, v12, v13);
    uint64_t v16 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
    {
      uint64_t v19 = sub_4A98(&qword_2EA0C0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    *(void *)&v8[v63[16]] = *(void *)&v9[v63[16]];
    *(void *)&v8[v63[20]] = *(void *)&v9[v63[20]];
    char v3 = v64;
  }
  else
  {
    uint64_t v20 = sub_26A220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v8, v9, v20);
    uint64_t v21 = (int *)sub_4A98(&qword_2EFEF0);
    *(void *)&v8[v21[12]] = *(void *)&v9[v21[12]];
    *(void *)&v8[v21[16]] = *(void *)&v9[v21[16]];
    uint64_t v22 = v21[20];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    long long v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    v23[32] = v24[32];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v3[6];
  uint64_t v27 = v3[7];
  long long v28 = *(_OWORD *)((char *)a2 + v26);
  long long v29 = *(_OWORD *)((char *)a2 + v26 + 16);
  long long v30 = (_OWORD *)((char *)a1 + v26);
  *long long v30 = v28;
  v30[1] = v29;
  uint64_t v31 = (char *)a1 + v27;
  uint64_t v32 = (char *)a2 + v27;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((void *)v31 + 2) = *((void *)v32 + 2);
  uint64_t v33 = v3[8];
  uint64_t v34 = (_WORD *)((char *)a1 + v33);
  uint64_t v35 = (_WORD *)((char *)a2 + v33);
  uint64_t v36 = sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v34 = *v35;
    uint64_t v37 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v38 = *(int *)(v37 + 24);
    uint64_t v39 = (char *)v34 + v38;
    uint64_t v40 = (char *)v35 + v38;
    uint64_t v41 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
    *(void *)((char *)v34 + *(int *)(v37 + 28)) = *(void *)((char *)v35 + *(int *)(v37 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  uint64_t v42 = v3[9];
  uint64_t v43 = (_WORD *)((char *)a1 + v42);
  uint64_t v44 = (_WORD *)((char *)a2 + v42);
  uint64_t v45 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v43 = *v44;
    uint64_t v46 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v47 = v46[6];
    uint64_t v48 = (char *)v43 + v47;
    uint64_t v49 = (char *)v44 + v47;
    uint64_t v50 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    *(void *)((char *)v43 + v46[7]) = *(void *)((char *)v44 + v46[7]);
    uint64_t v51 = v46[8];
    uint64_t v52 = (char *)v43 + v51;
    uint64_t v53 = (char *)v44 + v51;
    v52[2] = v53[2];
    *(_WORD *)uint64_t v52 = *(_WORD *)v53;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  uint64_t v54 = v3[10];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v58 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v55, v56, v58);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  uint64_t v59 = v3[11];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  *(void *)uint64_t v60 = *(void *)v61;
  v60[8] = v61[8];
  return a1;
}

uint64_t sub_FC9CC(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_3A380(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    sub_FA8D8(a1 + v10, type metadata accessor for NavigationStyle);
    type metadata accessor for NavigationStyle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      char v68 = (int *)sub_4A98(&qword_2EFEF8);
      uint64_t v13 = v68[12];
      uint64_t v14 = v11 + v13;
      uint64_t v15 = v12 + v13;
      uint64_t v16 = sub_26A220();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
      v67(v14, v15, v16);
      uint64_t v18 = *(int *)(sub_4A98(&qword_2EFE68) + 48);
      uint64_t v19 = (void *)(v14 + v18);
      uint64_t v20 = (const void *)(v15 + v18);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16))
      {
        uint64_t v21 = sub_4A98(&qword_2EA0C0);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v67((uint64_t)v19, (uint64_t)v20, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
      }
      *(void *)(v11 + v68[16]) = *(void *)(v12 + v68[16]);
      *(void *)(v11 + v68[20]) = *(void *)(v12 + v68[20]);
    }
    else
    {
      uint64_t v22 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v11, v12, v22);
      uint64_t v23 = (int *)sub_4A98(&qword_2EFEF0);
      *(void *)(v11 + v23[12]) = *(void *)(v12 + v23[12]);
      *(void *)(v11 + v23[16]) = *(void *)(v12 + v23[16]);
      uint64_t v24 = v23[20];
      uint64_t v25 = v11 + v24;
      uint64_t v26 = v12 + v24;
      long long v27 = *(_OWORD *)(v26 + 16);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 16) = v27;
      *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  swift_release();
  *(_OWORD *)(v29 + 16) = *(_OWORD *)(v30 + 16);
  uint64_t v31 = a3[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v34 = a3[8];
    uint64_t v35 = (_WORD *)(a1 + v34);
    uint64_t v36 = (_WORD *)(a2 + v34);
    sub_B6DC(a1 + v34, &qword_2EBC58);
    uint64_t v37 = sub_4A98(&qword_2EBC58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v35 = *v36;
      uint64_t v38 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v39 = *(int *)(v38 + 24);
      uint64_t v40 = (char *)v35 + v39;
      uint64_t v41 = (char *)v36 + v39;
      uint64_t v42 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      *(void *)((char *)v35 + *(int *)(v38 + 28)) = *(void *)((char *)v36 + *(int *)(v38 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    uint64_t v43 = a3[9];
    uint64_t v44 = (_WORD *)(a1 + v43);
    uint64_t v45 = (_WORD *)(a2 + v43);
    sub_B6DC(a1 + v43, &qword_2EB708);
    uint64_t v46 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v44 = *v45;
      uint64_t v47 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v48 = v47[6];
      uint64_t v49 = (char *)v44 + v48;
      uint64_t v50 = (char *)v45 + v48;
      uint64_t v51 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      *(void *)((char *)v44 + v47[7]) = *(void *)((char *)v45 + v47[7]);
      uint64_t v52 = v47[8];
      uint64_t v53 = (char *)v44 + v52;
      uint64_t v54 = (char *)v45 + v52;
      v53[2] = v54[2];
      *(_WORD *)uint64_t v53 = *(_WORD *)v54;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    uint64_t v55 = a3[10];
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (const void *)(a2 + v55);
    sub_B6DC(a1 + v55, &qword_2EA968);
    uint64_t v58 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v59 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v56, v57, v59);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
  }
  uint64_t v60 = a3[11];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (uint64_t *)(a2 + v60);
  uint64_t v63 = *v62;
  LOBYTE(v62) = *((unsigned char *)v62 + 8);
  uint64_t v64 = *(void *)v61;
  char v65 = *(unsigned char *)(v61 + 8);
  *(void *)uint64_t v61 = v63;
  *(unsigned char *)(v61 + 8) = (_BYTE)v62;
  sub_C374(v64, v65);
  return a1;
}

uint64_t sub_FCF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FCFAC);
}

uint64_t sub_FCFAC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for NavigationStyle(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  uint64_t v13 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4A98(&qword_2EAB18);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[10];

  return v16(v18, a2, v17);
}

uint64_t sub_FD17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FD190);
}

uint64_t sub_FD190(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for NavigationStyle(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EDCD8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t v13 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4A98(&qword_2EAB18);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[10];

  return v16(v18, a2, a2, v17);
}

void sub_FD360()
{
  type metadata accessor for NavigationStyle(319);
  if (v0 <= 0x3F)
  {
    sub_FD550(319, &qword_2EDD48, type metadata accessor for FontConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_FD550(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_FD550(319, (unint64_t *)&qword_2EAB98, type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_FD550(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_FD5B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_FD5D0@<X0>(char *a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v114 = a3;
  uint64_t v109 = sub_4A98(&qword_2F00B0);
  uint64_t v99 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v5 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_4A98(&qword_2F00A8);
  uint64_t v101 = *(char **)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v100 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2F00C8);
  uint64_t v102 = *(void (***)(char *, char *, uint64_t))(v113 - 8);
  uint64_t v7 = __chkstk_darwin(v113);
  uint64_t v98 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v95 = (char *)&v90 - v9;
  uint64_t v10 = type metadata accessor for ToolbarPrincipalType(0);
  __chkstk_darwin(v10 - 8);
  long long v105 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_4A98(&qword_2F00D0);
  __chkstk_darwin(v107);
  long long v111 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_4A98(&qword_2F0080);
  uint64_t v94 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_4A98(&qword_2F00D8);
  uint64_t v97 = *(void *)(v110 - 8);
  uint64_t v15 = __chkstk_darwin(v110);
  uint64_t v93 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v90 - v17;
  uint64_t v104 = sub_26A220();
  uint64_t v18 = *(void *)(v104 - 8);
  uint64_t v19 = __chkstk_darwin(v104);
  uint64_t v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v90 - v22;
  uint64_t v24 = type metadata accessor for NavigationStyle(0);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v28 = *(int *)(v27 + 20);
  unint64_t v103 = a1;
  sub_103E4C((uint64_t)&a1[v28], (uint64_t)v26, type metadata accessor for NavigationStyle);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = v26[1];
    uint64_t v104 = *v26;
    uint64_t v29 = v104;
    uint64_t v97 = v30;
    uint64_t v31 = v26[2];
    uint64_t v32 = (int *)sub_4A98(&qword_2EFEF8);
    uint64_t v33 = (uint64_t)v26 + v32[12];
    uint64_t v96 = *(char **)((char *)v26 + v32[16]);
    uint64_t v34 = v32[20];
    uint64_t v91 = v5;
    uint64_t v94 = *(uint64_t *)((char *)v26 + v34);
    uint64_t v35 = (uint64_t)v105;
    sub_103EB8(v33, (uint64_t)v105, type metadata accessor for ToolbarPrincipalType);
    uint64_t v36 = v103;
    uint64_t v37 = &v103[*(int *)(v27 + 44)];
    uint64_t v38 = *(void *)v37;
    char v39 = v37[8];
    sub_10E0C(*(void *)v37, v39);
    sub_41888(v38, v39);
    sub_C374(v38, v39);
    sub_4A98(&qword_2ED7B8);
    sub_26AC70();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_26F990;
    sub_26AC60();
    uint64_t v40 = sub_4A98(&qword_2F0090);
    uint64_t v41 = sub_7C18(&qword_2F0098, &qword_2F0090);
    uint64_t v93 = (char *)v40;
    uint64_t v42 = v41;
    uint64_t v92 = (char *)v41;
    sub_26C020();
    uint64_t v43 = swift_bridgeObjectRelease();
    __chkstk_darwin(v43);
    *(&v90 - 8) = v35;
    *(&v90 - 7) = v29;
    *(&v90 - 6) = v30;
    *(&v90 - 5) = v31;
    uint64_t v44 = v94;
    *(&v90 - 4) = (uint64_t)v36;
    *(&v90 - 3) = v44;
    *(&v90 - 2) = (uint64_t)v96;
    uint64_t v45 = sub_4A98(&qword_2F00B8);
    long long v115 = (char *)v40;
    char v116 = (char *)v42;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v106 = (uint64_t (*)(char *, uint64_t))&protocol conformance descriptor for TupleToolbarContent<A>;
    uint64_t v47 = sub_7C18(&qword_2F00C0, &qword_2F00B8);
    uint64_t v48 = v100;
    uint64_t v49 = v109;
    uint64_t v50 = v91;
    sub_26C010();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v50, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v115 = (char *)v49;
    char v116 = (char *)v45;
    uint64_t v117 = OpaqueTypeConformance2;
    uint64_t v118 = v47;
    uint64_t v51 = swift_getOpaqueTypeConformance2();
    uint64_t v52 = v98;
    uint64_t v53 = v112;
    sub_26BDB0();
    (*((void (**)(char *, uint64_t))v101 + 1))(v48, v53);
    uint64_t v54 = v102;
    uint64_t v55 = v95;
    uint64_t v56 = v113;
    v102[4](v95, v52, v113);
    uint64_t v57 = v54;
    v54[2](v111, v55, v56);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = sub_7B0C(&qword_2F0088);
    long long v115 = v93;
    char v116 = v92;
    uint64_t v59 = swift_getOpaqueTypeConformance2();
    uint64_t v60 = sub_7C18(&qword_2F00A0, &qword_2F0088);
    long long v115 = (char *)v108;
    char v116 = (char *)v58;
    uint64_t v117 = v59;
    uint64_t v118 = v60;
    swift_getOpaqueTypeConformance2();
    long long v115 = (char *)v53;
    char v116 = (char *)v51;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v57[1])(v55, v56);
    return sub_FA8D8((uint64_t)v105, type metadata accessor for ToolbarPrincipalType);
  }
  else
  {
    uint64_t v62 = (int *)sub_4A98(&qword_2EFEF0);
    uint64_t v95 = *(char **)((char *)v26 + v62[12]);
    uint64_t v91 = *(char **)((char *)v26 + v62[16]);
    uint64_t v63 = (char *)v26 + v62[20];
    long long v105 = v14;
    char v65 = (char *)*((void *)v63 + 1);
    uint64_t v102 = *(void (***)(char *, char *, uint64_t))v63;
    uint64_t v64 = (char *)v102;
    uint64_t v101 = v65;
    uint64_t v66 = *((void *)v63 + 2);
    uint64_t v67 = *((void *)v63 + 3);
    char v68 = v63[32];
    uint64_t v69 = *(void (**)(char *, uint64_t *, uint64_t))(v18 + 32);
    uint64_t v92 = v23;
    uint64_t v70 = v104;
    v69(v23, v26, v104);
    long long v115 = v64;
    char v116 = v65;
    uint64_t v117 = v66;
    uint64_t v118 = v67;
    char v119 = v68;
    long long v71 = v103;
    sub_FE3B0((uint64_t)v23, (uint64_t)v21);
    uint64_t v72 = sub_4A98(&qword_2F0090);
    uint64_t v73 = sub_7C18(&qword_2F0098, &qword_2F0090);
    uint64_t v99 = v72;
    uint64_t v98 = (char *)v73;
    sub_26BB30();
    uint64_t v74 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    uint64_t v100 = (char *)(v18 + 8);
    uint64_t v106 = v74;
    uint64_t v75 = v74(v21, v70);
    uint64_t v90 = (uint64_t)&v90;
    __chkstk_darwin(v75);
    *(&v90 - 4) = (uint64_t)v91;
    *(&v90 - 3) = (uint64_t)v71;
    *(&v90 - 2) = (uint64_t)v95;
    uint64_t v76 = sub_4A98(&qword_2F0088);
    long long v115 = (char *)v72;
    char v116 = (char *)v73;
    uint64_t v77 = swift_getOpaqueTypeConformance2();
    unint64_t v103 = (char *)&protocol conformance descriptor for TupleToolbarContent<A>;
    uint64_t v78 = sub_7C18(&qword_2F00A0, &qword_2F0088);
    uint64_t v79 = v93;
    uint64_t v80 = v108;
    uint64_t v81 = (uint64_t)v105;
    sub_26C010();
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v81, v80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v82 = v97;
    uint64_t v83 = v96;
    long long v84 = v79;
    uint64_t v85 = v110;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v84, v110);
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v111, v83, v85);
    swift_storeEnumTagMultiPayload();
    long long v115 = (char *)v80;
    char v116 = (char *)v76;
    uint64_t v117 = v77;
    uint64_t v118 = v78;
    swift_getOpaqueTypeConformance2();
    uint64_t v86 = sub_7B0C(&qword_2F00B8);
    long long v115 = (char *)v99;
    char v116 = v98;
    uint64_t v87 = swift_getOpaqueTypeConformance2();
    uint64_t v88 = sub_7C18(&qword_2F00C0, &qword_2F00B8);
    long long v115 = (char *)v109;
    char v116 = (char *)v86;
    uint64_t v117 = v87;
    uint64_t v118 = v88;
    uint64_t v89 = swift_getOpaqueTypeConformance2();
    long long v115 = (char *)v112;
    char v116 = (char *)v89;
    swift_getOpaqueTypeConformance2();
    sub_26B2F0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v85);
    return v106(v92, v104);
  }
}

uint64_t sub_FE3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_4A98(&qword_2F0290);
  sub_26C480();
  if (v6)
  {
    uint64_t v4 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  }
  else
  {
    type metadata accessor for NavigationStyleViewModifier(0);
    sub_4A98(&qword_2F0268);
    sub_26C480();
    return sub_26A210();
  }
}

uint64_t sub_FE4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v21[0] = a3;
  v21[1] = a4;
  uint64_t v6 = sub_4A98(&qword_2F00E0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26B3B0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_4A98(&qword_2F00E8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v21 - v15;
  sub_26B390();
  v21[8] = a1;
  v21[9] = a2;
  sub_4A98(&qword_2F00F0);
  sub_103568();
  sub_26A7C0();
  sub_26B380();
  void v21[4] = v21[0];
  v21[5] = a2;
  sub_26A7C0();
  uint64_t v17 = &v8[*(int *)(v6 + 48)];
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v18(v8, v16, v10);
  v18(v17, v14, v10);
  sub_26B200();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_FE748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v238 = a2;
  uint64_t v239 = a1;
  uint64_t v2 = sub_26C270();
  uint64_t v208 = *(void *)(v2 - 8);
  uint64_t v209 = v2;
  __chkstk_darwin(v2);
  uint64_t v207 = (char *)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_4A98(&qword_2F0200);
  __chkstk_darwin(v200);
  uint64_t v201 = (char *)&v181 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F0228);
  uint64_t v205 = *(void *)(v5 - 8);
  uint64_t v206 = v5;
  __chkstk_darwin(v5);
  uint64_t v204 = (char *)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_4A98(&qword_2F01F8);
  uint64_t v7 = __chkstk_darwin(v225);
  uint64_t v203 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v210 = (uint64_t)&v181 - v9;
  uint64_t v223 = sub_4A98(&qword_2F0230);
  __chkstk_darwin(v223);
  uint64_t v224 = (uint64_t)&v181 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_4A98(&qword_2F0188);
  __chkstk_darwin(v237);
  uint64_t v226 = (char *)&v181 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v196 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v197 = v12;
  uint64_t v198 = (uint64_t)&v181 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F01D8);
  __chkstk_darwin(v13 - 8);
  uint64_t v190 = (uint64_t *)((char *)&v181 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v186 = sub_4A98(&qword_2F01C8);
  __chkstk_darwin(v186);
  uint64_t v191 = (uint64_t)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_4A98(&qword_2F01B8);
  __chkstk_darwin(v187);
  uint64_t v192 = (uint64_t)&v181 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_4A98(&qword_2F01A8);
  __chkstk_darwin(v189);
  uint64_t v193 = (uint64_t)&v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_4A98(&qword_2F0190);
  __chkstk_darwin(v221);
  uint64_t v195 = (uint64_t)&v181 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_4A98(&qword_2F0238);
  uint64_t v202 = *(void *)(v222 - 8);
  uint64_t v19 = __chkstk_darwin(v222);
  uint64_t v194 = (char *)&v181 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v199 = (char *)&v181 - v21;
  uint64_t v227 = sub_26AC00();
  uint64_t v217 = *(void *)(v227 - 8);
  __chkstk_darwin(v227);
  uint64_t v216 = (char *)&v181 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_4A98(&qword_2F0170);
  __chkstk_darwin(v218);
  uint64_t v183 = (char *)&v181 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_4A98(&qword_2F0240);
  uint64_t v188 = *(void *)(v220 - 8);
  uint64_t v24 = __chkstk_darwin(v220);
  uint64_t v182 = (char *)&v181 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v185 = (char *)&v181 - v26;
  uint64_t v213 = sub_4A98(&qword_2F0248);
  __chkstk_darwin(v213);
  uint64_t v215 = (uint64_t)&v181 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_4A98(&qword_2F0160);
  __chkstk_darwin(v233);
  uint64_t v219 = (char *)&v181 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = type metadata accessor for UIKitActionButton(0);
  __chkstk_darwin(v214);
  uint64_t v30 = (char *)&v181 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_269BA0();
  __chkstk_darwin(v31 - 8);
  uint64_t v32 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v32 - 8);
  uint64_t v228 = (uint64_t)&v181 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (int *)sub_4A98(&qword_2F0150);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v181 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_4A98(&qword_2F0250);
  __chkstk_darwin(v234);
  uint64_t v236 = (uint64_t)&v181 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_4A98(&qword_2F0258);
  __chkstk_darwin(v229);
  uint64_t v231 = (uint64_t)&v181 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4A98(&qword_2F0260);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v181 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = sub_4A98(&qword_2F0138);
  __chkstk_darwin(v230);
  uint64_t v212 = (char *)&v181 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_4A98(&qword_2F0128);
  __chkstk_darwin(v235);
  uint64_t v232 = (char *)&v181 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for NavigationActionMenuButtonView(0);
  uint64_t v45 = __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v181 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v181 - v48;
  sub_C3100(v239, (uint64_t)&v247);
  switch(v261)
  {
    case 1:
      uint64_t v227 = *((void *)&v247 + 1);
      uint64_t v57 = v247;
      uint64_t v58 = *((void *)&v249 + 1);
      sub_AD44(v248, (uint64_t)v243);
      uint64_t v59 = sub_26A630();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v228, 1, 1, v59);
      sub_C224((uint64_t)v243, (uint64_t)&v245);
      uint64_t v60 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
      uint64_t v61 = v227;
      *((void *)v60 + 2) = v57;
      *((void *)v60 + 3) = v61;
      uint64_t v239 = v58;
      *((void *)v60 + 4) = v58;
      swift_retain();
      sub_269B80();
      sub_269AB0();
      uint64_t v62 = &v36[v34[9]];
      *(void *)uint64_t v62 = swift_getKeyPath();
      v62[8] = 0;
      uint64_t v63 = (uint64_t *)&v36[v34[10]];
      *uint64_t v63 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = &v36[v34[11]];
      *(void *)uint64_t v64 = swift_getKeyPath();
      v64[40] = 0;
      sub_19CC4(v228, (uint64_t)&v36[v34[12]], qword_2EA3E0);
      sub_19CC4((uint64_t)&v245, (uint64_t)&v36[v34[13]], &qword_2EA818);
      char v65 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v36[v34[14]];
      char *v65 = sub_1045A4;
      v65[1] = v60;
      sub_B678((uint64_t)v36, (uint64_t)v41, &qword_2F0150);
      swift_storeEnumTagMultiPayload();
      sub_103848(&qword_2F0140, (void (*)(uint64_t))type metadata accessor for NavigationActionMenuButtonView);
      sub_7C18(&qword_2F0148, &qword_2F0150);
      uint64_t v66 = (uint64_t)v212;
      sub_26B2F0();
      sub_B678(v66, v231, &qword_2F0138);
      swift_storeEnumTagMultiPayload();
      sub_103778();
      sub_103890();
      uint64_t v67 = (uint64_t)v232;
      sub_26B2F0();
      sub_B6DC(v66, &qword_2F0138);
      sub_B678(v67, v236, &qword_2F0128);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      swift_release();
      sub_B6DC(v67, &qword_2F0128);
      uint64_t v68 = (uint64_t)v36;
      uint64_t v69 = &qword_2F0150;
      goto LABEL_8;
    case 2:
      long long v70 = v247;
      sub_AD44(v248, (uint64_t)v243);
      uint64_t v71 = sub_26A630();
      uint64_t v72 = v228;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v228, 1, 1, v71);
      sub_C224((uint64_t)v243, (uint64_t)&v245);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v70;
      sub_269B80();
      uint64_t v74 = (uint64_t)v183;
      sub_269AB0();
      uint64_t v75 = (int *)v218;
      uint64_t v76 = v74 + *(int *)(v218 + 36);
      *(void *)uint64_t v76 = swift_getKeyPath();
      *(unsigned char *)(v76 + 8) = 0;
      uint64_t v77 = (uint64_t *)(v74 + v75[10]);
      *uint64_t v77 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v78 = v74 + v75[11];
      *(void *)uint64_t v78 = swift_getKeyPath();
      *(unsigned char *)(v78 + 40) = 0;
      sub_19CC4(v72, v74 + v75[12], qword_2EA3E0);
      sub_19CC4((uint64_t)&v245, v74 + v75[13], &qword_2EA818);
      uint64_t v79 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v74 + v75[14]);
      *uint64_t v79 = sub_104518;
      v79[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v73;
      uint64_t v80 = v216;
      sub_26ABF0();
      uint64_t v81 = sub_7C18(&qword_2F0178, &qword_2F0170);
      uint64_t v82 = sub_103848(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      uint64_t v83 = v182;
      uint64_t v84 = v227;
      sub_26BC70();
      (*(void (**)(char *, uint64_t))(v217 + 8))(v80, v84);
      sub_B6DC(v74, &qword_2F0170);
      uint64_t v85 = v188;
      uint64_t v86 = v185;
      uint64_t v87 = v220;
      (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v185, v83, v220);
      (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v215, v86, v87);
      swift_storeEnumTagMultiPayload();
      sub_103848(&qword_2F0168, (void (*)(uint64_t))type metadata accessor for UIKitActionButton);
      *(void *)&long long v245 = v75;
      *((void *)&v245 + 1) = v84;
      *(void *)&long long v246 = v81;
      *((void *)&v246 + 1) = v82;
      swift_getOpaqueTypeConformance2();
      uint64_t v88 = (uint64_t)v219;
      sub_26B2F0();
      sub_B678(v88, v231, &qword_2F0160);
      swift_storeEnumTagMultiPayload();
      sub_103778();
      sub_103890();
      uint64_t v89 = (uint64_t)v232;
      sub_26B2F0();
      sub_B6DC(v88, &qword_2F0160);
      sub_B678(v89, v236, &qword_2F0128);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      sub_B6DC(v89, &qword_2F0128);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
      goto LABEL_9;
    case 3:
      uint64_t v90 = v247;
      sub_AD44((long long *)((char *)&v247 + 8), (uint64_t)v243);
      sub_C224((uint64_t)v243, (uint64_t)&v245);
      *(void *)uint64_t v30 = swift_getKeyPath();
      v30[40] = 0;
      uint64_t v91 = (int *)v214;
      uint64_t v92 = (uint64_t *)&v30[*(int *)(v214 + 20)];
      *uint64_t v92 = swift_getKeyPath();
      sub_4A98(&qword_2EBC98);
      swift_storeEnumTagMultiPayload();
      sub_269B80();
      sub_269AB0();
      uint64_t v93 = &v30[v91[7]];
      *(void *)uint64_t v93 = swift_getKeyPath();
      v93[8] = 0;
      uint64_t v94 = (uint64_t *)&v30[v91[8]];
      uint64_t *v94 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v95 = &v30[v91[9]];
      *(void *)uint64_t v95 = swift_getKeyPath();
      v95[40] = 0;
      *(void *)&v30[v91[10]] = v90;
      sub_AD44(&v245, (uint64_t)&v30[v91[11]]);
      sub_103E4C((uint64_t)v30, v215, type metadata accessor for UIKitActionButton);
      swift_storeEnumTagMultiPayload();
      sub_103848(&qword_2F0168, (void (*)(uint64_t))type metadata accessor for UIKitActionButton);
      uint64_t v96 = sub_7C18(&qword_2F0178, &qword_2F0170);
      uint64_t v97 = sub_103848(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      *(void *)&long long v245 = v218;
      *((void *)&v245 + 1) = v227;
      *(void *)&long long v246 = v96;
      *((void *)&v246 + 1) = v97;
      swift_getOpaqueTypeConformance2();
      uint64_t v98 = (uint64_t)v219;
      sub_26B2F0();
      sub_B678(v98, v231, &qword_2F0160);
      swift_storeEnumTagMultiPayload();
      sub_103778();
      sub_103890();
      uint64_t v99 = (uint64_t)v232;
      sub_26B2F0();
      sub_B6DC(v98, &qword_2F0160);
      sub_B678(v99, v236, &qword_2F0128);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      sub_B6DC(v99, &qword_2F0128);
      sub_FA8D8((uint64_t)v30, type metadata accessor for UIKitActionButton);
      goto LABEL_9;
    case 4:
      uint64_t v100 = v258;
      uint64_t v233 = v259;
      uint64_t v101 = v260;
      v243[7] = v253;
      v243[8] = v254;
      v243[9] = v255;
      uint64_t v102 = v257;
      uint64_t v244 = v256;
      v243[4] = v250;
      v243[5] = v251;
      v243[6] = v252;
      v243[0] = v247;
      v243[1] = v248[0];
      v243[2] = v248[1];
      v243[3] = v249;
      uint64_t v103 = v211;
      uint64_t v104 = v211 + *(int *)(v184 + 24);
      uint64_t v105 = *(void *)(v104 + 8);
      *(void *)&long long v245 = *(void *)v104;
      *((void *)&v245 + 1) = v105;
      long long v246 = *(_OWORD *)(v104 + 16);
      uint64_t v239 = sub_4A98(&qword_2F0268);
      sub_26C480();
      uint64_t v240 = v242;
      long long v245 = xmmword_277540;
      sub_103FB4();
      sub_26D320();
      double v106 = v241;
      double v107 = v241 / 20.0 * -0.25 + 1.0;
      uint64_t v108 = sub_26B120();
      uint64_t v109 = (uint64_t)v190;
      *uint64_t v190 = v108;
      *(void *)(v109 + 8) = 0x4030000000000000;
      *(unsigned char *)(v109 + 16) = 0;
      uint64_t v110 = sub_4A98(&qword_2F0278);
      sub_10234C(v103, v243, v102, v100, v233, v101, v109 + *(int *)(v110 + 44));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v111 = sub_26B770();
      sub_26A640();
      uint64_t v113 = v112;
      uint64_t v115 = v114;
      uint64_t v117 = v116;
      uint64_t v119 = v118;
      uint64_t v120 = v191;
      sub_B678(v109, v191, &qword_2F01D8);
      uint64_t v121 = v120 + *(int *)(v186 + 36);
      *(unsigned char *)uint64_t v121 = v111;
      *(void *)(v121 + 8) = v113;
      *(void *)(v121 + 16) = v115;
      *(void *)(v121 + 24) = v117;
      *(void *)(v121 + 32) = v119;
      *(unsigned char *)(v121 + 40) = 0;
      sub_B6DC(v109, &qword_2F01D8);
      sub_26C790();
      uint64_t v123 = v122;
      uint64_t v125 = v124;
      uint64_t v126 = v192;
      sub_B678(v120, v192, &qword_2F01C8);
      uint64_t v127 = v126 + *(int *)(v187 + 36);
      *(double *)uint64_t v127 = v107;
      *(double *)(v127 + 8) = v107;
      *(void *)(v127 + 16) = v123;
      *(void *)(v127 + 24) = v125;
      sub_B6DC(v120, &qword_2F01C8);
      uint64_t v128 = sub_26C6B0();
      uint64_t v129 = v193;
      sub_B678(v126, v193, &qword_2F01B8);
      Swift::String v130 = (uint64_t *)(v129 + *(int *)(v189 + 36));
      uint64_t *v130 = v128;
      *((double *)v130 + 1) = v106;
      sub_B6DC(v126, &qword_2F01B8);
      LOBYTE(v128) = sub_26B790();
      sub_26A640();
      uint64_t v132 = v131;
      uint64_t v134 = v133;
      uint64_t v136 = v135;
      uint64_t v138 = v137;
      uint64_t v139 = v195;
      sub_B678(v129, v195, &qword_2F01A8);
      uint64_t v140 = v221;
      uint64_t v141 = v139 + *(int *)(v221 + 36);
      *(unsigned char *)uint64_t v141 = v128;
      *(void *)(v141 + 8) = v132;
      *(void *)(v141 + 16) = v134;
      *(void *)(v141 + 24) = v136;
      *(void *)(v141 + 32) = v138;
      *(unsigned char *)(v141 + 40) = 0;
      sub_B6DC(v129, &qword_2F01A8);
      uint64_t v142 = *(void *)(v104 + 8);
      *(void *)&long long v245 = *(void *)v104;
      *((void *)&v245 + 1) = v142;
      long long v246 = *(_OWORD *)(v104 + 16);
      sub_26C480();
      *(void *)&long long v245 = v242;
      uint64_t v143 = v103;
      uint64_t v144 = v198;
      sub_103E4C(v143, v198, type metadata accessor for NavigationStyleViewModifier);
      unint64_t v145 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
      unint64_t v146 = (v197 + v145 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v147 = swift_allocObject();
      sub_103EB8(v144, v147 + v145, type metadata accessor for NavigationStyleViewModifier);
      *(void *)(v147 + v146) = 0x4034000000000000;
      *(double *)(v147 + ((v146 + 15) & 0xFFFFFFFFFFFFFFF8)) = v106;
      uint64_t v148 = sub_103BB0(&qword_2F0198, &qword_2F0190, (void (*)(void))sub_103AE4);
      unint64_t v149 = sub_D5838();
      uint64_t v150 = v194;
      sub_26C050();
      swift_release();
      sub_B6DC(v139, &qword_2F0190);
      uint64_t v151 = v202;
      uint64_t v152 = v199;
      uint64_t v153 = v222;
      (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v199, v150, v222);
      (*(void (**)(uint64_t, char *, uint64_t))(v151 + 16))(v224, v152, v153);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v245 = v140;
      *((void *)&v245 + 1) = &type metadata for CGFloat;
      *(void *)&long long v246 = v148;
      *((void *)&v246 + 1) = v149;
      swift_getOpaqueTypeConformance2();
      sub_103CCC();
      uint64_t v154 = (uint64_t)v226;
      sub_26B2F0();
      sub_B678(v154, v236, &qword_2F0188);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      sub_B6DC(v154, &qword_2F0188);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v152, v153);
      return sub_2D738((uint64_t)v243);
    case 5:
      char v155 = v247;
      sub_AD44((long long *)((char *)&v247 + 8), (uint64_t)v243);
      uint64_t v156 = sub_26A630();
      uint64_t v157 = v228;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v228, 1, 1, v156);
      sub_C224((uint64_t)v243, (uint64_t)&v245);
      uint64_t v158 = swift_allocObject();
      *(unsigned char *)(v158 + 16) = v155;
      sub_269B80();
      uint64_t v159 = (uint64_t)v201;
      sub_269AB0();
      uint64_t v160 = (int *)v200;
      uint64_t v161 = v159 + *(int *)(v200 + 36);
      *(void *)uint64_t v161 = swift_getKeyPath();
      *(unsigned char *)(v161 + 8) = 0;
      uint64_t v162 = (uint64_t *)(v159 + v160[10]);
      *uint64_t v162 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v163 = v159 + v160[11];
      *(void *)uint64_t v163 = swift_getKeyPath();
      *(unsigned char *)(v163 + 40) = 0;
      sub_19CC4(v157, v159 + v160[12], qword_2EA3E0);
      sub_19CC4((uint64_t)&v245, v159 + v160[13], &qword_2EA818);
      uint64_t v164 = (void *)(v159 + v160[14]);
      *uint64_t v164 = LibraryAssetState.ownership.getter;
      v164[1] = v158;
      uint64_t v165 = v216;
      sub_26ABF0();
      sub_7C18(&qword_2F0208, &qword_2F0200);
      sub_103848(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      uint64_t v166 = v204;
      uint64_t v167 = v227;
      sub_26BC70();
      (*(void (**)(char *, uint64_t))(v217 + 8))(v165, v167);
      sub_B6DC(v159, &qword_2F0200);
      uint64_t v169 = v207;
      uint64_t v168 = v208;
      uint64_t v170 = v209;
      (*(void (**)(char *, void, uint64_t))(v208 + 104))(v207, enum case for Image.Scale.medium(_:), v209);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v172 = (uint64_t)v203;
      double v173 = (uint64_t *)&v203[*(int *)(v225 + 36)];
      uint64_t v174 = sub_4A98(&qword_2EB038);
      (*(void (**)(char *, char *, uint64_t))(v168 + 16))((char *)v173 + *(int *)(v174 + 28), v169, v170);
      *double v173 = KeyPath;
      uint64_t v176 = v205;
      uint64_t v175 = v206;
      (*(void (**)(uint64_t, char *, uint64_t))(v205 + 16))(v172, v166, v206);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v170);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v166, v175);
      uint64_t v177 = v210;
      sub_19CC4(v172, v210, &qword_2F01F8);
      sub_B678(v177, v224, &qword_2F01F8);
      swift_storeEnumTagMultiPayload();
      uint64_t v178 = sub_103BB0(&qword_2F0198, &qword_2F0190, (void (*)(void))sub_103AE4);
      unint64_t v179 = sub_D5838();
      *(void *)&long long v245 = v221;
      *((void *)&v245 + 1) = &type metadata for CGFloat;
      *(void *)&long long v246 = v178;
      *((void *)&v246 + 1) = v179;
      swift_getOpaqueTypeConformance2();
      sub_103CCC();
      uint64_t v180 = (uint64_t)v226;
      sub_26B2F0();
      sub_B678(v180, v236, &qword_2F0188);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      sub_B6DC(v180, &qword_2F0188);
      uint64_t v68 = v177;
      uint64_t v69 = &qword_2F01F8;
LABEL_8:
      sub_B6DC(v68, v69);
LABEL_9:
      uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v243);
      break;
    default:
      char v50 = v247;
      uint64_t v51 = *((void *)&v247 + 1);
      uint64_t v52 = (uint64_t *)&v47[*(int *)(v44 + 24)];
      *uint64_t v52 = swift_getKeyPath();
      sub_4A98(&qword_2EA968);
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = &v47[*(int *)(v44 + 28)];
      *(void *)uint64_t v53 = swift_getKeyPath();
      v53[8] = 0;
      *uint64_t v47 = v50;
      *((void *)v47 + 1) = v51;
      sub_103EB8((uint64_t)v47, (uint64_t)v49, type metadata accessor for NavigationActionMenuButtonView);
      sub_103E4C((uint64_t)v49, (uint64_t)v41, type metadata accessor for NavigationActionMenuButtonView);
      swift_storeEnumTagMultiPayload();
      sub_103848(&qword_2F0140, (void (*)(uint64_t))type metadata accessor for NavigationActionMenuButtonView);
      sub_7C18(&qword_2F0148, &qword_2F0150);
      uint64_t v54 = (uint64_t)v212;
      sub_26B2F0();
      sub_B678(v54, v231, &qword_2F0138);
      swift_storeEnumTagMultiPayload();
      sub_103778();
      sub_103890();
      uint64_t v55 = (uint64_t)v232;
      sub_26B2F0();
      sub_B6DC(v54, &qword_2F0138);
      sub_B678(v55, v236, &qword_2F0128);
      swift_storeEnumTagMultiPayload();
      sub_10373C();
      sub_1039EC();
      sub_26B2F0();
      sub_B6DC(v55, &qword_2F0128);
      uint64_t result = sub_FA8D8((uint64_t)v49, type metadata accessor for NavigationActionMenuButtonView);
      break;
  }
  return result;
}

uint64_t sub_100798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a4;
  v34[1] = a2;
  _OWORD v34[2] = a3;
  uint64_t v42 = a5;
  uint64_t v7 = sub_26A6E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v36 = (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v35 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = sub_4A98(&qword_2F0108);
  uint64_t v40 = *(void *)(v17 - 8);
  uint64_t v41 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4A98(&qword_2F00F0);
  __chkstk_darwin(v37);
  uint64_t v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  sub_103E4C(a2, (uint64_t)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NavigationStyleViewModifier);
  unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = swift_allocObject();
  sub_103EB8((uint64_t)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for NavigationStyleViewModifier);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2F0210);
  sub_4A98(&qword_2F0118);
  sub_7C18(&qword_2F0218, &qword_2F0210);
  sub_1036B4(&qword_2F0110, &qword_2F0118, (void (*)(void))sub_10373C, (void (*)(void))sub_1039EC);
  sub_103F24();
  uint64_t v24 = (uint64_t)v35;
  sub_26C500();
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v24);
  uint64_t v25 = v36;
  sub_103E4C(v24, v36, type metadata accessor for ColorConstants.Environment);
  uint64_t v26 = v39;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v39, enum case for ColorScheme.dark(_:), v7);
  sub_103848((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  char v27 = sub_26D360();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v26, v7);
  v28((char *)v25, v7);
  if (v27) {
    uint64_t v29 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else {
    uint64_t v29 = sub_26C150();
  }
  uint64_t v30 = v29;
  sub_FA8D8(v24, type metadata accessor for ColorConstants);
  uint64_t v32 = v40;
  uint64_t v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v21, v19, v41);
  *(void *)&v21[*(int *)(v37 + 36)] = v30;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v31);
  return sub_19CC4((uint64_t)v21, v42, &qword_2F00F0);
}

uint64_t sub_100CD8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v69 = a6;
  uint64_t v66 = a5;
  uint64_t v76 = a4;
  uint64_t v73 = a7;
  uint64_t v72 = (int *)sub_4A98(&qword_2F0298);
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F02A0);
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v78 = (char *)&v61 - v16;
  uint64_t v64 = sub_4A98(&qword_2F02A8);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_4A98(&qword_2F02B0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v77 = (uint64_t)&v61 - v22;
  uint64_t v23 = sub_26B3B0();
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  __chkstk_darwin(v24);
  uint64_t v25 = sub_4A98(&qword_2F02B8);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v61 - v30;
  sub_26B3A0();
  uint64_t v79 = a1;
  uint64_t v80 = a2;
  uint64_t v32 = a2;
  uint64_t v74 = a3;
  uint64_t v81 = a3;
  double v82 = a8;
  sub_4A98(&qword_2F02C0);
  sub_104B10();
  sub_26A7C0();
  uint64_t v65 = v26;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v75 = v31;
  v33(v31, v29, v25);
  uint64_t v34 = &v76[*(int *)(type metadata accessor for NavigationStyleViewModifier(0) + 44)];
  uint64_t v35 = *(void *)v34;
  LOBYTE(v29) = v34[8];
  sub_10E0C(*(void *)v34, (char)v29);
  LOBYTE(a2) = sub_41888(v35, (char)v29);
  sub_C374(v35, (char)v29);
  if (a2)
  {
    uint64_t v42 = sub_4A98(&qword_2F02E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v21, 1, 1, v42);
    uint64_t v43 = sub_7C18(&qword_2F02F0, &qword_2F02A8);
    uint64_t v83 = v64;
    uint64_t v84 = v43;
    swift_getOpaqueTypeConformance2();
    sub_26B3F0();
    sub_B6DC((uint64_t)v21, &qword_2F02B0);
  }
  else
  {
    uint64_t v36 = sub_26B380();
    __chkstk_darwin(v36);
    uint64_t v37 = v74;
    *(&v61 - 4) = v32;
    *(&v61 - 3) = v37;
    *((double *)&v61 - 2) = a8;
    sub_4A98(&qword_2F0308);
    sub_104CD4();
    uint64_t v38 = v61;
    sub_26A7C0();
    uint64_t v39 = sub_7C18(&qword_2F02F0, &qword_2F02A8);
    uint64_t v40 = v64;
    sub_26B3E0();
    uint64_t v41 = sub_4A98(&qword_2F02E8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v21, 0, 1, v41);
    uint64_t v83 = v40;
    uint64_t v84 = v39;
    swift_getOpaqueTypeConformance2();
    sub_26B3F0();
    sub_B6DC((uint64_t)v21, &qword_2F02B0);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v40);
  }
  uint64_t v44 = sub_26B390();
  __chkstk_darwin(v44);
  uint64_t v45 = v76;
  *(&v61 - 6) = v66;
  *(&v61 - 5) = v45;
  uint64_t v46 = v74;
  *(&v61 - 4) = v32;
  *(&v61 - 3) = v46;
  *((double *)&v61 - 2) = a8;
  sub_4A98(&qword_2F02F8);
  sub_104BF8();
  sub_26A7C0();
  uint64_t v47 = sub_26B380();
  __chkstk_darwin(v47);
  *(&v61 - 6) = v69;
  *(&v61 - 5) = v45;
  *(&v61 - 4) = v32;
  *(&v61 - 3) = v46;
  *((double *)&v61 - 2) = a8;
  uint64_t v48 = v67;
  sub_26A7C0();
  uint64_t v49 = (uint64_t)&v68[v72[12]];
  char v50 = &v68[v72[16]];
  uint64_t v76 = &v68[v72[20]];
  uint64_t v51 = v65;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v63 = v25;
  v52(v68, v75, v25);
  uint64_t v53 = v77;
  sub_B678(v77, v49, &qword_2F02B0);
  uint64_t v54 = v70;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  uint64_t v56 = v50;
  uint64_t v57 = v78;
  uint64_t v58 = v71;
  v55(v56, v78, v71);
  v55(v76, v48, v58);
  sub_26B200();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v48, v58);
  v59(v57, v58);
  sub_B6DC(v53, &qword_2F02B0);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v75, v63);
}

uint64_t sub_101568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v45 = type metadata accessor for UberNavigationTitleView();
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v46 = (uint64_t)&v43 - v10;
  uint64_t v11 = sub_4A98(&qword_2EA0C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v44 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_26A220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = type metadata accessor for ToolbarPrincipalType(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_103E4C(a1, (uint64_t)v25, type metadata accessor for ToolbarPrincipalType);
  uint64_t v26 = (uint64_t)&v25[*(int *)(sub_4A98(&qword_2EFE68) + 48)];
  uint64_t v48 = v22;
  uint64_t v49 = v17;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v27(v22, v25, v16);
  uint64_t v47 = v15;
  sub_19CC4(v26, (uint64_t)v15, &qword_2EA0C0);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  uint64_t v28 = v44;
  sub_B678((uint64_t)v15, v44, &qword_2EA0C0);
  uint64_t v29 = (int *)v45;
  uint64_t v30 = (uint64_t *)&v9[*(int *)(v45 + 24)];
  *uint64_t v30 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (uint64_t *)&v9[v29[7]];
  *uint64_t v31 = swift_getKeyPath();
  sub_4A98(&qword_2EBC80);
  swift_storeEnumTagMultiPayload();
  v27(v9, v20, v16);
  sub_19CC4(v28, (uint64_t)&v9[v29[5]], &qword_2EA0C0);
  uint64_t v32 = &v9[v29[8]];
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  *(void *)uint64_t v32 = v50;
  *((void *)v32 + 1) = v34;
  *((double *)v32 + 2) = a5;
  uint64_t v35 = v46;
  sub_103EB8((uint64_t)v9, v46, (uint64_t (*)(void))type metadata accessor for UberNavigationTitleView);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v56 = v33;
  uint64_t v57 = v34;
  double v58 = a5;
  swift_retain_n();
  swift_retain_n();
  sub_4A98(&qword_2F0320);
  sub_26C4A0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v59;
  uint64_t v38 = v60;
  LOBYTE(v28) = v61;
  uint64_t v53 = v29;
  uint64_t v54 = &type metadata for Bool;
  uint64_t v55 = sub_103848(&qword_2F02D0, (void (*)(uint64_t))type metadata accessor for UberNavigationTitleView);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = v52;
  sub_103E4C(v35, v52, (uint64_t (*)(void))type metadata accessor for UberNavigationTitleView);
  uint64_t v41 = v40 + *(int *)(sub_4A98(&qword_2F02C0) + 36);
  *(void *)uint64_t v41 = KeyPath;
  *(void *)(v41 + 8) = v37;
  *(void *)(v41 + 16) = v38;
  *(unsigned char *)(v41 + 24) = v28;
  *(void *)(v41 + 32) = v39;
  sub_FA8D8(v35, (uint64_t (*)(void))type metadata accessor for UberNavigationTitleView);
  sub_B6DC((uint64_t)v47, &qword_2EA0C0);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v48, v16);
}

BOOL sub_101A58(double a1)
{
  return a1 < 0.5;
}

uint64_t sub_101A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  sub_4A98(&qword_2F0320);
  sub_26C4A0();
  swift_release();
  swift_release();
  swift_release();
  sub_104D74();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = KeyPath;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_101B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  return sub_101BA8(a1, a2, a3, a4, (uint64_t)&unk_2E09D8, (uint64_t)sub_103F20, a5, a6);
}

uint64_t sub_101B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  return sub_101BA8(a1, a2, a3, a4, (uint64_t)&unk_2E09B0, (uint64_t)sub_103F20, a5, a6);
}

uint64_t sub_101BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v51 = a6;
  _OWORD v47[2] = a5;
  uint64_t v57 = a4;
  uint64_t v58 = a3;
  v47[1] = a2;
  uint64_t v59 = a7;
  uint64_t v11 = sub_26A6E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v50 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v48 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v18);
  uint64_t v52 = sub_4A98(&qword_2F0108);
  uint64_t v21 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v23 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4A98(&qword_2F00F0);
  __chkstk_darwin(v53);
  uint64_t v56 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_4A98(&qword_2F02F8);
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1;
  sub_103E4C(a2, (uint64_t)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NavigationStyleViewModifier);
  unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v27 = swift_allocObject();
  sub_103EB8((uint64_t)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for NavigationStyleViewModifier);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2F0210);
  sub_4A98(&qword_2F0118);
  sub_7C18(&qword_2F0218, &qword_2F0210);
  sub_1036B4(&qword_2F0110, &qword_2F0118, (void (*)(void))sub_10373C, (void (*)(void))sub_1039EC);
  unint64_t v46 = sub_103F24();
  uint64_t v28 = (uint64_t)v48;
  sub_26C500();
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v28);
  uint64_t v29 = v49;
  sub_103E4C(v28, v49, type metadata accessor for ColorConstants.Environment);
  uint64_t v30 = v50;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v50, enum case for ColorScheme.dark(_:), v11);
  sub_103848((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  LOBYTE(v26) = sub_26D360();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v30, v11);
  v31((char *)v29, v11);
  if (v26) {
    uint64_t v32 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else {
    uint64_t v32 = sub_26C150();
  }
  uint64_t v33 = v32;
  sub_FA8D8(v28, type metadata accessor for ColorConstants);
  uint64_t v34 = (uint64_t)v56;
  uint64_t v35 = v52;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v56, v23, v52);
  uint64_t v36 = v53;
  *(void *)(v34 + *(int *)(v53 + 36)) = v33;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v35);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v60 = v58;
  uint64_t v61 = v57;
  double v62 = a8;
  swift_retain();
  swift_retain();
  sub_4A98(&qword_2F0320);
  sub_26C4A0();
  swift_release();
  swift_release();
  uint64_t v38 = swift_release();
  uint64_t v39 = v63;
  uint64_t v40 = v64;
  char v41 = v65;
  __chkstk_darwin(v38);
  v47[-4] = v36;
  v47[-3] = &type metadata for Bool;
  unint64_t v46 = sub_103568();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = v55;
  sub_B678(v34, v55, &qword_2F00F0);
  uint64_t v44 = v43 + *(int *)(v54 + 36);
  *(void *)uint64_t v44 = KeyPath;
  *(void *)(v44 + 8) = v39;
  *(void *)(v44 + 16) = v40;
  *(unsigned char *)(v44 + 24) = v41;
  *(void *)(v44 + 32) = v42;
  sub_B6DC(v34, &qword_2F00F0);
  return sub_19CC4(v43, v59, &qword_2F02F8);
}

uint64_t sub_102274@<X0>(uint64_t a1@<X8>)
{
  sub_CC78();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_26BB00();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_26BA80();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_3A380(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_10234C@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v57 = a5;
  uint64_t v56 = a4;
  uint64_t v54 = a3;
  uint64_t v55 = a1;
  uint64_t v59 = a7;
  uint64_t v8 = type metadata accessor for CoverView();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EB828);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_4A98(&qword_2F0280);
  uint64_t v15 = __chkstk_darwin(v53);
  uint64_t v61 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v53 - v21;
  __chkstk_darwin(v20);
  uint64_t v60 = (uint64_t)&v53 - v23;
  sub_6C0F8((uint64_t)a2, (uint64_t)&v63);
  *(void *)char v11 = swift_getKeyPath();
  unsigned char v11[40] = 0;
  *((void *)v11 + 6) = swift_getKeyPath();
  v11[56] = 0;
  uint64_t v24 = (uint64_t *)&v11[v9[8]];
  uint64_t *v24 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (uint64_t *)&v11[v9[9]];
  *uint64_t v25 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  unint64_t v26 = (uint64_t *)&v11[v9[10]];
  type metadata accessor for ProfileRestrictions();
  sub_103848((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *unint64_t v26 = sub_26AD70();
  v26[1] = v27;
  uint64_t v28 = &v11[v9[11]];
  char v62 = 1;
  sub_26C340();
  uint64_t v29 = *((void *)&v74 + 1);
  *uint64_t v28 = v74;
  *((void *)v28 + 1) = v29;
  uint64_t v30 = &v11[v9[12]];
  long long v31 = v72;
  *((_OWORD *)v30 + 8) = v71;
  *((_OWORD *)v30 + 9) = v31;
  *((void *)v30 + 20) = v73;
  long long v32 = v68;
  *((_OWORD *)v30 + 4) = v67;
  *((_OWORD *)v30 + 5) = v32;
  long long v33 = v70;
  *((_OWORD *)v30 + 6) = v69;
  *((_OWORD *)v30 + 7) = v33;
  long long v34 = v64;
  *(_OWORD *)uint64_t v30 = v63;
  *((_OWORD *)v30 + 1) = v34;
  long long v35 = v66;
  *((_OWORD *)v30 + 2) = v65;
  *((_OWORD *)v30 + 3) = v35;
  v11[v9[13]] = 0;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_103E4C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CoverView);
  uint64_t v36 = &v14[*(int *)(v12 + 36)];
  long long v37 = v75;
  *(_OWORD *)uint64_t v36 = v74;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v76;
  sub_FA8D8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CoverView);
  unint64_t v38 = a2[15];
  if (v38)
  {
    uint64_t v39 = a2[14];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v38 = 0xE000000000000000;
  }
  *(void *)&long long v63 = v39;
  *((void *)&v63 + 1) = v38;
  sub_1045D0();
  sub_CC78();
  sub_26BE40();
  swift_bridgeObjectRelease();
  sub_B6DC((uint64_t)v14, &qword_2EB828);
  if (a2[15])
  {
    uint64_t v40 = a2[16];
    unint64_t v41 = a2[17];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  *(void *)&long long v63 = v40;
  *((void *)&v63 + 1) = v41;
  sub_26ABB0();
  swift_bridgeObjectRelease();
  sub_B6DC((uint64_t)v19, &qword_2F0280);
  uint64_t v42 = v60;
  sub_19CC4((uint64_t)v22, v60, &qword_2F0280);
  uint64_t v53 = sub_26B1D0();
  sub_102A04(v54, v56, v55, v57, v58, (uint64_t *)&v63);
  long long v43 = v63;
  char v44 = v64;
  uint64_t v45 = *((void *)&v64 + 1);
  long long v46 = v65;
  char v47 = v66;
  uint64_t v58 = *((void *)&v66 + 1);
  uint64_t v48 = v42;
  uint64_t v49 = v61;
  sub_B678(v48, v61, &qword_2F0280);
  uint64_t v50 = v59;
  sub_B678(v49, v59, &qword_2F0280);
  uint64_t v51 = v50 + *(int *)(sub_4A98(&qword_2F0288) + 48);
  *(void *)uint64_t v51 = v53;
  *(void *)(v51 + 8) = 0x4008000000000000;
  *(unsigned char *)(v51 + 16) = 0;
  *(_OWORD *)(v51 + 24) = v43;
  *(unsigned char *)(v51 + 40) = v44;
  *(void *)(v51 + 48) = v45;
  *(_OWORD *)(v51 + 56) = v46;
  *(unsigned char *)(v51 + 72) = v47;
  *(void *)(v51 + 80) = v58;
  sub_45370(v43, *((uint64_t *)&v43 + 1), v44);
  swift_bridgeObjectRetain();
  sub_45370(v46, *((uint64_t *)&v46 + 1), v47);
  swift_bridgeObjectRetain();
  sub_B6DC(v60, &qword_2F0280);
  sub_3A380(v43, *((uint64_t *)&v43 + 1), v44);
  swift_bridgeObjectRelease();
  sub_3A380(v46, *((uint64_t *)&v46 + 1), v47);
  swift_bridgeObjectRelease();
  return sub_B6DC(v61, &qword_2F0280);
}

uint64_t sub_102A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v76 = a3;
  uint64_t v83 = a6;
  uint64_t v9 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v9 - 8);
  double v82 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26B980();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  __chkstk_darwin(v11);
  uint64_t v77 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v84 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FontConstants.SheetHeader(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FontConstants(0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  unint64_t v69 = sub_CC78();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_26BB00();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  uint64_t v75 = type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v68 = a3 + *(int *)(v75 + 32);
  sub_4204C((uint64_t)v20);
  long long v67 = type metadata accessor for FontConstants.Environment;
  long long v65 = v17;
  sub_103E4C((uint64_t)v20, (uint64_t)v17, type metadata accessor for FontConstants.Environment);
  long long v66 = type metadata accessor for FontConstants;
  sub_FA8D8((uint64_t)v20, type metadata accessor for FontConstants);
  sub_26B900();
  sub_26B800();
  swift_release();
  long long v72 = type metadata accessor for FontConstants.SheetHeader;
  sub_FA8D8((uint64_t)v17, type metadata accessor for FontConstants.SheetHeader);
  uint64_t v26 = sub_26BA80();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_3A380(v21, v23, v25);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v71 = v76 + *(int *)(v75 + 40);
  uint64_t v31 = v84;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v84);
  _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  long long v70 = type metadata accessor for ColorConstants;
  sub_FA8D8(v31, type metadata accessor for ColorConstants);
  uint64_t v32 = sub_26BA30();
  uint64_t v75 = v33;
  uint64_t v76 = v32;
  uint64_t v74 = v34;
  int v73 = v35 & 1;
  sub_3A380(v26, v28, v30);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v85 = v78;
  uint64_t v86 = v79;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_26BB00();
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  sub_4204C((uint64_t)v20);
  uint64_t v41 = (uint64_t)v65;
  sub_103E4C((uint64_t)v20, (uint64_t)v65, v67);
  sub_FA8D8((uint64_t)v20, v66);
  uint64_t v43 = v80;
  uint64_t v42 = v81;
  char v44 = v77;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v77, enum case for Font.TextStyle.subheadline(_:), v81);
  uint64_t v45 = sub_26B820();
  uint64_t v46 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v82, 1, 1, v45);
  sub_26B890();
  sub_26B8E0();
  sub_B6DC(v46, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  sub_FA8D8(v41, v72);
  uint64_t v47 = sub_26BA80();
  uint64_t v49 = v48;
  LOBYTE(v41) = v50 & 1;
  sub_3A380(v36, v38, v40);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v84;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v84);
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  sub_FA8D8(v51, v70);
  uint64_t v52 = sub_26BA30();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  LOBYTE(v38) = v57 & 1;
  sub_3A380(v47, v49, v41);
  swift_release();
  swift_bridgeObjectRelease();
  char v58 = v73;
  LOBYTE(v85) = v73;
  uint64_t v59 = v83;
  uint64_t v60 = v75;
  uint64_t v61 = v76;
  uint64_t v62 = v74;
  *uint64_t v83 = v76;
  v59[1] = v62;
  *((unsigned char *)v59 + 16) = v58;
  v59[3] = v60;
  v59[4] = v52;
  v59[5] = v54;
  *((unsigned char *)v59 + 48) = v38;
  v59[7] = v56;
  sub_45370(v61, v62, v58);
  swift_bridgeObjectRetain();
  sub_45370(v52, v54, v38);
  swift_bridgeObjectRetain();
  sub_3A380(v52, v54, v38);
  swift_bridgeObjectRelease();
  sub_3A380(v61, v62, v85);
  return swift_bridgeObjectRelease();
}

uint64_t sub_103034()
{
  return sub_26C360();
}

uint64_t sub_1030B4(uint64_t (*a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v5 = sub_26B430();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F0058);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_FD5D0(v2, a1, (uint64_t)v11);
  sub_26B770();
  uint64_t v12 = &v2[*(int *)(a2 + 28)];
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  uint64_t v15 = *((void *)v12 + 2);
  v17[1] = v13;
  char v18 = v14;
  uint64_t v19 = v15;
  sub_4A98(&qword_2F0060);
  sub_26C350();
  sub_26B420();
  sub_10327C();
  sub_26BD50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_B6DC((uint64_t)v11, &qword_2F0058);
}

unint64_t sub_10327C()
{
  unint64_t result = qword_2F0068;
  if (!qword_2F0068)
  {
    sub_7B0C(&qword_2F0058);
    sub_1032F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0068);
  }
  return result;
}

unint64_t sub_1032F0()
{
  unint64_t result = qword_2F0070;
  if (!qword_2F0070)
  {
    sub_7B0C(&qword_2F0078);
    sub_7B0C(&qword_2F0080);
    sub_7B0C(&qword_2F0088);
    sub_7B0C(&qword_2F0090);
    sub_7C18(&qword_2F0098, &qword_2F0090);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F00A0, &qword_2F0088);
    swift_getOpaqueTypeConformance2();
    sub_7B0C(&qword_2F00A8);
    sub_7B0C(&qword_2F00B0);
    sub_7B0C(&qword_2F00B8);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F00C0, &qword_2F00B8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0070);
  }
  return result;
}

uint64_t sub_10350C@<X0>(uint64_t a1@<X8>)
{
  return sub_100CD8(*(void *)(v1 + 16), *(char **)(v1 + 24), *(char **)(v1 + 32), *(char **)(v1 + 48), *(char **)(v1 + 56), *(char **)(v1 + 64), a1, *(double *)(v1 + 40));
}

uint64_t sub_103524@<X0>(uint64_t a1@<X8>)
{
  return sub_FE4C0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_103530@<X0>(uint64_t a1@<X8>)
{
  return sub_100798(*(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_2E0988, (uint64_t)sub_103F20, a1);
}

unint64_t sub_103568()
{
  unint64_t result = qword_2F00F8;
  if (!qword_2F00F8)
  {
    sub_7B0C(&qword_2F00F0);
    sub_103608();
    sub_7C18(&qword_2EB0E0, &qword_2EB0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F00F8);
  }
  return result;
}

unint64_t sub_103608()
{
  unint64_t result = qword_2F0100;
  if (!qword_2F0100)
  {
    sub_7B0C(&qword_2F0108);
    sub_1036B4(&qword_2F0110, &qword_2F0118, (void (*)(void))sub_10373C, (void (*)(void))sub_1039EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0100);
  }
  return result;
}

uint64_t sub_1036B4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10373C()
{
  return sub_1036B4(&qword_2F0120, &qword_2F0128, (void (*)(void))sub_103778, (void (*)(void))sub_103890);
}

unint64_t sub_103778()
{
  unint64_t result = qword_2F0130;
  if (!qword_2F0130)
  {
    sub_7B0C(&qword_2F0138);
    sub_103848(&qword_2F0140, (void (*)(uint64_t))type metadata accessor for NavigationActionMenuButtonView);
    sub_7C18(&qword_2F0148, &qword_2F0150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0130);
  }
  return result;
}

uint64_t sub_103848(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_103890()
{
  unint64_t result = qword_2F0158;
  if (!qword_2F0158)
  {
    sub_7B0C(&qword_2F0160);
    sub_103848(&qword_2F0168, (void (*)(uint64_t))type metadata accessor for UIKitActionButton);
    sub_7B0C(&qword_2F0170);
    sub_26AC00();
    sub_7C18(&qword_2F0178, &qword_2F0170);
    sub_103848(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0158);
  }
  return result;
}

unint64_t sub_1039EC()
{
  unint64_t result = qword_2F0180;
  if (!qword_2F0180)
  {
    sub_7B0C(&qword_2F0188);
    sub_7B0C(&qword_2F0190);
    sub_103BB0(&qword_2F0198, &qword_2F0190, (void (*)(void))sub_103AE4);
    sub_D5838();
    swift_getOpaqueTypeConformance2();
    sub_103CCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0180);
  }
  return result;
}

unint64_t sub_103AE4()
{
  unint64_t result = qword_2F01A0;
  if (!qword_2F01A0)
  {
    sub_7B0C(&qword_2F01A8);
    sub_103BB0(&qword_2F01B0, &qword_2F01B8, (void (*)(void))sub_103C2C);
    sub_7C18(&qword_2F01E0, &qword_2F01E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F01A0);
  }
  return result;
}

uint64_t sub_103BB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_103C2C()
{
  unint64_t result = qword_2F01C0;
  if (!qword_2F01C0)
  {
    sub_7B0C(&qword_2F01C8);
    sub_7C18(&qword_2F01D0, &qword_2F01D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F01C0);
  }
  return result;
}

unint64_t sub_103CCC()
{
  unint64_t result = qword_2F01F0;
  if (!qword_2F01F0)
  {
    sub_7B0C(&qword_2F01F8);
    sub_7B0C(&qword_2F0200);
    sub_26AC00();
    sub_7C18(&qword_2F0208, &qword_2F0200);
    sub_103848(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EB0D8, &qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F01F0);
  }
  return result;
}

uint64_t sub_103E14@<X0>(uint64_t a1@<X8>)
{
  return sub_100798(*(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_2E08C0, (uint64_t)sub_103F20, a1);
}

uint64_t sub_103E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_103EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_103F24()
{
  unint64_t result = qword_2F0220;
  if (!qword_2F0220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0220);
  }
  return result;
}

uint64_t sub_103F78()
{
  return swift_deallocObject();
}

void LibraryAssetState.ownership.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unint64_t sub_103FB4()
{
  unint64_t result = qword_2F0270;
  if (!qword_2F0270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0270);
  }
  return result;
}

uint64_t sub_104008()
{
  uint64_t v1 = (int *)type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_3A380(*(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[5];
  type metadata accessor for NavigationStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v5 = v4 + *(int *)(sub_4A98(&qword_2EFEF8) + 48);
    uint64_t v6 = sub_26A220();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v5, v6);
    uint64_t v9 = v5 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
      v8(v9, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
    sub_4A98(&qword_2EFEF0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v3 + v1[8];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = v11 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v13 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = v3 + v1[9];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v14 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v16 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = v3 + v1[10];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v3 + v1[11]), *(unsigned char *)(v3 + v1[11] + 8));

  return swift_deallocObject();
}

uint64_t sub_104428()
{
  type metadata accessor for NavigationStyleViewModifier(0);

  return sub_103034();
}

uint64_t sub_1044E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_104518@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

uint64_t sub_104564()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1045A4@<X0>(uint64_t a1@<X8>)
{
  return sub_102274(a1);
}

unint64_t sub_1045D0()
{
  unint64_t result = qword_2EB8A0;
  if (!qword_2EB8A0)
  {
    sub_7B0C(&qword_2EB828);
    sub_103848(&qword_2EB880, (void (*)(uint64_t))type metadata accessor for CoverView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB8A0);
  }
  return result;
}

uint64_t sub_104680()
{
  uint64_t v1 = (int *)type metadata accessor for NavigationStyleViewModifier(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_3A380(*(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[5];
  type metadata accessor for NavigationStyle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v5 = v4 + *(int *)(sub_4A98(&qword_2EFEF8) + 48);
    uint64_t v6 = sub_26A220();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v5, v6);
    uint64_t v9 = v5 + *(int *)(sub_4A98(&qword_2EFE68) + 48);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
      v8(v9, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
    sub_4A98(&qword_2EFEF0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v3 + v1[8];
  sub_4A98(&qword_2EBC58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = v11 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v13 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = v3 + v1[9];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v14 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v16 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = v3 + v1[10];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(v3 + v1[11]), *(unsigned char *)(v3 + v1[11] + 8));

  return swift_deallocObject();
}

uint64_t sub_104A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FE748(a1, a2);
}

uint64_t sub_104B00@<X0>(uint64_t a1@<X8>)
{
  return sub_101568(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1, *(double *)(v1 + 40));
}

unint64_t sub_104B10()
{
  unint64_t result = qword_2F02C8;
  if (!qword_2F02C8)
  {
    sub_7B0C(&qword_2F02C0);
    sub_103848(&qword_2F02D0, (void (*)(uint64_t))type metadata accessor for UberNavigationTitleView);
    sub_7C18(&qword_2F02D8, &qword_2F02E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F02C8);
  }
  return result;
}

uint64_t sub_104BE0()
{
  return sub_104CB0((uint64_t (*)(void, void, void, void, double))sub_101B68);
}

unint64_t sub_104BF8()
{
  unint64_t result = qword_2F0300;
  if (!qword_2F0300)
  {
    sub_7B0C(&qword_2F02F8);
    sub_103568();
    sub_7C18(&qword_2F02D8, &qword_2F02E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0300);
  }
  return result;
}

uint64_t sub_104C98()
{
  return sub_104CB0((uint64_t (*)(void, void, void, void, double))sub_101B88);
}

uint64_t sub_104CB0(uint64_t (*a1)(void, void, void, void, double))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_104CC8@<X0>(uint64_t a1@<X8>)
{
  return sub_101A68(a1);
}

unint64_t sub_104CD4()
{
  unint64_t result = qword_2F0310;
  if (!qword_2F0310)
  {
    sub_7B0C(&qword_2F0308);
    sub_104D74();
    sub_7C18(&qword_2F02D8, &qword_2F02E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0310);
  }
  return result;
}

unint64_t sub_104D74()
{
  unint64_t result = qword_2F0318;
  if (!qword_2F0318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0318);
  }
  return result;
}

double *sub_104DD0@<X0>(double *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result < 0.5;
  return result;
}

uint64_t sub_104E04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t PageScrollActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PageScrollAction();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  sub_105424(a1, (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  sub_10548C((uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_4A98(&qword_2F0340);
  swift_retain();
  uint64_t v12 = sub_26D180();
  uint64_t v13 = sub_26D6F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = 0;
  v14[3] = 0;
  void v14[4] = &unk_2F0338;
  v14[5] = v11;
  v14[6] = v12;
  swift_retain();
  sub_105C10((uint64_t)v6, (uint64_t)&unk_2F0350, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t sub_105058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  v3[8] = a3;
  v3[9] = sub_26D6D0();
  v3[10] = sub_26D6C0();
  uint64_t v4 = sub_4A98(&qword_2F0380);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[11] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_105138;
  return BaseObjectGraph.inject<A>(_:)(v3 + 2, v4, v4);
}

uint64_t sub_105138()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_26D6B0();
  if (v0) {
    uint64_t v4 = sub_1053C0;
  }
  else {
    uint64_t v4 = sub_105294;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v4, v3, v2);
}

uint64_t sub_105294()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  swift_release();
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  sub_4ADC(v0 + 2, v3);
  uint64_t v10 = *(void *)(v2 + *(int *)(type metadata accessor for PageScrollAction() + 24));
  char v5 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 8))(&v10, v3, v4);
  uint64_t v6 = sub_26CB90();
  uint64_t v7 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
  if ((v5 & 1) == 0) {
    uint64_t v7 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v1, *v7, v6);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v0 + 2));
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1053C0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_105424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageScrollAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10548C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageScrollAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1054F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PageScrollAction() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_12B40;
  return sub_105058(a1, v5, v6);
}

uint64_t sub_1055D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA2E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PageScrollAction();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  sub_105424(a1, (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  sub_10548C((uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_4A98(&qword_2F0340);
  swift_retain();
  uint64_t v12 = sub_26D180();
  uint64_t v13 = sub_26D6F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = 0;
  v14[3] = 0;
  void v14[4] = &unk_2F0360;
  v14[5] = v11;
  v14[6] = v12;
  swift_retain();
  sub_105C10((uint64_t)v6, (uint64_t)&unk_2F0368, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t sub_1057D0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  long long v6[2] = a6;
  uint64_t v8 = sub_26CB90();
  v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  unint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  *unint64_t v10 = v6;
  v10[1] = sub_105914;
  return v12(v9);
}

uint64_t sub_105914()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_105AB8;
  }
  else {
    uint64_t v2 = sub_105A28;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_105A28()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_26D170();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_105AB8()
{
  sub_26D160();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_105B34(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_12B40;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_2F0348 + dword_2F0348);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_105C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26D6F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_26D6E0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_12228(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_26D6B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

unint64_t sub_105DB8()
{
  unint64_t result = qword_2F0358;
  if (!qword_2F0358)
  {
    type metadata accessor for PageScrollAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0358);
  }
  return result;
}

ValueMetadata *type metadata accessor for PageScrollActionImplementation()
{
  return &type metadata for PageScrollActionImplementation;
}

uint64_t sub_105E24()
{
  uint64_t v1 = type metadata accessor for PageScrollAction();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = sub_269CE0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  unint64_t v5 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v6 = sub_26CB80();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocObject();
}

uint64_t sub_105F98(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PageScrollAction() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_12134;
  return sub_105058(a1, v5, v6);
}

uint64_t sub_106084()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1060CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_12134;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_2F0348 + dword_2F0348);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1061A8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_106284;
  return v6(a1);
}

uint64_t sub_106284()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10637C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1063B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_12B40;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2F0370 + dword_2F0370);
  return v6(a1, v4);
}

double sub_10646C@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10647C()
{
  sub_1067C4();

  return sub_26B0B0();
}

uint64_t View._localizerForAnalytics(_:)(uint64_t a1)
{
  swift_getKeyPath();
  sub_C224(a1, (uint64_t)v3);
  sub_26BCB0();
  swift_release();
  return sub_106630((uint64_t)v3);
}

uint64_t sub_10654C()
{
  return sub_26B0B0();
}

uint64_t sub_10658C()
{
  return sub_26B0B0();
}

uint64_t sub_1065CC(uint64_t a1)
{
  sub_10675C(a1, (uint64_t)v3);
  sub_10675C((uint64_t)v3, (uint64_t)&v2);
  sub_1067C4();
  sub_26B0C0();
  return sub_106630((uint64_t)v3);
}

uint64_t sub_106630(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBCC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_106690()
{
  return swift_getWitnessTable();
}

unint64_t sub_106700()
{
  unint64_t result = qword_2F0390;
  if (!qword_2F0390)
  {
    sub_7B0C(&qword_2F0388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0390);
  }
  return result;
}

uint64_t sub_10675C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBCC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1067C4()
{
  unint64_t result = qword_2F0398;
  if (!qword_2F0398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0398);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizerForAnalyticsKey()
{
  return &type metadata for LocalizerForAnalyticsKey;
}

uint64_t CoverViewModel.source.getter@<X0>(uint64_t a1@<X8>)
{
  sub_10691C(v1, (uint64_t)&v9);
  if (v11)
  {
    uint64_t result = sub_106954((uint64_t)&v9);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = -1;
  }
  else
  {
    sub_AD44(&v9, (uint64_t)v12);
    sub_4ADC(v12, v12[3]);
    uint64_t v4 = sub_269FA0();
    uint64_t v6 = v5;
    sub_C224((uint64_t)v12, (uint64_t)&v9);
    if (v6)
    {
      char v7 = 1;
    }
    else
    {
      sub_4ADC(&v9, v10);
      uint64_t v4 = sub_269DB0();
      uint64_t v6 = v8;
      char v7 = 0;
    }
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v9);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  }
  return result;
}

uint64_t sub_10691C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_106954(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (!v2) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  return a1;
}

uint64_t CoverViewModel.init(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_4A98(&qword_2EF540);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10691C(a1, a2);
  sub_10691C(a1, (uint64_t)v35);
  if (v38)
  {
    double v7 = *(double *)v35;
    if (v38 == 1)
    {
      *(void *)(a2 + 88) = 0x3FF0000000000000;
      *(double *)(a2 + 64) = v7;
      *(double *)(a2 + 72) = v7;
      *(unsigned char *)(a2 + 80) = 0;
      uint64_t result = sub_106954(a1);
      unint64_t v9 = 0xD00000000000001BLL;
      uint64_t v10 = "placeholder-audiobook-cover";
    }
    else
    {
      char v19 = BYTE8(v35[0]);
      *(void *)(a2 + 88) = 0x3FE4834834834834;
      *(double *)(a2 + 64) = v7 * 0.641025641;
      *(double *)(a2 + 72) = v7;
      *(unsigned char *)(a2 + 80) = v19;
      uint64_t result = sub_106954(a1);
      unint64_t v9 = 0xD000000000000016;
      uint64_t v10 = "placeholder-book-cover";
    }
    *(void *)(a2 + 96) = v9;
    *(void *)(a2 + 104) = (unint64_t)(v10 - 32) | 0x8000000000000000;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(void *)(a2 + 160) = 0;
  }
  else
  {
    uint64_t v11 = v36;
    uint64_t v12 = v37;
    sub_AD44(v35, (uint64_t)v33);
    sub_4ADC(v33, v34);
    sub_269FF0();
    *(void *)(a2 + 88) = v13;
    *(void *)(a2 + 64) = v11;
    *(void *)(a2 + 72) = v12;
    sub_C224((uint64_t)v33, (uint64_t)v31);
    sub_4A98(&qword_2EE2C8);
    uint64_t v14 = sub_269D50();
    char v15 = swift_dynamicCast();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    if (v15)
    {
      uint64_t v17 = *(void *)(v14 - 8);
      v16(v6, 0, 1, v14);
      char v18 = sub_269D40();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v14);
    }
    else
    {
      v16(v6, 1, 1, v14);
      sub_B6DC((uint64_t)v6, &qword_2EF540);
      char v18 = 0;
    }
    *(unsigned char *)(a2 + 80) = v18 & 1;
    sub_4ADC(v33, v34);
    *(void *)(a2 + 96) = sub_269DB0();
    *(void *)(a2 + 104) = v20;
    sub_C224((uint64_t)v33, (uint64_t)v31);
    sub_4ADC(v31, v32);
    uint64_t v21 = sub_26A020();
    uint64_t v23 = v22;
    sub_4ADC(v31, v32);
    uint64_t v24 = sub_26A030();
    uint64_t v26 = v25;
    sub_4ADC(v31, v32);
    char v27 = sub_269FB0();
    sub_4ADC(v31, v32);
    uint64_t v28 = sub_269F40();
    uint64_t v30 = v29;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v31);
    sub_106954(a1);
    *(void *)(a2 + 112) = v21;
    *(void *)(a2 + 120) = v23;
    *(void *)(a2 + 128) = v24;
    *(void *)(a2 + 136) = v26;
    *(void *)(a2 + 144) = v27 & 1;
    *(void *)(a2 + 152) = v28;
    *(void *)(a2 + 160) = v30;
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v33);
  }
  return result;
}

uint64_t CoverViewModel.axCustomContentLabel.getter()
{
  if (!*(void *)(v0 + 120)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoverViewModel.axCustomContentValue.getter()
{
  if (!*(void *)(v0 + 120)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoverViewModel.axSeriesLabel.getter()
{
  if (v0[15]) {
    BOOL v1 = v0[20] == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (v1) {
    return 0;
  }
  uint64_t v2 = v0[19];
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CoverViewModel.style.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10691C(v1, a1);
}

double CoverViewModel.intrinsicSize.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t CoverViewModel.isRTL.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

double CoverViewModel.aspectRatio.getter()
{
  return *(double *)(v0 + 88);
}

uint64_t CoverViewModel.axCoverProperties.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[14];
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  uint64_t v5 = v1[17];
  uint64_t v6 = v1[18];
  uint64_t v7 = v1[19];
  uint64_t v8 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_E6F48(v2, v3);
}

uint64_t PageUpdateInstruction.ShelfHeaderFooterUpdateDescriptor.shelfID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoverViewModel.placeholderImageName.getter()
{
  unint64_t v1 = 0xD00000000000001ALL;
  sub_10691C(v0, (uint64_t)v5);
  if (v6)
  {
    if (v6 == 1) {
      return 0xD00000000000001BLL;
    }
    return v1;
  }
  sub_AD44(v5, (uint64_t)v4);
  sub_4ADC(v4, v4[3]);
  int v2 = sub_269F20();
  if (!v2)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v4);
    return 0xD00000000000001BLL;
  }
  if (v2 == 1)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v4);
    return v1;
  }
  uint64_t result = sub_26DBA0();
  __break(1u);
  return result;
}

uint64_t CoverViewModel.axLabel.getter()
{
  uint64_t v1 = v0[15];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[16];
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_E5F00(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  unint64_t v11 = v10 + 1;
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_E5F00((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  _OWORD v8[2] = v11;
  uint64_t v12 = &v8[2 * v10];
  void v12[4] = v2;
  v12[5] = v1;
  unint64_t v13 = v8[3];
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1) {
    uint64_t v8 = sub_E5F00((void *)(v13 > 1), v10 + 2, 1, v8);
  }
  _OWORD v8[2] = v10 + 2;
  uint64_t v14 = &v8[2 * v11];
  void v14[4] = v7;
  v14[5] = v5;
  if ((v6 & 1) != 0 && v3)
  {
    unint64_t v15 = v8[2];
    unint64_t v16 = v8[3];
    swift_bridgeObjectRetain();
    if (v15 >= v16 >> 1) {
      uint64_t v8 = sub_E5F00((void *)(v16 > 1), v15 + 1, 1, v8);
    }
    _OWORD v8[2] = v15 + 1;
    uint64_t v17 = &v8[2 * v15];
    v17[4] = v4;
    v17[5] = v3;
  }
  sub_4A98(&qword_2E9F78);
  sub_A914();
  uint64_t v18 = sub_26D310();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1071A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  *a1 = *(void *)(v1 + 96);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s7BooksUI14CoverViewModelV5StyleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_10691C(a1, (uint64_t)v20);
  sub_10691C(a2, (uint64_t)v22);
  if (!v21)
  {
    sub_10691C((uint64_t)v20, (uint64_t)v17);
    if (v25)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v17);
      goto LABEL_9;
    }
    double v5 = v18;
    double v4 = v19;
    double v7 = v23;
    double v6 = v24;
    sub_AD44(v17, (uint64_t)v16);
    sub_AD44(v22, (uint64_t)v15);
    sub_4ADC(v16, v16[3]);
    uint64_t v8 = sub_269DB0();
    uint64_t v10 = v9;
    sub_4ADC(v15, v15[3]);
    if (v8 == sub_269DB0() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
      if (v5 != v7)
      {
        uint64_t v3 = 0;
        goto LABEL_20;
      }
    }
    else
    {
      char v13 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
      if ((v13 & 1) == 0 || v5 != v7) {
        goto LABEL_20;
      }
    }
    uint64_t v3 = v4 == v6;
LABEL_20:
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v15);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v16);
    goto LABEL_21;
  }
  if (v21 == 1)
  {
    sub_10691C((uint64_t)v20, (uint64_t)v17);
    if (v25 == 1)
    {
      uint64_t v3 = *(double *)v17 == *(double *)v22;
LABEL_21:
      sub_106954((uint64_t)v20);
      return v3;
    }
  }
  else
  {
    sub_10691C((uint64_t)v20, (uint64_t)v17);
    if (v25 == 2)
    {
      uint64_t v3 = (*(double *)v17 == *(double *)v22) & (BYTE8(v17[0]) ^ BYTE8(v22[0]) ^ 1u);
      goto LABEL_21;
    }
  }
LABEL_9:
  sub_B6DC((uint64_t)v20, &qword_2F03A0);
  return 0;
}

uint64_t _s7BooksUI14CoverViewModelV013AccessibilityC10PropertiesV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_26DDB0(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v9) {
        return 0;
      }
LABEL_10:
      if (v6)
      {
        if (!v10 || (v5 != v11 || v6 != v10) && (sub_26DDB0() & 1) == 0) {
          return 0;
        }
      }
      else if (v10)
      {
        return 0;
      }
      return 1;
    }
    char v14 = sub_26DDB0();
    uint64_t result = 0;
    if ((v14 & 1) != 0 && ((v4 ^ v9) & 1) == 0) {
      goto LABEL_10;
    }
  }
  return result;
}

BOOL _s7BooksUI14CoverViewModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s7BooksUI14CoverViewModelV5StyleO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(double *)(a1 + 64) == *(double *)(a2 + 64) && *(double *)(a1 + 72) == *(double *)(a2 + 72);
  if (!v4
    || *(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80)
    || *(double *)(a1 + 88) != *(double *)(a2 + 88))
  {
    return 0;
  }
  if (*(void *)(a1 + 96) == *(void *)(a2 + 96) && *(void *)(a1 + 104) == *(void *)(a2 + 104)
    || (v5 = sub_26DDB0(), BOOL result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a1 + 112);
    uint64_t v8 = *(void *)(a1 + 120);
    uint64_t v10 = *(void *)(a1 + 128);
    uint64_t v9 = *(void *)(a1 + 136);
    uint64_t v11 = *(void *)(a1 + 144);
    uint64_t v12 = *(void *)(a1 + 152);
    uint64_t v13 = *(void *)(a1 + 160);
    uint64_t v15 = *(void *)(a2 + 112);
    uint64_t v14 = *(void *)(a2 + 120);
    uint64_t v17 = *(void *)(a2 + 128);
    uint64_t v16 = *(void *)(a2 + 136);
    uint64_t v19 = *(void *)(a2 + 144);
    uint64_t v18 = *(void *)(a2 + 152);
    uint64_t v20 = *(void *)(a2 + 160);
    if (v8)
    {
      v27[0] = v7;
      v27[1] = v8;
      _OWORD v27[2] = v10;
      v27[3] = v9;
      void v27[4] = v11;
      v27[5] = v12;
      v27[6] = v13;
      if (v14)
      {
        v23[0] = v15;
        v23[1] = v14;
        void v23[2] = v17;
        void v23[3] = v16;
        char v24 = v19 & 1;
        uint64_t v25 = v18;
        uint64_t v26 = v20;
        char v21 = _s7BooksUI14CoverViewModelV013AccessibilityC10PropertiesV2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v21 & 1) != 0;
      }
      uint64_t v22 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = v7;
      if (!v14) {
        return 1;
      }
    }
    sub_E6F48(v15, v14);
    sub_E6F98(v22, v8);
    sub_E6F98(v15, v14);
    return 0;
  }
  return result;
}

uint64_t destroy for CoverViewModel(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CoverViewModel(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 56))
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = 0;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v6 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v6;
    uint64_t v7 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v7;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    uint64_t v8 = *(void *)(a2 + 152);
    uint64_t v9 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v8;
    *(void *)(a1 + 160) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
  }
  return a1;
}

uint64_t assignWithCopy for CoverViewModel(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_106954(a1);
    if (*((unsigned char *)a2 + 56))
    {
      long long v4 = *a2;
      long long v5 = a2[1];
      long long v6 = a2[2];
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = v6;
      *(_OWORD *)a1 = v4;
    }
    else
    {
      uint64_t v7 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
      *(unsigned char *)(a1 + 56) = 0;
    }
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 112);
  uint64_t v9 = a2 + 7;
  uint64_t v10 = *((void *)a2 + 15);
  if (*(void *)(a1 + 120))
  {
    if (v10)
    {
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_107A64(a1 + 112);
      long long v12 = a2[8];
      long long v11 = a2[9];
      long long v13 = *v9;
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 144) = v11;
      *uint64_t v8 = v13;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v9;
    long long v15 = a2[8];
    long long v16 = a2[9];
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(_OWORD *)(a1 + 128) = v15;
    *(_OWORD *)(a1 + 144) = v16;
    *uint64_t v8 = v14;
  }
  return a1;
}

uint64_t sub_107A64(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CoverViewModel(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for CoverViewModel(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_106954(a1);
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 120)) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 120);
  if (!v6)
  {
    sub_107A64(a1 + 112);
LABEL_7:
    long long v9 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v9;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    return a1;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 104) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverViewModel()
{
  return &type metadata for CoverViewModel;
}

uint64_t destroy for CoverViewModel.AccessibilityCoverProperties()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoverViewModel.AccessibilityCoverProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoverViewModel.AccessibilityCoverProperties(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CoverViewModel.AccessibilityCoverProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverViewModel.AccessibilityCoverProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverViewModel.AccessibilityCoverProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverViewModel.AccessibilityCoverProperties()
{
  return &type metadata for CoverViewModel.AccessibilityCoverProperties;
}

uint64_t destroy for CoverViewModel.Style(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (!v1) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for CoverViewModel.Style(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    char v5 = 2;
  }
  else if (v4 == 1)
  {
    *(void *)a1 = *(void *)a2;
    char v5 = 1;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    char v5 = 0;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  *(unsigned char *)(a1 + 56) = v5;
  return a1;
}

uint64_t assignWithCopy for CoverViewModel.Style(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (!v4) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v7 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v7;
      char v6 = 2;
    }
    else if (v5 == 1)
    {
      *(void *)a1 = *a2;
      char v6 = 1;
    }
    else
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
      char v6 = 0;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t assignWithTake for CoverViewModel.Style(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (!v4) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      char v6 = 2;
    }
    else if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverViewModel.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CoverViewModel.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1081D4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1081F0(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CoverViewModel.Style()
{
  return &type metadata for CoverViewModel.Style;
}

uint64_t sub_10822C(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v2 = 0x8000000000287830;
    }
    else {
      unint64_t v2 = 0x8000000000287850;
    }
    unint64_t v3 = 0xD000000000000012;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        unint64_t v5 = 0x8000000000287830;
      }
      else {
        unint64_t v5 = 0x8000000000287850;
      }
      if (v3 != 0xD000000000000012) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v2 = 0xE400000000000000;
    unint64_t v3 = 1953394534;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v5 = 0xE400000000000000;
  if (v3 != 1953394534)
  {
LABEL_15:
    char v6 = sub_26DDB0();
    goto LABEL_16;
  }
LABEL_13:
  if (v2 != v5) {
    goto LABEL_15;
  }
  char v6 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_108320(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C797473;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C797473;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702521203;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6E6769736564;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746867696577;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1702521203) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6E6769736564;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746867696577) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_108488(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x69746E6575716573;
  }
  else {
    uint64_t v3 = 0x64695F737469;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006C61;
  }
  if (a2) {
    uint64_t v5 = 0x69746E6575716573;
  }
  else {
    uint64_t v5 = 0x64695F737469;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006C61;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_108530()
{
  unint64_t v0 = Metrics.ClickActionType.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == Metrics.ClickActionType.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1085C8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1801675106;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1801675106;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64726177726F66;
      break;
    case 2:
      uint64_t v5 = 1752397168;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7368560;
      break;
    case 4:
      uint64_t v5 = 1952867692;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7468676972;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x64726177726F66) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 1752397168) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7368560) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 1952867692;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7468676972) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10877C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F74747562;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F74747562;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7265746C6966;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802398060;
      break;
    case 3:
      uint64_t v5 = 0x70756B636F6CLL;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701273968;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x77656976657270;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E6F6974636573;
      break;
    case 7:
      uint64_t v5 = 0x68736F6F7773;
      break;
    case 8:
      uint64_t v5 = 0x6B636F6C5F707075;
      unint64_t v3 = 0xEA00000000007075;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x7265746C6966) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802398060) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 0x70756B636F6CLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701273968) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x77656976657270) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E6F6974636573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x68736F6F7773;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEA00000000007075;
      if (v5 != 0x6B636F6C5F707075) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1089F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F74747562;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F74747562;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6D756C6F63;
      break;
    case 2:
      uint64_t v5 = 0x7265746C6966;
      break;
    case 3:
      uint64_t v5 = 0x70756B636F6CLL;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x77656976657270;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E6F6974636573;
      break;
    case 6:
      uint64_t v5 = 0x68736F6F7773;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6E6D756C6F63) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      if (v5 != 0x7265746C6966) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      if (v5 != 0x70756B636F6CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x77656976657270) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x6E6F6974636573;
      goto LABEL_18;
    case 6:
      if (v5 != 0x68736F6F7773) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_108BFC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F74747562;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F74747562;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6954656C62627562;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 2:
      uint64_t v5 = 0x7265746C6966;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802398060;
      break;
    case 4:
      uint64_t v5 = 0x70756B636F6CLL;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x77656976657270;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000070;
      if (v5 == 0x6954656C62627562) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 0x7265746C6966) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802398060) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x70756B636F6CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x77656976657270) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_108DD8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7472656C61;
  }
  else {
    uint64_t v3 = 0x68536E6F69746361;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000746565;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7472656C61;
  }
  else {
    uint64_t v5 = 0x68536E6F69746361;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xEB00000000746565;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_108E84(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1635017060;
  }
  else {
    uint64_t v2 = 1684957547;
  }
  if (a2) {
    uint64_t v3 = 1635017060;
  }
  else {
    uint64_t v3 = 1684957547;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_26DDB0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_108EF4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7107189;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7107189;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x656C746974627573;
      break;
    case 2:
      uint64_t v5 = 0x6D496C6F626D7973;
      unint64_t v3 = 0xEF646E694B656761;
      break;
    case 3:
      uint64_t v5 = 0x7365527465737361;
      unint64_t v3 = 0xED0000656372756FLL;
      break;
    case 4:
      uint64_t v5 = 0x7463656C65537369;
      unint64_t v3 = 0xEA00000000006465;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656C746974627573) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEF646E694B656761;
      if (v5 != 0x6D496C6F626D7973) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x7365527465737361;
      unint64_t v6 = 0xED0000656372756FLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000006465;
      if (v5 != 0x7463656C65537369) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1090E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E694C6572616873;
    }
    else {
      uint64_t v3 = 0x6E6F74747562;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E694C6572616873;
      }
      else {
        uint64_t v6 = 0x6E6F74747562;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656C67676F74;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656C67676F74)
  {
LABEL_21:
    char v8 = sub_26DDB0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1091FC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001ELL;
  }
  else {
    unint64_t v3 = 1701736302;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0x8000000000287990;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001ELL;
  }
  else {
    unint64_t v5 = 1701736302;
  }
  if (a2) {
    unint64_t v6 = 0x8000000000287990;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1092A0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006567;
  uint64_t v3 = 0x6150736569726573;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6150736569726573;
  unint64_t v6 = 0xEA00000000006567;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000000002876C0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x736E6F6974696465;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = 0x80000000002876E0;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000000002876C0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x736E6F6974696465;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000000002876E0;
      if (v5 == 0xD000000000000017) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_109458(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x747865746E6F63;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x747865746E6F63;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x656372756F736572;
      break;
    case 2:
      unint64_t v5 = 0x4E6E6F6974636573;
      unint64_t v3 = 0xEB00000000656D61;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x4449736569726573;
      break;
    case 4:
      unint64_t v3 = 0x8000000000287680;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v3 = 0x80000000002876A0;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656372756F736572) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEB00000000656D61;
      if (v5 != 0x4E6E6F6974636573) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x4449736569726573) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0x8000000000287680;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x80000000002876A0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10968C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C746974;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C746974;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x656C746974627573;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x63657053746E6F66;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6E6F69746361;
      break;
    case 4:
      uint64_t v5 = 0x7365527465737361;
      unint64_t v3 = 0xED0000656372756FLL;
      break;
    case 5:
      uint64_t v5 = 0x6D614E6567616D69;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 6:
      uint64_t v5 = 0x6D496C6F626D7973;
      unint64_t v3 = 0xEF646E694B656761;
      break;
    case 7:
      uint64_t v5 = 0x73756E656DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656C746974627573) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x63657053746E6F66) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6E6F69746361) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xED0000656372756FLL;
      if (v5 != 0x7365527465737361) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x6D614E6567616D69) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x6D496C6F626D7973;
      unint64_t v6 = 0xEF646E694B656761;
      goto LABEL_21;
    case 7:
      if (v5 != 0x73756E656DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_109930(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000756E65;
  uint64_t v3 = 0x4D747865746E6F63;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4D747865746E6F63;
  unint64_t v6 = 0xEB00000000756E65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x69576E6F74747562;
      unint64_t v6 = 0xEF6567616D496874;
      break;
    case 2:
      unint64_t v5 = 0x69576E6F74747562;
      unint64_t v6 = 0xEF656C7469546874;
      break;
    case 3:
      unint64_t v6 = 0x8000000000287780;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x70756B636F6CLL;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = 0x80000000002877A0;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v7 = 0x67616D496874;
      goto LABEL_10;
    case 2:
      uint64_t v7 = 0x6C7469546874;
LABEL_10:
      unint64_t v2 = v7 & 0xFFFFFFFFFFFFLL | 0xEF65000000000000;
      if (v5 != 0x69576E6F74747562) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0x8000000000287780;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x70756B636F6CLL;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0x80000000002877A0;
      if (v5 != 0xD000000000000016) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_19:
      }
        char v8 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_109B80(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x72756769666E6F63;
  }
  else {
    uint64_t v3 = 1684957547;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xED00006E6F697461;
  }
  if (a2) {
    uint64_t v5 = 0x72756769666E6F63;
  }
  else {
    uint64_t v5 = 1684957547;
  }
  if (a2) {
    unint64_t v6 = 0xED00006E6F697461;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_109C2C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000000002878B0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x72616D6B63656863;
      unint64_t v3 = 0xE90000000000006BLL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x73697370696C6C65;
      break;
    case 3:
      unint64_t v5 = 0x73697370696C6C65;
      unint64_t v3 = 0xEF656C637269632ELL;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1937075312;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "square.and.arrow.up";
      goto LABEL_9;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6B72616D78;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = "square.and.pencil";
LABEL_9:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000000002878B0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x72616D6B63656863;
      unint64_t v7 = 0xE90000000000006BLL;
      break;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x73697370696C6C65;
      break;
    case 3:
      unint64_t v2 = 0x73697370696C6C65;
      unint64_t v7 = 0xEF656C637269632ELL;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v2 = 1937075312;
      break;
    case 5:
      unint64_t v2 = 0xD000000000000013;
      char v8 = "square.and.arrow.up";
      goto LABEL_18;
    case 6:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v2 = 0x6B72616D78;
      break;
    case 7:
      unint64_t v2 = 0xD000000000000011;
      char v8 = "square.and.pencil";
LABEL_18:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_109E80(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0;
    }
    else {
      uint64_t v3 = 0x646168536B726164;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE000000000000000;
    }
    else {
      unint64_t v4 = 0xEA0000000000776FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = 0x646168536B726164;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE000000000000000;
      }
      else {
        unint64_t v7 = 0xEA0000000000776FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x746867696ELL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x746867696ELL)
  {
LABEL_21:
    char v8 = sub_26DDB0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_109F7C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F666E4964726163;
  }
  else {
    uint64_t v3 = 0x536472614377656ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007465;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6F666E4964726163;
  }
  else {
    uint64_t v5 = 0x536472614377656ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007465;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10A028(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x4164657375636F66;
  }
  else {
    uint64_t v3 = 0x536472614377656ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007465;
  }
  else {
    unint64_t v4 = 0xED000044496D6164;
  }
  if (a2) {
    uint64_t v5 = 0x4164657375636F66;
  }
  else {
    uint64_t v5 = 0x536472614377656ELL;
  }
  if (a2) {
    unint64_t v6 = 0xED000044496D6164;
  }
  else {
    unint64_t v6 = 0xEA00000000007465;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10A0E0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x736E6F6974706FLL;
  }
  else {
    uint64_t v3 = 1684366694;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x736E6F6974706FLL;
  }
  else {
    uint64_t v5 = 1684366694;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26DDB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10A180(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x726564616568;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x726564616568;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7265746F6F66;
      break;
    case 2:
      uint64_t v5 = 0x70756B636F6CLL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x726568746FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x7265746F6F66) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x70756B636F6CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x726568746FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_26DDB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t EmptyAction.init()()
{
  uint64_t v0 = sub_26CB80();
  __chkstk_darwin(v0 - 8);
  sub_26CB50();
  return sub_26C910();
}

uint64_t Models.FlowBackAction.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_269CE0();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t ClosureAction.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_269C00();
  uint64_t v18 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_269CC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26CB80();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26CBB0();
  sub_17DDF8(&v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v20 != 34)
  {
    char v19 = v20;
    if (Metrics.ClickActionType.rawValue.getter() == 0x64616F6C6572 && v13 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ClickData.TargetType.reload(_:), v5);
      (*(void (**)(char *, void, uint64_t))(v18 + 104))(v4, enum case for LinkActionType.click(_:), v2);
      sub_269CD0();
      uint64_t v15 = sub_269CE0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
    }
    char v14 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
  }
  uint64_t v17 = sub_269CE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
}

uint64_t CompoundAction.clickData.getter@<X0>(char *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_269CE0();
  uint64_t v49 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v44 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2EA820);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v47 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v44 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = sub_26CC20();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 + 16);
  if (!v14) {
    goto LABEL_10;
  }
  unint64_t v15 = 0;
  uint64_t v16 = v12 + 32;
  char v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  while (1)
  {
    sub_C224(v16, (uint64_t)v57);
    sub_C224((uint64_t)v57, (uint64_t)v53);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_4A98(&qword_2EA840);
    uint64_t v19 = sub_4A98(&qword_2EA848);
    int v20 = swift_dynamicCast();
    uint64_t v51 = v19;
    uint64_t v52 = v18;
    if (v20)
    {
      uint64_t v21 = v14;
      uint64_t v22 = v17;
      uint64_t v23 = v13;
      uint64_t v24 = v1;
      uint64_t v25 = *((void *)&v55 + 1);
      uint64_t v26 = v56;
      sub_4ADC(&v54, *((uint64_t *)&v55 + 1));
      char v27 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
      uint64_t v28 = v26;
      uint64_t v1 = v24;
      uint64_t v13 = v23;
      uint64_t v17 = v22;
      uint64_t v14 = v21;
      v27(v25, v28);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v54);
    }
    else
    {
      uint64_t v56 = 0;
      long long v54 = 0u;
      long long v55 = 0u;
      sub_B6DC((uint64_t)&v54, &qword_2EA838);
      (*v50)(v11, 1, 1, v1);
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v57);
    swift_bridgeObjectRelease();
    uint64_t v29 = *v17;
    int v30 = (*v17)(v11, 1, v1);
    uint64_t result = sub_B6DC((uint64_t)v11, &qword_2EA820);
    if (v30 != 1) {
      break;
    }
    ++v15;
    v16 += 40;
    if (v14 == v15) {
      goto LABEL_10;
    }
  }
  if (v14 == v15)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v48, 1, 1, v1);
    return swift_bridgeObjectRelease();
  }
  if (v15 >= *(void *)(v13 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_C224(v16, (uint64_t)v57);
    sub_C224((uint64_t)v57, (uint64_t)v53);
    if (swift_dynamicCast())
    {
      uint64_t v32 = v1;
      uint64_t v33 = *((void *)&v55 + 1);
      uint64_t v34 = v56;
      sub_4ADC(&v54, *((uint64_t *)&v55 + 1));
      char v35 = *(void (**)(uint64_t, uint64_t))(v34 + 16);
      uint64_t v36 = (uint64_t)v45;
      uint64_t v37 = v34;
      uint64_t v1 = v32;
      v35(v33, v37);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v54);
    }
    else
    {
      uint64_t v56 = 0;
      long long v54 = 0u;
      long long v55 = 0u;
      sub_B6DC((uint64_t)&v54, &qword_2EA838);
      uint64_t v36 = (uint64_t)v45;
      (*v50)(v45, 1, 1, v1);
    }
    uint64_t v38 = (uint64_t)v47;
    uint64_t v39 = (uint64_t)v46;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v57);
    sub_10ABF8(v36, v39);
    sub_10AC60(v39, v38);
    uint64_t result = v29((char *)v38, 1, v1);
    if (result != 1)
    {
      uint64_t v41 = v49 + 32;
      char v40 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
      uint64_t v42 = v44;
      v40(v44, v38, v1);
      sub_B6DC(v39, &qword_2EA820);
      uint64_t v43 = v48;
      v40(v48, (uint64_t)v42, v1);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 24))(v43, 0, 1, v1);
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10ABF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10AC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EA820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of BooksActionModel.clickData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for SeeAllViewModel()
{
  return &type metadata for SeeAllViewModel;
}

BooksUI::BooksToolbarIconView __swiftcall BooksToolbarIconView.init(kind:)(BooksUI::BooksToolbarIconView kind)
{
  *uint64_t v1 = *(unsigned char *)kind.symbolKind;
  return kind;
}

uint64_t BooksToolbarIconView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v47 = a1;
  uint64_t v46 = sub_26C860();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_26C840();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  uint64_t v42 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = sub_26AD10();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v39 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_26AB80();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (int *)type metadata accessor for CircularIconView();
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)&v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = sub_4A98(&qword_2F03A8);
  uint64_t v17 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v38 = *v2;
  *uint64_t v16 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  int v20 = (uint64_t *)((char *)v16 + v14[5]);
  uint64_t *v20 = swift_getKeyPath();
  sub_4A98(&qword_2EBC80);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (char *)v16 + v14[6];
  *(void *)uint64_t v21 = swift_getKeyPath();
  v21[8] = 0;
  uint64_t v22 = (uint64_t *)((char *)v16 + v14[7]);
  *uint64_t v22 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)((char *)v16 + v14[8]);
  uint64_t *v23 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (char *)v16 + v14[9];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[8] = 0;
  uint64_t v25 = (char *)v16 + v14[11];
  *(void *)uint64_t v25 = swift_getKeyPath();
  v25[8] = 0;
  *((unsigned char *)v16 + v14[10]) = v38;
  sub_26AD20();
  sub_10B4EC(&qword_2F03B0, (void (*)(uint64_t))type metadata accessor for CircularIconView);
  sub_10B4EC(&qword_2F03B8, (void (*)(uint64_t))&type metadata accessor for LiftHoverEffect);
  sub_26BCC0();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10B490((uint64_t)v16);
  sub_26C830();
  sub_26C850();
  sub_10B4EC(&qword_2ED9F0, (void (*)(uint64_t))&type metadata accessor for ReplaceSymbolEffect);
  uint64_t v26 = v39;
  uint64_t v27 = v41;
  sub_26AD00();
  (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v4, v46);
  (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v8, v27);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = sub_4A98(&qword_2F03C0);
  uint64_t v30 = v47;
  uint64_t v31 = (uint64_t *)(v47 + *(int *)(v29 + 36));
  uint64_t v32 = sub_4A98(&qword_2ED9E0);
  uint64_t v33 = v43;
  uint64_t v34 = v45;
  (*(void (**)(char *, unsigned char *, uint64_t))(v43 + 16))((char *)v31 + *(int *)(v32 + 28), v26, v45);
  *uint64_t v31 = KeyPath;
  uint64_t v35 = v40;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v17 + 16))(v30, v19, v40);
  (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v26, v34);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v35);
}

uint64_t sub_10B334@<X0>(unsigned char *a1@<X8>)
{
  sub_10B984();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_10B384()
{
  return sub_26B0C0();
}

uint64_t sub_10B3EC@<X0>(unsigned char *a1@<X8>)
{
  sub_10B984();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_10B43C()
{
  return sub_26B0C0();
}

uint64_t sub_10B490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CircularIconView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10B4EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10B534()
{
  return sub_26AF10();
}

uint64_t sub_10B558()
{
  return sub_26AF10();
}

uint64_t sub_10B57C(uint64_t a1)
{
  uint64_t v2 = sub_26AD10();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26AF20();
}

uint64_t sub_10B648()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for SymbolImage.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BooksToolbarIconView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10B7C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksToolbarIconView()
{
  return &type metadata for BooksToolbarIconView;
}

unint64_t sub_10B7FC()
{
  unint64_t result = qword_2F03C8;
  if (!qword_2F03C8)
  {
    sub_7B0C(&qword_2F03C0);
    type metadata accessor for CircularIconView();
    sub_26AB80();
    sub_10B4EC(&qword_2F03B0, (void (*)(uint64_t))type metadata accessor for CircularIconView);
    sub_10B4EC(&qword_2F03B8, (void (*)(uint64_t))&type metadata accessor for LiftHoverEffect);
    swift_getOpaqueTypeConformance2();
    sub_10B928();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F03C8);
  }
  return result;
}

unint64_t sub_10B928()
{
  unint64_t result = qword_2F03D0;
  if (!qword_2F03D0)
  {
    sub_7B0C(&qword_2ED9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F03D0);
  }
  return result;
}

unint64_t sub_10B984()
{
  unint64_t result = qword_2F03D8[0];
  if (!qword_2F03D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F03D8);
  }
  return result;
}

uint64_t sub_10B9D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 40) = 0;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for ListItemMetadataSharedWithYouView() + 36);
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t sub_10BA74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
  uint64_t v5 = v4;
  sub_420BC((uint64_t)v8);
  type metadata accessor for HighlightAttributionViewLoader();
  swift_allocObject();
  HighlightAttributionViewLoader.init(id:provider:)(v3, v5, (uint64_t)v8);
  uint64_t result = sub_26C340();
  uint64_t v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_10BB30@<X0>(void *a1@<X8>)
{
  sub_4A98(&qword_2EDEF8);
  sub_26C350();
  swift_getKeyPath();
  sub_10C82C();
  sub_269A10();
  swift_release();
  int v2 = *(void **)(v5 + 16);
  id v3 = v2;
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = v2 != 0;
  return result;
}

uint64_t sub_10BBD8@<X0>(void *a1@<X8>)
{
  return sub_10BB30(a1);
}

uint64_t type metadata accessor for ListItemMetadataSharedWithYouView()
{
  return sub_129B4();
}

uint64_t sub_10BC00()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10BC9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 41) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    if (a2[5])
    {
      uint64_t v11 = a2[3];
      if (v11)
      {
        uint64_t v12 = a2[4];
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = v12;
        (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
      }
      else
      {
        long long v13 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(void *)(a1 + 32) = a2[4];
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))((v4 + v7 + 41) & ~v7, ((unint64_t)a2 + v7 + 41) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_10BE10(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_10BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))((*(unsigned __int8 *)(v9 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_10BF90(uint64_t a1, long long *a2, uint64_t a3)
{
  if ((long long *)a1 != a2)
  {
    sub_10C094(a1);
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))((*(unsigned __int8 *)(v9 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_10C094(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBC68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10C0F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

_OWORD *sub_10C16C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10C094((uint64_t)a1);
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_10C204(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 41) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 41) & ~v6);
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + 40);
      if (v15 > 1) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10C3A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 41) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10C61CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 41] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0xFE)
        {
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 8) = 0u;
          a1[40] = 0;
          *(void *)a1 = a2 - 255;
        }
        else
        {
          a1[40] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_10C644()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SharedWithYouContentView()
{
  swift_release();

  return swift_release();
}

void *_s7BooksUI24SharedWithYouContentViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SharedWithYouContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SharedWithYouContentView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SharedWithYouContentView()
{
  return &type metadata for SharedWithYouContentView;
}

unint64_t sub_10C7B4()
{
  unint64_t result = qword_2F0460;
  if (!qword_2F0460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0460);
  }
  return result;
}

uint64_t sub_10C808()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10C82C()
{
  unint64_t result = qword_2EDF00;
  if (!qword_2EDF00)
  {
    type metadata accessor for HighlightAttributionViewLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EDF00);
  }
  return result;
}

unint64_t sub_10C888()
{
  unint64_t result = qword_2F0468;
  if (!qword_2F0468)
  {
    sub_7B0C(&qword_2F0470);
    sub_10C8FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0468);
  }
  return result;
}

unint64_t sub_10C8FC()
{
  unint64_t result = qword_2F0478;
  if (!qword_2F0478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0478);
  }
  return result;
}

uint64_t SegmentedControlViewModel.selection.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t SegmentedControlViewModel.selection.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t SegmentedControlViewModel.init(pickerItems:selection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for SegmentedControlViewModel() + 36);
  unsigned int v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for SegmentedControlViewModel()
{
  return sub_129B4();
}

uint64_t sub_10CA64()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10CB04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    unsigned int v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10CC08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_10CC7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_10CD0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_10CD9C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_10CE0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_10CE94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10D034(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10D290);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          int v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t View.animateIn()()
{
  return swift_release();
}

uint64_t EnvironmentValues.isAnimatableIn.getter()
{
  sub_10D4A0();
  sub_26B0B0();
  return v1;
}

uint64_t sub_10D368@<X0>(unsigned char *a1@<X8>)
{
  sub_10D4A0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_10D3B8@<X0>(unsigned char *a1@<X8>)
{
  sub_10D4A0();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_10D408()
{
  return sub_26B0C0();
}

uint64_t sub_10D454()
{
  return sub_26B0C0();
}

unint64_t sub_10D4A0()
{
  unint64_t result = qword_2F0500;
  if (!qword_2F0500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0500);
  }
  return result;
}

uint64_t EnvironmentValues.isAnimatableIn.setter()
{
  return sub_26B0C0();
}

uint64_t (*EnvironmentValues.isAnimatableIn.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_10D4A0();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_10D5A4;
}

uint64_t sub_10D5A4(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_26B0C0();
}

uint64_t sub_10D5DC()
{
  return swift_getWitnessTable();
}

unint64_t sub_10D64C()
{
  unint64_t result = qword_2EAD70;
  if (!qword_2EAD70)
  {
    sub_7B0C(&qword_2EAD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAD70);
  }
  return result;
}

ValueMetadata *type metadata accessor for IsAnimatableInKey()
{
  return &type metadata for IsAnimatableInKey;
}

uint64_t CodeListItemViewModel.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_110D98(v1, a1, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
}

uint64_t CodeListItemViewModel.wrappedValue.setter(uint64_t a1)
{
  return sub_10D6F4(a1, v1);
}

uint64_t sub_10D6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListItemViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t CodeListItemViewModel.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10EA60(a1, a2, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
}

unint64_t sub_10D788(char a1)
{
  unint64_t result = 0x747865746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656372756F736572;
      break;
    case 2:
      unint64_t result = 0x4E6E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x4449736569726573;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10D868(char a1)
{
  unint64_t result = 0x747865746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656372756F736572;
      break;
    case 2:
      unint64_t result = 0x4E6E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x4449736569726573;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10D948(unsigned __int8 *a1, char *a2)
{
  return sub_109458(*a1, *a2);
}

Swift::Int sub_10D954()
{
  return sub_180898();
}

uint64_t sub_10D95C()
{
  return sub_181068();
}

Swift::Int sub_10D964()
{
  return sub_1818B8();
}

uint64_t sub_10D96C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_110CAC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_10D99C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10D788(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10D9C8()
{
  return sub_10D868(*v0);
}

uint64_t sub_10D9D0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_110CAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10D9F8(uint64_t a1)
{
  unint64_t v2 = sub_10E840();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10DA34(uint64_t a1)
{
  unint64_t v2 = sub_10E840();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10DA70(unsigned __int8 *a1, char *a2)
{
  return sub_1092A0(*a1, *a2);
}

Swift::Int sub_10DA7C()
{
  return sub_1809C0();
}

uint64_t sub_10DA84()
{
  return sub_180F8C();
}

Swift::Int sub_10DA8C()
{
  return sub_1819DC();
}

uint64_t sub_10DA94@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_110D4C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10DAC4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006567;
  unint64_t v3 = 0x6150736569726573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000000002876C0;
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_3;
    case 2:
      *a1 = 0x736E6F6974696465;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000017;
      a1[1] = 0x80000000002876E0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_10DB74()
{
  return sub_26D5E0();
}

uint64_t CodeListItemViewModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v75 = type metadata accessor for ListItemEditionsDescriptorExternals();
  __chkstk_darwin(v75);
  uint64_t v76 = (uint64_t *)((char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v4 - 8);
  uint64_t v78 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for ListItemViewModel();
  uint64_t v6 = __chkstk_darwin(v77);
  unsigned int v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  size_t v10 = (char *)&v68 - v9;
  uint64_t v11 = sub_4A98(&qword_2F0508);
  uint64_t v80 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CodeListItemViewModel();
  __chkstk_darwin(v14 - 8);
  unsigned int v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v81 = a1;
  sub_4ADC(a1, v17);
  sub_10E840();
  uint64_t v18 = (uint64_t)v103;
  sub_26DFC0();
  if (v18) {
    goto LABEL_5;
  }
  int v73 = v8;
  uint64_t v74 = v16;
  uint64_t v103 = v10;
  uint64_t v19 = v79;
  sub_4A98(&qword_2EBAB8);
  LOBYTE(v82[0]) = 1;
  sub_7C18((unint64_t *)&qword_2EBAC0, &qword_2EBAB8);
  sub_26DC90();
  int v20 = *(void **)v96;
  sub_269EF0();
  uint64_t v21 = v80;
  if (!*(void *)&v96[24])
  {
    sub_B6DC((uint64_t)v96, &qword_2EBAC8);
    uint64_t v22 = sub_26DAD0();
    swift_allocError();
    uint64_t v23 = v13;
    uint64_t v24 = v11;
    uint64_t v26 = v25;
    sub_26DC20();
    sub_4581C();
    swift_allocError();
    *uint64_t v27 = 0;
    sub_26DAC0();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v26, enum case for DecodingError.dataCorrupted(_:), v22);
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v24);
LABEL_5:
    uint64_t v28 = (uint64_t)v81;
    return _s7BooksUI13AnyPagedFrameVwxx_0(v28);
  }
  sub_AD44((long long *)v96, (uint64_t)v101);
  LOBYTE(v82[0]) = 0;
  sub_10E894();
  sub_26DC90();
  switch(v96[0])
  {
    case 1:
      sub_4581C();
      swift_allocError();
      unsigned char *v32 = 1;
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v101);
      goto LABEL_5;
    case 2:
      sub_4A98(&qword_2F0520);
      LOBYTE(v82[0]) = 5;
      sub_10E924(&qword_2F0528, &qword_2F0520, (void (*)(void))sub_10E8E8);
      sub_26DC90();
      uint64_t v33 = *(void *)v96;
      v96[0] = 4;
      uint64_t v34 = sub_26DC30();
      uint64_t v68 = v45;
      uint64_t v69 = v34;
      uint64_t v70 = v33;
      sub_C224((uint64_t)v101, (uint64_t)v97);
      *((void *)&v98 + 1) = 0;
      LOBYTE(v99) = 1;
      *((void *)&v99 + 1) = 0;
      __int16 v100 = 255;
      uint64_t v95 = 0;
      memset(v94, 0, sizeof(v94));
      sub_4ADC(v101, v102);
      uint64_t v46 = sub_269F80();
      uint64_t v48 = v47;
      sub_C224((uint64_t)v101, (uint64_t)v92);
      uint64_t v71 = v13;
      uint64_t v72 = v11;
      if (!v48)
      {
        sub_4ADC(v92, v92[3]);
        uint64_t v46 = sub_26A020();
        uint64_t v48 = v49;
      }
      char v50 = v76;
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v92);
      v93[3] = &type metadata for ListItemMetadataTitleWithSubtitle;
      v93[4] = sub_C190();
      uint64_t v51 = swift_allocObject();
      v93[0] = v51;
      *(void *)(v51 + 16) = v46;
      *(void *)(v51 + 24) = v48;
      *(void *)(v51 + 32) = 0;
      *(void *)(v51 + 40) = 0;
      *(unsigned char *)(v51 + 48) = 0;
      uint64_t v52 = sub_4A98(&qword_2F0548);
      uint64_t v90 = (ValueMetadata *)v52;
      unint64_t v91 = sub_7C18(&qword_2F0550, &qword_2F0548);
      uint64_t v53 = sub_CA1C(v89);
      sub_C224((uint64_t)v101, (uint64_t)v53);
      uint64_t v54 = v68;
      v53[5] = v69;
      v53[6] = v54;
      v53[7] = v70;
      uint64_t v55 = (uint64_t)v53 + *(int *)(v52 + 44);
      *char v50 = swift_getKeyPath();
      sub_4A98(&qword_2EA978);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t *)((char *)v50 + *(int *)(v75 + 20));
      *uint64_t v56 = swift_getKeyPath();
      sub_4A98(&qword_2EBC88);
      swift_storeEnumTagMultiPayload();
      sub_10EA60((uint64_t)v50, v55, (uint64_t (*)(void))type metadata accessor for ListItemEditionsDescriptorExternals);
      uint64_t v88 = 0;
      memset(v87, 0, sizeof(v87));
      uint64_t v86 = 0;
      memset(v85, 0, sizeof(v85));
      uint64_t v84 = 0;
      memset(v83, 0, sizeof(v83));
      uint64_t v76 = (uint64_t *)&v82[12] + 1;
      memset(v82, 0, 280);
      sub_C950((uint64_t)v94, (uint64_t)v82, &qword_2EA0E0);
      sub_C950((uint64_t)v93, (uint64_t)&v82[2] + 8, &qword_2EA0E8);
      sub_C950((uint64_t)v89, (uint64_t)&v82[5], &qword_2EA0F0);
      sub_C950((uint64_t)v87, (uint64_t)&v82[10], &qword_2EA0F8);
      sub_C950((uint64_t)v85, (uint64_t)v76, &qword_2EA100);
      sub_C950((uint64_t)v83, (uint64_t)&v82[15], &qword_2EA108);
      memcpy(v96, v82, sizeof(v96));
      sub_C224((uint64_t)v101, (uint64_t)v87);
      uint64_t v90 = &type metadata for ListItemAccessoryBuyButton;
      unint64_t v91 = sub_8B5A8();
      uint64_t v57 = swift_allocObject();
      v89[0] = v57;
      *(void *)&v82[0] = swift_getKeyPath();
      BYTE8(v82[0]) = 0;
      sub_AD44(v87, (uint64_t)&v82[1]);
      long long v58 = v82[1];
      *(_OWORD *)(v57 + 16) = v82[0];
      *(_OWORD *)(v57 + 32) = v58;
      *(_OWORD *)(v57 + 48) = v82[2];
      *(void *)(v57 + 64) = *(void *)&v82[3];
      sub_C224((uint64_t)v101, (uint64_t)v82);
      sub_C224((uint64_t)v101, (uint64_t)v87);
      uint64_t v59 = v78;
      CardInfo.init(with:alwaysPresentNewCardSet:)(v87, 1, v78);
      sub_4ADC(v101, v102);
      uint64_t v60 = sub_269DB0();
      uint64_t v62 = v61;
      long long v63 = v97[0];
      uint64_t v64 = (uint64_t)v73;
      *(_OWORD *)(v73 + 40) = v97[1];
      long long v65 = v99;
      *(_OWORD *)(v64 + 56) = v98;
      *(_OWORD *)(v64 + 72) = v65;
      *(unsigned char *)uint64_t v64 = 0;
      *(void *)(v64 + 8) = 0;
      *(_OWORD *)(v64 + 376) = 0u;
      *(_OWORD *)(v64 + 392) = 0u;
      *(void *)(v64 + 408) = 0;
      *(unsigned char *)(v64 + 16) = 1;
      *(_WORD *)(v64 + 88) = v100;
      *(_OWORD *)(v64 + 24) = v63;
      memcpy((void *)(v64 + 96), v96, 0x118uLL);
      sub_C950((uint64_t)v89, v64 + 376, &qword_2EDB70);
      sub_AD44(v82, v64 + 416);
      uint64_t v66 = v77;
      sub_8B718(v59, v64 + *(int *)(v77 + 40));
      uint64_t v67 = v64 + *(int *)(v66 + 44);
      *(_OWORD *)uint64_t v67 = xmmword_278090;
      *(_OWORD *)(v67 + 16) = 0u;
      *(_OWORD *)(v67 + 32) = 0u;
      *(_OWORD *)(v67 + 48) = 0u;
      *(_OWORD *)(v67 + 64) = 0u;
      *(_OWORD *)(v67 + 80) = 0u;
      *(_OWORD *)(v67 + 96) = 0u;
      *(_OWORD *)(v67 + 112) = 0u;
      *(void *)(v67 + 128) = v60;
      *(void *)(v67 + 136) = v62;
      *(unsigned char *)(v67 + 144) = 2;
      uint64_t v41 = (uint64_t)v103;
      sub_10EA60(v64, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v71, v72);
      break;
    case 3:
      v96[0] = 2;
      uint64_t v35 = sub_26DC70();
      uint64_t v41 = (uint64_t)v103;
      static ListItemViewModel.recommendationsPage(sectionName:assetInfo:)(v35, v36, v101, (uint64_t)v103);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
      break;
    default:
      v96[0] = 3;
      uint64_t v30 = sub_26DC70();
      uint64_t v31 = v11;
      uint64_t v37 = v30;
      uint64_t v39 = v38;
      uint64_t v72 = v31;
      sub_C224((uint64_t)v101, (uint64_t)v96);
      uint64_t v40 = v78;
      CardInfo.init(with:alwaysPresentNewCardSet:)(v96, 1, v78);
      static ListItemViewModel.seriesPage(seriesID:assetInfo:cardInfo:)(v37, v39, v101, v40, (uint64_t)v103);
      swift_bridgeObjectRelease();

      sub_B6DC(v40, &qword_2EDB60);
      uint64_t v41 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v72);
      break;
  }
  uint64_t v42 = v19;
  uint64_t v43 = (uint64_t)v81;
  uint64_t v44 = (uint64_t)v74;
  sub_10EA60(v41, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v101);
  sub_10EA60(v44, v42, (uint64_t (*)(void))type metadata accessor for CodeListItemViewModel);
  uint64_t v28 = v43;
  return _s7BooksUI13AnyPagedFrameVwxx_0(v28);
}

uint64_t sub_10E7AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CodeListItemViewModel.init(from:)(a1, a2);
}

uint64_t sub_10E7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_110D98(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t type metadata accessor for CodeListItemViewModel()
{
  uint64_t result = qword_2F05B8;
  if (!qword_2F05B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10E840()
{
  unint64_t result = qword_2F0510;
  if (!qword_2F0510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0510);
  }
  return result;
}

unint64_t sub_10E894()
{
  unint64_t result = qword_2F0518;
  if (!qword_2F0518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0518);
  }
  return result;
}

uint64_t sub_10E8E8()
{
  return sub_10E924(&qword_2F0530, &qword_2F0538, (void (*)(void))sub_10E990);
}

uint64_t sub_10E924(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10E990()
{
  unint64_t result = qword_2F0540;
  if (!qword_2F0540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0540);
  }
  return result;
}

uint64_t sub_10E9E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10EA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_110D98(a1, a2, type metadata accessor for FontConstants.Environment);
}

uint64_t sub_10EA60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10EAC8()
{
  sub_C374(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 32);

  return swift_deallocObject();
}

unint64_t sub_10EB18()
{
  unint64_t result = qword_2F0558;
  if (!qword_2F0558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0558);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CodeListItemViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ListItemViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    char v7 = *((unsigned char *)a2 + 89);
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, (uint64_t)(a2 + 3));
    uint64_t v9 = (unsigned char *)(a1 + 64);
    size_t v10 = a2 + 8;
    if (v7)
    {
      *uint64_t v9 = *v10;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
      *(void *)(a1 + 80) = a2[10];
      *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    }
    *(unsigned char *)(a1 + 89) = v7;
    uint64_t v12 = (_OWORD *)(a1 + 96);
    int v13 = a2 + 12;
    uint64_t v14 = a2[15];
    if (v14)
    {
      uint64_t v15 = a2[16];
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 128) = v15;
      (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
    }
    else
    {
      long long v16 = *((_OWORD *)a2 + 7);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 112) = v16;
      *(void *)(a1 + 128) = a2[16];
    }
    uint64_t v17 = (_OWORD *)(a1 + 136);
    uint64_t v18 = a2 + 17;
    uint64_t v19 = a2[20];
    if (v19)
    {
      uint64_t v20 = a2[21];
      *(void *)(a1 + 160) = v19;
      *(void *)(a1 + 168) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 19);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 152) = v21;
      *(void *)(a1 + 168) = a2[21];
    }
    uint64_t v22 = (_OWORD *)(a1 + 176);
    uint64_t v23 = a2 + 22;
    uint64_t v24 = a2[25];
    if (v24)
    {
      uint64_t v25 = a2[26];
      *(void *)(a1 + 200) = v24;
      *(void *)(a1 + 208) = v25;
      (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
    }
    else
    {
      long long v26 = *((_OWORD *)a2 + 12);
      *uint64_t v22 = *v23;
      *(_OWORD *)(a1 + 192) = v26;
      *(void *)(a1 + 208) = a2[26];
    }
    uint64_t v27 = (_OWORD *)(a1 + 216);
    uint64_t v28 = a2 + 27;
    uint64_t v29 = a2[30];
    if (v29)
    {
      uint64_t v30 = a2[31];
      *(void *)(a1 + 240) = v29;
      *(void *)(a1 + 248) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
    }
    else
    {
      long long v31 = *(_OWORD *)(a2 + 29);
      *uint64_t v27 = *v28;
      *(_OWORD *)(a1 + 232) = v31;
      *(void *)(a1 + 248) = a2[31];
    }
    uint64_t v32 = (_OWORD *)(a1 + 256);
    uint64_t v33 = a2 + 32;
    uint64_t v34 = a2[35];
    if (v34)
    {
      uint64_t v35 = a2[36];
      *(void *)(a1 + 280) = v34;
      *(void *)(a1 + 288) = v35;
      (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
    }
    else
    {
      long long v36 = *((_OWORD *)a2 + 17);
      _OWORD *v32 = *v33;
      *(_OWORD *)(a1 + 272) = v36;
      *(void *)(a1 + 288) = a2[36];
    }
    uint64_t v37 = (_OWORD *)(a1 + 296);
    uint64_t v38 = a2 + 37;
    uint64_t v39 = a2[40];
    if (v39)
    {
      uint64_t v40 = a2[41];
      *(void *)(a1 + 320) = v39;
      *(void *)(a1 + 328) = v40;
      (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
    }
    else
    {
      long long v41 = *(_OWORD *)(a2 + 39);
      _OWORD *v37 = *v38;
      *(_OWORD *)(a1 + 312) = v41;
      *(void *)(a1 + 328) = a2[41];
    }
    uint64_t v42 = (_OWORD *)(a1 + 336);
    uint64_t v43 = a2 + 42;
    uint64_t v44 = a2[45];
    if (v44)
    {
      uint64_t v45 = a2[46];
      *(void *)(a1 + 360) = v44;
      *(void *)(a1 + 368) = v45;
      (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
    }
    else
    {
      long long v46 = *((_OWORD *)a2 + 22);
      *uint64_t v42 = *v43;
      *(_OWORD *)(a1 + 352) = v46;
      *(void *)(a1 + 368) = a2[46];
    }
    uint64_t v47 = (_OWORD *)(a1 + 376);
    uint64_t v48 = a2 + 47;
    uint64_t v49 = a2[50];
    if (v49)
    {
      uint64_t v50 = a2[51];
      *(void *)(a1 + 400) = v49;
      *(void *)(a1 + 408) = v50;
      (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
    }
    else
    {
      long long v51 = *(_OWORD *)(a2 + 49);
      *uint64_t v47 = *v48;
      *(_OWORD *)(a1 + 392) = v51;
      *(void *)(a1 + 408) = a2[51];
    }
    uint64_t v52 = a2[55];
    uint64_t v53 = a2[56];
    *(void *)(a1 + 440) = v52;
    *(void *)(a1 + 448) = v53;
    (**(void (***)(uint64_t, uint64_t))(v52 - 8))(a1 + 416, (uint64_t)(a2 + 52));
    uint64_t v54 = *(int *)(v6 + 40);
    uint64_t v55 = (void *)(a1 + v54);
    uint64_t v56 = (uint64_t *)((char *)a2 + v54);
    uint64_t v57 = type metadata accessor for CardInfo();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = sub_4A98(&qword_2EDB60);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      *uint64_t v55 = *v56;
      uint64_t v60 = *(int *)(v57 + 20);
      uint64_t v76 = (char *)v56 + v60;
      uint64_t v77 = (char *)v55 + v60;
      uint64_t v61 = sub_269840();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v77, v76, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v63 = *(int *)(v6 + 44);
    uint64_t v64 = a1 + v63;
    uint64_t v65 = (uint64_t)a2 + v63;
    uint64_t v66 = *(void *)(v65 + 8);
    *(void *)uint64_t v64 = *(void *)v65;
    *(void *)(v64 + 8) = v66;
    uint64_t v67 = *(void *)(v65 + 24);
    *(void *)(v64 + 16) = *(void *)(v65 + 16);
    *(void *)(v64 + 24) = v67;
    uint64_t v68 = *(void *)(v65 + 40);
    *(void *)(v64 + 32) = *(void *)(v65 + 32);
    *(void *)(v64 + 40) = v68;
    uint64_t v69 = *(void *)(v65 + 56);
    *(void *)(v64 + 48) = *(void *)(v65 + 48);
    *(void *)(v64 + 56) = v69;
    uint64_t v70 = *(void *)(v65 + 72);
    *(void *)(v64 + 64) = *(void *)(v65 + 64);
    *(void *)(v64 + 72) = v70;
    uint64_t v71 = *(void *)(v65 + 88);
    *(void *)(v64 + 80) = *(void *)(v65 + 80);
    *(void *)(v64 + 88) = v71;
    uint64_t v72 = *(void *)(v65 + 104);
    *(void *)(v64 + 96) = *(void *)(v65 + 96);
    *(void *)(v64 + 104) = v72;
    uint64_t v73 = *(void *)(v65 + 120);
    *(void *)(v64 + 112) = *(void *)(v65 + 112);
    *(void *)(v64 + 120) = v73;
    uint64_t v74 = *(void *)(v65 + 136);
    *(void *)(v64 + 128) = *(void *)(v65 + 128);
    *(void *)(v64 + 136) = v74;
    *(unsigned char *)(v64 + 144) = *(unsigned char *)(v65 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CodeListItemViewModel(void *a1)
{
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 3));
  if (a1[15]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 12));
  }
  if (a1[20]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 17));
  }
  if (a1[25]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 22));
  }
  if (a1[30]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 27));
  }
  if (a1[35]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 32));
  }
  if (a1[40]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 37));
  }
  if (a1[45]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 42));
  }
  if (a1[50]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 47));
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 52));
  unint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for ListItemViewModel() + 40);
  uint64_t v3 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = &v2[*(int *)(v3 + 20)];
    uint64_t v5 = sub_269840();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CodeListItemViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 89);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 24, a2 + 24);
  uint64_t v6 = (unsigned char *)(a1 + 64);
  char v7 = (unsigned char *)(a2 + 64);
  if (v4)
  {
    *uint64_t v6 = *v7;
  }
  else
  {
    *(void *)uint64_t v6 = *(void *)v7;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  *(unsigned char *)(a1 + 89) = v4;
  long long v8 = (_OWORD *)(a1 + 96);
  uint64_t v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 120);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v10;
    *(void *)(a1 + 128) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 112);
    *long long v8 = *v9;
    *(_OWORD *)(a1 + 112) = v12;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
  }
  int v13 = (_OWORD *)(a1 + 136);
  uint64_t v14 = (_OWORD *)(a2 + 136);
  uint64_t v15 = *(void *)(a2 + 160);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v15;
    *(void *)(a1 + 168) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 152);
    *int v13 = *v14;
    *(_OWORD *)(a1 + 152) = v17;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  uint64_t v18 = (_OWORD *)(a1 + 176);
  uint64_t v19 = (_OWORD *)(a2 + 176);
  uint64_t v20 = *(void *)(a2 + 200);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v20;
    *(void *)(a1 + 208) = v21;
    (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 192);
    *uint64_t v18 = *v19;
    *(_OWORD *)(a1 + 192) = v22;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
  }
  uint64_t v23 = (_OWORD *)(a1 + 216);
  uint64_t v24 = (_OWORD *)(a2 + 216);
  uint64_t v25 = *(void *)(a2 + 240);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v25;
    *(void *)(a1 + 248) = v26;
    (**(void (***)(_OWORD *, _OWORD *))(v25 - 8))(v23, v24);
  }
  else
  {
    long long v27 = *(_OWORD *)(a2 + 232);
    _OWORD *v23 = *v24;
    *(_OWORD *)(a1 + 232) = v27;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  uint64_t v28 = (_OWORD *)(a1 + 256);
  uint64_t v29 = (_OWORD *)(a2 + 256);
  uint64_t v30 = *(void *)(a2 + 280);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = v30;
    *(void *)(a1 + 288) = v31;
    (**(void (***)(_OWORD *, _OWORD *))(v30 - 8))(v28, v29);
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 272);
    *uint64_t v28 = *v29;
    *(_OWORD *)(a1 + 272) = v32;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
  }
  uint64_t v33 = (_OWORD *)(a1 + 296);
  uint64_t v34 = (_OWORD *)(a2 + 296);
  uint64_t v35 = *(void *)(a2 + 320);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v35;
    *(void *)(a1 + 328) = v36;
    (**(void (***)(_OWORD *, _OWORD *))(v35 - 8))(v33, v34);
  }
  else
  {
    long long v37 = *(_OWORD *)(a2 + 312);
    _OWORD *v33 = *v34;
    *(_OWORD *)(a1 + 312) = v37;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
  }
  uint64_t v38 = (_OWORD *)(a1 + 336);
  uint64_t v39 = (_OWORD *)(a2 + 336);
  uint64_t v40 = *(void *)(a2 + 360);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 368);
    *(void *)(a1 + 360) = v40;
    *(void *)(a1 + 368) = v41;
    (**(void (***)(_OWORD *, _OWORD *))(v40 - 8))(v38, v39);
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 352);
    _OWORD *v38 = *v39;
    *(_OWORD *)(a1 + 352) = v42;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
  }
  uint64_t v43 = (_OWORD *)(a1 + 376);
  uint64_t v44 = (_OWORD *)(a2 + 376);
  uint64_t v45 = *(void *)(a2 + 400);
  if (v45)
  {
    uint64_t v46 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = v45;
    *(void *)(a1 + 408) = v46;
    (**(void (***)(_OWORD *, _OWORD *))(v45 - 8))(v43, v44);
  }
  else
  {
    long long v47 = *(_OWORD *)(a2 + 392);
    *uint64_t v43 = *v44;
    *(_OWORD *)(a1 + 392) = v47;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
  }
  uint64_t v48 = *(void *)(a2 + 440);
  uint64_t v49 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = v48;
  *(void *)(a1 + 448) = v49;
  (**(void (***)(uint64_t, uint64_t))(v48 - 8))(a1 + 416, a2 + 416);
  uint64_t v50 = type metadata accessor for ListItemViewModel();
  uint64_t v51 = *(int *)(v50 + 40);
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = type metadata accessor for CardInfo();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    uint64_t v56 = sub_4A98(&qword_2EDB60);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    *uint64_t v52 = *v53;
    uint64_t v57 = *(int *)(v54 + 20);
    uint64_t v73 = (char *)v53 + v57;
    uint64_t v74 = (char *)v52 + v57;
    uint64_t v58 = sub_269840();
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
    swift_bridgeObjectRetain();
    v59(v74, v73, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  uint64_t v60 = *(int *)(v50 + 44);
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = *(void *)(v62 + 8);
  *(void *)uint64_t v61 = *(void *)v62;
  *(void *)(v61 + 8) = v63;
  uint64_t v64 = *(void *)(v62 + 24);
  *(void *)(v61 + 16) = *(void *)(v62 + 16);
  *(void *)(v61 + 24) = v64;
  uint64_t v65 = *(void *)(v62 + 40);
  *(void *)(v61 + 32) = *(void *)(v62 + 32);
  *(void *)(v61 + 40) = v65;
  uint64_t v66 = *(void *)(v62 + 56);
  *(void *)(v61 + 48) = *(void *)(v62 + 48);
  *(void *)(v61 + 56) = v66;
  uint64_t v67 = *(void *)(v62 + 72);
  *(void *)(v61 + 64) = *(void *)(v62 + 64);
  *(void *)(v61 + 72) = v67;
  uint64_t v68 = *(void *)(v62 + 88);
  *(void *)(v61 + 80) = *(void *)(v62 + 80);
  *(void *)(v61 + 88) = v68;
  uint64_t v69 = *(void *)(v62 + 104);
  *(void *)(v61 + 96) = *(void *)(v62 + 96);
  *(void *)(v61 + 104) = v69;
  uint64_t v70 = *(void *)(v62 + 120);
  *(void *)(v61 + 112) = *(void *)(v62 + 112);
  *(void *)(v61 + 120) = v70;
  uint64_t v71 = *(void *)(v62 + 136);
  *(void *)(v61 + 128) = *(void *)(v62 + 128);
  *(void *)(v61 + 136) = v71;
  *(unsigned char *)(v61 + 144) = *(unsigned char *)(v62 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CodeListItemViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    char v5 = *(unsigned char *)(a2 + 89);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
    char v7 = (unsigned char *)(a1 + 64);
    long long v8 = (unsigned char *)(a2 + 64);
    if (v5)
    {
      *char v7 = *v8;
    }
    else
    {
      uint64_t v9 = *(void *)v8;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)char v7 = v9;
      uint64_t v10 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v10;
    }
    *(unsigned char *)(a1 + 89) = v5;
  }
  uint64_t v11 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v11)
    {
      sub_16D58((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
      goto LABEL_13;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  else if (v11)
  {
    *(void *)(a1 + 120) = v11;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 96, a2 + 96);
    goto LABEL_13;
  }
  long long v12 = *(_OWORD *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 112) = v13;
LABEL_13:
  uint64_t v14 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v14)
    {
      sub_16D58((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_20;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  else if (v14)
  {
    *(void *)(a1 + 160) = v14;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 136, a2 + 136);
    goto LABEL_20;
  }
  long long v15 = *(_OWORD *)(a2 + 136);
  long long v16 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v15;
  *(_OWORD *)(a1 + 152) = v16;
LABEL_20:
  uint64_t v17 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v17)
    {
      sub_16D58((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
      goto LABEL_27;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  else if (v17)
  {
    *(void *)(a1 + 200) = v17;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 176, a2 + 176);
    goto LABEL_27;
  }
  long long v18 = *(_OWORD *)(a2 + 176);
  long long v19 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v18;
  *(_OWORD *)(a1 + 192) = v19;
LABEL_27:
  uint64_t v20 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v20)
    {
      sub_16D58((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
      goto LABEL_34;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  else if (v20)
  {
    *(void *)(a1 + 240) = v20;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 216, a2 + 216);
    goto LABEL_34;
  }
  long long v21 = *(_OWORD *)(a2 + 216);
  long long v22 = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 216) = v21;
  *(_OWORD *)(a1 + 232) = v22;
LABEL_34:
  uint64_t v23 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280))
  {
    if (v23)
    {
      sub_16D58((uint64_t *)(a1 + 256), (uint64_t *)(a2 + 256));
      goto LABEL_41;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  else if (v23)
  {
    *(void *)(a1 + 280) = v23;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 256, a2 + 256);
    goto LABEL_41;
  }
  long long v24 = *(_OWORD *)(a2 + 256);
  long long v25 = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(_OWORD *)(a1 + 256) = v24;
  *(_OWORD *)(a1 + 272) = v25;
LABEL_41:
  uint64_t v26 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v26)
    {
      sub_16D58((uint64_t *)(a1 + 296), (uint64_t *)(a2 + 296));
      goto LABEL_48;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  else if (v26)
  {
    *(void *)(a1 + 320) = v26;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))(a1 + 296, a2 + 296);
    goto LABEL_48;
  }
  long long v27 = *(_OWORD *)(a2 + 296);
  long long v28 = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 296) = v27;
  *(_OWORD *)(a1 + 312) = v28;
LABEL_48:
  uint64_t v29 = *(void *)(a2 + 360);
  if (*(void *)(a1 + 360))
  {
    if (v29)
    {
      sub_16D58((uint64_t *)(a1 + 336), (uint64_t *)(a2 + 336));
      goto LABEL_55;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  else if (v29)
  {
    *(void *)(a1 + 360) = v29;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    (**(void (***)(uint64_t, uint64_t))(v29 - 8))(a1 + 336, a2 + 336);
    goto LABEL_55;
  }
  long long v30 = *(_OWORD *)(a2 + 336);
  long long v31 = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(_OWORD *)(a1 + 336) = v30;
  *(_OWORD *)(a1 + 352) = v31;
LABEL_55:
  uint64_t v32 = *(void *)(a2 + 400);
  if (*(void *)(a1 + 400))
  {
    if (v32)
    {
      sub_16D58((uint64_t *)(a1 + 376), (uint64_t *)(a2 + 376));
      goto LABEL_62;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  else if (v32)
  {
    *(void *)(a1 + 400) = v32;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    (**(void (***)(uint64_t, uint64_t))(v32 - 8))(a1 + 376, a2 + 376);
    goto LABEL_62;
  }
  long long v33 = *(_OWORD *)(a2 + 376);
  long long v34 = *(_OWORD *)(a2 + 392);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(_OWORD *)(a1 + 376) = v33;
  *(_OWORD *)(a1 + 392) = v34;
LABEL_62:
  sub_16D58((uint64_t *)(a1 + 416), (uint64_t *)(a2 + 416));
  uint64_t v35 = type metadata accessor for ListItemViewModel();
  uint64_t v36 = *(int *)(v35 + 40);
  long long v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  uint64_t v39 = type metadata accessor for CardInfo();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      void *v37 = *v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v52 = *(int *)(v39 + 20);
      uint64_t v53 = (char *)v37 + v52;
      uint64_t v54 = (char *)v38 + v52;
      uint64_t v55 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
      goto LABEL_68;
    }
    sub_EB0E4((uint64_t)v37);
    goto LABEL_67;
  }
  if (v43)
  {
LABEL_67:
    uint64_t v47 = sub_4A98(&qword_2EDB60);
    memcpy(v37, v38, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_68;
  }
  void *v37 = *v38;
  uint64_t v44 = *(int *)(v39 + 20);
  uint64_t v56 = (char *)v38 + v44;
  uint64_t v57 = (char *)v37 + v44;
  uint64_t v45 = sub_269840();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  swift_bridgeObjectRetain();
  v46(v57, v56, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_68:
  uint64_t v48 = *(int *)(v35 + 44);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = *(void *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  *(void *)(v49 + 24) = *(void *)(v50 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 32) = *(void *)(v50 + 32);
  *(void *)(v49 + 40) = *(void *)(v50 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 48) = *(void *)(v50 + 48);
  *(void *)(v49 + 56) = *(void *)(v50 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 64) = *(void *)(v50 + 64);
  *(void *)(v49 + 72) = *(void *)(v50 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 80) = *(void *)(v50 + 80);
  *(void *)(v49 + 88) = *(void *)(v50 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 96) = *(void *)(v50 + 96);
  *(void *)(v49 + 104) = *(void *)(v50 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 112) = *(void *)(v50 + 112);
  *(void *)(v49 + 120) = *(void *)(v50 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 128) = *(void *)(v50 + 128);
  *(void *)(v49 + 136) = *(void *)(v50 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 144) = *(unsigned char *)(v50 + 144);
  return a1;
}

uint64_t initializeWithTake for CodeListItemViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  memcpy((void *)(a1 + 96), (const void *)(a2 + 96), 0x118uLL);
  long long v4 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v4;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v5 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v5;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v6 = type metadata accessor for ListItemViewModel();
  uint64_t v7 = *(int *)(v6 + 40);
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for CardInfo();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_4A98(&qword_2EDB60);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *long long v8 = *v9;
    uint64_t v13 = *(int *)(v10 + 20);
    uint64_t v14 = (char *)v8 + v13;
    long long v15 = (char *)v9 + v13;
    uint64_t v16 = sub_269840();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v17 = *(int *)(v6 + 44);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v20;
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(v19 + 128);
  *(unsigned char *)(v18 + 144) = *(unsigned char *)(v19 + 144);
  long long v21 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v21;
  long long v22 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v22;
  long long v23 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v23;
  return a1;
}

uint64_t assignWithTake for CodeListItemViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  if (*(void *)(a1 + 120)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  if (*(void *)(a1 + 160)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  long long v5 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v5;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  if (*(void *)(a1 + 200)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  long long v6 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v6;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  if (*(void *)(a1 + 240)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  long long v7 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v7;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  if (*(void *)(a1 + 280)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  long long v8 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v8;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  if (*(void *)(a1 + 320)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  long long v9 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v9;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  if (*(void *)(a1 + 360)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  long long v10 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v10;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  if (*(void *)(a1 + 400)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  long long v11 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v11;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 416);
  long long v12 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v12;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v13 = type metadata accessor for ListItemViewModel();
  uint64_t v14 = *(int *)(v13 + 40);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for CardInfo();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      void *v15 = *v16;
      swift_bridgeObjectRelease();
      uint64_t v40 = *(int *)(v17 + 20);
      uint64_t v41 = (char *)v15 + v40;
      int v42 = (char *)v16 + v40;
      uint64_t v43 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
      goto LABEL_25;
    }
    sub_EB0E4((uint64_t)v15);
    goto LABEL_24;
  }
  if (v21)
  {
LABEL_24:
    uint64_t v26 = sub_4A98(&qword_2EDB60);
    memcpy(v15, v16, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_25;
  }
  void *v15 = *v16;
  uint64_t v22 = *(int *)(v17 + 20);
  long long v23 = (char *)v15 + v22;
  long long v24 = (char *)v16 + v22;
  uint64_t v25 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_25:
  uint64_t v27 = *(int *)(v13 + 44);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(void *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v29 + 24);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 24) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v29 + 40);
  *(void *)(v28 + 32) = *(void *)(v29 + 32);
  *(void *)(v28 + 40) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v29 + 56);
  *(void *)(v28 + 48) = *(void *)(v29 + 48);
  *(void *)(v28 + 56) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v29 + 72);
  *(void *)(v28 + 64) = *(void *)(v29 + 64);
  *(void *)(v28 + 72) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v29 + 88);
  *(void *)(v28 + 80) = *(void *)(v29 + 80);
  *(void *)(v28 + 88) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v29 + 104);
  *(void *)(v28 + 96) = *(void *)(v29 + 96);
  *(void *)(v28 + 104) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v29 + 120);
  *(void *)(v28 + 112) = *(void *)(v29 + 112);
  *(void *)(v28 + 120) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v29 + 136);
  *(void *)(v28 + 128) = *(void *)(v29 + 128);
  *(void *)(v28 + 136) = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 144) = *(unsigned char *)(v29 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for CodeListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1106C4);
}

uint64_t sub_1106C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListItemViewModel();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CodeListItemViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_110744);
}

uint64_t sub_110744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListItemViewModel();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1107B4()
{
  uint64_t result = type metadata accessor for ListItemViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListItemDecodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11090CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemDecodingError()
{
  return &type metadata for ListItemDecodingError;
}

unsigned char *storeEnumTagSinglePayload for CodeListItemViewModel.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x110A10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodeListItemViewModel.Context()
{
  return &type metadata for CodeListItemViewModel.Context;
}

unsigned char *storeEnumTagSinglePayload for CodeListItemViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x110B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodeListItemViewModel.CodingKeys()
{
  return &type metadata for CodeListItemViewModel.CodingKeys;
}

unint64_t sub_110B50()
{
  unint64_t result = qword_2F05F0;
  if (!qword_2F05F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F05F0);
  }
  return result;
}

unint64_t sub_110BA8()
{
  unint64_t result = qword_2F05F8;
  if (!qword_2F05F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F05F8);
  }
  return result;
}

unint64_t sub_110C00()
{
  unint64_t result = qword_2F0600;
  if (!qword_2F0600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0600);
  }
  return result;
}

unint64_t sub_110C58()
{
  unint64_t result = qword_2F0608;
  if (!qword_2F0608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0608);
  }
  return result;
}

uint64_t sub_110CAC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB720;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_110CF8()
{
  unint64_t result = qword_2F0610;
  if (!qword_2F0610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0610);
  }
  return result;
}

uint64_t sub_110D4C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB7D0;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_110D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

__n128 TransitionFrameViewModel.init(section:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_110E0C()
{
  uint64_t v1 = sub_26D3C0();
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = sub_269920();
  uint64_t v2 = *(void *)(v27 - 8);
  uint64_t v3 = __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_26D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  long long v15 = (void *)v0[1];
  if ((unint64_t)v15 > 1)
  {
    uint64_t v26 = *v0;
    uint64_t v19 = v26;
    swift_bridgeObjectRetain();
    sub_26D3B0();
    v28._object = (void *)0x8000000000289CE0;
    v28._countAndFlagsBits = 0xD000000000000023;
    sub_26D3A0(v28);
    v29._countAndFlagsBits = v19;
    v29._object = v15;
    sub_26D390(v29);
    v30._countAndFlagsBits = 63;
    v30._object = (void *)0xE100000000000000;
    sub_26D3A0(v30);
    sub_26D3D0();
    sub_2698C0();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v21 = [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v22 = v27;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v27);
    sub_26D460();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v22);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    sub_4A98(&qword_2EA308);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_26F990;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = sub_720C8();
    *(void *)(v23 + 32) = v26;
    *(void *)(v23 + 40) = v15;
    uint64_t v18 = sub_26D400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_26D370();
    sub_2698C0();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    type metadata accessor for BundleFinder();
    uint64_t v16 = swift_getObjCClassFromMetadata();
    [self bundleForClass:v16];
    uint64_t v17 = v27;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v27);
    uint64_t v18 = sub_26D460();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v17);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return v18;
}

uint64_t TransitionFrame.background.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (!v3)
  {
    uint64_t v4 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
    unint64_t v5 = 0xD000000000000018;
    uint64_t v6 = "yir-background-highlight";
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    uint64_t v4 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
    unint64_t v5 = 0xD00000000000001CLL;
    uint64_t v6 = "yir-background-reading-goals";
LABEL_5:
    *a1 = v5;
    a1[1] = (unint64_t)(v6 - 32) | 0x8000000000000000;
    uint64_t v7 = enum case for ColorScheme.dark(_:);
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v4, v7, v8);
    goto LABEL_9;
  }
  uint64_t v9 = Color.init(hexString:)(0x393545354344, 0xE600000000000000);
  if (!v9) {
    uint64_t v9 = sub_26C0F0();
  }
  *a1 = v9;
  uint64_t v10 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA950) + 48);
  uint64_t v11 = sub_26A6E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
LABEL_9:
  type metadata accessor for PageBackground(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1114E4()
{
  uint64_t v1 = sub_4A98(&qword_2F0678);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2F0680);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 8);
  if (v7)
  {
    if (v7 == 1) {
      uint64_t v8 = (unsigned int *)&enum case for FrameName.transitionReadingInsights(_:);
    }
    else {
      uint64_t v8 = (unsigned int *)&enum case for FrameName.transitionReaderType(_:);
    }
  }
  else
  {
    uint64_t v8 = (unsigned int *)&enum case for FrameName.transitionHighlight(_:);
  }
  uint64_t v9 = *v8;
  uint64_t v10 = sub_269D10();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v6, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  uint64_t v12 = sub_269B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  LOBYTE(v24) = 1;
  LOBYTE(v23) = 1;
  LOBYTE(v22) = 1;
  LOBYTE(v21) = 1;
  return YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)((uint64_t)v6, (uint64_t)v3, 0, 1, 0, 1, 0, 1, 0.0, v13, v14, v15, v16, v17, v18, v19, 0, 0, 0,
           0,
           0,
           0,
           0,
           v21,
           0,
           v22,
           0,
           v23,
           0,
           v24,
           0.0,
           1);
}

uint64_t TransitionFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_269BE0();
  a1[4] = sub_112990(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_112990(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  sub_CA1C(a1);
  return sub_1114E4();
}

uint64_t TransitionFrame.textAlignment.getter()
{
  if (*(void *)(v0 + 8) >= 2uLL) {
    return sub_26B120();
  }
  else {
    return sub_26B100();
  }
}

uint64_t TransitionFrame.id.getter()
{
  sub_4A98(&qword_2F0618);
  v1._countAndFlagsBits = sub_26D480();
  sub_26D4E0(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 45;
  v2._object = (void *)0xE100000000000000;
  sub_26D4E0(v2);
  sub_26DB80();
  return 0;
}

uint64_t TransitionFrame.body.getter@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = sub_111AF4;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v5;

  return sub_111AFC(v4, v3);
}

uint64_t sub_1118F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_26A6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F0648);
  __chkstk_darwin(v12 - 8);
  double v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)double v14 = sub_26B1C0();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v15 = sub_4A98(&qword_2F0650);
  sub_111B10(a2, a3, a1, &v14[*(int *)(v15 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorScheme.dark(_:), v8);
  double v17 = (uint64_t *)(a4 + *(int *)(sub_4A98(&qword_2F0658) + 36));
  uint64_t v18 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v17 + *(int *)(v18 + 28), v11, v8);
  *double v17 = KeyPath;
  sub_B678((uint64_t)v14, a4, &qword_2F0648);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_B6DC((uint64_t)v14, &qword_2F0648);
}

uint64_t sub_111AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1118F4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_111AFC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_111B10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v70 = a4;
  uint64_t v6 = sub_26AB40();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for TextLockup();
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_4A98(&qword_2F0660);
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_4A98(&qword_2F0668);
  uint64_t v18 = __chkstk_darwin(v62);
  uint64_t v69 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v61 = (char *)&v58 - v21;
  __chkstk_darwin(v20);
  uint64_t v68 = (uint64_t)&v58 - v22;
  if (a2 >= 2) {
    sub_26B120();
  }
  else {
    sub_26B100();
  }
  sub_26B100();
  int v63 = sub_26B0F0();
  *(void *)&long long v71 = a1;
  *((void *)&v71 + 1) = a2;
  uint64_t v59 = sub_110E0C();
  uint64_t v58 = v23;
  uint64_t v24 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
  uint64_t v25 = sub_26B1D0();
  unint64_t v60 = a2;
  uint64_t v26 = v25;
  uint64_t v27 = sub_26C650();
  uint64_t v29 = v28;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DynamicTypeSize.accessibility2(_:), v6);
  uint64_t *v15 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v6;
  uint64_t v31 = (uint64_t *)((char *)v15 + v13[5]);
  *uint64_t v31 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (char *)v15 + v13[6];
  *(void *)uint64_t v32 = swift_getKeyPath();
  v32[8] = 0;
  uint64_t v33 = (char *)v15 + v13[7];
  *(void *)uint64_t v33 = swift_getKeyPath();
  v33[8] = 0;
  uint64_t v34 = (char *)v15 + v13[8];
  *(void *)uint64_t v34 = swift_getKeyPath();
  v34[8] = 0;
  uint64_t v35 = (char *)v15 + v13[9];
  *(void *)uint64_t v35 = swift_getKeyPath();
  v35[8] = 0;
  *((unsigned char *)v15 + v13[10]) = 5;
  uint64_t v36 = (uint64_t *)((char *)v15 + v13[11]);
  *uint64_t v36 = 0;
  v36[1] = 0;
  uint64_t v37 = (uint64_t *)((char *)v15 + v13[12]);
  uint64_t v38 = v58;
  uint64_t *v37 = v59;
  v37[1] = v38;
  v37[2] = 0;
  uint64_t v39 = (uint64_t *)((char *)v15 + v13[13]);
  *uint64_t v39 = 0;
  v39[1] = 0;
  sub_19CC4((uint64_t)v12, (uint64_t)v15 + v13[14], &qword_2EBFC0);
  *(uint64_t *)((char *)v15 + v13[15]) = v26;
  uint64_t v40 = (uint64_t *)((char *)v15 + v13[16]);
  *uint64_t v40 = v27;
  v40[1] = v29;
  *((unsigned char *)v15 + v13[17]) = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + v13[18], v9, v30);
  sub_112990((unint64_t *)&qword_2EF240, (void (*)(uint64_t))type metadata accessor for TextLockup);
  uint64_t v41 = v65;
  sub_26BE50();
  sub_1129D8((uint64_t)v15);
  sub_26A940();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26AC90();
  uint64_t v43 = v66;
  uint64_t v42 = v67;
  uint64_t v44 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v61, v41, v67);
  uint64_t v45 = (_OWORD *)(v44 + *(int *)(v62 + 36));
  long long v46 = v76;
  v45[4] = v75;
  v45[5] = v46;
  v45[6] = v77;
  long long v47 = v72;
  _OWORD *v45 = v71;
  v45[1] = v47;
  long long v48 = v74;
  v45[2] = v73;
  void v45[3] = v48;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v42);
  uint64_t v49 = v68;
  sub_19CC4(v44, v68, &qword_2F0668);
  if (v60 >= 2) {
    sub_26B120();
  }
  else {
    sub_26B100();
  }
  char v50 = v63;
  BOOL v51 = (v63 & 1) == 0;
  sub_26B110();
  char v52 = sub_26B0F0();
  uint64_t v53 = v69;
  sub_B678(v49, v69, &qword_2F0668);
  uint64_t v54 = v70;
  *uint64_t v70 = 0;
  *((unsigned char *)v54 + 8) = v51;
  *((unsigned char *)v54 + 9) = v50 & 1;
  uint64_t v55 = sub_4A98(&qword_2F0670);
  sub_B678(v53, (uint64_t)v54 + *(int *)(v55 + 48), &qword_2F0668);
  uint64_t v56 = (char *)v54 + *(int *)(v55 + 64);
  *(void *)uint64_t v56 = 0;
  v56[8] = (v52 & 1) == 0;
  v56[9] = v52 & 1;
  sub_B6DC(v49, &qword_2F0668);
  return sub_B6DC(v53, &qword_2F0668);
}

unint64_t sub_112260(uint64_t a1)
{
  unint64_t result = sub_112288();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_112288()
{
  unint64_t result = qword_2F0620;
  if (!qword_2F0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0620);
  }
  return result;
}

uint64_t sub_1122E0@<X0>(void *a1@<X8>)
{
  return TransitionFrame.background.getter(a1);
}

unint64_t sub_112314(uint64_t a1)
{
  unint64_t result = sub_11233C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_11233C()
{
  unint64_t result = qword_2F0628;
  if (!qword_2F0628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0628);
  }
  return result;
}

uint64_t sub_112390()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1123AC@<X0>(uint64_t (**a1)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>)
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = sub_112A38;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v5;

  return sub_111AFC(v4, v3);
}

ValueMetadata *type metadata accessor for TransitionFrameViewModel()
{
  return &type metadata for TransitionFrameViewModel;
}

unint64_t destroy for TransitionFrameViewModel.Section(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7BooksUI24TransitionFrameViewModelV7SectionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for TransitionFrameViewModel.Section(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TransitionFrameViewModel.Section(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionFrameViewModel.Section(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TransitionFrameViewModel.Section(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_112660(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_112678(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionFrameViewModel.Section()
{
  return &type metadata for TransitionFrameViewModel.Section;
}

unint64_t destroy for TransitionFrame(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s7BooksUI24TransitionFrameViewModelVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 2)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *_s7BooksUI24TransitionFrameViewModelVwca_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_B6DC((uint64_t)a1, &qword_2F0630);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s7BooksUI24TransitionFrameViewModelVwta_0(void *a1, void *a2)
{
  if (a1[1] >= 2uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_B6DC((uint64_t)a1, &qword_2F0630);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s7BooksUI24TransitionFrameViewModelVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s7BooksUI24TransitionFrameViewModelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = a2 - 2147483646;
    *(void *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionFrame()
{
  return &type metadata for TransitionFrame;
}

unint64_t sub_1128C8()
{
  unint64_t result = qword_2F0638;
  if (!qword_2F0638)
  {
    sub_7B0C(&qword_2F0640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0638);
  }
  return result;
}

uint64_t sub_112928()
{
  if (*(void *)(v0 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_112990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1129D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextLockup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.clipShape<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(uint64_t, uint64_t))(a5 + 48))(a3, a5);
  swift_getAssociatedConformanceWitness();
  sub_26C080();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t View.coverEffect<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _CoverEffectViewModifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  _CoverEffectViewModifier.init(effect:)((uint64_t)v8, a3, (uint64_t)v12);
  sub_26C030();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t type metadata accessor for _CoverEffectViewModifier()
{
  return sub_129B4();
}

uint64_t _CoverEffectViewModifier.init(effect:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for _CoverEffectViewModifier() + 36));
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(a3, a1, a2);
}

uint64_t Image.coverEffect<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  uint64_t v20 = a4;
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for _CoverEffectViewModifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = sub_26C260();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Image.ResizingMode.stretch(_:), v12);
  uint64_t v16 = sub_26C280();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v21 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, a2);
  _CoverEffectViewModifier.init(effect:)((uint64_t)v7, a2, (uint64_t)v11);
  sub_26C030();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_11308C()
{
  return sub_26AEF0();
}

uint64_t sub_1130B0()
{
  return sub_26AEF0();
}

uint64_t sub_1130D4(uint64_t a1)
{
  uint64_t v2 = sub_26AC30();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26AF00();
}

uint64_t _CoverEffectViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v48 = a3;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v44 = *(void *)(a2 + 16);
  uint64_t v45 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v37 - v10;
  swift_getWitnessTable();
  uint64_t v11 = sub_26B400();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v37 - v14;
  uint64_t v15 = sub_26AC30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = sub_26B300();
  uint64_t v46 = *(void *)(v22 - 8);
  uint64_t v47 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v40 = v3;
  sub_420E8((uint64_t)v21);
  sub_26AC10();
  sub_113704();
  char v25 = sub_26D9F0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v19, v15);
  v26(v21, v15);
  if (v25)
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v28 = v37;
    sub_CCCC(v43, v11, WitnessTable);
    uint64_t v29 = (uint64_t)v38;
    sub_CCCC(v28, v11, WitnessTable);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1B894(v29, v11);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v31(v29, v11);
    v31((uint64_t)v28, v11);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 56))(v43, v44, v45);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v32 = v41;
    sub_CCCC(v9, AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v42 + 8);
    v33(v9, AssociatedTypeWitness);
    sub_CCCC(v32, AssociatedTypeWitness, AssociatedConformanceWitness);
    swift_getWitnessTable();
    sub_1B98C((uint64_t)v9, v11, AssociatedTypeWitness);
    v33(v9, AssociatedTypeWitness);
    v33(v32, AssociatedTypeWitness);
  }
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v34 = v47;
  uint64_t v35 = swift_getWitnessTable();
  sub_CCCC(v24, v34, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v24, v34);
}

unint64_t sub_113704()
{
  unint64_t result = qword_2F0688[0];
  if (!qword_2F0688[0])
  {
    sub_26AC30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F0688);
  }
  return result;
}

uint64_t sub_11375C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of CoverEffect.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverEffect.body(cover:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void sub_1137CC()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_114A6C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_113898(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(sub_26AC30() - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 & 0xF8 | 7;
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unint64_t v14 = v13 + v12 + 1;
  uint64_t v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  int v16 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v15 != 7 || v16 != 0 || v14 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
LABEL_27:
    swift_retain();
    return a1;
  }
  uint64_t v20 = ~v10;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  uint64_t v21 = (void *)(((unint64_t)a1 + v11) & v20);
  uint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v11) & v20);
  unsigned int v23 = v22[v13];
  unsigned int v24 = v23 - 2;
  if (v23 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v25 = v13;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *v22;
        goto LABEL_22;
      case 2:
        int v26 = *(unsigned __int16 *)v22;
        goto LABEL_22;
      case 3:
        int v26 = *(unsigned __int16 *)v22 | (*((unsigned __int8 *)&def_5F050 + (((unint64_t)a2 + v11) & v20) + 2) << 16);
        goto LABEL_22;
      case 4:
        int v26 = *(_DWORD *)v22;
LABEL_22:
        int v27 = (v26 | (v24 << (8 * v13))) + 2;
        unsigned int v23 = v26 + 2;
        if (v13 < 4) {
          unsigned int v23 = v27;
        }
        break;
      default:
        break;
    }
  }
  if (v23 != 1)
  {
    *uint64_t v21 = *(void *)v22;
    *((unsigned char *)v21 + v13) = 0;
    goto LABEL_27;
  }
  (*(void (**)(unint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20);
  *((unsigned char *)v21 + v13) = 1;
  return a1;
}

uint64_t sub_113AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = *(void *)(sub_26AC30() - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v7 = (unsigned __int8 *)((v4 + a1 + v6) & ~v6);
  unint64_t v8 = *(void *)(v5 + 64);
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unsigned int v9 = v7[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *v7;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)v7;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)v7 | (v7[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)v7;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    unint64_t v14 = *(uint64_t (**)(void))(v5 + 8);
    return v14();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_113C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(sub_26AC30() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(void *))(v8 + 16))(v11);
    char v19 = 1;
  }
  else
  {
    *uint64_t v11 = *(void *)v12;
    swift_retain();
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_113E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_26AC30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 8uLL) {
      uint64_t v15 = 8;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    else {
      swift_release();
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_28;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_28;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_28;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_28:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 16))(v11, v12, v13);
      v11[v15] = 1;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      v11[v15] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_114068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(sub_26AC30() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(void *))(v8 + 32))(v11);
    char v19 = 1;
  }
  else
  {
    char v19 = 0;
    *uint64_t v11 = *(void *)v12;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_114204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_26AC30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 8uLL) {
      uint64_t v15 = 8;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    else {
      swift_release();
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_28;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_28;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_28;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_28:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 32))(v11, v12, v13);
      char v26 = 1;
    }
    else
    {
      char v26 = 0;
      *(void *)uint64_t v11 = *(void *)v12;
    }
    v11[v15] = v26;
  }
  return a1;
}

uint64_t sub_114460(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_26AC30() - 8);
  uint64_t v9 = 8;
  if (*(void *)(v8 + 64) > 8uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  if (v7 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v12 = *(void *)(v6 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_27;
  }
  uint64_t v13 = v9 + (v12 & ~v11) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_27:
      if (v7 < 0xFE)
      {
        unsigned int v22 = *(unsigned __int8 *)((((unint64_t)a1 + v12) & ~v11) + v9);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v21 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v21(a1, v7, v5);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_27;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v19 = v13;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_1146CC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_26AC30() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v9;
  }
  uint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v14 = *(void *)(v8 + 64) + v13;
  size_t v15 = v11 + 1;
  size_t v16 = (v14 & ~v13) + v11 + 1;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x114A34);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFE)
        {
          uint64_t v23 = (unsigned char *)((unint64_t)&a1[v14] & ~v13);
          if (a2 > 0xFE)
          {
            if (v15 <= 3) {
              int v24 = ~(-1 << (8 * v15));
            }
            else {
              int v24 = -1;
            }
            if (v15)
            {
              int v25 = v24 & (a2 - 255);
              if (v15 <= 3) {
                int v26 = v15;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v15);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  void v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  unsigned char *v23 = v25;
                  break;
              }
            }
          }
          else
          {
            v23[v11] = -(char)a2;
          }
        }
        else
        {
          unsigned int v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v22(a1, a2, v9, v7);
        }
      }
      return;
  }
}

void sub_114A6C()
{
  if (!qword_2F0710)
  {
    sub_26AC30();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2F0710);
    }
  }
}

uint64_t sub_114AC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_114BAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_114C40()
{
  return swift_getWitnessTable();
}

uint64_t sub_114CD4()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of CoverStackLayout.intrinsicSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoverStackLayout.coverLayouts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoverStackLayout.centeringOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverStackLayout.axIsSeries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoverStackLayout.axLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t WantToReadToolbarButton.init(assetInfo:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v87 = sub_269840();
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v4 - 8);
  uint64_t v85 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v84);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F46A0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v78 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)&v64 - v11;
  uint64_t v13 = sub_26CB80();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v80 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v77 = (uint64_t)&v64 - v16;
  uint64_t v17 = type metadata accessor for AssetAction(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v79 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v76 = (uint64_t)&v64 - v20;
  uint64_t ToolbarButton = type metadata accessor for WantToReadToolbarButton();
  __chkstk_darwin(ToolbarButton);
  unsigned int v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unsigned int v22 = swift_getKeyPath();
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 40) = 0u;
  *(_OWORD *)(v22 + 51) = 0u;
  *((void *)v22 + 9) = swift_getKeyPath();
  v22[80] = 0;
  sub_4ADC(a1, a1[3]);
  uint64_t v70 = sub_269DB0();
  uint64_t v69 = v23;
  sub_4ADC(a1, a1[3]);
  uint64_t v67 = sub_269DB0();
  uint64_t v66 = v24;
  sub_4ADC(a1, a1[3]);
  int v65 = sub_269F30();
  sub_4ADC(a1, a1[3]);
  uint64_t v73 = sub_269DB0();
  uint64_t v26 = v25;
  v106[1] = 0;
  v106[0] = 26;
  LOBYTE(v90) = 26;
  unint64_t v27 = _s7BooksUI7MetricsO13actionDetails3for9assetInfoSDySSypGSgAC15ClickActionTypeO_14BookFoundation05AssetH0_ptFZ_0((uint64_t)&v90, a1);
  sub_4ADC(a1, a1[3]);
  sub_269F60();
  uint64_t v28 = sub_2696C0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  uint64_t v75 = v29 + 48;
  long long v74 = v30;
  unsigned int v31 = v30((uint64_t)v12, 1, v28);
  uint64_t v64 = v29;
  uint64_t v82 = v28;
  if (v31 == 1)
  {
    sub_B6DC((uint64_t)v12, &qword_2F46A0);
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v32 = sub_269680();
    uint64_t v33 = v34;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v28);
  }
  char v105 = 0;
  uint64_t v96 = 0;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v92 = 0u;
  long long v93 = 0u;
  long long v91 = 0u;
  long long v90 = 0u;
  char v97 = 0;
  uint64_t v99 = 0x6E6F74747562;
  unint64_t v100 = 0xE600000000000000;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  uint64_t v35 = v77;
  static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v73, v26, v106, v27, v32, v33, &v90, v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = (uint64_t)" to Read accessoryButton";
  *(void *)uint64_t v7 = 0xD00000000000001ALL;
  *((void *)v7 + 1) = 0x8000000000289180;
  *((_WORD *)v7 + 8) = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = sub_269CE0();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  uint64_t v38 = (uint64_t)v85;
  uint64_t v71 = v36;
  long long v72 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v37)(v85, 1, 1);
  uint64_t v39 = v86;
  sub_269830();
  uint64_t v40 = sub_269820();
  uint64_t v42 = v41;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v88 + 8);
  v88 += 8;
  uint64_t v68 = v43;
  v43(v39, v87);
  uint64_t v44 = v76;
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v40, v42, v70, v69, v67, v66, v65 & 1, v35, v76, (uint64_t)v7, v38);
  sub_116D9C(v44, (uint64_t)&v22[*(int *)(ToolbarButton + 24)], type metadata accessor for AssetAction);
  sub_4ADC(a1, a1[3]);
  uint64_t v77 = sub_269DB0();
  uint64_t v76 = v45;
  sub_4ADC(a1, a1[3]);
  uint64_t v70 = sub_269DB0();
  uint64_t v69 = v46;
  sub_4ADC(a1, a1[3]);
  LODWORD(v67) = sub_269F30();
  sub_4ADC(a1, a1[3]);
  uint64_t v47 = sub_269DB0();
  uint64_t v49 = v48;
  v89[1] = 0;
  v89[0] = 1;
  LOBYTE(v90) = 1;
  unint64_t v50 = _s7BooksUI7MetricsO13actionDetails3for9assetInfoSDySSypGSgAC15ClickActionTypeO_14BookFoundation05AssetH0_ptFZ_0((uint64_t)&v90, a1);
  sub_4ADC(a1, a1[3]);
  uint64_t v51 = (uint64_t)v78;
  sub_269F60();
  if (v74(v51, 1, v82) == 1)
  {
    sub_B6DC(v51, &qword_2F46A0);
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v52 = sub_269680();
    uint64_t v53 = v54;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v51, v82);
  }
  uint64_t v96 = 0;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v92 = 0u;
  long long v93 = 0u;
  long long v91 = 0u;
  long long v90 = 0u;
  char v97 = v105;
  *(_DWORD *)long long v98 = *(_DWORD *)v104;
  *(_DWORD *)&v98[3] = *(_DWORD *)&v104[3];
  uint64_t v99 = 0x6E6F74747562;
  unint64_t v100 = 0xE600000000000000;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  uint64_t v55 = v80;
  static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v47, v49, v89, v50, v52, v53, &v90, v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v56 = v73 | 0x8000000000000000;
  *(void *)uint64_t v7 = 0xD00000000000001ALL;
  *((void *)v7 + 1) = v56;
  *((_WORD *)v7 + 8) = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = (uint64_t)v85;
  v72(v85, 1, 1, v71);
  uint64_t v58 = v86;
  sub_269830();
  uint64_t v59 = sub_269820();
  uint64_t v61 = v60;
  v68(v58, v87);
  uint64_t v62 = v79;
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v59, v61, v77, v76, v70, v69, v67 & 1, v55, v79, (uint64_t)v7, v57);
  sub_116D9C(v62, (uint64_t)&v22[*(int *)(ToolbarButton + 28)], type metadata accessor for AssetAction);
  sub_116D9C((uint64_t)v22, v81, (uint64_t (*)(void))type metadata accessor for WantToReadToolbarButton);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t type metadata accessor for WantToReadToolbarButton()
{
  uint64_t result = qword_2F07C8;
  if (!qword_2F07C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WantToReadToolbarButton.body.getter()
{
  uint64_t v1 = sub_4A98(&qword_2F0718);
  __chkstk_darwin(v1);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_115A80(v0, (uint64_t)v3);
  uint64_t v6 = v0;
  sub_26A160();
  sub_116E28();
  sub_11A0E8((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
  sub_26BE20();
  return sub_B6DC((uint64_t)v3, &qword_2F0718);
}

uint64_t sub_115A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v86 = sub_4A98(&qword_2F0758);
  uint64_t v70 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v69 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_4A98(&qword_2F0808);
  __chkstk_darwin(v83);
  uint64_t v84 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_26CEA0();
  uint64_t v81 = *(void *)(v82 - 8);
  uint64_t v5 = __chkstk_darwin(v82);
  uint64_t v79 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v80 = (char *)&v68 - v7;
  uint64_t v8 = sub_269BA0();
  __chkstk_darwin(v8 - 8);
  long long v74 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ToolbarButton = type metadata accessor for WantToReadToolbarButton();
  uint64_t v72 = *(void *)(ToolbarButton - 8);
  uint64_t v10 = *(void *)(v72 + 64);
  __chkstk_darwin(ToolbarButton);
  uint64_t v73 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)sub_4A98(&qword_2F0200);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2F0738);
  uint64_t v76 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v87 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2F0810);
  uint64_t v78 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v75 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v77 = (char *)&v68 - v22;
  uint64_t v23 = *(void **)(a1 + 72);
  char v24 = *(unsigned char *)(a1 + 80);
  sub_1D00C(v23, v24);
  uint64_t v25 = (void *)sub_40B04(v23, v24);
  sub_1D1EC(v23, v24);

  if (v25)
  {
    uint64_t v69 = (char *)v17;
    uint64_t v70 = v19;
    uint64_t v27 = sub_26A630();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
    *((void *)&v89 + 1) = type metadata accessor for AssetAction(0);
    uint64_t v90 = sub_11A0E8(&qword_2ED9D0, (void (*)(uint64_t))type metadata accessor for AssetAction);
    uint64_t v28 = sub_CA1C((uint64_t *)&v88);
    long long v29 = *(_OWORD *)(a1 + 48);
    long long v98 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v99 = v29;
    *(_DWORD *)&v99[15] = *(_DWORD *)(a1 + 63);
    long long v30 = *(_OWORD *)(a1 + 16);
    long long v96 = *(_OWORD *)a1;
    long long v97 = v30;
    sub_44FD8((uint64_t)&v96, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
    sub_413B8((uint64_t)&v92);
    sub_44FD8((uint64_t)&v96, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
    if (*((void *)&v92 + 1) && (int v31 = *(_DWORD *)v95, swift_bridgeObjectRelease(), (v31 & 0x10000) != 0)) {
      uint64_t v32 = 6;
    }
    else {
      uint64_t v32 = 7;
    }
    sub_11A130(a1 + *(int *)(ToolbarButton + 4 * v32), (uint64_t)v28, type metadata accessor for AssetAction);
    uint64_t v41 = v73;
    sub_11A130(a1, v73, (uint64_t (*)(void))type metadata accessor for WantToReadToolbarButton);
    unint64_t v42 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    uint64_t v43 = swift_allocObject();
    sub_116D9C(v41, v43 + v42, (uint64_t (*)(void))type metadata accessor for WantToReadToolbarButton);
    sub_269B80();
    sub_269AB0();
    uint64_t v44 = &v16[v14[9]];
    *(void *)uint64_t v44 = swift_getKeyPath();
    v44[8] = 0;
    uint64_t v45 = (uint64_t *)&v16[v14[10]];
    uint64_t *v45 = swift_getKeyPath();
    sub_4A98(&qword_2EA810);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = &v16[v14[11]];
    *(void *)uint64_t v46 = swift_getKeyPath();
    v46[40] = 0;
    sub_19CC4((uint64_t)v13, (uint64_t)&v16[v14[12]], qword_2EA3E0);
    uint64_t v47 = sub_19CC4((uint64_t)&v88, (uint64_t)&v16[v14[13]], &qword_2EA818);
    uint64_t v48 = (uint64_t (**)@<X0>(char *@<X8>))&v16[v14[14]];
    _OWORD *v48 = sub_11A5C8;
    v48[1] = (uint64_t (*)@<X0>(char *@<X8>))v43;
    __chkstk_darwin(v47);
    *(&v68 - 2) = a1;
    uint64_t v49 = sub_4A98(&qword_2F0740);
    uint64_t v50 = sub_7C18(&qword_2F0208, &qword_2F0200);
    uint64_t v51 = sub_7C18(&qword_2F0748, &qword_2F0740);
    long long v74 = (char *)v49;
    sub_26BF60();
    sub_B6DC((uint64_t)v16, &qword_2F0200);
    long long v92 = 0u;
    long long v93 = 0u;
    long long v89 = 0u;
    long long v88 = 0u;
    uint64_t v52 = v79;
    sub_26CE80();
    sub_B6DC((uint64_t)&v88, &qword_2EA0B8);
    sub_B6DC((uint64_t)&v92, &qword_2EA0B8);
    long long v53 = *(_OWORD *)(a1 + 48);
    long long v94 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)long long v95 = v53;
    *(_DWORD *)&v95[15] = *(_DWORD *)(a1 + 63);
    long long v54 = *(_OWORD *)(a1 + 16);
    long long v92 = *(_OWORD *)a1;
    long long v93 = v54;
    sub_44FD8((uint64_t)&v92, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
    sub_413B8((uint64_t)&v88);
    sub_44FD8((uint64_t)&v92, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
    if (*((void *)&v88 + 1))
    {
      uint64_t v55 = (v91 >> 16) & 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v55) = 0;
    }
    unint64_t v56 = v84;
    *((void *)&v89 + 1) = &type metadata for Bool;
    LOBYTE(v88) = v55;
    uint64_t v57 = v80;
    sub_26CE90();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v81 + 8);
    uint64_t v59 = v52;
    uint64_t v60 = v82;
    v58(v59, v82);
    sub_B6DC((uint64_t)&v88, &qword_2EA0B8);
    *(void *)&long long v88 = v14;
    *((void *)&v88 + 1) = v74;
    *(void *)&long long v89 = v50;
    *((void *)&v89 + 1) = v51;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v62 = v75;
    int v63 = v69;
    uint64_t v64 = v87;
    sub_26BB40();
    v58(v57, v60);
    (*(void (**)(char *, char *))(v76 + 8))(v64, v63);
    uint64_t v65 = v78;
    uint64_t v66 = v77;
    uint64_t v67 = v70;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v62, v70);
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v56, v66, v67);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v88 = v63;
    *((void *)&v88 + 1) = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F0750, &qword_2F0758);
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  }
  else
  {
    __chkstk_darwin(v26);
    *(&v68 - 2) = a1;
    sub_68F80();
    uint64_t v33 = v69;
    sub_26C3A0();
    uint64_t v34 = v70;
    uint64_t v35 = v86;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v84, v33, v86);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = sub_7B0C(&qword_2F0740);
    uint64_t v37 = sub_7C18(&qword_2F0208, &qword_2F0200);
    uint64_t v38 = sub_7C18(&qword_2F0748, &qword_2F0740);
    *(void *)&long long v96 = v14;
    *((void *)&v96 + 1) = v36;
    *(void *)&long long v97 = v37;
    *((void *)&v97 + 1) = v38;
    uint64_t v39 = swift_getOpaqueTypeConformance2();
    *(void *)&long long v96 = v17;
    *((void *)&v96 + 1) = v39;
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F0750, &qword_2F0758);
    sub_26B2F0();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  }
}

uint64_t sub_1167C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v12[0] = v3;
  *(_DWORD *)((char *)v12 + 15) = *(_DWORD *)(a1 + 63);
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_44FD8((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)v8);
  sub_44FD8((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  uint64_t result = v9;
  if (v9 && (int v6 = v10, result = swift_bridgeObjectRelease(), (v6 & 0x10000) != 0)) {
    char v7 = 1;
  }
  else {
    char v7 = 4;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_11686C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_26A160();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  uint64_t v10 = &v19[-v9 - 8];
  long long v11 = *(_OWORD *)(a1 + 48);
  v21[2] = *(_OWORD *)(a1 + 32);
  v22[0] = v11;
  *(_DWORD *)((char *)v22 + 15) = *(_DWORD *)(a1 + 63);
  long long v12 = *(_OWORD *)(a1 + 16);
  v21[0] = *(_OWORD *)a1;
  v21[1] = v12;
  sub_44FD8((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)v19);
  sub_44FD8((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  if (v20) {
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = sub_26C250();
  sub_116A7C();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v14(v8, v10, v4);
  *a2 = v13;
  uint64_t v15 = sub_4A98(&qword_2F0818);
  v14((char *)a2 + *(int *)(v15 + 48), v8, v4);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_retain();
  v16(v10, v4);
  v16(v8, v4);
  return swift_release();
}

uint64_t sub_116A7C()
{
  uint64_t v1 = sub_26A220();
  __chkstk_darwin(v1 - 8);
  long long v2 = *(_OWORD *)(v0 + 48);
  v10[2] = *(_OWORD *)(v0 + 32);
  v11[0] = v2;
  *(_DWORD *)((char *)v11 + 15) = *(_DWORD *)(v0 + 63);
  long long v3 = *(_OWORD *)(v0 + 16);
  v10[0] = *(_OWORD *)v0;
  v10[1] = v3;
  sub_44FD8((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)v7);
  sub_44FD8((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  if (v8 && (int v4 = v9, swift_bridgeObjectRelease(), (v4 & 0x10000) != 0)) {
    char v5 = 1;
  }
  else {
    char v5 = 4;
  }
  v7[0] = v5;
  SymbolImage.Kind.accessibilityLocalizable.getter();
  return sub_26A170();
}

void sub_116B88()
{
  if (qword_2E9B10 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_26A340();
  sub_6B14(v0, (uint64_t)qword_2E9EF8);
  oslog = sub_26A320();
  os_log_type_t v1 = sub_26D840();
  if (os_log_type_enabled(oslog, v1))
  {
    long long v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v2 = 0;
    _os_log_impl(&def_5F050, oslog, v1, "Attempt to use CircularWantToReadButton without analytics tracker", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_116C70()
{
  uint64_t v1 = sub_4A98(&qword_2F0718);
  __chkstk_darwin(v1);
  long long v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_115A80(v0, (uint64_t)v3);
  uint64_t v6 = v0;
  sub_26A160();
  sub_116E28();
  sub_11A0E8((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
  sub_26BE20();
  return sub_B6DC((uint64_t)v3, &qword_2F0718);
}

uint64_t sub_116D9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_116E04()
{
  return sub_116A7C();
}

unint64_t sub_116E28()
{
  unint64_t result = qword_2F0720;
  if (!qword_2F0720)
  {
    sub_7B0C(&qword_2F0718);
    sub_116E9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0720);
  }
  return result;
}

unint64_t sub_116E9C()
{
  unint64_t result = qword_2F0728;
  if (!qword_2F0728)
  {
    sub_7B0C(&qword_2F0730);
    sub_7B0C(&qword_2F0738);
    sub_7B0C(&qword_2F0200);
    sub_7B0C(&qword_2F0740);
    sub_7C18(&qword_2F0208, &qword_2F0200);
    sub_7C18(&qword_2F0748, &qword_2F0740);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F0750, &qword_2F0758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0728);
  }
  return result;
}

uint64_t sub_117018()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for WantToReadToolbarButton(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v35 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v36 = v35 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    __int16 v13 = *(_WORD *)(a2 + 64);
    char v14 = *(unsigned char *)(a2 + 66);
    sub_44FC4(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v13, v14);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v11;
    *(_WORD *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 66) = v14;
    uint64_t v15 = *(void **)(a2 + 72);
    LOBYTE(v6) = *(unsigned char *)(a2 + 80);
    sub_1D00C(v15, v6);
    *(void *)(a1 + 72) = v15;
    *(unsigned char *)(a1 + 80) = v6;
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    uint64_t v19 = *(void *)(a2 + v16 + 8);
    *(void *)uint64_t v17 = *(void *)(a2 + v16);
    *(void *)(v17 + 8) = v19;
    uint64_t v20 = *(void *)(a2 + v16 + 24);
    *(void *)(v17 + 16) = *(void *)(a2 + v16 + 16);
    *(void *)(v17 + 24) = v20;
    uint64_t v21 = *(void *)(a2 + v16 + 40);
    *(void *)(v17 + 32) = *(void *)(a2 + v16 + 32);
    *(void *)(v17 + 40) = v21;
    *(unsigned char *)(v17 + 48) = *(unsigned char *)(a2 + v16 + 48);
    uint64_t v22 = type metadata accessor for AssetAction(0);
    uint64_t v23 = *(int *)(v22 + 32);
    uint64_t v83 = v17 + v23;
    uint64_t v24 = v18 + v23;
    uint64_t v25 = sub_26CB80();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v83;
    uint64_t v82 = v26;
    uint64_t v84 = v25;
    v26(v27, v24, v25);
    uint64_t v28 = (int *)v22;
    uint64_t v29 = *(int *)(v22 + 36);
    long long v30 = (void *)(v17 + v29);
    int v31 = (const void *)(v18 + v29);
    uint64_t v32 = sub_269CE0();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
    if (v81(v31, 1, v32))
    {
      uint64_t v34 = sub_4A98(&qword_2EA820);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    uint64_t v38 = v28[10];
    uint64_t v39 = (void *)(v17 + v38);
    uint64_t v40 = (void *)(v18 + v38);
    uint64_t v41 = type metadata accessor for AssetAction.Kind(0);
    unint64_t v36 = a1;
    uint64_t v80 = v33;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
        uint64_t v42 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v42;
        *((_WORD *)v39 + 8) = *((_WORD *)v40 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 1u:
      case 2u:
      case 4u:
      case 7u:
        uint64_t v47 = (void *)*v40;
        *uint64_t v39 = *v40;
        id v48 = v47;
        goto LABEL_15;
      case 3u:
        uint64_t v43 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v43;
        *((unsigned char *)v39 + 16) = *((unsigned char *)v40 + 16);
        uint64_t v44 = (void *)v40[3];
        v39[3] = v44;
        swift_bridgeObjectRetain();
        id v45 = v44;
        unint64_t v36 = a1;
        goto LABEL_15;
      case 6u:
        uint64_t v46 = sub_2696C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v39, v40, v46);
        goto LABEL_15;
      case 9u:
        uint64_t v49 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v39, v40, v49);
        uint64_t v50 = sub_4A98(&qword_2F0760);
        *((unsigned char *)v39 + *(int *)(v50 + 48)) = *((unsigned char *)v40 + *(int *)(v50 + 48));
        goto LABEL_15;
      case 0xAu:
        uint64_t v51 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v39, v40, v51);
        uint64_t v52 = sub_4A98(&qword_2F0768);
        *((unsigned char *)v39 + *(int *)(v52 + 48)) = *((unsigned char *)v40 + *(int *)(v52 + 48));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        break;
    }
    uint64_t v53 = *(int *)(a3 + 28);
    uint64_t v54 = v36 + v53;
    uint64_t v55 = a2 + v53;
    uint64_t v56 = *(void *)(a2 + v53 + 8);
    *(void *)uint64_t v54 = *(void *)(a2 + v53);
    *(void *)(v54 + 8) = v56;
    uint64_t v57 = *(void *)(a2 + v53 + 24);
    *(void *)(v54 + 16) = *(void *)(a2 + v53 + 16);
    *(void *)(v54 + 24) = v57;
    uint64_t v58 = *(void *)(a2 + v53 + 40);
    *(void *)(v54 + 32) = *(void *)(a2 + v53 + 32);
    *(void *)(v54 + 40) = v58;
    *(unsigned char *)(v54 + 48) = *(unsigned char *)(a2 + v53 + 48);
    uint64_t v59 = v28[8];
    uint64_t v60 = v54 + v59;
    uint64_t v61 = v55 + v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v82(v60, v61, v84);
    uint64_t v62 = v28[9];
    int v63 = (void *)(v54 + v62);
    uint64_t v64 = (const void *)(v55 + v62);
    if (v81((const void *)(v55 + v62), 1, v32))
    {
      uint64_t v65 = sub_4A98(&qword_2EA820);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v80 + 16))(v63, v64, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v63, 0, 1, v32);
    }
    uint64_t v66 = v28[10];
    uint64_t v67 = (void *)(v54 + v66);
    uint64_t v68 = (void *)(v55 + v66);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
        uint64_t v69 = v68[1];
        *uint64_t v67 = *v68;
        v67[1] = v69;
        *((_WORD *)v67 + 8) = *((_WORD *)v68 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 4u:
      case 7u:
        long long v74 = (void *)*v68;
        *uint64_t v67 = *v68;
        id v75 = v74;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v70 = v68[1];
        *uint64_t v67 = *v68;
        v67[1] = v70;
        *((unsigned char *)v67 + 16) = *((unsigned char *)v68 + 16);
        uint64_t v71 = (void *)v68[3];
        v67[3] = v71;
        swift_bridgeObjectRetain();
        id v72 = v71;
        unint64_t v36 = a1;
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v73 = sub_2696C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v73 - 8) + 16))(v67, v68, v73);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v76 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v67, v68, v76);
        uint64_t v77 = sub_4A98(&qword_2F0760);
        *((unsigned char *)v67 + *(int *)(v77 + 48)) = *((unsigned char *)v68 + *(int *)(v77 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v78 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v67, v68, v78);
        uint64_t v79 = sub_4A98(&qword_2F0768);
        *((unsigned char *)v67 + *(int *)(v79 + 48)) = *((unsigned char *)v68 + *(int *)(v79 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v67, v68, *(void *)(*(void *)(v41 - 8) + 64));
        break;
    }
  }
  return v36;
}

void destroy for WantToReadToolbarButton(uint64_t a1, uint64_t a2)
{
  sub_C360(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(_WORD *)(a1 + 64), *(unsigned char *)(a1 + 66));
  sub_1D1EC(*(id *)(a1 + 72), *(unsigned char *)(a1 + 80));
  uint64_t v22 = a2;
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for AssetAction(0);
  uint64_t v6 = v4 + v5[8];
  uint64_t v7 = sub_26CB80();
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  uint64_t v21 = *v8;
  (*v8)(v6, v7);
  uint64_t v9 = v4 + v5[9];
  uint64_t v10 = sub_269CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  __int16 v13 = (id *)(v4 + v5[10]);
  type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 4u:
    case 7u:

      break;
    case 3u:
      swift_bridgeObjectRelease();

      break;
    case 6u:
      uint64_t v14 = sub_2696C0();
      goto LABEL_9;
    case 9u:
    case 0xAu:
      uint64_t v14 = sub_269810();
LABEL_9:
      (*(void (**)(id *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      break;
    default:
      break;
  }
  uint64_t v15 = a1 + *(int *)(v22 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21(v15 + v5[8], v7);
  uint64_t v16 = v15 + v5[9];
  if (!v12(v16, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
  }
  uint64_t v17 = v15 + v5[10];
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      return;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v18 = *(void **)v17;
      goto LABEL_19;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void **)(v17 + 24);
LABEL_19:

      return;
    case 6u:
      uint64_t v19 = sub_2696C0();
      goto LABEL_23;
    case 9u:
    case 0xAu:
      uint64_t v19 = sub_269810();
LABEL_23:
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
      v20(v17, v19);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v80 = *(_WORD *)(a2 + 64);
  char v83 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v80, v83);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v80;
  *(unsigned char *)(a1 + 66) = v83;
  __int16 v13 = *(void **)(a2 + 72);
  LOBYTE(v6) = *(unsigned char *)(a2 + 80);
  sub_1D00C(v13, v6);
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v6;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v84 = a1;
  uint64_t v15 = a1 + v14;
  uint64_t v78 = a2;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  uint64_t v18 = *(void *)(a2 + v14 + 24);
  *(void *)(v15 + 16) = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 24) = v18;
  uint64_t v19 = *(void *)(a2 + v14 + 40);
  *(void *)(v15 + 32) = *(void *)(a2 + v14 + 32);
  *(void *)(v15 + 40) = v19;
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(a2 + v14 + 48);
  uint64_t v20 = type metadata accessor for AssetAction(0);
  uint64_t v21 = *(int *)(v20 + 32);
  uint64_t v81 = v15 + v21;
  uint64_t v22 = v16 + v21;
  uint64_t v23 = sub_26CB80();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v81;
  uint64_t v79 = v24;
  uint64_t v82 = v23;
  v24(v25, v22, v23);
  uint64_t v26 = (int *)v20;
  uint64_t v27 = *(int *)(v20 + 36);
  uint64_t v28 = (void *)(v15 + v27);
  uint64_t v29 = (const void *)(v16 + v27);
  uint64_t v30 = sub_269CE0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
  if (v77(v29, 1, v30))
  {
    uint64_t v32 = sub_4A98(&qword_2EA820);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v33 = v26[10];
  uint64_t v34 = (void *)(v15 + v33);
  uint64_t v35 = (void *)(v16 + v33);
  uint64_t v36 = type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      uint64_t v37 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v37;
      *((_WORD *)v34 + 8) = *((_WORD *)v35 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v43 = (void *)*v35;
      *uint64_t v34 = *v35;
      id v44 = v43;
      goto LABEL_12;
    case 3u:
      uint64_t v38 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v38;
      *((unsigned char *)v34 + 16) = *((unsigned char *)v35 + 16);
      uint64_t v39 = v31;
      uint64_t v40 = (void *)v35[3];
      void v34[3] = v40;
      swift_bridgeObjectRetain();
      id v41 = v40;
      uint64_t v31 = v39;
      goto LABEL_12;
    case 6u:
      uint64_t v42 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v34, v35, v42);
      goto LABEL_12;
    case 9u:
      uint64_t v45 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v34, v35, v45);
      uint64_t v46 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v34 + *(int *)(v46 + 48)) = *((unsigned char *)v35 + *(int *)(v46 + 48));
      goto LABEL_12;
    case 0xAu:
      uint64_t v47 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v34, v35, v47);
      uint64_t v48 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v34 + *(int *)(v48 + 48)) = *((unsigned char *)v35 + *(int *)(v48 + 48));
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  uint64_t v49 = *(int *)(a3 + 28);
  uint64_t v50 = v84 + v49;
  uint64_t v51 = v78 + v49;
  uint64_t v52 = *(void *)(v78 + v49 + 8);
  *(void *)uint64_t v50 = *(void *)(v78 + v49);
  *(void *)(v50 + 8) = v52;
  uint64_t v53 = *(void *)(v78 + v49 + 24);
  *(void *)(v50 + 16) = *(void *)(v78 + v49 + 16);
  *(void *)(v50 + 24) = v53;
  uint64_t v54 = *(void *)(v78 + v49 + 40);
  *(void *)(v50 + 32) = *(void *)(v78 + v49 + 32);
  *(void *)(v50 + 40) = v54;
  *(unsigned char *)(v50 + 48) = *(unsigned char *)(v78 + v49 + 48);
  uint64_t v55 = v26[8];
  uint64_t v56 = v50 + v55;
  uint64_t v57 = v51 + v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79(v56, v57, v82);
  uint64_t v58 = v26[9];
  uint64_t v59 = (void *)(v50 + v58);
  uint64_t v60 = (const void *)(v51 + v58);
  if (v77((const void *)(v51 + v58), 1, v30))
  {
    uint64_t v61 = sub_4A98(&qword_2EA820);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v59, v60, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v59, 0, 1, v30);
  }
  uint64_t v62 = v26[10];
  int v63 = (void *)(v50 + v62);
  uint64_t v64 = (void *)(v51 + v62);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      uint64_t v65 = v64[1];
      *int v63 = *v64;
      v63[1] = v65;
      *((_WORD *)v63 + 8) = *((_WORD *)v64 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v70 = (void *)*v64;
      *int v63 = *v64;
      id v71 = v70;
      goto LABEL_24;
    case 3u:
      uint64_t v66 = v64[1];
      *int v63 = *v64;
      v63[1] = v66;
      *((unsigned char *)v63 + 16) = *((unsigned char *)v64 + 16);
      uint64_t v67 = (void *)v64[3];
      v63[3] = v67;
      swift_bridgeObjectRetain();
      id v68 = v67;
      goto LABEL_24;
    case 6u:
      uint64_t v69 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v63, v64, v69);
      goto LABEL_24;
    case 9u:
      uint64_t v72 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v63, v64, v72);
      uint64_t v73 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v63 + *(int *)(v73 + 48)) = *((unsigned char *)v64 + *(int *)(v73 + 48));
      goto LABEL_24;
    case 0xAu:
      uint64_t v74 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v63, v64, v74);
      uint64_t v75 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v63 + *(int *)(v75 + 48)) = *((unsigned char *)v64 + *(int *)(v75 + 48));
LABEL_24:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v63, v64, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  return v84;
}

uint64_t assignWithCopy for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v82 = *(_WORD *)(a2 + 64);
  char v85 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v82, v85);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  __int16 v21 = *(_WORD *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 66);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v82;
  *(unsigned char *)(a1 + 66) = v85;
  sub_C360(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = *(void **)(v3 + 72);
  LOBYTE(v11) = *(unsigned char *)(v3 + 80);
  sub_1D00C(v23, v11);
  uint64_t v24 = *(void **)(a1 + 72);
  char v25 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v23;
  *(unsigned char *)(a1 + 80) = v11;
  sub_1D1EC(v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = v3 + v26;
  *(void *)uint64_t v27 = *(void *)(v3 + v26);
  *(void *)(v27 + 8) = *(void *)(v3 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  *(void *)(v27 + 24) = *(void *)(v28 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  *(void *)(v27 + 40) = *(void *)(v28 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  uint64_t v29 = type metadata accessor for AssetAction(0);
  uint64_t v30 = *(int *)(v29 + 32);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = v28 + v30;
  uint64_t v33 = sub_26CB80();
  __int16 v80 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 24);
  uint64_t v81 = v33;
  v80(v31, v32);
  uint64_t v86 = (int *)v29;
  uint64_t v34 = *(int *)(v29 + 36);
  uint64_t v35 = (void *)(v27 + v34);
  uint64_t v36 = (void *)(v28 + v34);
  uint64_t v37 = sub_269CE0();
  uint64_t v83 = *(void *)(v37 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v83 + 48);
  LODWORD(v31) = v38(v35, 1, v37);
  int v39 = v38(v36, 1, v37);
  if (v31)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 16))(v35, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v35, 0, 1, v37);
      if (a1 == v3) {
        goto LABEL_19;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 24))(v35, v36, v37);
      if (a1 == v3) {
        goto LABEL_19;
      }
      goto LABEL_8;
    }
    (*(void (**)(void *, uint64_t))(v83 + 8))(v35, v37);
  }
  uint64_t v40 = sub_4A98(&qword_2EA820);
  memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
  if (a1 == v3) {
    goto LABEL_19;
  }
LABEL_8:
  uint64_t v41 = v86[10];
  uint64_t v42 = (void *)(v27 + v41);
  uint64_t v43 = (void *)(v28 + v41);
  sub_8083C(v27 + v41);
  uint64_t v44 = type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      *uint64_t v42 = *v43;
      v42[1] = v43[1];
      *((unsigned char *)v42 + 16) = *((unsigned char *)v43 + 16);
      *((unsigned char *)v42 + 17) = *((unsigned char *)v43 + 17);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v50 = (void *)*v43;
      *uint64_t v42 = *v43;
      id v51 = v50;
      goto LABEL_18;
    case 3u:
      *uint64_t v42 = *v43;
      v42[1] = v43[1];
      *((unsigned char *)v42 + 16) = *((unsigned char *)v43 + 16);
      uint64_t v45 = v3;
      uint64_t v46 = a1;
      uint64_t v47 = (void *)v43[3];
      v42[3] = v47;
      swift_bridgeObjectRetain();
      id v48 = v47;
      a1 = v46;
      uint64_t v3 = v45;
      goto LABEL_18;
    case 6u:
      uint64_t v49 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v42, v43, v49);
      goto LABEL_18;
    case 9u:
      uint64_t v52 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v42, v43, v52);
      uint64_t v53 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v42 + *(int *)(v53 + 48)) = *((unsigned char *)v43 + *(int *)(v53 + 48));
      goto LABEL_18;
    case 0xAu:
      uint64_t v54 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v42, v43, v54);
      uint64_t v55 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v42 + *(int *)(v55 + 48)) = *((unsigned char *)v43 + *(int *)(v55 + 48));
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      break;
  }
LABEL_19:
  uint64_t v56 = *(int *)(a3 + 28);
  uint64_t v57 = a1 + v56;
  uint64_t v58 = v3 + v56;
  *(void *)uint64_t v57 = *(void *)(v3 + v56);
  *(void *)(v57 + 8) = *(void *)(v3 + v56 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v57 + 16) = *(void *)(v58 + 16);
  *(void *)(v57 + 24) = *(void *)(v58 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v57 + 32) = *(void *)(v58 + 32);
  *(void *)(v57 + 40) = *(void *)(v58 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v57 + 48) = *(unsigned char *)(v58 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v80)(v57 + v86[8], v58 + v86[8], v81);
  uint64_t v59 = v86[9];
  uint64_t v60 = (void *)(v57 + v59);
  uint64_t v61 = (void *)(v58 + v59);
  int v62 = v38((void *)(v57 + v59), 1, v37);
  int v63 = v38(v61, 1, v37);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 16))(v60, v61, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v60, 0, 1, v37);
      if (a1 == v3) {
        return a1;
      }
      goto LABEL_26;
    }
LABEL_25:
    uint64_t v64 = sub_4A98(&qword_2EA820);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    if (a1 == v3) {
      return a1;
    }
    goto LABEL_26;
  }
  if (v63)
  {
    (*(void (**)(void *, uint64_t))(v83 + 8))(v60, v37);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v83 + 24))(v60, v61, v37);
  if (a1 == v3) {
    return a1;
  }
LABEL_26:
  uint64_t v65 = v86[10];
  uint64_t v66 = (void *)(v57 + v65);
  uint64_t v67 = (void *)(v58 + v65);
  sub_8083C(v57 + v65);
  uint64_t v68 = type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      void *v66 = *v67;
      v66[1] = v67[1];
      *((unsigned char *)v66 + 16) = *((unsigned char *)v67 + 16);
      *((unsigned char *)v66 + 17) = *((unsigned char *)v67 + 17);
      swift_bridgeObjectRetain();
      goto LABEL_36;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v73 = (void *)*v67;
      void *v66 = *v67;
      id v74 = v73;
      goto LABEL_36;
    case 3u:
      void *v66 = *v67;
      v66[1] = v67[1];
      *((unsigned char *)v66 + 16) = *((unsigned char *)v67 + 16);
      uint64_t v69 = a1;
      uint64_t v70 = (void *)v67[3];
      v66[3] = v70;
      swift_bridgeObjectRetain();
      id v71 = v70;
      a1 = v69;
      goto LABEL_36;
    case 6u:
      uint64_t v72 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v66, v67, v72);
      goto LABEL_36;
    case 9u:
      uint64_t v75 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v66, v67, v75);
      uint64_t v76 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v66 + *(int *)(v76 + 48)) = *((unsigned char *)v67 + *(int *)(v76 + 48));
      goto LABEL_36;
    case 0xAu:
      uint64_t v77 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v66, v67, v77);
      uint64_t v78 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v66 + *(int *)(v78 + 48)) = *((unsigned char *)v67 + *(int *)(v78 + 48));
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t initializeWithTake for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(a2 + v7 + 48);
  uint64_t v11 = (int *)type metadata accessor for AssetAction(0);
  uint64_t v12 = v11[8];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_26CB80();
  id v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  uint64_t v52 = v15;
  v51(v13, v14);
  uint64_t v16 = v11[9];
  uint64_t v17 = (void *)(v8 + v16);
  uint64_t v18 = (const void *)(v9 + v16);
  uint64_t v19 = sub_269CE0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v50(v18, 1, v19))
  {
    uint64_t v21 = sub_4A98(&qword_2EA820);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = v11[10];
  uint64_t v23 = (unsigned char *)(v8 + v22);
  uint64_t v24 = (unsigned char *)(v9 + v22);
  uint64_t v25 = type metadata accessor for AssetAction.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v28 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v23, v24, v28);
      uint64_t v29 = sub_4A98(&qword_2F0768);
      v23[*(int *)(v29 + 48)] = v24[*(int *)(v29 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v30 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 32))(v23, v24, v30);
      uint64_t v31 = sub_4A98(&qword_2F0760);
      v23[*(int *)(v31 + 48)] = v24[*(int *)(v31 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v27 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v23, v24, v27);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      break;
  }
  uint64_t v32 = *(int *)(a3 + 28);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  long long v35 = *(_OWORD *)(a2 + v32 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 16) = v35;
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(a2 + v32 + 32);
  *(unsigned char *)(v33 + 48) = *(unsigned char *)(a2 + v32 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v51)(a1 + v32 + v11[8], a2 + v32 + v11[8], v52);
  uint64_t v36 = v11[9];
  uint64_t v37 = (void *)(v33 + v36);
  uint64_t v38 = (const void *)(v34 + v36);
  if (v50((const void *)(v34 + v36), 1, v19))
  {
    uint64_t v39 = sub_4A98(&qword_2EA820);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v37, v38, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v37, 0, 1, v19);
  }
  uint64_t v40 = v11[10];
  uint64_t v41 = (unsigned char *)(v33 + v40);
  uint64_t v42 = (unsigned char *)(v34 + v40);
  int v43 = swift_getEnumCaseMultiPayload();
  switch(v43)
  {
    case 10:
      uint64_t v45 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
      uint64_t v46 = sub_4A98(&qword_2F0768);
      v41[*(int *)(v46 + 48)] = v42[*(int *)(v46 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v47 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(v41, v42, v47);
      uint64_t v48 = sub_4A98(&qword_2F0760);
      v41[*(int *)(v48 + 48)] = v42[*(int *)(v48 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v44 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v41, v42, *(void *)(*(void *)(v25 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithTake for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6 = *(_WORD *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 66);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  __int16 v16 = *(_WORD *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 66);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_WORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 66) = v7;
  sub_C360(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  char v20 = *(unsigned char *)(a2 + 80);
  uint64_t v21 = *(void **)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v20;
  sub_1D1EC(v21, v22);
  uint64_t v77 = a3;
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23 + 8);
  *(void *)uint64_t v24 = *(void *)(a2 + v23);
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v25 + 24);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(void *)(v24 + 24) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v25 + 40);
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  *(void *)(v24 + 40) = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 48) = *(unsigned char *)(v25 + 48);
  uint64_t v29 = type metadata accessor for AssetAction(0);
  uint64_t v30 = *(int *)(v29 + 32);
  uint64_t v31 = v24 + v30;
  uint64_t v32 = v25 + v30;
  uint64_t v33 = sub_26CB80();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 40);
  uint64_t v76 = v33;
  v75(v31, v32);
  uint64_t v79 = (int *)v29;
  uint64_t v34 = *(int *)(v29 + 36);
  long long v35 = (void *)(v24 + v34);
  uint64_t v36 = (void *)(v25 + v34);
  uint64_t v37 = sub_269CE0();
  uint64_t v78 = *(void *)(v37 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
  int v39 = v38(v35, 1, v37);
  int v40 = v38(v36, 1, v37);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v35, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v37);
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v35, v36, v37);
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_8;
    }
    (*(void (**)(void *, uint64_t))(v78 + 8))(v35, v37);
  }
  uint64_t v41 = sub_4A98(&qword_2EA820);
  memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_17;
  }
LABEL_8:
  uint64_t v42 = v79[10];
  int v43 = (unsigned char *)(v24 + v42);
  uint64_t v44 = (unsigned char *)(v25 + v42);
  sub_8083C(v24 + v42);
  uint64_t v45 = type metadata accessor for AssetAction.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v48 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v43, v44, v48);
      uint64_t v49 = sub_4A98(&qword_2F0768);
      v43[*(int *)(v49 + 48)] = v44[*(int *)(v49 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v50 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 32))(v43, v44, v50);
      uint64_t v51 = sub_4A98(&qword_2F0760);
      v43[*(int *)(v51 + 48)] = v44[*(int *)(v51 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v47 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(v43, v44, v47);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      break;
  }
LABEL_17:
  uint64_t v52 = *(int *)(v77 + 28);
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = *(void *)(a2 + v52 + 8);
  *(void *)uint64_t v53 = *(void *)(a2 + v52);
  *(void *)(v53 + 8) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v54 + 24);
  *(void *)(v53 + 16) = *(void *)(v54 + 16);
  *(void *)(v53 + 24) = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v54 + 40);
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  *(void *)(v53 + 40) = v57;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v53 + 48) = *(unsigned char *)(v54 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v53 + v79[8], v54 + v79[8], v76);
  uint64_t v58 = v79[9];
  uint64_t v59 = (void *)(v53 + v58);
  uint64_t v60 = (void *)(v54 + v58);
  int v61 = v38((void *)(v53 + v58), 1, v37);
  int v62 = v38(v60, 1, v37);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v59, v60, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v59, 0, 1, v37);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v63 = sub_4A98(&qword_2EA820);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_24;
  }
  if (v62)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v59, v37);
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v59, v60, v37);
  if (a1 == a2) {
    return a1;
  }
LABEL_24:
  uint64_t v64 = v79[10];
  uint64_t v65 = (unsigned char *)(v53 + v64);
  uint64_t v66 = (unsigned char *)(v54 + v64);
  sub_8083C(v53 + v64);
  uint64_t v67 = type metadata accessor for AssetAction.Kind(0);
  int v68 = swift_getEnumCaseMultiPayload();
  switch(v68)
  {
    case 10:
      uint64_t v70 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 32))(v65, v66, v70);
      uint64_t v71 = sub_4A98(&qword_2F0768);
      v65[*(int *)(v71 + 48)] = v66[*(int *)(v71 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v72 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 32))(v65, v66, v72);
      uint64_t v73 = sub_4A98(&qword_2F0760);
      v65[*(int *)(v73 + 48)] = v66[*(int *)(v73 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v69 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 32))(v65, v66, v69);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_119E34);
}

uint64_t sub_119E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 66);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for AssetAction(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WantToReadToolbarButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_119EF0);
}

uint64_t sub_119EF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 66) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for AssetAction(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_119F94()
{
  uint64_t result = type metadata accessor for AssetAction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_11A034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_11A0E0@<X0>(char *a1@<X8>)
{
  return sub_1167C4(*(void *)(v1 + 16), a1);
}

uint64_t sub_11A0E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_11A130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_11A198()
{
  uint64_t ToolbarButton = type metadata accessor for WantToReadToolbarButton();
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(ToolbarButton - 8) + 80);
  uint64_t v2 = v0 + ((v19 + 16) & ~v19);
  sub_C360(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(_WORD *)(v2 + 64), *(unsigned char *)(v2 + 66));
  sub_1D1EC(*(id *)(v2 + 72), *(unsigned char *)(v2 + 80));
  uint64_t v3 = v2 + *(int *)(ToolbarButton + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v4 = (int *)type metadata accessor for AssetAction(0);
  uint64_t v5 = v3 + v4[8];
  uint64_t v6 = sub_26CB80();
  long long v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v18(v5, v6);
  uint64_t v7 = v3 + v4[9];
  uint64_t v8 = sub_269CE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = (id *)(v3 + v4[10]);
  type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 4u:
    case 7u:

      break;
    case 3u:
      swift_bridgeObjectRelease();

      break;
    case 6u:
      uint64_t v12 = sub_2696C0();
      goto LABEL_9;
    case 9u:
    case 0xAu:
      uint64_t v12 = sub_269810();
LABEL_9:
      (*(void (**)(id *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      break;
    default:
      break;
  }
  uint64_t v13 = v2 + *(int *)(ToolbarButton + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18(v13 + v4[8], v6);
  uint64_t v14 = v13 + v4[9];
  if (!v10(v14, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  }
  uint64_t v15 = (id *)(v13 + v4[10]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 4u:
    case 7u:

      break;
    case 3u:
      swift_bridgeObjectRelease();

      break;
    case 6u:
      uint64_t v16 = sub_2696C0();
      goto LABEL_18;
    case 9u:
    case 0xAu:
      uint64_t v16 = sub_269810();
LABEL_18:
      (*(void (**)(id *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      break;
    default:
      break;
  }

  return swift_deallocObject();
}

uint64_t sub_11A5C8@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for WantToReadToolbarButton() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1167C4(v4, a1);
}

uint64_t sub_11A648@<X0>(uint64_t *a1@<X8>)
{
  return sub_11686C(*(void *)(v1 + 16), a1);
}

uint64_t dispatch thunk of PageUpdateControlling.issue(instruction:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

BOOL ColorConstants.isLight.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
  sub_61674();
  LOBYTE(v1) = sub_26D360();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  v9(v8, v2);
  return (v1 & 1) == 0;
}

uint64_t type metadata accessor for ColorConstants.Environment(uint64_t a1)
{
  return sub_2A148(a1, qword_2F0908);
}

uint64_t sub_11A7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EnvironmentValues.colors.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_26A6E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v18 - v13, v18, v8);
  v15(v12, (uint64_t)v14, v8);
  sub_26ADD0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
  v16(v14, v8);
  return sub_11AA94((uint64_t)v7, v19);
}

uint64_t sub_11AA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ColorConstants.Environment.colorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26A6E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ColorConstants.Environment.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t ColorConstants.env.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_11A7FC(v1, a1);
}

uint64_t ColorConstants.init(env:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_11AA94(a1, a2);
}

uint64_t getEnumTagSinglePayload for ColorConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11AC0C);
}

uint64_t sub_11AC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_11AF00(a1, a2, a3, type metadata accessor for ColorConstants.Environment);
}

uint64_t storeEnumTagSinglePayload for ColorConstants(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11AC38);
}

uint64_t sub_11AC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_11AF9C(a1, a2, a3, a4, type metadata accessor for ColorConstants.Environment);
}

uint64_t type metadata accessor for ColorConstants(uint64_t a1)
{
  return sub_2A148(a1, qword_2F0878);
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s7BooksUI14ColorConstantsV11EnvironmentVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11AEE8);
}

uint64_t sub_11AEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_11AF00(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ColorScheme);
}

uint64_t sub_11AF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for ColorConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11AF84);
}

uint64_t sub_11AF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_11AF9C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ColorScheme);
}

uint64_t sub_11AF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_11B010()
{
  uint64_t result = sub_26A6E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double DelayAction.seconds.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for DelayAction() + 20));
}

uint64_t type metadata accessor for DelayAction()
{
  uint64_t result = qword_2F0998;
  if (!qword_2F0998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DelayAction.init(actionMetrics:seconds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for DelayAction();
  *(double *)(a2 + *(int *)(result + 20)) = a3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DelayAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26CB80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for DelayAction(uint64_t a1)
{
  uint64_t v2 = sub_26CB80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11B4BC);
}

uint64_t sub_11B4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26CB80();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DelayAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11B53C);
}

uint64_t sub_11B53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26CB80();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_11B5AC()
{
  uint64_t result = sub_26CB80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_11B644(char a1)
{
  unint64_t result = 0x4D747865746E6F63;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x69576E6F74747562;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x70756B636F6CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_11B724()
{
  return sub_26DF20();
}

uint64_t sub_11B770()
{
  return sub_26D4B0();
}

Swift::Int sub_11B780()
{
  return sub_26DF20();
}

uint64_t sub_11B7C8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DBA30;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_11B81C(void *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_11B830()
{
  return 1701869940;
}

uint64_t sub_11B840@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_2DBA68;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_11B898(uint64_t a1)
{
  unint64_t v2 = sub_11D0D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11B8D4(uint64_t a1)
{
  unint64_t v2 = sub_11D0D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_11B910(char *a1, char *a2)
{
  return sub_109B80(*a1, *a2);
}

Swift::Int sub_11B91C()
{
  return sub_26DF20();
}

uint64_t sub_11B9A4()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_11BA18()
{
  return sub_26DF20();
}

uint64_t sub_11BA9C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_11D418(a1, (Swift::OpaquePointer)&off_2DB850, a2);
}

void sub_11BAA8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1684957547;
  if (*v1) {
    uint64_t v2 = 0x72756769666E6F63;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00006E6F697461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_11BAEC()
{
  if (*v0) {
    return 0x72756769666E6F63;
  }
  else {
    return 1684957547;
  }
}

uint64_t sub_11BB2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_11D4CC(a1, a2, (Swift::OpaquePointer)&off_2DB850, a3);
}

void sub_11BB38(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_11BB44(uint64_t a1)
{
  unint64_t v2 = sub_11D124();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11BB80(uint64_t a1)
{
  unint64_t v2 = sub_11D124();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_11BBBC(unsigned __int8 *a1, char *a2)
{
  return sub_10968C(*a1, *a2);
}

Swift::Int sub_11BBC8()
{
  return sub_181764();
}

uint64_t sub_11BBD4()
{
  return sub_18117C();
}

Swift::Int sub_11BBDC()
{
  return sub_181764();
}

uint64_t sub_11BBE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_11F3A4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_11BC14(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x656C746974;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656C746974627573;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x63657053746E6F66;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      *(void *)a1 = 0x6E6F69746361;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "assetResource");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 5:
      *(void *)a1 = 0x6D614E6567616D69;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    case 6:
      *(void *)a1 = 0x6D496C6F626D7973;
      *(void *)(a1 + 8) = 0xEF646E694B656761;
      break;
    case 7:
      *(void *)a1 = 0x73756E656DLL;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_11BD3C()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 0x63657053746E6F66;
      break;
    case 3:
      uint64_t result = 0x6E6F69746361;
      break;
    case 4:
      uint64_t result = 0x7365527465737361;
      break;
    case 5:
      uint64_t result = 0x6D614E6567616D69;
      break;
    case 6:
      uint64_t result = 0x6D496C6F626D7973;
      break;
    case 7:
      uint64_t result = 0x73756E656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_11BE48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_11F3A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_11BE70(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_11BE7C(uint64_t a1)
{
  unint64_t v2 = sub_11D1CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11BEB8(uint64_t a1)
{
  unint64_t v2 = sub_11D1CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_11BEF4(unsigned __int8 *a1, char *a2)
{
  return sub_109930(*a1, *a2);
}

Swift::Int sub_11BF00()
{
  return sub_180AB0();
}

uint64_t sub_11BF08()
{
  return sub_1812C0();
}

Swift::Int sub_11BF10()
{
  return sub_181640();
}

uint64_t sub_11BF18@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_11F444(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_11BF48@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_11B644(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_11BF74()
{
  return sub_26D5E0();
}

uint64_t ToolbarItemType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = sub_4A98(&qword_2F09D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  char v85 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v86 = (uint64_t)v73 - v6;
  uint64_t v88 = sub_4A98(&qword_2F09D8);
  uint64_t v83 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  Swift::String v8 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F09E0);
  uint64_t v84 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F09E8);
  uint64_t v87 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v90 = a1;
  sub_4ADC(a1, v15);
  sub_11D0D0();
  uint64_t v16 = v89;
  sub_26DFC0();
  if (v16)
  {
    uint64_t v19 = (uint64_t)v90;
    return _s7BooksUI13AnyPagedFrameVwxx_0(v19);
  }
  else
  {
    char v17 = (uint64_t *)v85;
    uint64_t v81 = v8;
    uint64_t v18 = v88;
    uint64_t v89 = v9;
    sub_11D124();
    sub_26DC10();
    LOBYTE(v108) = 0;
    sub_11D178();
    sub_26DC90();
    uint64_t v80 = v12;
    uint64_t v21 = v91;
    LOBYTE(v91) = 1;
    sub_11D1CC();
    sub_26DC10();
    char v22 = v11;
    uint64_t v23 = v84;
    uint64_t v78 = v22;
    uint64_t v79 = 0;
    switch(v21)
    {
      case 1:
        LOBYTE(v91) = 5;
        uint64_t v29 = v18;
        uint64_t v30 = v81;
        uint64_t v31 = sub_26DC70();
        uint64_t v32 = v80;
        uint64_t v33 = v31;
        uint64_t v35 = v34;
        LOBYTE(v107[0]) = 3;
        sub_3FBD4();
        sub_26DC90();
        uint64_t v79 = 0;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v30, v29);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v78, v89);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v32);
        sub_AD44(&v108, (uint64_t)&v91);
        uint64_t v119 = v33;
        uint64_t v120 = v35;
        sub_AD44(&v91, (uint64_t)&v121);
        char v51 = 2;
        goto LABEL_18;
      case 2:
        LOBYTE(v91) = 0;
        *(void *)&long long v77 = sub_26DC70();
        *((void *)&v77 + 1) = v43;
        uint64_t v44 = v18;
        uint64_t v45 = (void *)type metadata accessor for FontSpec(0);
        LOBYTE(v91) = 2;
        sub_11E734(&qword_2F0A18, (void (*)(uint64_t))type metadata accessor for FontSpec);
        uint64_t v76 = v45;
        sub_26DC60();
        uint64_t v46 = v83;
        LOBYTE(v107[0]) = 3;
        sub_3FBD4();
        uint64_t v52 = v44;
        uint64_t v53 = v81;
        sub_26DC90();
        uint64_t v54 = v80;
        uint64_t v79 = 0;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v53, v52);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v54);
        sub_AD44(&v91, (uint64_t)&v108);
        long long v91 = v77;
        sub_AD44(&v108, (uint64_t)&v92);
        sub_19CC4(v86, (uint64_t)v17, &qword_2F09D0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(v76 - 1) + 48))(v17, 1) == 1)
        {
          sub_B6DC((uint64_t)v17, &qword_2F09D0);
          uint64_t v58 = 0;
        }
        else
        {
          uint64_t v58 = *v17;
          swift_retain();
          sub_11E4D4((uint64_t)v17);
        }
        uint64_t v56 = v82;
        *((void *)&v94 + 1) = v58;
        char v62 = 1;
        goto LABEL_37;
      case 3:
        LOBYTE(v107[0]) = 3;
        sub_3FBD4();
        uint64_t v36 = v18;
        uint64_t v37 = v81;
        uint64_t v38 = v79;
        sub_26DC90();
        uint64_t v39 = v80;
        if (v38)
        {
          (*(void (**)(char *, uint64_t))(v83 + 8))(v37, v36);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v39);
          goto LABEL_15;
        }
        uint64_t v79 = 0;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v37, v36);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v39);
        sub_AD44(&v108, (uint64_t)&v91);
        uint64_t v119 = 7;
        sub_AD44(&v91, (uint64_t)&v120);
        char v122 = 3;
        goto LABEL_19;
      case 4:
        LOBYTE(v91) = 0;
        uint64_t v40 = sub_26DC70();
        uint64_t v41 = v80;
        uint64_t v48 = v47;
        uint64_t v86 = v40;
        LOBYTE(v91) = 1;
        *(void *)&long long v77 = sub_26DC70();
        *((void *)&v77 + 1) = v55;
        char v85 = v48;
        sub_4A98(&qword_2EBAB8);
        LOBYTE(v108) = 4;
        sub_457C0();
        sub_26DC90();
        uint64_t v59 = v88;
        uint64_t v79 = 0;
        uint64_t v76 = (void *)v91;
        sub_269EF0();
        if (*((void *)&v92 + 1))
        {
          sub_AD44(&v91, (uint64_t)v107);
          sub_4ADC(v107, v107[3]);
          sub_269FF0();
          double v61 = v60 * 54.0;
          sub_C224((uint64_t)v107, (uint64_t)&v91);
          *((double *)&v93 + 1) = v61;
          *(void *)&long long v94 = 0x404B000000000000;
          BYTE8(v94) = 0;
          CoverViewModel.init(style:)((uint64_t)&v91, (uint64_t)&v108);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v59);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v78, v89);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v41);
          _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v107);
        }
        else
        {
          uint64_t v75 = v14;
          sub_B6DC((uint64_t)&v91, &qword_2EBAC8);
          if (qword_2E9B08 != -1) {
            swift_once();
          }
          uint64_t v63 = sub_26A340();
          sub_6B14(v63, (uint64_t)qword_2E9EE0);
          uint64_t v64 = v76;
          uint64_t v65 = sub_26A320();
          os_log_type_t v66 = sub_26D840();
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v67 = (uint8_t *)swift_slowAlloc();
            id v74 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v67 = 138543362;
            v73[1] = v67 + 4;
            *(void *)&long long v91 = v64;
            int v68 = v64;
            sub_26D9A0();
            void *v74 = v64;

            _os_log_impl(&def_5F050, v65, v66, "Failed to convert store asset to assetInfo: %{public}@", v67, 0xCu);
            sub_4A98(&qword_2EA360);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v65 = v64;
          }

          sub_269D70();
          if (swift_dynamicCastClass())
          {
            *(void *)&long long v108 = 0x4046000000000000;
            char v69 = 1;
          }
          else
          {
            unsigned __int8 v70 = [v64 pagesAreRTL];
            *(void *)&long long v108 = 0x404B000000000000;
            BYTE8(v108) = v70;
            char v69 = 2;
          }
          BYTE8(v111) = v69;
          CoverViewModel.init(style:)((uint64_t)&v108, (uint64_t)&v91);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v18);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v78, v89);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v75, v80);
          long long v116 = v99;
          long long v117 = v100;
          uint64_t v118 = v101;
          long long v112 = v95;
          long long v113 = v96;
          long long v114 = v97;
          long long v115 = v98;
          long long v108 = v91;
          long long v109 = v92;
          long long v110 = v93;
          long long v111 = v94;
        }
        uint64_t v56 = v82;
        long long v99 = v116;
        long long v100 = v117;
        long long v95 = v112;
        long long v96 = v113;
        long long v97 = v114;
        long long v98 = v115;
        long long v91 = v108;
        long long v92 = v109;
        long long v93 = v110;
        long long v94 = v111;
        uint64_t v101 = v118;
        uint64_t v102 = v86;
        long long v103 = v85;
        long long v104 = v77;
        sub_269D70();
        id v71 = v76;
        BOOL v72 = swift_dynamicCastClass() != 0;

        BOOL v105 = v72;
        char v62 = 4;
LABEL_37:
        char v106 = v62;
        sub_11D274((uint64_t)&v91, (uint64_t)&v119);
        goto LABEL_20;
      case 5:
        LOBYTE(v108) = 6;
        sub_11D220();
        uint64_t v24 = v18;
        uint64_t v25 = v81;
        uint64_t v42 = v79;
        sub_26DC90();
        uint64_t v27 = v80;
        if (v42) {
          goto LABEL_14;
        }
        char v49 = v91;
        LOBYTE(v107[0]) = 3;
        sub_3FBD4();
        sub_26DC90();
        uint64_t v50 = v87;
        uint64_t v79 = 0;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v24);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v27);
        sub_AD44(&v108, (uint64_t)&v91);
        LOBYTE(v119) = v49;
        sub_AD44(&v91, (uint64_t)&v120);
        char v51 = 5;
LABEL_18:
        char v122 = v51;
        goto LABEL_19;
      default:
        LOBYTE(v108) = 6;
        sub_11D220();
        uint64_t v24 = v18;
        uint64_t v25 = v81;
        uint64_t v26 = v79;
        sub_26DC90();
        uint64_t v27 = v80;
        if (v26)
        {
LABEL_14:
          (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v24);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v27);
LABEL_15:
          uint64_t v19 = (uint64_t)v90;
          return _s7BooksUI13AnyPagedFrameVwxx_0(v19);
        }
        char v28 = v91;
        sub_4A98(&qword_2F0A20);
        LOBYTE(v108) = 7;
        sub_11E530();
        sub_26DC90();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v24);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v89);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v27);
        uint64_t v79 = 0;
        LOBYTE(v119) = v28;
        uint64_t v120 = v91;
        char v122 = 0;
LABEL_19:
        uint64_t v56 = v82;
LABEL_20:
        uint64_t v57 = (uint64_t)v90;
        sub_11D274((uint64_t)&v119, v56);
        uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(v57);
        break;
    }
  }
  return result;
}

unint64_t sub_11D0D0()
{
  unint64_t result = qword_2F09F0;
  if (!qword_2F09F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F09F0);
  }
  return result;
}

unint64_t sub_11D124()
{
  unint64_t result = qword_2F09F8;
  if (!qword_2F09F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F09F8);
  }
  return result;
}

unint64_t sub_11D178()
{
  unint64_t result = qword_2F0A00;
  if (!qword_2F0A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A00);
  }
  return result;
}

unint64_t sub_11D1CC()
{
  unint64_t result = qword_2F0A08;
  if (!qword_2F0A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A08);
  }
  return result;
}

unint64_t sub_11D220()
{
  unint64_t result = qword_2F0A10;
  if (!qword_2F0A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A10);
  }
  return result;
}

uint64_t sub_11D274(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_11D2D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolbarItemType.init(from:)(a1, a2);
}

uint64_t sub_11D2E8(char *a1, char *a2)
{
  return sub_108E84(*a1, *a2);
}

Swift::Int sub_11D2F4()
{
  return sub_26DF20();
}

uint64_t sub_11D35C()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_11D3A8()
{
  return sub_26DF20();
}

uint64_t sub_11D40C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_11D418(a1, (Swift::OpaquePointer)&off_2DBAA0, a2);
}

uint64_t sub_11D418@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_26DC00(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_11D474(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1684957547;
  if (*v1) {
    uint64_t v2 = 1635017060;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_11D49C()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 1684957547;
  }
}

uint64_t sub_11D4C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_11D4CC(a1, a2, (Swift::OpaquePointer)&off_2DBAA0, a3);
}

uint64_t sub_11D4CC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X4>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  Swift::Int v7 = sub_26DC00(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 == 1) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  if (!v7) {
    char v9 = 0;
  }
  *a4 = v9;
  return result;
}

uint64_t sub_11D52C(uint64_t a1)
{
  unint64_t v2 = sub_11E5D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11D568(uint64_t a1)
{
  unint64_t v2 = sub_11E5D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_11D5A4(unsigned __int8 *a1, char *a2)
{
  return sub_108EF4(*a1, *a2);
}

Swift::Int sub_11D5B0()
{
  return sub_26DF20();
}

uint64_t sub_11D6BC()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_11D7B0()
{
  return sub_26DF20();
}

uint64_t sub_11D8B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_11F490(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_11D8E8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7107189;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656C746974627573;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6D496C6F626D7973;
      *(void *)(a1 + 8) = 0xEF646E694B656761;
      break;
    case 3:
      strcpy((char *)a1, "assetResource");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0x7463656C65537369;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_11D9B8()
{
  uint64_t result = 7107189;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 0x6D496C6F626D7973;
      break;
    case 3:
      uint64_t result = 0x7365527465737361;
      break;
    case 4:
      uint64_t result = 0x7463656C65537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_11DA78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_11F490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_11DAA0(uint64_t a1)
{
  unint64_t v2 = sub_11E67C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11DADC(uint64_t a1)
{
  unint64_t v2 = sub_11E67C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_11DB18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1090E8(*a1, *a2);
}

Swift::Int sub_11DB24()
{
  return sub_26DF20();
}

uint64_t sub_11DBC4()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_11DC50()
{
  return sub_26DF20();
}

uint64_t sub_11DCEC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_11F4DC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_11DD1C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE90000000000006BLL;
  uint64_t v5 = 0x6E694C6572616873;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E6F74747562;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656C67676F74;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_11DD78()
{
  return sub_26D5E0();
}

uint64_t ToolbarActionMenuItemButtonType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v41 = (uint64_t)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2696C0();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F0A38);
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F0A40);
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v46 = a1;
  sub_4ADC(a1, v16);
  sub_11E5D4();
  char v17 = v47;
  sub_26DFC0();
  if (!v17)
  {
    uint64_t v47 = v9;
    v37[1] = v13;
    uint64_t v38 = v7;
    v37[0] = (uint64_t)v15;
    uint64_t v19 = v44;
    uint64_t v18 = v45;
    char v50 = 0;
    sub_11E628();
    sub_26DC90();
    int v20 = LOBYTE(v48[0]);
    LOBYTE(v48[0]) = 1;
    sub_11E67C();
    uint64_t v21 = v47;
    sub_26DC10();
    if (v20)
    {
      if (v20 != 1)
      {
        sub_26A220();
        LOBYTE(v48[0]) = 1;
        sub_11E734(&qword_2EEC40, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
        sub_26DC60();
        uint64_t v30 = v43;
        LOBYTE(v48[0]) = 2;
        uint64_t v40 = sub_26DC30();
        uint64_t v42 = v31;
        sub_4A98(&qword_2EBAB8);
        char v50 = 3;
        sub_457C0();
        sub_26DC60();
        if (*(void *)&v48[0])
        {
          id v32 = *(id *)&v48[0];
          sub_269EF0();

          (*(void (**)(char *, uint64_t))(v30 + 8))(v47, v38);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v47, v38);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
          uint64_t v49 = 0;
          memset(v48, 0, sizeof(v48));
        }
        uint64_t v33 = sub_4A98(&qword_2EED20);
        uint64_t v26 = v37[0];
        uint64_t v34 = (uint64_t *)(v37[0] + *(int *)(v33 + 48));
        uint64_t v35 = v37[0] + *(int *)(v33 + 64);
        sub_19CC4(v41, v37[0], &qword_2EA0C0);
        uint64_t v36 = v42;
        *uint64_t v34 = v40;
        v34[1] = (uint64_t)v36;
        sub_19CC4((uint64_t)v48, v35, &qword_2EBAC8);
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = v18;
        uint64_t v22 = (uint64_t)v46;
        goto LABEL_10;
      }
      LOBYTE(v48[0]) = 0;
      sub_11E734(&qword_2F0A60, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v24 = v40;
      uint64_t v25 = v38;
      sub_26DC90();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v25);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v26 = v37[0];
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v37[0], v42, v24);
    }
    else
    {
      LOBYTE(v48[0]) = 4;
      uint64_t v27 = v38;
      char v28 = sub_26DC80();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v27);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v26 = v37[0];
      *(unsigned char *)v37[0] = v28 & 1;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v18;
LABEL_10:
    sub_11E6D0(v26, v29);
    return _s7BooksUI13AnyPagedFrameVwxx_0(v22);
  }
  uint64_t v22 = (uint64_t)v46;
  return _s7BooksUI13AnyPagedFrameVwxx_0(v22);
}

uint64_t sub_11E4BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolbarActionMenuItemButtonType.init(from:)(a1, a2);
}

uint64_t sub_11E4D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FontSpec(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_11E530()
{
  unint64_t result = qword_2F0A28;
  if (!qword_2F0A28)
  {
    sub_7B0C(&qword_2F0A20);
    sub_11E734(&qword_2F0A30, (void (*)(uint64_t))type metadata accessor for ToolbarActionMenu);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A28);
  }
  return result;
}

unint64_t sub_11E5D4()
{
  unint64_t result = qword_2F0A48;
  if (!qword_2F0A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A48);
  }
  return result;
}

unint64_t sub_11E628()
{
  unint64_t result = qword_2F0A50;
  if (!qword_2F0A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A50);
  }
  return result;
}

unint64_t sub_11E67C()
{
  unint64_t result = qword_2F0A58;
  if (!qword_2F0A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A58);
  }
  return result;
}

uint64_t sub_11E6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_11E734(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s12MenuItemKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11E848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12MenuItemKindOMa()
{
  return &_s12MenuItemKindON;
}

ValueMetadata *_s8RootKeysOMa()
{
  return &_s8RootKeysON;
}

unsigned char *_s8DataKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11E960);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8DataKeysOMa()
{
  return &_s8DataKeysON;
}

unsigned char *_s15ToolbarItemKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11EA64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ToolbarItemKindOMa()
{
  return &_s15ToolbarItemKindON;
}

unsigned char *_s8RootKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x11EB38);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8RootKeysOMa_0()
{
  return &_s8RootKeysON_0;
}

unsigned char *_s8RootKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11EC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TypeKeysOMa()
{
  return &_s8TypeKeysON;
}

unsigned char *_s17ConfigurationKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11ED40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17ConfigurationKeysOMa()
{
  return &_s17ConfigurationKeysON;
}

unint64_t sub_11ED7C()
{
  unint64_t result = qword_2F0A68;
  if (!qword_2F0A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A68);
  }
  return result;
}

unint64_t sub_11EDD4()
{
  unint64_t result = qword_2F0A70;
  if (!qword_2F0A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A70);
  }
  return result;
}

unint64_t sub_11EE2C()
{
  unint64_t result = qword_2F0A78;
  if (!qword_2F0A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A78);
  }
  return result;
}

unint64_t sub_11EE84()
{
  unint64_t result = qword_2F0A80;
  if (!qword_2F0A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A80);
  }
  return result;
}

unint64_t sub_11EEDC()
{
  unint64_t result = qword_2F0A88;
  if (!qword_2F0A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A88);
  }
  return result;
}

unint64_t sub_11EF34()
{
  unint64_t result = qword_2F0A90;
  if (!qword_2F0A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A90);
  }
  return result;
}

unint64_t sub_11EF8C()
{
  unint64_t result = qword_2F0A98;
  if (!qword_2F0A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0A98);
  }
  return result;
}

unint64_t sub_11EFE4()
{
  unint64_t result = qword_2F0AA0;
  if (!qword_2F0AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AA0);
  }
  return result;
}

unint64_t sub_11F03C()
{
  unint64_t result = qword_2F0AA8;
  if (!qword_2F0AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AA8);
  }
  return result;
}

unint64_t sub_11F094()
{
  unint64_t result = qword_2F0AB0;
  if (!qword_2F0AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AB0);
  }
  return result;
}

unint64_t sub_11F0EC()
{
  unint64_t result = qword_2F0AB8;
  if (!qword_2F0AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AB8);
  }
  return result;
}

unint64_t sub_11F144()
{
  unint64_t result = qword_2F0AC0;
  if (!qword_2F0AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AC0);
  }
  return result;
}

unint64_t sub_11F19C()
{
  unint64_t result = qword_2F0AC8;
  if (!qword_2F0AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AC8);
  }
  return result;
}

unint64_t sub_11F1F4()
{
  unint64_t result = qword_2F0AD0;
  if (!qword_2F0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AD0);
  }
  return result;
}

unint64_t sub_11F24C()
{
  unint64_t result = qword_2F0AD8;
  if (!qword_2F0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AD8);
  }
  return result;
}

unint64_t sub_11F2A4()
{
  unint64_t result = qword_2F0AE0;
  if (!qword_2F0AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AE0);
  }
  return result;
}

unint64_t sub_11F2FC()
{
  unint64_t result = qword_2F0AE8;
  if (!qword_2F0AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AE8);
  }
  return result;
}

unint64_t sub_11F350()
{
  unint64_t result = qword_2F0AF0;
  if (!qword_2F0AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0AF0);
  }
  return result;
}

uint64_t sub_11F3A4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB8A0;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

unint64_t sub_11F3F0()
{
  unint64_t result = qword_2F0AF8[0];
  if (!qword_2F0AF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F0AF8);
  }
  return result;
}

uint64_t sub_11F444(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DB980;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_11F490(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DBAF0;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_11F4DC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2DBB88;
  v6._object = a2;
  unint64_t v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t _CodeAnyIntentModel_KeyedBy.description.getter()
{
  return 0;
}

uint64_t _CodeAnyIntentModel_KeyedBy.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_C224(a1, (uint64_t)v12);
  type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  uint64_t v7 = sub_26D2B0();
  if (v3) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  uint64_t v13 = a3;
  __chkstk_darwin(v7);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = (uint64_t)&v11;
  __chkstk_darwin(KeyPath);
  v12[0] = a2;
  swift_getExtendedExistentialTypeMetadata();
  uint64_t v10 = sub_26D290();
  swift_bridgeObjectRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_release();
  *uint64_t v13 = v10;
  return result;
}

uint64_t sub_11F794()
{
  return swift_getAtKeyPath();
}

uint64_t sub_11F7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return _CodeAnyIntentModel_KeyedBy.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t _CodeAnyIntentModel_KeyedBy<>.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_C224(a1, (uint64_t)v8);
  type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  sub_26D260();
  swift_getKeyPath();
  v8[0] = a2;
  swift_getExtendedExistentialTypeMetadata();
  uint64_t v6 = sub_26D290();
  swift_bridgeObjectRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t sub_11F904()
{
  return swift_getAtKeyPath();
}

uint64_t sub_11F930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return _CodeAnyIntentModel_KeyedBy<>.init(_partiallyFrom:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t type metadata accessor for _CodeAnyIntentModel_KeyedBy()
{
  return swift_getGenericMetadata();
}

uint64_t ListItemAccessoryRecommendationControls.init(assetInfo:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;

  return sub_AD44(a1, a2 + 16);
}

uint64_t ListItemAccessoryRecommendationControls.content(contextActionMenuView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v6 = type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EA770);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v36 - v17;
  __chkstk_darwin(v16);
  int v20 = (char *)&v36 - v19;
  uint64_t v37 = (uint64_t)&v36 - v19;
  uint64_t v21 = sub_4A98(&qword_2F0B80);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v23 = sub_26B120();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = sub_4A98(&qword_2F0B88);
  sub_11FD3C(v3, a1, a2, (uint64_t)&v23[*(int *)(v24 + 44)]);
  uint64_t v25 = sub_26AB40();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v27(v20, 1, 1, v25);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v18, enum case for DynamicTypeSize.accessibility3(_:), v25);
  v27(v18, 0, 1, v25);
  uint64_t v28 = (uint64_t)v20;
  uint64_t v29 = (uint64_t)v15;
  sub_B678(v28, (uint64_t)v15, &qword_2EA770);
  uint64_t v30 = v38;
  sub_B678((uint64_t)v18, v38, &qword_2EA770);
  v27(v9, 1, 1, v25);
  uint64_t v31 = (uint64_t)&v9[*(int *)(v7 + 28)];
  v27((char *)v31, 1, 1, v25);
  id v32 = (uint64_t *)&v9[*(int *)(v7 + 32)];
  uint64_t *v32 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  sub_E1FA4(v29, (uint64_t)v9);
  sub_E1FA4(v30, v31);
  uint64_t v33 = sub_4A98(&qword_2F0B90);
  uint64_t v34 = v39;
  sub_12057C((uint64_t)v9, v39 + *(int *)(v33 + 36), (uint64_t (*)(void))type metadata accessor for RestrictedDynamicTypeSizeViewModifier);
  sub_B678((uint64_t)v23, v34, &qword_2F0B80);
  sub_B6DC((uint64_t)v18, &qword_2EA770);
  sub_B6DC(v37, &qword_2EA770);
  return sub_B6DC((uint64_t)v23, &qword_2F0B80);
}

uint64_t sub_11FD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v58 = a2;
  uint64_t v49 = a4;
  uint64_t v48 = sub_26B980();
  uint64_t v5 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for ListItemAccessoryMoreButtonView();
  __chkstk_darwin(v47);
  char v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F0BC8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v56 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v43 - v13;
  uint64_t ButtonView = type metadata accessor for ListItemAccessoryWantToReadButtonView();
  uint64_t v15 = ButtonView - 8;
  uint64_t v16 = __chkstk_darwin(ButtonView);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v20 = (char *)&v43 - v19;
  uint64_t v45 = (uint64_t)&v43 - v19;
  a1 += 16;
  sub_C224(a1, (uint64_t)v62);
  *(void *)&v60[0] = swift_getKeyPath();
  *(long long *)((char *)v60 + 8) = 0u;
  *(long long *)((char *)&v60[1] + 8) = 0u;
  *(long long *)((char *)&v60[2] + 8) = 0u;
  *(long long *)((char *)&v60[3] + 3) = 0u;
  *((void *)&v60[4] + 1) = swift_getKeyPath();
  LOBYTE(v61[0]) = 0;
  sub_AD44(v62, (uint64_t)v61 + 8);
  char v63 = 1;
  v62[6] = v61[1];
  v62[7] = v61[2];
  v62[2] = v60[2];
  v62[3] = v60[3];
  v62[4] = v60[4];
  v62[5] = v61[0];
  v62[0] = v60[0];
  v62[1] = v60[1];
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v55 = v64;
  int v54 = v65;
  uint64_t v53 = v66;
  int v52 = v67;
  uint64_t v50 = v69;
  uint64_t v51 = v68;
  sub_C224(a1, (uint64_t)v60);
  *(void *)uint64_t v18 = swift_getKeyPath();
  v18[8] = 0;
  uint64_t v21 = (uint64_t *)&v18[*(int *)(v15 + 28)];
  uint64_t v46 = v18;
  *uint64_t v21 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = 0x403E000000000000;
  sub_803B4();
  sub_26A820();
  sub_AD44(v60, (uint64_t)&v18[*(int *)(v15 + 36)]);
  sub_12057C((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryWantToReadButtonView);
  sub_C224(a1, (uint64_t)v60);
  uint64_t v59 = 0x4034000000000000;
  uint64_t v22 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v24 = v48;
  v23(v7, enum case for Font.TextStyle.subheadline(_:), v48);
  sub_4F928();
  swift_retain();
  sub_26A810();
  uint64_t v25 = (int *)v47;
  uint64_t v59 = 0x4000000000000000;
  v23(v7, v22, v24);
  sub_26A810();
  uint64_t v26 = (uint64_t *)&v9[v25[6]];
  *uint64_t v26 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)&v9[v25[7]];
  *uint64_t v27 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = &v9[v25[8]];
  *(void *)uint64_t v28 = swift_getKeyPath();
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_OWORD *)(v28 + 40) = 0u;
  *(_OWORD *)(v28 + 51) = 0u;
  uint64_t v29 = (uint64_t *)&v9[v25[9]];
  type metadata accessor for ProfileRestrictions();
  sub_1205EC((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *uint64_t v29 = sub_26AD70();
  v29[1] = v30;
  sub_AD44(v60, (uint64_t)&v9[v25[10]]);
  uint64_t v31 = &v9[v25[11]];
  uint64_t v32 = v44;
  *(void *)uint64_t v31 = v58;
  *((void *)v31 + 1) = v32;
  v9[v25[12]] = 0;
  sub_1205EC((unint64_t *)&qword_2EBA40, (void (*)(uint64_t))type metadata accessor for ListItemAccessoryMoreButtonView);
  uint64_t v33 = (uint64_t)v56;
  sub_26BE90();
  sub_12075C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryMoreButtonView);
  uint64_t v34 = v57;
  sub_120634(v33, v57);
  sub_12069C((uint64_t)v62, (uint64_t)v60);
  uint64_t v36 = v45;
  uint64_t v35 = (uint64_t)v46;
  sub_1206F8(v45, (uint64_t)v46);
  sub_B678(v34, v33, &qword_2F0BC8);
  uint64_t v37 = v49;
  sub_12069C((uint64_t)v60, v49);
  *(void *)(v37 + 136) = 0;
  *(unsigned char *)(v37 + 144) = 1;
  *(void *)(v37 + 152) = v55;
  *(unsigned char *)(v37 + 160) = v54;
  *(void *)(v37 + 168) = v53;
  *(unsigned char *)(v37 + 176) = v52;
  uint64_t v38 = v50;
  *(void *)(v37 + 184) = v51;
  *(void *)(v37 + 192) = v38;
  uint64_t v39 = v37;
  uint64_t v40 = (int *)sub_4A98(qword_2F0BD0);
  sub_1206F8(v35, v39 + v40[16]);
  uint64_t v41 = v39 + v40[20];
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  sub_B678(v33, v39 + v40[24], &qword_2F0BC8);
  sub_B6DC(v34, &qword_2F0BC8);
  sub_12075C(v36, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryWantToReadButtonView);
  sub_1207BC((uint64_t)v62);
  sub_B6DC(v33, &qword_2F0BC8);
  sub_12075C(v35, (uint64_t (*)(void))type metadata accessor for ListItemAccessoryWantToReadButtonView);
  return sub_1207BC((uint64_t)v60);
}

uint64_t sub_120430()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ListItemAccessoryRecommendationControls()
{
  return &type metadata for ListItemAccessoryRecommendationControls;
}

unint64_t sub_120464()
{
  unint64_t result = qword_2F0BB8;
  if (!qword_2F0BB8)
  {
    sub_7B0C(&qword_2F0B90);
    sub_120510();
    sub_1205EC((unint64_t *)&qword_2EF560, (void (*)(uint64_t))type metadata accessor for RestrictedDynamicTypeSizeViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0BB8);
  }
  return result;
}

unint64_t sub_120510()
{
  unint64_t result = qword_2F0BC0;
  if (!qword_2F0BC0)
  {
    sub_7B0C(&qword_2F0B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0BC0);
  }
  return result;
}

uint64_t sub_12057C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1205EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_120634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_12069C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1206F8(uint64_t a1, uint64_t a2)
{
  uint64_t ButtonView = type metadata accessor for ListItemAccessoryWantToReadButtonView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ButtonView - 8) + 16))(a2, a1, ButtonView);
  return a2;
}

uint64_t sub_12075C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1207BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_120810()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1208C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((v7 + ((v6 + 32) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
    uint64_t v17 = (void *)((v7 + v14) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)((v7 + v15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    int v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v19 = *v20;
    *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_120A54(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_120AD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v11, v12, v7);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  uint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_120BD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 40) + 7;
  uint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_120CF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_120DC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 24) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_120EC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 32) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x121038);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6);
  }
  unint64_t v17 = *(void *)(a1 + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_12104C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
              uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)a1 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 32) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x121258);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ReadingInsightsView()
{
  return sub_129B4();
}

uint64_t sub_121298()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1212DC(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  unsigned int v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    unsigned int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      size_t v10 = (long long *)(v5 + 2);
      unsigned int v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *unsigned int v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        int v16 = &v8[8 * v9];
        int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  int v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_26C780();
}

uint64_t sub_1214A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  long long v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_7B0C(&qword_2F0C58);
  swift_getTupleTypeMetadata2();
  sub_26C770();
  swift_getWitnessTable();
  sub_26C440();
  sub_26ABD0();
  sub_7B0C(&qword_2EAEE8);
  sub_26ABD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = &protocol witness table for _PaddingLayout;
  uint64_t v6 = swift_getWitnessTable();
  unint64_t v7 = sub_82C44();
  uint64_t v15 = v6;
  unint64_t v16 = v7;
  swift_getWitnessTable();
  uint64_t v13 = sub_26AA40();
  uint64_t v14 = v8;
  uint64_t v9 = sub_26AA50();
  uint64_t v10 = swift_getWitnessTable();
  sub_CCCC(&v13, v9, v10);
  swift_release();
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  sub_CCCC(&v13, v9, v10);
  return swift_release();
}

uint64_t sub_121760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v42 = a5;
  uint64_t v41 = sub_26A6E0();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7B0C(&qword_2F0C58);
  swift_getTupleTypeMetadata2();
  sub_26C770();
  swift_getWitnessTable();
  uint64_t v9 = sub_26C440();
  uint64_t v34 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_26ABD0();
  uint64_t v37 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  sub_7B0C(&qword_2EAEE8);
  uint64_t v32 = v12;
  uint64_t v35 = sub_26ABD0();
  uint64_t v38 = *(void *)(v35 - 8);
  uint64_t v15 = __chkstk_darwin(v35);
  uint64_t v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v36 = (char *)&v31 - v17;
  sub_26B1D0();
  type metadata accessor for ReadingInsightsView();
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = v33;
  sub_26C430();
  LOBYTE(v12) = sub_26B770();
  sub_26B7A0();
  sub_26B7A0();
  if (sub_26B7A0() != v12) {
    sub_26B7A0();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_26C000();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  swift_getKeyPath();
  uint64_t v19 = v39;
  uint64_t v20 = v40;
  uint64_t v21 = v41;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v40, enum case for ColorScheme.dark(_:), v41);
  uint64_t v49 = WitnessTable;
  uint64_t v50 = &protocol witness table for _PaddingLayout;
  uint64_t v22 = v32;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = v31;
  sub_26BCB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v22);
  unint64_t v25 = sub_82C44();
  uint64_t v47 = v23;
  unint64_t v48 = v25;
  uint64_t v26 = v35;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = v36;
  sub_CCCC(v24, v26, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v38 + 8);
  v29(v24, v26);
  sub_CCCC(v28, v26, v27);
  return ((uint64_t (*)(char *, uint64_t))v29)(v28, v26);
}

uint64_t sub_121C9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v54 = a4;
  uint64_t v52 = a3;
  uint64_t v55 = a2;
  uint64_t v61 = a5;
  uint64_t v62 = *(void *)(a3 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  double v60 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)&v48 - v8;
  uint64_t v51 = sub_26AB40();
  uint64_t v9 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unsigned int v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TextLockup();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = sub_4A98(&qword_2F0C58);
  uint64_t v18 = __chkstk_darwin(v56);
  uint64_t v58 = (uint64_t)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v53 = (uint64_t)&v48 - v21;
  __chkstk_darwin(v20);
  uint64_t v57 = (uint64_t)&v48 - v22;
  uint64_t v23 = a1[1];
  uint64_t v50 = *a1;
  uint64_t v24 = a1[3];
  uint64_t v49 = a1[2];
  uint64_t v25 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_26B1D0();
  uint64_t v27 = sub_26C650();
  uint64_t v29 = v28;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.accessibility2(_:), v51);
  uint64_t v47 = v29;
  uint64_t v30 = v52;
  uint64_t v31 = v23;
  uint64_t v32 = v54;
  sub_1DC1D0(5, 0, 0, v50, v31, v49, v24, (uint64_t)v14, v17, v26, v27, v47, 0, (uint64_t)v11);
  sub_26A940();
  uint64_t v33 = type metadata accessor for ReadingInsightsView();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26AC90();
  uint64_t v34 = v53;
  sub_12241C((uint64_t)v17, v53);
  uint64_t v35 = v56;
  uint64_t v36 = (_OWORD *)(v34 + *(int *)(v56 + 36));
  long long v37 = v72;
  v36[4] = v71;
  v36[5] = v37;
  v36[6] = v73;
  long long v38 = v68;
  *uint64_t v36 = v67;
  v36[1] = v38;
  long long v39 = v70;
  _OWORD v36[2] = v69;
  v36[3] = v39;
  sub_1129D8((uint64_t)v17);
  uint64_t v40 = v57;
  sub_122480(v34, v57);
  uint64_t v41 = v59;
  sub_CCCC((char *)a1 + *(int *)(v33 + 40), v30, v32);
  uint64_t v42 = v58;
  sub_1224E8(v40, v58);
  v66[0] = v42;
  uint64_t v43 = v62;
  uint64_t v44 = v60;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v60, v41, v30);
  v66[1] = v44;
  v65[0] = v35;
  v65[1] = v30;
  unint64_t v63 = sub_122550();
  uint64_t v64 = v32;
  sub_1212DC((uint64_t)v66, 2uLL, (uint64_t)v65);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v43 + 8);
  v45(v41, v30);
  sub_122624(v40);
  v45(v44, v30);
  return sub_122624(v42);
}

uint64_t sub_122274()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ReadingInsightsView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[12], v1);

  return swift_deallocObject();
}

uint64_t sub_12236C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ReadingInsightsView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_121760(a1, v8, v5, v6, a2);
}

uint64_t sub_122408@<X0>(uint64_t a1@<X8>)
{
  return sub_121C9C(*(uint64_t **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_12241C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_122480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1224E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_122550()
{
  unint64_t result = qword_2F0C60;
  if (!qword_2F0C60)
  {
    sub_7B0C(&qword_2F0C58);
    sub_1225CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0C60);
  }
  return result;
}

unint64_t sub_1225CC()
{
  unint64_t result = qword_2EF240;
  if (!qword_2EF240)
  {
    type metadata accessor for TextLockup();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF240);
  }
  return result;
}

uint64_t sub_122624(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F0C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_122684()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of ListItemAccessory.content(contextActionMenuView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t _CodeAnyComponentModel_OrNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return sub_12280C(a1, a2);
}

uint64_t sub_12280C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _CodeAnyComponentModel_OrNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_122880(v1, a1);
}

uint64_t sub_122880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _CodeAnyComponentModel_OrNil.wrappedValue.setter(uint64_t a1)
{
  return sub_12280C(a1, v1);
}

uint64_t _CodeAnyComponentModel_OrNil.description.getter()
{
  sub_122880(v0, (uint64_t)&v3);
  if (v4)
  {
    sub_AD44(&v3, (uint64_t)v5);
    *(void *)&long long v3 = 0;
    *((void *)&v3 + 1) = 0xE000000000000000;
    sub_4A98(&qword_2EADC0);
    sub_26DB80();
    uint64_t v1 = v3;
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v5);
  }
  else
  {
    sub_B6DC((uint64_t)&v3, &qword_2F0C68);
    return 7104878;
  }
  return v1;
}

uint64_t _CodeAnyComponentModel_OrNil.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)&v6);
  sub_7A234();
  sub_26D990();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v2) {
    return sub_3FC28(a2);
  }
  if (v8)
  {
    sub_C224((uint64_t)v7, (uint64_t)v9);
    sub_7A5EC((uint64_t)v7);
  }
  else
  {
    sub_B6DC((uint64_t)v7, &qword_2F0C70);
    memset(v9, 0, sizeof(v9));
    uint64_t v10 = 0;
  }
  return sub_12280C((uint64_t)v9, a2);
}

uint64_t _CodeAnyComponentModel_OrNil.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_C224(a1, (uint64_t)v7);
  sub_7A234();
  sub_26D970();
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  if (v6)
  {
    sub_C224((uint64_t)v5, (uint64_t)v7);
    sub_7A5EC((uint64_t)v5);
  }
  else
  {
    sub_B6DC((uint64_t)v5, &qword_2F0C70);
    memset(v7, 0, sizeof(v7));
    uint64_t v8 = 0;
  }
  return sub_12280C((uint64_t)v7, a2);
}

uint64_t sub_122B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return _CodeAnyComponentModel_OrNil.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for _CodeAnyComponentModel_OrNil()
{
  return &type metadata for _CodeAnyComponentModel_OrNil;
}

uint64_t sub_122B4C()
{
  if (qword_2E9C68 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F0D08;
  uint64_t v1 = qword_2E9C58;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_2F0CF8;
  swift_bridgeObjectRetain_n();
  sub_123700(&v3);
  uint64_t result = swift_bridgeObjectRelease_n();
  qword_2F0C78 = v0;
  unk_2F0C80 = v3;
  qword_2F0C88 = 0;
  unk_2F0C90 = 0;
  return result;
}

uint64_t static ShelfGridType.c.getter@<X0>(void *a1@<X8>)
{
  if (qword_2E9C38 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2F0C80;
  uint64_t v3 = qword_2F0C88;
  uint64_t v4 = unk_2F0C90;
  *a1 = qword_2F0C78;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_72940(v3);
}

uint64_t sub_122CD0()
{
  if (qword_2E9C70 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F0D10;
  uint64_t v1 = qword_2E9C58;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_2F0CF8;
  swift_bridgeObjectRetain_n();
  sub_123700(&v3);
  uint64_t result = swift_bridgeObjectRelease_n();
  qword_2F0C98 = v0;
  unk_2F0CA0 = v3;
  qword_2F0CA8 = 0;
  unk_2F0CB0 = 0;
  return result;
}

uint64_t static ShelfGridType.d.getter@<X0>(void *a1@<X8>)
{
  if (qword_2E9C40 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2F0CA0;
  uint64_t v3 = qword_2F0CA8;
  uint64_t v4 = unk_2F0CB0;
  *a1 = qword_2F0C98;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_72940(v3);
}

uint64_t sub_122E54()
{
  if (qword_2E9C78 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2F0D18;
  uint64_t v1 = qword_2E9C60;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2F0D00;
  uint64_t v3 = qword_2E9C70;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_2F0D10;
  uint64_t v5 = qword_2E9C58;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_2F0CF8;
  uint64_t v9 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_123700(&v9);
  swift_bridgeObjectRelease();
  uint64_t v7 = v9;
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  sub_123700(&v9);
  uint64_t result = swift_bridgeObjectRelease();
  qword_2F0CB8 = v0;
  unk_2F0CC0 = v7;
  qword_2F0CC8 = v4;
  unk_2F0CD0 = v9;
  return result;
}

uint64_t static ShelfGridType.e.getter@<X0>(void *a1@<X8>)
{
  if (qword_2E9C48 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2F0CC0;
  uint64_t v3 = qword_2F0CC8;
  uint64_t v4 = unk_2F0CD0;
  *a1 = qword_2F0CB8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_72940(v3);
}

uint64_t sub_123084()
{
  unint64_t v0 = sub_B434((uint64_t)_swiftEmptyArrayStorage);
  if (qword_2E9C58 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2F0CF8;
  swift_bridgeObjectRetain_n();
  sub_123700(&v2);
  uint64_t result = swift_bridgeObjectRelease_n();
  qword_2F0CD8 = v0;
  unk_2F0CE0 = v2;
  qword_2F0CE8 = 0;
  unk_2F0CF0 = 0;
  return result;
}

uint64_t static ShelfGridType.vertical.getter@<X0>(void *a1@<X8>)
{
  if (qword_2E9C50 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2F0CE0;
  uint64_t v3 = qword_2F0CE8;
  uint64_t v4 = unk_2F0CF0;
  *a1 = qword_2F0CD8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_72940(v3);
}

uint64_t destroy for ShelfGridType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ShelfGridType(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  return a1;
}

void *assignWithCopy for ShelfGridType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      a1[2] = v4;
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v4)
  {
    sub_123390((uint64_t)(a1 + 2));
    goto LABEL_7;
  }
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_123390(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2ED0D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for ShelfGridType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  if (!a1[2]) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_123390((uint64_t)(a1 + 2));
LABEL_5:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = v4;
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridType(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridType()
{
  return &type metadata for ShelfGridType;
}

double sub_12351C()
{
  sub_4A98(&qword_2EADE0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 6;
  *(_OWORD *)(v0 + 16) = xmmword_279670;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0x4074000000000000;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0x407C200000000000;
  *(unsigned char *)(v0 + 64) = 3;
  *(void *)(v0 + 72) = 0x4089000000000000;
  *(unsigned char *)(v0 + 80) = 4;
  *(void *)(v0 + 88) = 0x408F400000000000;
  *(unsigned char *)(v0 + 96) = 5;
  *(void *)(v0 + 104) = 0x4092C00000000000;
  *(unsigned char *)(v0 + 112) = 6;
  *(void *)(v0 + 120) = 0x4095E00000000000;
  qword_2F0CF8 = v0;
  return result;
}

double sub_1235C8()
{
  sub_4A98(&qword_2EADE0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 7;
  *(_OWORD *)(v0 + 16) = xmmword_270F80;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0x4074000000000000;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0x407C200000000000;
  *(unsigned char *)(v0 + 64) = 2;
  *(void *)(v0 + 72) = 0x4085E00000000000;
  *(unsigned char *)(v0 + 80) = 3;
  *(void *)(v0 + 88) = 0x4089000000000000;
  *(unsigned char *)(v0 + 96) = 4;
  *(void *)(v0 + 104) = 0x408F400000000000;
  *(unsigned char *)(v0 + 112) = 5;
  *(void *)(v0 + 120) = 0x4092C00000000000;
  *(unsigned char *)(v0 + 128) = 6;
  *(void *)(v0 + 136) = 0x4095E00000000000;
  qword_2F0D00 = v0;
  return result;
}

unint64_t sub_123688()
{
  unint64_t result = sub_B434((uint64_t)&off_2DBBF0);
  qword_2F0D08 = result;
  return result;
}

unint64_t sub_1236B0()
{
  unint64_t result = sub_B434((uint64_t)&off_2DBC70);
  qword_2F0D10 = result;
  return result;
}

unint64_t sub_1236D8()
{
  unint64_t result = sub_B434((uint64_t)&off_2DBCF0);
  qword_2F0D18 = result;
  return result;
}

Swift::Int sub_123700(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1242A8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_12376C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_12376C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_26DD40(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (v88 >= *(double *)v90) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          char v91 = *(unsigned char *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(unsigned char *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      long long v93 = v12;
      long long v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          long long v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_123E50((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v96 = sub_124294((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          long long v99 = &v96[16 * v95 + 32];
          *(void *)long long v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          long long v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_4A98(&qword_2F0D20);
    uint64_t v8 = sub_26D650();
    *(void *)(v8 + 16) = v7;
    long long v103 = (void *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              char v25 = *(unsigned char *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(unsigned char *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      Swift::Int v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        Swift::Int v30 = v14;
        uint64_t v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          char v32 = *(unsigned char *)v31;
          *(_OWORD *)uint64_t v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *((unsigned char *)v31 - 16) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      Swift::Int v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1240DC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_1240DC((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            long long v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        long long v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        long long v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_123E50((double *)(v11 + 16 * *(void *)v78), (double *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_26DB90();
  __break(1u);
  return result;
}

uint64_t sub_123E50(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  char v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[2 * v13];
      Swift::Int v23 = (char *)v18;
      char v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (double *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 2;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            Swift::Int v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 2;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            char v25 = v6 - 2;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 2;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1241D8((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    Swift::Int v14 = &v4[2 * v10];
    Swift::Int v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      double v15 = v4;
      while (1)
      {
        if (v6[1] >= v15[1])
        {
          uint64_t v4 = v15 + 2;
          uint64_t v17 = v15;
          double v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          double v16 = v6 + 2;
          uint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          Swift::Int v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        char v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

char *sub_1240DC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4A98(&qword_2F0D28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  Swift::Int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1241D8(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_26DBE0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_124294(uint64_t a1)
{
  return sub_1240DC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1242A8(uint64_t a1)
{
  return sub_2C370(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t QuickActionBuyButtonView.init(assetInfo:stretchWidth:isEnabled:localizerForAnalytics:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_C224(a1, (uint64_t)v15);
  sub_B678(a4, (uint64_t)v14, &qword_2EBCC8);
  QuickActionBuyButtonViewModel.init(assetInfo:stretchWidth:isEnabled:localizerForAnalytics:)((uint64_t)v15, a2, a3, (uint64_t)v14, (uint64_t)v12);
  sub_B6DC(a4, &qword_2EBCC8);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  return sub_1248B0((uint64_t)v12, a5, type metadata accessor for QuickActionBuyButtonViewModel);
}

uint64_t type metadata accessor for QuickActionBuyButtonViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F0E30);
}

uint64_t QuickActionBuyButtonViewModel.init(assetInfo:stretchWidth:isEnabled:localizerForAnalytics:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v48 = a1;
  int v45 = a2;
  int v46 = a3;
  uint64_t v6 = sub_26B980();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ButtonViewModel(0);
  double v15 = (int *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  double v19 = (void *)(a5 + *(int *)(v18 + 28));
  void *v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v18;
  uint64_t v21 = a5 + *(int *)(v18 + 32);
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 51) = 0u;
  Swift::Int v22 = (uint64_t *)(a5 + *(int *)(v20 + 36));
  *Swift::Int v22 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = *(int *)(v20 + 40);
  uint64_t v24 = v20;
  uint64_t v41 = a5;
  uint64_t v42 = v20;
  char v25 = (uint64_t *)(a5 + v23);
  type metadata accessor for ProfileRestrictions();
  sub_12929C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *char v25 = sub_26AD70();
  v25[1] = v26;
  sub_C224(v48, a5 + *(int *)(v24 + 20));
  uint64_t v38 = v13;
  sub_26A210();
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = v10;
  *((void *)v10 + 4) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = 0x403C000000000000;
  uint64_t v27 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v28 = v44;
  double v29 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
  Swift::Int v30 = v40;
  v29(v40, enum case for Font.TextStyle.subheadline(_:), v44);
  sub_4F928();
  sub_26A810();
  uint64_t v49 = 0x4008000000000000;
  v29(v30, v27, v28);
  sub_26A810();
  uint64_t v31 = (uint64_t *)&v17[v15[8]];
  *uint64_t v31 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  char v32 = &v17[v15[16]];
  uint64_t v33 = sub_26A220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  v17[v15[9]] = v45;
  v17[v15[10]] = 1;
  v17[v15[11]] = 0;
  unint64_t v34 = &v17[v15[12]];
  *(void *)unint64_t v34 = 2;
  *((void *)v34 + 1) = 0;
  *((void *)v34 + 2) = 0;
  *((void *)v34 + 3) = 0;
  sub_1248B0((uint64_t)v38, (uint64_t)&v17[v15[13]], type metadata accessor for ButtonViewModel.Content);
  v17[v15[14]] = v46;
  sub_1248B0((uint64_t)v39, (uint64_t)&v17[v15[15]], type metadata accessor for ButtonViewModel.ActionKind);
  _s7BooksUI13AnyPagedFrameVwxx_0(v48);
  uint64_t v35 = v41;
  sub_1248B0((uint64_t)v17, v41, type metadata accessor for ButtonViewModel);
  return sub_19CC4(v47, v35 + *(int *)(v42 + 24), &qword_2EBCC8);
}

uint64_t sub_1248B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t QuickActionBuyButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v41 = sub_26CF30();
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ButtonViewModel(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v33 = v12;
  uint64_t v13 = type metadata accessor for ButtonView();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2F0D30);
  __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_129004(v2, (uint64_t)v12, type metadata accessor for ButtonViewModel);
  *(void *)&v54[0] = 0x4020000000000000;
  uint64_t v18 = enum case for Font.TextStyle.subheadline(_:);
  double v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v19(v9, enum case for Font.TextStyle.subheadline(_:), v6);
  sub_4F928();
  sub_26A810();
  *(void *)&v54[0] = 0x3FF8000000000000;
  v19(v9, v18, v6);
  sub_26A810();
  uint64_t v20 = (uint64_t *)&v16[*(int *)(v14 + 32)];
  uint64_t *v20 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD8);
  swift_storeEnumTagMultiPayload();
  sub_1248B0(v33, (uint64_t)&v16[*(int *)(v14 + 36)], type metadata accessor for ButtonViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v34;
  sub_129004((uint64_t)v16, v34, (uint64_t (*)(void))type metadata accessor for ButtonView);
  uint64_t v23 = v22 + *(int *)(v35 + 36);
  *(void *)uint64_t v23 = KeyPath;
  *(unsigned char *)(v23 + 8) = 1;
  sub_129174((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ButtonView);
  uint64_t v24 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  char v25 = (void *)(v36 + v24[5]);
  uint64_t v26 = v36 + v24[8];
  uint64_t v27 = v36;
  long long v28 = *(_OWORD *)(v26 + 48);
  v54[2] = *(_OWORD *)(v26 + 32);
  *(_OWORD *)uint64_t v55 = v28;
  *(_DWORD *)&v55[15] = *(_DWORD *)(v26 + 63);
  long long v29 = *(_OWORD *)(v26 + 16);
  v54[0] = *(_OWORD *)v26;
  v54[1] = v29;
  sub_44FD8((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)&v48);
  sub_44FD8((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  uint64_t v42 = v48;
  long long v33 = v49;
  long long v43 = v49;
  long long v44 = v50;
  long long v45 = v51;
  uint64_t v46 = v52;
  __int16 v47 = v53;
  uint64_t v30 = v37;
  static SeriesQuickActionButtonViewModel.impressionMetricsForSamples(for:in:with:)(v25, (uint64_t)&v42, *(void *)(v27 + v24[7]), *(void *)(v27 + v24[7] + 8), v37);
  swift_bridgeObjectRelease();
  uint64_t v31 = v38;
  sub_26CF20();
  sub_12906C();
  sub_26BB20();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  sub_B6DC(v30, &qword_2EBFE8);
  return sub_B6DC(v22, &qword_2F0D30);
}

Swift::Void __swiftcall QuickActionBuyButtonViewModel.update()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v116[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v138 = sub_26A220();
  uint64_t v136 = *(void *)(v138 - 8);
  uint64_t v5 = __chkstk_darwin(v138);
  uint64_t v123 = &v116[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v125 = &v116[-v7];
  uint64_t v8 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v134 = &v116[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v127 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v127);
  uint64_t v128 = &v116[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_4A98(&qword_2F0D40);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v142 = &v116[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v126 = &v116[-v15];
  __chkstk_darwin(v14);
  uint64_t v143 = &v116[-v16];
  uint64_t v17 = type metadata accessor for ButtonViewModel.Content(0);
  uint64_t v18 = __chkstk_darwin(v17);
  char v122 = (uint64_t *)&v116[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v121 = &v116[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v124 = &v116[-v23];
  __chkstk_darwin(v22);
  uint64_t v144 = (unint64_t *)&v116[-v24];
  uint64_t v141 = (void *)sub_269EA0();
  uint64_t v25 = *(v141 - 1);
  uint64_t v26 = __chkstk_darwin(v141);
  uint64_t v140 = &v116[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  long long v29 = &v116[-v28];
  uint64_t v30 = sub_4A98(&qword_2F46A0);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v137 = &v116[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  uint64_t v147 = &v116[-v33];
  uint64_t v34 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v35 = (long long *)(v0 + v34[8]);
  long long v36 = v35[3];
  v160[2] = v35[2];
  v161[0] = v36;
  *(_DWORD *)((char *)v161 + 15) = *(_DWORD *)((char *)v35 + 63);
  long long v37 = *v35;
  v160[1] = v35[1];
  v160[0] = v37;
  sub_44FD8((uint64_t)v160, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)&v150);
  sub_44FD8((uint64_t)v160, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  if (!*((void *)&v150 + 1))
  {
    uint64_t v47 = type metadata accessor for ButtonViewModel(0);
    sub_129174(v1 + *(int *)(v47 + 44), type metadata accessor for ButtonViewModel.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v1 + *(int *)(v47 + 52);
    sub_129174(v48, type metadata accessor for ButtonViewModel.ActionKind);
    *(_OWORD *)uint64_t v48 = 0u;
    *(_OWORD *)(v48 + 16) = 0u;
    *(void *)(v48 + 32) = 0;
    swift_storeEnumTagMultiPayload();
    return;
  }
  uint64_t v130 = v17;
  uint64_t v131 = *((void *)&v150 + 1);
  uint64_t v132 = v4;
  uint64_t v133 = v2;
  unint64_t v38 = *((void *)&v151 + 1);
  unsigned __int8 v39 = v151;
  long long v155 = v150;
  LOBYTE(v156) = v151;
  *((void *)&v156 + 1) = *((void *)&v151 + 1);
  uint64_t v120 = v152;
  LOWORD(v157) = v152 & 0xFF01;
  *((void *)&v157 + 1) = *((void *)&v152 + 1);
  LOBYTE(v158) = v153 & 1;
  uint64x2_t v40 = (uint64x2_t)vdupq_n_s64(v153);
  int16x8_t v41 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v40, (uint64x2_t)xmmword_2796A0), (int32x4_t)vshlq_u64(v40, (uint64x2_t)xmmword_279690));
  *(int8x8_t *)v41.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v41), (int8x8_t)0x1000100010001);
  *(_DWORD *)((char *)&v158 + 1) = vmovn_s16(v41).u32[0];
  *((void *)&v158 + 1) = *((void *)&v153 + 1);
  __int16 v159 = v154 & 0x101;
  uint64_t v42 = (void *)(v0 + v34[5]);
  sub_4ADC(v42, v42[3]);
  char v43 = sub_269F30();
  uint64_t v146 = v0;
  uint64_t v135 = v34;
  unint64_t v118 = v38;
  if (v43)
  {
    long long v44 = *(void **)(v0 + v34[10]);
    if (!v44)
    {
      type metadata accessor for ProfileRestrictions();
      sub_12929C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
      sub_26AD60();
      __break(1u);
      return;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v45 = v44;
    sub_26A590();

    swift_release();
    swift_release();
    char v46 = v150;
  }
  else
  {
    char v46 = 1;
  }
  uint64_t v49 = v39;
  unint64_t v145 = (int *)type metadata accessor for ButtonViewModel(0);
  *(unsigned char *)(v146 + v145[12]) = v46;
  sub_4ADC(v42, v42[3]);
  uint64_t v119 = sub_269DB0();
  uint64_t v129 = v50;
  sub_4ADC(v42, v42[3]);
  sub_269F20();
  int v117 = sub_26A050();
  sub_4ADC(v42, v42[3]);
  id v139 = (id)sub_269DD0();
  sub_4ADC(v42, v42[3]);
  long long v51 = (void *)sub_269DD0();
  if (v51)
  {
    uint64_t v52 = v51;
    id v53 = [v51 bookSampleDownloadURL];

    if (v53)
    {
      uint64_t v54 = (uint64_t)v137;
      sub_2696A0();

      uint64_t v55 = sub_2696C0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
    }
    else
    {
      uint64_t v58 = sub_2696C0();
      uint64_t v54 = (uint64_t)v137;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v137, 1, 1, v58);
    }
    uint64_t v57 = v146;
    sub_19CC4(v54, (uint64_t)v147, &qword_2F46A0);
  }
  else
  {
    uint64_t v56 = sub_2696C0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v147, 1, 1, v56);
    uint64_t v57 = v146;
  }
  sub_4ADC(v42, v42[3]);
  sub_269FE0();
  char v60 = v140;
  uint64_t v59 = v141;
  (*(void (**)(unsigned char *, void, void *))(v25 + 104))(v140, enum case for SeriesOrdering.orderedSeries(_:), v141);
  char v61 = sub_269E90();
  uint64_t v62 = *(void (**)(unsigned char *, void *))(v25 + 8);
  v62(v60, v59);
  v62(v29, v59);
  if (v49 == 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v144;
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = type metadata accessor for AssetAction(0);
    BOOL v65 = v143;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v143, 1, 1, v64);
  }
  else
  {
    BOOL v65 = v143;
    uint64_t v63 = v144;
    if (v120)
    {
      if (v49 > 1)
      {
        sub_4ADC(v42, v42[3]);
        if (sub_26A040())
        {
          sub_1277A8(v117 & 1, v42, (uint64_t)v125);
          if ((v61 & 1) == 0 || (sub_4ADC(v42, v42[3]), sub_269FD0(), (v91 & 0x100000000) != 0))
          {
            sub_4A98(&qword_2EE448);
            uint64_t v101 = v57;
            uint64_t v102 = v121;
            uint64_t v141 = *(void **)(v136 + 16);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v141)(v121, v125, v138);
            sub_4ADC(v42, v42[3]);
            sub_26A020();
            sub_26A210();
            uint64_t v92 = (uint64_t)v102;
            uint64_t v57 = v101;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v92 = (uint64_t)v121;
            uint64_t v141 = *(void **)(v136 + 16);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v141)(v121, v125, v138);
          }
          uint64_t v76 = (uint64_t)v132;
          uint64_t v77 = (uint64_t)v142;
          long long v103 = v135;
          swift_storeEnumTagMultiPayload();
          sub_1248B0(v92, (uint64_t)v63, type metadata accessor for ButtonViewModel.Content);
          id v104 = v139;
          if (v139)
          {
            *uint64_t v128 = v139;
            swift_storeEnumTagMultiPayload();
            Swift::Int v105 = v103;
            uint64_t v106 = v136;
            uint64_t v107 = (uint64_t)v134;
            uint64_t v108 = v138;
            ((void (*)(char *, unsigned char *, uint64_t))v141)(v134, v125, v138);
            uint64_t v109 = v106;
            long long v103 = v105;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v107, 0, 1, v108);
            id v110 = v104;
            BOOL v65 = v143;
            long long v111 = v128;
            sub_126354((uint64_t)v128, v107, (unint64_t)&v155, v57, v119, v129, (uint64_t)v143);
            sub_B6DC(v107, &qword_2EA0C0);
            sub_129174((uint64_t)v111, type metadata accessor for AssetAction.Kind);
            uint64_t v112 = type metadata accessor for AssetAction(0);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v65, 0, 1, v112);
          }
          else
          {
            uint64_t v113 = type metadata accessor for AssetAction(0);
            BOOL v65 = v143;
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v143, 1, 1, v113);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_B678(v57 + v103[6], (uint64_t)&v148, &qword_2EBCC8);
          if (v149)
          {
            sub_AD44(&v148, (uint64_t)&v150);
            long long v114 = v125;
            uint64_t v74 = sub_26A200();
            uint64_t v75 = v115;
            _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v150);
            (*(void (**)(unsigned char *, uint64_t))(v136 + 8))(v114, v138);
          }
          else
          {
            (*(void (**)(unsigned char *, uint64_t))(v136 + 8))(v125, v138);
            sub_B6DC((uint64_t)&v148, &qword_2EBCC8);
            uint64_t v74 = 0;
            uint64_t v75 = 0;
          }
        }
        else
        {
          uint64_t v81 = v123;
          sub_127FD0(v117 & 1, v42, (uint64_t)v123);
          if ((v61 & 1) == 0 || (sub_4ADC(v42, v42[3]), sub_269FD0(), (v82 & 0x100000000) != 0))
          {
            sub_4A98(&qword_2EE448);
            long long v93 = v122;
            uint64_t v94 = *(void (**)(char *, unsigned char *, uint64_t))(v136 + 16);
            v94((char *)v122, v81, v138);
            sub_4ADC(v42, v42[3]);
            uint64_t v81 = v123;
            sub_26A020();
            uint64_t v85 = (uint64_t)v93;
            sub_26A210();
            uint64_t v87 = v94;
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v117) {
              uint64_t v83 = 0x6E6F687064616568;
            }
            else {
              uint64_t v83 = 0x6761702E6B6F6F62;
            }
            uint64_t v84 = sub_4A98(&qword_2EE438);
            uint64_t v85 = (uint64_t)v122;
            uint64_t v86 = (char *)v122 + *(int *)(v84 + 48);
            uint64_t *v122 = v83;
            *(void *)(v85 + 8) = 0xEA00000000007365;
            uint64_t v87 = *(void (**)(char *, unsigned char *, uint64_t))(v136 + 16);
            v87(v86, v81, v138);
          }
          uint64_t v76 = (uint64_t)v132;
          uint64_t v77 = (uint64_t)v142;
          swift_storeEnumTagMultiPayload();
          sub_1248B0(v85, (uint64_t)v144, type metadata accessor for ButtonViewModel.Content);
          uint64_t v95 = (uint64_t)v134;
          uint64_t v96 = v138;
          v87(v134, v81, v138);
          uint64_t v97 = v136;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v136 + 56))(v95, 0, 1, v96);
          BOOL v65 = v143;
          uint64_t v98 = v81;
          sub_126F00(v95, v117 & 1, (uint64_t)v147, (unint64_t)&v155, v57, v119, v129, (uint64_t)v143);
          swift_bridgeObjectRelease();
          sub_B6DC(v95, &qword_2EA0C0);
          swift_bridgeObjectRelease();
          sub_B678(v57 + v135[6], (uint64_t)&v148, &qword_2EBCC8);
          uint64_t v99 = v97;
          if (v149)
          {
            sub_AD44(&v148, (uint64_t)&v150);
            uint64_t v74 = sub_26A200();
            uint64_t v75 = v100;
            _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v150);
            (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v98, v138);
          }
          else
          {
            (*(void (**)(unsigned char *, uint64_t))(v97 + 8))(v98, v138);
            sub_B6DC((uint64_t)&v148, &qword_2EBCC8);
            uint64_t v74 = 0;
            uint64_t v75 = 0;
          }
          uint64_t v63 = v144;
        }
        goto LABEL_22;
      }
      char v66 = v117;
      if ((v117 & (v118 > 2)) != 1)
      {
        sub_4A98(&qword_2EE448);
        uint64_t v88 = v57;
        uint64_t v89 = v124;
        long long v152 = v157;
        long long v153 = v158;
        __int16 v154 = v159;
        long long v150 = v155;
        long long v151 = v156;
        sub_1274C4();
        sub_4ADC(v42, v42[3]);
        uint64_t v63 = v144;
        sub_26A020();
        sub_26A210();
        swift_bridgeObjectRelease();
        swift_storeEnumTagMultiPayload();
        uint64_t v90 = (uint64_t)v89;
        uint64_t v57 = v88;
        sub_1248B0(v90, (uint64_t)v63, type metadata accessor for ButtonViewModel.Content);
        sub_127278((unint64_t)&v155, v88, v119, v129, v66 & 1, (uint64_t)v147, (uint64_t)v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_4A98(&qword_2EE438);
      uint64_t v67 = (uint64_t)v124;
      *uint64_t v124 = 0xD000000000000015;
      *(void *)(v67 + 8) = 0x8000000000289E90;
      sub_4ADC(v42, v42[3]);
      sub_26A020();
      sub_26A210();
      swift_bridgeObjectRelease();
      swift_storeEnumTagMultiPayload();
      sub_1248B0(v67, (uint64_t)v63, type metadata accessor for ButtonViewModel.Content);
      long long v68 = v128;
      *uint64_t v128 = 0;
      v68[1] = 0;
      *((unsigned char *)v68 + 16) = 1;
      id v69 = v139;
      v68[3] = v139;
    }
    else
    {
      *uint64_t v144 = v118;
      swift_storeEnumTagMultiPayload();
      long long v68 = v128;
      id v69 = v139;
      *uint64_t v128 = v139;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v134, 1, 1, v138);
    id v71 = v69;
    long long v72 = v126;
    sub_126354((uint64_t)v68, v70, (unint64_t)&v155, v57, v119, v129, (uint64_t)v126);
    swift_bridgeObjectRelease();
    sub_B6DC(v70, &qword_2EA0C0);
    sub_129174((uint64_t)v68, type metadata accessor for AssetAction.Kind);
    swift_bridgeObjectRelease();
    uint64_t v73 = type metadata accessor for AssetAction(0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
    sub_19CC4((uint64_t)v72, (uint64_t)v65, &qword_2F0D40);
  }
LABEL_21:
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = (uint64_t)v132;
  uint64_t v77 = (uint64_t)v142;
LABEL_22:
  sub_1291D4((uint64_t)v63, v57 + v145[11]);
  sub_B678((uint64_t)v65, v77, &qword_2F0D40);
  uint64_t v78 = type metadata accessor for AssetAction(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48))(v77, 1, v78) == 1)
  {

    sub_B6DC((uint64_t)v65, &qword_2F0D40);
    sub_129174((uint64_t)v63, type metadata accessor for ButtonViewModel.Content);
    sub_B6DC((uint64_t)v147, &qword_2F46A0);
    sub_B6DC(v77, &qword_2F0D40);
    *(_OWORD *)uint64_t v76 = 0u;
    *(_OWORD *)(v76 + 16) = 0u;
    *(void *)(v76 + 32) = 0;
  }
  else
  {
    *(void *)(v76 + 24) = v78;
    *(void *)(v76 + 32) = sub_12929C(&qword_2EF798, (void (*)(uint64_t))type metadata accessor for AssetAction);
    uint64_t v79 = sub_CA1C((uint64_t *)v76);
    sub_1248B0(v77, (uint64_t)v79, type metadata accessor for AssetAction);

    sub_B6DC((uint64_t)v65, &qword_2F0D40);
    sub_129174((uint64_t)v63, type metadata accessor for ButtonViewModel.Content);
    sub_B6DC((uint64_t)v147, &qword_2F46A0);
  }
  swift_storeEnumTagMultiPayload();
  sub_129238(v76, v57 + v145[13]);
  uint64_t v80 = (uint64_t *)(v57 + v135[7]);
  swift_bridgeObjectRelease();
  uint64_t *v80 = v74;
  v80[1] = v75;
}

uint64_t sub_126354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)&long long v93 = a5;
  *((void *)&v93 + 1) = a6;
  uint64_t v86 = a4;
  unint64_t v79 = a3;
  uint64_t v77 = a2;
  uint64_t v90 = a7;
  uint64_t v97 = sub_269840();
  uint64_t v89 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v88 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v9 - 8);
  uint64_t v87 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  __chkstk_darwin(v80);
  uint64_t v83 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v12 - 8);
  uint64_t v91 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v78 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AssetAction.Kind(0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v85 = (uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (id *)((char *)&v76 - v22);
  uint64_t v96 = sub_26CB80();
  uint64_t v84 = *(void *)(v96 - 8);
  uint64_t v24 = __chkstk_darwin(v96);
  uint64_t v95 = (uint64_t)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v98 = (uint64_t)&v76 - v26;
  uint64_t v27 = sub_269C00();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_269CC0();
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_269CE0();
  uint64_t v81 = *(void *)(v34 - 8);
  uint64_t v82 = v34;
  __chkstk_darwin(v34);
  long long v36 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssetAction.Kind.appAnalyticsClickTargetType.getter((uint64_t)v33);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for LinkActionType.click(_:), v27);
  uint64_t v94 = v36;
  sub_269CD0();
  uint64_t v92 = a1;
  sub_129004(a1, (uint64_t)v23, type metadata accessor for AssetAction.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {

    uint64_t v38 = v86;
    uint64_t v41 = v80;
    uint64_t v39 = (uint64_t)v91;
LABEL_5:
    if (*(unsigned char *)(v79 + 16) == 5)
    {
      int v42 = 1;
      goto LABEL_9;
    }
LABEL_18:
    sub_26CB50();
    goto LABEL_33;
  }
  uint64_t v38 = v86;
  uint64_t v39 = (uint64_t)v91;
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v40 = sub_2696C0();
    (*(void (**)(id *, uint64_t))(*(void *)(v40 - 8) + 8))(v23, v40);
    uint64_t v41 = v80;
    goto LABEL_5;
  }
  sub_129174((uint64_t)v23, type metadata accessor for AssetAction.Kind);
  uint64_t v41 = v80;
  if (*(unsigned char *)(v79 + 16) != 5) {
    goto LABEL_18;
  }
  int v42 = 0;
LABEL_9:
  sub_B678(v38 + *(int *)(v41 + 24), (uint64_t)&v100, &qword_2EBCC8);
  if (!*((void *)&v101 + 1))
  {
    sub_B6DC((uint64_t)&v100, &qword_2EBCC8);
    goto LABEL_18;
  }
  sub_AD44(&v100, (uint64_t)v112);
  AssetAction.Kind.figaroActionType.getter((char *)&v100);
  char v43 = v100;
  LOBYTE(v99[0]) = v100;
  uint64_t v44 = v38 + *(int *)(v41 + 20);
  sub_C224(v44, (uint64_t)&v100);
  uint64_t v86 = _s7BooksUI7MetricsO13actionDetails3for9assetInfoSDySSypGSgAC15ClickActionTypeO_14BookFoundation05AssetH0_ptFZ_0((uint64_t)v99, &v100);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v100);
  sub_C224(v44, (uint64_t)&v100);
  sub_4ADC(&v100, *((uint64_t *)&v101 + 1));
  sub_269F20();
  char v45 = sub_26A050();
  if (v45) {
    uint64_t v46 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v46 = 0x6B6F6F6265;
  }
  unint64_t v47 = 0xE500000000000000;
  if (v45) {
    unint64_t v47 = 0xE90000000000006BLL;
  }
  unint64_t v79 = v47;
  uint64_t v80 = v46;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v100);
  sub_B678(v77, (uint64_t)v18, &qword_2EA0C0);
  uint64_t v48 = sub_26A220();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v18, 1, v48) == 1)
  {
    sub_B6DC((uint64_t)v18, &qword_2EA0C0);
    uint64_t v76 = 0;
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v50 = sub_26A200();
    uint64_t v76 = v51;
    uint64_t v77 = v50;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v48);
  }
  if (v42) {
    char v52 = 5;
  }
  else {
    char v52 = 0;
  }
  if (v42) {
    uint64_t v53 = 0x77656976657270;
  }
  else {
    uint64_t v53 = 0x6E6F74747562;
  }
  if (v42) {
    unint64_t v54 = 0xE700000000000000;
  }
  else {
    unint64_t v54 = 0xE600000000000000;
  }
  v111[1] = v52;
  v111[0] = v43;
  sub_C224(v44, (uint64_t)&v100);
  sub_4ADC(&v100, *((uint64_t *)&v101 + 1));
  swift_bridgeObjectRetain();
  uint64_t v55 = (uint64_t)v78;
  sub_269F60();
  uint64_t v56 = sub_2696C0();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) == 1)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v100);
    sub_B6DC(v55, &qword_2F46A0);
    uint64_t v58 = 0;
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v58 = sub_269680();
    uint64_t v59 = v60;
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v100);
  }
  uint64_t v39 = (uint64_t)v91;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v100 = 0u;
  long long v103 = v93;
  long long v104 = xmmword_274780;
  *(void *)&long long v105 = v80;
  *((void *)&v105 + 1) = v79;
  *(void *)&long long v106 = 1;
  BYTE8(v106) = 0;
  *(void *)&long long v107 = v53;
  *((void *)&v107 + 1) = v54;
  *(void *)&long long v108 = v77;
  *((void *)&v108 + 1) = v76;
  long long v109 = 0u;
  long long v110 = 0u;
  v99[8] = v108;
  memset(&v99[9], 0, 32);
  v99[4] = xmmword_274780;
  v99[5] = v105;
  v99[6] = v106;
  v99[7] = v107;
  memset(v99, 0, 48);
  v99[3] = v93;
  static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v93, *((uint64_t *)&v93 + 1), v111, v86, v58, v59, v99, v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v112);
  sub_A3F40((uint64_t)&v100);
LABEL_33:
  uint64_t v61 = v83;
  sub_129004(v38, v83, type metadata accessor for QuickActionBuyButtonViewModel);
  sub_41D2C(v39);
  sub_129174(v61, type metadata accessor for QuickActionBuyButtonViewModel);
  uint64_t v62 = v89;
  uint64_t v63 = v97;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v39, 1, v97) == 1)
  {
    sub_B6DC(v39, &qword_2EBC78);
    uint64_t v86 = 0;
    uint64_t v83 = 0;
  }
  else
  {
    uint64_t v86 = sub_269820();
    uint64_t v83 = v64;
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v39, v63);
  }
  sub_C224(v38 + *(int *)(v41 + 20), (uint64_t)&v100);
  sub_4ADC(&v100, *((uint64_t *)&v101 + 1));
  LODWORD(v91) = sub_269F30();
  uint64_t v65 = v84;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v95, v98, v96);
  uint64_t v66 = v85;
  sub_129004(v92, v85, type metadata accessor for AssetAction.Kind);
  uint64_t v68 = v81;
  uint64_t v67 = v82;
  uint64_t v69 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v87, v94, v82);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v69, 0, 1, v67);
  uint64_t v70 = v88;
  sub_269830();
  uint64_t v71 = sub_269820();
  uint64_t v73 = v72;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v70, v97);
  uint64_t v74 = *((void *)&v93 + 1);
  swift_bridgeObjectRetain();
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v71, v73, v93, v74, v86, v83, v91 & 1, v95, v90, v66, v69);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v98, v96);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v94, v67);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v100);
}

uint64_t sub_126F00@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a1;
  unint64_t v31 = a4;
  uint64_t v12 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2696C0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v22 = type metadata accessor for QuickActionBuyButtonViewModel(0);
    sub_C224(a5 + *(int *)(v22 + 20), (uint64_t)v34);
    sub_4ADC(v34, v34[3]);
    uint64_t v23 = sub_269DD0();
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v34);
      void *v14 = v24;
      swift_storeEnumTagMultiPayload();
      id v25 = v24;
      sub_126354((uint64_t)v14, v30, v31, a5, v32, v33, a8);

      sub_129174((uint64_t)v14, type metadata accessor for AssetAction.Kind);
LABEL_7:
      uint64_t v26 = type metadata accessor for AssetAction(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a8, 0, 1, v26);
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v34);
  }
  else
  {
    sub_B678(a3, (uint64_t)v17, &qword_2F46A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
      (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v14, v21, v18);
      swift_storeEnumTagMultiPayload();
      sub_126354((uint64_t)v14, v30, v31, a5, v32, v33, a8);
      sub_129174((uint64_t)v14, type metadata accessor for AssetAction.Kind);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      goto LABEL_7;
    }
    sub_B6DC((uint64_t)v17, &qword_2F46A0);
  }
  uint64_t v28 = type metadata accessor for AssetAction(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a8, 1, 1, v28);
}

uint64_t sub_127278@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(a1 + 16) > 1u)
  {
    uint64_t v23 = sub_26A220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 1, 1, v23);
    sub_126F00((uint64_t)v16, a5 & 1, a6, a1, a2, a3, a4, a7);
    return sub_B6DC((uint64_t)v16, &qword_2EA0C0);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = sub_26A220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
    sub_126354((uint64_t)v19, (uint64_t)v16, a1, a2, a3, a4, a7);
    sub_B6DC((uint64_t)v16, &qword_2EA0C0);
    sub_129174((uint64_t)v19, type metadata accessor for AssetAction.Kind);
    uint64_t v21 = type metadata accessor for AssetAction(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a7, 0, 1, v21);
  }
}

uint64_t sub_1274C4()
{
  uint64_t v0 = sub_26CFD0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26CF60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26CF50();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizerLookupStrategy.default(_:), v0);
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1277A8@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int v60 = a1;
  uint64_t v5 = sub_269EA0();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_26CFD0();
  uint64_t v62 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_26CF60();
  uint64_t v61 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_269DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = sub_4A98(&qword_2EF540);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_269D50();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224((uint64_t)a2, (uint64_t)v67);
  sub_4A98(&qword_2EE2C8);
  char v23 = swift_dynamicCast();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if (v23)
  {
    uint64_t v56 = a3;
    v24(v18, 0, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_269D30();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for ContentKind.manga(_:), v9);
    char v25 = sub_269DE0();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    v26(v15, v9);
    if (v25)
    {
      uint64_t v27 = v64;
      sub_26CF50();
      uint64_t v29 = v62;
      uint64_t v28 = v63;
      uint64_t v30 = v65;
      (*(void (**)(char *, void, uint64_t))(v62 + 104))(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
      sub_26A1D0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v66);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    a3 = v56;
  }
  else
  {
    v24(v18, 1, 1, v19);
    sub_B6DC((uint64_t)v18, &qword_2EF540);
  }
  sub_4ADC(a2, a2[3]);
  uint64_t v32 = v57;
  sub_269FE0();
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v32, v59);
  if (v33 != enum case for SeriesOrdering.notAvailable(_:) && v33 != enum case for SeriesOrdering.nonSeries(_:))
  {
    if (v33 == enum case for SeriesOrdering.orderedSeries(_:))
    {
      sub_4ADC(a2, a2[3]);
      unint64_t v34 = sub_269FD0();
      if ((v36 & 0x100000000) == 0)
      {
        int v37 = v34;
        __int16 v38 = v35;
        __int16 v39 = v36;
        unint64_t v40 = HIDWORD(v34);
        unint64_t v41 = HIWORD(v34);
        unint64_t v42 = v35 >> 16;
        unint64_t v43 = HIDWORD(v35);
        unint64_t v44 = HIWORD(v35);
        uint64_t v56 = a3;
        unint64_t v45 = v36 >> 16;
        uint64_t v46 = swift_allocObject();
        *(_DWORD *)(v46 + 16) = v37;
        *(_WORD *)(v46 + 20) = v40;
        *(_WORD *)(v46 + 22) = v41;
        *(_WORD *)(v46 + 24) = v38;
        *(_WORD *)(v46 + 26) = v42;
        *(_WORD *)(v46 + 28) = v43;
        *(_WORD *)(v46 + 30) = v44;
        *(_WORD *)(v46 + 32) = v39;
        *(_WORD *)(v46 + 34) = v45;
        *(unsigned char *)(v46 + 36) = v60 & 1;
        sub_26A1C0();
        return swift_release();
      }
    }
    else if (v33 != enum case for SeriesOrdering.unorderedSeries(_:))
    {
      uint64_t result = sub_26DBA0();
      __break(1u);
      return result;
    }
  }
  unint64_t v47 = (void (**)(char *, void, uint64_t))(v62 + 104);
  uint64_t v48 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v49 = (uint64_t (**)(char *, uint64_t))(v61 + 8);
  if (v60)
  {
    uint64_t v50 = v64;
    sub_26CF50();
    uint64_t v51 = v63;
    uint64_t v52 = v65;
    (*v47)(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
    sub_26A1D0();
    (*v48)(v51, v52);
    return (*v49)(v50, v66);
  }
  else
  {
    uint64_t v53 = v64;
    sub_26CF50();
    unint64_t v54 = v63;
    uint64_t v55 = v65;
    (*v47)(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
    sub_26A1D0();
    (*v48)(v54, v55);
    return (*v49)(v53, v66);
  }
}

uint64_t sub_127FD0@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int v60 = a1;
  uint64_t v5 = sub_269EA0();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_26CFD0();
  uint64_t v62 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_26CF60();
  uint64_t v61 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_269DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = sub_4A98(&qword_2EF540);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_269D50();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224((uint64_t)a2, (uint64_t)v67);
  sub_4A98(&qword_2EE2C8);
  char v23 = swift_dynamicCast();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if (v23)
  {
    uint64_t v56 = a3;
    v24(v18, 0, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_269D30();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for ContentKind.manga(_:), v9);
    char v25 = sub_269DE0();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    v26(v15, v9);
    if (v25)
    {
      uint64_t v27 = v64;
      sub_26CF50();
      uint64_t v29 = v62;
      uint64_t v28 = v63;
      uint64_t v30 = v65;
      (*(void (**)(char *, void, uint64_t))(v62 + 104))(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
      sub_26A1D0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v66);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    a3 = v56;
  }
  else
  {
    v24(v18, 1, 1, v19);
    sub_B6DC((uint64_t)v18, &qword_2EF540);
  }
  sub_4ADC(a2, a2[3]);
  uint64_t v32 = v57;
  sub_269FE0();
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v32, v59);
  if (v33 != enum case for SeriesOrdering.notAvailable(_:) && v33 != enum case for SeriesOrdering.nonSeries(_:))
  {
    if (v33 == enum case for SeriesOrdering.orderedSeries(_:))
    {
      sub_4ADC(a2, a2[3]);
      unint64_t v34 = sub_269FD0();
      if ((v36 & 0x100000000) == 0)
      {
        int v37 = v34;
        __int16 v38 = v35;
        __int16 v39 = v36;
        unint64_t v40 = HIDWORD(v34);
        unint64_t v41 = HIWORD(v34);
        unint64_t v42 = v35 >> 16;
        unint64_t v43 = HIDWORD(v35);
        unint64_t v44 = HIWORD(v35);
        uint64_t v56 = a3;
        unint64_t v45 = v36 >> 16;
        uint64_t v46 = swift_allocObject();
        *(_DWORD *)(v46 + 16) = v37;
        *(_WORD *)(v46 + 20) = v40;
        *(_WORD *)(v46 + 22) = v41;
        *(_WORD *)(v46 + 24) = v38;
        *(_WORD *)(v46 + 26) = v42;
        *(_WORD *)(v46 + 28) = v43;
        *(_WORD *)(v46 + 30) = v44;
        *(_WORD *)(v46 + 32) = v39;
        *(_WORD *)(v46 + 34) = v45;
        *(unsigned char *)(v46 + 36) = v60 & 1;
        sub_26A1C0();
        return swift_release();
      }
    }
    else if (v33 != enum case for SeriesOrdering.unorderedSeries(_:))
    {
      uint64_t result = sub_26DBA0();
      __break(1u);
      return result;
    }
  }
  unint64_t v47 = (void (**)(char *, void, uint64_t))(v62 + 104);
  uint64_t v48 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v49 = (uint64_t (**)(char *, uint64_t))(v61 + 8);
  if (v60)
  {
    uint64_t v50 = v64;
    sub_26CF50();
    uint64_t v51 = v63;
    uint64_t v52 = v65;
    (*v47)(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
    sub_26A1D0();
    (*v48)(v51, v52);
    return (*v49)(v50, v66);
  }
  else
  {
    uint64_t v53 = v64;
    sub_26CF50();
    unint64_t v54 = v63;
    uint64_t v55 = v65;
    (*v47)(v63, enum case for LocalizerLookupStrategy.default(_:), v65);
    sub_26A1D0();
    (*v48)(v54, v55);
    return (*v49)(v53, v66);
  }
}

uint64_t sub_1287F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v22[3] = a5;
  uint64_t v6 = sub_26CF60();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  char v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26CD20();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_26D950(v12);
  uint64_t v14 = v13;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for LocalizerContext.standalone(_:), v8);
  uint64_t v15 = Localizer.decimal(forNumber:in:)();
  uint64_t v17 = v16;

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_4ADC(a1, a1[3]);
  sub_4A98(&qword_2EE240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x800000000028A1D0;
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v17;
  sub_9368(inited);
  uint64_t v19 = v23;
  sub_26CF50();
  uint64_t v20 = sub_26D210();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  return v20;
}

uint64_t sub_128B0C(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v32 = a4;
  int v33 = a5;
  uint64_t v6 = sub_26CFD0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26CF60();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26CD20();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_26D950(v15);
  uint64_t v17 = v16;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for LocalizerContext.standalone(_:), v11);
  uint64_t v18 = Localizer.decimal(forNumber:in:)();
  uint64_t v20 = v19;

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_4ADC(a1, a1[3]);
  sub_4A98(&qword_2EE240);
  if (v33)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_26F990;
    *(void *)(inited + 32) = 0xD000000000000014;
    *(void *)(inited + 40) = 0x800000000028A1D0;
    *(void *)(inited + 48) = v18;
    *(void *)(inited + 56) = v20;
    sub_9368(inited);
    sub_26CF50();
    uint64_t v22 = sub_26D210();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_26F990;
    *(void *)(v23 + 32) = 0xD000000000000014;
    *(void *)(v23 + 40) = 0x800000000028A1D0;
    *(void *)(v23 + 48) = v18;
    *(void *)(v23 + 56) = v20;
    sub_9368(v23);
    sub_26CF50();
    uint64_t v25 = v30;
    uint64_t v24 = v31;
    uint64_t v26 = v29;
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for LocalizerLookupStrategy.default(_:), v31);
    uint64_t v22 = sub_26D1C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  return v22;
}

uint64_t sub_128F08@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_26A590();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_128F88(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_26A5A0();
}

uint64_t sub_129004(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_12906C()
{
  unint64_t result = qword_2F0D38;
  if (!qword_2F0D38)
  {
    sub_7B0C(&qword_2F0D30);
    sub_12929C(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    sub_129118();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0D38);
  }
  return result;
}

unint64_t sub_129118()
{
  unint64_t result = qword_2EC678;
  if (!qword_2EC678)
  {
    sub_7B0C(&qword_2EC680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC678);
  }
  return result;
}

uint64_t sub_129174(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1291D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonViewModel.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_129238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonViewModel.ActionKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_12929C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1292EC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for QuickActionBuyButtonView(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for ButtonViewModel(0);
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
    uint64_t v16 = v9[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    if (*v18 >= 3uLL)
    {
      uint64_t v20 = v18[1];
      uint64_t v21 = v18[2];
      *uint64_t v17 = *v18;
      v17[1] = v20;
      uint64_t v22 = v18[3];
      long long v17[2] = v21;
      v17[3] = v22;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
    }
    uint64_t v23 = v9[11];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v27 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
        goto LABEL_17;
      case 1u:
        uint64_t v28 = v25[1];
        void *v24 = *v25;
        v24[1] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v29 = v25[1];
        void *v24 = *v25;
        v24[1] = v29;
        uint64_t v30 = (void *)v25[2];
        v24[2] = v30;
        swift_bridgeObjectRetain();
        id v31 = v30;
        uint64_t v32 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        int v33 = (char *)v24 + v32;
        uint64_t v34 = (char *)v25 + v32;
        uint64_t v35 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_17;
      case 3u:
        uint64_t v36 = v25[1];
        void *v24 = *v25;
        v24[1] = v36;
        swift_bridgeObjectRetain();
        uint64_t v37 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        __int16 v38 = (char *)v24 + v37;
        __int16 v39 = (char *)v25 + v37;
        uint64_t v40 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        goto LABEL_17;
      case 4u:
        uint64_t v41 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v24, v25, v41);
        uint64_t v42 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        unint64_t v43 = (void *)((char *)v24 + v42);
        unint64_t v44 = (void *)((char *)v25 + v42);
        uint64_t v45 = v44[1];
        *unint64_t v43 = *v44;
        v43[1] = v45;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 5u:
        uint64_t v46 = sub_26A220();
        unint64_t v47 = *(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16);
        v47(v24, v25, v46);
        uint64_t v48 = sub_4A98(&qword_2EE448);
        v47((void *)((char *)v24 + *(int *)(v48 + 48)), (void *)((char *)v25 + *(int *)(v48 + 48)), v46);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + v9[12]) = *((unsigned char *)a2 + v9[12]);
    uint64_t v49 = v9[13];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    else
    {
      uint64_t v53 = *((void *)v51 + 3);
      if (v53)
      {
        uint64_t v54 = *((void *)v51 + 4);
        *((void *)v50 + 3) = v53;
        *((void *)v50 + 4) = v54;
        (**(void (***)(char *, char *))(v53 - 8))(v50, v51);
      }
      else
      {
        long long v55 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v55;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = v9[14];
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    uint64_t v59 = sub_26A220();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      uint64_t v61 = sub_4A98(&qword_2EA0C0);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    uint64_t v62 = v6[5];
    long long v63 = *(_OWORD *)((char *)a2 + v62 + 24);
    *(_OWORD *)((char *)a1 + v62 + 24) = v63;
    (**(void (***)(void))(v63 - 8))();
    uint64_t v64 = v6[6];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = *(void *)((char *)a2 + v64 + 24);
    if (v67)
    {
      uint64_t v68 = *((void *)v66 + 4);
      *((void *)v65 + 3) = v67;
      *((void *)v65 + 4) = v68;
      (**(void (***)(void))(v67 - 8))();
    }
    else
    {
      long long v69 = *((_OWORD *)v66 + 1);
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v69;
      *((void *)v65 + 4) = *((void *)v66 + 4);
    }
    uint64_t v70 = v6[7];
    uint64_t v71 = (void *)((char *)a1 + v70);
    uint64_t v72 = (void *)((char *)a2 + v70);
    uint64_t v73 = v72[1];
    *uint64_t v71 = *v72;
    v71[1] = v73;
    uint64_t v74 = v6[8];
    long long v102 = a1;
    long long v103 = a2;
    uint64_t v75 = (char *)a1 + v74;
    uint64_t v76 = (char *)v103 + v74;
    uint64_t v77 = *(void *)v76;
    uint64_t v78 = *((void *)v76 + 1);
    uint64_t v79 = *((void *)v76 + 2);
    uint64_t v80 = *((void *)v76 + 3);
    uint64_t v81 = v6;
    uint64_t v82 = *((void *)v76 + 4);
    uint64_t v83 = *((void *)v76 + 5);
    long long v101 = v81;
    uint64_t v84 = *((void *)v76 + 7);
    uint64_t v100 = *((void *)v76 + 6);
    __int16 v85 = *((_WORD *)v76 + 32);
    char v86 = v76[66];
    swift_bridgeObjectRetain();
    sub_44FC4(v77, v78, v79, v80, v82, v83, v100, v84, v85, v86);
    *(void *)uint64_t v75 = v77;
    *((void *)v75 + 1) = v78;
    *((void *)v75 + 2) = v79;
    *((void *)v75 + 3) = v80;
    *((void *)v75 + 4) = v82;
    *((void *)v75 + 5) = v83;
    *((void *)v75 + 6) = v100;
    *((void *)v75 + 7) = v84;
    uint64_t v15 = v102;
    *((_WORD *)v75 + 32) = v85;
    v75[66] = v86;
    uint64_t v87 = v101[9];
    uint64_t v88 = (void *)((char *)v102 + v87);
    uint64_t v89 = (void *)((char *)v103 + v87);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v90 = sub_269840();
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = sub_4A98(&qword_2EBC78);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
    }
    else
    {
      *uint64_t v88 = *v89;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = v101[10];
    uint64_t v94 = (void *)((char *)v102 + v93);
    uint64_t v95 = (char *)v103 + v93;
    uint64_t v97 = *(void **)v95;
    uint64_t v96 = *((void *)v95 + 1);
    void *v94 = v97;
    v94[1] = v96;
    id v98 = v97;
  }
  return v15;
}

void destroy for QuickActionBuyButtonView(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBDF0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = (int *)type metadata accessor for ButtonViewModel(0);
  v3(a1 + v4[5], v2);
  uint64_t v5 = a1 + v4[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(a1 + v4[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v7 = a1 + v4[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_11;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v8 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_10;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v8 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_10:
      v7 += v8;
LABEL_11:
      uint64_t v9 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      break;
    case 4u:
      uint64_t v10 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v11 = sub_26A220();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v7, v11);
      uint64_t v13 = sub_4A98(&qword_2EE448);
      v12(v7 + *(int *)(v13 + 48), v11);
      break;
    default:
      break;
  }
  uint64_t v14 = a1 + v4[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else if (*(void *)(v14 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v14);
  }
  uint64_t v16 = a1 + v4[14];
  uint64_t v17 = sub_26A220();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  long long v19 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v19[5]);
  uint64_t v20 = a1 + v19[6];
  if (*(void *)(v20 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + v19[8];
  sub_C360(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(void *)(v21 + 24), *(void *)(v21 + 32), *(void *)(v21 + 40), *(void *)(v21 + 48), *(void *)(v21 + 56), *(_WORD *)(v21 + 64), *(unsigned char *)(v21 + 66));
  uint64_t v22 = a1 + v19[9];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_269840();
    uint64_t v24 = *(void *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v25 = *(void **)(a1 + v19[10]);
}

uint64_t initializeWithCopy for QuickActionBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  if (*v13 >= 3uLL)
  {
    uint64_t v15 = v13[1];
    uint64_t v16 = v13[2];
    *uint64_t v12 = *v13;
    v12[1] = v15;
    uint64_t v17 = v13[3];
    _OWORD v12[2] = v16;
    v12[3] = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
  }
  uint64_t v18 = v6[11];
  long long v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
      goto LABEL_15;
    case 1u:
      uint64_t v23 = v20[1];
      void *v19 = *v20;
      v19[1] = v23;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      uint64_t v24 = v20[1];
      void *v19 = *v20;
      v19[1] = v24;
      uint64_t v25 = (void *)v20[2];
      v19[2] = v25;
      swift_bridgeObjectRetain();
      id v26 = v25;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      goto LABEL_15;
    case 3u:
      uint64_t v31 = v20[1];
      void *v19 = *v20;
      v19[1] = v31;
      swift_bridgeObjectRetain();
      uint64_t v32 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      int v33 = (char *)v19 + v32;
      uint64_t v34 = (char *)v20 + v32;
      uint64_t v35 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      goto LABEL_15;
    case 4u:
      uint64_t v36 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v19, v20, v36);
      uint64_t v37 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      __int16 v38 = (void *)((char *)v19 + v37);
      __int16 v39 = (void *)((char *)v20 + v37);
      uint64_t v40 = v39[1];
      void *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 5u:
      uint64_t v41 = sub_26A220();
      uint64_t v42 = *(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16);
      v42(v19, v20, v41);
      uint64_t v43 = sub_4A98(&qword_2EE448);
      v42((void *)((char *)v19 + *(int *)(v43 + 48)), (void *)((char *)v20 + *(int *)(v43 + 48)), v41);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v44 = v6[13];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  else
  {
    uint64_t v48 = *(void *)(v46 + 24);
    if (v48)
    {
      uint64_t v49 = *(void *)(v46 + 32);
      *(void *)(v45 + 24) = v48;
      *(void *)(v45 + 32) = v49;
      (**(void (***)(uint64_t, uint64_t))(v48 - 8))(v45, v46);
    }
    else
    {
      long long v50 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *(_OWORD *)(v45 + 16) = v50;
      *(void *)(v45 + 32) = *(void *)(v46 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v6[14];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = sub_26A220();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    uint64_t v56 = sub_4A98(&qword_2EA0C0);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  uint64_t v57 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v58 = v57[5];
  long long v59 = *(_OWORD *)(a2 + v58 + 24);
  *(_OWORD *)(a1 + v58 + 24) = v59;
  (**(void (***)(void))(v59 - 8))();
  uint64_t v60 = v57[6];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = *(void *)(a2 + v60 + 24);
  if (v63)
  {
    uint64_t v64 = *(void *)(v62 + 32);
    *(void *)(v61 + 24) = v63;
    *(void *)(v61 + 32) = v64;
    (**(void (***)(void))(v63 - 8))();
  }
  else
  {
    long long v65 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v65;
    *(void *)(v61 + 32) = *(void *)(v62 + 32);
  }
  uint64_t v66 = v57[7];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = v57[8];
  uint64_t v97 = a2;
  uint64_t v98 = a1;
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = *(void *)v72;
  uint64_t v74 = *(void *)(v72 + 8);
  uint64_t v75 = *(void *)(v72 + 16);
  uint64_t v76 = *(void *)(v72 + 24);
  uint64_t v77 = *(void *)(v72 + 32);
  uint64_t v78 = *(void *)(v72 + 40);
  uint64_t v79 = *(void *)(v72 + 56);
  uint64_t v95 = *(void *)(v72 + 48);
  uint64_t v96 = v57;
  __int16 v80 = *(_WORD *)(v72 + 64);
  char v81 = *(unsigned char *)(v72 + 66);
  swift_bridgeObjectRetain();
  sub_44FC4(v73, v74, v75, v76, v77, v78, v95, v79, v80, v81);
  *(void *)uint64_t v71 = v73;
  *(void *)(v71 + 8) = v74;
  *(void *)(v71 + 16) = v75;
  *(void *)(v71 + 24) = v76;
  *(void *)(v71 + 32) = v77;
  *(void *)(v71 + 40) = v78;
  *(void *)(v71 + 48) = v95;
  *(void *)(v71 + 56) = v79;
  *(_WORD *)(v71 + 64) = v80;
  *(unsigned char *)(v71 + 66) = v81;
  uint64_t v82 = v96[9];
  uint64_t v83 = (void *)(v98 + v82);
  uint64_t v84 = (void *)(v97 + v82);
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v85 = sub_269840();
    uint64_t v86 = *(void *)(v85 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
    {
      uint64_t v87 = sub_4A98(&qword_2EBC78);
      memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 16))(v83, v84, v85);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    }
  }
  else
  {
    *uint64_t v83 = *v84;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = v96[10];
  uint64_t v89 = (void *)(v98 + v88);
  uint64_t v90 = v97 + v88;
  uint64_t v92 = *(void **)v90;
  uint64_t v91 = *(void *)(v90 + 8);
  void *v89 = v92;
  v89[1] = v91;
  id v93 = v92;
  return v98;
}

uint64_t assignWithCopy for QuickActionBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  if (a1 != a2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  unint64_t v14 = *(void *)(a2 + v11);
  if (*(void *)(a1 + v11) >= 3uLL)
  {
    if (v14 < 3)
    {
      sub_B6DC(a1 + v11, &qword_2EE748);
      long long v16 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v16;
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    *(void *)uint64_t v12 = v14;
    swift_retain();
    swift_release();
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    swift_retain();
    swift_release();
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    swift_retain();
    swift_release();
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_14;
    }
LABEL_17:
    *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
    goto LABEL_30;
  }
  if (v14 >= 3)
  {
    *(void *)uint64_t v12 = v14;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  long long v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  if (a1 == a2) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v17 = v6[11];
  uint64_t v18 = (void *)(a1 + v17);
  long long v19 = (void *)(a2 + v17);
  sub_129174(a1 + v17, type metadata accessor for ButtonViewModel.Content);
  uint64_t v20 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v21 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
      goto LABEL_23;
    case 1u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v22 = (void *)v19[2];
      v18[2] = v22;
      swift_bridgeObjectRetain();
      id v23 = v22;
      uint64_t v24 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v25 = (char *)v18 + v24;
      id v26 = (char *)v19 + v24;
      uint64_t v27 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      goto LABEL_23;
    case 3u:
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      swift_bridgeObjectRetain();
      uint64_t v28 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v29 = (char *)v18 + v28;
      uint64_t v30 = (char *)v19 + v28;
      uint64_t v31 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      goto LABEL_23;
    case 4u:
      uint64_t v32 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v18, v19, v32);
      uint64_t v33 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v34 = (void *)((char *)v18 + v33);
      uint64_t v35 = (void *)((char *)v19 + v33);
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 5u:
      uint64_t v36 = sub_26A220();
      uint64_t v37 = *(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16);
      v37(v18, v19, v36);
      uint64_t v38 = sub_4A98(&qword_2EE448);
      v37((void *)((char *)v18 + *(int *)(v38 + 48)), (void *)((char *)v19 + *(int *)(v38 + 48)), v36);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v39 = v6[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (long long *)(a2 + v39);
  sub_129174(a1 + v39, type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v42 = sub_2696C0();
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  }
  else
  {
    uint64_t v43 = *((void *)v41 + 3);
    if (v43)
    {
      *(void *)(v40 + 24) = v43;
      *(void *)(v40 + 32) = *((void *)v41 + 4);
      (**(void (***)(uint64_t, long long *))(v43 - 8))(v40, v41);
    }
    else
    {
      long long v44 = *v41;
      long long v45 = v41[1];
      *(void *)(v40 + 32) = *((void *)v41 + 4);
      *(_OWORD *)uint64_t v40 = v44;
      *(_OWORD *)(v40 + 16) = v45;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v46 = v6[14];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_26A220();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
LABEL_35:
    uint64_t v54 = sub_4A98(&qword_2EA0C0);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_36:
  uint64_t v55 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  sub_16D58((uint64_t *)(a1 + v55[5]), (uint64_t *)(a2 + v55[5]));
  uint64_t v56 = v55[6];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v59 = *(void *)(a2 + v56 + 24);
  if (*(void *)(a1 + v56 + 24))
  {
    if (v59)
    {
      sub_16D58((uint64_t *)v57, v58);
      goto LABEL_43;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v57);
  }
  else if (v59)
  {
    *(void *)(v57 + 24) = v59;
    *(void *)(v57 + 32) = v58[4];
    (**(void (***)(uint64_t, long long *))(v59 - 8))(v57, (long long *)v58);
    goto LABEL_43;
  }
  long long v60 = *(_OWORD *)v58;
  long long v61 = *((_OWORD *)v58 + 1);
  *(void *)(v57 + 32) = v58[4];
  *(_OWORD *)uint64_t v57 = v60;
  *(_OWORD *)(v57 + 16) = v61;
LABEL_43:
  uint64_t v62 = v55[7];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (void *)(a2 + v62);
  *uint64_t v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = v55[8];
  long long v101 = v55;
  uint64_t v102 = a2;
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  uint64_t v68 = *(void *)v67;
  uint64_t v69 = *(void *)(v67 + 8);
  uint64_t v70 = *(void *)(v67 + 16);
  uint64_t v71 = *(void *)(v67 + 24);
  uint64_t v103 = a1;
  uint64_t v72 = *(void *)(v67 + 32);
  uint64_t v73 = *(void *)(v67 + 40);
  uint64_t v75 = *(void *)(v67 + 48);
  uint64_t v74 = *(void *)(v67 + 56);
  __int16 v76 = *(_WORD *)(v67 + 64);
  sub_44FC4(*(void *)v67, v69, v70, v71, v72, v73, v75, v74, v76, *(unsigned char *)(v67 + 66));
  uint64_t v77 = *(void *)v66;
  uint64_t v78 = *(void *)(v66 + 8);
  uint64_t v79 = *(void *)(v66 + 16);
  uint64_t v80 = *(void *)(v66 + 24);
  uint64_t v81 = *(void *)(v66 + 32);
  uint64_t v82 = *(void *)(v66 + 40);
  uint64_t v83 = *(void *)(v66 + 48);
  uint64_t v84 = *(void *)(v66 + 56);
  __int16 v85 = *(_WORD *)(v66 + 64);
  char v86 = *(unsigned char *)(v66 + 66);
  *(void *)uint64_t v66 = v68;
  *(void *)(v66 + 8) = v69;
  *(void *)(v66 + 16) = v70;
  *(void *)(v66 + 24) = v71;
  *(void *)(v66 + 32) = v72;
  *(void *)(v66 + 40) = v73;
  *(void *)(v66 + 48) = v75;
  *(void *)(v66 + 56) = v74;
  *(_WORD *)(v66 + 64) = v76;
  *(unsigned char *)(v66 + 66) = v100;
  sub_C360(v77, v78, v79, v80, v81, v82, v83, v84, v85, v86);
  if (v103 != v102)
  {
    uint64_t v87 = v101[9];
    uint64_t v88 = (void *)(v103 + v87);
    uint64_t v89 = (void *)(v102 + v87);
    sub_B6DC(v103 + v87, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v90 = sub_269840();
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = sub_4A98(&qword_2EBC78);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
    }
    else
    {
      *uint64_t v88 = *v89;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v93 = v101[10];
  uint64_t v94 = (void *)(v103 + v93);
  uint64_t v95 = v102 + v93;
  uint64_t v96 = *(void **)(v103 + v93);
  uint64_t v97 = *(void **)(v102 + v93);
  void *v94 = v97;
  id v98 = v97;

  v94[1] = *(void *)(v95 + 8);
  return v103;
}

uint64_t initializeWithTake for QuickActionBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  unint64_t v14 = (_OWORD *)(a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      goto LABEL_11;
    case 2u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      long long v17[2] = v18[2];
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v22 = (char *)v17 + v21;
      id v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_11;
    case 3u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_11;
    case 4u:
      uint64_t v29 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(v17, v18, v29);
      uint64_t v30 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v17 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)v18 + *(int *)(v30 + 48));
      goto LABEL_11;
    case 5u:
      uint64_t v31 = sub_26A220();
      uint64_t v32 = *(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v17, v18, v31);
      uint64_t v33 = sub_4A98(&qword_2EE448);
      v32((void *)((char *)v17 + *(int *)(v33 + 48)), (void *)((char *)v18 + *(int *)(v33 + 48)), v31);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v34 = v6[13];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  uint64_t v39 = v6[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_26A220();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  long long v45 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v46 = v45[5];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  uint64_t v50 = v45[6];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  long long v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  *(void *)(v51 + 32) = *(void *)(v52 + 32);
  *(_OWORD *)(a1 + v45[7]) = *(_OWORD *)(a2 + v45[7]);
  uint64_t v54 = v45[8];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(_DWORD *)(v55 + 63) = *(_DWORD *)(v56 + 63);
  long long v57 = *(_OWORD *)(v56 + 48);
  *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
  *(_OWORD *)(v55 + 48) = v57;
  long long v58 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v58;
  uint64_t v59 = v45[9];
  long long v60 = (void *)(a1 + v59);
  long long v61 = (const void *)(a2 + v59);
  uint64_t v62 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v63 = sub_269840();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63))
    {
      uint64_t v65 = sub_4A98(&qword_2EBC78);
      memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v60, v61, v63);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  *(_OWORD *)(a1 + v45[10]) = *(_OWORD *)(a2 + v45[10]);
  return a1;
}

uint64_t assignWithTake for QuickActionBuyButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], a2 + v6[5], v4);
  if (a1 != a2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_B6DC(a1 + v7, &qword_2EA968);
    uint64_t v10 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (void *)(a1 + v12);
  unint64_t v14 = (void *)(a2 + v12);
  if (*(void *)(a1 + v12) >= 3uLL)
  {
    if (*v14 >= 3uLL)
    {
      *uint64_t v13 = *v14;
      swift_release();
      v13[1] = v14[1];
      swift_release();
      void v13[2] = v14[2];
      swift_release();
      v13[3] = v14[3];
      swift_release();
      if (a1 != a2) {
        goto LABEL_9;
      }
LABEL_12:
      *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
      goto LABEL_22;
    }
    sub_B6DC((uint64_t)v13, &qword_2EE748);
  }
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v16 = v6[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_129174(a1 + v16, type metadata accessor for ButtonViewModel.Content);
  uint64_t v19 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      goto LABEL_18;
    case 2u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      long long v17[2] = v18[2];
      uint64_t v21 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v22 = (char *)v17 + v21;
      id v23 = (char *)v18 + v21;
      uint64_t v24 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_18;
    case 3u:
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v25 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_18;
    case 4u:
      uint64_t v29 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(v17, v18, v29);
      uint64_t v30 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v17 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)v18 + *(int *)(v30 + 48));
      goto LABEL_18;
    case 5u:
      uint64_t v31 = sub_26A220();
      uint64_t v32 = *(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v17, v18, v31);
      uint64_t v33 = sub_4A98(&qword_2EE448);
      v32((void *)((char *)v17 + *(int *)(v33 + 48)), (void *)((char *)v18 + *(int *)(v33 + 48)), v31);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v6[12]) = *(unsigned char *)(a2 + v6[12]);
  uint64_t v34 = v6[13];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  sub_129174(a1 + v34, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v37 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
LABEL_22:
  uint64_t v39 = v6[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = sub_26A220();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v40, 1, v42);
  int v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
LABEL_27:
    uint64_t v47 = sub_4A98(&qword_2EA0C0);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 40))(v40, v41, v42);
LABEL_28:
  uint64_t v48 = (int *)type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v49 = v48[5];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v49);
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  uint64_t v53 = v48[6];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  if (*(void *)(a1 + v53 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v54);
  }
  long long v56 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  *(void *)(v54 + 32) = *(void *)(v55 + 32);
  uint64_t v57 = v48[7];
  long long v58 = (void *)(a1 + v57);
  uint64_t v59 = (uint64_t *)(a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  void *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = v48[8];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  __int16 v65 = *(_WORD *)(v64 + 64);
  char v66 = *(unsigned char *)(v64 + 66);
  uint64_t v67 = *(void *)v63;
  uint64_t v68 = *(void *)(v63 + 8);
  uint64_t v69 = *(void *)(v63 + 16);
  uint64_t v70 = *(void *)(v63 + 24);
  uint64_t v71 = *(void *)(v63 + 32);
  uint64_t v72 = *(void *)(v63 + 40);
  uint64_t v73 = *(void *)(v63 + 48);
  uint64_t v74 = *(void *)(v63 + 56);
  __int16 v75 = *(_WORD *)(v63 + 64);
  char v76 = *(unsigned char *)(v63 + 66);
  long long v77 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v77;
  long long v78 = *(_OWORD *)(v64 + 48);
  *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
  *(_OWORD *)(v63 + 48) = v78;
  *(_WORD *)(v63 + 64) = v65;
  *(unsigned char *)(v63 + 66) = v66;
  sub_C360(v67, v68, v69, v70, v71, v72, v73, v74, v75, v76);
  if (a1 != a2)
  {
    uint64_t v79 = v48[9];
    uint64_t v80 = (void *)(a1 + v79);
    uint64_t v81 = (const void *)(a2 + v79);
    sub_B6DC(a1 + v79, &qword_2EB918);
    uint64_t v82 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v83 = sub_269840();
      uint64_t v84 = *(void *)(v83 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83))
      {
        uint64_t v85 = sub_4A98(&qword_2EBC78);
        memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v80, v81, v83);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
  }
  uint64_t v86 = v48[10];
  uint64_t v87 = (void *)(a1 + v86);
  uint64_t v88 = (void *)(a2 + v86);
  uint64_t v89 = *(void **)(a1 + v86);
  *uint64_t v87 = *v88;

  v87[1] = v88[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickActionBuyButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12C5DC);
}

uint64_t sub_12C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for QuickActionBuyButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12C65C);
}

uint64_t sub_12C65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for QuickActionBuyButtonView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F0DA0);
}

uint64_t sub_12C6EC()
{
  uint64_t result = type metadata accessor for QuickActionBuyButtonViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for QuickActionBuyButtonViewModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    long long v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for ButtonViewModel(0);
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
    uint64_t v16 = v9[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    if (*v18 >= 3uLL)
    {
      uint64_t v20 = v18[1];
      uint64_t v21 = v18[2];
      *uint64_t v17 = *v18;
      v17[1] = v20;
      uint64_t v22 = v18[3];
      long long v17[2] = v21;
      v17[3] = v22;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
    }
    uint64_t v23 = v9[11];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v27 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
        goto LABEL_17;
      case 1u:
        uint64_t v28 = v25[1];
        void *v24 = *v25;
        v24[1] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v29 = v25[1];
        void *v24 = *v25;
        v24[1] = v29;
        uint64_t v30 = (void *)v25[2];
        v24[2] = v30;
        swift_bridgeObjectRetain();
        id v31 = v30;
        uint64_t v32 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v33 = (char *)v24 + v32;
        uint64_t v34 = (char *)v25 + v32;
        uint64_t v35 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_17;
      case 3u:
        uint64_t v36 = v25[1];
        void *v24 = *v25;
        v24[1] = v36;
        swift_bridgeObjectRetain();
        uint64_t v37 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v38 = (char *)v24 + v37;
        uint64_t v39 = (char *)v25 + v37;
        uint64_t v40 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        goto LABEL_17;
      case 4u:
        uint64_t v41 = sub_26A220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v24, v25, v41);
        uint64_t v42 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v43 = (void *)((char *)v24 + v42);
        uint64_t v44 = (void *)((char *)v25 + v42);
        uint64_t v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 5u:
        uint64_t v46 = sub_26A220();
        uint64_t v47 = *(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16);
        v47(v24, v25, v46);
        uint64_t v48 = sub_4A98(&qword_2EE448);
        v47((void *)((char *)v24 + *(int *)(v48 + 48)), (void *)((char *)v25 + *(int *)(v48 + 48)), v46);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + v9[12]) = *((unsigned char *)a2 + v9[12]);
    uint64_t v49 = v9[13];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    else
    {
      uint64_t v53 = *((void *)v51 + 3);
      if (v53)
      {
        uint64_t v54 = *((void *)v51 + 4);
        *((void *)v50 + 3) = v53;
        *((void *)v50 + 4) = v54;
        (**(void (***)(char *, char *))(v53 - 8))(v50, v51);
      }
      else
      {
        long long v55 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v55;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = v9[14];
    uint64_t v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    uint64_t v59 = sub_26A220();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      uint64_t v61 = sub_4A98(&qword_2EA0C0);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    uint64_t v62 = a3[5];
    long long v63 = *(_OWORD *)((char *)a2 + v62 + 24);
    *(_OWORD *)((char *)a1 + v62 + 24) = v63;
    (**(void (***)(void))(v63 - 8))();
    uint64_t v64 = a3[6];
    __int16 v65 = (char *)a1 + v64;
    char v66 = (char *)a2 + v64;
    uint64_t v67 = *(void *)((char *)a2 + v64 + 24);
    if (v67)
    {
      uint64_t v68 = *((void *)v66 + 4);
      *((void *)v65 + 3) = v67;
      *((void *)v65 + 4) = v68;
      (**(void (***)(void))(v67 - 8))();
    }
    else
    {
      long long v69 = *((_OWORD *)v66 + 1);
      *(_OWORD *)__int16 v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v69;
      *((void *)v65 + 4) = *((void *)v66 + 4);
    }
    uint64_t v70 = a3[7];
    uint64_t v71 = a3[8];
    uint64_t v72 = (void *)((char *)a1 + v70);
    uint64_t v73 = (void *)((char *)a2 + v70);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    __int16 v75 = a3;
    char v76 = (char *)a1 + v71;
    long long v77 = (char *)a2 + v71;
    uint64_t v79 = *(void *)((char *)a2 + v71);
    uint64_t v78 = *(void *)((char *)a2 + v71 + 8);
    uint64_t v80 = *(void *)((char *)a2 + v71 + 16);
    uint64_t v81 = *(void *)((char *)a2 + v71 + 24);
    uint64_t v102 = v75;
    uint64_t v103 = a2;
    uint64_t v82 = a1;
    uint64_t v83 = *((void *)v77 + 4);
    uint64_t v84 = *((void *)v77 + 5);
    uint64_t v85 = *((void *)v77 + 7);
    uint64_t v101 = *((void *)v77 + 6);
    long long v104 = v82;
    __int16 v86 = *((_WORD *)v77 + 32);
    char v87 = v77[66];
    swift_bridgeObjectRetain();
    sub_44FC4(v79, v78, v80, v81, v83, v84, v101, v85, v86, v87);
    *(void *)char v76 = v79;
    *((void *)v76 + 1) = v78;
    *((void *)v76 + 2) = v80;
    *((void *)v76 + 3) = v81;
    *((void *)v76 + 4) = v83;
    *((void *)v76 + 5) = v84;
    *((void *)v76 + 6) = v101;
    *((void *)v76 + 7) = v85;
    *((_WORD *)v76 + 32) = v86;
    long long v15 = v104;
    uint64_t v88 = v102[9];
    uint64_t v89 = (void *)((char *)v104 + v88);
    uint64_t v90 = (void *)((char *)v103 + v88);
    v76[66] = v87;
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v91 = sub_269840();
      uint64_t v92 = *(void *)(v91 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
      {
        uint64_t v93 = sub_4A98(&qword_2EBC78);
        memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v92 + 16))(v89, v90, v91);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
      }
    }
    else
    {
      void *v89 = *v90;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v94 = v102[10];
    uint64_t v95 = (void *)((char *)v104 + v94);
    uint64_t v96 = (char *)v103 + v94;
    id v98 = *(void **)v96;
    uint64_t v97 = *((void *)v96 + 1);
    *uint64_t v95 = v98;
    v95[1] = v97;
    id v99 = v98;
  }
  return v15;
}

void destroy for QuickActionBuyButtonViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(a1 + v6[5], v4);
  uint64_t v7 = a1 + v6[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(a1 + v6[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v9 = a1 + v6[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_11;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v10 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_10;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_10:
      v9 += v10;
LABEL_11:
      uint64_t v11 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
      break;
    case 4u:
      uint64_t v12 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v13 = sub_26A220();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v9, v13);
      uint64_t v15 = sub_4A98(&qword_2EE448);
      v14(v9 + *(int *)(v15 + 48), v13);
      break;
    default:
      break;
  }
  uint64_t v16 = a1 + v6[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else if (*(void *)(v16 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16);
  }
  uint64_t v18 = a1 + v6[14];
  uint64_t v19 = sub_26A220();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[5]);
  uint64_t v21 = a1 + a2[6];
  if (*(void *)(v21 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + a2[8];
  sub_C360(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(void *)(v22 + 24), *(void *)(v22 + 32), *(void *)(v22 + 40), *(void *)(v22 + 48), *(void *)(v22 + 56), *(_WORD *)(v22 + 64), *(unsigned char *)(v22 + 66));
  uint64_t v23 = a1 + a2[9];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_269840();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v26 = *(void **)(a1 + a2[10]);
}

uint64_t initializeWithCopy for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  *(unsigned char *)(a1 + v8[9]) = *(unsigned char *)(a2 + v8[9]);
  uint64_t v13 = v8[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  if (*v15 >= 3uLL)
  {
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    void *v14 = *v15;
    v14[1] = v17;
    uint64_t v19 = v15[3];
    _OWORD v14[2] = v18;
    v14[3] = v19;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
  }
  uint64_t v20 = v8[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v24 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
      goto LABEL_15;
    case 1u:
      uint64_t v25 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v25;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      uint64_t v26 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v26;
      uint64_t v27 = (void *)v22[2];
      v21[2] = v27;
      swift_bridgeObjectRetain();
      id v28 = v27;
      uint64_t v29 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v30 = (char *)v21 + v29;
      id v31 = (char *)v22 + v29;
      uint64_t v32 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_15;
    case 3u:
      uint64_t v33 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v33;
      swift_bridgeObjectRetain();
      uint64_t v34 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v35 = (char *)v21 + v34;
      uint64_t v36 = (char *)v22 + v34;
      uint64_t v37 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      goto LABEL_15;
    case 4u:
      uint64_t v38 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v21, v22, v38);
      uint64_t v39 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v40 = (void *)((char *)v21 + v39);
      uint64_t v41 = (void *)((char *)v22 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 5u:
      uint64_t v43 = sub_26A220();
      uint64_t v44 = *(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16);
      v44(v21, v22, v43);
      uint64_t v45 = sub_4A98(&qword_2EE448);
      v44((void *)((char *)v21 + *(int *)(v45 + 48)), (void *)((char *)v22 + *(int *)(v45 + 48)), v43);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  uint64_t v46 = v8[13];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  }
  else
  {
    uint64_t v50 = *(void *)(v48 + 24);
    if (v50)
    {
      uint64_t v51 = *(void *)(v48 + 32);
      *(void *)(v47 + 24) = v50;
      *(void *)(v47 + 32) = v51;
      (**(void (***)(uint64_t, uint64_t))(v50 - 8))(v47, v48);
    }
    else
    {
      long long v52 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v52;
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v8[14];
  uint64_t v54 = (void *)(a1 + v53);
  long long v55 = (const void *)(a2 + v53);
  uint64_t v56 = sub_26A220();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_4A98(&qword_2EA0C0);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v59 = a3[5];
  long long v60 = *(_OWORD *)(a2 + v59 + 24);
  *(_OWORD *)(a1 + v59 + 24) = v60;
  (**(void (***)(void))(v60 - 8))();
  uint64_t v61 = a3[6];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)(a2 + v61 + 24);
  if (v64)
  {
    uint64_t v65 = *(void *)(v63 + 32);
    *(void *)(v62 + 24) = v64;
    *(void *)(v62 + 32) = v65;
    (**(void (***)(void))(v64 - 8))();
  }
  else
  {
    long long v66 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v66;
    *(void *)(v62 + 32) = *(void *)(v63 + 32);
  }
  uint64_t v67 = a3[7];
  uint64_t v68 = a3[8];
  long long v69 = (void *)(a1 + v67);
  uint64_t v70 = (void *)(a2 + v67);
  uint64_t v71 = v70[1];
  *long long v69 = *v70;
  v69[1] = v71;
  uint64_t v72 = a3;
  uint64_t v73 = a1 + v68;
  uint64_t v74 = a2 + v68;
  uint64_t v76 = *(void *)(a2 + v68);
  uint64_t v75 = *(void *)(a2 + v68 + 8);
  uint64_t v77 = *(void *)(a2 + v68 + 16);
  uint64_t v78 = *(void *)(a2 + v68 + 24);
  id v99 = v72;
  uint64_t v100 = a2;
  uint64_t v79 = a1;
  uint64_t v80 = *(void *)(v74 + 32);
  uint64_t v81 = *(void *)(v74 + 40);
  uint64_t v82 = *(void *)(v74 + 56);
  uint64_t v98 = *(void *)(v74 + 48);
  uint64_t v101 = v79;
  __int16 v83 = *(_WORD *)(v74 + 64);
  char v84 = *(unsigned char *)(v74 + 66);
  swift_bridgeObjectRetain();
  sub_44FC4(v76, v75, v77, v78, v80, v81, v98, v82, v83, v84);
  *(void *)uint64_t v73 = v76;
  *(void *)(v73 + 8) = v75;
  *(void *)(v73 + 16) = v77;
  *(void *)(v73 + 24) = v78;
  *(void *)(v73 + 32) = v80;
  *(void *)(v73 + 40) = v81;
  *(void *)(v73 + 48) = v98;
  *(void *)(v73 + 56) = v82;
  *(_WORD *)(v73 + 64) = v83;
  uint64_t v85 = v99[9];
  __int16 v86 = (void *)(v101 + v85);
  char v87 = (void *)(v100 + v85);
  *(unsigned char *)(v73 + 66) = v84;
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v88 = sub_269840();
    uint64_t v89 = *(void *)(v88 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
    {
      uint64_t v90 = sub_4A98(&qword_2EBC78);
      memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    }
  }
  else
  {
    *__int16 v86 = *v87;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v91 = v99[10];
  uint64_t v92 = (void *)(v101 + v91);
  uint64_t v93 = v100 + v91;
  uint64_t v95 = *(void **)v93;
  uint64_t v94 = *(void *)(v93 + 8);
  *uint64_t v92 = v95;
  v92[1] = v94;
  id v96 = v95;
  return v101;
}

uint64_t assignWithCopy for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  if (a1 != a2)
  {
    uint64_t v9 = v8[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_B6DC(a1 + v9, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  *(unsigned char *)(a1 + v8[9]) = *(unsigned char *)(a2 + v8[9]);
  uint64_t v13 = v8[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  unint64_t v16 = *(void *)(a2 + v13);
  if (*(void *)(a1 + v13) >= 3uLL)
  {
    if (v16 < 3)
    {
      sub_B6DC(a1 + v13, &qword_2EE748);
      long long v18 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v18;
      if (a1 == a2) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    *(void *)uint64_t v14 = v16;
    swift_retain();
    swift_release();
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    swift_retain();
    swift_release();
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    swift_retain();
    swift_release();
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_14;
    }
LABEL_17:
    *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
    goto LABEL_30;
  }
  if (v16 >= 3)
  {
    *(void *)uint64_t v14 = v16;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  if (a1 == a2) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v19 = v8[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  sub_129174(a1 + v19, type metadata accessor for ButtonViewModel.Content);
  uint64_t v22 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v23 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v20, v21, v23);
      goto LABEL_23;
    case 1u:
      void *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      void *v20 = *v21;
      v20[1] = v21[1];
      uint64_t v24 = (void *)v21[2];
      long long v20[2] = v24;
      swift_bridgeObjectRetain();
      id v25 = v24;
      uint64_t v26 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v27 = (char *)v20 + v26;
      id v28 = (char *)v21 + v26;
      uint64_t v29 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      goto LABEL_23;
    case 3u:
      void *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      uint64_t v30 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v31 = (char *)v20 + v30;
      uint64_t v32 = (char *)v21 + v30;
      uint64_t v33 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      goto LABEL_23;
    case 4u:
      uint64_t v34 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v20, v21, v34);
      uint64_t v35 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v36 = (void *)((char *)v20 + v35);
      uint64_t v37 = (void *)((char *)v21 + v35);
      *uint64_t v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 5u:
      uint64_t v38 = sub_26A220();
      uint64_t v39 = *(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16);
      v39(v20, v21, v38);
      uint64_t v40 = sub_4A98(&qword_2EE448);
      v39((void *)((char *)v20 + *(int *)(v40 + 48)), (void *)((char *)v21 + *(int *)(v40 + 48)), v38);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  uint64_t v41 = v8[13];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (long long *)(a2 + v41);
  sub_129174(a1 + v41, type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = sub_2696C0();
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  else
  {
    uint64_t v45 = *((void *)v43 + 3);
    if (v45)
    {
      *(void *)(v42 + 24) = v45;
      *(void *)(v42 + 32) = *((void *)v43 + 4);
      (**(void (***)(uint64_t, long long *))(v45 - 8))(v42, v43);
    }
    else
    {
      long long v46 = *v43;
      long long v47 = v43[1];
      *(void *)(v42 + 32) = *((void *)v43 + 4);
      *(_OWORD *)uint64_t v42 = v46;
      *(_OWORD *)(v42 + 16) = v47;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v48 = v8[14];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = sub_26A220();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
LABEL_35:
    uint64_t v56 = sub_4A98(&qword_2EA0C0);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v49, v50, v51);
LABEL_36:
  sub_16D58((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  uint64_t v57 = a3[6];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = (uint64_t *)(a2 + v57);
  uint64_t v60 = *(void *)(a2 + v57 + 24);
  if (*(void *)(a1 + v57 + 24))
  {
    if (v60)
    {
      sub_16D58((uint64_t *)v58, v59);
      goto LABEL_43;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v58);
  }
  else if (v60)
  {
    *(void *)(v58 + 24) = v60;
    *(void *)(v58 + 32) = v59[4];
    (**(void (***)(uint64_t, long long *))(v60 - 8))(v58, (long long *)v59);
    goto LABEL_43;
  }
  long long v61 = *(_OWORD *)v59;
  long long v62 = *((_OWORD *)v59 + 1);
  *(void *)(v58 + 32) = v59[4];
  *(_OWORD *)uint64_t v58 = v61;
  *(_OWORD *)(v58 + 16) = v62;
LABEL_43:
  uint64_t v63 = a3[7];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[8];
  uint64_t v103 = a1;
  uint64_t v104 = a2;
  uint64_t v67 = a1 + v66;
  uint64_t v68 = v104 + v66;
  uint64_t v69 = *(void *)v68;
  uint64_t v70 = *(void *)(v68 + 8);
  uint64_t v71 = *(void *)(v68 + 16);
  uint64_t v72 = *(void *)(v68 + 24);
  uint64_t v73 = *(void *)(v68 + 32);
  uint64_t v74 = *(void *)(v68 + 40);
  uint64_t v102 = a3;
  uint64_t v76 = *(void *)(v68 + 48);
  uint64_t v75 = *(void *)(v68 + 56);
  __int16 v77 = *(_WORD *)(v68 + 64);
  sub_44FC4(*(void *)v68, v70, v71, v72, v73, v74, v76, v75, v77, *(unsigned char *)(v68 + 66));
  uint64_t v78 = *(void *)v67;
  uint64_t v79 = *(void *)(v67 + 8);
  uint64_t v80 = *(void *)(v67 + 16);
  uint64_t v81 = *(void *)(v67 + 24);
  uint64_t v82 = *(void *)(v67 + 32);
  uint64_t v83 = *(void *)(v67 + 40);
  uint64_t v84 = *(void *)(v67 + 48);
  uint64_t v85 = *(void *)(v67 + 56);
  __int16 v86 = *(_WORD *)(v67 + 64);
  char v87 = *(unsigned char *)(v67 + 66);
  *(void *)uint64_t v67 = v69;
  *(void *)(v67 + 8) = v70;
  *(void *)(v67 + 16) = v71;
  *(void *)(v67 + 24) = v72;
  *(void *)(v67 + 32) = v73;
  *(void *)(v67 + 40) = v74;
  *(void *)(v67 + 48) = v76;
  *(void *)(v67 + 56) = v75;
  *(_WORD *)(v67 + 64) = v77;
  *(unsigned char *)(v67 + 66) = v101;
  sub_C360(v78, v79, v80, v81, v82, v83, v84, v85, v86, v87);
  if (v103 != v104)
  {
    uint64_t v88 = v102[9];
    uint64_t v89 = (void *)(v103 + v88);
    uint64_t v90 = (void *)(v104 + v88);
    sub_B6DC(v103 + v88, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v91 = sub_269840();
      uint64_t v92 = *(void *)(v91 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
      {
        uint64_t v93 = sub_4A98(&qword_2EBC78);
        memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v92 + 16))(v89, v90, v91);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
      }
    }
    else
    {
      void *v89 = *v90;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v94 = v102[10];
  uint64_t v95 = (void *)(v103 + v94);
  id v96 = (void *)(v104 + v94);
  uint64_t v97 = *(void **)(v103 + v94);
  uint64_t v98 = *(void **)(v104 + v94);
  *uint64_t v95 = *v96;
  id v99 = v98;

  v95[1] = v96[1];
  return v103;
}

uint64_t initializeWithTake for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  *(unsigned char *)(a1 + v8[9]) = *(unsigned char *)(a2 + v8[9]);
  uint64_t v14 = v8[10];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  unint64_t v16 = (_OWORD *)(a2 + v14);
  long long v17 = v16[1];
  _OWORD *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v8[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      goto LABEL_11;
    case 2u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[2] = v20[2];
      uint64_t v23 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v24 = (char *)v19 + v23;
      id v25 = (char *)v20 + v23;
      uint64_t v26 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_11;
    case 3u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_11;
    case 4u:
      uint64_t v31 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v19, v20, v31);
      uint64_t v32 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v19 + *(int *)(v32 + 48)) = *(_OWORD *)((char *)v20 + *(int *)(v32 + 48));
      goto LABEL_11;
    case 5u:
      uint64_t v33 = sub_26A220();
      uint64_t v34 = *(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32);
      v34(v19, v20, v33);
      uint64_t v35 = sub_4A98(&qword_2EE448);
      v34((void *)((char *)v19 + *(int *)(v35 + 48)), (void *)((char *)v20 + *(int *)(v35 + 48)), v33);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  uint64_t v36 = v8[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  uint64_t v41 = v8[14];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  uint64_t v44 = sub_26A220();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = sub_4A98(&qword_2EA0C0);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v47 = a3[5];
  uint64_t v48 = a3[6];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(void *)(v49 + 32) = *(void *)(v50 + 32);
  long long v51 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v51;
  uint64_t v52 = a1 + v48;
  uint64_t v53 = (long long *)(a2 + v48);
  *(void *)(v52 + 32) = *((void *)v53 + 4);
  long long v55 = *v53;
  long long v54 = v53[1];
  uint64_t v56 = a3[7];
  uint64_t v57 = a3[8];
  long long v58 = *(_OWORD *)(a2 + v56);
  *(_OWORD *)uint64_t v52 = v55;
  *(_OWORD *)(v52 + 16) = v54;
  *(_OWORD *)(a1 + v56) = v58;
  uint64_t v59 = a1 + v57;
  long long v60 = *(_OWORD *)(a2 + v57);
  long long v61 = *(_OWORD *)(a2 + v57 + 16);
  long long v62 = *(_OWORD *)(a2 + v57 + 32);
  long long v63 = *(_OWORD *)(a2 + v57 + 48);
  *(_DWORD *)(v59 + 63) = *(_DWORD *)(a2 + v57 + 63);
  *(_OWORD *)(v59 + 32) = v62;
  *(_OWORD *)(v59 + 48) = v63;
  uint64_t v64 = a3[9];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (const void *)(a2 + v64);
  *(_OWORD *)uint64_t v59 = v60;
  *(_OWORD *)(v59 + 16) = v61;
  uint64_t v67 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = sub_269840();
    uint64_t v69 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v66, 1, v68))
    {
      uint64_t v70 = sub_4A98(&qword_2EBC78);
      memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v65, v66, v68);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v65, 0, 1, v68);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  if (a1 != a2)
  {
    uint64_t v9 = v8[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_B6DC(a1 + v9, &qword_2EA968);
    uint64_t v12 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  *(unsigned char *)(a1 + v8[9]) = *(unsigned char *)(a2 + v8[9]);
  uint64_t v14 = v8[10];
  uint64_t v15 = (void *)(a1 + v14);
  unint64_t v16 = (void *)(a2 + v14);
  if (*(void *)(a1 + v14) >= 3uLL)
  {
    if (*v16 >= 3uLL)
    {
      void *v15 = *v16;
      swift_release();
      v15[1] = v16[1];
      swift_release();
      v15[2] = v16[2];
      swift_release();
      v15[3] = v16[3];
      swift_release();
      if (a1 != a2) {
        goto LABEL_9;
      }
LABEL_12:
      *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
      goto LABEL_22;
    }
    sub_B6DC((uint64_t)v15, &qword_2EE748);
  }
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v18 = v8[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_129174(a1 + v18, type metadata accessor for ButtonViewModel.Content);
  uint64_t v21 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      goto LABEL_18;
    case 2u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[2] = v20[2];
      uint64_t v23 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v24 = (char *)v19 + v23;
      id v25 = (char *)v20 + v23;
      uint64_t v26 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_18;
    case 3u:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v27 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      id v28 = (char *)v19 + v27;
      uint64_t v29 = (char *)v20 + v27;
      uint64_t v30 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_18;
    case 4u:
      uint64_t v31 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v19, v20, v31);
      uint64_t v32 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v19 + *(int *)(v32 + 48)) = *(_OWORD *)((char *)v20 + *(int *)(v32 + 48));
      goto LABEL_18;
    case 5u:
      uint64_t v33 = sub_26A220();
      uint64_t v34 = *(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32);
      v34(v19, v20, v33);
      uint64_t v35 = sub_4A98(&qword_2EE448);
      v34((void *)((char *)v19 + *(int *)(v35 + 48)), (void *)((char *)v20 + *(int *)(v35 + 48)), v33);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  uint64_t v36 = v8[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  sub_129174(a1 + v36, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v39 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
LABEL_22:
  uint64_t v41 = v8[14];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = sub_26A220();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
LABEL_27:
    uint64_t v49 = sub_4A98(&qword_2EA0C0);
    memcpy(v42, v43, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v45 + 40))(v42, v43, v44);
LABEL_28:
  uint64_t v50 = a3[5];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v50);
  *(void *)(v51 + 32) = *(void *)(v52 + 32);
  long long v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  uint64_t v54 = a3[6];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  if (*(void *)(a1 + v54 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v55);
  }
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  uint64_t v58 = a3[7];
  uint64_t v59 = (void *)(a1 + v58);
  long long v60 = (uint64_t *)(a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[8];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  __int16 v66 = *(_WORD *)(v65 + 64);
  char v67 = *(unsigned char *)(v65 + 66);
  uint64_t v68 = *(void *)v64;
  uint64_t v69 = *(void *)(v64 + 8);
  uint64_t v70 = *(void *)(v64 + 16);
  uint64_t v71 = *(void *)(v64 + 24);
  uint64_t v72 = *(void *)(v64 + 32);
  uint64_t v73 = *(void *)(v64 + 40);
  uint64_t v74 = *(void *)(v64 + 48);
  uint64_t v75 = *(void *)(v64 + 56);
  __int16 v76 = *(_WORD *)(v64 + 64);
  char v77 = *(unsigned char *)(v64 + 66);
  long long v78 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  *(_OWORD *)(v64 + 16) = v78;
  long long v79 = *(_OWORD *)(v65 + 48);
  *(_OWORD *)(v64 + 32) = *(_OWORD *)(v65 + 32);
  *(_OWORD *)(v64 + 48) = v79;
  *(_WORD *)(v64 + 64) = v66;
  *(unsigned char *)(v64 + 66) = v67;
  sub_C360(v68, v69, v70, v71, v72, v73, v74, v75, v76, v77);
  if (a1 != a2)
  {
    uint64_t v80 = a3[9];
    uint64_t v81 = (void *)(a1 + v80);
    uint64_t v82 = (const void *)(a2 + v80);
    sub_B6DC(a1 + v80, &qword_2EB918);
    uint64_t v83 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v84 = sub_269840();
      uint64_t v85 = *(void *)(v84 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v82, 1, v84))
      {
        uint64_t v86 = sub_4A98(&qword_2EBC78);
        memcpy(v81, v82, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v85 + 32))(v81, v82, v84);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v81, 0, 1, v84);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
  }
  uint64_t v87 = a3[10];
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = (void *)(a2 + v87);
  uint64_t v90 = *(void **)(a1 + v87);
  *uint64_t v88 = *v89;

  v88[1] = v89[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12FA24);
}

uint64_t sub_12FA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ButtonViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_4A98(&qword_2ED910);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for QuickActionBuyButtonViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12FB6C);
}

uint64_t sub_12FB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ButtonViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_4A98(&qword_2ED910);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_12FCA0()
{
  type metadata accessor for ButtonViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_802FC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_12FD90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_12FDEC()
{
  return swift_deallocObject();
}

uint64_t sub_12FDFC(uint64_t a1)
{
  return sub_12FE3C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1287F8);
}

uint64_t sub_12FE14()
{
  return swift_deallocObject();
}

uint64_t sub_12FE24(uint64_t a1)
{
  return sub_12FE3C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_128B0C);
}

uint64_t sub_12FE3C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned int *)(v2 + 32), *(unsigned __int8 *)(v2 + 36));
}

uint64_t AudiobookCoverEffect.init(shadowScale:cornerRadius:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for AudiobookCoverEffect() + 24));
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a1 = a2;
  a1[1] = a3;
  return result;
}

uint64_t type metadata accessor for AudiobookCoverEffect()
{
  uint64_t result = qword_2F0F28;
  if (!qword_2F0F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AudiobookCoverEffect.body(cover:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_4A98(&qword_2F0E80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AudiobookCoverEffect();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_132C2C(v3, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_130180((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a2 = sub_1301E4;
  a2[1] = v15;
  return result;
}

uint64_t sub_130104@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_26A940();
  double v7 = v6;
  double v9 = v8;
  *a3 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  a3[1] = v10;
  uint64_t v11 = sub_4A98(&qword_2F0F78);
  return sub_1301E8(a1, a2, (uint64_t)a3 + *(int *)(v11 + 44), v7, v9);
}

uint64_t sub_130180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiobookCoverEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1301E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v40 = a3;
  uint64_t v9 = sub_26AC50();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_4A98(&qword_2F0F80);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F0F88);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = sub_4A98(&qword_2F0F90);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v28 = (uint64_t *)((char *)&v39 - v27);
  *id v28 = sub_26C630();
  v28[1] = v29;
  uint64_t v30 = sub_4A98(&qword_2F0F98);
  sub_130570(a1, a2, (uint64_t)v28 + *(int *)(v30 + 44), a4, a5);
  sub_1312F8(a2, a1, (uint64_t)v15, a5);
  uint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = (char *)v12 + *(int *)(v10 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  *uint64_t v12 = v31;
  v12[1] = v31;
  uint64_t v35 = (uint64_t)&v20[*(int *)(v17 + 44)];
  sub_132C2C((uint64_t)v12, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v15, (uint64_t)v20, &qword_2F0F80);
  sub_65868((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v15, &qword_2F0F80);
  sub_19CC4((uint64_t)v20, (uint64_t)v22, &qword_2F0F88);
  sub_B678((uint64_t)v28, (uint64_t)v26, &qword_2F0F90);
  sub_B678((uint64_t)v22, (uint64_t)v20, &qword_2F0F88);
  uint64_t v36 = v40;
  sub_B678((uint64_t)v26, v40, &qword_2F0F90);
  uint64_t v37 = sub_4A98(&qword_2F0FA0);
  sub_B678((uint64_t)v20, v36 + *(int *)(v37 + 48), &qword_2F0F88);
  sub_B6DC((uint64_t)v22, &qword_2F0F88);
  sub_B6DC((uint64_t)v28, &qword_2F0F90);
  sub_B6DC((uint64_t)v20, &qword_2F0F88);
  return sub_B6DC((uint64_t)v26, &qword_2F0F90);
}

uint64_t sub_130570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v114 = a2;
  uint64_t v126 = a3;
  uint64_t v8 = sub_26C700();
  uint64_t v124 = *(void *)(v8 - 8);
  uint64_t v125 = v8;
  __chkstk_darwin(v8);
  uint64_t v123 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_4A98(&qword_2F0FA8) - 8;
  __chkstk_darwin(v111);
  long long v108 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_4A98(&qword_2F0FB8) - 8;
  __chkstk_darwin(v110);
  long long v109 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_4A98(&qword_2F0FC0) - 8;
  __chkstk_darwin(v121);
  uint64_t v116 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_4A98(&qword_2F0FC8) - 8;
  __chkstk_darwin(v119);
  uint64_t v115 = (uint64_t)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_4A98(&qword_2F0FD0) - 8;
  __chkstk_darwin(v118);
  uint64_t v113 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2F0FD8) - 8;
  uint64_t v15 = __chkstk_darwin(v117);
  uint64_t v122 = (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v112 = (char *)&v87 - v18;
  __chkstk_darwin(v17);
  uint64_t v120 = (uint64_t)&v87 - v19;
  uint64_t v106 = sub_26A6E0();
  uint64_t v105 = *(void *)(v106 - 8);
  uint64_t v20 = __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v103 = (uint64_t)&v87 - v22;
  uint64_t v23 = sub_26AC50();
  uint64_t v24 = v23 - 8;
  uint64_t v102 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2ECB78);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2ECB80);
  uint64_t v32 = v31 - 8;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2ECB88);
  uint64_t v36 = v35 - 8;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v87 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2ECB90) - 8;
  __chkstk_darwin(v95);
  uint64_t v93 = (uint64_t)&v87 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_4A98(&qword_2ECB98) - 8;
  uint64_t v40 = __chkstk_darwin(v94);
  uint64_t v107 = (uint64_t)&v87 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v92 = (uint64_t)&v87 - v43;
  __chkstk_darwin(v42);
  uint64_t v127 = (uint64_t)&v87 - v44;
  uint64_t v45 = *(void *)(a1 + 8);
  uint64_t v46 = &v26[*(int *)(v24 + 28)];
  uint64_t v47 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v99 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v98 = sub_26B160();
  uint64_t v48 = *(void *)(v98 - 8);
  uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  uint64_t v100 = v48 + 104;
  v97(v46, v47, v98);
  *(void *)uint64_t v26 = v45;
  *((void *)v26 + 1) = v45;
  uint64_t v49 = sub_26C150();
  id v96 = &type metadata accessor for RoundedRectangle;
  sub_132C2C((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v30[*(int *)(v28 + 60)] = v49;
  *(_WORD *)&v30[*(int *)(v28 + 64)] = 256;
  char v101 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  double v50 = *(double *)a1;
  uint64_t v88 = a1;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v30, (uint64_t)v34, &qword_2ECB78);
  uint64_t v51 = &v34[*(int *)(v32 + 44)];
  long long v52 = v129;
  *(_OWORD *)uint64_t v51 = v128;
  *((_OWORD *)v51 + 1) = v52;
  *((_OWORD *)v51 + 2) = v130;
  sub_B6DC((uint64_t)v30, &qword_2ECB78);
  sub_B678((uint64_t)v34, (uint64_t)v38, &qword_2ECB80);
  long long v53 = &v38[*(int *)(v36 + 44)];
  *(void *)long long v53 = 0;
  *((double *)v53 + 1) = (1.0 - v50) * a5 * -0.25;
  sub_B6DC((uint64_t)v34, &qword_2ECB80);
  uint64_t v91 = a1 + *(int *)(type metadata accessor for AudiobookCoverEffect() + 24);
  uint64_t v54 = v103;
  sub_40FB4(v103);
  unsigned int v90 = enum case for ColorScheme.dark(_:);
  uint64_t v55 = v105;
  uint64_t v89 = *(void (**)(char *))(v105 + 104);
  uint64_t v56 = v104;
  uint64_t v57 = v106;
  v89(v104);
  uint64_t v58 = v54;
  LOBYTE(v54) = sub_26A6D0();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
  v59(v56, v57);
  v59((char *)v58, v57);
  if (v54) {
    double v60 = 0.9;
  }
  else {
    double v60 = 0.75;
  }
  uint64_t v61 = v93;
  sub_B678((uint64_t)v38, v93, &qword_2ECB88);
  *(double *)(v61 + *(int *)(v95 + 44)) = v60;
  sub_B6DC((uint64_t)v38, &qword_2ECB88);
  uint64_t v62 = v92;
  sub_B678(v61, v92, &qword_2ECB90);
  uint64_t v63 = v62 + *(int *)(v94 + 44);
  *(double *)uint64_t v63 = a4 * 0.1;
  *(unsigned char *)(v63 + 8) = 0;
  sub_B6DC(v61, &qword_2ECB90);
  sub_19CC4(v62, v127, &qword_2ECB98);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v64 = sub_4A98(&qword_2F0E80);
  uint64_t v65 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v108, v114, v64);
  __int16 v66 = (_OWORD *)(v65 + *(int *)(v111 + 44));
  long long v67 = v132;
  _OWORD *v66 = v131;
  v66[1] = v67;
  void v66[2] = v133;
  uint64_t v68 = *(void *)(v88 + 8);
  v97(&v26[*(int *)(v102 + 28)], v99, v98);
  *(void *)uint64_t v26 = v68;
  *((void *)v26 + 1) = v68;
  uint64_t v69 = (uint64_t)v109;
  uint64_t v70 = (uint64_t)&v109[*(int *)(v110 + 44)];
  sub_132C2C((uint64_t)v26, v70, (uint64_t (*)(void))v96);
  *(_WORD *)(v70 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678(v65, v69, &qword_2F0FA8);
  sub_65868((uint64_t)v26, (uint64_t (*)(void))v101);
  sub_B6DC(v65, &qword_2F0FA8);
  sub_40FB4(v58);
  ((void (*)(char *, void, uint64_t))v89)(v56, v90, v57);
  LOBYTE(v70) = sub_26A6D0();
  v59(v56, v57);
  v59((char *)v58, v57);
  if (v70) {
    double v71 = 0.15;
  }
  else {
    double v71 = 0.5;
  }
  uint64_t v72 = v116;
  sub_B678(v69, v116, &qword_2F0FB8);
  *(double *)(v72 + *(int *)(v121 + 44)) = v71;
  sub_B6DC(v69, &qword_2F0FB8);
  uint64_t v73 = v115;
  sub_B678(v72, v115, &qword_2F0FC0);
  uint64_t v74 = v73 + *(int *)(v119 + 44);
  *(double *)uint64_t v74 = a4 * 0.1;
  *(unsigned char *)(v74 + 8) = 0;
  sub_B6DC(v72, &qword_2F0FC0);
  uint64_t v75 = v113;
  sub_B678(v73, v113, &qword_2F0FC8);
  *(void *)(v75 + *(int *)(v118 + 44)) = 0x3FF199999999999ALL;
  sub_B6DC(v73, &qword_2F0FC8);
  char v77 = v123;
  uint64_t v76 = v124;
  uint64_t v78 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, enum case for BlendMode.color(_:), v125);
  uint64_t v79 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(&v112[*(int *)(v117 + 44)], v77, v78);
  sub_B678(v75, v79, &qword_2F0FD0);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  sub_B6DC(v75, &qword_2F0FD0);
  uint64_t v80 = v120;
  sub_19CC4(v79, v120, &qword_2F0FD8);
  uint64_t v81 = v127;
  uint64_t v82 = v107;
  sub_B678(v127, v107, &qword_2ECB98);
  uint64_t v83 = v122;
  sub_B678(v80, v122, &qword_2F0FD8);
  uint64_t v84 = v126;
  sub_B678(v82, v126, &qword_2ECB98);
  uint64_t v85 = sub_4A98(&qword_2F0FE0);
  sub_B678(v83, v84 + *(int *)(v85 + 48), &qword_2F0FD8);
  sub_B6DC(v80, &qword_2F0FD8);
  sub_B6DC(v81, &qword_2ECB98);
  sub_B6DC(v83, &qword_2F0FD8);
  return sub_B6DC(v82, &qword_2ECB98);
}

uint64_t sub_1312C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1312DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1312F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D1>)
{
  uint64_t v156 = a2;
  uint64_t v149 = a3;
  uint64_t v142 = sub_26A6E0();
  uint64_t v141 = *(void *)(v142 - 8);
  uint64_t v6 = __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v138 = (uint64_t)&v120 - v8;
  uint64_t v158 = sub_26A7A0();
  uint64_t v168 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v134 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_4A98(&qword_2ECAF0) - 8;
  uint64_t v10 = __chkstk_darwin(v167);
  long long v148 = (uint64_t *)((char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  long long v133 = (uint64_t *)((char *)&v120 - v12);
  uint64_t v137 = sub_4A98(&qword_2ECAF8) - 8;
  uint64_t v13 = __chkstk_darwin(v137);
  uint64_t v147 = (uint64_t)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v136 = (uint64_t)&v120 - v15;
  uint64_t v157 = sub_4A98(&qword_2ECB00) - 8;
  uint64_t v16 = __chkstk_darwin(v157);
  uint64_t v146 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v135 = (char *)&v120 - v18;
  uint64_t v160 = sub_26AC50() - 8;
  __chkstk_darwin(v160);
  long long v129 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_4A98(&qword_2ECB08) - 8;
  uint64_t v20 = __chkstk_darwin(v163);
  uint64_t v139 = (uint64_t)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v155 = (uint64_t)&v120 - v22;
  uint64_t v132 = sub_4A98(&qword_2ECB10) - 8;
  uint64_t v23 = __chkstk_darwin(v132);
  uint64_t v144 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  long long v131 = (char *)&v120 - v25;
  uint64_t v166 = sub_4A98(&qword_2ECB18) - 8;
  uint64_t v26 = __chkstk_darwin(v166);
  uint64_t v145 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v143 = (uint64_t)&v120 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v164 = (uint64_t)&v120 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v130 = (uint64_t)&v120 - v33;
  __chkstk_darwin(v32);
  uint64_t v165 = (uint64_t)&v120 - v34;
  uint64_t v35 = sub_26AC80();
  __chkstk_darwin(v35 - 8);
  long long v128 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_26C700();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v120 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_4A98(&qword_2ECB20) - 8;
  uint64_t v41 = __chkstk_darwin(v127);
  uint64_t v154 = (uint64_t)&v120 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v161 = (uint64_t)&v120 - v43;
  uint64_t v44 = sub_4A98(&qword_2F0FA8);
  uint64_t v45 = v44 - 8;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v159 = (uint64_t)&v120 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v120 - v48;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  double v150 = a4;
  sub_26A8D0();
  uint64_t v50 = sub_4A98(&qword_2F0E80);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
  uint64_t v162 = v49;
  v51(v49, a1, v50);
  long long v52 = &v49[*(int *)(v45 + 44)];
  long long v53 = v170;
  *(_OWORD *)long long v52 = v169;
  *((_OWORD *)v52 + 1) = v53;
  *((_OWORD *)v52 + 2) = v171;
  sub_4A98(&qword_2ECB40);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_270BF0;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v54 + 32) = sub_26C560();
  *(void *)(v54 + 40) = v55;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v54 + 48) = sub_26C560();
  *(void *)(v54 + 56) = v56;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  uint64_t v57 = v172;
  long long v126 = v173;
  uint64_t v58 = v174;
  uint64_t v59 = v175;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v60 = v176;
  char v61 = v177;
  uint64_t v124 = v178;
  LODWORD(v123) = v179;
  uint64_t v62 = v180;
  uint64_t v63 = v181;
  long long v152 = *(void (**)(char *, void, uint64_t))(v38 + 104);
  uint64_t v153 = v38 + 104;
  uint64_t v64 = v40;
  uint64_t v125 = (void (*)(char *, uint64_t, void))v40;
  v152(v40, enum case for BlendMode.softLight(_:), v37);
  uint64_t v65 = v38;
  __int16 v66 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v67 = (uint64_t)v128;
  uint64_t v151 = v37;
  v66(v128, v64, v37);
  uint64_t v68 = v154;
  sub_132C2C(v67, v154 + *(int *)(v127 + 44), (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v68 = v57;
  *(_OWORD *)(v68 + 8) = v126;
  *(void *)(v68 + 24) = v58;
  *(void *)(v68 + 32) = v59;
  *(void *)(v68 + 40) = v60;
  *(unsigned char *)(v68 + 48) = v61;
  *(void *)(v68 + 56) = v124;
  *(unsigned char *)(v68 + 64) = (_BYTE)v123;
  *(void *)(v68 + 72) = v62;
  *(void *)(v68 + 80) = v63;
  *(void *)(v68 + 88) = 0x3FD999999999999ALL;
  swift_bridgeObjectRetain();
  sub_65868(v67, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(void (*)(char *, uint64_t, void), uint64_t))(v65 + 8))(v125, v37);
  sub_65900((uint64_t)&v172);
  sub_19CC4(v68, v161, &qword_2ECB20);
  uint64_t v69 = *(void *)(v156 + 8);
  uint64_t v70 = v129;
  double v71 = &v129[*(int *)(v160 + 28)];
  uint64_t v72 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v127) = enum case for RoundedCornerStyle.continuous(_:);
  *(void *)&long long v126 = sub_26B160();
  uint64_t v73 = *(void *)(v126 - 8);
  uint64_t v125 = *(void (**)(char *, uint64_t, void))(v73 + 104);
  long long v128 = (char *)(v73 + 104);
  v125(v71, v72, v126);
  *(void *)uint64_t v70 = v69;
  *((void *)v70 + 1) = v69;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v124 = &type metadata accessor for RoundedRectangle;
  uint64_t v74 = v155;
  sub_132C2C((uint64_t)v70, v155, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v75 = (_OWORD *)(v74 + *(int *)(v163 + 44));
  long long v76 = v183;
  _OWORD *v75 = v182;
  v75[1] = v76;
  v75[2] = v184;
  uint64_t v123 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v70, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v77 = sub_26C150();
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  uint64_t v78 = v134;
  sub_26A790();
  swift_release();
  uint64_t v79 = v133;
  uint64_t v80 = (char *)v133 + *(int *)(v167 + 44);
  uint64_t v81 = v168;
  uint64_t v122 = *(void (**)(char *, char *, uint64_t))(v168 + 16);
  uint64_t v82 = v158;
  v122(v80, v78, v158);
  *uint64_t v79 = v77;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v81 + 8);
  uint64_t v168 = v81 + 8;
  uint64_t v121 = v83;
  v83(v78, v82);
  type metadata accessor for AudiobookCoverEffect();
  uint64_t v84 = v138;
  sub_40FB4(v138);
  uint64_t v85 = v141;
  uint64_t v86 = v140;
  uint64_t v87 = v142;
  (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, enum case for ColorScheme.dark(_:), v142);
  LOBYTE(v77) = sub_26A6D0();
  uint64_t v88 = *(void (**)(char *, uint64_t))(v85 + 8);
  v88(v86, v87);
  v88((char *)v84, v87);
  uint64_t v89 = v136;
  sub_B678((uint64_t)v79, v136, &qword_2ECAF0);
  float v90 = 0.15;
  if ((v77 & 1) == 0) {
    float v90 = 0.5;
  }
  uint64_t v91 = v137;
  *(float *)(v89 + *(int *)(v137 + 44)) = v90;
  sub_B6DC((uint64_t)v79, &qword_2ECAF0);
  uint64_t v92 = (uint64_t)v135;
  v152(&v135[*(int *)(v157 + 44)], enum case for BlendMode.screen(_:), v151);
  sub_19CC4(v89, v92, &qword_2ECAF8);
  uint64_t v93 = v132;
  uint64_t v94 = (uint64_t)v131;
  sub_B678(v92, (uint64_t)&v131[*(int *)(v132 + 44)], &qword_2ECB00);
  uint64_t v95 = v155;
  sub_B678(v155, v94, &qword_2ECB08);
  sub_B6DC(v92, &qword_2ECB00);
  sub_B6DC(v95, &qword_2ECB08);
  uint64_t v96 = v130;
  sub_B678(v94, v130, &qword_2ECB10);
  *(unsigned char *)(v96 + *(int *)(v166 + 44)) = 1;
  sub_B6DC(v94, &qword_2ECB10);
  sub_19CC4(v96, v165, &qword_2ECB18);
  uint64_t v97 = *(void *)(v156 + 8);
  v125(&v70[*(int *)(v160 + 28)], v127, v126);
  *(void *)uint64_t v70 = v97;
  *((void *)v70 + 1) = v97;
  uint64_t v98 = (uint64_t)v70;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v99 = (uint64_t)v70;
  uint64_t v100 = v139;
  sub_132C2C(v99, v139, (uint64_t (*)(void))v124);
  char v101 = (_OWORD *)(v100 + *(int *)(v163 + 44));
  long long v102 = v186;
  *char v101 = v185;
  v101[1] = v102;
  v101[2] = v187;
  sub_65868(v98, (uint64_t (*)(void))v123);
  uint64_t v103 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C150();
  sub_26C1C0();
  swift_release();
  sub_26A790();
  swift_release();
  uint64_t v104 = v148;
  uint64_t v105 = v158;
  v122((char *)v148 + *(int *)(v167 + 44), v78, v158);
  uint64_t *v104 = v103;
  v121(v78, v105);
  uint64_t v106 = v147;
  sub_B678((uint64_t)v104, v147, &qword_2ECAF0);
  *(_DWORD *)(v106 + *(int *)(v91 + 44)) = 1048576000;
  sub_B6DC((uint64_t)v104, &qword_2ECAF0);
  uint64_t v107 = (uint64_t)v146;
  v152(&v146[*(int *)(v157 + 44)], enum case for BlendMode.darken(_:), v151);
  sub_19CC4(v106, v107, &qword_2ECAF8);
  uint64_t v108 = (uint64_t)v144;
  sub_B678(v107, (uint64_t)&v144[*(int *)(v93 + 44)], &qword_2ECB00);
  sub_B678(v100, v108, &qword_2ECB08);
  sub_B6DC(v107, &qword_2ECB00);
  sub_B6DC(v100, &qword_2ECB08);
  uint64_t v109 = v143;
  sub_B678(v108, v143, &qword_2ECB10);
  *(unsigned char *)(v109 + *(int *)(v166 + 44)) = 1;
  sub_B6DC(v108, &qword_2ECB10);
  uint64_t v110 = v164;
  sub_19CC4(v109, v164, &qword_2ECB18);
  uint64_t v111 = v159;
  sub_B678((uint64_t)v162, v159, &qword_2F0FA8);
  uint64_t v112 = v161;
  uint64_t v113 = v154;
  sub_B678(v161, v154, &qword_2ECB20);
  uint64_t v114 = v165;
  sub_B678(v165, v109, &qword_2ECB18);
  uint64_t v115 = v145;
  sub_B678(v110, v145, &qword_2ECB18);
  uint64_t v116 = v111;
  uint64_t v117 = v149;
  sub_B678(v116, v149, &qword_2F0FA8);
  uint64_t v118 = (int *)sub_4A98(&qword_2F0FB0);
  sub_B678(v113, v117 + v118[12], &qword_2ECB20);
  sub_B678(v109, v117 + v118[16], &qword_2ECB18);
  sub_B678(v115, v117 + v118[20], &qword_2ECB18);
  sub_B6DC(v164, &qword_2ECB18);
  sub_B6DC(v114, &qword_2ECB18);
  sub_B6DC(v112, &qword_2ECB20);
  sub_B6DC((uint64_t)v162, &qword_2F0FA8);
  sub_B6DC(v115, &qword_2ECB18);
  sub_B6DC(v109, &qword_2ECB18);
  sub_B6DC(v113, &qword_2ECB20);
  return sub_B6DC(v159, &qword_2F0FA8);
}

uint64_t sub_13259C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_4A98(&qword_2F0E80);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_132C2C(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_130180((uint64_t)v14, v17 + v15);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_1301E4;
  a3[1] = v17;
  return result;
}

uint64_t sub_132784(uint64_t a1)
{
  uint64_t result = sub_132950(&qword_2F0EC8, (void (*)(uint64_t))type metadata accessor for AudiobookCoverEffect);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiobookCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1327F0);
}

uint64_t sub_1327F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_4A98(&qword_2EAB20);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for AudiobookCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_132878);
}

uint64_t sub_132878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

unint64_t sub_1328F4()
{
  unint64_t result = qword_2F0F68;
  if (!qword_2F0F68)
  {
    sub_7B0C(&qword_2F0F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F0F68);
  }
  return result;
}

uint64_t sub_132950(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_13299C()
{
  unint64_t v1 = (int *)(type metadata accessor for AudiobookCoverEffect() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_4A98(&qword_2F0E80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v0 + v1[8] + v2;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_132B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AudiobookCoverEffect() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_4A98(&qword_2F0E80) - 8);
  uint64_t v7 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_130104(v1 + v4, v7, a1);
}

uint64_t sub_132C2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t RefreshSeriesUberHeaderAction.seriesInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C224(v1, a1);
}

uint64_t RefreshSeriesUberHeaderAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RefreshSeriesUberHeaderAction() + 20);
  uint64_t v4 = sub_26CB80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RefreshSeriesUberHeaderAction()
{
  uint64_t result = qword_2F1040;
  if (!qword_2F1040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_132D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_26CB80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void *initializeBufferWithCopyOfBuffer for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_26CB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t destroy for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_26CB80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *assignWithCopy for RefreshSeriesUberHeaderAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_16D58(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26CB80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1331A8);
}

uint64_t sub_1331A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_26CB80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RefreshSeriesUberHeaderAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13326C);
}

uint64_t sub_13326C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_26CB80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_133314()
{
  uint64_t result = sub_26CB80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t View.figaroLocationPositionOverride(_:)(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_26BB60();

  return swift_release();
}

uint64_t sub_133440()
{
  uint64_t v0 = sub_4A98(&qword_2F10A8);
  sub_6E18(v0, qword_2F1078);
  sub_6B14(v0, (uint64_t)qword_2F1078);
  sub_4A98(&qword_2F10C0);
  return sub_26CEE0();
}

uint64_t static MetricsFieldsContext.Property<A>.locationStack.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_133584(&qword_2E9C80, &qword_2F10A8, (uint64_t)qword_2F1078, a1);
}

uint64_t sub_1334E8()
{
  uint64_t v0 = sub_4A98(&qword_2F10B0);
  sub_6E18(v0, qword_2F1090);
  sub_6B14(v0, (uint64_t)qword_2F1090);
  return sub_26CEE0();
}

uint64_t static MetricsFieldsContext.Property<A>.locationPositionOverride.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_133584(&qword_2E9C88, &qword_2F10B0, (uint64_t)qword_2F1090, a1);
}

uint64_t sub_133584@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_4A98(a2);
  uint64_t v8 = sub_6B14(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t View.figaroLocation(_:)(uint64_t a1)
{
  sub_133950(a1, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  sub_133950((uint64_t)v3, v1 + 16);
  sub_133A48(v3);
  sub_26BB60();
  return swift_release();
}

uint64_t sub_1336C4(uint64_t a1, uint64_t a2)
{
  sub_133950(a2, (uint64_t)v19);
  sub_133950((uint64_t)v19, (uint64_t)v32);
  sub_133950(a2, (uint64_t)v20);
  uint64_t result = sub_133BCC((uint64_t)v20);
  if (result != 1)
  {
    long long v29 = v20[8];
    long long v30 = v20[9];
    long long v31 = v20[10];
    long long v25 = v20[4];
    long long v26 = v20[5];
    long long v27 = v20[6];
    long long v28 = v20[7];
    long long v21 = v20[0];
    long long v22 = v20[1];
    long long v23 = v20[2];
    long long v24 = v20[3];
    sub_133950((uint64_t)v32, (uint64_t)v18);
    sub_A3E88((uint64_t)v18);
    if (qword_2E9C80 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_4A98(&qword_2F10A8);
    sub_6B14(v4, (uint64_t)qword_2F1078);
    sub_4A98(&qword_2F10C0);
    sub_26CF10();
    if (v17) {
      uint64_t v5 = v17;
    }
    else {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_E6010(0, v5[2] + 1, 1, v5);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      uint64_t v5 = sub_E6010((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    uint64_t v5[2] = v7 + 1;
    uint64_t v8 = &v5[22 * v7];
    long long v9 = v21;
    long long v10 = v23;
    v8[3] = v22;
    v8[4] = v10;
    _OWORD v8[2] = v9;
    long long v11 = v24;
    long long v12 = v25;
    long long v13 = v27;
    v8[7] = v26;
    unsigned char v8[8] = v13;
    void v8[5] = v11;
    v8[6] = v12;
    long long v14 = v28;
    long long v15 = v29;
    long long v16 = v31;
    v8[11] = v30;
    v8[12] = v16;
    v8[9] = v14;
    v8[10] = v15;
    sub_26CEF0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1338B8()
{
  if (qword_2E9C88 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_4A98(&qword_2F10B0);
  sub_6B14(v0, (uint64_t)qword_2F1090);
  return sub_26CEF0();
}

uint64_t sub_133940()
{
  return swift_deallocObject();
}

uint64_t sub_133950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F10B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1339B8()
{
  if (*(void *)(v0 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_133A40(uint64_t a1)
{
  return sub_1336C4(a1, v1 + 16);
}

uint64_t *sub_133A48(uint64_t *a1)
{
  return a1;
}

uint64_t sub_133AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_133B88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_133BCC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 120);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t SeriesQuickActionButtonView.init(model:contextActionMenuView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = swift_getKeyPath();
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = swift_getKeyPath();
  *(_WORD *)(a4 + 88) = 256;
  type metadata accessor for ProfileRestrictions();
  sub_137F60((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *(void *)(a4 + 96) = sub_26AD70();
  *(void *)(a4 + 104) = v8;
  uint64_t v9 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t result = sub_137EF0(a1, a4 + *(int *)(v9 + 32), type metadata accessor for SeriesQuickActionButtonViewModel);
  long long v11 = (void *)(a4 + *(int *)(v9 + 36));
  *long long v11 = a2;
  v11[1] = a3;
  return result;
}

uint64_t SeriesQuickActionButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v427 = a1;
  uint64_t v388 = sub_26AC30();
  uint64_t v387 = *(void *)(v388 - 8);
  __chkstk_darwin(v388);
  v386 = (char *)&v316 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v406 = sub_4A98(&qword_2F10C8);
  uint64_t v390 = *(void *)(v406 - 8);
  uint64_t v2 = __chkstk_darwin(v406);
  v385 = (char *)&v316 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v389 = (char *)&v316 - v4;
  uint64_t v342 = sub_4A98(&qword_2F10D0);
  __chkstk_darwin(v342);
  v318 = (char *)&v316 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v401 = sub_4A98(&qword_2F10D8);
  __chkstk_darwin(v401);
  uint64_t v403 = (uint64_t)&v316 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v426 = sub_4A98(&qword_2F10E0);
  __chkstk_darwin(v426);
  v404 = (char *)&v316 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_4A98(&qword_2F10E8);
  __chkstk_darwin(v335);
  uint64_t v338 = (uint64_t)&v316 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for QuickActionBuyButtonViewModel(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v370 = (uint64_t)&v316 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v378 = type metadata accessor for QuickActionBuyButtonView(0);
  __chkstk_darwin(v378);
  uint64_t v412 = (uint64_t)&v316 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F10F0);
  uint64_t v379 = *(void *)(v12 - 8);
  uint64_t v380 = v12;
  __chkstk_darwin(v12);
  v377 = (char *)&v316 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v383 = sub_4A98(&qword_2F10F8);
  uint64_t v382 = *(void *)(v383 - 8);
  __chkstk_darwin(v383);
  v381 = (char *)&v316 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v391 = sub_4A98(&qword_2F1100);
  __chkstk_darwin(v391);
  v392 = (char *)&v316 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = sub_4A98(&qword_2F1108);
  uint64_t v16 = __chkstk_darwin(v398);
  v328 = (char *)&v316 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v329 = (uint64_t)&v316 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v327 = (uint64_t)&v316 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v332 = (uint64_t)&v316 - v23;
  __chkstk_darwin(v22);
  uint64_t v337 = (uint64_t)&v316 - v24;
  uint64_t v333 = sub_4A98(&qword_2F1110);
  __chkstk_darwin(v333);
  v317 = (char *)&v316 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v26 - 8);
  v343 = (char *)&v316 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = sub_4A98(&qword_2F1118);
  __chkstk_darwin(v324);
  uint64_t v330 = (uint64_t)&v316 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v413 = type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(0);
  __chkstk_darwin(v413);
  v414 = (uint64_t *)((char *)&v316 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_26B310();
  uint64_t v375 = *(void *)(v30 - 8);
  uint64_t v376 = v30;
  __chkstk_darwin(v30);
  v374 = (char *)&v316 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_26AC00();
  uint64_t v368 = *(void *)(v32 - 8);
  uint64_t v369 = v32;
  __chkstk_darwin(v32);
  v365 = (char *)&v316 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v34 - 8);
  v361 = (char *)&v316 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_4A98(&qword_2F1120);
  __chkstk_darwin(v363);
  v362 = (char *)&v316 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4A98(&qword_2F1128);
  uint64_t v366 = *(void *)(v37 - 8);
  uint64_t v367 = v37;
  __chkstk_darwin(v37);
  v364 = (char *)&v316 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4A98(&qword_2F1130);
  uint64_t v372 = *(void *)(v39 - 8);
  uint64_t v373 = v39;
  __chkstk_darwin(v39);
  v371 = (char *)&v316 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v384 = sub_4A98(&qword_2F1138);
  __chkstk_darwin(v384);
  v393 = (char *)&v316 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_4A98(&qword_2F1140);
  uint64_t v42 = __chkstk_darwin(v331);
  v320 = (char *)&v316 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v321 = (uint64_t)&v316 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v319 = (uint64_t)&v316 - v47;
  __chkstk_darwin(v46);
  uint64_t v394 = (uint64_t)&v316 - v48;
  uint64_t v49 = sub_4A98(&qword_2F1148);
  uint64_t v325 = *(void *)(v49 - 8);
  uint64_t v326 = v49;
  __chkstk_darwin(v49);
  v323 = (char *)&v316 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_4A98(&qword_2F1150);
  uint64_t v339 = *(void *)(v51 - 8);
  uint64_t v340 = v51;
  __chkstk_darwin(v51);
  v336 = (char *)&v316 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v405 = sub_4A98(&qword_2F1158);
  uint64_t v53 = __chkstk_darwin(v405);
  v334 = (char *)&v316 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  uint64_t v341 = (uint64_t)&v316 - v55;
  uint64_t v356 = type metadata accessor for ListItemViewModel();
  uint64_t v358 = *(void *)(v356 - 8);
  uint64_t v56 = __chkstk_darwin(v356);
  uint64_t v359 = v57;
  uint64_t v360 = (uint64_t)&v316 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v396 = (uint64_t)&v316 - v58;
  uint64_t v59 = sub_269EA0();
  uint64_t v353 = *(void *)(v59 - 8);
  uint64_t v354 = v59;
  __chkstk_darwin(v59);
  v351 = (void (*)(char *, uint64_t, uint64_t))((char *)&v316 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = type metadata accessor for ShrinkableText();
  __chkstk_darwin(v61 - 8);
  uint64_t v395 = (uint64_t)&v316 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v418 = sub_269C90();
  uint64_t v417 = *(void *)(v418 - 8);
  __chkstk_darwin(v418);
  v416 = (char *)&v316 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_4A98(&qword_2EDB60);
  uint64_t v65 = __chkstk_darwin(v64 - 8);
  uint64_t v322 = (uint64_t)&v316 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  uint64_t v415 = (uint64_t)&v316 - v67;
  uint64_t v423 = sub_4A98(&qword_2F1160);
  __chkstk_darwin(v423);
  uint64_t v425 = (uint64_t)&v316 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v399 = sub_4A98(&qword_2F1168);
  __chkstk_darwin(v399);
  uint64_t v400 = (uint64_t)&v316 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v424 = sub_4A98(&qword_2F1170);
  __chkstk_darwin(v424);
  v402 = (char *)&v316 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v420 = sub_269BA0();
  uint64_t v419 = *(void *)(v420 - 8);
  __chkstk_darwin(v420);
  v430 = (char *)&v316 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v421 = sub_26B980();
  unint64_t v432 = *(void *)(v421 - 8);
  __chkstk_darwin(v421);
  v411 = (char *)&v316 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v410);
  v431 = (char *)&v316 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t v75 = v74 - 8;
  uint64_t v422 = *(void *)(v74 - 8);
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v348 = (uint64_t)&v316 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v429 = (uint64_t)&v316 - v79;
  unint64_t v428 = v80;
  __chkstk_darwin(v78);
  uint64_t v349 = (uint64_t)&v316 - v81;
  uint64_t v82 = sub_26CFD0();
  uint64_t v346 = *(void *)(v82 - 8);
  uint64_t v347 = v82;
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)&v316 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_26CF60();
  uint64_t v344 = *(void *)(v85 - 8);
  uint64_t v345 = v85;
  __chkstk_darwin(v85);
  uint64_t v87 = (char *)&v316 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v407 = type metadata accessor for ButtonViewModel.Content(0);
  uint64_t v88 = __chkstk_darwin(v407);
  uint64_t v408 = (uint64_t)&v316 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v88);
  v409 = (uint64_t *)((char *)&v316 - v90);
  uint64_t v91 = (int *)type metadata accessor for ButtonViewModel(0);
  uint64_t v92 = __chkstk_darwin(v91);
  uint64_t v94 = (char *)&v316 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  uint64_t v96 = (char *)&v316 - v95;
  uint64_t v433 = type metadata accessor for ButtonView();
  uint64_t v97 = __chkstk_darwin(v433);
  uint64_t v99 = (char *)&v316 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v97);
  v352 = (char *)&v316 - v100;
  uint64_t v397 = sub_4A98(&qword_2F1178);
  uint64_t v357 = *(void *)(v397 - 8);
  uint64_t v101 = __chkstk_darwin(v397);
  v350 = (char *)&v316 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v101);
  v355 = (char *)&v316 - v103;
  uint64_t v104 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  __chkstk_darwin(v104);
  uint64_t v106 = (long long *)((char *)&v316 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = v434 + *(int *)(v75 + 40);
  sub_138930(v107, (uint64_t)v106, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v174 = sub_4A98(&qword_2EFAE8);
      uint64_t v175 = (uint64_t)v106 + *(int *)(v174 + 48);
      uint64_t v176 = (char *)v106 + *(int *)(v174 + 64);
      sub_AD44(v106, (uint64_t)&v446);
      uint64_t v177 = v415;
      sub_19CC4(v175, v415, &qword_2EDB60);
      (*(void (**)(char *, char *, uint64_t))(v417 + 32))(v416, v176, v418);
      sub_4ADC(&v446, v449);
      uint64_t v178 = sub_269F90();
      uint64_t v179 = v107;
      uint64_t v181 = v180;
      sub_4ADC(&v446, v449);
      long long v182 = v351;
      sub_269FE0();
      sub_4ADC(&v446, v449);
      sub_269F20();
      sub_26A050();
      uint64_t v183 = v395;
      static SeriesQuickActionButtonViewModel.preheader(for:seriesOrdering:isAudiobook:)(v178, v181, v182, v395);
      swift_bridgeObjectRelease();
      (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t))(v353 + 8))(v182, v354);
      uint64_t v184 = v396;
      static ListItemViewModel.seriesHeaderQuickActionButton(assetInfo:cardInfo:eyebrowText:)(&v446, v177, v183, v396);
      uint64_t v185 = sub_26A630();
      uint64_t v186 = (uint64_t)v361;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v185 - 8) + 56))(v361, 1, 1, v185);
      uint64_t v187 = v184 + *(int *)(v356 + 40);
      uint64_t v188 = (void *)(v179 + *(int *)(type metadata accessor for SeriesQuickActionButtonViewModel(0) + 24));
      sub_4ADC(v188, v188[3]);
      uint64_t v189 = sub_269DC0();
      static SeriesQuickActionButtonViewModel.actionModelForOpenProductPage(for:cardInfo:seriesTitle:)(&v446, v187, v189, v190, (uint64_t *)&v442);
      swift_bridgeObjectRelease();
      uint64_t v191 = v444;
      uint64_t v192 = v445;
      uint64_t v193 = sub_4ADC(&v442, v444);
      uint64_t v437 = v191;
      uint64_t v438 = *(void *)(v192 + 8);
      uint64_t v194 = sub_CA1C((uint64_t *)&v435);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v191 - 8) + 16))(v194, v193, v191);
      uint64_t v195 = v360;
      sub_138930(v184, v360, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
      uint64_t v196 = v429;
      sub_138930(v434, v429, type metadata accessor for SeriesQuickActionButtonView);
      unint64_t v197 = (*(unsigned __int8 *)(v358 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v358 + 80);
      unint64_t v198 = (v359 + *(unsigned __int8 *)(v422 + 80) + v197) & ~(unint64_t)*(unsigned __int8 *)(v422 + 80);
      unint64_t v432 = *(unsigned __int8 *)(v422 + 80);
      uint64_t v199 = swift_allocObject();
      sub_137EF0(v195, v199 + v197, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
      sub_137EF0(v196, v199 + v198, type metadata accessor for SeriesQuickActionButtonView);
      sub_269B80();
      uint64_t v200 = (uint64_t)v362;
      sub_269AB0();
      uint64_t v201 = (int *)v363;
      uint64_t v202 = v200 + *(int *)(v363 + 36);
      *(void *)uint64_t v202 = swift_getKeyPath();
      *(unsigned char *)(v202 + 8) = 0;
      uint64_t v203 = (uint64_t *)(v200 + v201[10]);
      *uint64_t v203 = swift_getKeyPath();
      sub_4A98(&qword_2EA810);
      swift_storeEnumTagMultiPayload();
      uint64_t v204 = v200 + v201[11];
      *(void *)uint64_t v204 = swift_getKeyPath();
      *(unsigned char *)(v204 + 40) = 0;
      sub_19CC4(v186, v200 + v201[12], qword_2EA3E0);
      sub_19CC4((uint64_t)&v435, v200 + v201[13], &qword_2EA818);
      uint64_t v205 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v200 + v201[14]);
      *uint64_t v205 = sub_13A9E0;
      v205[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v199;
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v442);
      uint64_t v206 = v365;
      sub_26ABF0();
      uint64_t v207 = sub_7C18(&qword_2F11E8, &qword_2F1120);
      uint64_t v208 = sub_137F60(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      uint64_t v209 = v364;
      uint64_t v210 = v369;
      sub_26BC70();
      (*(void (**)(char *, uint64_t))(v368 + 8))(v206, v210);
      sub_B6DC(v200, &qword_2F1120);
      uint64_t v211 = v374;
      sub_26AD30();
      *(void *)&long long v435 = v201;
      *((void *)&v435 + 1) = v210;
      uint64_t v436 = v207;
      uint64_t v437 = v208;
      swift_getOpaqueTypeConformance2();
      sub_137F60((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
      uint64_t v212 = v371;
      uint64_t v213 = v367;
      uint64_t v214 = v376;
      sub_26BCC0();
      (*(void (**)(char *, uint64_t))(v375 + 8))(v211, v214);
      (*(void (**)(char *, uint64_t))(v366 + 8))(v209, v213);
      sub_C224((uint64_t)v188, (uint64_t)&v435);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v216 = (uint64_t)v414;
      uint64_t *v414 = KeyPath;
      *(_OWORD *)(v216 + 8) = 0u;
      *(_OWORD *)(v216 + 24) = 0u;
      *(_OWORD *)(v216 + 40) = 0u;
      *(_OWORD *)(v216 + 51) = 0u;
      uint64_t v217 = v413;
      uint64_t v218 = (uint64_t *)(v216 + *(int *)(v413 + 20));
      *uint64_t v218 = swift_getKeyPath();
      sub_4A98(&qword_2EBC98);
      swift_storeEnumTagMultiPayload();
      uint64_t v219 = v216 + *(int *)(v217 + 24);
      *(void *)uint64_t v219 = swift_getKeyPath();
      *(unsigned char *)(v219 + 40) = 0;
      sub_AD44(&v435, v216 + *(int *)(v217 + 28));
      uint64_t v221 = v372;
      uint64_t v220 = v373;
      uint64_t v222 = (uint64_t)v393;
      (*(void (**)(char *, char *, uint64_t))(v372 + 16))(v393, v212, v373);
      sub_137EF0(v216, v222 + *(int *)(v384 + 36), type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
      (*(void (**)(char *, uint64_t))(v221 + 8))(v212, v220);
      sub_4ADC(&v446, v449);
      uint64_t v223 = sub_269DB0();
      uint64_t v225 = v224;
      sub_4214C((uint64_t)&v435);
      if (v437)
      {
        sub_4A98(&qword_2EADB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_26F990;
        *(void *)(inited + 32) = v223;
        *(void *)(inited + 40) = v225;
        swift_bridgeObjectRetain();
        sub_13A4C0(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        if (qword_2E9C28 != -1) {
          swift_once();
        }
        unint64_t v227 = ~v432;
        if (byte_2EF740 == 1
          && (id v228 = [self standardUserDefaults],
              NSString v229 = sub_26D3F0(),
              unsigned __int8 v230 = [v228 integerForKey:v229],
              v228,
              v229,
              (v230 & 0x20) != 0))
        {
          sub_B678(v222, v330, &qword_2F1138);
          swift_storeEnumTagMultiPayload();
          sub_1385C0();
          sub_13863C();
          uint64_t v236 = (uint64_t)v320;
          sub_26B2F0();
        }
        else
        {
          sub_C224((uint64_t)&v435, (uint64_t)&v442);
          uint64_t v231 = *(int *)(v333 + 36);
          v431 = (char *)v225;
          unint64_t v232 = v227;
          uint64_t v233 = (uint64_t)v317;
          uint64_t v234 = (uint64_t)&v317[v231];
          uint64_t v235 = swift_bridgeObjectRetain();
          sub_1C4D34(v235, (uint64_t)&v442, v234);
          sub_B678(v222, v233, &qword_2F1138);
          sub_B678(v233, v330, &qword_2F1110);
          swift_storeEnumTagMultiPayload();
          sub_1385C0();
          sub_13863C();
          uint64_t v236 = (uint64_t)v320;
          uint64_t v222 = (uint64_t)v393;
          sub_26B2F0();
          uint64_t v237 = v233;
          unint64_t v227 = v232;
          sub_B6DC(v237, &qword_2F1110);
        }
        uint64_t v279 = v321;
        sub_19CC4(v236, v321, &qword_2F1140);
        swift_bridgeObjectRelease();
        uint64_t v280 = v319;
        sub_19CC4(v279, v319, &qword_2F1140);
        sub_19CC4(v280, v394, &qword_2F1140);
        swift_bridgeObjectRelease();
        sub_B6DC(v222, &qword_2F1138);
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v435);
        uint64_t v281 = sub_269B30();
        long long v282 = v430;
        sub_269B80();
        uint64_t v283 = v429;
        sub_138930(v434, v429, type metadata accessor for SeriesQuickActionButtonView);
        uint64_t v284 = (v432 + 16) & v227;
        uint64_t v285 = swift_allocObject();
        sub_137EF0(v283, v285 + v284, type metadata accessor for SeriesQuickActionButtonView);
        unint64_t v286 = sub_138544();
        uint64_t v287 = sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
        uint64_t v315 = sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
        v288 = v323;
        uint64_t v289 = v331;
        uint64_t v290 = v394;
        sub_26BB80();
        swift_release();
        v291 = v282;
        uint64_t v292 = v281;
        (*(void (**)(char *, uint64_t))(v419 + 8))(v291, v420);
        sub_B6DC(v290, &qword_2F1140);
        uint64_t v293 = v418;
        uint64_t v437 = v418;
        uint64_t v438 = sub_137F60(&qword_2F11F8, (void (*)(uint64_t))&type metadata accessor for AltSeriesContentTypeExposureData);
        uint64_t v439 = sub_137F60(&qword_2F1200, (void (*)(uint64_t))&type metadata accessor for AltSeriesContentTypeExposureData);
        v294 = sub_CA1C((uint64_t *)&v435);
        (*(void (**)(uint64_t *, char *, uint64_t))(v417 + 16))(v294, v416, v293);
        *(void *)&long long v442 = v289;
        *((void *)&v442 + 1) = v292;
        unint64_t v443 = v286;
        uint64_t v444 = v287;
        uint64_t v434 = v315;
        uint64_t v445 = v315;
        swift_getOpaqueTypeConformance2();
        v295 = v336;
        uint64_t v296 = v326;
        sub_26BB70();
        (*(void (**)(char *, uint64_t))(v325 + 8))(v288, v296);
        sub_B6DC((uint64_t)&v435, &qword_2F1208);
        uint64_t v297 = v322;
        sub_B678(v415, v322, &qword_2EDB60);
        uint64_t v298 = type metadata accessor for CardInfo();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v298 - 8) + 48))(v297, 1, v298) == 1)
        {
          sub_B6DC(v297, &qword_2EDB60);
          uint64_t v299 = sub_269840();
          uint64_t v300 = (uint64_t)v343;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v299 - 8) + 56))(v343, 1, 1, v299);
        }
        else
        {
          uint64_t v301 = v297 + *(int *)(v298 + 20);
          uint64_t v302 = sub_269840();
          uint64_t v303 = *(void *)(v302 - 8);
          uint64_t v300 = (uint64_t)v343;
          (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v343, v301, v302);
          sub_138998(v297, (uint64_t (*)(void))type metadata accessor for CardInfo);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v303 + 56))(v300, 0, 1, v302);
        }
        uint64_t v304 = swift_getKeyPath();
        uint64_t v305 = (uint64_t)v334;
        v306 = (uint64_t *)&v334[*(int *)(v405 + 36)];
        uint64_t v307 = sub_4A98(&qword_2EE260);
        sub_B678(v300, (uint64_t)v306 + *(int *)(v307 + 28), &qword_2EBC78);
        uint64_t *v306 = v304;
        uint64_t v309 = v339;
        uint64_t v308 = v340;
        (*(void (**)(uint64_t, char *, uint64_t))(v339 + 16))(v305, v295, v340);
        sub_B6DC(v300, &qword_2EBC78);
        (*(void (**)(char *, uint64_t))(v309 + 8))(v295, v308);
        uint64_t v310 = v341;
        sub_19CC4(v305, v341, &qword_2F1158);
        sub_B678(v310, v400, &qword_2F1158);
        swift_storeEnumTagMultiPayload();
        uint64_t v311 = sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
        *(void *)&long long v435 = v433;
        *((void *)&v435 + 1) = v292;
        uint64_t v436 = v311;
        uint64_t v437 = v287;
        uint64_t v438 = v434;
        swift_getOpaqueTypeConformance2();
        sub_1383AC();
        uint64_t v312 = (uint64_t)v402;
        sub_26B2F0();
        sub_B678(v312, v425, &qword_2F1170);
        swift_storeEnumTagMultiPayload();
        sub_138248();
        sub_138814();
        sub_26B2F0();
        sub_B6DC(v312, &qword_2F1170);
        sub_B6DC(v310, &qword_2F1158);
        sub_138998(v396, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
        sub_138998(v395, (uint64_t (*)(void))type metadata accessor for ShrinkableText);
        (*(void (**)(char *, uint64_t))(v417 + 8))(v416, v418);
        sub_B6DC(v415, &qword_2EDB60);
        long long v278 = (long long *)&v446;
        return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v278);
      }
      __break(1u);
      goto LABEL_34;
    case 2u:
      unint64_t v432 = v107;
      sub_AD44(v106, (uint64_t)&v435);
      sub_C224((uint64_t)&v435, (uint64_t)&v446);
      uint64_t v142 = v434;
      int v143 = *(unsigned __int8 *)(v434 + 89);
      sub_4ADC(&v435, v437);
      char v144 = sub_269F30();
      uint64_t v145 = v348;
      sub_138930(v142, v348, type metadata accessor for SeriesQuickActionButtonView);
      if (v144)
      {
        uint64_t v146 = *(void **)(v145 + 96);
        if (!v146)
        {
LABEL_35:
          type metadata accessor for ProfileRestrictions();
          sub_137F60((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
          sub_26AD60();
          __break(1u);
          JUMPOUT(0x137718);
        }
        swift_getKeyPath();
        swift_getKeyPath();
        id v147 = v146;
        sub_26A590();

        swift_release();
        swift_release();
        int v148 = v442;
      }
      else
      {
        int v148 = 1;
      }
      uint64_t v238 = v430;
      sub_138998(v145, type metadata accessor for SeriesQuickActionButtonView);
      sub_42120((uint64_t)&v442);
      sub_C224((uint64_t)&v446, (uint64_t)v441);
      sub_B678((uint64_t)&v442, (uint64_t)v440, &qword_2EBCC8);
      uint64_t v239 = v370;
      QuickActionBuyButtonViewModel.init(assetInfo:stretchWidth:isEnabled:localizerForAnalytics:)((uint64_t)v441, v143, v148, (uint64_t)v440, v370);
      sub_B6DC((uint64_t)&v442, &qword_2EBCC8);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v446);
      sub_137EF0(v239, v412, type metadata accessor for QuickActionBuyButtonViewModel);
      uint64_t v240 = sub_269B30();
      sub_269B80();
      uint64_t v241 = v429;
      sub_138930(v142, v429, type metadata accessor for SeriesQuickActionButtonView);
      unint64_t v242 = (*(unsigned __int8 *)(v422 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v422 + 80);
      uint64_t v243 = swift_allocObject();
      sub_137EF0(v241, v243 + v242, type metadata accessor for SeriesQuickActionButtonView);
      uint64_t v244 = sub_137F60(&qword_2F1198, (void (*)(uint64_t))type metadata accessor for QuickActionBuyButtonView);
      uint64_t v245 = sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
      uint64_t v314 = sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
      long long v247 = v377;
      uint64_t v246 = v378;
      uint64_t v248 = v412;
      sub_26BB80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v419 + 8))(v238, v420);
      sub_138998(v248, type metadata accessor for QuickActionBuyButtonView);
      *(void *)(swift_allocObject() + 16) = 1;
      *(void *)&long long v442 = v246;
      *((void *)&v442 + 1) = v240;
      unint64_t v443 = v244;
      uint64_t v444 = v245;
      uint64_t v445 = v314;
      swift_getOpaqueTypeConformance2();
      long long v249 = v381;
      uint64_t v250 = v380;
      sub_26BB60();
      swift_release();
      (*(void (**)(char *, uint64_t))(v379 + 8))(v247, v250);
      uint64_t v251 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
      sub_C224(v432 + *(int *)(v251 + 24), (uint64_t)&v442);
      uint64_t v252 = swift_getKeyPath();
      uint64_t v253 = (uint64_t)v414;
      uint64_t *v414 = v252;
      *(_OWORD *)(v253 + 8) = 0u;
      *(_OWORD *)(v253 + 24) = 0u;
      *(_OWORD *)(v253 + 40) = 0u;
      *(_OWORD *)(v253 + 51) = 0u;
      uint64_t v254 = v413;
      long long v255 = (uint64_t *)(v253 + *(int *)(v413 + 20));
      *long long v255 = swift_getKeyPath();
      sub_4A98(&qword_2EBC98);
      swift_storeEnumTagMultiPayload();
      uint64_t v256 = v253 + *(int *)(v254 + 24);
      *(void *)uint64_t v256 = swift_getKeyPath();
      *(unsigned char *)(v256 + 40) = 0;
      sub_AD44(&v442, v253 + *(int *)(v254 + 28));
      uint64_t v257 = v382;
      uint64_t v258 = (uint64_t)v392;
      uint64_t v259 = v383;
      (*(void (**)(char *, char *, uint64_t))(v382 + 16))(v392, v249, v383);
      sub_137EF0(v253, v258 + *(int *)(v391 + 36), type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
      (*(void (**)(char *, uint64_t))(v257 + 8))(v249, v259);
      sub_4ADC(&v435, v437);
      uint64_t v260 = sub_269DB0();
      uint64_t v262 = v261;
      sub_4214C((uint64_t)&v442);
      if (!v444)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      sub_4A98(&qword_2EADB0);
      uint64_t v263 = swift_initStackObject();
      *(_OWORD *)(v263 + 16) = xmmword_26F990;
      *(void *)(v263 + 32) = v260;
      *(void *)(v263 + 40) = v262;
      swift_bridgeObjectRetain();
      sub_13A4C0(v263);
      swift_setDeallocating();
      swift_arrayDestroy();
      if (qword_2E9C28 != -1) {
        swift_once();
      }
      if (byte_2EF740 == 1
        && (id v264 = [self standardUserDefaults],
            NSString v265 = sub_26D3F0(),
            unsigned __int8 v266 = [v264 integerForKey:v265],
            v264,
            v265,
            (v266 & 0x20) != 0))
      {
        sub_B678(v258, v338, &qword_2F1100);
        swift_storeEnumTagMultiPayload();
        sub_137FA8();
        sub_138024();
        uint64_t v270 = (uint64_t)v328;
        sub_26B2F0();
      }
      else
      {
        sub_C224((uint64_t)&v442, (uint64_t)v441);
        uint64_t v267 = (uint64_t)v318;
        uint64_t v268 = (uint64_t)&v318[*(int *)(v342 + 36)];
        uint64_t v269 = swift_bridgeObjectRetain();
        sub_1C4D34(v269, (uint64_t)v441, v268);
        sub_B678(v258, v267, &qword_2F1100);
        sub_B678(v267, v338, &qword_2F10D0);
        swift_storeEnumTagMultiPayload();
        sub_137FA8();
        sub_138024();
        uint64_t v270 = (uint64_t)v328;
        sub_26B2F0();
        sub_B6DC(v267, &qword_2F10D0);
      }
      uint64_t v271 = v329;
      sub_19CC4(v270, v329, &qword_2F1108);
      swift_bridgeObjectRelease();
      uint64_t v272 = v327;
      sub_19CC4(v271, v327, &qword_2F1108);
      uint64_t v273 = v272;
      uint64_t v274 = v332;
      sub_19CC4(v273, v332, &qword_2F1108);
      swift_bridgeObjectRelease();
      sub_B6DC(v258, &qword_2F1100);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v442);
      uint64_t v275 = v337;
      sub_19CC4(v274, v337, &qword_2F1108);
      sub_B678(v275, v403, &qword_2F1108);
      swift_storeEnumTagMultiPayload();
      sub_13C7F0(&qword_2F1180, &qword_2F1108, (void (*)(void))sub_137FA8, (void (*)(void))sub_138024);
      uint64_t v276 = sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
      uint64_t v446 = v433;
      unint64_t v447 = v276;
      swift_getOpaqueTypeConformance2();
      uint64_t v277 = (uint64_t)v404;
      sub_26B2F0();
      sub_B678(v277, v425, &qword_2F10E0);
      swift_storeEnumTagMultiPayload();
      sub_138248();
      sub_138814();
      sub_26B2F0();
      sub_B6DC(v277, &qword_2F10E0);
      sub_B6DC(v275, &qword_2F1108);
LABEL_25:
      long long v278 = &v435;
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v278);
    case 3u:
      LODWORD(v434) = *(unsigned __int8 *)(v434 + 89);
      v451._countAndFlagsBits = 32;
      v451._object = (void *)0xE100000000000000;
      sub_26D550(v451, 20);
      sub_26A210();
      swift_bridgeObjectRelease();
      swift_storeEnumTagMultiPayload();
      uint64_t v149 = v431;
      *((void *)v431 + 4) = 0;
      *uint64_t v149 = 0u;
      v149[1] = 0u;
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v435 = 0x403C000000000000;
      unint64_t v151 = v432 + 104;
      double v150 = *(void (**)(char *))(v432 + 104);
      long long v152 = v411;
      v430 = v99;
      uint64_t v153 = enum case for Font.TextStyle.subheadline(_:);
      LODWORD(v429) = enum case for Font.TextStyle.subheadline(_:);
      uint64_t v154 = v421;
      v150(v411);
      unint64_t v428 = sub_4F928();
      sub_26A810();
      *(void *)&long long v435 = 0x4008000000000000;
      ((void (*)(char *, uint64_t, uint64_t))v150)(v152, v153, v154);
      unint64_t v432 = v151;
      sub_26A810();
      uint64_t v155 = (uint64_t *)&v94[v91[6]];
      *uint64_t v155 = swift_getKeyPath();
      sub_4A98(&qword_2EA968);
      swift_storeEnumTagMultiPayload();
      uint64_t v156 = &v94[v91[14]];
      uint64_t v157 = sub_26A220();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v156, 1, 1, v157);
      v94[v91[7]] = v434;
      v94[v91[8]] = 1;
      v94[v91[9]] = 0;
      uint64_t v158 = &v94[v91[10]];
      *(void *)uint64_t v158 = 2;
      *((void *)v158 + 1) = 0;
      *((void *)v158 + 2) = 0;
      *((void *)v158 + 3) = 0;
      sub_137EF0(v408, (uint64_t)&v94[v91[11]], type metadata accessor for ButtonViewModel.Content);
      v94[v91[12]] = 0;
      sub_137EF0((uint64_t)v431, (uint64_t)&v94[v91[13]], type metadata accessor for ButtonViewModel.ActionKind);
      *(void *)&long long v435 = 0x4020000000000000;
      uint64_t v159 = v429;
      uint64_t v160 = v421;
      ((void (*)(char *, void, uint64_t))v150)(v152, v429, v421);
      uint64_t v161 = (uint64_t)v430;
      sub_26A810();
      uint64_t v162 = v433;
      *(void *)&long long v435 = 0x3FF8000000000000;
      ((void (*)(char *, uint64_t, uint64_t))v150)(v152, v159, v160);
      sub_26A810();
      uint64_t v163 = (uint64_t *)(v161 + *(int *)(v162 + 24));
      *uint64_t v163 = swift_getKeyPath();
      sub_4A98(&qword_2EBCD8);
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v162;
      sub_137EF0((uint64_t)v94, v161 + *(int *)(v162 + 28), type metadata accessor for ButtonViewModel);
      uint64_t v165 = v386;
      sub_26AC10();
      uint64_t v166 = sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
      uint64_t v167 = v385;
      sub_26C070();
      (*(void (**)(char *, uint64_t))(v387 + 8))(v165, v388);
      sub_138998(v161, (uint64_t (*)(void))type metadata accessor for ButtonView);
      uint64_t v168 = v390;
      long long v169 = v389;
      long long v170 = v167;
      uint64_t v171 = v406;
      (*(void (**)(char *, char *, uint64_t))(v390 + 32))(v389, v170, v406);
      (*(void (**)(uint64_t, char *, uint64_t))(v168 + 16))(v403, v169, v171);
      swift_storeEnumTagMultiPayload();
      sub_13C7F0(&qword_2F1180, &qword_2F1108, (void (*)(void))sub_137FA8, (void (*)(void))sub_138024);
      *(void *)&long long v435 = v164;
      *((void *)&v435 + 1) = v166;
      swift_getOpaqueTypeConformance2();
      uint64_t v172 = (uint64_t)v404;
      sub_26B2F0();
      sub_B678(v172, v425, &qword_2F10E0);
      swift_storeEnumTagMultiPayload();
      sub_138248();
      sub_138814();
      sub_26B2F0();
      sub_B6DC(v172, &qword_2F10E0);
      return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v169, v171);
    default:
      sub_AD44(v106, (uint64_t)&v435);
      LODWORD(v418) = *(unsigned __int8 *)(v434 + 89);
      sub_4A98(&qword_2EE438);
      uint64_t v108 = v409;
      void *v409 = 0xD000000000000013;
      v108[1] = 0x80000000002878F0;
      sub_26CF50();
      uint64_t v109 = v346;
      uint64_t v110 = v347;
      (*(void (**)(char *, void, uint64_t))(v346 + 104))(v84, enum case for LocalizerLookupStrategy.default(_:), v347);
      sub_26A1D0();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v84, v110);
      (*(void (**)(char *, uint64_t))(v344 + 8))(v87, v345);
      swift_storeEnumTagMultiPayload();
      sub_4ADC(&v435, v437);
      char v111 = sub_269D80();
      uint64_t v112 = v349;
      sub_138930(v434, v349, type metadata accessor for SeriesQuickActionButtonView);
      int v113 = 1;
      if ((v111 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v114 = *(void **)(v112 + 96);
      if (!v114) {
        goto LABEL_35;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      id v115 = v114;
      sub_26A590();

      swift_release();
      swift_release();
      int v113 = v446;
LABEL_5:
      LODWORD(v417) = v113;
      sub_138998(v112, type metadata accessor for SeriesQuickActionButtonView);
      sub_4ADC(&v435, v437);
      sub_269D90();
      swift_storeEnumTagMultiPayload();
      uint64_t v446 = 0x403C000000000000;
      uint64_t v116 = enum case for Font.TextStyle.subheadline(_:);
      uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v432 + 104);
      uint64_t v118 = v411;
      uint64_t v119 = v421;
      v117(v411, enum case for Font.TextStyle.subheadline(_:), v421);
      unint64_t v432 = sub_4F928();
      sub_26A810();
      uint64_t v446 = 0x4008000000000000;
      v117(v118, v116, v119);
      sub_26A810();
      uint64_t v120 = (uint64_t *)&v96[v91[6]];
      *uint64_t v120 = swift_getKeyPath();
      sub_4A98(&qword_2EA968);
      swift_storeEnumTagMultiPayload();
      uint64_t v121 = &v96[v91[14]];
      uint64_t v122 = sub_26A220();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v121, 1, 1, v122);
      v96[v91[7]] = v418;
      v96[v91[8]] = 1;
      v96[v91[9]] = 0;
      uint64_t v123 = &v96[v91[10]];
      *(void *)uint64_t v123 = 2;
      *((void *)v123 + 1) = 0;
      *((void *)v123 + 2) = 0;
      *((void *)v123 + 3) = 0;
      sub_137EF0((uint64_t)v409, (uint64_t)&v96[v91[11]], type metadata accessor for ButtonViewModel.Content);
      v96[v91[12]] = v417;
      sub_137EF0((uint64_t)v431, (uint64_t)&v96[v91[13]], type metadata accessor for ButtonViewModel.ActionKind);
      uint64_t v446 = 0x4020000000000000;
      uint64_t v124 = v116;
      uint64_t v125 = v116;
      uint64_t v126 = v119;
      v117(v118, v125, v119);
      v431 = v96;
      uint64_t v127 = v352;
      sub_26A810();
      uint64_t v128 = v433;
      uint64_t v446 = 0x3FF8000000000000;
      v117(v118, v124, v126);
      sub_26A810();
      uint64_t v129 = (uint64_t)v127;
      uint64_t v130 = (uint64_t *)&v127[*(int *)(v128 + 24)];
      uint64_t *v130 = swift_getKeyPath();
      sub_4A98(&qword_2EBCD8);
      swift_storeEnumTagMultiPayload();
      sub_137EF0((uint64_t)v431, (uint64_t)&v127[*(int *)(v128 + 28)], type metadata accessor for ButtonViewModel);
      unint64_t v432 = sub_269B30();
      long long v131 = v430;
      sub_269B80();
      uint64_t v132 = v429;
      sub_138930(v434, v429, type metadata accessor for SeriesQuickActionButtonView);
      unint64_t v133 = (*(unsigned __int8 *)(v422 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v422 + 80);
      uint64_t v134 = swift_allocObject();
      sub_137EF0(v132, v134 + v133, type metadata accessor for SeriesQuickActionButtonView);
      uint64_t v135 = sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
      uint64_t v136 = sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
      uint64_t v313 = sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
      uint64_t v137 = v350;
      sub_26BB80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v419 + 8))(v131, v420);
      sub_138998(v129, (uint64_t (*)(void))type metadata accessor for ButtonView);
      uint64_t v138 = v357;
      uint64_t v139 = v355;
      uint64_t v140 = v397;
      (*(void (**)(char *, char *, uint64_t))(v357 + 32))(v355, v137, v397);
      (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v400, v139, v140);
      swift_storeEnumTagMultiPayload();
      uint64_t v446 = v433;
      unint64_t v447 = v432;
      uint64_t v448 = v135;
      uint64_t v449 = v136;
      uint64_t v450 = v313;
      swift_getOpaqueTypeConformance2();
      sub_1383AC();
      uint64_t v141 = (uint64_t)v402;
      sub_26B2F0();
      sub_B678(v141, v425, &qword_2F1170);
      swift_storeEnumTagMultiPayload();
      sub_138248();
      sub_138814();
      sub_26B2F0();
      sub_B6DC(v141, &qword_2F1170);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v140);
      goto LABEL_25;
  }
}

uint64_t sub_137728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ListItemViewModel();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_138930(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
  uint64_t v9 = type metadata accessor for SeriesQuickActionButtonView(0);
  ListItemView.init(_:contextActionMenuView:)((uint64_t)v8, *(void *)(a2 + *(int *)(v9 + 36)), *(void *)(a2 + *(int *)(v9 + 36) + 8), a3);
  return swift_retain();
}

uint64_t sub_1377EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_269B30();
  uint64_t v9 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  uint64_t v5 = a2 + *(int *)(type metadata accessor for SeriesQuickActionButtonView(0) + 32);
  uint64_t v6 = v5 + *(int *)(type metadata accessor for SeriesQuickActionButtonViewModel(0) + 20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);

  return v7(a1, v6, v4);
}

uint64_t sub_1378D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_4A98(&qword_2F1360);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  long long v11 = *(_OWORD *)(v1 + 48);
  v24[2] = *(_OWORD *)(v1 + 32);
  v25[0] = v11;
  *(_DWORD *)((char *)v25 + 15) = *(_DWORD *)(v1 + 63);
  long long v12 = *(_OWORD *)(v1 + 16);
  v24[0] = *(_OWORD *)v1;
  v24[1] = v12;
  sub_44FD8((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8((uint64_t)v20);
  sub_44FD8((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
  if (v21)
  {
    double v13 = v22;
    uint64_t v14 = (v23 >> 24) & 1;
    swift_bridgeObjectRelease();
    if (v13 >= 0.85) {
      char v15 = 1;
    }
    else {
      char v15 = v14;
    }
  }
  else
  {
    char v15 = 2;
  }
  v20[0] = v15;
  sub_138930(v2, (uint64_t)&v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_137EF0((uint64_t)&v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v17 + v16, type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
  sub_4A98(&qword_2F1368);
  sub_4A98(&qword_2F1370);
  sub_7C18(&qword_2F1378, &qword_2F1368);
  sub_13D7C0();
  sub_26C050();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, v7);
}

uint64_t sub_137BC0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != 2 && *a2 != 2)
  {
    uint64_t v12 = type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(0);
    sub_42020((uint64_t)v17);
    if (v18)
    {
      v15[1] = v19;
      sub_4ADC(v17, v18);
      uint64_t v13 = a3 + *(int *)(v12 + 28);
      v16[3] = type metadata accessor for RefreshSeriesUberHeaderAction();
      void v16[4] = sub_137F60(&qword_2F1388, (void (*)(uint64_t))type metadata accessor for RefreshSeriesUberHeaderAction);
      uint64_t v14 = sub_CA1C(v16);
      sub_C224(v13, (uint64_t)v14);
      sub_26CB50();
      sub_41FE8((uint64_t)v10);
      sub_26A180();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v16);
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v17);
    }
    else
    {
      return sub_B6DC((uint64_t)v17, &qword_2EBCA8);
    }
  }
  return result;
}

uint64_t sub_137DB4()
{
  return sub_26B0B0();
}

uint64_t sub_137DF4()
{
  return sub_26B0B0();
}

uint64_t sub_137E34(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v3, &qword_2EBCB8);
  sub_B678((uint64_t)v3, (uint64_t)&v2, &qword_2EBCB8);
  sub_13D82C();
  sub_26B0C0();
  return sub_B6DC((uint64_t)v3, &qword_2EBCB8);
}

uint64_t type metadata accessor for SeriesQuickActionButtonView(uint64_t a1)
{
  return sub_2A148(a1, qword_2F1268);
}

uint64_t type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(uint64_t a1)
{
  return sub_2A148(a1, qword_2F1320);
}

uint64_t sub_137EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_137F60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_137FA8()
{
  unint64_t result = qword_2F1188;
  if (!qword_2F1188)
  {
    sub_7B0C(&qword_2F10D0);
    sub_138024();
    sub_1381F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1188);
  }
  return result;
}

unint64_t sub_138024()
{
  unint64_t result = qword_2F1190;
  if (!qword_2F1190)
  {
    sub_7B0C(&qword_2F1100);
    sub_7B0C(&qword_2F10F0);
    type metadata accessor for QuickActionBuyButtonView(255);
    sub_269B30();
    sub_137F60(&qword_2F1198, (void (*)(uint64_t))type metadata accessor for QuickActionBuyButtonView);
    sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_137F60(&qword_2F11B0, (void (*)(uint64_t))type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1190);
  }
  return result;
}

unint64_t sub_1381F4()
{
  unint64_t result = qword_2F11B8;
  if (!qword_2F11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11B8);
  }
  return result;
}

unint64_t sub_138248()
{
  unint64_t result = qword_2F11C0;
  if (!qword_2F11C0)
  {
    sub_7B0C(&qword_2F1170);
    type metadata accessor for ButtonView();
    sub_269B30();
    sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    swift_getOpaqueTypeConformance2();
    sub_1383AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11C0);
  }
  return result;
}

unint64_t sub_1383AC()
{
  unint64_t result = qword_2F11C8;
  if (!qword_2F11C8)
  {
    sub_7B0C(&qword_2F1158);
    sub_7B0C(&qword_2F1148);
    sub_7B0C(&qword_2F1140);
    sub_269B30();
    sub_138544();
    sub_137F60(&qword_2F11A0, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    sub_137F60(&qword_2F11A8, (void (*)(uint64_t))&type metadata accessor for SeriesData);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7C18((unint64_t *)&qword_2EE268, &qword_2EE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11C8);
  }
  return result;
}

unint64_t sub_138544()
{
  unint64_t result = qword_2F11D0;
  if (!qword_2F11D0)
  {
    sub_7B0C(&qword_2F1140);
    sub_1385C0();
    sub_13863C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11D0);
  }
  return result;
}

unint64_t sub_1385C0()
{
  unint64_t result = qword_2F11D8;
  if (!qword_2F11D8)
  {
    sub_7B0C(&qword_2F1110);
    sub_13863C();
    sub_1381F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11D8);
  }
  return result;
}

unint64_t sub_13863C()
{
  unint64_t result = qword_2F11E0;
  if (!qword_2F11E0)
  {
    sub_7B0C(&qword_2F1138);
    sub_7B0C(&qword_2F1128);
    sub_26B310();
    sub_7B0C(&qword_2F1120);
    sub_26AC00();
    sub_7C18(&qword_2F11E8, &qword_2F1120);
    sub_137F60(&qword_2ECCC8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_137F60((unint64_t *)&qword_2EBFA8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    sub_137F60(&qword_2F11B0, (void (*)(uint64_t))type metadata accessor for RefreshOnAssetCompletionChangeViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11E0);
  }
  return result;
}

unint64_t sub_138814()
{
  unint64_t result = qword_2F11F0;
  if (!qword_2F11F0)
  {
    sub_7B0C(&qword_2F10E0);
    sub_13C7F0(&qword_2F1180, &qword_2F1108, (void (*)(void))sub_137FA8, (void (*)(void))sub_138024);
    type metadata accessor for ButtonView();
    sub_137F60(&qword_2EDB48, (void (*)(uint64_t))type metadata accessor for ButtonView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F11F0);
  }
  return result;
}

uint64_t sub_138930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_138998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_138A00()
{
  return swift_deallocObject();
}

uint64_t sub_138A1C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_26D100();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_137F60(&qword_2EB6A0, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_26D2E0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_137F60(&qword_2EB6A8, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
      char v21 = sub_26D360();
      double v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1395CC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_138D40(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_26DEF0();
  swift_bridgeObjectRetain();
  sub_26D4B0();
  Swift::Int v8 = sub_26DF20();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_26DDB0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_26DDB0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_13986C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_138EF0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_26D100();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_4A98(&qword_2EB698);
  uint64_t v5 = sub_26DA70();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_137F60(&qword_2EB6A0, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
      uint64_t result = sub_26D2E0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1392EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_4A98(&qword_2F1390);
  uint64_t v3 = sub_26DA70();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_26DEF0();
      sub_26D4B0();
      uint64_t result = sub_26DF20();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1395CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_26D100();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_138EF0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_139A08();
      goto LABEL_12;
    }
    sub_139E60();
  }
  uint64_t v12 = *v3;
  sub_137F60(&qword_2EB6A0, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
  uint64_t v13 = sub_26D2E0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_137F60(&qword_2EB6A8, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
      char v21 = sub_26D360();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_26DE50();
  __break(1u);
  return result;
}

Swift::Int sub_13986C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1392EC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_139CAC();
      goto LABEL_22;
    }
    sub_13A210();
  }
  uint64_t v11 = *v4;
  sub_26DEF0();
  sub_26D4B0();
  uint64_t result = sub_26DF20();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_26DDB0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_26DE50();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_26DDB0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_139A08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26D100();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4A98(&qword_2EB698);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_26DA60();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_139CAC()
{
  uint64_t v1 = v0;
  sub_4A98(&qword_2F1390);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26DA60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_139E60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26D100();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_4A98(&qword_2EB698);
  uint64_t v7 = sub_26DA70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_137F60(&qword_2EB6A0, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
    uint64_t result = sub_26D2E0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_13A210()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_4A98(&qword_2F1390);
  uint64_t v3 = sub_26DA70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_26DEF0();
    swift_bridgeObjectRetain();
    sub_26D4B0();
    uint64_t result = sub_26DF20();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_13A4C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_26D740();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_138D40(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_13A560()
{
  uint64_t v1 = type metadata accessor for ListItemViewModel();
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v28 + 16) & ~v28;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  Swift::Int v6 = (void *)(v0 + v2);
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2 + 24);
  if (*(void *)(v0 + v2 + 120)) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 12));
  }
  if (v6[20]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 17));
  }
  if (v6[25]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 22));
  }
  if (v6[30]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 27));
  }
  if (v6[35]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 32));
  }
  if (v6[40]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 37));
  }
  uint64_t v7 = v3 + v5;
  if (v6[45]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 42));
  }
  uint64_t v8 = v2 + v7;
  if (v6[50]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 47));
  }
  uint64_t v9 = v8 & ~v5;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v6 + 52));
  uint64_t v10 = (char *)v6 + *(int *)(v1 + 40);
  uint64_t v11 = type metadata accessor for CardInfo();
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (!v12(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = &v10[*(int *)(v11 + 20)];
    uint64_t v14 = sub_269840();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + v9;
  if (*(unsigned char *)(v0 + v9 + 40))
  {
    if (*(void *)(v15 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v9);
    }
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(v15 + 88))
  {
    if (*(void *)(v15 + 72)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v15 + 48);
    }
  }
  else
  {
    swift_release();
  }

  uint64_t v16 = v15 + *(int *)(v4 + 32);
  type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_30:
    _s7BooksUI13AnyPagedFrameVwxx_0(v16);
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_35;
    }
    goto LABEL_30;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v16);
  uint64_t v18 = sub_4A98(&qword_2EFAE8);
  uint64_t v19 = v16 + *(int *)(v18 + 48);
  if (!v12((char *)v19, 1, v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + *(int *)(v11 + 20);
    uint64_t v21 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = v16 + *(int *)(v18 + 64);
  uint64_t v23 = sub_269C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
LABEL_35:
  uint64_t v24 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v25 = v16 + *(int *)(v24 + 20);
  uint64_t v26 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  _s7BooksUI13AnyPagedFrameVwxx_0(v16 + *(int *)(v24 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_13A9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ListItemViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for SeriesQuickActionButtonView(0) - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_137728(v1 + v4, v7, a1);
}

uint64_t sub_13AAD0()
{
  uint64_t v1 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 40))
  {
    if (*(void *)(v4 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v3);
    }
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(v4 + 88))
  {
    if (*(void *)(v4 + 72)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v4 + 48);
    }
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = v4 + *(int *)(v1 + 32);
  type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_12:
    _s7BooksUI13AnyPagedFrameVwxx_0(v5);
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v5);
  uint64_t v7 = sub_4A98(&qword_2EFAE8);
  uint64_t v8 = v5 + *(int *)(v7 + 48);
  uint64_t v9 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = v5 + *(int *)(v7 + 64);
  uint64_t v13 = sub_269C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
LABEL_16:
  uint64_t v14 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v15 = v5 + *(int *)(v14 + 20);
  uint64_t v16 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  _s7BooksUI13AnyPagedFrameVwxx_0(v5 + *(int *)(v14 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_13AD7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SeriesQuickActionButtonView(0) - 8);
  return sub_1377EC(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_13ADE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SeriesQuickActionButtonView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (a2[5])
    {
      uint64_t v7 = a2[3];
      if (v7)
      {
        uint64_t v8 = a2[4];
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = a2[4];
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v11 = a2 + 6;
    if (a2[11])
    {
      uint64_t v12 = (_OWORD *)(v4 + 48);
      uint64_t v13 = a2[9];
      if (v13)
      {
        uint64_t v14 = a2[10];
        *(void *)(v4 + 72) = v13;
        *(void *)(v4 + 80) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v12, v11);
      }
      else
      {
        long long v15 = *((_OWORD *)a2 + 4);
        *uint64_t v12 = *v11;
        *(_OWORD *)(v4 + 64) = v15;
        *(void *)(v4 + 80) = a2[10];
      }
      *(unsigned char *)(v4 + 88) = 1;
    }
    else
    {
      *(void *)(v4 + 48) = *(void *)v11;
      *(unsigned char *)(v4 + 88) = 0;
      swift_retain();
    }
    *(unsigned char *)(v4 + 89) = *((unsigned char *)a2 + 89);
    unint64_t v17 = (void *)a2[12];
    uint64_t v16 = a2[13];
    *(void *)(v4 + 96) = v17;
    *(void *)(v4 + 104) = v16;
    uint64_t v18 = *(int *)(a3 + 32);
    uint64_t v19 = v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    id v22 = v17;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        long long v25 = *(_OWORD *)(v20 + 24);
        *(_OWORD *)(v19 + 24) = v25;
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v19, v20);
        uint64_t v53 = sub_4A98(&qword_2EFAE8);
        uint64_t v26 = *(int *)(v53 + 48);
        BOOL v27 = (void *)(v19 + v26);
        uint64_t v28 = (void *)(v20 + v26);
        uint64_t v29 = type metadata accessor for CardInfo();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = sub_4A98(&qword_2EDB60);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          *BOOL v27 = *v28;
          uint64_t v32 = *(int *)(v29 + 20);
          uint64_t v51 = (char *)v28 + v32;
          uint64_t v52 = (char *)v27 + v32;
          uint64_t v33 = sub_269840();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v52, v51, v33);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        uint64_t v34 = *(int *)(v53 + 64);
        uint64_t v35 = v19 + v34;
        uint64_t v36 = v20 + v34;
        uint64_t v37 = sub_269C90();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_25;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_26:
        uint64_t v38 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v40 = v19 + v39;
        uint64_t v41 = v20 + v39;
        uint64_t v42 = sub_269B30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        uint64_t v43 = *(int *)(v38 + 24);
        long long v44 = *(_OWORD *)(v20 + v43 + 24);
        *(_OWORD *)(v19 + v43 + 24) = v44;
        (**(void (***)(void))(v44 - 8))();
        uint64_t v45 = *(int *)(a3 + 36);
        uint64_t v46 = (void *)(v4 + v45);
        uint64_t v47 = (uint64_t *)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        goto LABEL_27;
      }
    }
    long long v24 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)(v19 + 24) = v24;
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v19, v20);
LABEL_25:
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  uint64_t v9 = *a2;
  *(void *)uint64_t v4 = *a2;
  uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
LABEL_27:
  swift_retain();
  return v4;
}

uint64_t destroy for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(a1 + 88))
  {
    if (*(void *)(a1 + 72)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 48);
    }
  }
  else
  {
    swift_release();
  }

  uint64_t v4 = a1 + *(int *)(a2 + 32);
  type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_12:
    _s7BooksUI13AnyPagedFrameVwxx_0(v4);
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v4);
  uint64_t v6 = sub_4A98(&qword_2EFAE8);
  uint64_t v7 = v4 + *(int *)(v6 + 48);
  uint64_t v8 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = v4 + *(int *)(v6 + 64);
  uint64_t v12 = sub_269C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
LABEL_16:
  uint64_t v13 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v14 = v4 + *(int *)(v13 + 20);
  uint64_t v15 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  _s7BooksUI13AnyPagedFrameVwxx_0(v4 + *(int *)(v13 + 24));

  return swift_release();
}

uint64_t initializeWithCopy for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v9 = (_OWORD *)(a2 + 48);
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v10 = (_OWORD *)(a1 + 48);
    uint64_t v11 = *(void *)(a2 + 72);
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v11;
      *(void *)(a1 + 80) = v12;
      (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v10, v9);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 64);
      *uint64_t v10 = *v9;
      *(_OWORD *)(a1 + 64) = v13;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
    }
    *(unsigned char *)(a1 + 88) = 1;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)v9;
    *(unsigned char *)(a1 + 88) = 0;
    swift_retain();
  }
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v15 = *(void **)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v14;
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  id v20 = v15;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_16;
    case 1:
      long long v23 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 24) = v23;
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(v17, v18);
      uint64_t v51 = sub_4A98(&qword_2EFAE8);
      uint64_t v24 = *(int *)(v51 + 48);
      long long v25 = (void *)(v17 + v24);
      uint64_t v26 = (void *)(v18 + v24);
      uint64_t v27 = type metadata accessor for CardInfo();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_4A98(&qword_2EDB60);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *long long v25 = *v26;
        uint64_t v30 = *(int *)(v27 + 20);
        uint64_t v49 = (char *)v26 + v30;
        uint64_t v50 = (char *)v25 + v30;
        uint64_t v31 = sub_269840();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v50, v49, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v32 = *(int *)(v51 + 64);
      uint64_t v33 = v17 + v32;
      uint64_t v34 = v18 + v32;
      uint64_t v35 = sub_269C90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      goto LABEL_23;
    case 0:
LABEL_16:
      long long v22 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 24) = v22;
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v17, v18);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
  }
  memcpy((void *)v17, (const void *)v18, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_24:
  uint64_t v36 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v37 = *(int *)(v36 + 20);
  uint64_t v38 = v17 + v37;
  uint64_t v39 = v18 + v37;
  uint64_t v40 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = *(int *)(v36 + 24);
  long long v42 = *(_OWORD *)(v18 + v41 + 24);
  *(_OWORD *)(v17 + v41 + 24) = v42;
  (**(void (***)(void))(v42 - 8))();
  uint64_t v43 = *(int *)(a3 + 36);
  long long v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SeriesQuickActionButtonView(uint64_t a1, long long *a2, uint64_t a3)
{
  if ((long long *)a1 != a2)
  {
    sub_B6DC(a1, &qword_2EBCC0);
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v9 = a2 + 3;
    sub_B6DC(a1 + 48, &qword_2EBCB0);
    if (*((unsigned char *)a2 + 88))
    {
      uint64_t v10 = *((void *)a2 + 9);
      if (v10)
      {
        *(void *)(a1 + 72) = v10;
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 48, (uint64_t)(a2 + 3));
      }
      else
      {
        long long v11 = *v9;
        long long v12 = a2[4];
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(_OWORD *)(a1 + 48) = v11;
        *(_OWORD *)(a1 + 64) = v12;
      }
      *(unsigned char *)(a1 + 88) = 1;
    }
    else
    {
      *(void *)(a1 + 48) = *(void *)v9;
      *(unsigned char *)(a1 + 88) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  long long v13 = *(void **)(a1 + 96);
  uint64_t v14 = (void *)*((void *)a2 + 12);
  *(void *)(a1 + 96) = v14;
  id v15 = v14;

  *(void *)(a1 + 104) = *((void *)a2 + 13);
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  if ((long long *)a1 != a2)
  {
    sub_138998(a1 + v16, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v19 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_18;
      case 1:
        uint64_t v22 = v18[3];
        void v17[3] = v22;
        v17[4] = v18[4];
        (**(void (***)(void *, void *))(v22 - 8))(v17, v18);
        uint64_t v48 = sub_4A98(&qword_2EFAE8);
        uint64_t v23 = *(int *)(v48 + 48);
        uint64_t v24 = (void *)((char *)v17 + v23);
        long long v25 = (void *)((char *)v18 + v23);
        uint64_t v26 = type metadata accessor for CardInfo();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = sub_4A98(&qword_2EDB60);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          void *v24 = *v25;
          uint64_t v29 = *(int *)(v26 + 20);
          uint64_t v46 = (char *)v25 + v29;
          uint64_t v47 = (char *)v24 + v29;
          uint64_t v30 = sub_269840();
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v45(v47, v46, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        uint64_t v31 = *(int *)(v48 + 64);
        uint64_t v32 = (char *)v17 + v31;
        uint64_t v33 = (char *)v18 + v31;
        uint64_t v34 = sub_269C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_25;
      case 0:
LABEL_18:
        uint64_t v21 = v18[3];
        void v17[3] = v21;
        v17[4] = v18[4];
        (**(void (***)(void *, void *))(v21 - 8))(v17, v18);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
    }
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
LABEL_26:
  uint64_t v35 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v36 = *(int *)(v35 + 20);
  uint64_t v37 = (char *)v17 + v36;
  uint64_t v38 = (char *)v18 + v36;
  uint64_t v39 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  sub_16D58((void *)((char *)v17 + *(int *)(v35 + 24)), (void *)((char *)v18 + *(int *)(v35 + 24)));
  uint64_t v40 = *(int *)(a3 + 36);
  uint64_t v41 = (void *)(a1 + v40);
  long long v42 = (void *)((char *)a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = v3;
    long long v12 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v12;
    *((void *)v9 + 4) = *((void *)v10 + 4);
    uint64_t v13 = sub_4A98(&qword_2EFAE8);
    uint64_t v14 = *(int *)(v13 + 48);
    id v15 = (void *)((char *)v9 + v14);
    uint64_t v16 = (void *)((char *)v10 + v14);
    uint64_t v17 = type metadata accessor for CardInfo();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_4A98(&qword_2EDB60);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      void *v15 = *v16;
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v37 = (char *)v15 + v20;
      uint64_t v21 = (char *)v16 + v20;
      uint64_t v22 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v37, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v23 = *(int *)(v13 + 64);
    uint64_t v24 = (char *)v9 + v23;
    long long v25 = (char *)v10 + v23;
    uint64_t v26 = sub_269C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v38;
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v27 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = (char *)v9 + v28;
  uint64_t v30 = (char *)v10 + v28;
  uint64_t v31 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = *(int *)(v27 + 24);
  uint64_t v33 = (char *)v9 + v32;
  uint64_t v34 = (char *)v10 + v32;
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  *((void *)v33 + 4) = *((void *)v34 + 4);
  *(_OWORD *)(a1 + *(int *)(v3 + 36)) = *(_OWORD *)(a2 + *(int *)(v3 + 36));
  return a1;
}

uint64_t assignWithTake for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, &qword_2EBCC0);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    sub_B6DC(a1 + 48, &qword_2EBCB0);
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  if (a1 != a2)
  {
    sub_138998(a1 + v9, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v12 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v13 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v13;
      *((void *)v10 + 4) = *((void *)v11 + 4);
      uint64_t v38 = sub_4A98(&qword_2EFAE8);
      uint64_t v14 = *(int *)(v38 + 48);
      id v15 = (void *)((char *)v10 + v14);
      uint64_t v16 = (void *)((char *)v11 + v14);
      uint64_t v17 = type metadata accessor for CardInfo();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_4A98(&qword_2EDB60);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        void *v15 = *v16;
        uint64_t v20 = *(int *)(v17 + 20);
        uint64_t v37 = (char *)v15 + v20;
        uint64_t v21 = (char *)v16 + v20;
        uint64_t v22 = sub_269840();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v37, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v23 = *(int *)(v38 + 64);
      uint64_t v24 = (char *)v10 + v23;
      long long v25 = (char *)v11 + v23;
      uint64_t v26 = sub_269C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  uint64_t v27 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = (char *)v10 + v28;
  uint64_t v30 = (char *)v11 + v28;
  uint64_t v31 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = *(int *)(v27 + 24);
  uint64_t v33 = (uint64_t)v10 + v32;
  uint64_t v34 = (char *)v11 + v32;
  _s7BooksUI13AnyPagedFrameVwxx_0(v33);
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(void *)(v33 + 32) = *((void *)v34 + 4);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13C550);
}

uint64_t sub_13C550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SeriesQuickActionButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13C628);
}

uint64_t sub_13C628(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_13C6E8()
{
  uint64_t result = type metadata accessor for SeriesQuickActionButtonViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_13C7A0()
{
  return sub_13C7F0(&qword_2F12B0, &qword_2F12B8, (void (*)(void))sub_138248, (void (*)(void))sub_138814);
}

uint64_t sub_13C7F0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_13C878(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    __int16 v28 = *(_WORD *)(a2 + 64);
    char v29 = *(unsigned char *)(a2 + 66);
    sub_44FC4(*(void *)a2, v7, v8, v9, v10, v11, v13, v12, v28, v29);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v12;
    *(_WORD *)(a1 + 64) = v28;
    uint64_t v14 = a3[5];
    id v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    *(unsigned char *)(a1 + 66) = v29;
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[6];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    if (*(unsigned char *)(a2 + v19 + 40))
    {
      uint64_t v22 = *(void *)(v21 + 24);
      if (v22)
      {
        uint64_t v23 = *(void *)(v21 + 32);
        *(void *)(v20 + 24) = v22;
        *(void *)(v20 + 32) = v23;
        (**(void (***)(uint64_t))(v22 - 8))(v20);
      }
      else
      {
        long long v24 = *(_OWORD *)(v21 + 16);
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *(_OWORD *)(v20 + 16) = v24;
        *(void *)(v20 + 32) = *(void *)(v21 + 32);
      }
      *(unsigned char *)(v20 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 40) = 0;
      swift_retain();
    }
    uint64_t v25 = a3[7];
    long long v26 = *(_OWORD *)(a2 + v25 + 24);
    *(_OWORD *)(a1 + v25 + 24) = v26;
    (**(void (***)(void))(v26 - 8))();
  }
  return a1;
}

uint64_t sub_13CAD8(uint64_t a1, int *a2)
{
  sub_C360(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(_WORD *)(a1 + 64), *(unsigned char *)(a1 + 66));
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  if (*(unsigned char *)(v6 + 40))
  {
    if (*(void *)(v6 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];

  return _s7BooksUI13AnyPagedFrameVwxx_0(v7);
}

uint64_t sub_13CBE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v26 = *(_WORD *)(a2 + 64);
  char v27 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v26, v27);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v26;
  uint64_t v13 = a3[5];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 66) = v27;
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_26A2C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (*(unsigned char *)(a2 + v17 + 40))
  {
    uint64_t v20 = *(void *)(v19 + 24);
    if (v20)
    {
      uint64_t v21 = *(void *)(v19 + 32);
      *(void *)(v18 + 24) = v20;
      *(void *)(v18 + 32) = v21;
      (**(void (***)(uint64_t))(v20 - 8))(v18);
    }
    else
    {
      long long v22 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v22;
      *(void *)(v18 + 32) = *(void *)(v19 + 32);
    }
    *(unsigned char *)(v18 + 40) = 1;
  }
  else
  {
    *(void *)uint64_t v18 = *(void *)v19;
    *(unsigned char *)(v18 + 40) = 0;
    swift_retain();
  }
  uint64_t v23 = a3[7];
  long long v24 = *(_OWORD *)(a2 + v23 + 24);
  *(_OWORD *)(a1 + v23 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  return a1;
}

uint64_t sub_13CDF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  __int16 v34 = *(_WORD *)(a2 + 64);
  char v35 = *(unsigned char *)(a2 + 66);
  sub_44FC4(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v34, v35);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  __int16 v21 = *(_WORD *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 66);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v34;
  *(unsigned char *)(a1 + 66) = v35;
  sub_C360(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[5];
    long long v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    sub_B6DC(a1 + v23, &qword_2EBC98);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      void *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[6];
    uint64_t v28 = a1 + v27;
    char v29 = (long long *)(a2 + v27);
    sub_B6DC(a1 + v27, &qword_2EBCA0);
    if (*((unsigned char *)v29 + 40))
    {
      uint64_t v30 = *((void *)v29 + 3);
      if (v30)
      {
        *(void *)(v28 + 24) = v30;
        *(void *)(v28 + 32) = *((void *)v29 + 4);
        (**(void (***)(uint64_t, long long *))(v30 - 8))(v28, v29);
      }
      else
      {
        long long v31 = *v29;
        long long v32 = v29[1];
        *(void *)(v28 + 32) = *((void *)v29 + 4);
        *(_OWORD *)uint64_t v28 = v31;
        *(_OWORD *)(v28 + 16) = v32;
      }
      *(unsigned char *)(v28 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 40) = 0;
      swift_retain();
    }
  }
  sub_16D58((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_13D024(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A2C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (_OWORD *)(a1 + v13);
  uint64_t v16 = (_OWORD *)(a2 + v13);
  long long v17 = v16[1];
  _OWORD *v15 = *v16;
  v15[1] = v17;
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  uint64_t v18 = a1 + v14;
  uint64_t v19 = a2 + v14;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t sub_13D14C(uint64_t a1, uint64_t a2, int *a3)
{
  __int16 v6 = *(_WORD *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 66);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  __int16 v16 = *(_WORD *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 66);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_WORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 66) = v7;
  sub_C360(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  if (a1 != a2)
  {
    uint64_t v20 = a3[5];
    __int16 v21 = (void *)(a1 + v20);
    char v22 = (const void *)(a2 + v20);
    sub_B6DC(a1 + v20, &qword_2EBC98);
    uint64_t v23 = sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_26A2C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = (_OWORD *)(a2 + v25);
    uint64_t v27 = (_OWORD *)(a1 + v25);
    sub_B6DC(a1 + v25, &qword_2EBCA0);
    long long v28 = v26[1];
    *uint64_t v27 = *v26;
    v27[1] = v28;
    *(_OWORD *)((char *)v27 + 25) = *(_OWORD *)((char *)v26 + 25);
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v29);
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  return a1;
}

uint64_t sub_13D2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13D2F4);
}

uint64_t sub_13D2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2F12C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_13D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13D3D4);
}

uint64_t sub_13D3D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2F12C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  }
  return result;
}

void sub_13D49C()
{
  sub_13D548();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_13D548()
{
  if (!qword_2EDA90)
  {
    sub_26A2C0();
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EDA90);
    }
  }
}

uint64_t sub_13D5A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13D5BC()
{
  uint64_t v1 = (int *)type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  sub_C360(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(_WORD *)(v2 + 64), *(unsigned char *)(v2 + 66));
  uint64_t v3 = v2 + v1[5];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + v1[6];
  if (*(unsigned char *)(v5 + 40))
  {
    if (*(void *)(v5 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v5);
    }
  }
  else
  {
    swift_release();
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v2 + v1[7]);

  return swift_deallocObject();
}

uint64_t sub_13D740(unsigned char *a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RefreshOnAssetCompletionChangeViewModifier(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_137BC0(a1, a2, v6);
}

unint64_t sub_13D7C0()
{
  unint64_t result = qword_2F1380;
  if (!qword_2F1380)
  {
    sub_7B0C(&qword_2F1370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1380);
  }
  return result;
}

unint64_t sub_13D82C()
{
  unint64_t result = qword_2F1398;
  if (!qword_2F1398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1398);
  }
  return result;
}

uint64_t sub_13D880()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t static AssetAction.Kind.removeFromWantToRead(presentNotice:useNonSpecificDeterminerInMessage:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_13D954(a1, a2, a3);
}

uint64_t type metadata accessor for AssetAction.Kind(uint64_t a1)
{
  return sub_2A148(a1, qword_2F14F0);
}

uint64_t static AssetAction.Kind.addToWantToRead(presentNotice:useNonSpecificDeterminerInMessage:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_13D954(a1, a2, a3);
}

uint64_t sub_13D954@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0xD00000000000001ALL;
  *(void *)(a3 + 8) = 0x8000000000289180;
  *(unsigned char *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 17) = a2;
  type metadata accessor for AssetAction.Kind(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t AssetAction.Kind.appAnalyticsClickTargetType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13FD34(v2, (uint64_t)v6, type metadata accessor for AssetAction.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.buy(_:);
      goto LABEL_6;
    case 2u:
    case 7u:

      goto LABEL_5;
    case 3u:
      uint64_t v10 = (void *)*((void *)v6 + 3);
      swift_bridgeObjectRelease();

      goto LABEL_5;
    case 4u:

      uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.audioSample(_:);
      goto LABEL_6;
    case 5u:
      id v15 = *(id *)v6;
      uint64_t v16 = *((void *)v6 + 1);
      if (v15 == (id)0xD00000000000001ALL && v16 == 0x8000000000289180)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = sub_26DDB0();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.removeFromWantToRead(_:);
      goto LABEL_6;
    case 6u:
      uint64_t v19 = enum case for ClickData.TargetType.readSample(_:);
      uint64_t v20 = sub_269CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
      uint64_t v9 = sub_2696C0();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    case 8u:
    case 0xBu:
    case 0xCu:
LABEL_5:
      uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.navigate(_:);
      goto LABEL_6;
    case 9u:
    case 0xAu:
      uint64_t v7 = enum case for ClickData.TargetType.navigate(_:);
      uint64_t v8 = sub_269CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
      uint64_t v9 = sub_269810();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    default:
      id v17 = *(id *)v6;
      uint64_t v18 = *((void *)v6 + 1);
      if (v17 == (id)0xD00000000000001ALL && v18 == 0x8000000000289180)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.addToWantToRead(_:);
        goto LABEL_6;
      }
      char v22 = sub_26DDB0();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_21;
      }
LABEL_22:
      uint64_t v11 = (unsigned int *)&enum case for ClickData.TargetType.button(_:);
LABEL_6:
      uint64_t v12 = *v11;
      uint64_t v13 = sub_269CC0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a1, v12, v13);
  }
}

uint64_t AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  LODWORD(v48) = a7;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v45 = a11;
  uint64_t v17 = sub_269C00();
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  __chkstk_darwin(v17);
  long long v42 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_269CC0();
  __chkstk_darwin(v19 - 8);
  char v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2EA820);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  long long v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v49 = (char *)&v42 - v29;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v30 = v47;
  *(void *)(a9 + 32) = v46;
  *(void *)(a9 + 40) = v30;
  *(unsigned char *)(a9 + 48) = v48;
  uint64_t v31 = type metadata accessor for AssetAction(0);
  uint64_t v32 = a9 + *(int *)(v31 + 32);
  uint64_t v33 = sub_26CB80();
  uint64_t v34 = *(void *)(v33 - 8);
  char v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  uint64_t v48 = a8;
  uint64_t v36 = a8;
  uint64_t v37 = v45;
  v35(v32, v36, v33);
  uint64_t v46 = v31;
  sub_13FD34(a10, a9 + *(int *)(v31 + 40), type metadata accessor for AssetAction.Kind);
  sub_10AC60(v37, (uint64_t)v28);
  uint64_t v47 = a10;
  sub_13FD34(a10, (uint64_t)v24, type metadata accessor for AssetAction.Kind);
  uint64_t v38 = sub_269CE0();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v28, 1, v38) == 1)
  {
    AssetAction.Kind.appAnalyticsClickTargetType.getter((uint64_t)v21);
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for LinkActionType.click(_:), v44);
    sub_269CD0();
    sub_B6DC(v37, &qword_2EA820);
    sub_13FD9C(v47, type metadata accessor for AssetAction.Kind);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v48, v33);
    sub_13FD9C((uint64_t)v24, type metadata accessor for AssetAction.Kind);
    sub_B6DC((uint64_t)v28, &qword_2EA820);
  }
  else
  {
    sub_B6DC(v37, &qword_2EA820);
    sub_13FD9C(v47, type metadata accessor for AssetAction.Kind);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v48, v33);
    sub_13FD9C((uint64_t)v24, type metadata accessor for AssetAction.Kind);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v49, v28, v38);
  }
  uint64_t v40 = (uint64_t)v49;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v49, 0, 1, v38);
  return sub_10ABF8(v40, a9 + *(int *)(v46 + 36));
}

uint64_t type metadata accessor for AssetAction(uint64_t a1)
{
  return sub_2A148(a1, (uint64_t *)&unk_2F1428);
}

uint64_t AssetAction.Kind.figaroActionType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13FD34(v2, (uint64_t)v6, type metadata accessor for AssetAction.Kind);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v8 = 20;
  switch((int)result)
  {
    case 1:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 4;
      break;
    case 2:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 6;
      break;
    case 3:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 11;
      break;
    case 4:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 2;
      break;
    case 6:
      uint64_t v10 = sub_2696C0();
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
      char v8 = 24;
      break;
    case 7:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 33;
      break;
    case 8:
      if (*v6) {
        char v8 = 15;
      }
      else {
        char v8 = 14;
      }
      break;
    case 9:
    case 10:
      uint64_t v9 = sub_269810();
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
      goto LABEL_4;
    case 11:
      break;
    case 12:
LABEL_4:
      char v8 = 18;
      break;
    default:
      uint64_t result = sub_13FD9C((uint64_t)v6, type metadata accessor for AssetAction.Kind);
      char v8 = 0;
      break;
  }
  *a1 = v8;
  return result;
}

uint64_t LibraryAssetState.isInSamples.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AssetAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetAction(0) + 32);
  uint64_t v4 = sub_26CB80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AssetAction.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetAction(0) + 36);

  return sub_10AC60(v3, a1);
}

uint64_t AssetAction.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AssetAction(0);
  return sub_13FD34(v1 + *(int *)(v3 + 40), a1, type metadata accessor for AssetAction.Kind);
}

uint64_t sub_13E534()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44497465737361;
      break;
    case 2:
      uint64_t result = 0x65636E6174736E69;
      break;
    case 3:
      uint64_t result = 0x63696C7078457369;
      break;
    case 4:
      uint64_t result = 0x654D6E6F69746361;
      break;
    case 5:
      uint64_t result = 0x7461446B63696C63;
      break;
    case 6:
      uint64_t result = 1684957547;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_13E61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_142CE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_13E644(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_13E650(uint64_t a1)
{
  unint64_t v2 = sub_13FC34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13E68C(uint64_t a1)
{
  unint64_t v2 = sub_13FC34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AssetAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v30);
  uint64_t v31 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26CB80();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2F13A0);
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for AssetAction(0);
  __chkstk_darwin(v13);
  id v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = a1[3];
  uint64_t v36 = a1;
  sub_4ADC(a1, v16);
  sub_13FC34();
  char v35 = v12;
  uint64_t v17 = v37;
  sub_26DFC0();
  if (v17) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v36);
  }
  long long v28 = v6;
  uint64_t v37 = v15;
  char v44 = 0;
  uint64_t v18 = v34;
  uint64_t v19 = sub_26DC70();
  uint64_t v20 = (uint64_t)v37;
  uint64_t *v37 = v19;
  *(void *)(v20 + 8) = v21;
  char v43 = 1;
  *(void *)(v20 + 16) = sub_26DC70();
  *(void *)(v20 + 24) = v22;
  char v42 = 2;
  *(void *)(v20 + 32) = sub_26DC30();
  *(void *)(v20 + 40) = v23;
  char v41 = 3;
  *(unsigned char *)(v20 + 48) = sub_26DC80() & 1;
  char v40 = 4;
  sub_13FC88(&qword_2EF918, (void (*)(uint64_t))&type metadata accessor for ActionMetrics);
  sub_26DC90();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v20 + v13[8], v9, v7);
  sub_269CE0();
  char v39 = 5;
  sub_13FC88(&qword_2F13B0, (void (*)(uint64_t))&type metadata accessor for ClickData);
  uint64_t v24 = (uint64_t)v28;
  sub_26DC60();
  uint64_t v25 = v33;
  sub_10ABF8(v24, v20 + v13[9]);
  char v38 = 6;
  sub_13FC88(&qword_2F13B8, (void (*)(uint64_t))type metadata accessor for AssetAction.Kind);
  uint64_t v26 = (uint64_t)v31;
  sub_26DC90();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v35, v18);
  sub_13FCD0(v26, v20 + v13[10]);
  sub_13FD34(v20, v29, type metadata accessor for AssetAction);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v36);
  return sub_13FD9C(v20, type metadata accessor for AssetAction);
}

uint64_t sub_13ED50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10AC60(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_13ED60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetAction.init(from:)(a1, a2);
}

uint64_t sub_13ED78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_26CB80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

Swift::Int sub_13EDE8()
{
  return sub_26DF20();
}

uint64_t sub_13EE34()
{
  return sub_26D4B0();
}

Swift::Int sub_13EE44()
{
  return sub_26DF20();
}

uint64_t sub_13EE8C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DBD80;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_13EEE0(void *a1@<X8>)
{
  *a1 = 1684957547;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_13EEF4()
{
  return 1684957547;
}

uint64_t sub_13EF04@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_2DBDB8;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_13EF5C(uint64_t a1)
{
  unint64_t v2 = sub_13FDFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13EF98(uint64_t a1)
{
  unint64_t v2 = sub_13FDFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AssetAction.Kind.init(from:)(void *a1)
{
  uint64_t v3 = sub_4A98(&qword_2F13C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_13FDFC();
  sub_26DFC0();
  if (!v1)
  {
    sub_26DC70();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_26DAD0();
    swift_allocError();
    uint64_t v9 = v8;
    sub_26DC20();
    sub_26DAC0();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v9, enum case for DecodingError.dataCorrupted(_:), v7);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t sub_13F1BC(void *a1)
{
  return AssetAction.Kind.init(from:)(a1);
}

uint64_t static AssetAction.Kind.markAsFinished.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x800000000028A580;
  *(_WORD *)(a1 + 16) = 0;
  type metadata accessor for AssetAction.Kind(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t _s7BooksUI11AssetActionV4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1, void **a2)
{
  uint64_t v115 = a1;
  uint64_t v116 = a2;
  uint64_t v2 = sub_2696C0();
  uint64_t v111 = *(void *)(v2 - 8);
  uint64_t v112 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v110 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v109 = (char *)&v109 - v5;
  uint64_t v6 = type metadata accessor for AssetAction.Kind(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v114 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v109 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  int v113 = (void **)((char *)&v109 - v13);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (void **)((char *)&v109 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v109 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (void **)((char *)&v109 - v21);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v109 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (void **)((char *)&v109 - v26);
  uint64_t v28 = sub_4A98(&qword_2F1558);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v31 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (uint64_t)&v31[*(int *)(v29 + 56)];
  sub_13FD34(v115, (uint64_t)v31, type metadata accessor for AssetAction.Kind);
  uint64_t v33 = (uint64_t)v116;
  uint64_t v116 = (void **)v32;
  sub_13FD34(v33, v32, type metadata accessor for AssetAction.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_13FD34((uint64_t)v31, (uint64_t)v11, type metadata accessor for AssetAction.Kind);
      char v35 = *(void **)v11;
      uint64_t v34 = (void *)*((void *)v11 + 1);
      int v36 = v11[16];
      char v37 = v11[17];
      char v38 = v116;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_49;
      }
      uint64_t v39 = (uint64_t)v31;
      char v40 = *v38;
      char v41 = v38[1];
      int v42 = *((unsigned __int8 *)v38 + 16);
      char v43 = *((unsigned char *)v38 + 17);
      if (v35 == v40 && v34 == v41) {
        goto LABEL_8;
      }
      goto LABEL_37;
    case 1u:
      sub_13FD34((uint64_t)v31, (uint64_t)v27, type metadata accessor for AssetAction.Kind);
      uint64_t v45 = *v27;
      uint64_t v46 = v116;
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_11;
      }
      goto LABEL_31;
    case 2u:
      sub_13FD34((uint64_t)v31, (uint64_t)v16, type metadata accessor for AssetAction.Kind);
      uint64_t v59 = *v16;
      uint64_t v60 = v116;
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_17;
      }
      goto LABEL_43;
    case 3u:
      sub_13FD34((uint64_t)v31, (uint64_t)v19, type metadata accessor for AssetAction.Kind);
      uint64_t v68 = *(void **)v19;
      uint64_t v67 = (void *)*((void *)v19 + 1);
      int v69 = v19[16];
      uint64_t v70 = (void *)*((void *)v19 + 3);
      uint64_t v71 = v116;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v72 = v71[1];
        int v73 = *((unsigned __int8 *)v71 + 16);
        uint64_t v74 = v71[3];
        uint64_t v39 = (uint64_t)v31;
        if (v67)
        {
          if (v72)
          {
            if (v68 == *v71 && v67 == v72)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              char v76 = sub_26DDB0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v76 & 1) == 0) {
                goto LABEL_73;
              }
            }
LABEL_72:
            if (v69 != v73) {
              goto LABEL_73;
            }
            if (v70)
            {
              uint64_t v99 = sub_26A060();
              uint64_t v101 = v100;
              if (v74)
              {
                uint64_t v102 = v99;
                uint64_t v103 = sub_26A060();
                uint64_t v105 = v104;
                if (v101)
                {
                  if (v104)
                  {
                    if (v102 == v103 && v101 == v104) {
                      char v58 = 1;
                    }
                    else {
                      char v58 = sub_26DDB0();
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_75;
                  }
                  goto LABEL_94;
                }
                goto LABEL_90;
              }
              if (v100)
              {
                uint64_t v74 = 0;
LABEL_94:
                swift_bridgeObjectRelease();

                goto LABEL_74;
              }
            }
            else
            {
              if (v74)
              {
                sub_26A060();
                uint64_t v105 = v108;
                uint64_t v70 = 0;
LABEL_90:

                if (v105)
                {
                  swift_bridgeObjectRelease();
LABEL_74:
                  char v58 = 0;
LABEL_75:
                  sub_13FD9C(v39, type metadata accessor for AssetAction.Kind);
                  return v58 & 1;
                }
LABEL_97:
                char v58 = 1;
                goto LABEL_75;
              }
              uint64_t v70 = 0;
            }

            goto LABEL_97;
          }
        }
        else if (!v72)
        {
          goto LABEL_72;
        }
        swift_bridgeObjectRelease();
LABEL_73:

        goto LABEL_74;
      }

LABEL_49:
      swift_bridgeObjectRelease();
LABEL_51:
      sub_B6DC((uint64_t)v31, &qword_2F1558);
      char v58 = 0;
      return v58 & 1;
    case 4u:
      sub_13FD34((uint64_t)v31, (uint64_t)v22, type metadata accessor for AssetAction.Kind);
      uint64_t v45 = *v22;
      uint64_t v46 = v116;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
LABEL_31:

        goto LABEL_51;
      }
LABEL_11:
      uint64_t v47 = (uint64_t)v31;
      uint64_t v48 = *v46;
      id v49 = v45;
      uint64_t v50 = sub_26A060();
      uint64_t v52 = v51;

      id v53 = v48;
      uint64_t v54 = sub_26A060();
      uint64_t v56 = v55;

      if (v50 == v54 && v52 == v56) {
        char v58 = 1;
      }
      else {
        char v58 = sub_26DDB0();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 5u:
      uint64_t v77 = v114;
      sub_13FD34((uint64_t)v31, v114, type metadata accessor for AssetAction.Kind);
      uint64_t v79 = *(void **)v77;
      uint64_t v78 = *(void **)(v77 + 8);
      int v36 = *(unsigned __int8 *)(v77 + 16);
      char v37 = *(unsigned char *)(v77 + 17);
      unint64_t v80 = v116;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_49;
      }
      uint64_t v81 = *v80;
      uint64_t v82 = v80[1];
      int v42 = *((unsigned __int8 *)v80 + 16);
      char v43 = *((unsigned char *)v80 + 17);
      uint64_t v39 = (uint64_t)v31;
      if (v79 == v81 && v78 == v82)
      {
LABEL_8:
        swift_bridgeObjectRelease_n();
        if (v36 != v42) {
          goto LABEL_74;
        }
      }
      else
      {
LABEL_37:
        char v84 = sub_26DDB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v58 = 0;
        if (v84 & 1) == 0 || ((v36 ^ v42)) {
          goto LABEL_75;
        }
      }
      char v58 = v37 ^ v43 ^ 1;
      goto LABEL_75;
    case 6u:
      sub_13FD34((uint64_t)v31, (uint64_t)v25, type metadata accessor for AssetAction.Kind);
      uint64_t v85 = v116;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v86 = v111;
        uint64_t v87 = (uint64_t)v31;
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
        uint64_t v89 = v109;
        uint64_t v90 = v25;
        uint64_t v91 = v112;
        v88(v109, v90, v112);
        uint64_t v92 = v110;
        v88(v110, (char *)v85, v91);
        char v58 = sub_269690();
        uint64_t v93 = *(void (**)(char *, uint64_t))(v86 + 8);
        v93(v92, v91);
        v93(v89, v91);
        sub_13FD9C(v87, type metadata accessor for AssetAction.Kind);
        return v58 & 1;
      }
      (*(void (**)(char *, uint64_t))(v111 + 8))(v25, v112);
      goto LABEL_51;
    case 7u:
      uint64_t v94 = v113;
      sub_13FD34((uint64_t)v31, (uint64_t)v113, type metadata accessor for AssetAction.Kind);
      uint64_t v59 = *v94;
      uint64_t v60 = v116;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_43:

        goto LABEL_51;
      }
LABEL_17:
      uint64_t v47 = (uint64_t)v31;
      uint64_t v61 = *v60;
      if (v59)
      {
        id v62 = v59;
        uint64_t v63 = sub_26A060();
        uint64_t v65 = v64;

        if (!v61)
        {
          if (v65)
          {
            id v66 = 0;
LABEL_65:
            swift_bridgeObjectRelease();

            char v58 = 0;
            goto LABEL_86;
          }
          goto LABEL_67;
        }
      }
      else
      {
        uint64_t v65 = 0;
        uint64_t v63 = 0;
        if (!v61)
        {
          id v62 = 0;
LABEL_67:

          char v58 = 1;
          goto LABEL_86;
        }
      }
      id v66 = v61;
      uint64_t v95 = sub_26A060();
      uint64_t v97 = v96;

      if (v65)
      {
        if (!v97)
        {
          id v62 = v59;
          goto LABEL_65;
        }
        if (v63 == v95 && v65 == v97) {
          char v58 = 1;
        }
        else {
          char v58 = sub_26DDB0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        if (v97)
        {
          swift_bridgeObjectRelease();
          char v58 = 0;
        }
        else
        {
          char v58 = 1;
        }
      }
LABEL_86:
      sub_13FD9C(v47, type metadata accessor for AssetAction.Kind);
      return v58 & 1;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_51;
      }
      sub_13FD9C((uint64_t)v31, type metadata accessor for AssetAction.Kind);
      char v58 = 1;
      return v58 & 1;
    default:
      goto LABEL_51;
  }
}

unint64_t sub_13FC34()
{
  unint64_t result = qword_2F13A8;
  if (!qword_2F13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F13A8);
  }
  return result;
}

uint64_t sub_13FC88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_13FCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAction.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_13FD34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_13FD9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_13FDFC()
{
  unint64_t result = qword_2F13C8;
  if (!qword_2F13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F13C8);
  }
  return result;
}

uint64_t sub_13FE50(uint64_t a1)
{
  uint64_t result = sub_13FC88(&qword_2ED9D0, (void (*)(uint64_t))type metadata accessor for AssetAction);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for AssetAction(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a3[8];
    uint64_t v12 = a1 + v11;
    uint64_t v38 = (uint64_t)a2 + v11;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    uint64_t v13 = sub_26CB80();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v38, v13);
    uint64_t v15 = a3[9];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_269CE0();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_4A98(&qword_2EA820);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v23 = a3[10];
    uint64_t v24 = (void *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for AssetAction.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
        uint64_t v27 = v25[1];
        void *v24 = *v25;
        v24[1] = v27;
        *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 4u:
      case 7u:
        uint64_t v32 = (void *)*v25;
        void *v24 = *v25;
        id v33 = v32;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v28 = v25[1];
        void *v24 = *v25;
        v24[1] = v28;
        *((unsigned char *)v24 + 16) = *((unsigned char *)v25 + 16);
        uint64_t v29 = (void *)v25[3];
        _OWORD v24[3] = v29;
        swift_bridgeObjectRetain();
        id v30 = v29;
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v31 = sub_2696C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v24, v25, v31);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v34 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v24, v25, v34);
        uint64_t v35 = sub_4A98(&qword_2F0760);
        *((unsigned char *)v24 + *(int *)(v35 + 48)) = *((unsigned char *)v25 + *(int *)(v35 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v36 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v24, v25, v36);
        uint64_t v37 = sub_4A98(&qword_2F0768);
        *((unsigned char *)v24 + *(int *)(v37 + 48)) = *((unsigned char *)v25 + *(int *)(v37 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
  }
  return v4;
}

void destroy for AssetAction(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_269CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[10];
  type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      return;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v10 = *(void **)v9;
      goto LABEL_10;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void **)(v9 + 24);
LABEL_10:

      return;
    case 6u:
      uint64_t v11 = sub_2696C0();
      goto LABEL_14;
    case 9u:
    case 0xAu:
      uint64_t v11 = sub_269810();
LABEL_14:
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v9, v11);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for AssetAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v36 = a2 + v10;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v12 = sub_26CB80();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v36, v12);
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_269CE0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_4A98(&qword_2EA820);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      uint64_t v24 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v24;
      *((_WORD *)v21 + 8) = *((_WORD *)v22 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v29 = (void *)*v22;
      *uint64_t v21 = *v22;
      id v30 = v29;
      goto LABEL_12;
    case 3u:
      uint64_t v25 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v25;
      *((unsigned char *)v21 + 16) = *((unsigned char *)v22 + 16);
      uint64_t v26 = (void *)v22[3];
      _OWORD v21[3] = v26;
      swift_bridgeObjectRetain();
      id v27 = v26;
      goto LABEL_12;
    case 6u:
      uint64_t v28 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v22, v28);
      goto LABEL_12;
    case 9u:
      uint64_t v31 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v21, v22, v31);
      uint64_t v32 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v21 + *(int *)(v32 + 48)) = *((unsigned char *)v22 + *(int *)(v32 + 48));
      goto LABEL_12;
    case 0xAu:
      uint64_t v33 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v21, v22, v33);
      uint64_t v34 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v21 + *(int *)(v34 + 48)) = *((unsigned char *)v22 + *(int *)(v34 + 48));
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for AssetAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_269CE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v18 = sub_4A98(&qword_2EA820);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_8;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
  if (a1 == a2) {
    return a1;
  }
LABEL_8:
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  sub_13FD9C(a1 + v19, type metadata accessor for AssetAction.Kind);
  uint64_t v22 = type metadata accessor for AssetAction.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      void *v20 = *v21;
      v20[1] = v21[1];
      *((unsigned char *)v20 + 16) = *((unsigned char *)v21 + 16);
      *((unsigned char *)v20 + 17) = *((unsigned char *)v21 + 17);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v26 = (void *)*v21;
      void *v20 = *v21;
      id v27 = v26;
      goto LABEL_18;
    case 3u:
      void *v20 = *v21;
      v20[1] = v21[1];
      *((unsigned char *)v20 + 16) = *((unsigned char *)v21 + 16);
      uint64_t v23 = (void *)v21[3];
      void v20[3] = v23;
      swift_bridgeObjectRetain();
      id v24 = v23;
      goto LABEL_18;
    case 6u:
      uint64_t v25 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v20, v21, v25);
      goto LABEL_18;
    case 9u:
      uint64_t v28 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v20, v21, v28);
      uint64_t v29 = sub_4A98(&qword_2F0760);
      *((unsigned char *)v20 + *(int *)(v29 + 48)) = *((unsigned char *)v21 + *(int *)(v29 + 48));
      goto LABEL_18;
    case 0xAu:
      uint64_t v30 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v20, v21, v30);
      uint64_t v31 = sub_4A98(&qword_2F0768);
      *((unsigned char *)v20 + *(int *)(v31 + 48)) = *((unsigned char *)v21 + *(int *)(v31 + 48));
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t initializeWithTake for AssetAction(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_269CE0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_4A98(&qword_2EA820);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = (unsigned char *)(a2 + v17);
  uint64_t v20 = type metadata accessor for AssetAction.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v23 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v18, v19, v23);
      uint64_t v24 = sub_4A98(&qword_2F0768);
      v18[*(int *)(v24 + 48)] = v19[*(int *)(v24 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v25 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v18, v19, v25);
      uint64_t v26 = sub_4A98(&qword_2F0760);
      v18[*(int *)(v26 + 48)] = v19[*(int *)(v26 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v22 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithTake for AssetAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_26CB80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_269CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v21 = sub_4A98(&qword_2EA820);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_8;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
  if (a1 == a2) {
    return a1;
  }
LABEL_8:
  uint64_t v22 = a3[10];
  uint64_t v23 = (unsigned char *)(a1 + v22);
  uint64_t v24 = (unsigned char *)(a2 + v22);
  sub_13FD9C(a1 + v22, type metadata accessor for AssetAction.Kind);
  uint64_t v25 = type metadata accessor for AssetAction.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v28 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v23, v24, v28);
      uint64_t v29 = sub_4A98(&qword_2F0768);
      v23[*(int *)(v29 + 48)] = v24[*(int *)(v29 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v30 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 32))(v23, v24, v30);
      uint64_t v31 = sub_4A98(&qword_2F0760);
      v23[*(int *)(v31 + 48)] = v24[*(int *)(v31 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v27 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v23, v24, v27);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1415E0);
}

uint64_t sub_1415E0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_26CB80();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EA820);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for AssetAction.Kind(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[10];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AssetAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_141770);
}

uint64_t sub_141770(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_26CB80();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2EA820);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for AssetAction.Kind(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[10];

  return v15(v17, a2, a2, v16);
}

void sub_1418EC()
{
  sub_26CB80();
  if (v0 <= 0x3F)
  {
    sub_141A10();
    if (v1 <= 0x3F)
    {
      type metadata accessor for AssetAction.Kind(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_141A10()
{
  if (!qword_2F1438)
  {
    sub_269CE0();
    unint64_t v0 = sub_26D980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2F1438);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AssetAction.Kind(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 4u:
      case 7u:
        uint64_t v14 = (void *)*a2;
        *a1 = *a2;
        id v15 = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v11 = (void *)a2[3];
        a1[3] = v11;
        swift_bridgeObjectRetain();
        id v12 = v11;
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v13 = sub_2696C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v16 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = sub_4A98(&qword_2F0760);
        *((unsigned char *)a1 + *(int *)(v17 + 48)) = *((unsigned char *)a2 + *(int *)(v17 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v18 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = sub_4A98(&qword_2F0768);
        *((unsigned char *)a1 + *(int *)(v19 + 48)) = *((unsigned char *)a2 + *(int *)(v19 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for AssetAction.Kind(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      return;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      unint64_t v2 = *(void **)a1;
      goto LABEL_8;
    case 3u:
      swift_bridgeObjectRelease();
      unint64_t v2 = *(void **)(a1 + 24);
LABEL_8:

      return;
    case 6u:
      uint64_t v3 = sub_2696C0();
      goto LABEL_12;
    case 9u:
    case 0xAu:
      uint64_t v3 = sub_269810();
LABEL_12:
      unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    default:
      return;
  }
}

void *initializeWithCopy for AssetAction.Kind(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
    case 2u:
    case 4u:
    case 7u:
      uint64_t v11 = (void *)*a2;
      *a1 = *a2;
      id v12 = v11;
      goto LABEL_9;
    case 3u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = (void *)a2[3];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      id v9 = v8;
      goto LABEL_9;
    case 6u:
      uint64_t v10 = sub_2696C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_9;
    case 9u:
      uint64_t v13 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = sub_4A98(&qword_2F0760);
      *((unsigned char *)a1 + *(int *)(v14 + 48)) = *((unsigned char *)a2 + *(int *)(v14 + 48));
      goto LABEL_9;
    case 0xAu:
      uint64_t v15 = sub_269810();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = sub_4A98(&qword_2F0768);
      *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for AssetAction.Kind(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_13FD9C((uint64_t)a1, type metadata accessor for AssetAction.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 1u:
      case 2u:
      case 4u:
      case 7u:
        id v9 = (void *)*a2;
        *a1 = *a2;
        id v10 = v9;
        goto LABEL_10;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v6 = (void *)a2[3];
        a1[3] = v6;
        swift_bridgeObjectRetain();
        id v7 = v6;
        goto LABEL_10;
      case 6u:
        uint64_t v8 = sub_2696C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_10;
      case 9u:
        uint64_t v11 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = sub_4A98(&qword_2F0760);
        *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
        goto LABEL_10;
      case 0xAu:
        uint64_t v13 = sub_269810();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = sub_4A98(&qword_2F0768);
        *((unsigned char *)a1 + *(int *)(v14 + 48)) = *((unsigned char *)a2 + *(int *)(v14 + 48));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for AssetAction.Kind(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v8 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_4A98(&qword_2F0768);
      a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 9:
      uint64_t v10 = sub_269810();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_4A98(&qword_2F0760);
      a1[*(int *)(v11 + 48)] = a2[*(int *)(v11 + 48)];
      swift_storeEnumTagMultiPayload();
      break;
    case 6:
      uint64_t v7 = sub_2696C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithTake for AssetAction.Kind(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_13FD9C((uint64_t)a1, type metadata accessor for AssetAction.Kind);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 10:
        uint64_t v8 = sub_269810();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = sub_4A98(&qword_2F0768);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 9:
        uint64_t v10 = sub_269810();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = sub_4A98(&qword_2F0760);
        a1[*(int *)(v11 + 48)] = a2[*(int *)(v11 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 6:
        uint64_t v7 = sub_2696C0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1427C0()
{
  int v5 = &unk_279F70;
  uint64_t v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v7 = &unk_279F88;
  uint64_t v8 = &unk_279FA0;
  uint64_t v9 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v10 = &unk_279F70;
  uint64_t result = sub_2696C0();
  if (v1 <= 0x3F)
  {
    uint64_t v11 = *(void *)(result - 8) + 64;
    uint64_t v12 = &unk_279F88;
    uint64_t v13 = &unk_279F50;
    uint64_t result = sub_269810();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v14 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v15 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetAction.Kind.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x142998);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetAction.Kind.CodingKeys()
{
  return &type metadata for AssetAction.Kind.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssetAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x142A9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetAction.CodingKeys()
{
  return &type metadata for AssetAction.CodingKeys;
}

unint64_t sub_142AD8()
{
  unint64_t result = qword_2F1528;
  if (!qword_2F1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1528);
  }
  return result;
}

unint64_t sub_142B30()
{
  unint64_t result = qword_2F1530;
  if (!qword_2F1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1530);
  }
  return result;
}

unint64_t sub_142B88()
{
  unint64_t result = qword_2F1538;
  if (!qword_2F1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1538);
  }
  return result;
}

unint64_t sub_142BE0()
{
  unint64_t result = qword_2F1540;
  if (!qword_2F1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1540);
  }
  return result;
}

unint64_t sub_142C38()
{
  unint64_t result = qword_2F1548;
  if (!qword_2F1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1548);
  }
  return result;
}

unint64_t sub_142C90()
{
  unint64_t result = qword_2F1550;
  if (!qword_2F1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1550);
  }
  return result;
}

uint64_t sub_142CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44497465737361 && a2 == 0xE700000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6174736E69 && a2 == 0xEA00000000004449 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63696C63 && a2 == 0xE900000000000061 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t ToolbarActionToggleMenuItem.init(item:isSelected:preSelectionActionProvider:postSelectionActionProvider:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = swift_getKeyPath();
  *(unsigned char *)(a7 + 40) = 0;
  uint64_t v14 = (int *)type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v15 = (uint64_t *)(a7 + v14[5]);
  uint64_t *v15 = swift_getKeyPath();
  sub_4A98(&qword_2EBC98);
  swift_storeEnumTagMultiPayload();
  uint64_t result = sub_1436C0(a1, a7 + v14[6], type metadata accessor for ToolbarActionMenuItem);
  *(unsigned char *)(a7 + v14[7]) = a2;
  uint64_t v17 = (void *)(a7 + v14[8]);
  *uint64_t v17 = a3;
  v17[1] = a4;
  uint64_t v18 = (void *)(a7 + v14[9]);
  *uint64_t v18 = a5;
  v18[1] = a6;
  return result;
}

uint64_t type metadata accessor for ToolbarActionToggleMenuItem()
{
  uint64_t result = qword_2F15C8;
  if (!qword_2F15C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ToolbarActionToggleMenuItem.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionToggleMenuItem();
  return sub_143654(v1 + *(int *)(v3 + 24), a1, type metadata accessor for ToolbarActionMenuItem);
}

uint64_t ToolbarActionToggleMenuItem.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionToggleMenuItem() + 28));
}

uint64_t ToolbarActionToggleMenuItem.preSelectionActionProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ToolbarActionToggleMenuItem() + 32));
  sub_82C24(v1);
  return v1;
}

uint64_t ToolbarActionToggleMenuItem.postSelectionActionProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ToolbarActionToggleMenuItem() + 36));
  sub_82C24(v1);
  return v1;
}

uint64_t ToolbarActionToggleMenuItem.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v2);
  char v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26A220();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F1560);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + *(int *)(v3 + 32);
  uint64_t v33 = v13;
  uint64_t v32 = type metadata accessor for ToolbarActionMenuItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13 + *(int *)(v32 + 20), v7);
  sub_143654(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
  sub_26D6D0();
  uint64_t v14 = sub_26D6C0();
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  sub_1436C0((uint64_t)v6, v16 + v15, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
  sub_143654(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
  uint64_t v17 = sub_26D6C0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  sub_1436C0((uint64_t)v6, v18 + v15, (uint64_t (*)(void))type metadata accessor for ToolbarActionToggleMenuItem);
  sub_26C4C0();
  uint64_t v37 = v10;
  sub_26A160();
  sub_78280();
  uint64_t v19 = v31;
  sub_26C420();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v29);
  LOBYTE(v14) = *(unsigned char *)(v33 + *(int *)(v32 + 28));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = (v14 & 1) == 0;
  uint64_t v22 = v34;
  uint64_t v23 = v36;
  uint64_t v24 = v19;
  uint64_t v25 = v19;
  uint64_t v26 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v36, v24, v35);
  uint64_t v27 = (uint64_t *)(v23 + *(int *)(sub_4A98(&qword_2F1568) + 36));
  *uint64_t v27 = KeyPath;
  v27[1] = (uint64_t)sub_50508;
  _OWORD v27[2] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v26);
}

uint64_t sub_143654(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1436C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_143728@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = v3 - 8;
  *a1 = *(unsigned char *)(v1
                 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                 + *(int *)(result + 36));
  return result;
}

uint64_t sub_143790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_26A2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26CB80();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v12 = type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v13 = (int *)v12;
  uint64_t v14 = *(uint64_t (**)(uint64_t))(a5 + *(int *)(v12 + 32));
  if (v14)
  {
    uint64_t v15 = a5 + *(int *)(v12 + 24);
    swift_retain();
    uint64_t v16 = v14(v15);
    sub_1F7B50(v16);
    sub_82C34((uint64_t)v14);
    uint64_t v11 = v30;
  }
  uint64_t v17 = a5 + v13[6];
  uint64_t v18 = type metadata accessor for ToolbarActionMenuItem(0);
  sub_C1A5C(v17 + *(int *)(v18 + 24), (uint64_t)&v25);
  sub_AD44(&v25, (uint64_t)&v28);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v11 = sub_E613C(0, v11[2] + 1, 1, v11);
  }
  unint64_t v20 = v11[2];
  unint64_t v19 = v11[3];
  if (v20 >= v19 >> 1) {
    uint64_t v11 = sub_E613C((void *)(v19 > 1), v20 + 1, 1, v11);
  }
  _OWORD v11[2] = v20 + 1;
  sub_AD44(&v28, (uint64_t)&v11[5 * v20 + 4]);
  uint64_t v30 = v11;
  uint64_t v21 = *(uint64_t (**)(uint64_t))(a5 + v13[9]);
  if (v21)
  {
    swift_retain();
    uint64_t v22 = v21(v17);
    sub_1F7B50(v22);
    sub_82C34((uint64_t)v21);
  }
  if (*(unsigned char *)(a5 + v13[7])) {
    return swift_bridgeObjectRelease();
  }
  sub_42020((uint64_t)&v28);
  if (v29)
  {
    sub_4ADC(&v28, v29);
    sub_26CB50();
    uint64_t v26 = sub_26CC40();
    uint64_t v27 = &protocol witness table for CompoundAction;
    sub_CA1C((uint64_t *)&v25);
    sub_26CC30();
    sub_41FE8((uint64_t)v9);
    sub_26A180();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v25);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v28);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_B6DC((uint64_t)&v28, &qword_2EBCA8);
  }
}

uint64_t sub_143AC4()
{
  uint64_t v1 = (int *)type metadata accessor for ToolbarActionToggleMenuItem();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 40))
  {
    if (*(void *)(v4 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v3);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v4 + v1[5];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v4 + v1[6];
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v9 = v7 + v8[5];
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  _s7BooksUI13AnyPagedFrameVwxx_0(v7 + v8[6]);
  uint64_t v13 = v7 + v8[9];
  type metadata accessor for ToolbarActionMenuItemButtonType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
      v12(v13, v10);
    }
    uint64_t v16 = sub_4A98(&qword_2EED20);
    swift_bridgeObjectRelease();
    uint64_t v17 = v13 + *(int *)(v16 + 64);
    if (*(void *)(v17 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v17);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  if (*(void *)(v4 + v1[8])) {
    swift_release();
  }
  if (*(void *)(v4 + v1[9])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_143DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ToolbarActionToggleMenuItem() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_143790(a1, a2, v6, v7, v8);
}

uint64_t sub_143E44(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_26A170();
}

uint64_t sub_143F10()
{
  return sub_143E44(*(void *)(v0 + 16));
}

uint64_t sub_143F20()
{
  return swift_deallocObject();
}

uint64_t sub_143F30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ToolbarActionToggleMenuItem(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (a2[5])
    {
      uint64_t v7 = a2[3];
      if (v7)
      {
        uint64_t v8 = a2[4];
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = a2[4];
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (void *)(v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    char v58 = a2;
    uint64_t v59 = a3;
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(v4 + v15);
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    *uint64_t v16 = *(uint64_t *)((char *)a2 + v15);
    v16[1] = v18;
    unint64_t v19 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
    uint64_t v20 = v19[5];
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = v17 + v20;
    uint64_t v23 = sub_26A220();
    uint64_t v57 = *(void *)(v23 - 8);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    uint64_t v25 = v19[6];
    long long v26 = *(_OWORD *)(v17 + v25 + 24);
    *(_OWORD *)((char *)v16 + v25 + 24) = v26;
    (**(void (***)(void))(v26 - 8))();
    *((unsigned char *)v16 + v19[7]) = *(unsigned char *)(v17 + v19[7]);
    *((unsigned char *)v16 + v19[8]) = *(unsigned char *)(v17 + v19[8]);
    uint64_t v27 = v19[9];
    long long v28 = (char *)v16 + v27;
    uint64_t v29 = (char *)(v17 + v27);
    uint64_t v30 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v29, 1, v23))
      {
        uint64_t v33 = sub_4A98(&qword_2EA0C0);
        memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        v24(v28, (uint64_t)v29, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v28, 0, 1, v23);
      }
      uint64_t v34 = v58;
      uint64_t v35 = v59;
      uint64_t v36 = sub_4A98(&qword_2EED20);
      uint64_t v37 = *(int *)(v36 + 48);
      uint64_t v38 = &v28[v37];
      uint64_t v39 = &v29[v37];
      uint64_t v41 = *(void *)v39;
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)uint64_t v38 = v41;
      *((void *)v38 + 1) = v40;
      uint64_t v42 = *(int *)(v36 + 64);
      char v43 = &v28[v42];
      char v44 = &v29[v42];
      uint64_t v45 = *((void *)v44 + 3);
      swift_bridgeObjectRetain();
      if (v45)
      {
        uint64_t v46 = *((void *)v44 + 4);
        *((void *)v43 + 3) = v45;
        *((void *)v43 + 4) = v46;
        (**(void (***)(char *, char *, uint64_t))(v45 - 8))(v43, v44, v45);
      }
      else
      {
        long long v47 = *((_OWORD *)v44 + 1);
        *(_OWORD *)char v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v47;
        *((void *)v43 + 4) = *((void *)v44 + 4);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v32 = sub_2696C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      uint64_t v34 = v58;
      uint64_t v35 = v59;
    }
    uint64_t v48 = v35[8];
    *(unsigned char *)(v4 + v35[7]) = *((unsigned char *)v34 + v35[7]);
    id v49 = (void *)(v4 + v48);
    uint64_t v50 = (uint64_t *)((char *)v34 + v48);
    if (*v50)
    {
      uint64_t v51 = v50[1];
      void *v49 = *v50;
      v49[1] = v51;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v49 = *(_OWORD *)v50;
    }
    uint64_t v52 = v35[9];
    id v53 = (void *)(v4 + v52);
    uint64_t v54 = (uint64_t *)((char *)v34 + v52);
    if (*v54)
    {
      uint64_t v55 = v54[1];
      void *v53 = *v54;
      v53[1] = v55;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v53 = *(_OWORD *)v54;
    }
  }
  return v4;
}

uint64_t destroy for ToolbarActionToggleMenuItem(uint64_t a1, int *a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  _s7BooksUI13AnyPagedFrameVwxx_0(v6 + v7[6]);
  uint64_t v12 = v6 + v7[9];
  type metadata accessor for ToolbarActionMenuItemButtonType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
      v11(v12, v9);
    }
    uint64_t v15 = sub_4A98(&qword_2EED20);
    swift_bridgeObjectRelease();
    uint64_t result = v12 + *(int *)(v15 + 64);
    if (*(void *)(result + 24)) {
      uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(result);
    }
  }
  else if (result == 1)
  {
    uint64_t v14 = sub_2696C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  if (*(void *)(a1 + a2[8])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[9]))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ToolbarActionToggleMenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A2C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v18 = v17[5];
  unint64_t v19 = (char *)v14 + v18;
  uint64_t v20 = (char *)v15 + v18;
  uint64_t v21 = sub_26A220();
  uint64_t v54 = *(void *)(v21 - 8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  uint64_t v23 = v17[6];
  long long v24 = *(_OWORD *)((char *)v15 + v23 + 24);
  *(_OWORD *)((char *)v14 + v23 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  *((unsigned char *)v14 + v17[7]) = *((unsigned char *)v15 + v17[7]);
  *((unsigned char *)v14 + v17[8]) = *((unsigned char *)v15 + v17[8]);
  uint64_t v25 = v17[9];
  long long v26 = (char *)v14 + v25;
  uint64_t v27 = (char *)v15 + v25;
  uint64_t v28 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v27, 1, v21))
    {
      uint64_t v31 = sub_4A98(&qword_2EA0C0);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v22(v26, v27, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v26, 0, 1, v21);
    }
    uint64_t v32 = v56;
    uint64_t v33 = sub_4A98(&qword_2EED20);
    uint64_t v34 = *(int *)(v33 + 48);
    uint64_t v35 = &v26[v34];
    uint64_t v36 = &v27[v34];
    uint64_t v38 = *(void *)v36;
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = v38;
    *((void *)v35 + 1) = v37;
    uint64_t v39 = *(int *)(v33 + 64);
    uint64_t v40 = &v26[v39];
    uint64_t v41 = &v27[v39];
    uint64_t v42 = *((void *)v41 + 3);
    swift_bridgeObjectRetain();
    if (v42)
    {
      uint64_t v43 = *((void *)v41 + 4);
      *((void *)v40 + 3) = v42;
      *((void *)v40 + 4) = v43;
      (**(void (***)(char *, char *, uint64_t))(v42 - 8))(v40, v41, v42);
    }
    else
    {
      long long v44 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v44;
      *((void *)v40 + 4) = *((void *)v41 + 4);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    uint64_t v32 = v56;
  }
  uint64_t v45 = v55[8];
  *(unsigned char *)(a1 + v55[7]) = *(unsigned char *)(v32 + v55[7]);
  uint64_t v46 = (void *)(a1 + v45);
  long long v47 = (void *)(v32 + v45);
  if (*v47)
  {
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  uint64_t v49 = v55[9];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(v32 + v49);
  if (*v51)
  {
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  }
  return a1;
}

uint64_t assignWithCopy for ToolbarActionToggleMenuItem(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    sub_B6DC(a1, &qword_2EBCA0);
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_B6DC(a1 + v9, &qword_2EBC98);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t)a2 + v13;
  void *v14 = *(void *)((char *)a2 + v13);
  v14[1] = *(void *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = (char *)v14 + v17;
  uint64_t v19 = v15 + v17;
  uint64_t v20 = sub_26A220();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 24))(v18, v19, v20);
  sub_16D58((void *)((char *)v14 + v16[6]), (uint64_t *)(v15 + v16[6]));
  *((unsigned char *)v14 + v16[7]) = *(unsigned char *)(v15 + v16[7]);
  *((unsigned char *)v14 + v16[8]) = *(unsigned char *)(v15 + v16[8]);
  if ((long long *)a1 != a2)
  {
    uint64_t v22 = v16[9];
    uint64_t v23 = (char *)v14 + v22;
    long long v24 = (char *)(v15 + v22);
    sub_145058((uint64_t)v14 + v22);
    uint64_t v25 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v24, 1, v20))
      {
        uint64_t v28 = sub_4A98(&qword_2EA0C0);
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v24, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
      }
      uint64_t v29 = sub_4A98(&qword_2EED20);
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = &v23[v30];
      uint64_t v32 = &v24[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      uint64_t v33 = *(int *)(v29 + 64);
      uint64_t v34 = &v23[v33];
      uint64_t v35 = &v24[v33];
      uint64_t v36 = *((void *)v35 + 3);
      swift_bridgeObjectRetain();
      if (v36)
      {
        *((void *)v34 + 3) = v36;
        *((void *)v34 + 4) = *((void *)v35 + 4);
        (**(void (***)(char *, char *, uint64_t))(v36 - 8))(v34, v35, v36);
      }
      else
      {
        long long v37 = *(_OWORD *)v35;
        long long v38 = *((_OWORD *)v35 + 1);
        *((void *)v34 + 4) = *((void *)v35 + 4);
        *(_OWORD *)uint64_t v34 = v37;
        *((_OWORD *)v34 + 1) = v38;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
        goto LABEL_24;
      }
      uint64_t v27 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v39 = a3[8];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t)a2 + v39;
  uint64_t v42 = *(void *)(a1 + v39);
  uint64_t v43 = *(void *)((char *)a2 + v39);
  if (v42)
  {
    if (v43)
    {
      uint64_t v44 = *(void *)(v41 + 8);
      *uint64_t v40 = v43;
      v40[1] = v44;
      swift_retain();
      swift_release();
      goto LABEL_31;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *(void *)(v41 + 8);
    *uint64_t v40 = v43;
    v40[1] = v45;
    swift_retain();
    goto LABEL_31;
  }
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
LABEL_31:
  uint64_t v46 = a3[9];
  long long v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)((char *)a2 + v46);
  uint64_t v49 = *(void *)(a1 + v46);
  uint64_t v50 = *v48;
  if (!v49)
  {
    if (v50)
    {
      uint64_t v52 = v48[1];
      *long long v47 = v50;
      v47[1] = v52;
      swift_retain();
      return a1;
    }
LABEL_37:
    *(_OWORD *)long long v47 = *(_OWORD *)v48;
    return a1;
  }
  if (!v50)
  {
    swift_release();
    goto LABEL_37;
  }
  uint64_t v51 = v48[1];
  *long long v47 = v50;
  v47[1] = v51;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_145058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for ToolbarActionToggleMenuItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v7 = a3[5];
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v50 = a3;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  uint64_t v19 = sub_26A220();
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v20(v17, v18, v19);
  uint64_t v21 = v15[6];
  uint64_t v22 = &v13[v21];
  uint64_t v23 = &v14[v21];
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((void *)v22 + 4) = *((void *)v23 + 4);
  v13[v15[7]] = v14[v15[7]];
  v13[v15[8]] = v14[v15[8]];
  uint64_t v25 = v15[9];
  long long v26 = &v13[v25];
  uint64_t v27 = &v14[v25];
  uint64_t v28 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v27, 1, v19))
    {
      uint64_t v31 = sub_4A98(&qword_2EA0C0);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v20(v26, v27, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v26, 0, 1, v19);
    }
    uint64_t v32 = v50;
    uint64_t v33 = sub_4A98(&qword_2EED20);
    *(_OWORD *)&v26[*(int *)(v33 + 48)] = *(_OWORD *)&v27[*(int *)(v33 + 48)];
    uint64_t v34 = *(int *)(v33 + 64);
    uint64_t v35 = &v26[v34];
    uint64_t v36 = &v27[v34];
    *((void *)v35 + 4) = *((void *)v36 + 4);
    long long v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    uint64_t v32 = v50;
  }
  uint64_t v38 = v32[8];
  *((unsigned char *)a1 + v32[7]) = *((unsigned char *)a2 + v32[7]);
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (uint64_t *)((char *)a2 + v38);
  uint64_t v41 = *v40;
  if (*v40)
  {
    uint64_t v42 = v40[1];
    *uint64_t v39 = v41;
    v39[1] = v42;
  }
  else
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  uint64_t v43 = v32[9];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (uint64_t *)((char *)a2 + v43);
  uint64_t v46 = *v45;
  if (*v45)
  {
    uint64_t v47 = v45[1];
    void *v44 = v46;
    v44[1] = v47;
  }
  else
  {
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  }
  return a1;
}

_OWORD *assignWithTake for ToolbarActionToggleMenuItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBCA0);
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    uint64_t v7 = a3[5];
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC98);
    uint64_t v10 = sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26A2C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
  *uint64_t v13 = *(void *)((char *)a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for ToolbarActionMenuItem(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = &v14[v17];
  uint64_t v20 = sub_26A220();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
  uint64_t v22 = v16[6];
  uint64_t v23 = (char *)v13 + v22;
  long long v24 = &v14[v22];
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13 + v22);
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  *((unsigned char *)v13 + v16[7]) = v14[v16[7]];
  *((unsigned char *)v13 + v16[8]) = v14[v16[8]];
  if (a1 != a2)
  {
    uint64_t v26 = v16[9];
    uint64_t v27 = (char *)v13 + v26;
    uint64_t v28 = &v14[v26];
    sub_145058((uint64_t)v13 + v26);
    uint64_t v29 = type metadata accessor for ToolbarActionMenuItemButtonType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v28, 1, v20))
      {
        uint64_t v32 = sub_4A98(&qword_2EA0C0);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v28, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      }
      uint64_t v33 = sub_4A98(&qword_2EED20);
      *(_OWORD *)&v27[*(int *)(v33 + 48)] = *(_OWORD *)&v28[*(int *)(v33 + 48)];
      uint64_t v34 = *(int *)(v33 + 64);
      uint64_t v35 = &v27[v34];
      uint64_t v36 = &v28[v34];
      *((void *)v35 + 4) = *((void *)v36 + 4);
      long long v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v31 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v27, v28, v31);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  uint64_t v38 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)((char *)a2 + v38);
  if (*(void *)((char *)a1 + v38))
  {
    if (v41)
    {
      uint64_t v42 = *((void *)v40 + 1);
      *uint64_t v39 = v41;
      v39[1] = v42;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v41)
  {
    uint64_t v43 = *((void *)v40 + 1);
    *uint64_t v39 = v41;
    v39[1] = v43;
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_22:
  uint64_t v44 = a3[9];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  uint64_t v47 = *(void *)((char *)a1 + v44);
  uint64_t v48 = *v46;
  if (!v47)
  {
    if (v48)
    {
      uint64_t v50 = v46[1];
      void *v45 = v48;
      v45[1] = v50;
      return a1;
    }
LABEL_28:
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    return a1;
  }
  if (!v48)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v49 = v46[1];
  void *v45 = v48;
  v45[1] = v49;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarActionToggleMenuItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_145884);
}

uint64_t sub_145884(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for ToolbarActionMenuItem(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolbarActionToggleMenuItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1459B8);
}

uint64_t sub_1459B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = type metadata accessor for ToolbarActionMenuItem(0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8]) = a2;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_145AC8()
{
  sub_13D548();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ToolbarActionMenuItem(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_145BB4()
{
  unint64_t result = qword_2F1610;
  if (!qword_2F1610)
  {
    sub_7B0C(&qword_2F1568);
    sub_7C18(&qword_2F1618, &qword_2F1560);
    sub_7C18(&qword_2EC028, &qword_2EC030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1610);
  }
  return result;
}

void *ListItemMetadataView.init(model:)@<X0>(const void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_4A98(&qword_2EA978);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for ListItemMetadataView() + 20);

  return memcpy(v4, a1, 0x118uLL);
}

uint64_t type metadata accessor for ListItemMetadataView()
{
  uint64_t result = qword_2F1678;
  if (!qword_2F1678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double ListItemMetadataView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26B1D0();
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v4);
  sub_145E70((uint64_t)v4);
  sub_145ECC((uint64_t)v11);
  *(_OWORD *)((char *)&v13[6] + 7) = v11[6];
  *(_OWORD *)((char *)&v13[5] + 7) = v11[5];
  *(_OWORD *)((char *)&v13[2] + 7) = v11[2];
  *(_OWORD *)((char *)&v13[1] + 7) = v11[1];
  *(_OWORD *)((char *)&v13[7] + 7) = v12[0];
  v13[8] = *(_OWORD *)((char *)v12 + 9);
  *(_OWORD *)((char *)&v13[3] + 7) = v11[3];
  *(_OWORD *)((char *)&v13[4] + 7) = v11[4];
  *(_OWORD *)((char *)v13 + 7) = v11[0];
  long long v6 = v13[4];
  *(_OWORD *)(a1 + 97) = v13[5];
  long long v7 = v13[7];
  *(_OWORD *)(a1 + 113) = v13[6];
  *(_OWORD *)(a1 + 129) = v7;
  *(_OWORD *)(a1 + 145) = v13[8];
  long long v8 = v13[0];
  *(_OWORD *)(a1 + 33) = v13[1];
  double result = *(double *)&v13[2];
  long long v10 = v13[3];
  *(_OWORD *)(a1 + 49) = v13[2];
  *(_OWORD *)(a1 + 65) = v10;
  *(_OWORD *)(a1 + 81) = v6;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 17) = v8;
  return result;
}

uint64_t sub_145E70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SizeConstants.Spacing(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_145ECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SizeConstants.Spacing(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v7 = (char *)&v28 - v6;
  uint64_t v29 = sub_146088();
  uint64_t v28 = sub_146230();
  uint64_t v8 = sub_1463DC();
  uint64_t v9 = sub_146588();
  uint64_t v10 = sub_146734();
  char v11 = sub_26B770();
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v7);
  sub_145E70((uint64_t)v7);
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v5);
  sub_145E70((uint64_t)v5);
  sub_26A640();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = sub_1468E0();
  char v21 = sub_26B770();
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v7);
  sub_145E70((uint64_t)v7);
  _s7BooksUI35ListItemEditionsDescriptorExternalsV7spacingAA13SizeConstantsV7SpacingVvg_0((uint64_t)v5);
  sub_145E70((uint64_t)v5);
  uint64_t result = sub_26A640();
  uint64_t v23 = v28;
  *(void *)a1 = v29;
  *(void *)(a1 + 8) = v23;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v17;
  *(void *)(a1 + 72) = v19;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v20;
  *(unsigned char *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = v24;
  *(void *)(a1 + 112) = v25;
  *(void *)(a1 + 120) = v26;
  *(void *)(a1 + 128) = v27;
  *(unsigned char *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_14606C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_146088()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20), (uint64_t)&v16, &qword_2EA0E0);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataEyebrowView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_159B20);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t sub_146230()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20) + 40, (uint64_t)&v16, &qword_2EA0E8);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataTitleLockupView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_7CCA0);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t sub_1463DC()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20) + 80, (uint64_t)&v16, &qword_2EA0F0);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataFormatAndDescriptorView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C8314);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t sub_146588()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20) + 160, (uint64_t)&v16, &qword_2EA0F8);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataFinePrintView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_248AE4);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t sub_146734()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20) + 200, (uint64_t)&v16, &qword_2EA100);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataSharedWithYouView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_10B9D8);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t sub_1468E0()
{
  uint64_t v1 = type metadata accessor for ListItemMetadataView();
  sub_B678(v0 + *(int *)(v1 + 20) + 240, (uint64_t)&v16, &qword_2EA108);
  if (!v17) {
    return 0;
  }
  sub_AD44(&v16, (uint64_t)v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_4ADC(v13, v14);
  uint64_t v4 = type metadata accessor for ListItemMetadataCreatorDescriptionView();
  v12[3] = v4;
  void v12[4] = swift_getWitnessTable();
  uint64_t v5 = sub_CA1C(v12);
  uint64_t v6 = sub_147E8C(v2, v3, (uint64_t (*)(char *, uint64_t, uint64_t))sub_66264);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))((char *)&v12[-1] - v7, v5, v4);
  uint64_t v9 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v12);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v13);
  return v9;
}

uint64_t *initializeBufferWithCopyOfBuffer for ListItemMetadataView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      void v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 3);
    if (v19)
    {
      uint64_t v20 = *((void *)v18 + 4);
      *((void *)v17 + 3) = v19;
      *((void *)v17 + 4) = v20;
      (**(void (***)(char *, char *))(v19 - 8))(v17, v18);
    }
    else
    {
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((void *)v17 + 4) = *((void *)v18 + 4);
    }
    uint64_t v22 = v17 + 40;
    uint64_t v23 = v18 + 40;
    uint64_t v24 = *((void *)v18 + 8);
    if (v24)
    {
      uint64_t v25 = *((void *)v18 + 9);
      *((void *)v17 + 8) = v24;
      *((void *)v17 + 9) = v25;
      (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
    }
    else
    {
      long long v26 = *(_OWORD *)(v18 + 56);
      *uint64_t v22 = *v23;
      *(_OWORD *)(v17 + 56) = v26;
      *((void *)v17 + 9) = *((void *)v18 + 9);
    }
    uint64_t v27 = v17 + 80;
    uint64_t v28 = v18 + 80;
    uint64_t v29 = *((void *)v18 + 13);
    if (v29)
    {
      uint64_t v30 = *((void *)v18 + 14);
      *((void *)v17 + 13) = v29;
      *((void *)v17 + 14) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
    }
    else
    {
      long long v31 = *((_OWORD *)v18 + 6);
      *uint64_t v27 = *v28;
      *((_OWORD *)v17 + 6) = v31;
      *((void *)v17 + 14) = *((void *)v18 + 14);
    }
    uint64_t v32 = v17 + 120;
    uint64_t v33 = v18 + 120;
    uint64_t v34 = *((void *)v18 + 18);
    if (v34)
    {
      uint64_t v35 = *((void *)v18 + 19);
      *((void *)v17 + 18) = v34;
      *((void *)v17 + 19) = v35;
      (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
    }
    else
    {
      long long v36 = *(_OWORD *)(v18 + 136);
      _OWORD *v32 = *v33;
      *(_OWORD *)(v17 + 136) = v36;
      *((void *)v17 + 19) = *((void *)v18 + 19);
    }
    long long v37 = v17 + 160;
    uint64_t v38 = v18 + 160;
    uint64_t v39 = *((void *)v18 + 23);
    if (v39)
    {
      uint64_t v40 = *((void *)v18 + 24);
      *((void *)v17 + 23) = v39;
      *((void *)v17 + 24) = v40;
      (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
    }
    else
    {
      long long v41 = *((_OWORD *)v18 + 11);
      _OWORD *v37 = *v38;
      *((_OWORD *)v17 + 11) = v41;
      *((void *)v17 + 24) = *((void *)v18 + 24);
    }
    uint64_t v42 = v17 + 200;
    uint64_t v43 = v18 + 200;
    uint64_t v44 = *((void *)v18 + 28);
    if (v44)
    {
      uint64_t v45 = *((void *)v18 + 29);
      *((void *)v17 + 28) = v44;
      *((void *)v17 + 29) = v45;
      (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
    }
    else
    {
      long long v46 = *(_OWORD *)(v18 + 216);
      *uint64_t v42 = *v43;
      *(_OWORD *)(v17 + 216) = v46;
      *((void *)v17 + 29) = *((void *)v18 + 29);
    }
    uint64_t v47 = v17 + 240;
    uint64_t v48 = v18 + 240;
    uint64_t v49 = *((void *)v18 + 33);
    if (v49)
    {
      uint64_t v50 = *((void *)v18 + 34);
      *((void *)v17 + 33) = v49;
      *((void *)v17 + 34) = v50;
      (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
    }
    else
    {
      long long v51 = *((_OWORD *)v18 + 16);
      *uint64_t v47 = *v48;
      *((_OWORD *)v17 + 16) = v51;
      *((void *)v17 + 34) = *((void *)v18 + 34);
    }
  }
  return a1;
}

uint64_t destroy for ListItemMetadataView(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    uint64_t result = swift_release();
  }
  uint64_t v7 = (void *)(a1 + *(int *)(a2 + 20));
  if (v7[3]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v7);
  }
  if (v7[8]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 5));
  }
  if (v7[13]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 10));
  }
  if (v7[18]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 15));
  }
  if (v7[23]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 20));
  }
  if (v7[28]) {
    uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 25));
  }
  if (v7[33])
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v7 + 30));
  }
  return result;
}

_WORD *initializeWithCopy for ListItemMetadataView(_WORD *a1, _WORD *a2, uint64_t a3)
{
  sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    _OWORD v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *((void *)v16 + 3);
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v17;
    *((void *)v15 + 4) = v18;
    (**(void (***)(char *, char *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((void *)v15 + 4) = *((void *)v16 + 4);
  }
  uint64_t v20 = v15 + 40;
  long long v21 = v16 + 40;
  uint64_t v22 = *((void *)v16 + 8);
  if (v22)
  {
    uint64_t v23 = *((void *)v16 + 9);
    *((void *)v15 + 8) = v22;
    *((void *)v15 + 9) = v23;
    (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
  }
  else
  {
    long long v24 = *(_OWORD *)(v16 + 56);
    _OWORD *v20 = *v21;
    *(_OWORD *)(v15 + 56) = v24;
    *((void *)v15 + 9) = *((void *)v16 + 9);
  }
  uint64_t v25 = v15 + 80;
  long long v26 = v16 + 80;
  uint64_t v27 = *((void *)v16 + 13);
  if (v27)
  {
    uint64_t v28 = *((void *)v16 + 14);
    *((void *)v15 + 13) = v27;
    *((void *)v15 + 14) = v28;
    (**(void (***)(_OWORD *, _OWORD *))(v27 - 8))(v25, v26);
  }
  else
  {
    long long v29 = *((_OWORD *)v16 + 6);
    *uint64_t v25 = *v26;
    *((_OWORD *)v15 + 6) = v29;
    *((void *)v15 + 14) = *((void *)v16 + 14);
  }
  uint64_t v30 = v15 + 120;
  long long v31 = v16 + 120;
  uint64_t v32 = *((void *)v16 + 18);
  if (v32)
  {
    uint64_t v33 = *((void *)v16 + 19);
    *((void *)v15 + 18) = v32;
    *((void *)v15 + 19) = v33;
    (**(void (***)(_OWORD *, _OWORD *))(v32 - 8))(v30, v31);
  }
  else
  {
    long long v34 = *(_OWORD *)(v16 + 136);
    *uint64_t v30 = *v31;
    *(_OWORD *)(v15 + 136) = v34;
    *((void *)v15 + 19) = *((void *)v16 + 19);
  }
  uint64_t v35 = v15 + 160;
  long long v36 = v16 + 160;
  uint64_t v37 = *((void *)v16 + 23);
  if (v37)
  {
    uint64_t v38 = *((void *)v16 + 24);
    *((void *)v15 + 23) = v37;
    *((void *)v15 + 24) = v38;
    (**(void (***)(_OWORD *, _OWORD *))(v37 - 8))(v35, v36);
  }
  else
  {
    long long v39 = *((_OWORD *)v16 + 11);
    *uint64_t v35 = *v36;
    *((_OWORD *)v15 + 11) = v39;
    *((void *)v15 + 24) = *((void *)v16 + 24);
  }
  uint64_t v40 = v15 + 200;
  long long v41 = v16 + 200;
  uint64_t v42 = *((void *)v16 + 28);
  if (v42)
  {
    uint64_t v43 = *((void *)v16 + 29);
    *((void *)v15 + 28) = v42;
    *((void *)v15 + 29) = v43;
    (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
  }
  else
  {
    long long v44 = *(_OWORD *)(v16 + 216);
    *uint64_t v40 = *v41;
    *(_OWORD *)(v15 + 216) = v44;
    *((void *)v15 + 29) = *((void *)v16 + 29);
  }
  uint64_t v45 = v15 + 240;
  long long v46 = v16 + 240;
  uint64_t v47 = *((void *)v16 + 33);
  if (v47)
  {
    uint64_t v48 = *((void *)v16 + 34);
    *((void *)v15 + 33) = v47;
    *((void *)v15 + 34) = v48;
    (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
  }
  else
  {
    long long v49 = *((_OWORD *)v16 + 16);
    _OWORD *v45 = *v46;
    *((_OWORD *)v15 + 16) = v49;
    *((void *)v15 + 34) = *((void *)v16 + 34);
  }
  return a1;
}

unsigned char *assignWithCopy for ListItemMetadataView(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1477A4((uint64_t)a1);
    sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      uint64_t v11 = v6[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      char v14 = v13[2];
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      _OWORD v12[2] = v14;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (uint64_t)&a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 3);
  if (*(void *)&a1[v15 + 24])
  {
    if (v18)
    {
      sub_16D58((uint64_t *)v16, (uint64_t *)v17);
      goto LABEL_13;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16);
  }
  else if (v18)
  {
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    (**(void (***)(uint64_t, unsigned char *))(v18 - 8))(v16, v17);
    goto LABEL_13;
  }
  long long v19 = *(_OWORD *)v17;
  long long v20 = *((_OWORD *)v17 + 1);
  *(void *)(v16 + 32) = *((void *)v17 + 4);
  *(_OWORD *)uint64_t v16 = v19;
  *(_OWORD *)(v16 + 16) = v20;
LABEL_13:
  uint64_t v21 = *((void *)v17 + 8);
  if (*(void *)(v16 + 64))
  {
    if (v21)
    {
      sub_16D58((uint64_t *)(v16 + 40), (uint64_t *)v17 + 5);
      goto LABEL_20;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 40);
  }
  else if (v21)
  {
    *(void *)(v16 + 64) = v21;
    *(void *)(v16 + 72) = *((void *)v17 + 9);
    (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v16 + 40, (uint64_t)(v17 + 40));
    goto LABEL_20;
  }
  long long v22 = *(_OWORD *)(v17 + 40);
  long long v23 = *(_OWORD *)(v17 + 56);
  *(void *)(v16 + 72) = *((void *)v17 + 9);
  *(_OWORD *)(v16 + 40) = v22;
  *(_OWORD *)(v16 + 56) = v23;
LABEL_20:
  uint64_t v24 = *((void *)v17 + 13);
  if (*(void *)(v16 + 104))
  {
    if (v24)
    {
      sub_16D58((uint64_t *)(v16 + 80), (uint64_t *)v17 + 10);
      goto LABEL_27;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 80);
  }
  else if (v24)
  {
    *(void *)(v16 + 104) = v24;
    *(void *)(v16 + 112) = *((void *)v17 + 14);
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v16 + 80, (uint64_t)(v17 + 80));
    goto LABEL_27;
  }
  long long v25 = *((_OWORD *)v17 + 5);
  long long v26 = *((_OWORD *)v17 + 6);
  *(void *)(v16 + 112) = *((void *)v17 + 14);
  *(_OWORD *)(v16 + 80) = v25;
  *(_OWORD *)(v16 + 96) = v26;
LABEL_27:
  uint64_t v27 = *((void *)v17 + 18);
  if (*(void *)(v16 + 144))
  {
    if (v27)
    {
      sub_16D58((uint64_t *)(v16 + 120), (uint64_t *)v17 + 15);
      goto LABEL_34;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 120);
  }
  else if (v27)
  {
    *(void *)(v16 + 144) = v27;
    *(void *)(v16 + 152) = *((void *)v17 + 19);
    (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v16 + 120, (uint64_t)(v17 + 120));
    goto LABEL_34;
  }
  long long v28 = *(_OWORD *)(v17 + 120);
  long long v29 = *(_OWORD *)(v17 + 136);
  *(void *)(v16 + 152) = *((void *)v17 + 19);
  *(_OWORD *)(v16 + 120) = v28;
  *(_OWORD *)(v16 + 136) = v29;
LABEL_34:
  uint64_t v30 = *((void *)v17 + 23);
  if (*(void *)(v16 + 184))
  {
    if (v30)
    {
      sub_16D58((uint64_t *)(v16 + 160), (uint64_t *)v17 + 20);
      goto LABEL_41;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 160);
  }
  else if (v30)
  {
    *(void *)(v16 + 184) = v30;
    *(void *)(v16 + 192) = *((void *)v17 + 24);
    (**(void (***)(uint64_t, uint64_t))(v30 - 8))(v16 + 160, (uint64_t)(v17 + 160));
    goto LABEL_41;
  }
  long long v31 = *((_OWORD *)v17 + 10);
  long long v32 = *((_OWORD *)v17 + 11);
  *(void *)(v16 + 192) = *((void *)v17 + 24);
  *(_OWORD *)(v16 + 160) = v31;
  *(_OWORD *)(v16 + 176) = v32;
LABEL_41:
  uint64_t v33 = *((void *)v17 + 28);
  if (*(void *)(v16 + 224))
  {
    if (v33)
    {
      sub_16D58((uint64_t *)(v16 + 200), (uint64_t *)v17 + 25);
      goto LABEL_48;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 200);
  }
  else if (v33)
  {
    *(void *)(v16 + 224) = v33;
    *(void *)(v16 + 232) = *((void *)v17 + 29);
    (**(void (***)(uint64_t, uint64_t))(v33 - 8))(v16 + 200, (uint64_t)(v17 + 200));
    goto LABEL_48;
  }
  long long v34 = *(_OWORD *)(v17 + 200);
  long long v35 = *(_OWORD *)(v17 + 216);
  *(void *)(v16 + 232) = *((void *)v17 + 29);
  *(_OWORD *)(v16 + 200) = v34;
  *(_OWORD *)(v16 + 216) = v35;
LABEL_48:
  uint64_t v36 = *((void *)v17 + 33);
  if (!*(void *)(v16 + 264))
  {
    if (v36)
    {
      *(void *)(v16 + 264) = v36;
      *(void *)(v16 + 272) = *((void *)v17 + 34);
      (**(void (***)(uint64_t, uint64_t))(v36 - 8))(v16 + 240, (uint64_t)(v17 + 240));
      return a1;
    }
LABEL_54:
    long long v37 = *((_OWORD *)v17 + 15);
    long long v38 = *((_OWORD *)v17 + 16);
    *(void *)(v16 + 272) = *((void *)v17 + 34);
    *(_OWORD *)(v16 + 240) = v37;
    *(_OWORD *)(v16 + 256) = v38;
    return a1;
  }
  if (!v36)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 240);
    goto LABEL_54;
  }
  sub_16D58((uint64_t *)(v16 + 240), (uint64_t *)v17 + 30);
  return a1;
}

uint64_t sub_1477A4(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EA978);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_WORD *initializeWithTake for ListItemMetadataView(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA978);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    uint64_t v12 = v7[8];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    void v13[2] = v14[2];
    *(_WORD *)uint64_t v13 = *(_WORD *)v14;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  memcpy((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), 0x118uLL);
  return a1;
}

_WORD *assignWithTake for ListItemMetadataView(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1477A4((uint64_t)a1);
    uint64_t v6 = sub_4A98(&qword_2EA978);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (char *)a1 + v12;
      char v14 = (char *)a2 + v12;
      void v13[2] = v14[2];
      *(_WORD *)uint64_t v13 = *(_WORD *)v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (*(void *)((char *)a1 + v15 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16);
  }
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *((void *)v17 + 4);
  if (*(void *)(v16 + 64)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 40);
  }
  long long v19 = *(_OWORD *)(v17 + 56);
  *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
  *(_OWORD *)(v16 + 56) = v19;
  *(void *)(v16 + 72) = *((void *)v17 + 9);
  if (*(void *)(v16 + 104)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 80);
  }
  long long v20 = *((_OWORD *)v17 + 6);
  *(_OWORD *)(v16 + 80) = *((_OWORD *)v17 + 5);
  *(_OWORD *)(v16 + 96) = v20;
  *(void *)(v16 + 112) = *((void *)v17 + 14);
  if (*(void *)(v16 + 144)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 120);
  }
  long long v21 = *(_OWORD *)(v17 + 136);
  *(_OWORD *)(v16 + 120) = *(_OWORD *)(v17 + 120);
  *(_OWORD *)(v16 + 136) = v21;
  *(void *)(v16 + 152) = *((void *)v17 + 19);
  if (*(void *)(v16 + 184)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 160);
  }
  long long v22 = *((_OWORD *)v17 + 11);
  *(_OWORD *)(v16 + 160) = *((_OWORD *)v17 + 10);
  *(_OWORD *)(v16 + 176) = v22;
  *(void *)(v16 + 192) = *((void *)v17 + 24);
  if (*(void *)(v16 + 224)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 200);
  }
  long long v23 = *(_OWORD *)(v17 + 216);
  *(_OWORD *)(v16 + 200) = *(_OWORD *)(v17 + 200);
  *(_OWORD *)(v16 + 216) = v23;
  *(void *)(v16 + 232) = *((void *)v17 + 29);
  if (*(void *)(v16 + 264)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v16 + 240);
  }
  long long v24 = *((_OWORD *)v17 + 16);
  *(_OWORD *)(v16 + 240) = *((_OWORD *)v17 + 15);
  *(_OWORD *)(v16 + 256) = v24;
  *(void *)(v16 + 272) = *((void *)v17 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_147B94);
}

uint64_t sub_147B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_147C7C);
}

uint64_t sub_147C7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB28);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
  return result;
}

void sub_147D40()
{
  sub_147DD4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_147DD4()
{
  if (!qword_2EABA8)
  {
    type metadata accessor for SizeConstants.Spacing(255);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EABA8);
    }
  }
}

unint64_t sub_147E30()
{
  unint64_t result = qword_2F16B0;
  if (!qword_2F16B0)
  {
    sub_7B0C(&qword_2F16B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F16B0);
  }
  return result;
}

uint64_t sub_147E8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t, uint64_t))
{
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return a3(v8, a1, a2);
}

BOOL LibraryAssetState.isOwned.getter()
{
  return *(unsigned __int8 *)(v0 + 16) < 2u;
}

BOOL LibraryAssetState.isPurchasing.getter()
{
  return *(unsigned char *)(v0 + 16) == 3;
}

uint64_t LibraryAssetState.isLocal.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1) {
    unsigned int v2 = 0;
  }
  else {
    unsigned int v2 = *(unsigned __int8 *)(v0 + 32);
  }
  if (*(unsigned char *)(v0 + 32) == 1 && v1 == 1) {
    return 1;
  }
  else {
    return v2;
  }
}

void LibraryAssetState.localState.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

void LibraryAssetState.playState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

double LibraryAssetState.readingProgress.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t LibraryAssetState.isInWantToRead.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t LibraryAssetState.isFinished.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t LibraryAssetState.hasSpecifiedFinishedDate.getter()
{
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t LibraryAssetState.downloadProgress.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t LibraryAssetState.isPurchased.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t LibraryAssetState.isDownloadable.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 3) {
    unsigned int v2 = *(unsigned __int8 *)(v0 + 32);
  }
  else {
    unsigned int v2 = 0;
  }
  if (*(unsigned char *)(v0 + 32) == 1 && v1 == 2) {
    return 1;
  }
  else {
    return v2;
  }
}

BOOL LibraryAssetState.isDownloading.getter()
{
  return (*(unsigned char *)(v0 + 32) & 1) == 0;
}

uint64_t LibraryAssetState.init(id:ownership:localState:playState:downloadProgress:readingProgress:isInSamples:isLocalSample:isInWantToRead:isFinished:hasSpecifiedFinishedDate:isPurchased:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, char a11, char a12, char a13, char a14, char a15)
{
  char v15 = *a3;
  uint64_t v16 = *a4;
  char v17 = *((unsigned char *)a4 + 8);
  char v18 = *a5;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v15;
  *(void *)(a9 + 24) = v16;
  *(unsigned char *)(a9 + 32) = v17;
  *(unsigned char *)(a9 + 33) = v18;
  *(double *)(a9 + 40) = a10;
  *(unsigned char *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 49) = a11;
  *(unsigned char *)(a9 + 50) = a12;
  *(unsigned char *)(a9 + 51) = a13;
  *(unsigned char *)(a9 + 52) = a14;
  *(void *)(a9 + 56) = a6;
  *(unsigned char *)(a9 + 64) = a7 & 1;
  *(unsigned char *)(a9 + 65) = a15;
  return result;
}

BOOL _s7BooksUI17LibraryAssetStateV05LocalE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    switch(*(void *)&v2)
    {
      case 1:
        if (*(void *)&v3 == 1) {
          char v9 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v9 = 0;
        }
        if ((v9 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (*(void *)&v3 == 2) {
          char v6 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v6 = 0;
        }
        if ((v6 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (*(void *)&v3 == 3) {
          char v7 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v7 = 0;
        }
        if ((v7 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (*(void *)&v3 > 3uLL) {
          char v8 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v8 = 0;
        }
        if ((v8 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3 == 0.0) {
          char v4 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == *(double *)a2;
  }
  return result;
}

uint64_t _s7BooksUI17LibraryAssetStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 33);
  double v6 = *(double *)(a1 + 40);
  int v7 = *(unsigned __int8 *)(a1 + 48);
  int v8 = *(unsigned __int8 *)(a1 + 49);
  int v9 = *(unsigned __int8 *)(a1 + 50);
  int v10 = *(unsigned __int8 *)(a1 + 51);
  int v11 = *(unsigned __int8 *)(a1 + 52);
  double v12 = *(double *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  int v14 = *(unsigned __int8 *)(a1 + 65);
  int v15 = *(unsigned __int8 *)(a2 + 16);
  double v16 = *(double *)(a2 + 24);
  int v17 = *(unsigned __int8 *)(a2 + 32);
  int v18 = *(unsigned __int8 *)(a2 + 33);
  double v19 = *(double *)(a2 + 40);
  int v20 = *(unsigned __int8 *)(a2 + 48);
  int v21 = *(unsigned __int8 *)(a2 + 49);
  int v22 = *(unsigned __int8 *)(a2 + 50);
  int v23 = *(unsigned __int8 *)(a2 + 51);
  int v24 = *(unsigned __int8 *)(a2 + 52);
  double v25 = *(double *)(a2 + 56);
  int v26 = *(unsigned __int8 *)(a2 + 64);
  int v27 = *(unsigned __int8 *)(a2 + 65);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v15) {
      return 0;
    }
  }
  else
  {
    int v44 = *(unsigned __int8 *)(a1 + 32);
    double v45 = *(double *)(a2 + 24);
    int v46 = *(unsigned __int8 *)(a2 + 32);
    double v47 = *(double *)(a1 + 24);
    int v48 = *(unsigned __int8 *)(a2 + 33);
    int v49 = *(unsigned __int8 *)(a2 + 48);
    int v50 = *(unsigned __int8 *)(a2 + 49);
    int v51 = *(unsigned __int8 *)(a1 + 33);
    int v52 = *(unsigned __int8 *)(a2 + 50);
    int v53 = *(unsigned __int8 *)(a2 + 51);
    int v54 = *(unsigned __int8 *)(a1 + 48);
    int v55 = *(unsigned __int8 *)(a2 + 52);
    int v29 = *(unsigned __int8 *)(a1 + 49);
    int v30 = *(unsigned __int8 *)(a1 + 50);
    int v31 = *(unsigned __int8 *)(a1 + 51);
    int v32 = *(unsigned __int8 *)(a2 + 64);
    int v33 = *(unsigned __int8 *)(a2 + 65);
    char v34 = *(unsigned char *)(a1 + 64);
    int v35 = *(unsigned __int8 *)(a1 + 65);
    char v36 = sub_26DDB0();
    uint64_t result = 0;
    if ((v36 & 1) == 0) {
      return result;
    }
    int v14 = v35;
    char v13 = v34;
    int v27 = v33;
    int v26 = v32;
    int v10 = v31;
    int v9 = v30;
    int v8 = v29;
    int v7 = v54;
    int v24 = v55;
    int v22 = v52;
    int v23 = v53;
    int v21 = v50;
    int v5 = v51;
    int v18 = v48;
    int v20 = v49;
    double v3 = v47;
    int v17 = v46;
    double v16 = v45;
    int v4 = v44;
    if (v2 != v15) {
      return result;
    }
  }
  if (v4)
  {
    switch(*(void *)&v3)
    {
      case 1:
        if (*(void *)&v16 == 1) {
          char v39 = v17;
        }
        else {
          char v39 = 0;
        }
        if ((v39 & 1) == 0) {
          return 0;
        }
        break;
      case 2:
        if (*(void *)&v16 == 2) {
          char v40 = v17;
        }
        else {
          char v40 = 0;
        }
        if ((v40 & 1) == 0) {
          return 0;
        }
        break;
      case 3:
        if (*(void *)&v16 == 3) {
          char v41 = v17;
        }
        else {
          char v41 = 0;
        }
        if ((v41 & 1) == 0) {
          return 0;
        }
        break;
      case 4:
        if (*(void *)&v16 > 3uLL) {
          int v42 = v17;
        }
        else {
          int v42 = 0;
        }
        if (v42 != 1) {
          return 0;
        }
        break;
      default:
        if (v16 == 0.0) {
          char v37 = v17;
        }
        else {
          char v37 = 0;
        }
        if ((v37 & 1) == 0) {
          return 0;
        }
        break;
    }
    uint64_t result = 0;
    if (v5 != v18) {
      return result;
    }
  }
  else
  {
    uint64_t result = 0;
    if (v3 == v16) {
      char v38 = v17;
    }
    else {
      char v38 = 1;
    }
    if ((v38 & 1) != 0 || v5 != v18) {
      return result;
    }
  }
  if (v6 == v19
    && ((v7 ^ v20) & 1) == 0
    && ((v8 ^ v21) & 1) == 0
    && ((v9 ^ v22) & 1) == 0
    && ((v10 ^ v23) & 1) == 0
    && ((v11 ^ v24) & 1) == 0)
  {
    if (v13)
    {
      if (!v26) {
        return 0;
      }
    }
    else
    {
      if (v12 == v25) {
        char v43 = v26;
      }
      else {
        char v43 = 1;
      }
      if (v43) {
        return 0;
      }
    }
    return v14 ^ v27 ^ 1u;
  }
  return result;
}

unint64_t sub_148408()
{
  unint64_t result = qword_2F16C0;
  if (!qword_2F16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F16C0);
  }
  return result;
}

unint64_t sub_148460()
{
  unint64_t result = qword_2F16C8;
  if (!qword_2F16C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F16C8);
  }
  return result;
}

uint64_t initializeWithCopy for LibraryAssetState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryAssetState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

__n128 initializeWithTake for ListItemThumbnailStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for LibraryAssetState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryAssetState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 66)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryAssetState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 66) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAssetState()
{
  return &type metadata for LibraryAssetState;
}

unsigned char *storeEnumTagSinglePayload for LibraryAssetState.Ownership(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x148818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAssetState.Ownership()
{
  return &type metadata for LibraryAssetState.Ownership;
}

uint64_t getEnumTagSinglePayload for LibraryAssetState.LocalState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LibraryAssetState.LocalState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1488A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1488BC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAssetState.LocalState()
{
  return &type metadata for LibraryAssetState.LocalState;
}

unsigned char *storeEnumTagSinglePayload for LibraryAssetState.PlayState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1489B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAssetState.PlayState()
{
  return &type metadata for LibraryAssetState.PlayState;
}

uint64_t UIKitActionButton.init(type:action:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_269BA0();
  __chkstk_darwin(v6 - 8);
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 40) = 0;
  int v7 = (int *)type metadata accessor for UIKitActionButton(0);
  int v8 = (uint64_t *)(a3 + v7[5]);
  *int v8 = swift_getKeyPath();
  sub_4A98(&qword_2EBC98);
  swift_storeEnumTagMultiPayload();
  sub_269B80();
  sub_269AB0();
  uint64_t v9 = a3 + v7[7];
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(unsigned char *)(v9 + 8) = 0;
  int v10 = (uint64_t *)(a3 + v7[8]);
  *int v10 = swift_getKeyPath();
  sub_4A98(&qword_2EA810);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3 + v7[9];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 40) = 0;
  *(void *)(a3 + v7[10]) = a1;
  return sub_AD44(a2, a3 + v7[11]);
}

uint64_t type metadata accessor for UIKitActionButton(uint64_t a1)
{
  return sub_2A148(a1, qword_2F1730);
}

id UIKitActionButton.makeUIView(context:)()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for UIKitActionButton(0) + 40));
  id v2 = [self buttonWithType:v1];
  sub_4A98(&qword_2F16D0);
  sub_26B630();
  [v2 addTarget:v4 action:"perform" forControlEvents:0x2000];
  swift_release();
  return v2;
}

uint64_t UIKitActionButton.updateUIView(_:context:)(uint64_t a1, uint64_t a2)
{
  return sub_149318(a2);
}

uint64_t UIKitActionButton.makeCoordinator()()
{
  uint64_t v1 = sub_26A2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for UIKitActionButton(0);
  sub_C224(v0 + *(int *)(v5 + 44), (uint64_t)v10);
  sub_42020((uint64_t)v9);
  sub_41FE8((uint64_t)v4);
  type metadata accessor for UIKitActionButton.Coordinator(0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 72) = 0u;
  *(void *)(v6 + 88) = 0;
  *(_OWORD *)(v6 + 56) = 0u;
  sub_AD44(v10, v6 + 16);
  swift_beginAccess();
  sub_1499A0((uint64_t)v9, v6 + 56);
  swift_endAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32))(v6 + OBJC_IVAR____TtCV7BooksUI17UIKitActionButton11Coordinator_metricsFieldsContext, v4, v1);
  return v6;
}

uint64_t sub_148DAC()
{
  uint64_t v1 = sub_26A2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 46;
  swift_beginAccess();
  sub_14AFF4(v0 + 56, (uint64_t)v10);
  if (!v11) {
    return sub_B6DC((uint64_t)v10, &qword_2EBCA8);
  }
  sub_C224((uint64_t)v10, (uint64_t)v9);
  sub_B6DC((uint64_t)v10, &qword_2EBCA8);
  sub_4ADC(v9, v9[3]);
  swift_beginAccess();
  sub_C224(v0 + 16, (uint64_t)v8);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV7BooksUI17UIKitActionButton11Coordinator_metricsFieldsContext;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  sub_26A180();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v8);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v9);
}

uint64_t UIKitActionButton.Coordinator.deinit()
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);
  sub_B6DC(v0 + 56, &qword_2EBCA8);
  uint64_t v1 = v0 + OBJC_IVAR____TtCV7BooksUI17UIKitActionButton11Coordinator_metricsFieldsContext;
  uint64_t v2 = sub_26A2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t UIKitActionButton.Coordinator.__deallocating_deinit()
{
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 16);
  sub_B6DC(v0 + 56, &qword_2EBCA8);
  uint64_t v1 = v0 + OBJC_IVAR____TtCV7BooksUI17UIKitActionButton11Coordinator_metricsFieldsContext;
  uint64_t v2 = sub_26A2C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_1490EC(uint64_t a1, uint64_t a2)
{
  id v3 = [self buttonWithType:*(void *)(v2 + *(int *)(a2 + 40))];
  sub_4A98(&qword_2F16D0);
  sub_26B630();
  [v3 addTarget:v5 action:"perform" forControlEvents:0x2000];
  swift_release();
  return v3;
}

uint64_t sub_149194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UIKitActionButton.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t sub_1491BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14B05C(qword_2F1890);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_14923C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14B05C(qword_2F1890);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1492BC()
{
}

uint64_t sub_149318(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v43 = sub_26A2C0();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v41 = (uint64_t)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_269D00();
  uint64_t v39 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_269CE0();
  uint64_t v10 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  double v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UIKitActionButton(0);
  uint64_t v14 = v1 + *(int *)(v13 + 44);
  sub_C224(v14, (uint64_t)v50);
  sub_4A98(&qword_2EA840);
  sub_4A98(&qword_2EA848);
  char v15 = swift_dynamicCast();
  uint64_t v42 = v2;
  if (v15)
  {
    char v36 = v6;
    char v38 = v12;
    uint64_t v37 = v4;
    sub_AD44(&v47, (uint64_t)&v51);
    uint64_t v16 = v52;
    uint64_t v17 = v53;
    sub_4ADC(&v51, v52);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    uint64_t v18 = v40;
    uint64_t v19 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v40) != 1)
    {
      uint64_t v21 = v10;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v38, v9, v18);
      sub_4A98(&qword_2F16D0);
      sub_26B630();
      uint64_t v35 = v46;
      v34[1] = sub_4ADC(&v51, v52);
      uint64_t v22 = v1 + *(int *)(v19 + 28);
      id v23 = *(id *)v22;
      char v24 = *(unsigned char *)(v22 + 8);
      sub_1D00C(*(id *)v22, v24);
      double v25 = (void *)sub_40B04(v23, v24);
      sub_1D1EC(v23, v24);
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      uint64_t v26 = (uint64_t)v36;
      sub_40D18((uint64_t)v36);
      sub_40D50((uint64_t)v45);
      sub_269A90();
      int v27 = v38;
      sub_26C900();
      swift_bridgeObjectRelease();

      sub_B6DC((uint64_t)v45, &qword_2EA850);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v26, v37);
      sub_B6DC((uint64_t)&v47, &qword_2EA528);
      uint64_t v28 = v35;
      swift_beginAccess();
      _s7BooksUI13AnyPagedFrameVwxx_0(v28 + 16);
      sub_AD44(v50, v28 + 16);
      swift_endAccess();
      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v18);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v51);
      goto LABEL_7;
    }
    sub_B6DC((uint64_t)v9, &qword_2EA820);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v51);
  }
  else
  {
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
    sub_B6DC((uint64_t)&v47, &qword_2EA838);
  }
  sub_4A98(&qword_2F16D0);
  sub_26B630();
  uint64_t v20 = v47;
  sub_C224(v14, (uint64_t)&v51);
  swift_beginAccess();
  _s7BooksUI13AnyPagedFrameVwxx_0(v20 + 16);
  sub_AD44(&v51, v20 + 16);
  swift_endAccess();
  swift_release();
LABEL_7:
  sub_4A98(&qword_2F16D0);
  sub_26B630();
  uint64_t v29 = v47;
  sub_42020((uint64_t)&v51);
  swift_beginAccess();
  sub_1499A0((uint64_t)&v51, v29 + 56);
  swift_endAccess();
  swift_release();
  sub_26B630();
  uint64_t v30 = *(void *)&v50[0];
  uint64_t v31 = v41;
  sub_41FE8(v41);
  uint64_t v32 = v30 + OBJC_IVAR____TtCV7BooksUI17UIKitActionButton11Coordinator_metricsFieldsContext;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40))(v32, v31, v43);
  swift_endAccess();
  return swift_release();
}

uint64_t type metadata accessor for UIKitActionButton.Coordinator(uint64_t a1)
{
  return sub_2A148(a1, qword_2F17A8);
}

uint64_t sub_1499A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_149A08()
{
  return sub_14B05C(&qword_2F0168);
}

uint64_t initializeBufferWithCopyOfBuffer for UIKitActionButton(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (a2[5])
    {
      uint64_t v7 = a2[3];
      if (v7)
      {
        uint64_t v8 = a2[4];
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = a2[4];
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v11 = a3[5];
    double v12 = (void *)(v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *double v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_269AA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[7];
    uint64_t v20 = v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    id v22 = *(id *)v21;
    LOBYTE(v17) = *(unsigned char *)(v21 + 8);
    sub_1D00C(*(id *)v21, v17);
    *(void *)uint64_t v20 = v22;
    *(unsigned char *)(v20 + 8) = v17;
    uint64_t v23 = a3[8];
    char v24 = (void *)(v4 + v23);
    double v25 = (uint64_t *)((char *)a2 + v23);
    sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_269D00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      void *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[9];
    uint64_t v28 = v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    if (*((unsigned char *)a2 + v27 + 40))
    {
      uint64_t v30 = *(void *)(v29 + 24);
      if (v30)
      {
        uint64_t v31 = *(void *)(v29 + 32);
        *(void *)(v28 + 24) = v30;
        *(void *)(v28 + 32) = v31;
        (**(void (***)(uint64_t))(v30 - 8))(v28);
      }
      else
      {
        long long v32 = *(_OWORD *)(v29 + 16);
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
        *(_OWORD *)(v28 + 16) = v32;
        *(void *)(v28 + 32) = *(void *)(v29 + 32);
      }
      *(unsigned char *)(v28 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 40) = 0;
      swift_retain();
    }
    uint64_t v33 = a3[11];
    *(void *)(v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    long long v34 = *(_OWORD *)((char *)a2 + v33 + 24);
    *(_OWORD *)(v4 + v33 + 24) = v34;
    (**(void (***)(void))(v34 - 8))();
  }
  return v4;
}

uint64_t destroy for UIKitActionButton(uint64_t a1, int *a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1D1EC(*(id *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v8 = a1 + a2[8];
  sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_269D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[9];
  if (*(unsigned char *)(v10 + 40))
  {
    if (*(void *)(v10 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v10);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[11];

  return _s7BooksUI13AnyPagedFrameVwxx_0(v11);
}

uint64_t initializeWithCopy for UIKitActionButton(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A2C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  id v20 = *(id *)v19;
  LOBYTE(v15) = *(unsigned char *)(v19 + 8);
  sub_1D00C(*(id *)v19, v15);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v15;
  uint64_t v21 = a3[8];
  id v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_269D00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *id v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  if (*(unsigned char *)(a2 + v25 + 40))
  {
    uint64_t v28 = *(void *)(v27 + 24);
    if (v28)
    {
      uint64_t v29 = *(void *)(v27 + 32);
      *(void *)(v26 + 24) = v28;
      *(void *)(v26 + 32) = v29;
      (**(void (***)(uint64_t))(v28 - 8))(v26);
    }
    else
    {
      long long v30 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v30;
      *(void *)(v26 + 32) = *(void *)(v27 + 32);
    }
    *(unsigned char *)(v26 + 40) = 1;
  }
  else
  {
    *(void *)uint64_t v26 = *(void *)v27;
    *(unsigned char *)(v26 + 40) = 0;
    swift_retain();
  }
  uint64_t v31 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  long long v32 = *(_OWORD *)(a2 + v31 + 24);
  *(_OWORD *)(a1 + v31 + 24) = v32;
  (**(void (***)(void))(v32 - 8))();
  return a1;
}

uint64_t assignWithCopy for UIKitActionButton(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    sub_B6DC(a1, &qword_2EBCA0);
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_B6DC(a1 + v9, &qword_2EBC98);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = sub_269AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  id v20 = *(id *)v19;
  LOBYTE(v15) = *(unsigned char *)(v19 + 8);
  sub_1D00C(*(id *)v19, v15);
  uint64_t v21 = *(void **)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v15;
  sub_1D1EC(v21, v22);
  if ((long long *)a1 != a2)
  {
    uint64_t v23 = a3[8];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    sub_B6DC(a1 + v23, &qword_2EA810);
    sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_269D00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      void *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[9];
    uint64_t v28 = a1 + v27;
    uint64_t v29 = (long long *)((char *)a2 + v27);
    sub_B6DC(a1 + v27, &qword_2EA858);
    if (*((unsigned char *)v29 + 40))
    {
      uint64_t v30 = *((void *)v29 + 3);
      if (v30)
      {
        *(void *)(v28 + 24) = v30;
        *(void *)(v28 + 32) = *((void *)v29 + 4);
        (**(void (***)(uint64_t, long long *))(v30 - 8))(v28, v29);
      }
      else
      {
        long long v31 = *v29;
        long long v32 = v29[1];
        *(void *)(v28 + 32) = *((void *)v29 + 4);
        *(_OWORD *)uint64_t v28 = v31;
        *(_OWORD *)(v28 + 16) = v32;
      }
      *(unsigned char *)(v28 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 40) = 0;
      swift_retain();
    }
  }
  *(void *)(a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  sub_16D58((uint64_t *)(a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]));
  return a1;
}

_OWORD *initializeWithTake for UIKitActionButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v7 = a3[5];
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_269AA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  id v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  uint64_t v22 = sub_4A98(&qword_2EA810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_269D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  long long v26 = *(_OWORD *)((char *)a2 + v24);
  long long v27 = *(_OWORD *)((char *)a2 + v24 + 16);
  long long v28 = *(_OWORD *)((char *)a2 + v24 + 25);
  uint64_t v29 = (_OWORD *)((char *)a1 + v24);
  *uint64_t v29 = v26;
  v29[1] = v27;
  *(_OWORD *)((char *)v29 + 25) = v28;
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v30 = a3[11];
  long long v31 = (char *)a1 + v30;
  long long v32 = (char *)a2 + v30;
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)long long v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  *((void *)v31 + 4) = *((void *)v32 + 4);
  return a1;
}

_OWORD *assignWithTake for UIKitActionButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EBCA0);
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    uint64_t v7 = a3[5];
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC98);
    uint64_t v10 = sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_26A2C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_269AA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = v18[8];
  id v20 = *(void **)v17;
  char v21 = v17[8];
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)v18;
  sub_1D1EC(v20, v21);
  if (a1 != a2)
  {
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    sub_B6DC((uint64_t)a1 + v22, &qword_2EA810);
    uint64_t v25 = sub_4A98(&qword_2EA810);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_269D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    uint64_t v27 = a3[9];
    long long v28 = (_OWORD *)((char *)a2 + v27);
    uint64_t v29 = (_OWORD *)((char *)a1 + v27);
    sub_B6DC((uint64_t)a1 + v27, &qword_2EA858);
    long long v30 = v28[1];
    *uint64_t v29 = *v28;
    v29[1] = v30;
    *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v28 + 25);
  }
  uint64_t v31 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  long long v32 = (char *)a1 + v31;
  long long v33 = (char *)a2 + v31;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1 + v31);
  long long v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)long long v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  *((void *)v32 + 4) = *((void *)v33 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIKitActionButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14AA94);
}

uint64_t sub_14AA94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_269AA0();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_7;
  }
  uint64_t v11 = sub_4A98(qword_2EA860);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(a1 + a3[11] + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for UIKitActionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14AC10);
}

uint64_t sub_14AC10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t v12 = sub_269AA0();
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[6];
    }
    else
    {
      uint64_t result = sub_4A98(qword_2EA860);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[11] + 24) = (a2 - 1);
        return result;
      }
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result - 8);
      uint64_t v11 = a4[8];
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v14(a1 + v11, a2, a2, v9);
}

void sub_14AD74()
{
  sub_14AEDC(319, (unint64_t *)&qword_2EDA90, (void (*)(uint64_t))&type metadata accessor for OpaqueMetricsFieldsContext);
  if (v0 <= 0x3F)
  {
    sub_269AA0();
    if (v1 <= 0x3F)
    {
      sub_14AEDC(319, &qword_2EA8E8, (void (*)(uint64_t))&type metadata accessor for DataStack);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_14AEDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_14AF30()
{
  return type metadata accessor for UIKitActionButton.Coordinator(0);
}

uint64_t sub_14AF38()
{
  uint64_t result = sub_26A2C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UIKitActionButton.Coordinator(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for UIKitActionButton.Coordinator);
}

uint64_t sub_14AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14B05C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UIKitActionButton(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_14B0A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_2B86C(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_C224(v4, (uint64_t)v8);
      uint64_t v9 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_2B86C(v5 > 1, v6 + 1, 1);
        unint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_AD44(v8, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t _CodeAnyActionModel_Many.description.getter()
{
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EA840);
  uint64_t v0 = sub_26D620();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _CodeAnyActionModel_Many.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v8);
  sub_3FBD4();
  uint64_t v5 = sub_26D690();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  uint64_t v7 = sub_14B0A0(v5);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t _CodeAnyActionModel_Many.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v7);
  sub_3FBD4();
  uint64_t v4 = sub_26D670();
  uint64_t v5 = sub_14B0A0(v4);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

ValueMetadata *type metadata accessor for _CodeAnyActionModel_Many()
{
  return &type metadata for _CodeAnyActionModel_Many;
}

uint64_t sub_14B318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a4);
  return sub_26A6B0();
}

uint64_t AssetCover.init(aspectRatio:url:effect:placeholderColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *a5 = a6;
  a5[1] = a7;
  uint64_t v12 = (int *)type metadata accessor for AssetCover();
  uint64_t v13 = (char *)a5 + v12[9];
  uint64_t v14 = sub_2696C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a1, v14);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))((char *)a5 + v12[10], a2, a4);
  *(void *)((char *)a5 + v12[11]) = a3;
  return result;
}

uint64_t type metadata accessor for AssetCover()
{
  return sub_129B4();
}

uint64_t AssetCover.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v67 = *(void *)(v4 + 64);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v68 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v50 - v7;
  uint64_t v8 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = a1;
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v63 = v11;
  type metadata accessor for _CoverEffectViewModifier();
  uint64_t v13 = sub_26ABD0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v77 = AssociatedTypeWitness;
  uint64_t v78 = &type metadata for Color;
  uint64_t v79 = v15;
  unint64_t v80 = &protocol witness table for Color;
  uint64_t v16 = sub_26A6C0();
  uint64_t v64 = v13;
  uint64_t v61 = v16;
  sub_26B300();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v75 = &protocol witness table for Image;
  uint64_t v76 = WitnessTable;
  id v66 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v58 = v18;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v73 = v18;
  uint64_t v74 = v56;
  swift_getWitnessTable();
  uint64_t v54 = sub_26A620();
  uint64_t v59 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v50 - v19;
  uint64_t v57 = sub_26ABD0();
  uint64_t v60 = *(void *)(v57 - 8);
  uint64_t v20 = __chkstk_darwin(v57);
  uint64_t v52 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v55 = (char *)&v50 - v22;
  uint64_t v23 = v12;
  uint64_t v24 = *(int *)(v12 + 36);
  uint64_t v70 = v2;
  uint64_t v25 = v2 + v24;
  uint64_t v26 = sub_2696C0();
  uint64_t v27 = *(void *)(v26 - 8);
  long long v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  long long v51 = v10;
  v28(v10, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v10, 0, 1, v26);
  uint64_t v29 = v4;
  int v50 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  long long v30 = v65;
  v50(v65, v2, v23);
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (v31 + 32) & ~v31;
  uint64_t v67 = v31 | 7;
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v62;
  uint64_t v35 = v63;
  *(void *)(v33 + 16) = v62;
  *(void *)(v33 + 24) = v35;
  char v36 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  uint64_t v37 = v30;
  uint64_t v38 = v23;
  v36(v33 + v32, v37, v23);
  uint64_t v39 = v68;
  v50(v68, v70, v38);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v34;
  *(void *)(v40 + 24) = v35;
  v36(v40 + v32, v39, v38);
  uint64_t v41 = v53;
  sub_14C384((uint64_t)v51, (uint64_t)sub_14BE54, v33, (uint64_t)sub_14C2F8, v40, v64, v61, v58, v53, v56);
  uint64_t v42 = v54;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v52;
  sub_26BC60();
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v41, v42);
  uint64_t v71 = v43;
  uint64_t v72 = &protocol witness table for _AspectRatioLayout;
  uint64_t v45 = v57;
  uint64_t v46 = swift_getWitnessTable();
  long long v47 = v55;
  sub_CCCC(v44, v45, v46);
  long long v48 = *(void (**)(char *, uint64_t))(v60 + 8);
  v48(v44, v45);
  sub_CCCC(v47, v45, v46);
  return ((uint64_t (*)(char *, uint64_t))v48)(v47, v45);
}

uint64_t sub_14BC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _CoverEffectViewModifier();
  uint64_t v7 = sub_26ABD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v14 = type metadata accessor for AssetCover();
  Image.coverEffect<A>(_:)(a2 + *(int *)(v14 + 40), a3, a4, (uint64_t)v11);
  uint64_t WitnessTable = swift_getWitnessTable();
  v19[0] = &protocol witness table for Image;
  v19[1] = WitnessTable;
  uint64_t v16 = swift_getWitnessTable();
  sub_CCCC(v11, v7, v16);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  sub_CCCC(v13, v7, v16);
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
}

uint64_t sub_14BE54(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for AssetCover() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_14BC74(a1, v6, v3, v4);
}

uint64_t sub_14BEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  v24[0] = AssociatedTypeWitness;
  v24[1] = &type metadata for Color;
  v24[2] = v20;
  _OWORD v24[3] = &protocol witness table for Color;
  uint64_t v10 = sub_26A6C0();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v16 = type metadata accessor for AssetCover();
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  v24[0] = *(void *)(a1 + *(int *)(v16 + 44));
  sub_14B318((uint64_t)v24, 256, AssociatedTypeWitness, (uint64_t)&type metadata for Color);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, AssociatedTypeWitness);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v13, v10, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v21 + 8);
  v18(v13, v10);
  sub_CCCC(v15, v10, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v10);
}

uint64_t sub_14C1BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for AssetCover();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = v0 + ((v4 + 32) & ~v4);
  uint64_t v6 = v5 + *(int *)(v2 + 36);
  uint64_t v7 = sub_2696C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + *(int *)(v3 + 48), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_14C2F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for AssetCover() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_14BEF0(v6, v3, v4, a1);
}

uint64_t sub_14C384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  v22[0] = a5;
  v22[1] = a9;
  uint64_t v17 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v17 - 8);
  sub_14D464(a1, (uint64_t)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a6;
  void v19[3] = a7;
  v19[4] = a8;
  v19[5] = a10;
  v19[6] = a2;
  v19[7] = a3;
  uint64_t v20 = v22[0];
  unsigned char v19[8] = a4;
  v19[9] = v20;
  sub_26B300();
  _OWORD v22[2] = a8;
  v22[3] = a10;
  swift_getWitnessTable();
  sub_26A610();
  return sub_15110(a1);
}

uint64_t sub_14C4EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_14C534()
{
  uint64_t result = sub_2696C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_14C618(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64) + 7;
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v13 + ((v9 + ((v8 + 16) & ~v8) + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
  }
  else
  {
    uint64_t v17 = ~v8;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v18 = (char *)a1 + v8;
    uint64_t v19 = (char *)a2 + v8;
    uint64_t v20 = (unint64_t)(v18 + 16) & v17;
    uint64_t v21 = (unint64_t)(v19 + 16) & v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v20, v21, v6);
    uint64_t v22 = (v20 + v9 + v12) & ~v12;
    uint64_t v23 = (v21 + v9 + v12) & ~v12;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v22, v23, v10);
    *(void *)((v13 + v22) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + v23) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_14C7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2696C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((v7
                                                                                            + *(void *)(v6 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));

  return swift_release();
}

_OWORD *sub_14C8D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v17, v18);
  *(void *)((*(void *)(v14 + 48) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 48)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void *sub_14C9E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v10, v11, v6);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  *(void *)((*(void *)(v14 + 40) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 40)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_14CB04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  *(void *)((*(void *)(v14 + 32) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 32)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_14CC0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v10, v11, v6);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(void *)((*(void *)(v14 + 24) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 24)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_14CD1C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_2696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v14 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)(v9 + 64) + 7;
  if (v14 < a2)
  {
    unint64_t v17 = ((v16 + ((v12 + ((v11 + 16) & ~v11) + v13) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 & 0xFFFFFFF8) != 0) {
      unsigned int v18 = 2;
    }
    else {
      unsigned int v18 = a2 - v14 + 1;
    }
    if (v18 >= 0x10000) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v18 < 0x100) {
      unsigned int v19 = 1;
    }
    if (v18 >= 2) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v17);
        if (!*((unsigned char *)a1 + v17)) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v17);
        if (*(_WORD *)((char *)a1 + v17)) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x14CF84);
      case 4:
        int v21 = *(_DWORD *)((char *)a1 + v17);
        if (!v21) {
          break;
        }
LABEL_24:
        int v23 = v21 - 1;
        if ((v17 & 0xFFFFFFF8) != 0)
        {
          int v23 = 0;
          int v24 = *a1;
        }
        else
        {
          int v24 = 0;
        }
        return v14 + (v24 | v23) + 1;
      default:
        break;
    }
  }
  uint64_t v25 = ((unint64_t)a1 + v11 + 16) & ~v11;
  if (v8 == v14)
  {
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v26(v25, v8, v15);
  }
  else
  {
    uint64_t v27 = (v25 + v12 + v13) & ~v13;
    if (v10 == v14)
    {
      long long v28 = *(uint64_t (**)(uint64_t))(v9 + 48);
      return v28(v27);
    }
    else
    {
      unint64_t v29 = *(void *)((v16 + v27) & 0xFFFFFFFFFFFFFFF8);
      if (v29 >= 0xFFFFFFFF) {
        LODWORD(v29) = -1;
      }
      return (v29 + 1);
    }
  }
}

void sub_14CF98(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_2696C0() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v9) {
    unsigned int v15 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  uint64_t v16 = *(void *)(v10 + 64) + 7;
  unint64_t v17 = ((v16 + ((v13 + ((v12 + 16) & ~v12) + v14) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 >= a3)
  {
    int v20 = 0;
    int v21 = a2 - v15;
    if (a2 <= v15)
    {
LABEL_19:
      switch(v20)
      {
        case 1:
          *((unsigned char *)a1 + v17) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v17) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v17) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            uint64_t v24 = ((unint64_t)a1 + v12 + 16) & ~v12;
            if (v9 == v15)
            {
              uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v8 + 56);
              v25(v24, a2);
            }
            else
            {
              uint64_t v26 = (v24 + v13 + v14) & ~v14;
              if (v11 == v15)
              {
                uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 56);
                v27(v26, a2, v11);
              }
              else
              {
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v28 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v28 = (a2 - 1);
                }
                *(void *)((v16 + v26) & 0xFFFFFFFFFFFFFFF8) = v28;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v16 + ((v13 + ((v12 + 16) & ~v12) + v14) & ~v14)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v18 = a3 - v15 + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
    int v21 = a2 - v15;
    if (a2 <= v15) {
      goto LABEL_19;
    }
  }
  if (((v16 + ((v13 + ((v12 + 16) & ~v12) + v14) & ~v14)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v22 = v21;
  }
  else {
    int v22 = 1;
  }
  if (((v16 + ((v13 + ((v12 + 16) & ~v12) + v14) & ~v14)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v23 = ~v15 + a2;
    bzero(a1, ((v16 + ((v13 + ((v12 + 16) & ~v12) + v14) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v23;
  }
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v17) = v22;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v17) = v22;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x14D260);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = v22;
      break;
    default:
      return;
  }
}

uint64_t sub_14D288()
{
  return swift_getWitnessTable();
}

uint64_t sub_14D464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F46A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14D4CC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, void (*a4)(void, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v46 = a8;
  uint64_t v47 = a9;
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v43 = *(void *)(a6 - 8);
  uint64_t v45 = a10;
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v38 - v16;
  uint64_t v40 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v15);
  int v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v23 = (char *)&v38 - v22;
  uint64_t v24 = sub_26B300();
  uint64_t v44 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v38 - v25;
  uint64_t v27 = sub_26AA90();
  if (v27)
  {
    v42(v27, v28);
    uint64_t v29 = v46;
    sub_CCCC(v14, a6, v46);
    uint64_t v42 = (void (*)(uint64_t, uint64_t))v24;
    long long v30 = *(void (**)(char *, uint64_t))(v43 + 8);
    v30(v14, a6);
    sub_CCCC(v17, a6, v29);
    uint64_t v31 = v45;
    sub_1B894((uint64_t)v14, a6);
    swift_release();
    v30(v14, a6);
    v30(v17, a6);
    uint64_t v24 = (uint64_t)v42;
  }
  else
  {
    v39(0, v28);
    uint64_t v32 = v45;
    sub_CCCC(v21, a7, v45);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
    v33(v21, a7);
    sub_CCCC(v23, a7, v32);
    uint64_t v34 = v46;
    sub_1B98C((uint64_t)v21, a6, a7);
    v33(v21, a7);
    uint64_t v35 = v23;
    uint64_t v31 = v32;
    v33(v35, a7);
    uint64_t v29 = v34;
  }
  uint64_t v48 = v29;
  uint64_t v49 = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_CCCC(v26, v24, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v26, v24);
}

uint64_t sub_14D880()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_14D8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14D4CC(a1, *(void (**)(uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void (**)(void, uint64_t))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2, *(void *)(v2 + 40));
}

id static NSBundle.BooksUI.getter()
{
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = [self bundleForClass:ObjCClassFromMetadata];

  return v1;
}

uint64_t sub_14D950()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_errorRetain();
  return v1;
}

uint64_t Error.withSubsequentAction(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C224(v8, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v4, a2);
  uint64_t v11 = sub_26DD60();
  if (v11)
  {
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a2);
  }
  else
  {
    uint64_t v12 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13, v10, a2);
  }
  uint64_t result = sub_AD44(v16, a3);
  *(void *)(a3 + 40) = v12;
  return result;
}

uint64_t dispatch thunk of SubsequentActionError.action.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SubsequentActionError.underlyingError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unint64_t sub_14DAF8()
{
  unint64_t result = qword_2F1918;
  if (!qword_2F1918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1918);
  }
  return result;
}

uint64_t destroy for WrappedErrorWithAction(uint64_t a1)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);

  return swift_errorRelease();
}

uint64_t initializeWithCopy for WrappedErrorWithAction(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 40);
  swift_errorRetain();
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t *assignWithCopy for WrappedErrorWithAction(uint64_t *a1, uint64_t *a2)
{
  sub_16D58(a1, a2);
  uint64_t v4 = a2[5];
  swift_errorRetain();
  a1[5] = v4;
  swift_errorRelease();
  return a1;
}

uint64_t assignWithTake for WrappedErrorWithAction(uint64_t a1, uint64_t a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WrappedErrorWithAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WrappedErrorWithAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WrappedErrorWithAction()
{
  return &type metadata for WrappedErrorWithAction;
}

unint64_t sub_14DD1C(uint64_t a1)
{
  unint64_t result = sub_14DD44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_14DD44()
{
  unint64_t result = qword_2F1920;
  if (!qword_2F1920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1920);
  }
  return result;
}

uint64_t YearInReviewLoadingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ToolbarButtonStyle();
  uint64_t v4 = __chkstk_darwin(v55);
  uint64_t v53 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v54 = (uint64_t)&v44 - v6;
  uint64_t v45 = sub_4A98(&qword_2F1928);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_4A98(&qword_2F1930);
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_4A98(&qword_2F1938);
  __chkstk_darwin(v46);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_4A98(&qword_2F1940);
  __chkstk_darwin(v49);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F1948);
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  __chkstk_darwin(v16);
  int v50 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_4A98(&qword_2F1950);
  __chkstk_darwin(v47);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_26B1C0();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  sub_4A98(&qword_2F1958);
  sub_26A800();
  unsigned __int8 v20 = sub_26B720();
  char v21 = sub_26B740();
  sub_26B730();
  sub_26B730();
  if (sub_26B730() != v20) {
    sub_26B730();
  }
  sub_26B730();
  char v22 = sub_26B730();
  uint64_t v59 = a1;
  if (v22 != v21) {
    sub_26B730();
  }
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_7C18(&qword_2F1960, &qword_2F1928);
  sub_26BF20();
  sub_B6DC((uint64_t)v8, &qword_2F1928);
  uint64_t v23 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v25 = v24;
  uint64_t v26 = Color.init(hexString:)(0x363234333230, 0xE600000000000000);
  if (!v26) {
    uint64_t v26 = sub_26C180();
  }
  uint64_t v27 = v26;
  char v28 = sub_26B760();
  uint64_t v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v48);
  long long v30 = &v13[*(int *)(v46 + 36)];
  *(void *)long long v30 = v27;
  v30[8] = v28;
  *((void *)v30 + 2) = v23;
  *((void *)v30 + 3) = v25;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  sub_14E400((uint64_t)v13, (uint64_t)v15);
  sub_B6DC((uint64_t)v13, &qword_2F1938);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = (uint64_t)v53;
  uint64_t *v53 = KeyPath;
  sub_4A98(&qword_2EA970);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = v54;
  sub_14E470(v32, v54);
  sub_14E4D4();
  sub_14E650();
  uint64_t v34 = v50;
  sub_26BC80();
  sub_14E6A8(v33);
  sub_B6DC((uint64_t)v15, &qword_2F1940);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v37 = v56;
  uint64_t v36 = v57;
  uint64_t v38 = v58;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, enum case for ColorScheme.dark(_:), v58);
  uint64_t v39 = (uint64_t *)&v19[*(int *)(v47 + 36)];
  uint64_t v40 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v39 + *(int *)(v40 + 28), v37, v38);
  *uint64_t v39 = v35;
  uint64_t v42 = v51;
  uint64_t v41 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v19, v34, v52);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v41);
  return sub_14E704((uint64_t)v19, v59);
}

uint64_t sub_14E400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F1938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14E470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolbarButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_14E4D4()
{
  unint64_t result = qword_2F1968;
  if (!qword_2F1968)
  {
    sub_7B0C(&qword_2F1940);
    sub_14E550();
    sub_1360C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F1968);
  }
  return result;
}