unint64_t sub_1F7270()
{
  unint64_t result;

  result = qword_2F5E10;
  if (!qword_2F5E10)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E10);
  }
  return result;
}

uint64_t sub_1F72C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FlowAction.NewCardSetDestination.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for FlowAction.NewCardSetDestination()
{
  return &type metadata for FlowAction.NewCardSetDestination;
}

unsigned char *_s21NewCardSetDestinationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F73B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s21NewCardSetDestinationV10CodingKeysOMa()
{
  return &_s21NewCardSetDestinationV10CodingKeysON;
}

unsigned char *_s21NewCardSetDestinationV16LegacyCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *result = a2;
        return result;
      case 2:
        *(_WORD *)result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *result = 0;
      break;
    case 2:
      *(_WORD *)result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1F748CLL);
    case 4:
      *(_DWORD *)result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s21NewCardSetDestinationV16LegacyCodingKeysOMa()
{
  return &_s21NewCardSetDestinationV16LegacyCodingKeysON;
}

unint64_t sub_1F74C8()
{
  unint64_t result = qword_2F5E18;
  if (!qword_2F5E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E18);
  }
  return result;
}

unint64_t sub_1F7520()
{
  unint64_t result = qword_2F5E20;
  if (!qword_2F5E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E20);
  }
  return result;
}

unint64_t sub_1F7578()
{
  unint64_t result = qword_2F5E28;
  if (!qword_2F5E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E28);
  }
  return result;
}

unint64_t sub_1F75D0()
{
  unint64_t result = qword_2F5E30;
  if (!qword_2F5E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E30);
  }
  return result;
}

unint64_t sub_1F7628()
{
  unint64_t result = qword_2F5E38;
  if (!qword_2F5E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E38);
  }
  return result;
}

unint64_t sub_1F7680()
{
  unint64_t result = qword_2F5E40;
  if (!qword_2F5E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E40);
  }
  return result;
}

uint64_t static FlowActionPresentation.cardsPresent.getter()
{
  return 0x6572507364726163;
}

unint64_t static FlowActionPresentation.roundedCornerFormSheetPresent.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t static FlowActionPresentation.stackZoomPush.getter()
{
  return 0x6F6F5A6B63617473;
}

uint64_t static ListItemViewModel.recommendationsPage(sectionName:assetInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a4;
  uint64_t v6 = type metadata accessor for ListItemViewModel();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EDB60);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a3, a3[3]);
  uint64_t v13 = sub_269DB0();
  uint64_t v15 = v14;
  sub_C224((uint64_t)a3, (uint64_t)v28);
  *(void *)v27 = swift_getKeyPath();
  v27[8] = 0;
  sub_AD44(v28, (uint64_t)&v27[16]);
  v32[0] = *(_OWORD *)v27;
  v32[1] = *(_OWORD *)&v27[16];
  v32[2] = *(_OWORD *)&v27[32];
  uint64_t v33 = *(void *)&v27[48];
  sub_C224((uint64_t)a3, (uint64_t)v28);
  *((void *)&v29 + 1) = 0x407F400000000000;
  LOBYTE(v30) = 2;
  *((void *)&v30 + 1) = 0x407F400000000000;
  __int16 v31 = 3;
  swift_bridgeObjectRetain();
  static ListItemMetadata.recommendationsPage(assetInfo:)(a3, (uint64_t)v27);
  v26[3] = &type metadata for ListItemAccessoryRecommendationControls;
  v26[4] = sub_1F7A08();
  v26[0] = swift_allocObject();
  sub_1F7AA0((uint64_t)v32, v26[0] + 16);
  sub_C224((uint64_t)a3, (uint64_t)v25);
  sub_C224((uint64_t)a3, (uint64_t)v24);
  CardInfo.init(with:alwaysPresentNewCardSet:)(v24, 1, (uint64_t)v12);
  long long v16 = v28[0];
  *(_OWORD *)(v9 + 40) = v28[1];
  long long v17 = v30;
  *(_OWORD *)(v9 + 56) = v29;
  *((void *)v9 + 51) = 0;
  *(_OWORD *)(v9 + 72) = v17;
  *(_OWORD *)(v9 + 376) = 0u;
  *(_OWORD *)(v9 + 392) = 0u;
  char *v9 = 2;
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  *((_WORD *)v9 + 44) = v31;
  *(_OWORD *)(v9 + 24) = v16;
  memcpy(v9 + 96, v27, 0x118uLL);
  sub_8B6B0((uint64_t)v26, (uint64_t)(v9 + 376));
  sub_AD44(v25, (uint64_t)(v9 + 416));
  sub_8B718((uint64_t)v12, (uint64_t)&v9[*(int *)(v7 + 48)]);
  v18 = &v9[*(int *)(v7 + 52)];
  *(void *)v18 = 0xD000000000000014;
  *((void *)v18 + 1) = 0x800000000028BF70;
  uint64_t v19 = v23;
  *((void *)v18 + 2) = v22;
  *((void *)v18 + 3) = a2;
  *((_OWORD *)v18 + 2) = 0u;
  *((_OWORD *)v18 + 3) = 0u;
  *((_OWORD *)v18 + 4) = 0u;
  *((_OWORD *)v18 + 5) = 0u;
  *((_OWORD *)v18 + 6) = 0u;
  *((_OWORD *)v18 + 7) = 0u;
  *((void *)v18 + 16) = v13;
  *((void *)v18 + 17) = v15;
  v18[144] = 2;
  sub_8B780((uint64_t)v9, v19);
  return sub_1F7AFC((uint64_t)v32);
}

unint64_t sub_1F7A08()
{
  unint64_t result = qword_2F5E48;
  if (!qword_2F5E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E48);
  }
  return result;
}

uint64_t sub_1F7A5C()
{
  sub_C374(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_1F7AA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1F7AFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1F7B50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_E613C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_4A98(&qword_2EA840);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_1F7CBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_E5F00(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

uint64_t sub_1F7E10(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native)
  {
    int64_t v8 = *((void *)v3 + 3) >> 1;
    if (v8 >= v5)
    {
      unint64_t v9 = *(void *)(a1 + 16);
      if (v9) {
        goto LABEL_5;
      }
LABEL_18:
      if (!v2) {
        goto LABEL_19;
      }
      goto LABEL_21;
    }
  }
  if (v4 <= v5) {
    int64_t v16 = v4 + v2;
  }
  else {
    int64_t v16 = v4;
  }
  int v3 = sub_E6758(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  int64_t v8 = *((void *)v3 + 3) >> 1;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *((void *)v3 + 2);
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = (unint64_t)&v3[8 * v10 + 32];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9) {
    goto LABEL_24;
  }
  sub_4A98(&qword_2E9F90);
  swift_arrayInitWithCopy();
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = *((void *)v3 + 2);
  BOOL v14 = __OFADD__(v13, v9);
  uint64_t v15 = v13 + v9;
  if (!v14)
  {
    *((void *)v3 + 2) = v15;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_26DBE0();
  __break(1u);
  return result;
}

BooksUI::ImageFilter::Environment_optional __swiftcall ImageFilter.Environment.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2DC4E0;
  v8._object = object;
  unint64_t v5 = sub_26DC00(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ImageFilter.Environment.rawValue.getter()
{
  uint64_t v1 = 0x646168536B726164;
  if (*v0 == 1) {
    uint64_t v1 = 0;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696ELL;
  }
}

uint64_t sub_1F8030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_109E80(*a1, *a2);
}

Swift::Int sub_1F803C()
{
  return sub_26DF20();
}

uint64_t sub_1F80D0()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1F8150()
{
  return sub_26DF20();
}

BooksUI::ImageFilter::Environment_optional sub_1F81E0(Swift::String *a1)
{
  return ImageFilter.Environment.init(rawValue:)(*a1);
}

void sub_1F81EC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE000000000000000;
  uint64_t v5 = 0x646168536B726164;
  if (v2 == 1) {
    uint64_t v5 = 0;
  }
  else {
    unint64_t v4 = 0xEA0000000000776FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746867696ELL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

Swift::String __swiftcall ImageFilter.build()()
{
  int v1 = *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
  if (!(*((unsigned __int8 *)v0 + 2) >> 6))
  {
    uint64_t v13 = sub_E5F00(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      uint64_t v13 = sub_E5F00((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    v13[2] = v15 + 1;
    int64_t v16 = &v13[2 * v15];
    unint64_t v17 = 0xE500000000000000;
    v16[4] = 0x7265766F63;
    v16[5] = 0xE500000000000000;
    v56 = v13;
    if (v1) {
      v18 = &off_2DC548;
    }
    else {
      v18 = &off_2DC598;
    }
    sub_1F7CBC((uint64_t)v18);
    if (BYTE1(v1))
    {
      if (BYTE1(v1) == 1)
      {
        uint64_t v19 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      else
      {
        uint64_t v19 = 0x646168536B726164;
        unint64_t v17 = 0xEA0000000000776FLL;
      }
    }
    else
    {
      uint64_t v19 = 0x746867696ELL;
    }
    unint64_t v3 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v3 = sub_E5F00(0, v56[2] + 1, 1, v56);
    }
    unint64_t v31 = v3[2];
    unint64_t v42 = v3[3];
    unint64_t v32 = v31 + 1;
    if (v31 >= v42 >> 1) {
      unint64_t v3 = sub_E5F00((void *)(v42 > 1), v31 + 1, 1, v3);
    }
    v3[2] = v32;
    v43 = &v3[2 * v31];
    v43[4] = v19;
    v43[5] = v17;
    if ((v1 & 0x10000) == 0)
    {
LABEL_30:
      uint64_t v34 = v3[2];
      if (!v34) {
        goto LABEL_58;
      }
      goto LABEL_31;
    }
    goto LABEL_49;
  }
  if (*((unsigned __int8 *)v0 + 2) >> 6 == 1)
  {
    int v2 = *v0;
    unint64_t v3 = sub_E5F00(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    int64_t v6 = v4 >> 1;
    unint64_t v7 = v5 + 1;
    if (v4 >> 1 <= v5)
    {
      unint64_t v3 = sub_E5F00((void *)(v4 > 1), v5 + 1, 1, v3);
      unint64_t v4 = v3[3];
      int64_t v6 = v4 >> 1;
    }
    v3[2] = v7;
    Swift::String v8 = &v3[2 * v5];
    v8[4] = 0x7265766F63;
    v8[5] = 0xE500000000000000;
    int64_t v9 = v5 + 2;
    if (v6 < v9) {
      unint64_t v3 = sub_E5F00((void *)(v4 > 1), v9, 1, v3);
    }
    v3[2] = v9;
    uint64_t v10 = &v3[2 * v7];
    v10[4] = 0x6F6F626F69647561;
    v10[5] = 0xE90000000000006BLL;
    if (v2)
    {
      if (v2 == 1)
      {
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
      }
      else
      {
        uint64_t v11 = 0x646168536B726164;
        unint64_t v12 = 0xEA0000000000776FLL;
      }
    }
    else
    {
      unint64_t v12 = 0xE500000000000000;
      uint64_t v11 = 0x746867696ELL;
    }
    unint64_t v31 = v3[2];
    unint64_t v30 = v3[3];
    unint64_t v32 = v31 + 1;
    if (v31 >= v30 >> 1) {
      unint64_t v3 = sub_E5F00((void *)(v30 > 1), v31 + 1, 1, v3);
    }
    v3[2] = v32;
    uint64_t v33 = &v3[2 * v31];
    v33[4] = v11;
    v33[5] = v12;
    if ((v1 & 0x100) == 0) {
      goto LABEL_30;
    }
LABEL_49:
    unint64_t v44 = v3[3];
    if (v32 >= v44 >> 1) {
      unint64_t v3 = sub_E5F00((void *)(v44 > 1), v31 + 2, 1, v3);
    }
    v3[2] = v31 + 2;
    v45 = &v3[2 * v32];
    v45[4] = 0x7463697274736572;
    v46 = v45 + 4;
    unint64_t v29 = 0xEA00000000006465;
    goto LABEL_57;
  }
  int v20 = *v0;
  unint64_t v3 = sub_E5F00(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v22 = v3[2];
  unint64_t v21 = v3[3];
  int64_t v23 = v21 >> 1;
  unint64_t v24 = v22 + 1;
  if (v21 >> 1 <= v22)
  {
    unint64_t v3 = sub_E5F00((void *)(v21 > 1), v22 + 1, 1, v3);
    unint64_t v21 = v3[3];
    int64_t v23 = v21 >> 1;
  }
  v3[2] = v24;
  v25 = &v3[2 * v22];
  v25[4] = 0x7265766F63;
  v25[5] = 0xE500000000000000;
  int64_t v26 = v22 + 2;
  if (v23 < v26) {
    unint64_t v3 = sub_E5F00((void *)(v21 > 1), v26, 1, v3);
  }
  v3[2] = v26;
  v27 = &v3[2 * v24];
  v27[4] = 6710384;
  v27[5] = 0xE300000000000000;
  if (v20)
  {
    if (v20 == 1)
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v28 = 0x646168536B726164;
      unint64_t v29 = 0xEA0000000000776FLL;
    }
  }
  else
  {
    unint64_t v29 = 0xE500000000000000;
    uint64_t v28 = 0x746867696ELL;
  }
  unint64_t v48 = v3[2];
  unint64_t v47 = v3[3];
  if (v48 >= v47 >> 1) {
    unint64_t v3 = sub_E5F00((void *)(v47 > 1), v48 + 1, 1, v3);
  }
  v3[2] = v48 + 1;
  v49 = &v3[2 * v48];
  v49[4] = v28;
  v46 = v49 + 4;
LABEL_57:
  v46[1] = v29;
  uint64_t v34 = v3[2];
  if (!v34) {
    goto LABEL_58;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  v35 = v3 + 5;
  do
  {
    uint64_t v40 = *(v35 - 1);
    uint64_t v39 = *v35;
    uint64_t v41 = HIBYTE(*v35) & 0xF;
    if ((*v35 & 0x2000000000000000) == 0) {
      uint64_t v41 = v40 & 0xFFFFFFFFFFFFLL;
    }
    if (v41)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2B8CC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v37 = _swiftEmptyArrayStorage[2];
      unint64_t v36 = _swiftEmptyArrayStorage[3];
      if (v37 >= v36 >> 1) {
        sub_2B8CC(v36 > 1, v37 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v37 + 1;
      v38 = &_swiftEmptyArrayStorage[2 * v37];
      v38[4] = v40;
      v38[5] = v39;
    }
    v35 += 2;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
LABEL_58:
  swift_bridgeObjectRelease();
  sub_4A98(&qword_2E9F78);
  sub_A914();
  uint64_t v50 = sub_26D310();
  v52 = v51;
  swift_release();
  uint64_t v53 = v50;
  v54 = v52;
  result._object = v54;
  result._countAndFlagsBits = v53;
  return result;
}

unint64_t sub_1F87E4()
{
  unint64_t result = qword_2F5E50;
  if (!qword_2F5E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5E50);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ImageFilter(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFD)
  {
    if ((a2 + 33030146) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16252930;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16252930;
      }
    }
  }
  if ((((*((unsigned __int8 *)a1 + 2) >> 6) | (4
                                              * ((*a1 >> 4) & 0xFC0 | (*a1 >> 2) | (((*((unsigned __int8 *)a1 + 2) >> 1) & 0x1F) << 12)))) ^ 0x7FFFFu) >= 0x7FFFD)
    int v4 = -1;
  else {
    int v4 = ((*((unsigned __int8 *)a1 + 2) >> 6) | (4
  }
                                               * ((*a1 >> 4) & 0xFC0 | (*a1 >> 2) | (((*((unsigned __int8 *)a1 + 2) >> 1) & 0x1F) << 12)))) ^ 0x7FFFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33030146) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0x7FFFD) {
    int v3 = 0;
  }
  if (a2 > 0x7FFFD)
  {
    *(_WORD *)unint64_t result = a2 + 2;
    *(unsigned char *)(result + 2) = (a2 - 524286) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 524286) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      unsigned int v5 = ((-a2 >> 2) & 0x1FFFF) - (a2 << 17);
      *(unsigned char *)(result + 2) = ((32 * v5) & 0xFE0000) >> 16;
      *(_WORD *)unint64_t result = (16 * v5) & 0xFC00 | (4 * (v5 & 0x3F));
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_1F8994(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2) >> 6;
}

uint64_t sub_1F89A0(uint64_t result)
{
  *(unsigned char *)(result + 2) &= 0x3Fu;
  return result;
}

unsigned __int16 *sub_1F89B8(unsigned __int16 *result, int a2)
{
  int v2 = (*result | (*((unsigned __int8 *)result + 2) << 16)) & 0x10303 | (a2 << 22);
  *result &= 0x303u;
  *((unsigned char *)result + 2) = BYTE2(v2);
  return result;
}

ValueMetadata *type metadata accessor for ImageFilter()
{
  return &type metadata for ImageFilter;
}

unsigned char *storeEnumTagSinglePayload for ImageFilter.Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F8AC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFilter.Environment()
{
  return &type metadata for ImageFilter.Environment;
}

double StarRatingView.init(rating:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_282570;
  *(void *)(a1 + 24) = 0x4008000000000000;
  return result;
}

uint64_t StarRatingView.body.getter()
{
  uint64_t v1 = sub_26B600();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F5E58);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = *v0;
  double v9 = v0[1];
  double v10 = v0[2];
  double v11 = v0[3];
  *(void *)unint64_t v7 = sub_26B120();
  *((void *)v7 + 1) = 0x4000000000000000;
  v7[16] = 0;
  uint64_t v12 = sub_4A98(&qword_2F5E60);
  sub_1F8CD4((uint64_t)&v7[*(int *)(v12 + 44)], v8, v9, v10, v11);
  sub_26B5D0();
  sub_7C18(&qword_2F5E68, &qword_2F5E58);
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_B6DC((uint64_t)v7, &qword_2F5E58);
}

double *sub_1F8CD4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10 = sub_4A98(&qword_2F5E70);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F5E78);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  int v20 = (char *)&v50 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  int64_t v23 = (char *)&v50 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v50 - v24;
  uint64_t v26 = sub_4A98(&qword_2F5E80);
  double result = (double *)__chkstk_darwin(v26);
  unint64_t v29 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4 < a2 || a2 < a3)
  {
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = 0xD000000000000027;
    *(void *)(v49 + 24) = 0x800000000028BF90;
    *unint64_t v29 = sub_1CA78;
    v29[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2EA828);
    sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
    sub_7C18(&qword_2F5E90, &qword_2F5E70);
    return (double *)sub_26B2F0();
  }
  double v30 = floor(a2);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((uint64_t)v30 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v57 = v13;
  uint64_t v58 = (uint64_t)&v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = result;
  uint64_t v60 = a1;
  v64 = v23;
  uint64_t v65 = 0;
  uint64_t v61 = v10;
  uint64_t v66 = (uint64_t)v30;
  swift_getKeyPath();
  sub_4A98(&qword_2EF1B8);
  sub_DBD38();
  v63 = v25;
  double result = (double *)sub_26C4F0();
  uint64_t v31 = 0;
  unint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  double v36 = a2 - v30;
  if (v36 > 0.0)
  {
    uint64_t v31 = sub_26C250();
    uint64_t v34 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v35 = v37;
    double result = (double *)swift_allocObject();
    uint64_t v33 = result;
    result[2] = a2;
    result[3] = a3;
    result[4] = a4;
    result[5] = a5;
    result[6] = v36;
    unint64_t v32 = sub_1F96F8;
  }
  double v38 = a4 - a2;
  if ((~COERCE__INT64(a4 - a2) & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v38 < 9.22337204e18)
  {
    if (((uint64_t)v38 & 0x8000000000000000) == 0)
    {
      uint64_t v65 = 0;
      uint64_t v66 = (uint64_t)v38;
      v51 = v17;
      v62 = v33;
      swift_getKeyPath();
      uint64_t v39 = v64;
      sub_26C4F0();
      uint64_t v50 = v31;
      uint64_t v52 = v35;
      uint64_t v54 = v14;
      v55 = v20;
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      uint64_t v41 = v57;
      v40(v20, v63, v57);
      unint64_t v42 = v51;
      v40(v51, v39, v41);
      v40(v12, v20, v41);
      uint64_t v43 = sub_4A98(&qword_2F5E88);
      uint64_t v44 = *(int *)(v43 + 48);
      uint64_t v53 = v12;
      v45 = &v12[v44];
      uint64_t v46 = v50;
      *(void *)v45 = v50;
      *((void *)v45 + 1) = v32;
      *((void *)v45 + 2) = v62;
      *((void *)v45 + 3) = v34;
      *((void *)v45 + 4) = v52;
      v40(&v12[*(int *)(v43 + 64)], v42, v41);
      sub_1F9600(v46);
      v56 = v32;
      sub_1F9600(v46);
      unint64_t v47 = *(void (**)(char *, uint64_t))(v54 + 8);
      v47(v42, v41);
      sub_1F9640(v46);
      v47(v55, v41);
      uint64_t v48 = (uint64_t)v53;
      sub_1F9680((uint64_t)v53, v58);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2EA828);
      sub_7C18((unint64_t *)&qword_2EA830, &qword_2EA828);
      sub_7C18(&qword_2F5E90, &qword_2F5E70);
      sub_26B2F0();
      sub_1F9640(v46);
      sub_B6DC(v48, &qword_2F5E70);
      v47(v64, v41);
      return (double *)((uint64_t (*)(char *, uint64_t))v47)(v63, v41);
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1F940C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1F9428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

double sub_1F9468@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26C250();
  sub_26A940();
  sub_26A940();
  sub_26C650();
  sub_26A8D0();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1F953C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26C250();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for StarRatingView()
{
  return &type metadata for StarRatingView;
}

uint64_t sub_1F9580()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1F9600(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1F9640(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1F9680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F5E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F96E8()
{
  return swift_deallocObject();
}

double sub_1F96F8@<D0>(uint64_t a1@<X8>)
{
  return sub_1F9468(a1);
}

uint64_t sub_1F9708()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t *ShelfBackgroundViewModel.init(kind:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)result + 8);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v3;
  return result;
}

void static ShelfBackgroundViewModel.default.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t ShelfBackgroundViewModel.shapeStyleForBackground(allowDefaultGradient:colorScheme:)(char a1)
{
  return sub_1F97A4(a1);
}

uint64_t sub_1F97A4(char a1)
{
  if (!*(unsigned char *)(v1 + 8))
  {
    if (*(void *)v1 || (a1 & 1) != 0) {
      return sub_1F98BC();
    }
    goto LABEL_7;
  }
  if (*(unsigned char *)(v1 + 8) != 1)
  {
LABEL_7:
    sub_26C170();
    return sub_26A8E0();
  }
  swift_retain();
  return sub_26A8E0();
}

unint64_t ShelfBackgroundViewModel.inferredBackground(allowDefaultGradient:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  if ((result & 1) == 0 && (!*(unsigned char *)(v2 + 16) ? (BOOL v6 = v4 == 0) : (BOOL v6 = 0), v6))
  {
    uint64_t v4 = 0;
    char v5 = 2;
  }
  else
  {
    uint64_t result = sub_1F9890(*(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

unint64_t sub_1F9890(unint64_t result, char a2)
{
  if (a2 == 1) {
    return swift_retain();
  }
  if (!a2) {
    return sub_1F98AC(result);
  }
  return result;
}

unint64_t sub_1F98AC(unint64_t result)
{
  if (result >= 5) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1F98BC()
{
  uint64_t v1 = sub_26C0D0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26A6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *v0;
  switch(*v0)
  {
    case 0uLL:
      uint64_t v10 = enum case for ColorScheme.light(_:);
      uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
      v11(v8, enum case for ColorScheme.light(_:), v5);
      char v12 = sub_26A6D0();
      uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
      v13(v8, v5);
      uint64_t v14 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
      if ((v12 & 1) == 0)
      {
        uint64_t v15 = sub_26C1C0();
        swift_release();
        uint64_t v14 = v15;
      }
      v11(v8, v10, v5);
      char v16 = sub_26A6D0();
      v13(v8, v5);
      uint64_t v17 = sub_26C150();
      if (v16)
      {
        uint64_t v18 = sub_26C1C0();
        swift_release();
        uint64_t v17 = v18;
      }
      goto LABEL_13;
    case 1uLL:
      uint64_t v26 = enum case for Color.RGBColorSpace.sRGB(_:);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
      v27(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
      uint64_t v14 = sub_26C220();
      v27(v4, v26, v1);
      goto LABEL_12;
    case 2uLL:
      uint64_t v19 = enum case for Color.RGBColorSpace.sRGB(_:);
      int v20 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
      v20(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
      uint64_t v14 = sub_26C220();
      v20(v4, v19, v1);
      goto LABEL_12;
    case 3uLL:
      uint64_t v21 = enum case for Color.RGBColorSpace.sRGB(_:);
      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
      v22(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
      uint64_t v14 = sub_26C220();
      v22(v4, v21, v1);
      goto LABEL_12;
    case 4uLL:
      uint64_t v23 = enum case for Color.RGBColorSpace.sRGB(_:);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
      v24(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
      uint64_t v14 = sub_26C220();
      v24(v4, v23, v1);
LABEL_12:
      uint64_t v17 = sub_26C220();
LABEL_13:
      sub_4A98(&qword_2F2640);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_270BF0;
      *(void *)(v28 + 32) = v14;
      *(void *)(v28 + 40) = v17;
      uint64_t v31 = v28;
      sub_26D630();
      swift_retain();
      swift_retain();
      sub_26C7C0();
      sub_26C7D0();
      sub_26C580();
      sub_26AA80();
      uint64_t v25 = sub_26A8E0();
      swift_release();
      swift_release();
      break;
    default:
      swift_retain();
      uint64_t v31 = sub_26C200();
      uint64_t v25 = sub_26A8E0();
      sub_1FA7FC(v9);
      break;
  }
  return v25;
}

BOOL ShelfBackgroundViewModel.BackgroundKind.requiresBlendForButtons.getter()
{
  return *(unsigned char *)(v0 + 8) == 0;
}

uint64_t sub_1F9E64()
{
  if (*v0) {
    return 1684957547;
  }
  else {
    return 0x685365726F6E6769;
  }
}

uint64_t sub_1F9EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1FB0FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F9EC8(uint64_t a1)
{
  unint64_t v2 = sub_1FA738();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F9F04(uint64_t a1)
{
  unint64_t v2 = sub_1FA738();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t ShelfBackgroundViewModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4A98(&qword_2F5E98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_1FA738();
  sub_26DFC0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  char v14 = 1;
  sub_1FA78C();
  sub_26DC90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v9 = v12;
  char v10 = v13;
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v10;
  sub_1F9890(v9, v10);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  return sub_1FA7E0(v9, v10);
}

unint64_t sub_1FA0E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShelfBackgroundViewModel.init(from:)(a1, a2);
}

Swift::Int sub_1FA100()
{
  return sub_26DF20();
}

uint64_t sub_1FA180()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1FA1EC()
{
  return sub_26DF20();
}

uint64_t sub_1FA268@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DC5E8;
  v8._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1FA2C8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 1701736302;
  if (*v1) {
    unint64_t v2 = 0xD00000000000001ELL;
  }
  unint64_t v3 = 0x8000000000287990;
  if (!*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1FA304(char *a1, char *a2)
{
  return sub_1091FC(*a1, *a2);
}

uint64_t sub_1FA310()
{
  return sub_26D5E0();
}

uint64_t ShelfBackgroundViewModel.BackgroundKind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  sub_26DF90();
  if (!v2)
  {
    sub_4ADC(v10, v10[3]);
    sub_1FA80C();
    sub_26DDD0();
    if (v9 == 1)
    {
      id v5 = [self secondarySystemBackgroundColor];
      uint64_t v6 = sub_26C230();
      char v7 = 1;
    }
    else
    {
      uint64_t v6 = 0;
      char v7 = 2;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = v7;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t sub_1FA48C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShelfBackgroundViewModel.BackgroundKind.init(from:)(a1, a2);
}

uint64_t _s7BooksUI24ShelfBackgroundViewModelV0D4KindO8GradientO2eeoiySbAG_AGtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1)
  {
    case 0uLL:
      if (v3) {
        goto LABEL_14;
      }
      unint64_t v2 = 0;
      char v4 = 1;
      break;
    case 1uLL:
      if (v3 != 1) {
        goto LABEL_14;
      }
      unint64_t v2 = 1;
      char v4 = 1;
      break;
    case 2uLL:
      if (v3 != 2) {
        goto LABEL_14;
      }
      char v4 = 1;
      unint64_t v2 = 2;
      break;
    case 3uLL:
      if (v3 != 3) {
        goto LABEL_14;
      }
      char v4 = 1;
      unint64_t v2 = 3;
      break;
    case 4uLL:
      if (v3 != 4) {
        goto LABEL_14;
      }
      char v4 = 1;
      unint64_t v2 = 4;
      break;
    default:
      if (v3 < 5)
      {
LABEL_14:
        sub_1F98AC(*a2);
        sub_1F98AC(v2);
        char v4 = 0;
      }
      else
      {
        sub_1F98AC(*a2);
        sub_1F98AC(v2);
        char v4 = sub_26C0E0();
      }
      break;
  }
  sub_1FA7FC(v2);
  sub_1FA7FC(v3);
  return v4 & 1;
}

uint64_t _s7BooksUI24ShelfBackgroundViewModelV0D4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      unint64_t v8 = *(void *)a2;
      unint64_t v9 = v2;
      sub_1F9890(v4, 0);
      sub_1F9890(v2, 0);
      sub_1F9890(v4, 0);
      sub_1F9890(v2, 0);
      int v5 = _s7BooksUI24ShelfBackgroundViewModelV0D4KindO8GradientO2eeoiySbAG_AGtFZ_0(&v9, &v8);
      sub_1FA7E0(v2, 0);
      sub_1FA7E0(v4, 0);
      sub_1FA7E0(v4, 0);
      sub_1FA7E0(v2, 0);
      return v5 & 1;
    }
    goto LABEL_11;
  }
  if (v3 != 1)
  {
    if (v5 == 2 && v4 == 0)
    {
      sub_1FA7E0(*(void *)a1, 2);
      sub_1FA7E0(0, 2);
      LOBYTE(v5) = 1;
      return v5 & 1;
    }
    goto LABEL_11;
  }
  if (v5 != 1)
  {
LABEL_11:
    sub_1F9890(*(void *)a2, *(unsigned char *)(a2 + 8));
    sub_1F9890(v2, v3);
    sub_1FA7E0(v2, v3);
    sub_1FA7E0(v4, v5);
    LOBYTE(v5) = 0;
    return v5 & 1;
  }
  sub_1F9890(*(void *)a2, 1);
  sub_1F9890(v2, 1);
  LOBYTE(v5) = sub_26C0E0();
  sub_1FA7E0(v2, 1);
  sub_1FA7E0(v4, 1);
  return v5 & 1;
}

unint64_t sub_1FA738()
{
  unint64_t result = qword_2F5EA0;
  if (!qword_2F5EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EA0);
  }
  return result;
}

unint64_t sub_1FA78C()
{
  unint64_t result = qword_2F5EA8;
  if (!qword_2F5EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EA8);
  }
  return result;
}

unint64_t sub_1FA7E0(unint64_t result, char a2)
{
  if (a2 == 1) {
    return swift_release();
  }
  if (!a2) {
    return sub_1FA7FC(result);
  }
  return result;
}

unint64_t sub_1FA7FC(unint64_t result)
{
  if (result >= 5) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1FA80C()
{
  unint64_t result = qword_2F5EB0;
  if (!qword_2F5EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EB0);
  }
  return result;
}

unint64_t sub_1FA860(uint64_t a1)
{
  unint64_t result = sub_1FA888();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1FA888()
{
  unint64_t result = qword_2F5EB8;
  if (!qword_2F5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EB8);
  }
  return result;
}

unint64_t destroy for ShelfBackgroundViewModel(uint64_t a1)
{
  return sub_1FA7E0(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7BooksUI24ShelfBackgroundViewModelVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_1F9890(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for ShelfBackgroundViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_1F9890(v3, v4);
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1FA7E0(v5, v6);
  return a1;
}

uint64_t assignWithTake for ShelfBackgroundViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  unint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1FA7E0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfBackgroundViewModel(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfBackgroundViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfBackgroundViewModel()
{
  return &type metadata for ShelfBackgroundViewModel;
}

uint64_t initializeBufferWithCopyOfBuffer for ShelfBackgroundViewModel.BackgroundKind(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1F9890(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

unint64_t destroy for ShelfBackgroundViewModel.BackgroundKind(uint64_t a1)
{
  return sub_1FA7E0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ShelfBackgroundViewModel.BackgroundKind(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1F9890(*(void *)a2, v4);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1FA7E0(v5, v6);
  return a1;
}

uint64_t assignWithTake for ShelfBackgroundViewModel.BackgroundKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1FA7E0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfBackgroundViewModel.BackgroundKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfBackgroundViewModel.BackgroundKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1FAC04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1FAC1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfBackgroundViewModel.BackgroundKind()
{
  return &type metadata for ShelfBackgroundViewModel.BackgroundKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for ShelfBackgroundViewModel.BackgroundKind.Gradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for ShelfBackgroundViewModel.BackgroundKind.Gradient(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for ShelfBackgroundViewModel.BackgroundKind.Gradient(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_retain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for ShelfBackgroundViewModel.BackgroundKind.Gradient(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfBackgroundViewModel.BackgroundKind.Gradient(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShelfBackgroundViewModel.BackgroundKind.Gradient(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

void *sub_1FAE2C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfBackgroundViewModel.BackgroundKind.Gradient()
{
  return &type metadata for ShelfBackgroundViewModel.BackgroundKind.Gradient;
}

ValueMetadata *type metadata accessor for ShelfBackgroundViewModel.BackgroundKind.JSKind()
{
  return &type metadata for ShelfBackgroundViewModel.BackgroundKind.JSKind;
}

unsigned char *_s7BooksUI24ShelfBackgroundViewModelV14BackgroundKindO6JSKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FAF3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfBackgroundViewModel.CodingKeys()
{
  return &type metadata for ShelfBackgroundViewModel.CodingKeys;
}

unint64_t sub_1FAF78()
{
  unint64_t result = qword_2F5EC0;
  if (!qword_2F5EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EC0);
  }
  return result;
}

unint64_t sub_1FAFCC(uint64_t a1)
{
  unint64_t result = sub_1FA80C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1FAFF8()
{
  unint64_t result = qword_2F5EC8;
  if (!qword_2F5EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EC8);
  }
  return result;
}

unint64_t sub_1FB050()
{
  unint64_t result = qword_2F5ED0;
  if (!qword_2F5ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5ED0);
  }
  return result;
}

unint64_t sub_1FB0A8()
{
  unint64_t result = qword_2F5ED8;
  if (!qword_2F5ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5ED8);
  }
  return result;
}

uint64_t sub_1FB0FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x685365726F6E6769 && a2 == 0xEB00000000666C65;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1FB1F8()
{
  unint64_t result = qword_2F5EE0;
  if (!qword_2F5EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EE0);
  }
  return result;
}

uint64_t SeriesCardCoverStackLayout.init(covers:containingWidth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (*(void *)(a1 + 16) >= 3uLL) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  sub_26DE10();
  swift_unknownObjectRetain_n();
  char v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    char v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7[2];
  swift_release();
  if (v8 == v6)
  {
    unint64_t v9 = (void *)swift_dynamicCastClass();
    if (!v9)
    {
      swift_bridgeObjectRelease();
      unint64_t v9 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = sub_E6888(a1, a1 + 32, 0, (2 * v6) | 1);
  }
  uint64_t v10 = swift_bridgeObjectRelease();
  if (v9[2])
  {
    double v11 = a3 * 0.73 / *((double *)v9 + 15);
    __chkstk_darwin(v10);
    unint64_t v12 = sub_1FB708((uint64_t)v9, (void (*)(unsigned char *__return_ptr, uint64_t, _OWORD *))sub_1FB608);
    unint64_t v13 = v9[2];
    if (v13 >= 2)
    {
      uint64_t v15 = v9 + 24;
      uint64_t v14 = v9[24];
      if (v9[19])
      {
        uint64_t v16 = v9[23];
        while (*(v15 - 5))
        {
          if (!v14)
          {
            uint64_t result = swift_release();
            uint64_t v19 = 0;
            goto LABEL_23;
          }
          if (!*v15) {
            break;
          }
          BOOL v17 = *(v15 - 1) == v16 && *v15 == v14;
          if (!v17 && (sub_26DDB0() & 1) == 0) {
            break;
          }
          v15 += 21;
          if (!--v13)
          {
            unsigned __int8 v25 = 1;
            sub_6C0F8((uint64_t)(v9 + 4), (uint64_t)v21);
            swift_release();
            uint64_t v14 = 0;
            uint64_t v20 = 0xE000000000000000;
            if (v22)
            {
              if (v24)
              {
                uint64_t v14 = v23;
                uint64_t v20 = swift_bridgeObjectRetain();
              }
            }
            uint64_t result = sub_2D738((uint64_t)v21);
            uint64_t v19 = v25;
            goto LABEL_24;
          }
        }
      }
    }
    uint64_t result = swift_release();
    uint64_t v19 = 0;
    uint64_t v14 = 0;
LABEL_23:
    uint64_t v20 = 0xE000000000000000;
LABEL_24:
    *(double *)a2 = a3;
    *(double *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v14;
    *(void *)(a2 + 56) = v20;
  }
  else
  {
    uint64_t result = swift_release();
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double SeriesCardCoverStackLayout.intrinsicSize.getter()
{
  return *(double *)v0;
}

uint64_t SeriesCardCoverStackLayout.coverLayouts.getter()
{
  return swift_bridgeObjectRetain();
}

double SeriesCardCoverStackLayout.centeringOffset.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1FB4EC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>, double a6@<D0>)
{
  sub_6C0F8(a2, (uint64_t)v23);
  if (a1 > 2)
  {
    uint64_t result = sub_2D738((uint64_t)v23);
    a5[11] = 0u;
    a5[12] = 0u;
    a5[9] = 0u;
    a5[10] = 0u;
    a5[7] = 0u;
    a5[8] = 0u;
    a5[5] = 0u;
    a5[6] = 0u;
    a5[3] = 0u;
    a5[4] = 0u;
    a5[1] = 0u;
    a5[2] = 0u;
    *a5 = 0u;
  }
  else
  {
    uint64_t v11 = *(void *)(a3 + 16);
    uint64_t v12 = *(void *)(a4 + 88);
    LOBYTE(v20) = a1;
    sub_6C0F8((uint64_t)v23, (uint64_t)v22 + 8);
    *((void *)&v20 + 1) = v11;
    *(double *)&long long v21 = a6;
    *((void *)&v21 + 1) = v12;
    uint64_t v13 = v24;
    uint64_t result = sub_2D738((uint64_t)v23);
    *(void *)&v22[0] = v13;
    long long v15 = v22[9];
    a5[10] = v22[8];
    a5[11] = v15;
    a5[12] = v22[10];
    long long v16 = v22[5];
    a5[6] = v22[4];
    a5[7] = v16;
    long long v17 = v22[7];
    a5[8] = v22[6];
    a5[9] = v17;
    long long v18 = v22[3];
    a5[4] = v22[2];
    a5[5] = v18;
    *a5 = v20;
    a5[1] = v21;
    long long v19 = v22[1];
    a5[2] = v22[0];
    a5[3] = v19;
  }
  return result;
}

uint64_t sub_1FB608@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_1FB4EC(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 32), a3, *(double *)(v3 + 24));
}

uint64_t _s7BooksUI26SeriesCardCoverStackLayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  int v8 = *(unsigned __int8 *)(a2 + 40);
  double v10 = *(double *)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a1 + 40);
  double v13 = *(double *)(a1 + 24);
  double v12 = *(double *)(a1 + 32);
  char v14 = sub_E5808(*(void *)(a1 + 16), *(void *)(a2 + 16));
  uint64_t result = 0;
  if (v14)
  {
    BOOL v15 = v13 == v10 && v12 == v9;
    if (v15 && ((v8 ^ v11) & 1) == 0)
    {
      if (v4 == v6 && v5 == v7)
      {
        return 1;
      }
      else
      {
        return sub_26DDB0();
      }
    }
  }
  return result;
}

void *sub_1FB708(uint64_t a1, void (*a2)(unsigned char *__return_ptr, uint64_t, _OWORD *))
{
  void (*v30)(unsigned char *__return_ptr, uint64_t, _OWORD *);

  uint64_t v30 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 32;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_6C0F8(v5, (uint64_t)&v24[8]);
      uint64_t v27 = v4;
      v28[8] = *(_OWORD *)&v24[136];
      v28[9] = *(_OWORD *)&v24[152];
      uint64_t v29 = *(void *)&v24[168];
      v28[4] = *(_OWORD *)&v24[72];
      v28[5] = *(_OWORD *)&v24[88];
      v28[6] = *(_OWORD *)&v24[104];
      v28[7] = *(_OWORD *)&v24[120];
      v28[0] = *(_OWORD *)&v24[8];
      v28[1] = *(_OWORD *)&v24[24];
      long long v28[2] = *(_OWORD *)&v24[40];
      v28[3] = *(_OWORD *)&v24[56];
      v30(v24, v4, v28);
      sub_B6DC((uint64_t)&v27, &qword_2EF690);
      if (*(void *)&v24[144])
      {
        long long v21 = *(_OWORD *)&v24[160];
        long long v22 = v25;
        long long v23 = v26;
        long long v17 = *(_OWORD *)&v24[96];
        long long v18 = *(_OWORD *)&v24[112];
        long long v19 = *(_OWORD *)&v24[128];
        long long v20 = *(_OWORD *)&v24[144];
        long long v13 = *(_OWORD *)&v24[32];
        long long v14 = *(_OWORD *)&v24[48];
        long long v15 = *(_OWORD *)&v24[64];
        long long v16 = *(_OWORD *)&v24[80];
        long long v11 = *(_OWORD *)v24;
        long long v12 = *(_OWORD *)&v24[16];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_E6504(0, v6[2] + 1, 1, v6);
        }
        unint64_t v8 = v6[2];
        unint64_t v7 = v6[3];
        if (v8 >= v7 >> 1) {
          uint64_t v6 = sub_E6504((void *)(v7 > 1), v8 + 1, 1, v6);
        }
        v6[2] = v8 + 1;
        double v9 = &v6[26 * v8];
        v9[2] = v11;
        v9[5] = v14;
        v9[6] = v15;
        v9[3] = v12;
        v9[4] = v13;
        v9[9] = v18;
        v9[10] = v19;
        v9[7] = v16;
        v9[8] = v17;
        v9[13] = v22;
        v9[14] = v23;
        v9[11] = v20;
        v9[12] = v21;
      }
      else
      {
        sub_B6DC((uint64_t)v24, &qword_2F5F40);
      }
      ++v4;
      v5 += 168;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1FB958()
{
  unint64_t result = qword_2F5EE8;
  if (!qword_2F5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5EE8);
  }
  return result;
}

unint64_t sub_1FB9AC(uint64_t a1)
{
  unint64_t result = sub_1FB9D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1FB9D4()
{
  unint64_t result = qword_2F5F38;
  if (!qword_2F5F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5F38);
  }
  return result;
}

uint64_t destroy for SeriesCardCoverStackLayout()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeriesCardCoverStackLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeriesCardCoverStackLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SeriesCardCoverStackLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SeriesCardCoverStackLayout()
{
  return &type metadata for SeriesCardCoverStackLayout;
}

uint64_t destroy for ListItemMetadataRatingView(uint64_t a1)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));

  return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 32);
}

uint64_t initializeWithCopy for ListItemMetadataRatingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ListItemMetadataRatingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_C374(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_16D58((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t assignWithTake for ListItemMetadataRatingView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_C374(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 32);
  long long v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataRatingView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataRatingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataRatingView()
{
  return &type metadata for ListItemMetadataRatingView;
}

uint64_t sub_1FBE28()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_1FBE44(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

void *sub_1FBE70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v92 = sub_26CFD0();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2F5F48);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  v89 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v88 = (char *)&v84 - v6;
  uint64_t v104 = sub_26CF60();
  uint64_t v102 = *(void *)(v104 - 8);
  uint64_t v7 = __chkstk_darwin(v104);
  v87 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v103 = (uint64_t)&v84 - v9;
  uint64_t v101 = sub_26CD20();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_26B600();
  v97 = *(void **)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v95 = sub_4A98(&qword_2EB038) - 8;
  __chkstk_darwin(v95);
  long long v13 = (uint64_t *)((char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_26C270();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_4A98(&qword_2F5F50);
  __chkstk_darwin(v105);
  long long v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_4A98(&qword_2F5F58);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  v106 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2F5F60);
  __chkstk_darwin(v21 - 8);
  v84 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = v1;
  v108 = (void *)(v1 + 32);
  uint64_t v23 = sub_1FCAB8((void *)(v1 + 32));
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  uint64_t v30 = *(void (**)(char *, void, uint64_t))(v15 + 104);
  *(void *)&long long v94 = v14;
  v30(v17, enum case for Image.Scale.small(_:), v14);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v13 + *(int *)(v95 + 36), v17, v14);
  *long long v13 = KeyPath;
  sub_19B684((uint64_t)v13, (uint64_t)&v19[*(int *)(v105 + 36)]);
  *(void *)long long v19 = v23;
  *((void *)v19 + 1) = v25;
  v19[16] = v29;
  *((void *)v19 + 3) = v27;
  sub_45370(v23, v25, v29);
  swift_bridgeObjectRetain();
  sub_B6DC((uint64_t)v13, &qword_2EB038);
  (*(void (**)(char *, void))(v15 + 8))(v17, v94);
  sub_3A380(v23, v25, v29);
  swift_bridgeObjectRelease();
  unint64_t v32 = v96;
  sub_26B5D0();
  unint64_t v95 = sub_1FD0F0();
  sub_26BEA0();
  ((void (*)(char *, uint64_t))v97[1])(v32, v98);
  sub_B6DC((uint64_t)v19, &qword_2F5F50);
  sub_4A98(&qword_2EADB0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_270BF0;
  uint64_t v34 = v107;
  uint64_t v35 = *(void *)(v107 + 56);
  uint64_t v98 = *(void *)(v107 + 64);
  double v36 = v108;
  v97 = sub_4ADC(v108, v35);
  v96 = (char *)sub_4A98(&qword_2EE240);
  uint64_t inited = swift_initStackObject();
  long long v94 = xmmword_26F990;
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  strcpy((char *)(inited + 32), "averageRating");
  *(_WORD *)(inited + 46) = -4864;
  sub_4ADC(v36, *(void *)(v34 + 56));
  Class isa = sub_26D700().super.super.isa;
  uint64_t v39 = v100;
  uint64_t v40 = v99;
  uint64_t v41 = v101;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))(v99, enum case for LocalizerContext.standalone(_:), v101);
  uint64_t v42 = sub_26D1E0();
  uint64_t v44 = v43;

  uint64_t v45 = v102;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  *(void *)(inited + 48) = v42;
  *(void *)(inited + 56) = v44;
  sub_9368(inited);
  uint64_t v46 = v103;
  sub_26CF50();
  uint64_t v47 = v46;
  uint64_t v48 = sub_26D210();
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  v51 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v51(v47, v104);
  *(void *)(v33 + 32) = v48;
  *(void *)(v33 + 40) = v50;
  uint64_t v52 = v107;
  uint64_t v101 = v33;
  uint64_t v53 = v108;
  uint64_t v54 = *(void *)(v107 + 56);
  uint64_t v55 = *(void *)(v107 + 64);
  unint64_t result = sub_4ADC(v108, v54);
  uint64_t v57 = *(void *)(v52 + 24);
  if (v57 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v98 = (uint64_t)result;
    uint64_t v58 = swift_initStackObject();
    uint64_t v100 = v45 + 8;
    uint64_t v59 = v58;
    *(_OWORD *)(v58 + 16) = v94;
    *(void *)(v58 + 32) = 0x746E756F63;
    *(void *)(v58 + 40) = 0xE500000000000000;
    v99 = (char *)v51;
    sub_4ADC(v53, *(void *)(v52 + 56));
    *(void *)(v59 + 48) = sub_26D1A0();
    *(void *)(v59 + 56) = v60;
    v108 = (void *)sub_9368(v59);
    sub_26CF50();
    uint64_t v107 = v57;
    uint64_t v61 = (uint64_t)v87;
    sub_26CF50();
    v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
    uint64_t v63 = v55;
    uint64_t v64 = (uint64_t)v88;
    uint64_t v65 = v54;
    uint64_t v66 = v104;
    v62(v88, 1, 1, v104);
    uint64_t v67 = (uint64_t)v89;
    v62(v89, 1, 1, v66);
    uint64_t v68 = v91;
    uint64_t v69 = (uint64_t)v90;
    uint64_t v70 = v92;
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v90, enum case for LocalizerLookupStrategy.default(_:), v92);
    uint64_t v83 = v63;
    uint64_t v71 = v103;
    uint64_t v72 = sub_C7714(v107, 0xD000000000000021, 0x800000000028C010, (uint64_t)v108, v103, v61, v64, v67, v69, v65, v83);
    uint64_t v107 = v73;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
    sub_B6DC(v67, &qword_2F5F48);
    sub_B6DC(v64, &qword_2F5F48);
    v74 = v99;
    ((void (*)(uint64_t, uint64_t))v99)(v61, v66);
    ((void (*)(uint64_t, uint64_t))v74)(v71, v66);
    uint64_t v75 = v101;
    uint64_t v76 = v107;
    *(void *)(v101 + 48) = v72;
    *(void *)(v75 + 56) = v76;
    uint64_t v111 = v75;
    sub_4A98(&qword_2E9F78);
    sub_7C18((unint64_t *)&qword_2E9F80, &qword_2E9F78);
    uint64_t v77 = sub_26D310();
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v111 = v77;
    uint64_t v112 = v79;
    uint64_t v109 = v105;
    unint64_t v110 = v95;
    swift_getOpaqueTypeConformance2();
    sub_CC78();
    uint64_t v80 = (uint64_t)v84;
    uint64_t v81 = v86;
    v82 = v106;
    sub_26BE40();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v81);
    return (void *)sub_1FD190(v80, v93);
  }
  return result;
}

uint64_t sub_1FCAB8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v47 = a1;
  uint64_t v50 = sub_26CF60();
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v48 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26CD20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26C250();
  uint64_t v8 = sub_26BB10();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = sub_26BA60();
  v45[0] = v14;
  v45[1] = v15;
  char v17 = v16 & 1;
  sub_3A380(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)(v2 + 32);
  sub_4ADC((void *)(v2 + 32), *(void *)(v2 + 56));
  Class isa = sub_26D700().super.super.isa;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizerContext.standalone(_:), v4);
  sub_26D1E0();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v19 = v45[0];
  uint64_t v53 = sub_26BA60();
  uint64_t v52 = v20;
  int v51 = v21;
  uint64_t v54 = v22;
  swift_bridgeObjectRelease();
  sub_3A380(v13, v19, v17);
  swift_bridgeObjectRelease();
  sub_4ADC(v47, v47[3]);
  sub_4A98(&qword_2EE240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x800000000028C080;
  sub_4ADC(v46, *(void *)(v2 + 56));
  *(void *)(inited + 48) = sub_26D1A0();
  *(void *)(inited + 56) = v24;
  sub_9368(inited);
  uint64_t v25 = v48;
  sub_26CF50();
  sub_26D210();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v50);
  uint64_t v26 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  sub_10E0C(v26, v2);
  LOBYTE(v13) = sub_40900(v26, v2);
  sub_C374(v26, v2);
  if (v13)
  {
    uint64_t v27 = sub_26BA60();
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v32 = sub_26BA30();
    swift_release();
    uint64_t v33 = v27;
    uint64_t v34 = v29;
    char v35 = v31;
  }
  else
  {
    _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
    uint64_t v50 = sub_26BA30();
    uint64_t v49 = v36;
    char v38 = v37;
    swift_release();
    LODWORD(v48) = v38 & 1;
    int v55 = sub_26B460();
    uint64_t v39 = sub_26BA40();
    uint64_t v41 = v40;
    char v43 = v42 & 1;
    uint64_t v32 = sub_26BA60();
    sub_3A380(v39, v41, v43);
    swift_bridgeObjectRelease();
    uint64_t v33 = v50;
    uint64_t v34 = v49;
    char v35 = (char)v48;
  }
  sub_3A380(v33, v34, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_3A380(v53, v52, v51 & 1);
  swift_bridgeObjectRelease();
  return v32;
}

unint64_t sub_1FD0F0()
{
  unint64_t result = qword_2F5F68;
  if (!qword_2F5F68)
  {
    sub_7B0C(&qword_2F5F50);
    sub_7C18((unint64_t *)&qword_2EB0D8, &qword_2EB038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F5F68);
  }
  return result;
}

uint64_t sub_1FD190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F5F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ListItemMetadataRatingInfo()
{
  return &type metadata for ListItemMetadataRatingInfo;
}

unint64_t sub_1FD20C()
{
  unint64_t result = qword_2F5F70[0];
  if (!qword_2F5F70[0])
  {
    sub_7B0C(&qword_2F5F60);
    sub_7B0C(&qword_2F5F50);
    sub_1FD0F0();
    swift_getOpaqueTypeConformance2();
    sub_1FD2BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F5F70);
  }
  return result;
}

unint64_t sub_1FD2BC()
{
  unint64_t result = qword_2EAF28;
  if (!qword_2EAF28)
  {
    sub_26B6A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAF28);
  }
  return result;
}

uint64_t View.environment<A>(_:binding:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v21 = a5;
  uint64_t v20 = a2;
  uint64_t v8 = *(void *)(class metadata base offset for WritableKeyPath + *a1 + 8);
  uint64_t v9 = sub_26C4D0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v19 - v11;
  uint64_t v13 = type metadata accessor for EnvironmentBindingViewModifier();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (uint64_t *)((char *)&v19 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  uint64_t v22 = a3;
  uint64_t v23 = v8;
  uint64_t v24 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1FD530((uint64_t)a1, (uint64_t)v12, KeyPath, v16);
  swift_retain();
  sub_26C030();
  return (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t type metadata accessor for EnvironmentBindingViewModifier()
{
  return sub_129B4();
}

uint64_t sub_1FD530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for EnvironmentBindingViewModifier();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 36);
  uint64_t v9 = sub_26C4D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)((char *)a4 + *(int *)(v7 + 40)) = a3;
  return result;
}

uint64_t sub_1FD63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  uint64_t v24 = *(void *)(a2 + 24);
  uint64_t v27 = *(void *)(v24 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v26 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v25 = *(void *)(v7 - 8);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_26B400();
  v23[1] = sub_26B690();
  uint64_t v10 = sub_26ABD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v16 = (char *)v23 - v15;
  v23[0] = *v3;
  sub_26C4D0();
  sub_26C480();
  char v17 = v26;
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_26BCB0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v24);
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v30 = WitnessTable;
  uint64_t v31 = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_CCCC(v14, v10, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  sub_CCCC(v16, v10, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v10);
}

uint64_t View.environment<A, B>(_:binding:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[2] = a5;
  v17[1] = a4;
  uint64_t v8 = sub_26C4D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = type metadata accessor for EnvironmentBindingViewModifier();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v17 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1FD530(a1, (uint64_t)v11, a3, v15);
  swift_retain();
  swift_retain();
  sub_26C030();
  return (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1FDBCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1FDC60()
{
  return swift_getWitnessTable();
}

uint64_t sub_1FDCF8()
{
  uint64_t result = sub_26C4D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1FDD98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  unint64_t v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v6 + 8;
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(v5 + 64) + 7;
  int v11 = v6 & 0x100000;
  uint64_t v12 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v11 != 0 || ((v10 + (v8 & (v7 + 8))) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v12 + (v8 & (v7 + 16)));
  }
  else
  {
    uint64_t v15 = ~v7;
    char v16 = (void *)(v8 & ((unint64_t)a1 + 15));
    char v17 = (void *)(v8 & ((unint64_t)a2 + 15));
    *char v16 = *v17;
    uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v18 = *v19;
    unint64_t v23 = ((unint64_t)v18 + v9) & v15;
    unint64_t v20 = ((unint64_t)v19 + v9) & v15;
    uint64_t v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v21(v23, v20, v4);
    *(void *)(((unint64_t)v16 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1FDF1C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))((v6 + ((((a1 + (v6 | 7) + 8) & ~(v6 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v4);

  return swift_release();
}

void *sub_1FE004(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  char v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v5 = *(void *)(v4 - 8) + 16;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = (v6 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  unint64_t v8 = (void *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  *unint64_t v8 = *v9;
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = ((unint64_t)v10 + v6 + 8) & ~v6;
  uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
  swift_retain();
  swift_retain();
  swift_retain();
  v16(v12, v13, v4);
  uint64_t v14 = *(void *)(v5 + 48) + ((v6 + 16) & ~v6) + 7;
  *(void *)(((unint64_t)v8 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v9 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void *sub_1FE12C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  int v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_retain();
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = *(void *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(void *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1FE280(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = v4 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (v7 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  void *v9 = *v10;
  int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v11 = *v12;
  v5(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7);
  uint64_t v13 = *(void *)(v6 + 32) + ((v7 + 16) & ~v7) + 7;
  *(void *)(((unint64_t)v9 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1FE364(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  int v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = *(void *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(void *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1FE490(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = v8 | 7;
  uint64_t v11 = v8 + 8;
  if (v9 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v8 + 16) & ~v8) + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v13 = a2 - v9;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v12);
        if (!v18) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v18) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1FE61CLL);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v12);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if (v14)
        {
          int v20 = 0;
          LODWORD(v14) = *a1;
        }
        return v9 + (v14 | v20) + 1;
      default:
        break;
    }
  }
  if (v9 != 0x7FFFFFFF) {
    return (*(uint64_t (**)(unint64_t))(v5 + 48))((v11
  }
                                                                  + (((((unint64_t)a1 + v10 + 8) & ~v10) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8);
  uint64_t v21 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v21) = -1;
  }
  return (v21 + 1);
}

void sub_1FE630(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    int v8 = 0x7FFFFFFF;
  }
  else {
    int v8 = *(_DWORD *)(v6 + 84);
  }
  if (v7 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
        + ((v10 + 8) & ~(v10 | 7))
        + ((v10 + 16) & ~v10)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_20:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v9 == 0x7FFFFFFF)
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
            else
            {
              unint64_t v20 = (v10 + 8 + ((((unint64_t)&a1[(v10 | 7) + 8] & ~(v10 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
              uint64_t v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
         + ((v10 + 8) & ~(v10 | 7))
         + ((v10 + 16) & ~v10)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v13 = v12 + 1;
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v10 + 8) & ~(v10 | 7))
       + ((v10 + 16) & ~v10)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v17 = v16;
  else {
    int v17 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v10 + 8) & ~(v10 | 7))
       + ((v10 + 16) & ~v10)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v18 = ~v9 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x1FE854);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_1FE87C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1FE8C0()
{
  return swift_getWitnessTable();
}

uint64_t BuyButtonViewModelBase.init<>(buttonType:longCaptionAlignment:assetInfo:)@<X0>(unsigned __int16 *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BuyButtonExternals();
  unsigned int v9 = (int *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unsigned int v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  int v14 = (char *)&v21 - v13;
  LOBYTE(a2) = *a2;
  uint64_t v15 = *a1;
  sub_C224(a3, (uint64_t)v22);
  uint64_t *v12 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  int v16 = (uint64_t *)((char *)v12 + v9[7]);
  type metadata accessor for ProfileRestrictions();
  sub_202C98((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *int v16 = sub_26AD70();
  v16[1] = v17;
  int v18 = (uint64_t *)((char *)v12 + v9[8]);
  uint64_t *v18 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)v12 + v9[9];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(_OWORD *)(v19 + 51) = 0u;
  sub_202B20((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BuyButtonExternals);
  sub_89AE0(v15, (char)a2, v22, (uint64_t)v14, a4);
  return _s7BooksUI13AnyPagedFrameVwxx_0(a3);
}

uint64_t BuyButtonViewModelBase.accessibilityHint.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_26CFD0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26CF60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ButtonViewModel(0);
  if (*(unsigned char *)(v2 + *(int *)(v13 + 48)) == 1)
  {
    v29[0] = v10;
    __chkstk_darwin(v13);
    *(_OWORD *)&v29[-2] = *(_OWORD *)(a1 + 16);
    uint64_t KeyPath = (void *)swift_getKeyPath();
    swift_getWitnessTable();
    ViewModelWithExternals.subscript.getter(KeyPath);
    swift_release();
    if (v29[10] && (uint64_t v15 = v30, swift_bridgeObjectRelease(), v15 == 5))
    {
      int v16 = (void *)(v2 + *(int *)(a1 + 44));
      sub_4ADC(v16, v16[3]);
      if ((sub_26A040() & 1) == 0
        && (sub_4ADC(v16, v16[3]), (uint64_t v17 = (void *)sub_269DD0()) != 0)
        && (int v18 = v17,
            id v19 = [v17 priceFormatted],
            v18,
            v19))
      {
        uint64_t v20 = sub_26D430();
        uint64_t v22 = v21;

        sub_4A98(&qword_2EE240);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_26F990;
        *(void *)(inited + 32) = 0x6563697270;
        *(void *)(inited + 40) = 0xE500000000000000;
        *(void *)(inited + 48) = v20;
        *(void *)(inited + 56) = v22;
        sub_9368(inited);
        sub_26CF50();
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizerLookupStrategy.default(_:), v5);
        sub_26A1D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_26CF50();
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizerLookupStrategy.default(_:), v5);
        sub_26A1D0();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v29[0] + 8))(v12, v9);
      uint64_t v28 = sub_26A220();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 0, 1, v28);
    }
    else
    {
      uint64_t v27 = sub_26A220();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 1, 1, v27);
    }
  }
  else
  {
    uint64_t v24 = sub_26A220();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    return v25(a2, 1, 1, v24);
  }
}

uint64_t BuyButtonViewModelBase.caption.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v52 = a2;
  uint64_t v5 = sub_4A98(&qword_2EDA00);
  __chkstk_darwin(v5 - 8);
  uint64_t v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_269810();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  uint64_t v8 = *(void *)(v46 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  char v43 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v44 = (char *)&v43 - v10;
  uint64_t v11 = sub_26CFD0();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26CF60();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 - 8);
  __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)(v2 + *(int *)(a1 + 44));
  sub_4ADC(v21, v21[3]);
  char v22 = sub_269F30();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v3, a1);
  if ((v22 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, a1);
    goto LABEL_5;
  }
  __chkstk_darwin(v23);
  *((_OWORD *)&v43 - 1) = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  uint64_t v25 = v54;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_26A590();

  swift_release();
  swift_release();
  LOBYTE(v25) = v53;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, a1);
  if (v25)
  {
LABEL_5:
    sub_4ADC(v21, v21[3]);
    uint64_t v29 = (void *)sub_269DD0();
    if (v29)
    {
      unsigned __int8 v30 = v29;
      unsigned int v31 = [v29 isPreorder];

      if (v31)
      {
        sub_4ADC(v21, v21[3]);
        uint64_t v32 = (uint64_t)v45;
        sub_269F70();
        uint64_t v34 = v46;
        uint64_t v33 = v47;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v32, 1, v47) != 1)
        {
          char v37 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
          char v38 = v44;
          v37(v44, v32, v33);
          uint64_t v39 = v43;
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v43, v38, v33);
          unint64_t v40 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
          uint64_t v41 = swift_allocObject();
          v37((char *)(v41 + v40), (uint64_t)v39, v33);
          uint64_t v28 = v52;
          sub_26A1C0();
          swift_release();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
          goto LABEL_11;
        }
        sub_B6DC(v32, &qword_2EDA00);
      }
    }
    uint64_t v35 = sub_26A220();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v52, 1, 1, v35);
  }
  sub_26CF50();
  uint64_t v27 = v50;
  uint64_t v26 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v13, enum case for LocalizerLookupStrategy.default(_:), v51);
  uint64_t v28 = v52;
  sub_26A1D0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v49);
LABEL_11:
  uint64_t v42 = sub_26A220();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v28, 0, 1, v42);
}

id BuyButtonExternals.profileRestrictions.getter()
{
  unint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for BuyButtonExternals() + 20));
  if (v1)
  {
    return v1;
  }
  else
  {
    type metadata accessor for ProfileRestrictions();
    sub_202C98((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    id result = (id)sub_26AD60();
    __break(1u);
  }
  return result;
}

uint64_t BuyButtonExternals.$profileRestrictions.getter()
{
  unint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for BuyButtonExternals() + 20));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = type metadata accessor for ProfileRestrictions();
  uint64_t v5 = sub_202C98((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);

  return EnvironmentObject.projectedValue.getter(v2, v3, v4, v5);
}

uint64_t BuyButtonExternals.referenceId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_41D2C(a1);
}

uint64_t BuyButtonExternals.assetState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BuyButtonExternals() + 28);
  long long v4 = *(_OWORD *)(v3 + 48);
  v7[2] = *(_OWORD *)(v3 + 32);
  v8[0] = v4;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)(v3 + 63);
  long long v5 = *(_OWORD *)(v3 + 16);
  v7[0] = *(_OWORD *)v3;
  v7[1] = v5;
  sub_44FD8((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, int))sub_44FC4);
  sub_413B8(a1);
  return sub_44FD8((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, int))sub_C360);
}

double BuyButtonExternals.init()@<D0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (int *)type metadata accessor for BuyButtonExternals();
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  type metadata accessor for ProfileRestrictions();
  sub_202C98((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *uint64_t v3 = sub_26AD70();
  v3[1] = v4;
  long long v5 = (uint64_t *)((char *)a1 + v2[6]);
  *long long v5 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a1 + v2[7];
  *(void *)uint64_t v6 = swift_getKeyPath();
  double result = 0.0;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 51) = 0u;
  return result;
}

uint64_t type metadata accessor for BuyButtonExternals()
{
  uint64_t result = qword_2F6080;
  if (!qword_2F6080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1FFA8C(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 20));
  if (v2)
  {
    return v2;
  }
  else
  {
    type metadata accessor for ProfileRestrictions();
    sub_202C98((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    id result = (id)sub_26AD60();
    __break(1u);
  }
  return result;
}

uint64_t sub_1FFB20@<X0>(uint64_t a1@<X8>)
{
  return sub_413B8(a1);
}

uint64_t sub_1FFB6C@<X0>(uint64_t a1@<X8>)
{
  return sub_41D2C(a1);
}

uint64_t BuyButtonViewModelBase.longCaptionAlignment.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 40));
  return result;
}

uint64_t BuyButtonViewModelBase.assetInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C224(v2 + *(int *)(a1 + 44), a2);
}

uint64_t BuyButtonViewModelBase.assetID.getter(uint64_t a1)
{
  sub_4ADC((void *)(v1 + *(int *)(a1 + 44)), *(void *)(v1 + *(int *)(a1 + 44) + 24));
  return sub_269DB0();
}

uint64_t BuyButtonViewModelBase.externals.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

void sub_1FFC34(uint64_t a1@<X8>)
{
  __int16 v2 = *v1;
  if (*v1 < 0)
  {
    if (*v1 != 1)
    {
      if (*v1) {
        goto LABEL_5;
      }
LABEL_8:
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return;
    }
LABEL_10:
    uint64_t v3 = 1;
    goto LABEL_11;
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t v3 = 2 * (v2 & 1);
    goto LABEL_11;
  }
  if (*v1 == 1) {
    goto LABEL_10;
  }
  if (!*v1) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v3 = 2;
LABEL_11:
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
}

Swift::Void __swiftcall BuyButtonViewModelBase.update()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_26A6E0();
  uint64_t v188 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  v187 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v186 = (uint64_t)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v10 - 8);
  v190 = (char *)&v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ColorConstants(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  v185 = (char *)&v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v184 = (char *)&v180 - v16;
  __chkstk_darwin(v15);
  v192 = (char *)&v180 - v17;
  v203 = (uint64_t (*)(void))sub_26CFD0();
  uint64_t v201 = *((void *)v203 - 1);
  __chkstk_darwin(v203);
  v198 = (char *)&v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_26CF60();
  uint64_t v202 = *(void *)(v200 - 8);
  uint64_t v19 = __chkstk_darwin(v200);
  v197 = (char *)&v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v199 = (char *)&v180 - v21;
  uint64_t v208 = type metadata accessor for ButtonViewModel.Content(0);
  uint64_t v22 = __chkstk_darwin(v208);
  v193 = (uint64_t *)((char *)&v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v22);
  v196 = (char *)&v180 - v25;
  __chkstk_darwin(v24);
  v195 = (char *)&v180 - v26;
  uint64_t v205 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v205);
  v207 = (uint64_t *)((char *)&v180 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_4A98(&qword_2F0D40);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v212 = (uint64_t)&v180 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v211 = (uint64_t)&v180 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v206 = (uint64_t)&v180 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v226 = (uint64_t)&v180 - v36;
  uint64_t v37 = *((void *)v3 - 1);
  uint64_t v38 = __chkstk_darwin(v35);
  v183 = (char *)&v180 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  v182 = (char *)&v180 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v215 = (char *)&v180 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v222 = (char *)&v180 - v45;
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v180 - v46;
  uint64_t v49 = (void *)(v1 + *(int *)(v48 + 52));
  sub_4ADC(v49, v49[3]);
  sub_269F20();
  int v50 = sub_26A050();
  sub_4ADC(v49, v49[3]);
  char v51 = sub_269F30();
  uint64_t v214 = v4;
  v213 = v6;
  v191 = v47;
  LODWORD(v204) = v50;
  if (v51)
  {
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, char *))(v37 + 16))(v47, v1, v3);
    __chkstk_darwin(v52);
    char v53 = v47;
    uint64_t v54 = *((void *)v3 + 3);
    uint64_t v228 = *((void *)v3 + 2);
    *(&v180 - 2) = v228;
    *(&v180 - 1) = v54;
    uint64_t KeyPath = (void *)swift_getKeyPath();
    swift_getWitnessTable();
    ViewModelWithExternals.subscript.getter(KeyPath);
    swift_release();
    (*(void (**)(char *, char *))(v37 + 8))(v53, v3);
    v56 = (void *)v229;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_26A590();

    swift_release();
    swift_release();
    int v209 = v233 ^ 1;
  }
  else
  {
    int v209 = 0;
    uint64_t v54 = *((void *)v3 + 3);
    uint64_t v228 = *((void *)v3 + 2);
  }
  int v57 = *(unsigned __int16 *)(v2 + *((int *)v3 + 9));
  uint64_t v58 = (int *)type metadata accessor for ButtonViewModel(0);
  uint64_t v194 = v58[9];
  *(unsigned char *)(v2 + v194) = (v57 & 0x80808080) == 128;
  __int16 v233 = v57;
  sub_1FFC34((uint64_t)&v229);
  long long v224 = v229;
  unint64_t v59 = v230;
  unint64_t v60 = v231;
  uint64_t v61 = (unint64_t *)(v2 + v58[10]);
  sub_1A139C(*v61);
  *(_OWORD *)uint64_t v61 = v224;
  v61[2] = v59;
  v61[3] = v60;
  sub_4ADC(v49, v49[3]);
  id v219 = (id)sub_269DD0();
  uint64_t v62 = type metadata accessor for AssetAction(0);
  uint64_t v210 = *(void *)(v62 - 8);
  uint64_t v63 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v210 + 56);
  uint64_t v217 = v62;
  uint64_t v216 = v210 + 56;
  v218 = v63;
  ((void (*)(uint64_t, uint64_t, uint64_t))v63)(v226, 1, 1);
  v221 = v58;
  uint64_t v64 = v2 + v58[14];
  sub_B6DC(v64, &qword_2EA0C0);
  uint64_t v65 = sub_26A220();
  uint64_t v66 = *(void *)(v65 - 8);
  v181 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
  uint64_t v180 = v66 + 56;
  v181(v64, 1, 1, v65);
  uint64_t v67 = *(uint64_t (**)(char *, uint64_t, char *))(v37 + 16);
  uint64_t v68 = v222;
  uint64_t v227 = v2;
  v223 = v67;
  uint64_t v69 = v67(v222, v2, v3);
  __chkstk_darwin(v69);
  *(&v180 - 2) = v228;
  *(&v180 - 1) = v54;
  uint64_t v225 = v54;
  uint64_t v70 = (void *)swift_getKeyPath();
  *(void *)&long long v224 = swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(v70);
  swift_release();
  uint64_t v71 = *(void (**)(char *, char *))(v37 + 8);
  v222 = (char *)(v37 + 8);
  v220 = v71;
  v71(v68, v3);
  if (*((void *)&v229 + 1))
  {
    unsigned int v72 = v230;
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v72 = 6;
  }
  uint64_t v73 = v215;
  uint64_t v74 = v223(v215, v227, v3);
  __chkstk_darwin(v74);
  uint64_t v75 = v225;
  *(&v180 - 2) = v228;
  *(&v180 - 1) = v75;
  uint64_t v76 = (void *)swift_getKeyPath();
  ViewModelWithExternals.subscript.getter(v76);
  swift_release();
  v215 = v3;
  v220(v73, v3);
  if (*((void *)&v229 + 1))
  {
    unint64_t v77 = v231;
    char v78 = v232;
    swift_bridgeObjectRelease();
    uint64_t v79 = v227;
    if (v72 == 4)
    {
LABEL_9:
      uint64_t v80 = v221;
      uint64_t v81 = (void *)(v79 + v221[11]);
      sub_202BE0((uint64_t)v81, type metadata accessor for ButtonViewModel.Content);
      *uint64_t v81 = 0xD000000000000015;
      v81[1] = 0x8000000000289E90;
      swift_storeEnumTagMultiPayload();
      char v82 = v204 & 1;
      uint64_t v83 = (uint64_t)v207;
      void *v207 = 0;
      *(void *)(v83 + 8) = 0;
      *(unsigned char *)(v83 + 16) = v82;
      id v84 = v219;
      *(void *)(v83 + 24) = v219;
    }
    else
    {
      if (v78)
      {
        switch(v77)
        {
          case 1uLL:
          case 2uLL:
          case 4uLL:
            if (v72 < 2) {
              goto LABEL_20;
            }
            if (v72 == 2) {
              goto LABEL_21;
            }
            if (v72 == 3) {
              goto LABEL_19;
            }
            goto LABEL_24;
          case 3uLL:
            goto LABEL_9;
          default:
            v120 = v199;
            sub_26CF50();
            v121 = v197;
            sub_26CF50();
            uint64_t v122 = v201;
            v123 = v198;
            v124 = v203;
            (*(void (**)(char *, void, uint64_t (*)(void)))(v201 + 104))(v198, enum case for LocalizerLookupStrategy.default(_:), v203);
            uint64_t v125 = (uint64_t)v195;
            sub_26A1D0();
            (*(void (**)(char *, uint64_t (*)(void)))(v122 + 8))(v123, v124);
            v126 = *(void (**)(char *, uint64_t))(v202 + 8);
            uint64_t v127 = v200;
            v126(v121, v200);
            v126(v120, v127);
            swift_storeEnumTagMultiPayload();
            uint64_t v80 = v221;
            sub_202A50(v125, v79 + v221[11], type metadata accessor for ButtonViewModel.Content);
            id v84 = v219;
            uint64_t v83 = (uint64_t)v207;
            void *v207 = v219;
            goto LABEL_13;
        }
      }
      uint64_t v80 = v221;
      uint64_t v85 = (unint64_t *)(v227 + v221[11]);
      sub_202BE0((uint64_t)v85, type metadata accessor for ButtonViewModel.Content);
      *uint64_t v85 = v77;
      swift_storeEnumTagMultiPayload();
      id v84 = v219;
      uint64_t v83 = (uint64_t)v207;
      void *v207 = v219;
    }
LABEL_13:
    swift_storeEnumTagMultiPayload();
    id v86 = v84;
    uint64_t v87 = v206;
    sub_201C1C(v83, v79, v228, v225, v206);
    sub_202BE0(v83, type metadata accessor for AssetAction.Kind);
    uint64_t v88 = v226;
    sub_B6DC(v226, &qword_2F0D40);
    uint64_t v89 = v87;
    uint64_t v90 = v217;
    uint64_t v91 = v217;
    uint64_t v92 = v218;
  }
  else
  {
    uint64_t v79 = v227;
    switch(v72)
    {
      case 0u:
      case 1u:
LABEL_20:
        uint64_t v93 = (void (**)(char *, void, uint64_t (*)(void)))(v201 + 104);
        long long v94 = (void (**)(char *, uint64_t (*)(void)))(v201 + 8);
        unint64_t v95 = (void (**)(char *, uint64_t))(v202 + 8);
        v96 = v199;
        sub_26CF50();
        v97 = v197;
        sub_26CF50();
        uint64_t v98 = v198;
        v99 = v203;
        (*v93)(v198, enum case for LocalizerLookupStrategy.default(_:), v203);
        v114 = v196;
        sub_26A1D0();
        (*v94)(v98, v99);
        v115 = *v95;
        uint64_t v116 = v200;
        (*v95)(v97, v200);
        v115(v96, v116);
        uint64_t v88 = v226;
        uint64_t v80 = v221;
        uint64_t v90 = v217;
        uint64_t v117 = v206;
        swift_storeEnumTagMultiPayload();
        uint64_t v118 = (uint64_t)v114;
        uint64_t v79 = v227;
        sub_202A50(v118, v227 + v80[11], type metadata accessor for ButtonViewModel.Content);
        uint64_t v119 = (uint64_t)v207;
        swift_storeEnumTagMultiPayload();
        sub_201C1C(v119, v79, v228, v225, v117);
        sub_202BE0(v119, type metadata accessor for AssetAction.Kind);
        sub_B6DC(v88, &qword_2F0D40);
        uint64_t v92 = v218;
        v218(v117, 0, 1, v90);
        sub_202AB8(v117, v88);
        id v84 = v219;
        if (*v61 == 2)
        {
          sub_1A139C(2uLL);
          sub_1A139C(2uLL);
        }
        else
        {
          sub_1A139C(*v61);
          sub_1A139C(2uLL);
          *(_OWORD *)uint64_t v61 = 0u;
          *((_OWORD *)v61 + 1) = 0u;
        }
        goto LABEL_34;
      case 2u:
LABEL_21:
        sub_4ADC(v49, v49[3]);
        sub_269FC0();
        uint64_t v101 = v100;
        swift_bridgeObjectRelease();
        uint64_t v102 = (uint64_t)v193;
        void *v193 = 0x72616D6B63656863;
        *(void *)(v102 + 8) = 0xE90000000000006BLL;
        if (v101)
        {
          sub_4ADC(v49, v49[3]);
          sub_269FC0();
          if (!v103)
          {
            __break(1u);
            JUMPOUT(0x201BF4);
          }
          sub_4A98(&qword_2EE438);
          sub_26A210();
          swift_bridgeObjectRelease();
        }
        uint64_t v88 = v226;
        v128 = v221;
        uint64_t v129 = v225;
        v130 = v215;
        uint64_t v131 = v194;
        swift_storeEnumTagMultiPayload();
        sub_202A50(v102, v79 + v128[11], type metadata accessor for ButtonViewModel.Content);
        *(unsigned char *)(v79 + v131) = 0;
        v132 = v191;
        uint64_t v133 = v223(v191, v79, v130);
        __chkstk_darwin(v133);
        uint64_t v134 = v228;
        *(&v180 - 2) = v228;
        *(&v180 - 1) = v129;
        v135 = (void *)swift_getKeyPath();
        uint64_t v136 = (uint64_t)v192;
        ViewModelWithExternals.subscript.getter(v135);
        swift_release();
        v137 = v220;
        v220(v132, v130);
        _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
        sub_202BE0(v136, type metadata accessor for ColorConstants);
        uint64_t v226 = sub_26C1C0();
        swift_release();
        sub_26C1B0();
        v215 = (char *)sub_26C1C0();
        swift_release();
        sub_26C1B0();
        uint64_t v208 = sub_26C1C0();
        swift_release();
        uint64_t v138 = v223(v132, v227, v130);
        __chkstk_darwin(v138);
        uint64_t v139 = v225;
        *(&v180 - 2) = v134;
        *(&v180 - 1) = v139;
        v140 = (void *)swift_getKeyPath();
        ViewModelWithExternals.subscript.getter(v140);
        uint64_t v80 = v221;
        swift_release();
        v137(v132, v130);
        _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
        uint64_t v79 = v227;
        sub_202BE0(v136, type metadata accessor for ColorConstants);
        uint64_t v141 = sub_26C1C0();
        swift_release();
        sub_1A139C(*v61);
        v142 = v215;
        *uint64_t v61 = v226;
        v61[1] = (unint64_t)v142;
        v61[2] = v208;
        v61[3] = v141;
        goto LABEL_33;
      case 3u:
LABEL_19:
        uint64_t v80 = v221;
        sub_202BE0(v79 + v221[11], type metadata accessor for ButtonViewModel.Content);
        swift_storeEnumTagMultiPayload();
        uint64_t v88 = v226;
LABEL_33:
        uint64_t v90 = v217;
        id v84 = v219;
        uint64_t v92 = v218;
        goto LABEL_34;
      case 4u:
        goto LABEL_9;
      default:
LABEL_24:
        sub_4ADC(v49, v49[3]);
        if ((sub_26A040() & 1) != 0 || (sub_4ADC(v49, v49[3]), uint64_t v104 = sub_269FC0(), !v105))
        {
          v150 = v199;
          sub_26CF50();
          v151 = v197;
          sub_26CF50();
          uint64_t v152 = v201;
          v153 = v198;
          v154 = v203;
          (*(void (**)(char *, void, uint64_t (*)(void)))(v201 + 104))(v198, enum case for LocalizerLookupStrategy.default(_:), v203);
          uint64_t v155 = (uint64_t)v195;
          sub_26A1D0();
          (*(void (**)(char *, uint64_t (*)(void)))(v152 + 8))(v153, v154);
          v156 = *(void (**)(char *, uint64_t))(v202 + 8);
          uint64_t v157 = v200;
          v156(v151, v200);
          v156(v150, v157);
          swift_storeEnumTagMultiPayload();
          uint64_t v80 = v221;
          sub_202A50(v155, v79 + v221[11], type metadata accessor for ButtonViewModel.Content);
        }
        else
        {
          uint64_t v106 = v104;
          uint64_t v107 = v105;
          uint64_t v108 = (uint64_t)v195;
          sub_26A210();
          swift_storeEnumTagMultiPayload();
          uint64_t v80 = v221;
          sub_202A50(v108, v79 + v221[11], type metadata accessor for ButtonViewModel.Content);
          sub_4A98(&qword_2EE240);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_26F990;
          *(void *)(inited + 32) = 0x6563697270;
          *(void *)(inited + 40) = 0xE500000000000000;
          *(void *)(inited + 48) = v106;
          *(void *)(inited + 56) = v107;
          sub_9368(inited);
          unint64_t v110 = v199;
          sub_26CF50();
          uint64_t v111 = v201;
          uint64_t v112 = v198;
          (*(void (**)(char *, void, uint64_t (*)(void)))(v201 + 104))(v198, enum case for LocalizerLookupStrategy.default(_:), v203);
          sub_26A1D0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t (*)(void)))(v111 + 8))(v112, v203);
          (*(void (**)(char *, uint64_t))(v202 + 8))(v110, v200);
          uint64_t v113 = (uint64_t)v190;
          v181((uint64_t)v190, 0, 1, v65);
          sub_F3450(v113, v64);
        }
        uint64_t v88 = v226;
        uint64_t v90 = v217;
        id v84 = v219;
        uint64_t v92 = v218;
        uint64_t v158 = v228;
        if (!v219) {
          goto LABEL_34;
        }
        if ([v219 isPreorder])
        {
          *(unsigned char *)(v79 + v194) = 0;
          v159 = v182;
          v160 = v215;
          uint64_t v161 = v223(v182, v79, v215);
          __chkstk_darwin(v161);
          uint64_t v162 = v225;
          *(&v180 - 2) = v158;
          *(&v180 - 1) = v162;
          v163 = (void *)swift_getKeyPath();
          uint64_t v164 = (uint64_t)v184;
          ViewModelWithExternals.subscript.getter(v163);
          swift_release();
          v165 = v220;
          v220(v159, v160);
          uint64_t v208 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
          v203 = type metadata accessor for ColorConstants;
          sub_202BE0(v164, type metadata accessor for ColorConstants);
          uint64_t v204 = sub_26C1B0();
          sub_26C1B0();
          uint64_t v202 = sub_26C1C0();
          swift_release();
          v166 = v183;
          uint64_t v167 = v223(v183, v79, v160);
          __chkstk_darwin(v167);
          *(&v180 - 2) = v228;
          *(&v180 - 1) = v162;
          id v84 = v219;
          v168 = (void *)swift_getKeyPath();
          uint64_t v169 = (uint64_t)v185;
          ViewModelWithExternals.subscript.getter(v168);
          uint64_t v79 = v227;
          swift_release();
          v165(v166, v160);
          uint64_t v170 = v186;
          sub_20B680(v169, v186, type metadata accessor for ColorConstants.Environment);
          uint64_t v171 = v188;
          v172 = v187;
          uint64_t v173 = v189;
          (*(void (**)(char *, void, uint64_t))(v188 + 104))(v187, enum case for ColorScheme.dark(_:), v189);
          sub_202C98((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
          sub_26D360();
          v174 = *(void (**)(char *, uint64_t))(v171 + 8);
          v174(v172, v173);
          v174((char *)v170, v173);
          _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
          uint64_t v175 = sub_26C1C0();
          uint64_t v158 = v228;
          swift_release();
          uint64_t v176 = v169;
          uint64_t v80 = v221;
          sub_202BE0(v176, v203);
          sub_1A139C(*v61);
          uint64_t v88 = v226;
          uint64_t v177 = v204;
          *uint64_t v61 = v208;
          v61[1] = v177;
          uint64_t v90 = v217;
          v61[2] = v202;
          v61[3] = v175;
          uint64_t v92 = v218;
        }
        uint64_t v178 = (uint64_t)v207;
        void *v207 = v84;
        swift_storeEnumTagMultiPayload();
        id v179 = v84;
        uint64_t v87 = v206;
        sub_201C1C(v178, v79, v158, v225, v206);
        sub_202BE0(v178, type metadata accessor for AssetAction.Kind);
        sub_B6DC(v88, &qword_2F0D40);
        uint64_t v89 = v87;
        uint64_t v91 = v90;
        break;
    }
  }
  v92(v89, 0, 1, v91);
  sub_202AB8(v87, v88);
LABEL_34:
  if (v209)
  {
    sub_B6DC(v88, &qword_2F0D40);
    v92(v88, 1, 1, v90);
  }
  uint64_t v143 = v211;
  sub_2029E8(v88, v211);
  v144 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 48);
  int v145 = v144(v143, 1, v90);
  uint64_t v146 = (uint64_t)v213;
  if (v145 == 1)
  {

    sub_B6DC(v143, &qword_2F0D40);
    *(_OWORD *)uint64_t v146 = 0u;
    *(_OWORD *)(v146 + 16) = 0u;
    *(void *)(v146 + 32) = 0;
  }
  else
  {
    *((void *)v213 + 3) = v90;
    *(void *)(v146 + 32) = sub_202C98(&qword_2EF798, (void (*)(uint64_t))type metadata accessor for AssetAction);
    v147 = sub_CA1C((uint64_t *)v146);
    sub_202B20(v143, (uint64_t)v147, type metadata accessor for AssetAction);
  }
  swift_storeEnumTagMultiPayload();
  sub_202A50(v146, v79 + v80[13], type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v148 = v212;
  sub_202AB8(v88, v212);
  BOOL v149 = v144(v148, 1, v90) != 1;
  sub_B6DC(v148, &qword_2F0D40);
  *(unsigned char *)(v79 + v80[12]) = v149;
}

uint64_t sub_201C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v93 = a5;
  uint64_t v95 = sub_269840();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_269C00();
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v86 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_269CC0();
  __chkstk_darwin(v11 - 8);
  uint64_t v84 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EA820);
  __chkstk_darwin(v13 - 8);
  uint64_t v88 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AssetAction.Kind(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v85 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v17 - 8);
  unint64_t v77 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2F46A0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v22 = type metadata accessor for BuyButtonViewModelBase();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v76 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v75 = (char *)&v69 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v69 - v28;
  uint64_t v30 = sub_26CB80();
  uint64_t v82 = *(void *)(v30 - 8);
  uint64_t v83 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v79 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v96 = (uint64_t)&v69 - v33;
  uint64_t v90 = a1;
  AssetAction.Kind.figaroActionType.getter((char *)&v109);
  char v34 = v109;
  LOBYTE(v98) = v109;
  uint64_t v35 = a2;
  uint64_t v36 = a2 + *(int *)(v22 + 44);
  sub_C224(v36, (uint64_t)&v109);
  unint64_t v72 = _s7BooksUI7MetricsO13actionDetails3for9assetInfoSDySSypGSgAC15ClickActionTypeO_14BookFoundation05AssetH0_ptFZ_0((uint64_t)&v98, &v109);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v109);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v78 = v35;
  uint64_t v73 = v37;
  v37(v29, v35, v22);
  sub_4ADC(&v29[*(int *)(v22 + 44)], *(void *)&v29[*(int *)(v22 + 44) + 24]);
  uint64_t v70 = sub_269DB0();
  uint64_t v71 = v38;
  uint64_t v74 = *(void (**)(char *, uint64_t))(v23 + 8);
  v74(v29, v22);
  v120[1] = 0;
  v120[0] = v34;
  uint64_t v94 = v36;
  sub_C224(v36, (uint64_t)&v109);
  sub_4ADC(&v109, *((uint64_t *)&v110 + 1));
  sub_269F60();
  uint64_t v39 = sub_2696C0();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v21, 1, v39) == 1)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v109);
    sub_B6DC((uint64_t)v21, &qword_2F46A0);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v41 = sub_269680();
    uint64_t v42 = v43;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v39);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v109);
  }
  sub_C224(v94, (uint64_t)&v109);
  sub_C224((uint64_t)&v109, (uint64_t)v97);
  sub_A2A9C(v97, 0x6C6C6950797562, 0xE700000000000000, 0, (uint64_t)&v98);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v109);
  long long v117 = v106;
  long long v118 = v107;
  long long v119 = v108;
  long long v113 = v102;
  long long v114 = v103;
  long long v115 = v104;
  long long v116 = v105;
  long long v109 = v98;
  long long v110 = v99;
  long long v111 = v100;
  long long v112 = v101;
  v97[8] = v106;
  v97[9] = v107;
  v97[10] = v108;
  v97[4] = v102;
  v97[5] = v103;
  v97[6] = v104;
  v97[7] = v105;
  v97[0] = v98;
  v97[1] = v99;
  v97[2] = v100;
  v97[3] = v101;
  static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v70, v71, v120, v72, v41, v42, v97, v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_A3F40((uint64_t)&v109);
  uint64_t v44 = v75;
  uint64_t v45 = v78;
  uint64_t v46 = v73;
  v73(v75, v78, v22);
  sub_4ADC(&v44[*(int *)(v22 + 44)], *(void *)&v44[*(int *)(v22 + 44) + 24]);
  uint64_t v47 = sub_269DB0();
  uint64_t v71 = v48;
  unint64_t v72 = v47;
  uint64_t v49 = v74;
  v74(v44, v22);
  int v50 = v76;
  uint64_t v51 = v46(v76, v45, v22);
  __chkstk_darwin(v51);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  uint64_t v53 = (uint64_t)v77;
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  v49(v50, v22);
  uint64_t v54 = v92;
  uint64_t v55 = v95;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v53, 1, v95) == 1)
  {
    sub_B6DC(v53, &qword_2EBC78);
    uint64_t v80 = 0;
    uint64_t v81 = 0;
  }
  else
  {
    uint64_t v56 = sub_269820();
    uint64_t v80 = v57;
    uint64_t v81 = v56;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
  }
  sub_C224(v94, (uint64_t)&v98);
  sub_4ADC(&v98, *((uint64_t *)&v99 + 1));
  LODWORD(v94) = sub_269F30();
  uint64_t v59 = v82;
  uint64_t v58 = v83;
  uint64_t v60 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v79, v96, v83);
  uint64_t v61 = v85;
  sub_20B680(v90, v85, type metadata accessor for AssetAction.Kind);
  AssetAction.Kind.appAnalyticsClickTargetType.getter(v84);
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, enum case for LinkActionType.click(_:), v89);
  uint64_t v62 = (uint64_t)v88;
  sub_269CD0();
  uint64_t v63 = sub_269CE0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  uint64_t v64 = v91;
  sub_269830();
  uint64_t v65 = sub_269820();
  uint64_t v67 = v66;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v64, v95);
  AssetAction.init(id:assetID:instanceID:isExplicit:actionMetrics:kind:clickData:)(v65, v67, v72, v71, v81, v80, v94 & 1, v60, v93, v61, v62);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v96, v58);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v98);
}

double sub_202608@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, void))(*(void *)(a2 + a1 - 8) + 32))(v8, *(void *)(a2 + a1 - 16));
  __int16 v4 = v11;
  long long v5 = v8[1];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v5;
  double result = *(double *)&v9;
  long long v7 = v10;
  *(_OWORD *)(a3 + 32) = v9;
  *(_OWORD *)(a3 + 48) = v7;
  *(_WORD *)(a3 + 64) = v4;
  return result;
}

uint64_t sub_202674()
{
  return 16;
}

__n128 sub_202680(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

Swift::Int sub_202690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_202984(a1, a2, a3, (void (*)(unsigned char *))VerticalMasonryCoverGridViewModel.GridStyle.hash(into:));
}

uint64_t sub_2026A8(void *a1)
{
  uint64_t v2 = sub_26CF60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[3];
  v11[1] = a1[4];
  sub_4ADC(a1, v6);
  sub_4A98(&qword_2EE240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26F990;
  *(void *)(inited + 32) = 1702125924;
  *(void *)(inited + 40) = 0xE400000000000000;
  sub_4ADC(a1, a1[3]);
  *(void *)(inited + 48) = sub_26D1F0();
  *(void *)(inited + 56) = v8;
  sub_9368(inited);
  sub_26CF50();
  uint64_t v9 = sub_26D210();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_202874()
{
  uint64_t v1 = sub_269810();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_202904@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 24))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_20294C()
{
  return 16;
}

__n128 sub_202958(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

Swift::Int sub_20296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_202984(a1, a2, a3, (void (*)(unsigned char *))ShelfGridPaddleButtonView.Direction.hash(into:));
}

Swift::Int sub_202984(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_26DEF0();
  a4(v6);
  return sub_26DF20();
}

uint64_t type metadata accessor for BuyButtonViewModelBase.ButtonType()
{
  return sub_129B4();
}

uint64_t sub_2029E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_202A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_202AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F0D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_202B20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_202B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 16))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_202BC8()
{
  return 16;
}

__n128 sub_202BD4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_202BE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_202C40(uint64_t a1)
{
  uint64_t result = sub_202C98(&qword_2F5FF8, (void (*)(uint64_t))type metadata accessor for BuyButtonExternals);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_202C98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_202CE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_202CFC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_202D38()
{
  return swift_getWitnessTable();
}

uint64_t sub_202D54()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of BuyButtonExternalsProtocol.colors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BuyButtonExternalsProtocol.profileRestrictions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BuyButtonExternalsProtocol.assetState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BuyButtonExternalsProtocol.referenceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for BuyButtonExternals(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (char *)a2 + v10;
    uint64_t v15 = *(void **)v13;
    uint64_t v14 = *((void *)v13 + 1);
    void *v12 = v15;
    v12[1] = v14;
    uint64_t v16 = (uint64_t *)((char *)a1 + v11);
    uint64_t v17 = (uint64_t *)((char *)a2 + v11);
    id v18 = v15;
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_269840();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        uint64_t v21 = sub_4A98(&qword_2EBC78);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v16, v17, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *((void *)v24 + 1);
    uint64_t v27 = *((void *)v24 + 2);
    uint64_t v28 = *((void *)v24 + 3);
    uint64_t v29 = *((void *)v24 + 4);
    uint64_t v30 = *((void *)v24 + 5);
    uint64_t v31 = *((void *)v24 + 6);
    uint64_t v32 = *((void *)v24 + 7);
    uint64_t v36 = a1;
    __int16 v33 = *((_WORD *)v24 + 32);
    sub_44FC4(*(void *)v24, v26, v27, v28, v29, v30, v31, v32, v33, v24[66]);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    *((void *)v23 + 2) = v27;
    *((void *)v23 + 3) = v28;
    *((void *)v23 + 4) = v29;
    *((void *)v23 + 5) = v30;
    *((void *)v23 + 6) = v31;
    *((void *)v23 + 7) = v32;
    *((_WORD *)v23 + 32) = v33;
    uint64_t v9 = v36;
    v23[66] = v35;
  }
  return v9;
}

uint64_t destroy for BuyButtonExternals(uint64_t a1, int *a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = a1 + a2[6];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_269840();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  return sub_C360(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(_WORD *)(v8 + 64), *(unsigned char *)(v8 + 66));
}

void *initializeWithCopy for BuyButtonExternals(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v12 = *(void **)v10;
  uint64_t v11 = *((void *)v10 + 1);
  void *v9 = v12;
  v9[1] = v11;
  uint64_t v13 = (void *)((char *)a1 + v8);
  uint64_t v14 = (void *)((char *)a2 + v8);
  id v15 = v12;
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_269840();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EBC78);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v13, v14, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  uint64_t v24 = *((void *)v21 + 2);
  uint64_t v25 = *((void *)v21 + 3);
  uint64_t v26 = *((void *)v21 + 4);
  uint64_t v27 = *((void *)v21 + 5);
  uint64_t v28 = *((void *)v21 + 6);
  uint64_t v29 = *((void *)v21 + 7);
  __int16 v33 = a1;
  __int16 v30 = *((_WORD *)v21 + 32);
  sub_44FC4(*(void *)v21, v23, v24, v25, v26, v27, v28, v29, v30, v21[66]);
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  *((void *)v20 + 2) = v24;
  *((void *)v20 + 3) = v25;
  *((void *)v20 + 4) = v26;
  *((void *)v20 + 5) = v27;
  *((void *)v20 + 6) = v28;
  *((void *)v20 + 7) = v29;
  *((_WORD *)v20 + 32) = v30;
  v20[66] = v32;
  return v33;
}

void *assignWithCopy for BuyButtonExternals(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a1 + v7);
  uint64_t v11 = *(void **)((char *)a2 + v7);
  *uint64_t v8 = v11;
  id v12 = v11;

  v8[1] = *((void *)v9 + 1);
  if (a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    id v15 = (void *)((char *)a2 + v13);
    sub_B6DC((uint64_t)a1 + v13, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_269840();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_4A98(&qword_2EBC78);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  uint64_t v24 = *((void *)v21 + 2);
  uint64_t v25 = *((void *)v21 + 3);
  uint64_t v26 = *((void *)v21 + 4);
  uint64_t v27 = *((void *)v21 + 5);
  uint64_t v28 = *((void *)v21 + 6);
  uint64_t v29 = *((void *)v21 + 7);
  uint64_t v43 = a1;
  __int16 v30 = *((_WORD *)v21 + 32);
  sub_44FC4(*(void *)v21, v23, v24, v25, v26, v27, v28, v29, v30, v21[66]);
  uint64_t v31 = *(void *)v20;
  uint64_t v32 = *((void *)v20 + 1);
  uint64_t v33 = *((void *)v20 + 2);
  uint64_t v34 = *((void *)v20 + 3);
  uint64_t v35 = *((void *)v20 + 4);
  uint64_t v36 = *((void *)v20 + 5);
  uint64_t v37 = *((void *)v20 + 6);
  uint64_t v38 = *((void *)v20 + 7);
  __int16 v39 = *((_WORD *)v20 + 32);
  char v40 = v20[66];
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  *((void *)v20 + 2) = v24;
  *((void *)v20 + 3) = v25;
  *((void *)v20 + 4) = v26;
  *((void *)v20 + 5) = v27;
  *((void *)v20 + 6) = v28;
  *((void *)v20 + 7) = v29;
  *((_WORD *)v20 + 32) = v30;
  v20[66] = v42;
  sub_C360(v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  return v43;
}

char *initializeWithTake for BuyButtonExternals(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_269840();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = sub_4A98(&qword_2EBC78);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  long long v18 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v18;
  *(_DWORD *)(v16 + 63) = *(_DWORD *)(v17 + 63);
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  return a1;
}

char *assignWithTake for BuyButtonExternals(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void **)&a1[v8];
  *(void *)uint64_t v9 = *(void *)v10;

  *((void *)v9 + 1) = *((void *)v10 + 1);
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    sub_B6DC((uint64_t)&a1[v12], &qword_2EB918);
    uint64_t v15 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_269840();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        uint64_t v18 = sub_4A98(&qword_2EBC78);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v13, v14, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  __int16 v22 = *((_WORD *)v21 + 32);
  char v23 = v21[66];
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *((void *)v20 + 1);
  uint64_t v26 = *((void *)v20 + 2);
  uint64_t v27 = *((void *)v20 + 3);
  uint64_t v28 = *((void *)v20 + 4);
  uint64_t v29 = *((void *)v20 + 5);
  uint64_t v30 = *((void *)v20 + 6);
  uint64_t v31 = *((void *)v20 + 7);
  __int16 v32 = *((_WORD *)v20 + 32);
  char v33 = v20[66];
  long long v34 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v34;
  long long v35 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v35;
  *((_WORD *)v20 + 32) = v22;
  v20[66] = v23;
  sub_C360(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for BuyButtonExternals(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_203D20);
}

uint64_t sub_203D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2ED910);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for BuyButtonExternals(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_203E74);
}

uint64_t sub_203E74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_4A98(&qword_2ED910);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_203FA8()
{
  sub_E0D90();
  if (v0 <= 0x3F)
  {
    sub_802FC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_204080()
{
  uint64_t result = type metadata accessor for ButtonViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_204168(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = sub_4A98(&qword_2EBDF0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v125 = *(void *)(v4 + 64);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = sub_26A6E0();
  uint64_t v119 = *(void *)(v6 - 8);
  uint64_t v120 = v6;
  int v7 = *(_DWORD *)(v119 + 80);
  uint64_t v8 = v7 & 0xF8 | 7;
  unint64_t v9 = *(void *)(v119 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unint64_t v126 = v9;
  uint64_t v122 = sub_26A220();
  uint64_t v129 = *(void *)(v122 - 8);
  int v10 = *(_DWORD *)(v129 + 80);
  uint64_t v11 = v10;
  unint64_t v12 = *(void *)(v129 + 64);
  unint64_t v13 = ((v11 + 24) & ~v11) + v12;
  if (v12 > v13) {
    unint64_t v13 = *(void *)(*(void *)(v122 - 8) + 64);
  }
  uint64_t v118 = v10 + 16;
  if (v13 <= (v118 & ~(unint64_t)v10) + v12) {
    unint64_t v13 = ((v10 + 16) & ~(unint64_t)v10) + v12;
  }
  unint64_t v117 = v12 + 7;
  if (v13 <= ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v13 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v116 = v12 + v10;
  if (v13 <= (v116 & ~(unint64_t)v10) + v12) {
    unint64_t v13 = ((v12 + v10) & ~(unint64_t)v10) + v12;
  }
  if (v13 <= 0x10) {
    unint64_t v13 = 16;
  }
  unint64_t v130 = v13;
  if (v13 > 3
    || ((unsigned int v14 = ((1 << (8 * v13)) | 2u) >> (8 * v13), v14 <= 0xFFF8) ? (v15 = 2) : (v15 = 4), v14 <= 0xF8))
  {
    uint64_t v15 = 1;
  }
  uint64_t v16 = sub_2696C0();
  int v17 = *(_DWORD *)(*(void *)(v16 - 8) + 80);
  uint64_t v18 = v17 & 0xF8 | 7;
  if (*(void *)(*(void *)(v16 - 8) + 64) <= 0x28uLL) {
    uint64_t v19 = 40;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v16 - 8) + 64);
  }
  if (*(_DWORD *)(v129 + 84)) {
    size_t v20 = v12;
  }
  else {
    size_t v20 = v12 + 1;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80);
  unint64_t v24 = v8 | v5 | v10 | (unint64_t)v18 | v23;
  if (v24 != 7
    || ((v7 | v5 | v10 | v17 | *(_DWORD *)(v22 + 80)) & 0x100000) != 0
    || (uint64_t v25 = v125 + v5,
        ((v23
        + 40
        + ((v20
          + ((v19
            + v11
            + 1
            + ((((v11
                + ((v126 + ((v125 + v8 + (v25 & ~(unint64_t)v5)) & ~v8) + 11) & 0xFFFFFFFFFFFFFFF8)
                + 32) & ~(v11 | 7) | 1)
              + v130
              + v15
              + v18) & ~v18)) & ~v11)
          + 10) & 0xFFFFFFFFFFFFFFF8)) & ~v23)
      + *(void *)(v22 + 64) > 0x18))
  {
    uint64_t v38 = *a2;
    *a1 = *a2;
    long long v35 = (uint64_t *)(v38 + ((v24 + 16) & ~v24));
    swift_retain();
    return v35;
  }
  uint64_t v107 = *(void *)(v16 - 8);
  uint64_t v108 = v16;
  uint64_t v121 = v19;
  uint64_t v109 = v19 + v11 + 1;
  unint64_t v110 = ((v11
         + ((v126 + ((v125 + v8 + ((v125 + v5) & ~(unint64_t)v5)) & ~v8) + 11) & 0xFFFFFFFFFFFFFFF8)
         + 32) & ~(v11 | 7) | 1)
       + v130;
  uint64_t v111 = *(_DWORD *)(v22 + 80);
  uint64_t v112 = v23 + 40;
  size_t __n = v20;
  uint64_t v114 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v124 = v17 & 0xF8 | 7;
  uint64_t v115 = v21;
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
  v26(a1, a2, v3);
  unint64_t v27 = ((unint64_t)a1 + v25) & ~(unint64_t)v5;
  unint64_t v28 = ((unint64_t)a2 + v25) & ~(unint64_t)v5;
  v26((uint64_t *)v27, (uint64_t *)v28, v3);
  uint64_t v29 = (void *)((v27 + v125 + v8) & ~v8);
  uint64_t v30 = (unsigned __int8 *)((v28 + v125 + v8) & ~v8);
  unsigned int v31 = v30[v126];
  unsigned int v32 = v31 - 2;
  if (v31 < 2)
  {
    long long v35 = a1;
    uint64_t v34 = v122;
    uint64_t v36 = ~v11;
  }
  else
  {
    if (v126 <= 3) {
      uint64_t v33 = v126;
    }
    else {
      uint64_t v33 = 4;
    }
    uint64_t v34 = v122;
    long long v35 = a1;
    uint64_t v36 = ~v11;
    switch(v33)
    {
      case 1:
        int v37 = *v30;
        if (v126 < 4) {
          goto LABEL_38;
        }
        goto LABEL_42;
      case 2:
        int v37 = *(unsigned __int16 *)v30;
        if (v126 < 4) {
          goto LABEL_38;
        }
        goto LABEL_42;
      case 3:
        int v37 = *(unsigned __int16 *)v30 | (v30[2] << 16);
        if (v126 < 4) {
          goto LABEL_38;
        }
        goto LABEL_42;
      case 4:
        int v37 = *(_DWORD *)v30;
        if (v126 < 4) {
LABEL_38:
        }
          unsigned int v31 = (v37 | (v32 << (8 * v126))) + 2;
        else {
LABEL_42:
        }
          unsigned int v31 = v37 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v39 = v126 + 1;
  if (v31 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v119 + 16))(v29, v30, v120);
    char v40 = 1;
  }
  else
  {
    *uint64_t v29 = *(void *)v30;
    swift_retain();
    char v40 = 0;
  }
  uint64_t v41 = v11 | 7;
  uint64_t v42 = ~(v11 | 7);
  *((unsigned char *)v29 + v126) = v40;
  uint64_t v43 = (char *)v29 + v39;
  uint64_t v44 = &v30[v39];
  unsigned char *v43 = v30[v39];
  v43[1] = v30[v39 + 1];
  v43[2] = v30[v39 + 2];
  unint64_t v45 = ((unint64_t)v29 + v39 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = (unint64_t)(v44 + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v46 < 0xFFFFFFFFuLL)
  {
    long long v47 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)unint64_t v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v47;
  }
  else
  {
    *(void *)unint64_t v45 = *(void *)v46;
    *(void *)(v45 + 8) = *(void *)(v46 + 8);
    *(void *)(v45 + 16) = *(void *)(v46 + 16);
    *(void *)(v45 + 24) = *(void *)(v46 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v41 = v11 | 7;
  }
  unint64_t v48 = v130;
  uint64_t v49 = v124;
  int v50 = (unsigned __int8 *)((v46 + v41 + 32) & v42);
  uint64_t v51 = v129;
  if (v130 > 3) {
    goto LABEL_52;
  }
  unsigned int v52 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
  if (v52 > 0xFFF8)
  {
    unsigned int v53 = *(_DWORD *)&v50[v130];
  }
  else
  {
    if (v52 <= 0xF8)
    {
LABEL_52:
      unsigned int v53 = v50[v130];
      goto LABEL_55;
    }
    unsigned int v53 = *(unsigned __int16 *)&v50[v130];
  }
LABEL_55:
  uint64_t v54 = (void *)((v45 + v41 + 32) & v42);
  unsigned int v55 = v53 - 7;
  if (v53 >= 7)
  {
    if (v130 <= 3) {
      uint64_t v56 = v130;
    }
    else {
      uint64_t v56 = 4;
    }
    switch(v56)
    {
      case 1:
        int v57 = *v50;
        if (v130 < 4) {
          goto LABEL_67;
        }
        goto LABEL_68;
      case 2:
        int v57 = *(unsigned __int16 *)v50;
        if (v130 >= 4) {
          goto LABEL_68;
        }
        goto LABEL_67;
      case 3:
        int v57 = *(unsigned __int16 *)v50 | (v50[2] << 16);
        if (v130 >= 4) {
          goto LABEL_68;
        }
        goto LABEL_67;
      case 4:
        int v57 = *(_DWORD *)v50;
        if (v130 < 4) {
LABEL_67:
        }
          v57 |= v55 << (8 * v130);
LABEL_68:
        unsigned int v53 = v57 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v58 = ~v124;
  switch(v53)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v129 + 16))(v54, v50, v34);
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_73;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        *(_DWORD *)((char *)v54 + v130) = 0;
      }
      else
      {
        if (v62 <= 0xF8)
        {
LABEL_73:
          *((unsigned char *)v54 + v130) = 0;
          goto LABEL_99;
        }
        *(_WORD *)((char *)v54 + v130) = 0;
      }
      goto LABEL_130;
    case 1u:
      void *v54 = *(void *)v50;
      v54[1] = *((void *)v50 + 1);
      swift_bridgeObjectRetain();
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_84;
      }
      int v65 = 1;
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8) {
        goto LABEL_120;
      }
      if (v62 > 0xF8) {
        goto LABEL_129;
      }
LABEL_84:
      char v66 = 1;
      goto LABEL_98;
    case 2u:
      void *v54 = *(void *)v50;
      v54[1] = *((void *)v50 + 1);
      uint64_t v67 = (void *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v68 = (void **)((unint64_t)(v50 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v69 = *v68;
      *uint64_t v67 = *v68;
      uint64_t v70 = ((unint64_t)v67 + v11 + 8) & v36;
      uint64_t v71 = ((unint64_t)v68 + v11 + 8) & v36;
      unint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16);
      swift_bridgeObjectRetain();
      id v73 = v69;
      uint64_t v74 = v70;
      unint64_t v48 = v130;
      v72(v74, v71, v34);
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_88;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        *(_DWORD *)((char *)v54 + v130) = 2;
      }
      else
      {
        if (v62 <= 0xF8)
        {
LABEL_88:
          *((unsigned char *)v54 + v130) = 2;
          uint64_t v51 = v129;
          goto LABEL_93;
        }
        *(_WORD *)((char *)v54 + v130) = 2;
      }
      uint64_t v51 = v129;
      goto LABEL_127;
    case 3u:
      void *v54 = *(void *)v50;
      v54[1] = *((void *)v50 + 1);
      uint64_t v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v129 + 16);
      swift_bridgeObjectRetain();
      unint64_t v48 = v130;
      v75(((unint64_t)v54 + v118) & v36, (unint64_t)&v50[v118] & v36, v34);
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_92;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        *(_DWORD *)((char *)v54 + v130) = 3;
      }
      else
      {
        if (v62 <= 0xF8)
        {
LABEL_92:
          *((unsigned char *)v54 + v130) = 3;
LABEL_93:
          uint64_t v49 = v124;
          uint64_t v36 = ~v11;
LABEL_105:
          uint64_t v58 = ~v124;
          if (v48 > 3) {
            goto LABEL_112;
          }
LABEL_109:
          unsigned int v79 = ((1 << (8 * v48)) | 2u) >> (8 * v48);
          uint64_t v80 = 2;
          if (v79 > 0xFFF8) {
            uint64_t v80 = 4;
          }
          if (v79 > 0xF8) {
            goto LABEL_136;
          }
          goto LABEL_112;
        }
        *(_WORD *)((char *)v54 + v130) = 3;
      }
LABEL_127:
      uint64_t v49 = v124;
      uint64_t v36 = ~v11;
      goto LABEL_133;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v129 + 16))(v54, v50, v34);
      uint64_t v76 = (void *)(((unint64_t)v54 + v117) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v77 = (void *)((unint64_t)&v50[v117] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v76 = *v77;
      v76[1] = v77[1];
      swift_bridgeObjectRetain();
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_97;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        int v65 = 4;
LABEL_120:
        *(_DWORD *)((char *)v54 + v130) = v65;
LABEL_130:
        uint64_t v49 = v124;
        goto LABEL_134;
      }
      if (v62 > 0xF8)
      {
        LOWORD(v65) = 4;
LABEL_129:
        *(_WORD *)((char *)v54 + v130) = v65;
        goto LABEL_130;
      }
LABEL_97:
      char v66 = 4;
LABEL_98:
      *((unsigned char *)v54 + v130) = v66;
LABEL_99:
      uint64_t v49 = v124;
      if (v130 <= 3) {
        goto LABEL_109;
      }
LABEL_112:
      uint64_t v80 = 1;
LABEL_136:
      unint64_t v82 = v80 + v48;
      uint64_t v83 = (unsigned __int8 *)v54 + v82;
      uint64_t v84 = &v50[v82];
      *uint64_t v83 = *v84;
      uint64_t v85 = (unint64_t)&v83[v49 + 1] & v58;
      id v86 = (unsigned __int8 *)((unint64_t)&v84[v49 + 1] & v58);
      unsigned int v87 = v86[v59];
      unsigned int v88 = v87 - 2;
      if (v87 >= 2)
      {
        if (v59 <= 3) {
          uint64_t v89 = v59;
        }
        else {
          uint64_t v89 = 4;
        }
        switch(v89)
        {
          case 1:
            int v90 = *v86;
            if (v59 >= 4) {
              goto LABEL_150;
            }
            goto LABEL_144;
          case 2:
            int v90 = *(unsigned __int16 *)v86;
            if (v59 < 4) {
              goto LABEL_144;
            }
            goto LABEL_150;
          case 3:
            int v90 = *(unsigned __int16 *)v86 | (v86[2] << 16);
            if (v59 < 4) {
              goto LABEL_144;
            }
            goto LABEL_150;
          case 4:
            int v90 = *(_DWORD *)v86;
            if (v59 < 4)
            {
LABEL_144:
              unsigned int v87 = (v90 | (v88 << (8 * v59))) + 2;
              break;
            }
LABEL_150:
            if (v90 != -1) {
              goto LABEL_151;
            }
            goto LABEL_146;
          default:
            break;
        }
      }
      if (v87 == 1)
      {
LABEL_146:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v61 + 16))(v85, v86, v60);
        uint64_t v59 = v121;
        char v91 = 1;
      }
      else
      {
LABEL_151:
        unint64_t v92 = *((void *)v86 + 3);
        if (v92 < 0xFFFFFFFF)
        {
          char v91 = 0;
          long long v93 = *(_OWORD *)v86;
          long long v94 = *((_OWORD *)v86 + 1);
          *(void *)(v85 + 32) = *((void *)v86 + 4);
          *(_OWORD *)uint64_t v85 = v93;
          *(_OWORD *)(v85 + 16) = v94;
        }
        else
        {
          *(void *)(v85 + 24) = v92;
          *(void *)(v85 + 32) = *((void *)v86 + 4);
          (**(void (***)(uint64_t, unsigned __int8 *))(v92 - 8))(v85, v86);
          uint64_t v59 = v121;
          char v91 = 0;
        }
      }
      *(unsigned char *)(v85 + v59) = v91;
      uint64_t v95 = (void *)((v109 + v85) & v36);
      uint64_t v96 = (const void *)((unint64_t)&v86[v109] & v36);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v96, 1, v34))
      {
        size_t v97 = __n;
        memcpy(v95, v96, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v95, v96, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v95, 0, 1, v34);
        size_t v97 = __n;
      }
      if (v48 > 3) {
        goto LABEL_161;
      }
      unsigned int v98 = ((1 << (8 * v48)) | 2u) >> (8 * v48);
      uint64_t v99 = 2;
      if (v98 > 0xFFF8) {
        uint64_t v99 = 4;
      }
      if (v98 <= 0xF8) {
LABEL_161:
      }
        uint64_t v99 = 1;
      size_t v100 = ((v109 + ((v110 + v124 + v99) & ~v124)) & v36) + v97;
      long long v101 = (char *)v35 + v100;
      long long v102 = (char *)a2 + v100;
      *(_WORD *)long long v101 = *(_WORD *)v102;
      v101[2] = v102[2];
      unint64_t v103 = (unint64_t)(v101 + 10) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = (unint64_t)(v102 + 10) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v105 = *(void *)(v104 + 24);
      *(void *)(v103 + 24) = v105;
      *(void *)(v103 + 32) = *(void *)(v104 + 32);
      (**(void (***)(unint64_t, unint64_t))(v105 - 8))(v103, v104);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16))((v112 + v103) & ~v111, (v112 + v104) & ~v111, v115);
      return v35;
    case 5u:
      uint64_t v78 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v129 + 16);
      v78(v54, v50, v34);
      v78((void *)(((unint64_t)v54 + v116) & v36), (unsigned __int8 *)((unint64_t)&v50[v116] & v36), v34);
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_104;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        *(_DWORD *)((char *)v54 + v130) = 5;
      }
      else
      {
        if (v62 <= 0xF8)
        {
LABEL_104:
          *((unsigned char *)v54 + v130) = 5;
          uint64_t v49 = v124;
          goto LABEL_105;
        }
        *(_WORD *)((char *)v54 + v130) = 5;
      }
      uint64_t v49 = v124;
LABEL_133:
      uint64_t v58 = ~v124;
      goto LABEL_134;
    case 6u:
      void *v54 = *(void *)v50;
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_108;
      }
      unsigned int v62 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      if (v62 > 0xFFF8)
      {
        *(_DWORD *)((char *)v54 + v130) = 6;
      }
      else
      {
        if (v62 <= 0xF8)
        {
LABEL_108:
          *((unsigned char *)v54 + v130) = 6;
          if (v130 > 3) {
            goto LABEL_112;
          }
          goto LABEL_109;
        }
        *(_WORD *)((char *)v54 + v130) = 6;
      }
LABEL_134:
      BOOL v81 = v62 > 0xFFF8;
      uint64_t v80 = 2;
      if (v81) {
        uint64_t v80 = 4;
      }
      goto LABEL_136;
    default:
      if (v130 > 3) {
        goto LABEL_78;
      }
      unsigned int v63 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      uint64_t v64 = 2;
      if (v63 > 0xFFF8) {
        uint64_t v64 = 4;
      }
      if (v63 <= 0xF8) {
LABEL_78:
      }
        uint64_t v64 = 1;
      memcpy(v54, v50, v64 + v130);
      uint64_t v49 = v124;
      uint64_t v59 = v121;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      if (v130 > 3) {
        goto LABEL_112;
      }
      goto LABEL_109;
  }
}

uint64_t sub_205070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_4A98(&qword_2EBDF0);
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = v4 + 8;
  v5(a1, v3);
  uint64_t v7 = *(void *)(v6 + 56);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 72);
  uint64_t v64 = a1;
  uint64_t v62 = v7 + v8;
  uint64_t v60 = v8;
  uint64_t v9 = (v7 + v8 + a1) & ~v8;
  v5(v9, v3);
  uint64_t v10 = sub_26A6E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v63 = v7;
  uint64_t v61 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  unint64_t v12 = (unsigned __int8 *)((v7 + v61 + v9) & ~v61);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        if (v13 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        if (v13 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v17 = *(unsigned __int16 *)((v7 + v61 + v9) & ~v61) | (*((unsigned __int8 *)&def_5F050
                                                               + ((v7 + v61 + v9) & ~v61)
                                                               + 2) << 16);
        if (v13 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v17 = *(_DWORD *)v12;
        if (v13 < 4)
        {
LABEL_14:
          unsigned int v14 = (v17 | (v15 << (8 * v13))) + 2;
          break;
        }
LABEL_18:
        if (v17 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v14 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(v12, v10);
  else {
LABEL_19:
  }
    swift_release();
  uint64_t v59 = v13 + 11;
  uint64_t v18 = (void *)((unint64_t)&v12[v13 + 11] & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v66 = sub_26A220();
  uint64_t v19 = *(void *)(v66 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v58 = v20 | 7;
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)v18 + (v20 | 7) + 32) & ~(v20 | 7));
  unint64_t v22 = *(void *)(v19 + 64);
  unint64_t v23 = ((v20 + 24) & ~v20) + v22;
  if (v22 > v23) {
    unint64_t v23 = *(void *)(*(void *)(v66 - 8) + 64);
  }
  if (v23 <= ((v20 + 16) & ~v20) + v22) {
    unint64_t v23 = ((v20 + 16) & ~v20) + v22;
  }
  if (v23 <= ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v23 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v23 <= ((v22 + v20) & ~v20) + v22) {
    unint64_t v23 = ((v22 + v20) & ~v20) + v22;
  }
  if (v23 <= 0x10) {
    uint64_t v24 = 16;
  }
  else {
    uint64_t v24 = v23;
  }
  char v25 = 8 * v24;
  if (v24 > 3) {
    goto LABEL_34;
  }
  unsigned int v27 = ((1 << v25) | 2u) >> v25;
  if (v27 > 0xFFF8)
  {
    unsigned int v26 = *(_DWORD *)&v21[v24];
  }
  else
  {
    if (v27 <= 0xF8)
    {
LABEL_34:
      unsigned int v26 = v21[v24];
      goto LABEL_39;
    }
    unsigned int v26 = *(unsigned __int16 *)&v21[v24];
  }
LABEL_39:
  unsigned int v28 = v26 - 7;
  if (v26 >= 7)
  {
    if (v24 <= 3) {
      uint64_t v29 = v24;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *v21;
        if (v24 < 4) {
          goto LABEL_51;
        }
        goto LABEL_52;
      case 2:
        int v30 = *(unsigned __int16 *)v21;
        if (v24 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 3:
        int v30 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        if (v24 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 4:
        int v30 = *(_DWORD *)v21;
        if (v24 < 4) {
LABEL_51:
        }
          v30 |= v28 << v25;
LABEL_52:
        unsigned int v26 = v30 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v31 = ~v20;
  switch(v26)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v21, v66);
      goto LABEL_60;
    case 1u:
      swift_bridgeObjectRelease();
      if (v24 > 3) {
        goto LABEL_68;
      }
      goto LABEL_64;
    case 2u:
      swift_bridgeObjectRelease();
      unsigned int v32 = (id *)((unint64_t)(v21 + 23) & 0xFFFFFFFFFFFFFFF8);

      uint64_t v33 = (uint64_t)v32 + v20 + 8;
      goto LABEL_59;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t)&v21[v20 + 16];
LABEL_59:
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v33 & v31, v66);
LABEL_60:
      if (v24 > 3) {
        goto LABEL_68;
      }
      goto LABEL_64;
    case 4u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v21, v66);
      swift_bridgeObjectRelease();
      goto LABEL_63;
    case 5u:
      unint64_t v45 = *(void (**)(unsigned __int8 *, uint64_t))(v19 + 8);
      v45(v21, v66);
      v45((unsigned __int8 *)((unint64_t)&v21[v22 + v20] & v31), v66);
      if (v24 > 3) {
        goto LABEL_68;
      }
      goto LABEL_64;
    default:
LABEL_63:
      if (v24 > 3) {
        goto LABEL_68;
      }
LABEL_64:
      unsigned int v34 = ((1 << v25) | 2u) >> v25;
      if (v34 <= 0xFFF8) {
        uint64_t v35 = 2;
      }
      else {
        uint64_t v35 = 4;
      }
      if (v34 <= 0xF8) {
LABEL_68:
      }
        uint64_t v35 = 1;
      uint64_t v36 = sub_2696C0();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = *(_DWORD *)(v37 + 80) & 0xF8 | 7;
      unint64_t v39 = (unsigned __int8 *)((unint64_t)&v21[v24 + 1 + v35 + v38] & ~v38);
      if (*(void *)(v37 + 64) <= 0x28uLL) {
        uint64_t v40 = 40;
      }
      else {
        uint64_t v40 = *(void *)(*(void *)(v36 - 8) + 64);
      }
      unsigned int v41 = v39[v40];
      unsigned int v42 = v41 - 2;
      if (v41 >= 2)
      {
        if (v40 <= 3) {
          uint64_t v43 = v40;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v39;
            goto LABEL_83;
          case 2:
            int v44 = *(unsigned __int16 *)v39;
            goto LABEL_83;
          case 3:
            int v44 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_83;
          case 4:
            int v44 = *(_DWORD *)v39;
LABEL_83:
            int v46 = (v44 | (v42 << (8 * v40))) + 2;
            unsigned int v41 = v44 + 2;
            if (v40 < 4) {
              unsigned int v41 = v46;
            }
            break;
          default:
            break;
        }
      }
      if (v41 == 1)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v37 + 8))(v39, v36);
      }
      else if (*((void *)v39 + 3) >= 0xFFFFFFFFuLL)
      {
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v39);
      }
      uint64_t v47 = v40 + v20 + 1;
      unint64_t v48 = (unint64_t)&v39[v47] & v31;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v48, 1, v66)) {
        (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v48, v66);
      }
      if (v24 <= 3) {
        unsigned int v49 = (((1 << v25) | 2u) >> v25) + 7;
      }
      else {
        unsigned int v49 = 8;
      }
      uint64_t v50 = 4;
      if (v49 < 0x10000) {
        uint64_t v50 = 2;
      }
      if (v49 < 0x100) {
        uint64_t v51 = 1;
      }
      else {
        uint64_t v51 = v50;
      }
      uint64_t v52 = v64 + v22;
      if (!*(_DWORD *)(v19 + 84)) {
        ++v52;
      }
      unint64_t v53 = (v52
           + ((v47
             + ((((((v59 + (((v62 & ~v60) + v63 + v61) & ~v61)) & 0xFFFFFFFFFFFFFFF8) + v58 + 32) & ~v58 | 1)
               + v24
               + v38
               + v51) & ~v38)) & v31)
           + 10) & 0xFFFFFFFFFFFFFFF8;
      _s7BooksUI13AnyPagedFrameVwxx_0(v53);
      uint64_t v54 = *(void *)(*(void *)(a2 + 16) - 8);
      unsigned int v55 = *(uint64_t (**)(unint64_t))(v54 + 8);
      unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + v53 + 40) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      return v55(v56);
  }
}

uint64_t sub_205874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_4A98(&qword_2EBDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  uint64_t v9 = *(void *)(v8 + 48);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
  uint64_t v114 = a1;
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v112 = a2;
  uint64_t v110 = v9 + v10;
  uint64_t v108 = v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v7(v11, v12, v5);
  uint64_t v13 = sub_26A6E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v111 = v9;
  uint64_t v16 = (void *)((v9 + v15 + v11) & ~v15);
  int v17 = (unsigned __int8 *)((v9 + v15 + v12) & ~v15);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        if (v18 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_12;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        if (v18 < 4) {
          goto LABEL_12;
        }
        goto LABEL_18;
      case 3:
        int v22 = *(unsigned __int16 *)((v9 + v15 + v12) & ~v15) | (*((unsigned __int8 *)&def_5F050
                                                                + ((v9 + v15 + v12) & ~v15)
                                                                + 2) << 16);
        if (v18 < 4) {
          goto LABEL_12;
        }
        goto LABEL_18;
      case 4:
        int v22 = *(_DWORD *)v17;
        if (v18 < 4)
        {
LABEL_12:
          unsigned int v19 = (v22 | (v20 << (8 * v18))) + 2;
          break;
        }
LABEL_18:
        if (v22 != -1) {
          goto LABEL_19;
        }
        goto LABEL_14;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
LABEL_14:
    (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(v16, (v9 + v15 + v12) & ~v15, v13);
    char v23 = 1;
  }
  else
  {
LABEL_19:
    *uint64_t v16 = *(void *)v17;
    swift_retain();
    char v23 = 0;
  }
  *((unsigned char *)v16 + v18) = v23;
  uint64_t v109 = v18;
  uint64_t v24 = (unsigned __int8 *)v16 + v18 + 1;
  char v25 = &v17[v18 + 1];
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  v24[2] = v25[2];
  unint64_t v26 = (unint64_t)(v24 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (unint64_t)(v25 + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v27 < 0xFFFFFFFFuLL)
  {
    long long v28 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v28;
  }
  else
  {
    *(void *)unint64_t v26 = *(void *)v27;
    *(void *)(v26 + 8) = *(void *)(v27 + 8);
    *(void *)(v26 + 16) = *(void *)(v27 + 16);
    *(void *)(v26 + 24) = *(void *)(v27 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  uint64_t v117 = sub_26A220();
  uint64_t v29 = *(void *)(v117 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = v30 | 7;
  uint64_t v32 = v26 + (v30 | 7) + 32;
  uint64_t v33 = (unsigned __int8 *)((v27 + (v30 | 7) + 32) & ~(v30 | 7));
  unint64_t v34 = *(void *)(v29 + 64);
  if (v34 <= ((v30 + 24) & ~v30) + v34) {
    unint64_t v35 = ((v30 + 24) & ~v30) + v34;
  }
  else {
    unint64_t v35 = *(void *)(*(void *)(v117 - 8) + 64);
  }
  uint64_t v36 = v30 + 16;
  if (v35 <= ((v30 + 16) & ~v30) + v34) {
    unint64_t v35 = ((v30 + 16) & ~v30) + v34;
  }
  uint64_t v37 = v34 + 7;
  if (v35 <= ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v38 = v34 + v30;
  if (v35 <= ((v34 + v30) & ~v30) + v34) {
    unint64_t v35 = ((v34 + v30) & ~v30) + v34;
  }
  if (v35 <= 0x10) {
    uint64_t v39 = 16;
  }
  else {
    uint64_t v39 = v35;
  }
  char v40 = 8 * v39;
  if (v39 > 3) {
    goto LABEL_38;
  }
  unsigned int v41 = ((1 << v40) | 2u) >> v40;
  if (v41 > 0xFFF8)
  {
    unsigned int v42 = *(_DWORD *)&v33[v39];
  }
  else
  {
    if (v41 <= 0xF8)
    {
LABEL_38:
      unsigned int v42 = v33[v39];
      goto LABEL_41;
    }
    unsigned int v42 = *(unsigned __int16 *)&v33[v39];
  }
LABEL_41:
  uint64_t v43 = (void *)(v32 & ~v31);
  unsigned int v44 = v42 - 7;
  if (v42 >= 7)
  {
    if (v39 <= 3) {
      uint64_t v45 = v39;
    }
    else {
      uint64_t v45 = 4;
    }
    switch(v45)
    {
      case 1:
        int v46 = *v33;
        if (v39 < 4) {
          goto LABEL_49;
        }
        goto LABEL_53;
      case 2:
        int v46 = *(unsigned __int16 *)v33;
        if (v39 < 4) {
          goto LABEL_49;
        }
        goto LABEL_53;
      case 3:
        int v46 = *(unsigned __int16 *)v33 | (v33[2] << 16);
        if (v39 < 4) {
          goto LABEL_49;
        }
        goto LABEL_53;
      case 4:
        int v46 = *(_DWORD *)v33;
        if (v39 < 4) {
LABEL_49:
        }
          unsigned int v42 = (v46 | (v44 << v40)) + 7;
        else {
LABEL_53:
        }
          unsigned int v42 = v46 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v118 = ~v30;
  uint64_t v115 = v39;
  char v116 = 8 * v39;
  uint64_t v106 = *(unsigned __int8 *)(v29 + 80);
  size_t v107 = *(void *)(*(void *)(v117 - 8) + 64);
  switch(v42)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16))(v43, v33, v117);
      if (v39 <= 3)
      {
        unsigned int v47 = ((1 << v40) | 2u) >> v40;
        if (v47 > 0xFFF8)
        {
          *(_DWORD *)((char *)v43 + v39) = 0;
          goto LABEL_110;
        }
        if (v47 > 0xF8)
        {
          *(_WORD *)((char *)v43 + v39) = 0;
          goto LABEL_110;
        }
      }
      *((unsigned char *)v43 + v39) = 0;
      if (v39 <= 3) {
        goto LABEL_90;
      }
      goto LABEL_93;
    case 1u:
      void *v43 = *(void *)v33;
      v43[1] = *(void *)((char *)&dword_8 + ((v27 + (v30 | 7) + 32) & ~(v30 | 7)));
      swift_bridgeObjectRetain();
      if (v39 > 3) {
        goto LABEL_70;
      }
      __int16 v50 = 1;
      unsigned int v47 = ((1 << v40) | 2u) >> v40;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v39) = 1;
        goto LABEL_110;
      }
      if (v47 > 0xF8) {
        goto LABEL_109;
      }
LABEL_70:
      char v51 = 1;
      goto LABEL_89;
    case 2u:
      void *v43 = *(void *)v33;
      v43[1] = *(void *)((char *)&dword_8 + ((v27 + (v30 | 7) + 32) & ~(v30 | 7)));
      uint64_t v52 = (void *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v53 = (void **)((unint64_t)(v33 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = *v53;
      void *v52 = *v53;
      uint64_t v55 = ((unint64_t)v52 + v30 + 8) & v118;
      uint64_t v56 = ((unint64_t)v53 + v30 + 8) & v118;
      uint64_t v57 = v15;
      uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      swift_bridgeObjectRetain();
      id v59 = v54;
      char v40 = v116;
      v58(v55, v56, v117);
      uint64_t v15 = v57;
      uint64_t v39 = v115;
      if (v115 > 3) {
        goto LABEL_74;
      }
      unsigned int v47 = ((1 << v116) | 2u) >> v116;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v115) = 2;
        goto LABEL_110;
      }
      if (v47 <= 0xF8)
      {
LABEL_74:
        char v51 = 2;
        goto LABEL_89;
      }
      __int16 v50 = 2;
      goto LABEL_109;
    case 3u:
      void *v43 = *(void *)v33;
      v43[1] = *(void *)((char *)&dword_8 + ((v27 + (v30 | 7) + 32) & ~(v30 | 7)));
      unint64_t v60 = ((unint64_t)v43 + v36) & v118;
      unint64_t v61 = (unint64_t)&v33[v36] & v118;
      uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16);
      swift_bridgeObjectRetain();
      v62(v60, v61, v117);
      if (v39 > 3) {
        goto LABEL_78;
      }
      unsigned int v47 = ((1 << v116) | 2u) >> v116;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v39) = 3;
        goto LABEL_110;
      }
      if (v47 <= 0xF8)
      {
LABEL_78:
        char v51 = 3;
        goto LABEL_89;
      }
      __int16 v50 = 3;
      goto LABEL_109;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16))(v43, v33, v117);
      uint64_t v63 = (void *)(((unint64_t)v43 + v37) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v64 = (void *)((unint64_t)&v33[v37] & 0xFFFFFFFFFFFFFFF8);
      void *v63 = *v64;
      v63[1] = v64[1];
      swift_bridgeObjectRetain();
      if (v39 > 3) {
        goto LABEL_82;
      }
      unsigned int v47 = ((1 << v40) | 2u) >> v40;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v39) = 4;
        goto LABEL_110;
      }
      if (v47 <= 0xF8)
      {
LABEL_82:
        char v51 = 4;
        goto LABEL_89;
      }
      __int16 v50 = 4;
      goto LABEL_109;
    case 5u:
      int v65 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16);
      v65(v43, v33, v117);
      v65((void *)(((unint64_t)v43 + v38) & v118), (unsigned __int8 *)((unint64_t)&v33[v38] & v118), v117);
      if (v39 > 3) {
        goto LABEL_86;
      }
      unsigned int v47 = ((1 << v116) | 2u) >> v116;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v39) = 5;
        goto LABEL_110;
      }
      if (v47 <= 0xF8)
      {
LABEL_86:
        char v51 = 5;
        goto LABEL_89;
      }
      __int16 v50 = 5;
      goto LABEL_109;
    case 6u:
      void *v43 = *(void *)v33;
      if (v39 > 3) {
        goto LABEL_88;
      }
      unsigned int v47 = ((1 << v40) | 2u) >> v40;
      if (v47 > 0xFFF8)
      {
        *(_DWORD *)((char *)v43 + v39) = 6;
      }
      else
      {
        if (v47 <= 0xF8)
        {
LABEL_88:
          char v51 = 6;
LABEL_89:
          *((unsigned char *)v43 + v39) = v51;
          if (v39 <= 3)
          {
LABEL_90:
            unsigned int v66 = ((1 << v40) | 2u) >> v40;
            uint64_t v67 = 2;
            if (v66 > 0xFFF8) {
              uint64_t v67 = 4;
            }
            if (v66 > 0xF8) {
              goto LABEL_112;
            }
          }
LABEL_93:
          uint64_t v67 = 1;
          goto LABEL_112;
        }
        __int16 v50 = 6;
LABEL_109:
        *(_WORD *)((char *)v43 + v39) = v50;
      }
LABEL_110:
      BOOL v68 = v47 > 0xFFF8;
      uint64_t v67 = 2;
      if (v68) {
        uint64_t v67 = 4;
      }
LABEL_112:
      uint64_t v69 = v67 + v39;
      uint64_t v70 = (char *)v43 + v69;
      uint64_t v71 = &v33[v69];
      *((unsigned char *)v43 + v69) = v33[v69];
      uint64_t v72 = sub_2696C0();
      uint64_t v73 = *(void *)(v72 - 8);
      uint64_t v74 = *(_DWORD *)(v73 + 80) & 0xF8;
      uint64_t v75 = v74 | 7;
      v74 += 8;
      uint64_t v76 = (unint64_t)&v70[v74] & ~v75;
      unint64_t v77 = (unsigned __int8 *)((unint64_t)&v71[v74] & ~v75);
      if (*(void *)(v73 + 64) <= 0x28uLL) {
        uint64_t v78 = 40;
      }
      else {
        uint64_t v78 = *(void *)(v73 + 64);
      }
      unsigned int v79 = v77[v78];
      unsigned int v80 = v79 - 2;
      if (v79 >= 2)
      {
        if (v78 <= 3) {
          uint64_t v81 = v78;
        }
        else {
          uint64_t v81 = 4;
        }
        switch(v81)
        {
          case 1:
            int v82 = *v77;
            if (v78 >= 4) {
              goto LABEL_129;
            }
            goto LABEL_123;
          case 2:
            int v82 = *(unsigned __int16 *)v77;
            if (v78 < 4) {
              goto LABEL_123;
            }
            goto LABEL_129;
          case 3:
            int v82 = *(unsigned __int16 *)v77 | (v77[2] << 16);
            if (v78 < 4) {
              goto LABEL_123;
            }
            goto LABEL_129;
          case 4:
            int v82 = *(_DWORD *)v77;
            if (v78 < 4)
            {
LABEL_123:
              unsigned int v79 = (v82 | (v80 << (8 * v78))) + 2;
              break;
            }
LABEL_129:
            if (v82 != -1) {
              goto LABEL_130;
            }
            goto LABEL_125;
          default:
            break;
        }
      }
      if (v79 == 1)
      {
LABEL_125:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v73 + 16))(v76, v77, v72);
        char v83 = 1;
      }
      else
      {
LABEL_130:
        unint64_t v84 = *((void *)v77 + 3);
        if (v84 < 0xFFFFFFFF)
        {
          char v83 = 0;
          long long v85 = *(_OWORD *)v77;
          long long v86 = *((_OWORD *)v77 + 1);
          *(void *)(v76 + 32) = *((void *)v77 + 4);
          *(_OWORD *)uint64_t v76 = v85;
          *(_OWORD *)(v76 + 16) = v86;
        }
        else
        {
          *(void *)(v76 + 24) = v84;
          *(void *)(v76 + 32) = *((void *)v77 + 4);
          (**(void (***)(uint64_t, unsigned __int8 *))(v84 - 8))(v76, v77);
          char v83 = 0;
        }
      }
      uint64_t v87 = v31;
      uint64_t v105 = ~v31;
      *(unsigned char *)(v76 + v78) = v83;
      uint64_t v88 = v78 + v106 + 1;
      uint64_t v89 = (void *)((v88 + v76) & v118);
      int v90 = (const void *)((unint64_t)&v77[v88] & v118);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v90, 1, v117))
      {
        size_t v91 = v107;
        if (*(_DWORD *)(v29 + 84)) {
          size_t v92 = v107;
        }
        else {
          size_t v92 = v107 + 1;
        }
        memcpy(v89, v90, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v89, v90, v117);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v89, 0, 1, v117);
        size_t v91 = v107;
      }
      if (v115 <= 3) {
        unsigned int v93 = (((1 << v116) | 2u) >> v116) + 7;
      }
      else {
        unsigned int v93 = 8;
      }
      if (*(_DWORD *)(v29 + 84)) {
        size_t v94 = v91;
      }
      else {
        size_t v94 = v91 + 1;
      }
      uint64_t v95 = 4;
      if (v93 < 0x10000) {
        uint64_t v95 = 2;
      }
      if (v93 < 0x100) {
        uint64_t v96 = 1;
      }
      else {
        uint64_t v96 = v95;
      }
      size_t v97 = v94
          + ((v88
            + ((((((v109 + (((v110 & ~v108) + v111 + v15) & ~v15) + 11) & 0xFFFFFFFFFFFFFFF8) + v87 + 32) & v105 | 1)
              + v115
              + v75
              + v96) & ~v75)) & v118);
      uint64_t v98 = v97 + v114;
      uint64_t v99 = v97 + v112;
      *(_WORD *)uint64_t v98 = *(_WORD *)v99;
      *(unsigned char *)(v98 + 2) = *(unsigned char *)(v99 + 2);
      unint64_t v100 = (v98 + 10) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v101 = (v99 + 10) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v102 = *(void *)(v101 + 24);
      *(void *)(v100 + 24) = v102;
      *(void *)(v100 + 32) = *(void *)(v101 + 32);
      (**(void (***)(unint64_t, unint64_t))(v102 - 8))(v100, v101);
      uint64_t v103 = *(void *)(*(void *)(a3 + 16) - 8);
      (*(void (**)(unint64_t, unint64_t))(v103 + 16))((*(unsigned __int8 *)(v103 + 80) + 40 + v100) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80), (*(unsigned __int8 *)(v103 + 80) + 40 + v101) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
      return v114;
    default:
      if (v39 > 3) {
        goto LABEL_64;
      }
      unsigned int v48 = ((1 << v40) | 2u) >> v40;
      uint64_t v49 = 2;
      if (v48 > 0xFFF8) {
        uint64_t v49 = 4;
      }
      if (v48 <= 0xF8) {
LABEL_64:
      }
        uint64_t v49 = 1;
      memcpy(v43, v33, v49 + v39);
      if (v39 > 3) {
        goto LABEL_93;
      }
      goto LABEL_90;
  }
}

uint64_t sub_20657C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  uint64_t v9 = v7 + 24;
  v8(a1, a2, v6);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 56);
  uint64_t v12 = (v10 + v11 + a1) & ~v11;
  uint64_t v134 = a2;
  uint64_t v132 = v10 + v11;
  uint64_t v137 = v11;
  uint64_t v13 = (v10 + v11 + a2) & ~v11;
  v8(v12, v13, v6);
  uint64_t v14 = sub_26A6E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v133 = v10;
  int v17 = (unsigned __int8 *)((v10 + v16 + v12) & ~v16);
  uint64_t v141 = v16;
  uint64_t v18 = (unsigned __int8 *)((v10 + v16 + v13) & ~v16);
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (v17 != v18)
  {
    uint64_t v20 = v14;
    unsigned int v21 = v17[v19];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v23 = v19;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v17;
          if (v19 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_13;
        case 2:
          int v24 = *(unsigned __int16 *)v17;
          if (v19 < 4) {
            goto LABEL_13;
          }
          goto LABEL_19;
        case 3:
          int v24 = *(unsigned __int16 *)v17 | (v17[2] << 16);
          if (v19 < 4) {
            goto LABEL_13;
          }
          goto LABEL_19;
        case 4:
          int v24 = *(_DWORD *)v17;
          if (v19 < 4)
          {
LABEL_13:
            unsigned int v21 = (v24 | (v22 << (8 * v19))) + 2;
            break;
          }
LABEL_19:
          if (v24 != -1) {
            goto LABEL_20;
          }
          goto LABEL_15;
        default:
          break;
      }
    }
    if (v21 == 1) {
LABEL_15:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v17, v14);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v25 = v18[v19];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v27 = v19;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *v18;
          if (v19 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_29;
        case 2:
          int v28 = *(unsigned __int16 *)v18;
          if (v19 < 4) {
            goto LABEL_29;
          }
          goto LABEL_35;
        case 3:
          int v28 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          if (v19 < 4) {
            goto LABEL_29;
          }
          goto LABEL_35;
        case 4:
          int v28 = *(_DWORD *)v18;
          if (v19 < 4)
          {
LABEL_29:
            unsigned int v25 = (v28 | (v26 << (8 * v19))) + 2;
            break;
          }
LABEL_35:
          if (v28 != -1) {
            goto LABEL_36;
          }
          goto LABEL_31;
        default:
          break;
      }
    }
    if (v25 == 1)
    {
LABEL_31:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 16))(v17, v18, v20);
      v17[v19] = 1;
    }
    else
    {
LABEL_36:
      *(void *)int v17 = *(void *)v18;
      v17[v19] = 0;
      swift_retain();
    }
  }
  uint64_t v29 = v19 + 1;
  uint64_t v30 = &v17[v19 + 1];
  uint64_t v31 = &v18[v19 + 1];
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  v30[2] = v31[2];
  uint64_t v32 = (void *)((unint64_t)(v30 + 10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (unint64_t *)((unint64_t)(v31 + 10) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = *v33;
  uint64_t v135 = a3;
  uint64_t v136 = a1;
  uint64_t v131 = v29;
  if (*v32 < 0xFFFFFFFFuLL)
  {
    if (v34 >= 0xFFFFFFFF)
    {
      *uint64_t v32 = v34;
      v32[1] = v33[1];
      v32[2] = v33[2];
      _OWORD v32[3] = v33[3];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_44;
    }
  }
  else
  {
    if (v34 >= 0xFFFFFFFF)
    {
      *uint64_t v32 = v34;
      swift_retain();
      swift_release();
      v32[1] = v33[1];
      swift_retain();
      swift_release();
      v32[2] = v33[2];
      swift_retain();
      swift_release();
      _OWORD v32[3] = v33[3];
      swift_retain();
      swift_release();
      goto LABEL_44;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  long long v35 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v35;
LABEL_44:
  uint64_t v36 = v137;
  uint64_t v143 = sub_26A220();
  uint64_t v37 = *(void *)(v143 - 8);
  uint64_t v38 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v39 = v38 | 7;
  uint64_t v40 = ((unint64_t)v32 + (v38 | 7) + 32) & ~(v38 | 7);
  uint64_t v41 = ((unint64_t)v33 + (v38 | 7) + 32) & ~(v38 | 7);
  unint64_t v42 = *(void *)(v37 + 64);
  uint64_t v144 = ~v38;
  unint64_t v43 = v42 + ((v38 + 24) & ~v38);
  if (v42 > v43) {
    unint64_t v43 = *(void *)(*(void *)(v143 - 8) + 64);
  }
  uint64_t v44 = v38 + 16;
  if (v43 <= v42 + ((v38 + 16) & ~v38)) {
    unint64_t v43 = v42 + ((v38 + 16) & ~v38);
  }
  if (v43 <= ((v42 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v43 = ((v42 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v142 = *(unsigned __int8 *)(v37 + 80);
  size_t v139 = *(void *)(*(void *)(v143 - 8) + 64);
  uint64_t v140 = *(void *)(v143 - 8);
  if (v43 <= ((v42 + v38) & ~v38) + v42) {
    unint64_t v43 = ((v42 + v38) & ~v38) + v42;
  }
  if (v43 <= 0x10) {
    uint64_t v45 = 16;
  }
  else {
    uint64_t v45 = v43;
  }
  if (v40 != v41)
  {
    char v46 = 8 * v45;
    if (v45 <= 3)
    {
      unsigned int v47 = ((1 << v46) | 2u) >> v46;
      if (v47 > 0xFFF8)
      {
        unsigned int v48 = *(_DWORD *)(v40 + v45);
        unsigned int v49 = v48 - 7;
        if (v48 < 7) {
          goto LABEL_72;
        }
        goto LABEL_64;
      }
      if (v47 > 0xF8)
      {
        unsigned int v48 = *(unsigned __int16 *)(v40 + v45);
        unsigned int v49 = v48 - 7;
        if (v48 < 7) {
          goto LABEL_72;
        }
        goto LABEL_64;
      }
    }
    unsigned int v48 = *(unsigned __int8 *)(v40 + v45);
    unsigned int v49 = v48 - 7;
    if (v48 < 7) {
      goto LABEL_72;
    }
LABEL_64:
    if (v45 <= 3) {
      uint64_t v50 = v45;
    }
    else {
      uint64_t v50 = 4;
    }
    switch(v50)
    {
      case 1:
        int v51 = *(unsigned __int8 *)v40;
        if (v45 >= 4) {
          goto LABEL_100;
        }
        goto LABEL_71;
      case 2:
        int v51 = *(unsigned __int16 *)v40;
        if (v45 < 4) {
          goto LABEL_71;
        }
        goto LABEL_100;
      case 3:
        int v51 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(v40 + 2) << 16);
        if (v45 < 4) {
          goto LABEL_71;
        }
        goto LABEL_100;
      case 4:
        int v51 = *(_DWORD *)v40;
        if (v45 < 4)
        {
LABEL_71:
          unsigned int v48 = (v51 | (v49 << v46)) + 7;
        }
        else
        {
LABEL_100:
          unsigned int v48 = v51 + 7;
          if (v48 > 5)
          {
LABEL_82:
            if (v45 <= 3)
            {
LABEL_83:
              unsigned int v54 = ((1 << v46) | 2u) >> v46;
              if (v54 > 0xFFF8)
              {
                unsigned int v55 = *(_DWORD *)(v41 + v45);
                unsigned int v56 = v55 - 7;
                if (v55 < 7)
                {
LABEL_104:
                  switch(v55)
                  {
                    case 0u:
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v40, v41, v143);
                      if (v45 > 3) {
                        goto LABEL_108;
                      }
                      unsigned int v60 = ((1 << v46) | 2u) >> v46;
                      if (v60 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 0;
                      }
                      else if (v60 > 0xF8)
                      {
                        *(_WORD *)(v40 + v45) = 0;
                      }
                      else
                      {
LABEL_108:
                        *(unsigned char *)(v40 + v45) = 0;
                        if (v45 > 3) {
                          goto LABEL_136;
                        }
                      }
                      goto LABEL_164;
                    case 1u:
                      *(void *)uint64_t v40 = *(void *)v41;
                      *(void *)(v40 + 8) = *(void *)(v41 + 8);
                      swift_bridgeObjectRetain();
                      if (v45 > 3) {
                        goto LABEL_113;
                      }
                      __int16 v61 = 1;
                      unsigned int v62 = ((1 << v46) | 2u) >> v46;
                      if (v62 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 1;
                        goto LABEL_164;
                      }
                      if (v62 > 0xF8) {
                        goto LABEL_163;
                      }
LABEL_113:
                      char v63 = 1;
                      goto LABEL_131;
                    case 2u:
                      *(void *)uint64_t v40 = *(void *)v41;
                      *(void *)(v40 + 8) = *(void *)(v41 + 8);
                      uint64_t v64 = (void *)((v40 + 23) & 0xFFFFFFFFFFFFFFF8);
                      int v65 = (void **)((v41 + 23) & 0xFFFFFFFFFFFFFFF8);
                      unsigned int v66 = *v65;
                      void *v64 = *v65;
                      uint64_t v129 = ((unint64_t)v64 + v142 + 8) & v144;
                      uint64_t v67 = ((unint64_t)v65 + v142 + 8) & v144;
                      BOOL v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
                      swift_bridgeObjectRetain();
                      id v69 = v66;
                      v68(v129, v67, v143);
                      if (v45 > 3) {
                        goto LABEL_117;
                      }
                      unsigned int v70 = ((1 << v46) | 2u) >> v46;
                      if (v70 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 2;
                        uint64_t v36 = v137;
                      }
                      else if (v70 > 0xF8)
                      {
                        *(_WORD *)(v40 + v45) = 2;
                        uint64_t v36 = v137;
                      }
                      else
                      {
LABEL_117:
                        *(unsigned char *)(v40 + v45) = 2;
                        uint64_t v36 = v137;
                        if (v45 > 3) {
                          goto LABEL_136;
                        }
                      }
                      goto LABEL_164;
                    case 3u:
                      *(void *)uint64_t v40 = *(void *)v41;
                      *(void *)(v40 + 8) = *(void *)(v41 + 8);
                      uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
                      swift_bridgeObjectRetain();
                      v71((v44 + v40) & v144, (v44 + v41) & v144, v143);
                      if (v45 > 3) {
                        goto LABEL_122;
                      }
                      unsigned int v72 = ((1 << v46) | 2u) >> v46;
                      if (v72 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 3;
                        goto LABEL_164;
                      }
                      if (v72 <= 0xF8)
                      {
LABEL_122:
                        char v63 = 3;
                        goto LABEL_131;
                      }
                      __int16 v61 = 3;
                      goto LABEL_163;
                    case 4u:
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v40, v41, v143);
                      uint64_t v73 = (void *)(((v40 | 7) + v139) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v74 = (void *)(((v41 | 7) + v139) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v73 = *v74;
                      v73[1] = v74[1];
                      swift_bridgeObjectRetain();
                      if (v45 > 3) {
                        goto LABEL_126;
                      }
                      unsigned int v75 = ((1 << v46) | 2u) >> v46;
                      if (v75 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 4;
                        goto LABEL_164;
                      }
                      if (v75 <= 0xF8)
                      {
LABEL_126:
                        char v63 = 4;
                        goto LABEL_131;
                      }
                      __int16 v61 = 4;
                      goto LABEL_163;
                    case 5u:
                      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
                      v76(v40, v41, v143);
                      v76((v40 + v142 + v139) & v144, (v41 + v142 + v139) & v144, v143);
                      if (v45 > 3) {
                        goto LABEL_130;
                      }
                      unsigned int v77 = ((1 << v46) | 2u) >> v46;
                      if (v77 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 5;
                        goto LABEL_164;
                      }
                      if (v77 > 0xF8)
                      {
                        __int16 v61 = 5;
                        goto LABEL_163;
                      }
LABEL_130:
                      char v63 = 5;
LABEL_131:
                      *(unsigned char *)(v40 + v45) = v63;
                      if (v45 <= 3) {
                        goto LABEL_164;
                      }
                      goto LABEL_136;
                    case 6u:
                      *(void *)uint64_t v40 = *(void *)v41;
                      if (v45 > 3) {
                        goto LABEL_134;
                      }
                      unsigned int v80 = ((1 << v46) | 2u) >> v46;
                      if (v80 > 0xFFF8)
                      {
                        *(_DWORD *)(v40 + v45) = 6;
                      }
                      else
                      {
                        if (v80 <= 0xF8)
                        {
LABEL_134:
                          *(unsigned char *)(v40 + v45) = 6;
                          goto LABEL_135;
                        }
                        __int16 v61 = 6;
LABEL_163:
                        *(_WORD *)(v40 + v45) = v61;
                      }
                      break;
                    default:
                      goto LABEL_141;
                  }
                  goto LABEL_164;
                }
LABEL_91:
                if (v45 <= 3) {
                  uint64_t v58 = v45;
                }
                else {
                  uint64_t v58 = 4;
                }
                switch(v58)
                {
                  case 1:
                    int v59 = *(unsigned __int8 *)v41;
                    if (v45 >= 4) {
                      goto LABEL_140;
                    }
                    goto LABEL_103;
                  case 2:
                    int v59 = *(unsigned __int16 *)v41;
                    if (v45 < 4) {
                      goto LABEL_103;
                    }
                    goto LABEL_140;
                  case 3:
                    int v59 = *(unsigned __int16 *)v41 | (*(unsigned __int8 *)(v41 + 2) << 16);
                    if (v45 < 4) {
                      goto LABEL_103;
                    }
                    goto LABEL_140;
                  case 4:
                    int v59 = *(_DWORD *)v41;
                    if (v45 < 4)
                    {
LABEL_103:
                      unsigned int v55 = (v59 | (v56 << v46)) + 7;
                      goto LABEL_104;
                    }
LABEL_140:
                    unsigned int v55 = v59 + 7;
                    if (v55 <= 6) {
                      goto LABEL_104;
                    }
LABEL_141:
                    if (v45 > 3) {
                      goto LABEL_145;
                    }
                    unsigned int v78 = ((1 << v46) | 2u) >> v46;
                    uint64_t v79 = 2;
                    if (v78 > 0xFFF8) {
                      uint64_t v79 = 4;
                    }
                    if (v78 <= 0xF8) {
LABEL_145:
                    }
                      uint64_t v79 = 1;
                    memcpy((void *)v40, (const void *)v41, v79 + v45);
                    if (v45 <= 3) {
                      goto LABEL_164;
                    }
                    goto LABEL_136;
                  default:
                    goto LABEL_104;
                }
              }
              if (v54 > 0xF8)
              {
                unsigned int v55 = *(unsigned __int16 *)(v41 + v45);
                unsigned int v56 = v55 - 7;
                if (v55 < 7) {
                  goto LABEL_104;
                }
                goto LABEL_91;
              }
            }
LABEL_90:
            unsigned int v55 = *(unsigned __int8 *)(v41 + v45);
            unsigned int v56 = v55 - 7;
            if (v55 < 7) {
              goto LABEL_104;
            }
            goto LABEL_91;
          }
        }
        break;
      default:
        break;
    }
LABEL_72:
    switch(v48)
    {
      case 0u:
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(((unint64_t)v32 + (v38 | 7) + 32) & ~(v38 | 7), v143);
        goto LABEL_79;
      case 1u:
        swift_bridgeObjectRelease();
        if (v45 > 3) {
          goto LABEL_90;
        }
        goto LABEL_83;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v52 = (id *)((v40 + 23) & 0xFFFFFFFFFFFFFFF8);

        uint64_t v53 = (uint64_t)v52 + v142 + 8;
        goto LABEL_78;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v53 = v44 + v40;
LABEL_78:
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53 & v144, v143);
LABEL_79:
        if (v45 > 3) {
          goto LABEL_90;
        }
        goto LABEL_83;
      case 4u:
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(((unint64_t)v32 + (v38 | 7) + 32) & ~(v38 | 7), v143);
        swift_bridgeObjectRelease();
        goto LABEL_82;
      case 5u:
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        v57(v40, v143);
        uint64_t v36 = v137;
        v57((v40 + v142 + v139) & v144, v143);
        if (v45 > 3) {
          goto LABEL_90;
        }
        goto LABEL_83;
      default:
        goto LABEL_82;
    }
  }
LABEL_135:
  if (v45 > 3)
  {
LABEL_136:
    char v127 = 1;
LABEL_167:
    uint64_t v82 = 1;
    goto LABEL_168;
  }
LABEL_164:
  unsigned int v81 = ((1 << (8 * v45)) | 2u) >> (8 * v45);
  uint64_t v82 = 2;
  if (v81 > 0xFFF8) {
    uint64_t v82 = 4;
  }
  char v127 = 0;
  if (v81 <= 0xF8) {
    goto LABEL_167;
  }
LABEL_168:
  uint64_t v130 = v45;
  uint64_t v83 = v82 + v45;
  uint64_t v84 = v83 + v40;
  uint64_t v85 = v83 + v41;
  *(unsigned char *)(v83 + v40) = *(unsigned char *)(v83 + v41);
  uint64_t v86 = sub_2696C0();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = *(_DWORD *)(v87 + 80) & 0xF8;
  uint64_t v89 = v88 | 7;
  v88 += 8;
  int v90 = (unsigned __int8 *)((v88 + v84) & ~v89);
  size_t v91 = (unsigned __int8 *)((v88 + v85) & ~v89);
  if (*(void *)(v87 + 64) <= 0x28uLL) {
    uint64_t v92 = 40;
  }
  else {
    uint64_t v92 = *(void *)(v87 + 64);
  }
  if (v90 != v91)
  {
    uint64_t v93 = v86;
    unsigned int v94 = v90[v92];
    unsigned int v95 = v94 - 2;
    if (v94 >= 2)
    {
      if (v92 <= 3) {
        uint64_t v96 = v92;
      }
      else {
        uint64_t v96 = 4;
      }
      switch(v96)
      {
        case 1:
          int v97 = *v90;
          if (v92 >= 4) {
            goto LABEL_186;
          }
          goto LABEL_180;
        case 2:
          int v97 = *(unsigned __int16 *)v90;
          if (v92 < 4) {
            goto LABEL_180;
          }
          goto LABEL_186;
        case 3:
          int v97 = *(unsigned __int16 *)v90 | (v90[2] << 16);
          if (v92 < 4) {
            goto LABEL_180;
          }
          goto LABEL_186;
        case 4:
          int v97 = *(_DWORD *)v90;
          if (v92 < 4)
          {
LABEL_180:
            unsigned int v94 = (v97 | (v95 << (8 * v92))) + 2;
            break;
          }
LABEL_186:
          if (v97 != -1) {
            goto LABEL_187;
          }
          goto LABEL_182;
        default:
          break;
      }
    }
    if (v94 == 1)
    {
LABEL_182:
      (*(void (**)(unsigned __int8 *, uint64_t))(v87 + 8))(v90, v86);
    }
    else
    {
LABEL_187:
      if (*((void *)v90 + 3) >= 0xFFFFFFFFuLL) {
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v90);
      }
    }
    unsigned int v98 = v91[v92];
    unsigned int v99 = v98 - 2;
    if (v98 >= 2)
    {
      if (v92 <= 3) {
        uint64_t v100 = v92;
      }
      else {
        uint64_t v100 = 4;
      }
      switch(v100)
      {
        case 1:
          int v101 = *v91;
          if (v92 >= 4) {
            goto LABEL_203;
          }
          goto LABEL_197;
        case 2:
          int v101 = *(unsigned __int16 *)v91;
          if (v92 < 4) {
            goto LABEL_197;
          }
          goto LABEL_203;
        case 3:
          int v101 = *(unsigned __int16 *)v91 | (v91[2] << 16);
          if (v92 < 4) {
            goto LABEL_197;
          }
          goto LABEL_203;
        case 4:
          int v101 = *(_DWORD *)v91;
          if (v92 < 4)
          {
LABEL_197:
            unsigned int v98 = (v101 | (v99 << (8 * v92))) + 2;
            break;
          }
LABEL_203:
          if (v101 != -1) {
            goto LABEL_204;
          }
          goto LABEL_199;
        default:
          break;
      }
    }
    if (v98 == 1)
    {
LABEL_199:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v87 + 16))(v90, v91, v93);
      char v102 = 1;
    }
    else
    {
LABEL_204:
      unint64_t v103 = *((void *)v91 + 3);
      if (v103 < 0xFFFFFFFF)
      {
        char v102 = 0;
        long long v104 = *(_OWORD *)v91;
        long long v105 = *((_OWORD *)v91 + 1);
        *((void *)v90 + 4) = *((void *)v91 + 4);
        *(_OWORD *)int v90 = v104;
        *((_OWORD *)v90 + 1) = v105;
      }
      else
      {
        *((void *)v90 + 3) = v103;
        *((void *)v90 + 4) = *((void *)v91 + 4);
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v103 - 8))(v90, v91);
        char v102 = 0;
      }
    }
    v90[v92] = v102;
  }
  uint64_t v138 = v39;
  uint64_t v128 = ~v39;
  uint64_t v106 = v92 + 1;
  size_t v107 = (void *)((unint64_t)&v90[v142 + v106] & v144);
  uint64_t v108 = (void *)((unint64_t)&v91[v142 + v106] & v144);
  uint64_t v109 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v140 + 48);
  int v110 = v109(v107, 1, v143);
  int v111 = v109(v108, 1, v143);
  if (!v110)
  {
    if (v111)
    {
      uint64_t v112 = v140;
      (*(void (**)(void *, uint64_t))(v140 + 8))(v107, v143);
      int v113 = *(_DWORD *)(v140 + 84);
      goto LABEL_213;
    }
    uint64_t v112 = v140;
    (*(void (**)(void *, void *, uint64_t))(v140 + 24))(v107, v108, v143);
LABEL_219:
    size_t v114 = v139;
    goto LABEL_220;
  }
  if (!v111)
  {
    uint64_t v112 = v140;
    (*(void (**)(void *, void *, uint64_t))(v140 + 16))(v107, v108, v143);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v107, 0, 1, v143);
    goto LABEL_219;
  }
  uint64_t v112 = v140;
  int v113 = *(_DWORD *)(v140 + 84);
LABEL_213:
  size_t v114 = v139;
  if (v113) {
    size_t v115 = v139;
  }
  else {
    size_t v115 = v139 + 1;
  }
  memcpy(v107, v108, v115);
LABEL_220:
  if (v127) {
    unsigned int v116 = 8;
  }
  else {
    unsigned int v116 = (((1 << (8 * v130)) | 2u) >> (8 * v130)) + 7;
  }
  if (*(_DWORD *)(v112 + 84)) {
    size_t v117 = v114;
  }
  else {
    size_t v117 = v114 + 1;
  }
  uint64_t v118 = 4;
  if (v116 < 0x10000) {
    uint64_t v118 = 2;
  }
  if (v116 < 0x100) {
    uint64_t v119 = 1;
  }
  else {
    uint64_t v119 = v118;
  }
  size_t v120 = v117
       + ((v106
         + v142
         + (((((((((v132 & ~v36) + v133 + v141) & ~v141) + v131 + 10) & 0xFFFFFFFFFFFFFFF8) + v138 + 32) & v128 | 1)
           + v130
           + v89
           + v119) & ~v89)) & v144);
  uint64_t v121 = v120 + v136;
  uint64_t v122 = v120 + v134;
  *(_WORD *)uint64_t v121 = *(_WORD *)v122;
  *(unsigned char *)(v121 + 2) = *(unsigned char *)(v122 + 2);
  v123 = (uint64_t *)((v121 + 10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v124 = (uint64_t *)((v122 + 10) & 0xFFFFFFFFFFFFFFF8);
  sub_16D58(v123, v124);
  uint64_t v125 = *(void *)(*(void *)(v135 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v125 + 24))(((unint64_t)v123 + *(unsigned __int8 *)(v125 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80), ((unint64_t)v124 + *(unsigned __int8 *)(v125 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  return v136;
}

uint64_t sub_2077E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_4A98(&qword_2EBDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  uint64_t v9 = *(void *)(v8 + 32);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 48);
  uint64_t v100 = a1;
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v98 = a2;
  uint64_t v95 = v10;
  uint64_t v96 = v9 + v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v7(v11, v12, v5);
  uint64_t v13 = sub_26A6E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v97 = v9;
  uint64_t v16 = (void *)((v9 + v15 + v11) & ~v15);
  int v17 = (unsigned __int8 *)((v9 + v15 + v12) & ~v15);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        if (v18 < 4) {
          goto LABEL_12;
        }
        goto LABEL_16;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        if (v18 < 4) {
          goto LABEL_12;
        }
        goto LABEL_16;
      case 3:
        int v22 = *(unsigned __int16 *)((v9 + v15 + v12) & ~v15) | (*((unsigned __int8 *)&def_5F050
                                                                + ((v9 + v15 + v12) & ~v15)
                                                                + 2) << 16);
        if (v18 < 4) {
          goto LABEL_12;
        }
        goto LABEL_16;
      case 4:
        int v22 = *(_DWORD *)v17;
        if (v18 < 4) {
LABEL_12:
        }
          unsigned int v19 = (v22 | (v20 << (8 * v18))) + 2;
        else {
LABEL_16:
        }
          unsigned int v19 = v22 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v94 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  if (v19 == 1)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v14 + 32))(v16, (v9 + v15 + v12) & ~v15, v13);
    char v23 = 1;
  }
  else
  {
    char v23 = 0;
    *uint64_t v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v18) = v23;
  uint64_t v93 = v18;
  int v24 = (unsigned __int8 *)v16 + v18 + 1;
  unsigned int v25 = &v17[v18 + 1];
  *int v24 = *v25;
  v24[1] = v25[1];
  v24[2] = v25[2];
  unsigned int v26 = (_OWORD *)((unint64_t)(v24 + 10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (_OWORD *)((unint64_t)(v25 + 10) & 0xFFFFFFFFFFFFFFF8);
  long long v28 = v27[1];
  *unsigned int v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = sub_26A220();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = v31 | 7;
  uint64_t v33 = (uint64_t)v26 + (v31 | 7) + 32;
  unint64_t v34 = (unsigned __int8 *)(((unint64_t)v27 + (v31 | 7) + 32) & ~(v31 | 7));
  size_t v35 = *(void *)(v30 + 64);
  if (v35 <= ((v31 + 24) & ~v31) + v35) {
    unint64_t v36 = ((v31 + 24) & ~v31) + v35;
  }
  else {
    unint64_t v36 = *(void *)(*(void *)(v29 - 8) + 64);
  }
  if (v36 <= ((v31 + 16) & ~v31) + v35) {
    unint64_t v36 = ((v31 + 16) & ~v31) + v35;
  }
  if (v36 <= ((v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v36 = ((v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v36 <= ((v35 + v31) & ~v31) + v35) {
    unint64_t v36 = ((v35 + v31) & ~v31) + v35;
  }
  if (v36 <= 0x10) {
    uint64_t v37 = 16;
  }
  else {
    uint64_t v37 = v36;
  }
  char v38 = 8 * v37;
  if (v37 > 3) {
    goto LABEL_35;
  }
  unsigned int v39 = ((1 << v38) | 2u) >> v38;
  if (v39 > 0xFFF8)
  {
    unsigned int v40 = *(_DWORD *)&v34[v37];
  }
  else
  {
    if (v39 <= 0xF8)
    {
LABEL_35:
      unsigned int v40 = v34[v37];
      goto LABEL_38;
    }
    unsigned int v40 = *(unsigned __int16 *)&v34[v37];
  }
LABEL_38:
  uint64_t v41 = (_OWORD *)(v33 & ~v32);
  unsigned int v42 = v40 - 7;
  if (v40 >= 7)
  {
    if (v37 <= 3) {
      uint64_t v43 = v37;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *v34;
        if (v37 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 2:
        int v44 = *(unsigned __int16 *)v34;
        if (v37 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 3:
        int v44 = *(unsigned __int16 *)v34 | (v34[2] << 16);
        if (v37 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 4:
        int v44 = *(_DWORD *)v34;
        if (v37 < 4) {
LABEL_46:
        }
          unsigned int v40 = (v44 | (v42 << v38)) + 7;
        else {
LABEL_50:
        }
          unsigned int v40 = v44 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v101 = ~v31;
  uint64_t v92 = v29;
  switch(v40)
  {
    case 0u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v30 + 32))(v41, v34, v29);
      if (v37 <= 3)
      {
        unsigned int v45 = ((1 << v38) | 2u) >> v38;
        if (v45 > 0xFFF8)
        {
          *(_DWORD *)((char *)v41 + v37) = 0;
          goto LABEL_109;
        }
        if (v45 > 0xF8)
        {
          *(_WORD *)((char *)v41 + v37) = 0;
          goto LABEL_109;
        }
      }
      *((unsigned char *)v41 + v37) = 0;
      if (v37 <= 3) {
        goto LABEL_88;
      }
      goto LABEL_91;
    case 1u:
      *uint64_t v41 = *(_OWORD *)v34;
      if (v37 > 3) {
        goto LABEL_67;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 1;
      }
      else
      {
        if (v45 <= 0xF8)
        {
LABEL_67:
          char v48 = 1;
          goto LABEL_87;
        }
        *(_WORD *)((char *)v41 + v37) = 1;
      }
      goto LABEL_109;
    case 2u:
      *uint64_t v41 = *(_OWORD *)v34;
      unsigned int v49 = (void *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v50 = (void *)((unint64_t)(v34 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v49 = *v50;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v30 + 32))(((unint64_t)v49 + v31 + 8) & v101, ((unint64_t)v50 + v31 + 8) & v101, v29);
      if (v37 > 3) {
        goto LABEL_71;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 2;
      }
      else
      {
        if (v45 <= 0xF8)
        {
LABEL_71:
          char v48 = 2;
          goto LABEL_87;
        }
        *(_WORD *)((char *)v41 + v37) = 2;
      }
      goto LABEL_109;
    case 3u:
      *uint64_t v41 = *(_OWORD *)v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v30 + 32))(((unint64_t)v41 + v31 + 16) & v101, (unint64_t)&v34[v31 + 16] & v101, v29);
      if (v37 > 3) {
        goto LABEL_75;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 3;
      }
      else
      {
        if (v45 <= 0xF8)
        {
LABEL_75:
          char v48 = 3;
          goto LABEL_87;
        }
        *(_WORD *)((char *)v41 + v37) = 3;
      }
      goto LABEL_109;
    case 4u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v30 + 32))(v41, v34, v29);
      *(_OWORD *)(((unint64_t)v41 + v35 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v34[v35 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_79;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 4;
      }
      else
      {
        if (v45 <= 0xF8)
        {
LABEL_79:
          char v48 = 4;
          goto LABEL_87;
        }
        *(_WORD *)((char *)v41 + v37) = 4;
      }
      goto LABEL_109;
    case 5u:
      uint64_t v91 = *(void *)(v29 - 8);
      uint64_t v51 = v29;
      uint64_t v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 32);
      ((void (*)(_OWORD *, unsigned __int8 *))v52)(v41, v34);
      v52(((unint64_t)v41 + v35 + v31) & v101, (unint64_t)&v34[v35 + v31] & v101, v51);
      if (v37 > 3) {
        goto LABEL_83;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 5;
LABEL_108:
        uint64_t v30 = v91;
        goto LABEL_109;
      }
      if (v45 > 0xF8)
      {
        *(_WORD *)((char *)v41 + v37) = 5;
        goto LABEL_108;
      }
LABEL_83:
      *((unsigned char *)v41 + v37) = 5;
      uint64_t v30 = v91;
      if (v37 <= 3) {
        goto LABEL_88;
      }
LABEL_91:
      uint64_t v54 = 1;
LABEL_111:
      uint64_t v56 = v54 + v37;
      uint64_t v57 = (char *)v41 + v56;
      uint64_t v58 = &v34[v56];
      *((unsigned char *)v41 + v56) = v34[v56];
      uint64_t v59 = sub_2696C0();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v61 = *(_DWORD *)(v60 + 80) & 0xF8;
      uint64_t v62 = v61 | 7;
      v61 += 8;
      uint64_t v63 = (unint64_t)&v57[v61] & ~v62;
      uint64_t v64 = (unsigned __int8 *)((unint64_t)&v58[v61] & ~v62);
      if (*(void *)(v60 + 64) <= 0x28uLL) {
        uint64_t v65 = 40;
      }
      else {
        uint64_t v65 = *(void *)(v60 + 64);
      }
      unsigned int v66 = v64[v65];
      unsigned int v67 = v66 - 2;
      if (v66 < 2)
      {
        uint64_t v69 = v92;
        if (v66 != 1)
        {
LABEL_122:
          char v71 = 0;
          long long v72 = *(_OWORD *)v64;
          long long v73 = *((_OWORD *)v64 + 1);
          *(void *)(v63 + 32) = *((void *)v64 + 4);
          *(_OWORD *)uint64_t v63 = v72;
          *(_OWORD *)(v63 + 16) = v73;
          goto LABEL_127;
        }
      }
      else
      {
        if (v65 <= 3) {
          uint64_t v68 = v65;
        }
        else {
          uint64_t v68 = 4;
        }
        uint64_t v69 = v92;
        switch(v68)
        {
          case 1:
            int v70 = *v64;
            if (v65 < 4) {
              goto LABEL_124;
            }
            goto LABEL_148;
          case 2:
            int v70 = *(unsigned __int16 *)v64;
            if (v65 < 4) {
              goto LABEL_124;
            }
            goto LABEL_148;
          case 3:
            int v70 = *(unsigned __int16 *)v64 | (v64[2] << 16);
            if (v65 < 4) {
              goto LABEL_124;
            }
            goto LABEL_148;
          case 4:
            int v70 = *(_DWORD *)v64;
            if (v65 >= 4)
            {
LABEL_148:
              if (v70 == -1) {
                break;
              }
              goto LABEL_122;
            }
LABEL_124:
            unsigned int v66 = (v70 | (v67 << (8 * v65))) + 2;
LABEL_125:
            if (v66 != 1) {
              goto LABEL_122;
            }
            break;
          default:
            goto LABEL_125;
        }
      }
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v60 + 32))(v63, v64, v59);
      char v71 = 1;
LABEL_127:
      *(unsigned char *)(v63 + v65) = v71;
      uint64_t v74 = v65 + v31 + 1;
      unsigned int v75 = (void *)((v74 + v63) & v101);
      uint64_t v76 = (const void *)((unint64_t)&v64[v74] & v101);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v76, 1, v69))
      {
        if (*(_DWORD *)(v30 + 84)) {
          size_t v77 = v35;
        }
        else {
          size_t v77 = v35 + 1;
        }
        memcpy(v75, v76, v77);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v75, v76, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v75, 0, 1, v69);
      }
      if (v37 <= 3) {
        unsigned int v78 = (((1 << (8 * v37)) | 2u) >> (8 * v37)) + 7;
      }
      else {
        unsigned int v78 = 8;
      }
      if (*(_DWORD *)(v30 + 84)) {
        size_t v79 = v35;
      }
      else {
        size_t v79 = v35 + 1;
      }
      uint64_t v80 = 4;
      if (v78 < 0x10000) {
        uint64_t v80 = 2;
      }
      if (v78 < 0x100) {
        uint64_t v81 = 1;
      }
      else {
        uint64_t v81 = v80;
      }
      size_t v82 = v79
          + ((v74
            + ((((((v93 + (((v96 & ~v95) + v97 + v94) & ~v94) + 11) & 0xFFFFFFFFFFFFFFF8) + v32 + 32) & ~v32 | 1)
              + v37
              + v62
              + v81) & ~v62)) & v101);
      uint64_t v83 = v82 + v100;
      uint64_t v84 = v82 + v98;
      *(_WORD *)uint64_t v83 = *(_WORD *)v84;
      *(unsigned char *)(v83 + 2) = *(unsigned char *)(v84 + 2);
      unint64_t v85 = (v83 + 10) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v86 = (v84 + 10) & 0xFFFFFFFFFFFFFFF8;
      long long v88 = *(_OWORD *)v86;
      long long v87 = *(_OWORD *)(v86 + 16);
      *(void *)(v85 + 32) = *(void *)(v86 + 32);
      *(_OWORD *)unint64_t v85 = v88;
      *(_OWORD *)(v85 + 16) = v87;
      uint64_t v89 = *(void *)(*(void *)(a3 + 16) - 8);
      (*(void (**)(unint64_t, unint64_t))(v89 + 32))((*(unsigned __int8 *)(v89 + 80) + 40 + v85) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80), (*(unsigned __int8 *)(v89 + 80) + 40 + v86) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
      return v100;
    case 6u:
      *(void *)uint64_t v41 = *(void *)v34;
      if (v37 > 3) {
        goto LABEL_86;
      }
      unsigned int v45 = ((1 << v38) | 2u) >> v38;
      if (v45 > 0xFFF8)
      {
        *(_DWORD *)((char *)v41 + v37) = 6;
      }
      else
      {
        if (v45 <= 0xF8)
        {
LABEL_86:
          char v48 = 6;
LABEL_87:
          *((unsigned char *)v41 + v37) = v48;
          if (v37 <= 3)
          {
LABEL_88:
            unsigned int v53 = ((1 << v38) | 2u) >> v38;
            uint64_t v54 = 2;
            if (v53 > 0xFFF8) {
              uint64_t v54 = 4;
            }
            if (v53 > 0xF8) {
              goto LABEL_111;
            }
          }
          goto LABEL_91;
        }
        *(_WORD *)((char *)v41 + v37) = 6;
      }
LABEL_109:
      BOOL v55 = v45 > 0xFFF8;
      uint64_t v54 = 2;
      if (v55) {
        uint64_t v54 = 4;
      }
      goto LABEL_111;
    default:
      if (v37 > 3) {
        goto LABEL_61;
      }
      unsigned int v46 = ((1 << v38) | 2u) >> v38;
      uint64_t v47 = 2;
      if (v46 > 0xFFF8) {
        uint64_t v47 = 4;
      }
      if (v46 <= 0xF8) {
LABEL_61:
      }
        uint64_t v47 = 1;
      memcpy(v41, v34, v47 + v37);
      if (v37 > 3) {
        goto LABEL_91;
      }
      goto LABEL_88;
  }
}

uint64_t sub_2083AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_4A98(&qword_2EBDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 40);
  uint64_t v125 = a1;
  uint64_t v123 = a2;
  uint64_t v121 = v9 + v10;
  uint64_t v11 = (v9 + v10 + a2) & ~v10;
  v7((v9 + v10 + a1) & ~v10, v11, v5);
  uint64_t v12 = sub_26A6E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v122 = v9;
  uint64_t v15 = (unsigned __int8 *)((v9 + v14 + ((v9 + v10 + a1) & ~v10)) & ~v14);
  uint64_t v16 = (unsigned __int8 *)((v9 + v14 + v11) & ~v14);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  if (v15 != v16)
  {
    uint64_t v18 = v12;
    unsigned int v19 = v15[v17];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v21 = v17;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v15;
          if (v17 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_13;
        case 2:
          int v22 = *(unsigned __int16 *)v15;
          if (v17 < 4) {
            goto LABEL_13;
          }
          goto LABEL_19;
        case 3:
          int v22 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          if (v17 < 4) {
            goto LABEL_13;
          }
          goto LABEL_19;
        case 4:
          int v22 = *(_DWORD *)v15;
          if (v17 < 4)
          {
LABEL_13:
            unsigned int v19 = (v22 | (v20 << (8 * v17))) + 2;
            break;
          }
LABEL_19:
          if (v22 != -1) {
            goto LABEL_20;
          }
          goto LABEL_15;
        default:
          break;
      }
    }
    if (v19 == 1) {
LABEL_15:
    }
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))((v9 + v14 + ((v9 + v10 + a1) & ~v10)) & ~v14, v12);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v23 = v16[v17];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v25 = v17;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v16;
          if (v17 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_29;
        case 2:
          int v26 = *(unsigned __int16 *)v16;
          if (v17 < 4) {
            goto LABEL_29;
          }
          goto LABEL_35;
        case 3:
          int v26 = *(unsigned __int16 *)((v9 + v14 + v11) & ~v14) | (*((unsigned __int8 *)&def_5F050
                                                                  + ((v9 + v14 + v11) & ~v14)
                                                                  + 2) << 16);
          if (v17 < 4) {
            goto LABEL_29;
          }
          goto LABEL_35;
        case 4:
          int v26 = *(_DWORD *)v16;
          if (v17 < 4)
          {
LABEL_29:
            unsigned int v23 = (v26 | (v24 << (8 * v17))) + 2;
            break;
          }
LABEL_35:
          if (v26 != -1) {
            goto LABEL_36;
          }
          goto LABEL_31;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
LABEL_31:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))((v9 + v14 + ((v9 + v10 + a1) & ~v10)) & ~v14, (v9 + v14 + v11) & ~v14, v18);
      char v27 = 1;
    }
    else
    {
LABEL_36:
      char v27 = 0;
      *(void *)uint64_t v15 = *(void *)v16;
    }
    v15[v17] = v27;
  }
  uint64_t v28 = v17 + 1;
  uint64_t v29 = &v15[v17 + 1];
  uint64_t v30 = &v16[v17 + 1];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  v29[2] = v30[2];
  uint64_t v31 = (void *)((unint64_t)(v29 + 10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)((unint64_t)(v30 + 10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v120 = v28;
  if (*v31 >= 0xFFFFFFFFuLL)
  {
    if (*v32 >= 0xFFFFFFFFuLL)
    {
      *uint64_t v31 = *v32;
      swift_release();
      v31[1] = v32[1];
      swift_release();
      v31[2] = v32[2];
      swift_release();
      v31[3] = v32[3];
      swift_release();
      goto LABEL_43;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
LABEL_43:
  uint64_t v130 = sub_26A220();
  uint64_t v34 = *(void *)(v130 - 8);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = ((unint64_t)v31 + (v35 | 7) + 32) & ~(v35 | 7);
  uint64_t v128 = v35 | 7;
  uint64_t v37 = ((unint64_t)v32 + (v35 | 7) + 32) & ~(v35 | 7);
  unint64_t v38 = *(void *)(v34 + 64);
  uint64_t v131 = ~v35;
  unint64_t v39 = v38 + ((v35 + 24) & ~v35);
  if (v38 > v39) {
    unint64_t v39 = *(void *)(*(void *)(v130 - 8) + 64);
  }
  uint64_t v40 = v35 + 16;
  if (v39 <= v38 + ((v35 + 16) & ~v35)) {
    unint64_t v39 = v38 + ((v35 + 16) & ~v35);
  }
  if (v39 <= ((v38 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v39 = ((v38 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v129 = *(unsigned __int8 *)(v34 + 80);
  size_t v126 = *(void *)(*(void *)(v130 - 8) + 64);
  uint64_t v127 = *(void *)(v130 - 8);
  if (v39 <= ((v38 + v35) & ~v35) + v38) {
    unint64_t v39 = ((v38 + v35) & ~v35) + v38;
  }
  if (v39 <= 0x10) {
    uint64_t v41 = 16;
  }
  else {
    uint64_t v41 = v39;
  }
  if (v36 != v37)
  {
    char v42 = 8 * v41;
    if (v41 <= 3)
    {
      unsigned int v43 = ((1 << v42) | 2u) >> v42;
      if (v43 > 0xFFF8)
      {
        unsigned int v44 = *(_DWORD *)(v36 + v41);
        unsigned int v45 = v44 - 7;
        if (v44 < 7) {
          goto LABEL_71;
        }
        goto LABEL_63;
      }
      if (v43 > 0xF8)
      {
        unsigned int v44 = *(unsigned __int16 *)(v36 + v41);
        unsigned int v45 = v44 - 7;
        if (v44 < 7) {
          goto LABEL_71;
        }
        goto LABEL_63;
      }
    }
    unsigned int v44 = *(unsigned __int8 *)(v36 + v41);
    unsigned int v45 = v44 - 7;
    if (v44 < 7) {
      goto LABEL_71;
    }
LABEL_63:
    if (v41 <= 3) {
      uint64_t v46 = v41;
    }
    else {
      uint64_t v46 = 4;
    }
    switch(v46)
    {
      case 1:
        int v47 = *(unsigned __int8 *)v36;
        if (v41 >= 4) {
          goto LABEL_99;
        }
        goto LABEL_70;
      case 2:
        int v47 = *(unsigned __int16 *)v36;
        if (v41 < 4) {
          goto LABEL_70;
        }
        goto LABEL_99;
      case 3:
        int v47 = *(unsigned __int16 *)v36 | (*(unsigned __int8 *)(v36 + 2) << 16);
        if (v41 < 4) {
          goto LABEL_70;
        }
        goto LABEL_99;
      case 4:
        int v47 = *(_DWORD *)v36;
        if (v41 < 4)
        {
LABEL_70:
          unsigned int v44 = (v47 | (v45 << v42)) + 7;
        }
        else
        {
LABEL_99:
          unsigned int v44 = v47 + 7;
          if (v44 > 5)
          {
LABEL_81:
            if (v41 <= 3)
            {
LABEL_82:
              unsigned int v50 = ((1 << v42) | 2u) >> v42;
              if (v50 > 0xFFF8)
              {
                unsigned int v51 = *(_DWORD *)(v37 + v41);
                unsigned int v52 = v51 - 7;
                if (v51 < 7)
                {
LABEL_103:
                  switch(v51)
                  {
                    case 0u:
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v37, v130);
                      if (v41 > 3) {
                        goto LABEL_107;
                      }
                      unsigned int v56 = ((1 << v42) | 2u) >> v42;
                      if (v56 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 0;
                      }
                      else if (v56 > 0xF8)
                      {
                        *(_WORD *)(v36 + v41) = 0;
                      }
                      else
                      {
LABEL_107:
                        *(unsigned char *)(v36 + v41) = 0;
                        if (v41 > 3) {
                          goto LABEL_134;
                        }
                      }
                      goto LABEL_162;
                    case 1u:
                      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
                      if (v41 > 3) {
                        goto LABEL_112;
                      }
                      __int16 v57 = 1;
                      unsigned int v58 = ((1 << v42) | 2u) >> v42;
                      if (v58 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 1;
                        goto LABEL_162;
                      }
                      if (v58 > 0xF8) {
                        goto LABEL_161;
                      }
LABEL_112:
                      char v59 = 1;
                      goto LABEL_129;
                    case 2u:
                      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
                      uint64_t v60 = (void *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v61 = (void *)((v37 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v60 = *v61;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v34 + 32))(((unint64_t)v60 + v129 + 8) & v131, ((unint64_t)v61 + v129 + 8) & v131, v130);
                      if (v41 > 3) {
                        goto LABEL_116;
                      }
                      unsigned int v62 = ((1 << v42) | 2u) >> v42;
                      if (v62 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 2;
                        goto LABEL_162;
                      }
                      if (v62 <= 0xF8)
                      {
LABEL_116:
                        char v59 = 2;
                        goto LABEL_129;
                      }
                      __int16 v57 = 2;
                      goto LABEL_161;
                    case 3u:
                      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))((v40 + v36) & v131, (v40 + v37) & v131, v130);
                      if (v41 > 3) {
                        goto LABEL_120;
                      }
                      unsigned int v63 = ((1 << v42) | 2u) >> v42;
                      if (v63 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 3;
                        goto LABEL_162;
                      }
                      if (v63 <= 0xF8)
                      {
LABEL_120:
                        char v59 = 3;
                        goto LABEL_129;
                      }
                      __int16 v57 = 3;
                      goto LABEL_161;
                    case 4u:
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v37, v130);
                      *(_OWORD *)(((v36 | 7) + v126) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v37 | 7) + v126) & 0xFFFFFFFFFFFFFFF8);
                      if (v41 > 3) {
                        goto LABEL_124;
                      }
                      unsigned int v64 = ((1 << v42) | 2u) >> v42;
                      if (v64 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 4;
                        goto LABEL_162;
                      }
                      if (v64 <= 0xF8)
                      {
LABEL_124:
                        char v59 = 4;
                        goto LABEL_129;
                      }
                      __int16 v57 = 4;
                      goto LABEL_161;
                    case 5u:
                      uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
                      v65(v36, v37, v130);
                      v65((v36 + v129 + v126) & v131, (v37 + v129 + v126) & v131, v130);
                      if (v41 > 3) {
                        goto LABEL_128;
                      }
                      unsigned int v66 = ((1 << v42) | 2u) >> v42;
                      if (v66 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 5;
                        goto LABEL_162;
                      }
                      if (v66 > 0xF8)
                      {
                        __int16 v57 = 5;
                        goto LABEL_161;
                      }
LABEL_128:
                      char v59 = 5;
LABEL_129:
                      *(unsigned char *)(v36 + v41) = v59;
                      if (v41 <= 3) {
                        goto LABEL_162;
                      }
                      goto LABEL_134;
                    case 6u:
                      *(void *)uint64_t v36 = *(void *)v37;
                      if (v41 > 3) {
                        goto LABEL_132;
                      }
                      unsigned int v69 = ((1 << v42) | 2u) >> v42;
                      if (v69 > 0xFFF8)
                      {
                        *(_DWORD *)(v36 + v41) = 6;
                      }
                      else
                      {
                        if (v69 <= 0xF8)
                        {
LABEL_132:
                          *(unsigned char *)(v36 + v41) = 6;
                          goto LABEL_133;
                        }
                        __int16 v57 = 6;
LABEL_161:
                        *(_WORD *)(v36 + v41) = v57;
                      }
                      break;
                    default:
                      goto LABEL_139;
                  }
                  goto LABEL_162;
                }
LABEL_90:
                if (v41 <= 3) {
                  uint64_t v54 = v41;
                }
                else {
                  uint64_t v54 = 4;
                }
                switch(v54)
                {
                  case 1:
                    int v55 = *(unsigned __int8 *)v37;
                    if (v41 >= 4) {
                      goto LABEL_138;
                    }
                    goto LABEL_102;
                  case 2:
                    int v55 = *(unsigned __int16 *)v37;
                    if (v41 < 4) {
                      goto LABEL_102;
                    }
                    goto LABEL_138;
                  case 3:
                    int v55 = *(unsigned __int16 *)v37 | (*(unsigned __int8 *)(v37 + 2) << 16);
                    if (v41 < 4) {
                      goto LABEL_102;
                    }
                    goto LABEL_138;
                  case 4:
                    int v55 = *(_DWORD *)v37;
                    if (v41 < 4)
                    {
LABEL_102:
                      unsigned int v51 = (v55 | (v52 << v42)) + 7;
                      goto LABEL_103;
                    }
LABEL_138:
                    unsigned int v51 = v55 + 7;
                    if (v51 <= 6) {
                      goto LABEL_103;
                    }
LABEL_139:
                    if (v41 > 3) {
                      goto LABEL_143;
                    }
                    unsigned int v67 = ((1 << v42) | 2u) >> v42;
                    uint64_t v68 = 2;
                    if (v67 > 0xFFF8) {
                      uint64_t v68 = 4;
                    }
                    if (v67 <= 0xF8) {
LABEL_143:
                    }
                      uint64_t v68 = 1;
                    memcpy((void *)v36, (const void *)v37, v68 + v41);
                    if (v41 <= 3) {
                      goto LABEL_162;
                    }
                    goto LABEL_134;
                  default:
                    goto LABEL_103;
                }
              }
              if (v50 > 0xF8)
              {
                unsigned int v51 = *(unsigned __int16 *)(v37 + v41);
                unsigned int v52 = v51 - 7;
                if (v51 < 7) {
                  goto LABEL_103;
                }
                goto LABEL_90;
              }
            }
LABEL_89:
            unsigned int v51 = *(unsigned __int8 *)(v37 + v41);
            unsigned int v52 = v51 - 7;
            if (v51 < 7) {
              goto LABEL_103;
            }
            goto LABEL_90;
          }
        }
        break;
      default:
        break;
    }
LABEL_71:
    switch(v44)
    {
      case 0u:
        (*(void (**)(unint64_t, uint64_t))(v34 + 8))(((unint64_t)v31 + (v35 | 7) + 32) & ~(v35 | 7), v130);
        goto LABEL_78;
      case 1u:
        swift_bridgeObjectRelease();
        if (v41 > 3) {
          goto LABEL_89;
        }
        goto LABEL_82;
      case 2u:
        swift_bridgeObjectRelease();
        char v48 = (id *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);

        uint64_t v49 = (uint64_t)v48 + v129 + 8;
        goto LABEL_77;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v49 = v40 + v36;
LABEL_77:
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v49 & v131, v130);
LABEL_78:
        if (v41 > 3) {
          goto LABEL_89;
        }
        goto LABEL_82;
      case 4u:
        (*(void (**)(unint64_t, uint64_t))(v34 + 8))(((unint64_t)v31 + (v35 | 7) + 32) & ~(v35 | 7), v130);
        swift_bridgeObjectRelease();
        goto LABEL_81;
      case 5u:
        unsigned int v53 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v53(v36, v130);
        v53((v36 + v129 + v126) & v131, v130);
        if (v41 > 3) {
          goto LABEL_89;
        }
        goto LABEL_82;
      default:
        goto LABEL_81;
    }
  }
LABEL_133:
  if (v41 > 3)
  {
LABEL_134:
    char v118 = 1;
LABEL_165:
    uint64_t v71 = 1;
    goto LABEL_166;
  }
LABEL_162:
  unsigned int v70 = ((1 << (8 * v41)) | 2u) >> (8 * v41);
  uint64_t v71 = 2;
  if (v70 > 0xFFF8) {
    uint64_t v71 = 4;
  }
  char v118 = 0;
  if (v70 <= 0xF8) {
    goto LABEL_165;
  }
LABEL_166:
  uint64_t v119 = v41;
  uint64_t v72 = v71 + v41;
  uint64_t v73 = v72 + v36;
  uint64_t v74 = v72 + v37;
  *(unsigned char *)(v72 + v36) = *(unsigned char *)(v72 + v37);
  uint64_t v75 = sub_2696C0();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = *(_DWORD *)(v76 + 80) & 0xF8;
  uint64_t v78 = v77 | 7;
  v77 += 8;
  size_t v79 = (unsigned __int8 *)((v77 + v73) & ~v78);
  uint64_t v80 = (unsigned __int8 *)((v77 + v74) & ~v78);
  if (*(void *)(v76 + 64) <= 0x28uLL) {
    uint64_t v81 = 40;
  }
  else {
    uint64_t v81 = *(void *)(v76 + 64);
  }
  if (v79 != v80)
  {
    uint64_t v82 = v75;
    unsigned int v83 = v79[v81];
    unsigned int v84 = v83 - 2;
    if (v83 >= 2)
    {
      if (v81 <= 3) {
        uint64_t v85 = v81;
      }
      else {
        uint64_t v85 = 4;
      }
      switch(v85)
      {
        case 1:
          int v86 = *v79;
          if (v81 >= 4) {
            goto LABEL_184;
          }
          goto LABEL_178;
        case 2:
          int v86 = *(unsigned __int16 *)v79;
          if (v81 < 4) {
            goto LABEL_178;
          }
          goto LABEL_184;
        case 3:
          int v86 = *(unsigned __int16 *)v79 | (v79[2] << 16);
          if (v81 < 4) {
            goto LABEL_178;
          }
          goto LABEL_184;
        case 4:
          int v86 = *(_DWORD *)v79;
          if (v81 < 4)
          {
LABEL_178:
            unsigned int v83 = (v86 | (v84 << (8 * v81))) + 2;
            break;
          }
LABEL_184:
          if (v86 != -1) {
            goto LABEL_185;
          }
          goto LABEL_180;
        default:
          break;
      }
    }
    if (v83 == 1)
    {
LABEL_180:
      (*(void (**)(unsigned __int8 *, uint64_t))(v76 + 8))(v79, v75);
    }
    else
    {
LABEL_185:
      if (*((void *)v79 + 3) >= 0xFFFFFFFFuLL) {
        _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v79);
      }
    }
    unsigned int v87 = v80[v81];
    unsigned int v88 = v87 - 2;
    if (v87 >= 2)
    {
      if (v81 <= 3) {
        uint64_t v89 = v81;
      }
      else {
        uint64_t v89 = 4;
      }
      switch(v89)
      {
        case 1:
          int v90 = *v80;
          if (v81 >= 4) {
            goto LABEL_201;
          }
          goto LABEL_195;
        case 2:
          int v90 = *(unsigned __int16 *)v80;
          if (v81 < 4) {
            goto LABEL_195;
          }
          goto LABEL_201;
        case 3:
          int v90 = *(unsigned __int16 *)v80 | (v80[2] << 16);
          if (v81 < 4) {
            goto LABEL_195;
          }
          goto LABEL_201;
        case 4:
          int v90 = *(_DWORD *)v80;
          if (v81 < 4)
          {
LABEL_195:
            unsigned int v87 = (v90 | (v88 << (8 * v81))) + 2;
            break;
          }
LABEL_201:
          if (v90 != -1) {
            goto LABEL_202;
          }
          goto LABEL_197;
        default:
          break;
      }
    }
    if (v87 == 1)
    {
LABEL_197:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v76 + 32))(v79, v80, v82);
      char v91 = 1;
    }
    else
    {
LABEL_202:
      char v91 = 0;
      long long v92 = *(_OWORD *)v80;
      long long v93 = *((_OWORD *)v80 + 1);
      *((void *)v79 + 4) = *((void *)v80 + 4);
      *(_OWORD *)size_t v79 = v92;
      *((_OWORD *)v79 + 1) = v93;
    }
    v79[v81] = v91;
  }
  uint64_t v94 = ~v10;
  uint64_t v95 = v81 + 1;
  uint64_t v96 = (void *)((unint64_t)&v79[v129 + v95] & v131);
  uint64_t v97 = (void *)((unint64_t)&v80[v129 + v95] & v131);
  uint64_t v98 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v127 + 48);
  int v99 = v98(v96, 1, v130);
  int v100 = v98(v97, 1, v130);
  if (!v99)
  {
    if (v100)
    {
      uint64_t v101 = v127;
      (*(void (**)(void *, uint64_t))(v127 + 8))(v96, v130);
      int v102 = *(_DWORD *)(v127 + 84);
      goto LABEL_209;
    }
    uint64_t v101 = v127;
    (*(void (**)(void *, void *, uint64_t))(v127 + 40))(v96, v97, v130);
LABEL_215:
    size_t v103 = v126;
    goto LABEL_216;
  }
  if (!v100)
  {
    uint64_t v101 = v127;
    (*(void (**)(void *, void *, uint64_t))(v127 + 32))(v96, v97, v130);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v96, 0, 1, v130);
    goto LABEL_215;
  }
  uint64_t v101 = v127;
  int v102 = *(_DWORD *)(v127 + 84);
LABEL_209:
  size_t v103 = v126;
  if (v102) {
    size_t v104 = v126;
  }
  else {
    size_t v104 = v126 + 1;
  }
  memcpy(v96, v97, v104);
LABEL_216:
  if (v118) {
    unsigned int v105 = 8;
  }
  else {
    unsigned int v105 = (((1 << (8 * v119)) | 2u) >> (8 * v119)) + 7;
  }
  if (*(_DWORD *)(v101 + 84)) {
    size_t v106 = v103;
  }
  else {
    size_t v106 = v103 + 1;
  }
  uint64_t v107 = 4;
  if (v105 < 0x10000) {
    uint64_t v107 = 2;
  }
  if (v105 < 0x100) {
    uint64_t v108 = 1;
  }
  else {
    uint64_t v108 = v107;
  }
  size_t v109 = v106
       + ((v95
         + v129
         + (((((((((v121 & v94) + v122 + v14) & ~v14) + v120 + 10) & 0xFFFFFFFFFFFFFFF8) + v128 + 32) & ~v128 | 1)
           + v119
           + v78
           + v108) & ~v78)) & v131);
  uint64_t v110 = v109 + v125;
  uint64_t v111 = v109 + v123;
  *(_WORD *)uint64_t v110 = *(_WORD *)v111;
  *(unsigned char *)(v110 + 2) = *(unsigned char *)(v111 + 2);
  unint64_t v112 = (v110 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v113 = (v111 + 10) & 0xFFFFFFFFFFFFFFF8;
  _s7BooksUI13AnyPagedFrameVwxx_0(v112);
  long long v114 = *(_OWORD *)v113;
  long long v115 = *(_OWORD *)(v113 + 16);
  *(void *)(v112 + 32) = *(void *)(v113 + 32);
  *(_OWORD *)unint64_t v112 = v114;
  *(_OWORD *)(v112 + 16) = v115;
  uint64_t v116 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v116 + 40))((*(unsigned __int8 *)(v116 + 80) + 40 + v112) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80), (*(unsigned __int8 *)(v116 + 80) + 40 + v113) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
  return v125;
}

uint64_t sub_2094F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v120 = sub_4A98(&qword_2EBDF0);
  uint64_t v123 = *(void *)(v120 - 8);
  uint64_t v5 = *(unsigned int *)(v123 + 84);
  uint64_t v6 = *(void *)(sub_26A6E0() - 8);
  int v7 = 8;
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(v6 + 64);
  }
  if (v5 <= 0x7FFFFFFC) {
    unsigned int v9 = 2147483644;
  }
  else {
    unsigned int v9 = v5;
  }
  uint64_t v10 = *(void *)(sub_26A220() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  uint64_t v122 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = ((v12 + 24) & ~v12) + v11;
  if (v11 > v13) {
    unint64_t v13 = *(void *)(v10 + 64);
  }
  if (v13 <= ((v12 + 16) & ~v12) + v11) {
    unint64_t v13 = ((v12 + 16) & ~v12) + v11;
  }
  if (v13 <= ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v13 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v13 <= ((v11 + v12) & ~v12) + v11) {
    unint64_t v13 = ((v11 + v12) & ~v12) + v11;
  }
  if (v13 <= 0x10) {
    uint64_t v14 = 16;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3) {
    goto LABEL_21;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (v15 > 0xFFF8)
  {
LABEL_23:
    unsigned int v17 = 0x7FFFFFFF;
    goto LABEL_24;
  }
  int v7 = v15 + 7;
  if (v15 > 0xF8) {
    char v16 = 16;
  }
  else {
LABEL_21:
  }
    char v16 = 8;
  unsigned int v17 = (1 << v16) - v7;
  if ((v17 & 0x80000000) != 0) {
    goto LABEL_23;
  }
LABEL_24:
  if (v17 <= v9) {
    unsigned int v18 = v9;
  }
  else {
    unsigned int v18 = v17;
  }
  uint64_t v19 = *(void *)(sub_2696C0() - 8);
  if (*(void *)(v19 + 64) <= 0x28uLL) {
    uint64_t v20 = 40;
  }
  else {
    uint64_t v20 = *(void *)(v19 + 64);
  }
  unsigned int v21 = *(_DWORD *)(v122 + 84);
  if (v21) {
    unsigned int v22 = v21 - 1;
  }
  else {
    unsigned int v22 = 0;
  }
  if (v18 <= v22) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = v18;
  }
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = *(unsigned int *)(v24 + 84);
  if (v23 <= v25) {
    unsigned int v23 = *(_DWORD *)(v24 + 84);
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v26 = 0x7FFFFFFF;
  }
  else {
    unsigned int v26 = v23;
  }
  uint64_t v27 = *(void *)(v123 + 64);
  uint64_t v28 = *(unsigned __int8 *)(v123 + 80);
  if (v14 > 3
    || ((unsigned int v29 = ((1 << (8 * v14)) | 2u) >> (8 * v14), v29 <= 0xFFF8) ? (v30 = 2) : (v30 = 4), v29 <= 0xF8))
  {
    uint64_t v30 = 1;
  }
  if (v21) {
    unint64_t v31 = v11;
  }
  else {
    unint64_t v31 = v11 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v32 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  uint64_t v33 = v8 + 11;
  uint64_t v34 = v12 + 32;
  unint64_t v35 = v12 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = ~v12;
  uint64_t v37 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  uint64_t v38 = v14 + 1;
  unint64_t v39 = v14 + 1 + ((v12 + 32 + ((v8 + 11 + ((v27 + v32 + ((v27 + v28) & ~v28)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)) & v35);
  uint64_t v40 = v20 + v12 + 1;
  uint64_t v41 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v42 = v41 + 40;
  if (a2 > v26)
  {
    unint64_t v43 = ((v42 + ((v31 + ((v40 + ((v39 + v30 + v37) & ~v37)) & v36) + 10) & 0xFFFFFFFFFFFFFFF8)) & ~v41)
        + *(void *)(v24 + 64);
    char v44 = 8 * v43;
    if (v43 > 3) {
      goto LABEL_53;
    }
    unsigned int v46 = ((a2 - v26 + ~(-1 << v44)) >> v44) + 1;
    if (HIWORD(v46))
    {
      int v45 = *(_DWORD *)((char *)a1 + v43);
      if (!v45) {
        goto LABEL_71;
      }
      goto LABEL_61;
    }
    if (v46 > 0xFF)
    {
      int v45 = *(unsigned __int16 *)((char *)a1 + v43);
      if (!*(unsigned __int16 *)((char *)a1 + v43)) {
        goto LABEL_71;
      }
      goto LABEL_61;
    }
    if (v46 >= 2)
    {
LABEL_53:
      int v45 = *((unsigned __int8 *)a1 + v43);
      if (!*((unsigned char *)a1 + v43)) {
        goto LABEL_71;
      }
LABEL_61:
      int v47 = (v45 - 1) << v44;
      if (v43 > 3) {
        int v47 = 0;
      }
      if (v43)
      {
        if (v43 <= 3) {
          int v48 = ((v42 + ((v31 + ((v40 + ((v39 + v30 + v37) & ~v37)) & v36) + 10) & 0xFFFFFFF8)) & ~v41)
        }
              + *(_DWORD *)(v24 + 64);
        else {
          int v48 = 4;
        }
        switch(v48)
        {
          case 2:
            int v49 = *a1;
            break;
          case 3:
            int v49 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v49 = *(_DWORD *)a1;
            break;
          default:
            int v49 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v49 = 0;
      }
      return v26 + (v49 | v47) + 1;
    }
  }
LABEL_71:
  if (v14 > 3)
  {
    int v50 = 8;
    goto LABEL_75;
  }
  unsigned int v51 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (v51 <= 0xFFF8)
  {
    int v50 = v51 + 7;
    if (v51 > 0xF8)
    {
      char v52 = 16;
LABEL_76:
      unsigned int v53 = (1 << v52) - v50;
      if ((v53 & 0x80000000) == 0) {
        goto LABEL_78;
      }
      goto LABEL_77;
    }
LABEL_75:
    char v52 = 8;
    goto LABEL_76;
  }
LABEL_77:
  unsigned int v53 = 0x7FFFFFFF;
LABEL_78:
  if (v53 <= v9) {
    unsigned int v53 = v9;
  }
  if (v53 <= v22) {
    unsigned int v53 = v22;
  }
  if (v53 <= v25) {
    unsigned int v54 = *(_DWORD *)(v24 + 84);
  }
  else {
    unsigned int v54 = v53;
  }
  if (v54 <= 0x7FFFFFFF) {
    unsigned int v55 = 0x7FFFFFFF;
  }
  else {
    unsigned int v55 = v54;
  }
  if (v14 > 3)
  {
    int v56 = 8;
LABEL_92:
    char v58 = 8;
    goto LABEL_93;
  }
  unsigned int v57 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (v57 > 0xFFF8)
  {
LABEL_94:
    unsigned int v59 = 0x7FFFFFFF;
    goto LABEL_95;
  }
  int v56 = v57 + 7;
  if (v57 <= 0xF8) {
    goto LABEL_92;
  }
  char v58 = 16;
LABEL_93:
  unsigned int v59 = (1 << v58) - v56;
  if ((v59 & 0x80000000) != 0) {
    goto LABEL_94;
  }
LABEL_95:
  uint64_t v60 = ~v37;
  if (v59 <= v9) {
    unsigned int v59 = v9;
  }
  if (v59 <= v22) {
    unsigned int v59 = v22;
  }
  if (v59 == v55)
  {
    if (v14 <= 3)
    {
      unsigned int v67 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (v67 > 0xFFF8)
      {
LABEL_115:
        unsigned int v69 = 0x7FFFFFFF;
LABEL_116:
        if (v69 <= v9) {
          unsigned int v69 = v9;
        }
        if (v69 <= v22) {
          unsigned int v69 = v22;
        }
        if (v14 > 3) {
          goto LABEL_124;
        }
        unsigned int v70 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        uint64_t v71 = 2;
        if (v70 > 0xFFF8) {
          uint64_t v71 = 4;
        }
        if (v70 <= 0xF8) {
LABEL_124:
        }
          uint64_t v71 = 1;
        BOOL v90 = v55 >= v69;
        unsigned int v72 = v55 - v69;
        if (v72 == 0 || !v90)
        {
LABEL_155:
          if (v14 <= 3)
          {
            unsigned int v82 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
            if (v82 > 0xFFF8)
            {
LABEL_161:
              unsigned int v84 = 0x7FFFFFFF;
LABEL_162:
              if (v84 <= v9) {
                unsigned int v84 = v9;
              }
              if (v84 > v22) {
                unsigned int v22 = v84;
              }
              if (v5 == v22)
              {
                uint64_t v85 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v123 + 48);
                return v85(a1, v5, v120);
              }
              int v86 = (unint64_t *)((v33 + (((((unint64_t)a1 + v27 + v28) & ~v28) + v27 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8);
              if (v22 == 2147483644)
              {
                unint64_t v87 = *v86;
                if (v87 >= 0xFFFFFFFF) {
                  LODWORD(v87) = -1;
                }
                unsigned int v88 = v87 + 1;
                unsigned int v89 = v87 - 2;
                BOOL v90 = v88 >= 4;
                goto LABEL_195;
              }
              unint64_t v91 = (unint64_t)v86 + v34;
              if (v14 <= 3)
              {
                unsigned int v93 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
                if (v93 > 0xFFF8)
                {
LABEL_181:
                  int v95 = 0x7FFFFFFF;
LABEL_182:
                  uint64_t v96 = (unsigned __int16 *)(v91 & v35);
                  if (v95 != v22)
                  {
                    if (v14 > 3) {
                      goto LABEL_192;
                    }
                    unsigned int v100 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
                    uint64_t v101 = 2;
                    if (v100 > 0xFFF8) {
                      uint64_t v101 = 4;
                    }
                    if (v100 <= 0xF8) {
LABEL_192:
                    }
                      uint64_t v101 = 1;
                    if (v21 >= 2)
                    {
                      unsigned int v102 = (*(uint64_t (**)(unint64_t))(v122 + 48))((v40
                                                                                      + (((unint64_t)v96
                                                                                        + v38
                                                                                        + v37
                                                                                        + v101) & v60)) & v36);
                      unsigned int v89 = v102 - 1;
                      BOOL v90 = v102 >= 2;
LABEL_195:
                      if (v90) {
                        return v89;
                      }
                      else {
                        return 0;
                      }
                    }
                    return 0;
                  }
                  if (v14 <= 3)
                  {
                    unsigned int v103 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
                    if (v103 > 0xFFF8) {
                      goto LABEL_205;
                    }
                    int v97 = v103 + 7;
                    if (v103 > 0xF8)
                    {
                      char v98 = 16;
LABEL_186:
                      unsigned int v99 = (1 << v98) - v97;
                      if ((v99 & 0x80000000) == 0)
                      {
LABEL_206:
                        if (v14 <= 3)
                        {
                          unsigned int v104 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
                          if (v104 >= 0xF9)
                          {
                            uint64_t v105 = 2;
                            if (v104 > 0xFFF8) {
                              uint64_t v105 = 4;
                            }
                            uint64_t v38 = v105 + v14;
                          }
                        }
                        if (v22 <= v99) {
                          goto LABEL_229;
                        }
                        char v106 = 8 * v38;
                        if (v38 > 3) {
                          goto LABEL_213;
                        }
                        unsigned int v108 = ((v22 - v99 + ~(-1 << v106)) >> v106) + 1;
                        if (HIWORD(v108))
                        {
                          int v107 = *(_DWORD *)((char *)v96 + v38);
                        }
                        else
                        {
                          if (v108 <= 0xFF)
                          {
                            if (v108 < 2) {
                              goto LABEL_229;
                            }
LABEL_213:
                            int v107 = *((unsigned __int8 *)v96 + v38);
                            goto LABEL_221;
                          }
                          int v107 = *(unsigned __int16 *)((char *)v96 + v38);
                        }
LABEL_221:
                        if (v107)
                        {
                          int v109 = (v107 - 1) << v106;
                          if (v38 > 3) {
                            int v109 = 0;
                          }
                          if (v38)
                          {
                            if (v38 > 3) {
                              LODWORD(v38) = 4;
                            }
                            switch((int)v38)
                            {
                              case 2:
                                int v110 = *v96;
                                break;
                              case 3:
                                int v110 = *v96 | (*((unsigned __int8 *)v96 + 2) << 16);
                                break;
                              case 4:
                                int v110 = *(_DWORD *)v96;
                                break;
                              default:
                                int v110 = *(unsigned __int8 *)v96;
                                break;
                            }
                          }
                          else
                          {
                            int v110 = 0;
                          }
                          return v99 + (v110 | v109) + 1;
                        }
LABEL_229:
                        if (v99)
                        {
                          if (v14 <= 3)
                          {
                            unsigned int v116 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
                            if (v116 > 0xFFF8)
                            {
                              unsigned int v112 = *(_DWORD *)((char *)v96 + v14);
                              unsigned int v113 = ~v112;
LABEL_240:
                              unsigned int v119 = 0x7FFFFFFF;
LABEL_241:
                              if (v119 > v113) {
                                return -v112;
                              }
                              else {
                                return 0;
                              }
                            }
                            int v114 = v116 + 7;
                            if (v116 > 0xF8)
                            {
                              int v118 = *(unsigned __int16 *)((char *)v96 + v14);
                              unsigned int v112 = v118 | 0xFFFF0000;
                              unsigned int v113 = v118 ^ 0xFFFF;
                              char v115 = 16;
                            }
                            else
                            {
                              int v117 = *((unsigned __int8 *)v96 + v14);
                              unsigned int v112 = v117 | 0xFFFFFF00;
                              unsigned int v113 = v117 ^ 0xFF;
                              char v115 = 8;
                            }
                          }
                          else
                          {
                            int v111 = *((unsigned __int8 *)v96 + v14);
                            unsigned int v112 = v111 | 0xFFFFFF00;
                            unsigned int v113 = v111 ^ 0xFF;
                            int v114 = 8;
                            char v115 = 8;
                          }
                          unsigned int v119 = (1 << v115) - v114;
                          if ((v119 & 0x80000000) == 0) {
                            goto LABEL_241;
                          }
                          goto LABEL_240;
                        }
                        return 0;
                      }
LABEL_205:
                      unsigned int v99 = 0x7FFFFFFF;
                      goto LABEL_206;
                    }
                  }
                  else
                  {
                    int v97 = 8;
                  }
                  char v98 = 8;
                  goto LABEL_186;
                }
                int v92 = v93 + 7;
                if (v93 > 0xF8)
                {
                  char v94 = 16;
LABEL_180:
                  int v95 = (1 << v94) - v92;
                  if ((v95 & 0x80000000) == 0) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                }
              }
              else
              {
                int v92 = 8;
              }
              char v94 = 8;
              goto LABEL_180;
            }
            int v81 = v82 + 7;
            if (v82 > 0xF8)
            {
              char v83 = 16;
LABEL_160:
              unsigned int v84 = (1 << v83) - v81;
              if ((v84 & 0x80000000) == 0) {
                goto LABEL_162;
              }
              goto LABEL_161;
            }
          }
          else
          {
            int v81 = 8;
          }
          char v83 = 8;
          goto LABEL_160;
        }
        unint64_t v73 = ((v40 + ((v39 + v37 + v71) & v60)) & v36) + v31;
        char v74 = 8 * v73;
        if (v73 > 3) {
          goto LABEL_128;
        }
        unsigned int v77 = ((v72 + ~(-1 << v74)) >> v74) + 1;
        if (HIWORD(v77))
        {
          int v75 = *(_DWORD *)((char *)a1 + v73);
          if (!v75) {
            goto LABEL_155;
          }
        }
        else
        {
          if (v77 <= 0xFF)
          {
            if (v77 < 2) {
              goto LABEL_155;
            }
LABEL_128:
            int v75 = *((unsigned __int8 *)a1 + v73);
            if (!*((unsigned char *)a1 + v73)) {
              goto LABEL_155;
            }
            goto LABEL_145;
          }
          int v75 = *(unsigned __int16 *)((char *)a1 + v73);
          if (!*(unsigned __int16 *)((char *)a1 + v73)) {
            goto LABEL_155;
          }
        }
LABEL_145:
        int v78 = (v75 - 1) << v74;
        if (v73 > 3) {
          int v78 = 0;
        }
        if (v73)
        {
          if (v73 <= 3) {
            int v79 = v73;
          }
          else {
            int v79 = 4;
          }
          switch(v79)
          {
            case 2:
              int v80 = *a1;
              break;
            case 3:
              int v80 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v80 = *(_DWORD *)a1;
              break;
            default:
              int v80 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v80 = 0;
        }
        return v69 + (v80 | v78) + 1;
      }
      int v61 = v67 + 7;
      if (v67 > 0xF8)
      {
        char v68 = 16;
LABEL_114:
        unsigned int v69 = (1 << v68) - v61;
        if ((v69 & 0x80000000) == 0) {
          goto LABEL_116;
        }
        goto LABEL_115;
      }
    }
    else
    {
      int v61 = 8;
    }
    char v68 = 8;
    goto LABEL_114;
  }
  if (v14 > 3) {
    goto LABEL_106;
  }
  unsigned int v62 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  uint64_t v63 = 2;
  if (v62 > 0xFFF8) {
    uint64_t v63 = 4;
  }
  if (v62 <= 0xF8) {
LABEL_106:
  }
    uint64_t v63 = 1;
  unint64_t v64 = ((unint64_t)a1 + v31 + ((v40 + ((v39 + v37 + v63) & v60)) & v36) + 10) & 0xFFFFFFFFFFFFFFF8;
  if ((v54 & 0x80000000) != 0)
  {
    uint64_t v76 = *(uint64_t (**)(unint64_t, uint64_t))(v24 + 48);
    return v76((v42 + v64) & ~v41, v25);
  }
  else
  {
    unint64_t v65 = *(void *)(v64 + 24);
    if (v65 >= 0xFFFFFFFF) {
      LODWORD(v65) = -1;
    }
    return (v65 + 1);
  }
}

void sub_20A15C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v126 = sub_4A98(&qword_2EBDF0);
  uint64_t v129 = *(void *)(v126 - 8);
  unsigned int v8 = *(_DWORD *)(v129 + 84);
  uint64_t v9 = *(void *)(sub_26A6E0() - 8);
  int v10 = 8;
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  unsigned int v127 = v8;
  if (v8 <= 0x7FFFFFFC) {
    int v12 = 2147483644;
  }
  else {
    int v12 = v8;
  }
  unsigned int v132 = v12;
  uint64_t v125 = sub_26A220();
  size_t v13 = *(void *)(*(void *)(v125 - 8) + 64);
  uint64_t v128 = *(void *)(v125 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v128 + 80);
  unint64_t v15 = ((v14 + 24) & ~v14) + v13;
  if (v13 > v15) {
    unint64_t v15 = *(void *)(*(void *)(v125 - 8) + 64);
  }
  if (v15 <= ((v14 + 16) & ~v14) + v13) {
    unint64_t v15 = ((v14 + 16) & ~v14) + v13;
  }
  if (v15 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v15 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v15 <= ((v13 + v14) & ~v14) + v13) {
    unint64_t v15 = ((v13 + v14) & ~v14) + v13;
  }
  if (v15 <= 0x10) {
    unint64_t v15 = 16;
  }
  char v131 = 8 * v15;
  unint64_t v16 = v15;
  if (v15 > 3) {
    goto LABEL_18;
  }
  unsigned int v19 = ((1 << v131) | 2u) >> v131;
  if (v19 > 0xFFF8)
  {
LABEL_24:
    unsigned int v18 = 0x7FFFFFFF;
    goto LABEL_25;
  }
  int v10 = v19 + 7;
  if (v19 <= 0xF8) {
LABEL_18:
  }
    char v17 = 8;
  else {
    char v17 = 16;
  }
  unsigned int v18 = (1 << v17) - v10;
  if ((v18 & 0x80000000) != 0) {
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v130 = ~v14;
  if (v18 <= v132) {
    unsigned int v20 = v132;
  }
  else {
    unsigned int v20 = v18;
  }
  uint64_t v21 = *(void *)(sub_2696C0() - 8);
  if (*(void *)(v21 + 64) <= 0x28uLL) {
    uint64_t v22 = 40;
  }
  else {
    uint64_t v22 = *(void *)(v21 + 64);
  }
  uint64_t v23 = *(unsigned int *)(v128 + 84);
  if (v23) {
    unsigned int v24 = v23 - 1;
  }
  else {
    unsigned int v24 = 0;
  }
  if (v20 <= v24) {
    unsigned int v25 = v24;
  }
  else {
    unsigned int v25 = v20;
  }
  uint64_t v26 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v27 = *(unsigned int *)(v26 + 84);
  if (v25 <= v27) {
    unsigned int v25 = *(_DWORD *)(v26 + 84);
  }
  if (v25 <= 0x7FFFFFFF) {
    unsigned int v28 = 0x7FFFFFFF;
  }
  else {
    unsigned int v28 = v25;
  }
  uint64_t v29 = *(void *)(v129 + 64);
  uint64_t v30 = *(unsigned __int8 *)(v129 + 80);
  uint64_t v31 = v29 + v30;
  uint64_t v32 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v33 = v11 + 11;
  unint64_t v34 = v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = v14 + 32;
  if (v16 > 3) {
    goto LABEL_46;
  }
  unsigned int v36 = ((1 << v131) | 2u) >> v131;
  uint64_t v37 = 2;
  if (v36 > 0xFFF8) {
    uint64_t v37 = 4;
  }
  if (v36 <= 0xF8) {
LABEL_46:
  }
    uint64_t v37 = 1;
  uint64_t v38 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  size_t v39 = v16 + 1;
  unint64_t v40 = v16 + 1 + ((v14 + 32 + ((v11 + 11 + ((v29 + v32 + ((v29 + v30) & ~v30)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)) & v34);
  uint64_t v41 = v22 + v14 + 1;
  unint64_t v42 = (v41 + ((v40 + v37 + v38) & ~v38)) & v130;
  if (v23) {
    size_t v43 = v13;
  }
  else {
    size_t v43 = v13 + 1;
  }
  unint64_t v44 = (v43 + v42 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v46 = v45 + 40;
  size_t v47 = ((v45 + 40 + v44) & ~v45) + *(void *)(v26 + 64);
  if (a3 <= v28)
  {
    int v48 = 0;
  }
  else if (v47 <= 3)
  {
    unsigned int v54 = ((a3 - v28 + ~(-1 << (8 * v47))) >> (8 * v47)) + 1;
    if (HIWORD(v54))
    {
      int v48 = 4;
    }
    else if (v54 >= 0x100)
    {
      int v48 = 2;
    }
    else
    {
      int v48 = v54 > 1;
    }
  }
  else
  {
    int v48 = 1;
  }
  if (v28 < a2)
  {
    unsigned int v49 = ~v28 + a2;
    if (v47 < 4)
    {
      int v50 = (v49 >> (8 * v47)) + 1;
      if (v47)
      {
        int v55 = v49 & ~(-1 << (8 * v47));
        bzero(a1, v47);
        if (v47 == 3)
        {
          *(_WORD *)a1 = v55;
          a1[2] = BYTE2(v55);
        }
        else if (v47 == 2)
        {
          *(_WORD *)a1 = v55;
        }
        else
        {
          *a1 = v55;
        }
      }
    }
    else
    {
      bzero(a1, v47);
      *(_DWORD *)a1 = v49;
      int v50 = 1;
    }
    switch(v48)
    {
      case 1:
        a1[v47] = v50;
        return;
      case 2:
        *(_WORD *)&a1[v47] = v50;
        return;
      case 3:
        goto LABEL_263;
      case 4:
        *(_DWORD *)&a1[v47] = v50;
        return;
      default:
        return;
    }
  }
  uint64_t v51 = ~v30;
  uint64_t v52 = ~v38;
  uint64_t v53 = ~v45;
  switch(v48)
  {
    case 1:
      a1[v47] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_70;
    case 2:
      *(_WORD *)&a1[v47] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_70;
    case 3:
LABEL_263:
      __break(1u);
      JUMPOUT(0x20AF78);
    case 4:
      *(_DWORD *)&a1[v47] = 0;
      goto LABEL_69;
    default:
LABEL_69:
      if (!a2) {
        return;
      }
LABEL_70:
      unint64_t v56 = v16;
      if (v16 > 3)
      {
        int v57 = 8;
LABEL_72:
        char v58 = 8;
        goto LABEL_73;
      }
      unsigned int v60 = ((1 << v131) | 2u) >> v131;
      if (v60 > 0xFFF8) {
        goto LABEL_78;
      }
      int v57 = v60 + 7;
      if (v60 <= 0xF8) {
        goto LABEL_72;
      }
      char v58 = 16;
LABEL_73:
      unsigned int v59 = (1 << v58) - v57;
      if ((v59 & 0x80000000) == 0) {
        goto LABEL_79;
      }
LABEL_78:
      unsigned int v59 = 0x7FFFFFFF;
LABEL_79:
      if (v59 <= v132) {
        unsigned int v59 = v132;
      }
      if (v59 <= v24) {
        unsigned int v59 = v24;
      }
      if (v59 <= v27) {
        unsigned int v61 = v27;
      }
      else {
        unsigned int v61 = v59;
      }
      if (v61 <= 0x7FFFFFFF) {
        unsigned int v62 = 0x7FFFFFFF;
      }
      else {
        unsigned int v62 = v61;
      }
      uint64_t v63 = v51;
      if (v56 > 3)
      {
        int v64 = 8;
LABEL_91:
        char v65 = 8;
        goto LABEL_92;
      }
      unsigned int v67 = ((1 << v131) | 2u) >> v131;
      if (v67 > 0xFFF8) {
        goto LABEL_97;
      }
      int v64 = v67 + 7;
      if (v67 <= 0xF8) {
        goto LABEL_91;
      }
      char v65 = 16;
LABEL_92:
      unsigned int v66 = (1 << v65) - v64;
      if ((v66 & 0x80000000) == 0) {
        goto LABEL_98;
      }
LABEL_97:
      unsigned int v66 = 0x7FFFFFFF;
LABEL_98:
      if (v66 <= v132) {
        unsigned int v66 = v132;
      }
      if (v66 <= v24) {
        unsigned int v66 = v24;
      }
      if (v66 != v62)
      {
        if (v56 > 3) {
          goto LABEL_109;
        }
        unsigned int v70 = ((1 << v131) | 2u) >> v131;
        uint64_t v71 = 2;
        if (v70 > 0xFFF8) {
          uint64_t v71 = 4;
        }
        if (v70 <= 0xF8) {
LABEL_109:
        }
          uint64_t v71 = 1;
        unint64_t v72 = (unint64_t)&a1[v43 + 10 + ((v41 + ((v40 + v38 + v71) & v52)) & v130)] & 0xFFFFFFFFFFFFFFF8;
        if ((v61 & 0x80000000) != 0)
        {
          unsigned int v82 = *(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 56);
          v82((v46 + v72) & v53, a2, v27);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(v72 + 8) = 0u;
          *(_OWORD *)(v72 + 24) = 0u;
          *(void *)unint64_t v72 = a2 ^ 0x80000000;
        }
        else
        {
          *(void *)(v72 + 24) = (a2 - 1);
        }
        return;
      }
      if (v56 > 3)
      {
        int v68 = 8;
        uint64_t v69 = v63;
LABEL_118:
        char v74 = 8;
        goto LABEL_119;
      }
      unsigned int v73 = ((1 << v131) | 2u) >> v131;
      uint64_t v69 = v63;
      if (v73 > 0xFFF8) {
        goto LABEL_120;
      }
      int v68 = v73 + 7;
      if (v73 <= 0xF8) {
        goto LABEL_118;
      }
      char v74 = 16;
LABEL_119:
      unsigned int v75 = (1 << v74) - v68;
      if ((v75 & 0x80000000) == 0) {
        goto LABEL_121;
      }
LABEL_120:
      unsigned int v75 = 0x7FFFFFFF;
LABEL_121:
      if (v75 <= v132) {
        unsigned int v75 = v132;
      }
      if (v75 <= v24) {
        unsigned int v75 = v24;
      }
      if (v56 > 3) {
        goto LABEL_129;
      }
      unsigned int v76 = ((1 << v131) | 2u) >> v131;
      uint64_t v77 = 2;
      if (v76 > 0xFFF8) {
        uint64_t v77 = 4;
      }
      if (v76 <= 0xF8) {
LABEL_129:
      }
        uint64_t v77 = 1;
      size_t v78 = ((v41 + ((v40 + v38 + v77) & v52)) & v130) + v43;
      BOOL v79 = v62 >= v75;
      unsigned int v80 = v62 - v75;
      if (v80 != 0 && v79)
      {
        if (v78 <= 3)
        {
          unsigned int v83 = ((v80 + ~(-1 << (8 * v78))) >> (8 * v78)) + 1;
          if (HIWORD(v83))
          {
            int v81 = 4;
          }
          else if (v83 >= 0x100)
          {
            int v81 = 2;
          }
          else
          {
            int v81 = v83 > 1;
          }
        }
        else
        {
          int v81 = 1;
        }
      }
      else
      {
        int v81 = 0;
      }
      if (v75 < a2)
      {
        unsigned int v84 = ~v75 + a2;
        if (v78 < 4)
        {
          int v85 = (v84 >> (8 * v78)) + 1;
          if (v78)
          {
            int v86 = v84 & ~(-1 << (8 * v78));
            bzero(a1, v78);
            if (v78 == 3)
            {
              *(_WORD *)a1 = v86;
              a1[2] = BYTE2(v86);
            }
            else if (v78 == 2)
            {
              *(_WORD *)a1 = v86;
            }
            else
            {
              *a1 = v86;
            }
          }
        }
        else
        {
          bzero(a1, v78);
          *(_DWORD *)a1 = v84;
          int v85 = 1;
        }
        switch(v81)
        {
          case 1:
            a1[v78] = v85;
            return;
          case 2:
            *(_WORD *)&a1[v78] = v85;
            return;
          case 3:
            goto LABEL_263;
          case 4:
            *(_DWORD *)&a1[v78] = v85;
            return;
          default:
            return;
        }
      }
      switch(v81)
      {
        case 1:
          a1[v78] = 0;
          goto LABEL_161;
        case 2:
          *(_WORD *)&a1[v78] = 0;
          goto LABEL_161;
        case 3:
          goto LABEL_263;
        case 4:
          *(_DWORD *)&a1[v78] = 0;
          goto LABEL_161;
        default:
LABEL_161:
          if (v56 > 3)
          {
            int v87 = 8;
            uint64_t v88 = v127;
LABEL_165:
            char v90 = 8;
            goto LABEL_166;
          }
          unsigned int v89 = ((1 << v131) | 2u) >> v131;
          uint64_t v88 = v127;
          if (v89 > 0xFFF8) {
            goto LABEL_167;
          }
          int v87 = v89 + 7;
          if (v89 <= 0xF8) {
            goto LABEL_165;
          }
          char v90 = 16;
LABEL_166:
          unsigned int v91 = (1 << v90) - v87;
          if ((v91 & 0x80000000) == 0) {
            goto LABEL_168;
          }
LABEL_167:
          unsigned int v91 = 0x7FFFFFFF;
LABEL_168:
          if (v91 <= v132) {
            unsigned int v91 = v132;
          }
          if (v91 <= v24) {
            unsigned int v91 = v24;
          }
          if (v88 == v91)
          {
            int v92 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
            unsigned int v93 = a1;
            uint64_t v94 = a2;
            uint64_t v23 = v88;
            uint64_t v95 = v126;
LABEL_174:
            v92(v93, v94, v23, v95);
            return;
          }
          uint64_t v96 = (_OWORD *)((v33 + ((((unint64_t)&a1[v31] & v69) + v29 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8);
          if (v91 == 2147483644)
          {
            if (a2 > 0x7FFFFFFC)
            {
              _OWORD *v96 = 0u;
              v96[1] = 0u;
              *(_DWORD *)uint64_t v96 = a2 - 2147483645;
            }
            else
            {
              *(void *)uint64_t v96 = (a2 + 2);
            }
            return;
          }
          unint64_t v97 = (unint64_t)v96 + v35;
          if (v56 > 3)
          {
            int v98 = 8;
LABEL_186:
            char v100 = 8;
            goto LABEL_187;
          }
          unsigned int v99 = ((1 << v131) | 2u) >> v131;
          if (v99 > 0xFFF8) {
            goto LABEL_188;
          }
          int v98 = v99 + 7;
          if (v99 <= 0xF8) {
            goto LABEL_186;
          }
          char v100 = 16;
LABEL_187:
          int v101 = (1 << v100) - v98;
          if ((v101 & 0x80000000) == 0) {
            goto LABEL_189;
          }
LABEL_188:
          int v101 = 0x7FFFFFFF;
LABEL_189:
          unint64_t v102 = v97 & v34;
          if (v101 == v91)
          {
            if (v56 <= 3)
            {
              unsigned int v111 = ((1 << v131) | 2u) >> v131;
              if (v111 > 0xFFF8)
              {
LABEL_218:
                unsigned int v113 = 0x7FFFFFFF;
LABEL_219:
                if (v56 <= 3)
                {
                  unsigned int v114 = ((1 << v131) | 2u) >> v131;
                  if (v114 >= 0xF9)
                  {
                    BOOL v115 = v114 > 0xFFF8;
                    uint64_t v116 = 2;
                    if (v115) {
                      uint64_t v116 = 4;
                    }
                    size_t v39 = v116 + v56;
                  }
                }
                BOOL v79 = v91 >= v113;
                unsigned int v117 = v91 - v113;
                if (v117 != 0 && v79)
                {
                  if (v39 <= 3)
                  {
                    unsigned int v119 = ((v117 + ~(-1 << (8 * v39))) >> (8 * v39)) + 1;
                    if (HIWORD(v119))
                    {
                      int v118 = 4;
                    }
                    else if (v119 >= 0x100)
                    {
                      int v118 = 2;
                    }
                    else
                    {
                      int v118 = v119 > 1;
                    }
                  }
                  else
                  {
                    int v118 = 1;
                  }
                }
                else
                {
                  int v118 = 0;
                }
                if (v113 < a2)
                {
                  unsigned int v120 = ~v113 + a2;
                  if (v39 < 4)
                  {
                    int v121 = (v120 >> (8 * v39)) + 1;
                    if (v39)
                    {
                      int v122 = v120 & ~(-1 << (8 * v39));
                      bzero((void *)(v97 & v34), v39);
                      if (v39 == 3)
                      {
                        *(_WORD *)unint64_t v102 = v122;
                        *(unsigned char *)(v102 + 2) = BYTE2(v122);
                      }
                      else if (v39 == 2)
                      {
                        *(_WORD *)unint64_t v102 = v122;
                      }
                      else
                      {
                        *(unsigned char *)unint64_t v102 = v122;
                      }
                    }
                  }
                  else
                  {
                    bzero((void *)(v97 & v34), v39);
                    *(_DWORD *)unint64_t v102 = v120;
                    int v121 = 1;
                  }
                  switch(v118)
                  {
                    case 1:
                      *(unsigned char *)(v102 + v39) = v121;
                      return;
                    case 2:
                      *(_WORD *)(v102 + v39) = v121;
                      return;
                    case 3:
                      goto LABEL_263;
                    case 4:
                      *(_DWORD *)(v102 + v39) = v121;
                      return;
                    default:
                      return;
                  }
                }
                switch(v118)
                {
                  case 1:
                    *(unsigned char *)(v102 + v39) = 0;
                    goto LABEL_248;
                  case 2:
                    *(_WORD *)(v102 + v39) = 0;
                    goto LABEL_248;
                  case 3:
                    goto LABEL_263;
                  case 4:
                    *(_DWORD *)(v102 + v39) = 0;
                    goto LABEL_248;
                  default:
LABEL_248:
                    int v123 = -(int)a2;
                    if (v56 > 3) {
                      goto LABEL_251;
                    }
                    unsigned int v124 = ((1 << v131) | 2u) >> v131;
                    if (v124 > 0xFFF8)
                    {
                      *(_DWORD *)(v102 + v56) = v123;
                    }
                    else if (v124 > 0xF8)
                    {
                      *(_WORD *)(v102 + v56) = v123;
                    }
                    else
                    {
LABEL_251:
                      *(unsigned char *)(v102 + v56) = v123;
                    }
                    break;
                }
                return;
              }
              int v103 = v111 + 7;
              if (v111 > 0xF8)
              {
                char v112 = 16;
LABEL_217:
                unsigned int v113 = (1 << v112) - v103;
                if ((v113 & 0x80000000) == 0) {
                  goto LABEL_219;
                }
                goto LABEL_218;
              }
            }
            else
            {
              int v103 = 8;
            }
            char v112 = 8;
            goto LABEL_217;
          }
          if (v56 > 3) {
            goto LABEL_196;
          }
          unsigned int v104 = ((1 << v131) | 2u) >> v131;
          uint64_t v105 = 2;
          if (v104 > 0xFFF8) {
            uint64_t v105 = 4;
          }
          if (v104 <= 0xF8) {
LABEL_196:
          }
            uint64_t v105 = 1;
          size_t v106 = v41 + ((v39 + v102 + v38 + v105) & v52);
          int v107 = (unsigned char *)(v106 & v130);
          if (v24 >= a2)
          {
            if (v23 < 2) {
              return;
            }
            uint64_t v94 = (a2 + 1);
            int v92 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v128 + 56);
            unsigned int v93 = (unsigned char *)(v106 & v130);
            uint64_t v95 = v125;
            goto LABEL_174;
          }
          if (v43 <= 3) {
            int v108 = ~(-1 << (8 * v43));
          }
          else {
            int v108 = -1;
          }
          if (v43)
          {
            int v109 = v108 & (~v24 + a2);
            if (v43 <= 3) {
              int v110 = v43;
            }
            else {
              int v110 = 4;
            }
            bzero(v107, v43);
            switch(v110)
            {
              case 2:
                *(_WORD *)int v107 = v109;
                break;
              case 3:
                *(_WORD *)int v107 = v109;
                v107[2] = BYTE2(v109);
                break;
              case 4:
                *(_DWORD *)int v107 = v109;
                break;
              default:
                *int v107 = v109;
                break;
            }
          }
          break;
      }
      return;
  }
}

uint64_t type metadata accessor for BuyButtonViewModelBase()
{
  return sub_129B4();
}

uint64_t type metadata accessor for BuyButtonViewModelBase.LongCaptionAlignment()
{
  return sub_129B4();
}

_WORD *sub_20B034(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_20B040(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFFF) {
    goto LABEL_17;
  }
  if (a2 + 61441 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 61441 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 61441;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 61441;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 61441;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 15) | (2 * ((*a1 >> 4) & 0x7E0 | (*a1 >> 2) & 0x1F))) ^ 0xFFF;
  if (v6 >= 0xFFE) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t sub_20B0EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 61441 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 61441 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFFE)
  {
    unsigned int v6 = ((a2 - 4095) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 4095;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B1CCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 1) & 0x7FF) - (a2 << 11);
          *(_WORD *)uint64_t result = (16 * v7) & 0xFE00 | (4 * (v7 & 0x1F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_20B1F4(unsigned __int16 *a1)
{
  return *a1 >> 15;
}

_WORD *sub_20B200(_WORD *result)
{
  *result &= ~0x8000u;
  return result;
}

_WORD *sub_20B210(_WORD *result, __int16 a2)
{
  *uint64_t result = *result & 0x183 | (a2 << 15);
  return result;
}

uint64_t sub_20B228(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3F) {
    goto LABEL_17;
  }
  if (a2 + 193 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 193) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 193;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v6 >= 0x3E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *sub_20B2C8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *uint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B3A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_20B3C8(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_20B3D4(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_20B3E4(unsigned char *result, char a2)
{
  *uint64_t result = *result & 3 | (a2 << 7);
  return result;
}

uint64_t type metadata accessor for BuyButtonViewModelBase.Kind()
{
  return sub_129B4();
}

unsigned char *sub_20B410(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B4DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BuyButtonViewModelBase.Style()
{
  return sub_129B4();
}

unsigned char *sub_20B51C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B5E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BuyButtonViewModelBase.OutlinedStyle()
{
  return sub_129B4();
}

uint64_t sub_20B628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 40))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_20B668()
{
  return 16;
}

__n128 sub_20B674(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_20B680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t static PaginatedResourceSetIntent.kind.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t PaginatedResourceSetIntent.limit.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PaginatedResourceSetIntent.init(href:limit:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4 & 1;
  return result;
}

unint64_t PaginatedResourceSetIntent.jsRepresentation(in:)@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  char v5 = *((unsigned char *)v1 + 24);
  sub_4A98(&qword_2F63C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_270BF0;
  *(void *)(inited + 32) = 1717924456;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 64) = 0x74696D696CLL;
  *(void *)(inited + 72) = 0xE500000000000000;
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = sub_26DD50();
  }
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 88) = v8;
  unint64_t v9 = sub_9A1C(inited);
  a1[3] = sub_4A98(&qword_2F63C8);
  unint64_t result = sub_20B82C();
  a1[4] = result;
  *a1 = v9;
  return result;
}

unint64_t sub_20B82C()
{
  unint64_t result = qword_2F63D0;
  if (!qword_2F63D0)
  {
    sub_7B0C(&qword_2F63C8);
    sub_20B8A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F63D0);
  }
  return result;
}

unint64_t sub_20B8A0()
{
  unint64_t result = qword_2F63D8[0];
  if (!qword_2F63D8[0])
  {
    sub_7B0C(&qword_2EA980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F63D8);
  }
  return result;
}

BOOL static HostingViewBarType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void HostingViewBarType.hash(into:)(uint64_t a1, char a2)
{
}

uint64_t sub_20B944(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1717924456 && a2 == 0xE400000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

Swift::Int HostingViewBarType.hashValue.getter(char a1)
{
  return sub_26DF20();
}

uint64_t sub_20BA68(char a1)
{
  if (a1) {
    return 0x74696D696CLL;
  }
  else {
    return 1717924456;
  }
}

BOOL sub_20BA94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static HostingViewBarType.== infix(_:_:)(*a1, *a2);
}

Swift::Int sub_20BAA4()
{
  return HostingViewBarType.hashValue.getter(*v0);
}

void sub_20BAB4(uint64_t a1)
{
  HostingViewBarType.hash(into:)(a1, *v1);
}

Swift::Int sub_20BAC4()
{
  sub_26DEF0();
  HostingViewBarType.hash(into:)((uint64_t)v2, *v0);
  return sub_26DF20();
}

uint64_t sub_20BB0C()
{
  return sub_20BA68(*v0);
}

uint64_t sub_20BB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B944(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20BB48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_46954();
  *a1 = result;
  return result;
}

uint64_t sub_20BB74(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_20BBC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PaginatedResourceSetIntent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  type metadata accessor for PaginatedResourceSetIntent.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_26DCC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - v6;
  sub_4ADC(a1, a1[3]);
  sub_26DFC0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  uint64_t v8 = v18;
  char v20 = 0;
  uint64_t v9 = sub_26DC70();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_26DC50();
  size_t v13 = v7;
  char v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  *(void *)uint64_t v8 = v9;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(unsigned char *)(v8 + 24) = v15 & 1;
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PaginatedResourceSetIntent.CodingKeys()
{
  return sub_129B4();
}

unint64_t sub_20BE50@<X0>(void *a1@<X8>)
{
  unint64_t result = static PaginatedResourceSetIntent.kind.getter();
  *a1 = 0xD00000000000001ALL;
  a1[1] = v3;
  return result;
}

uint64_t sub_20BE80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PaginatedResourceSetIntent.init(from:)(a1, a2);
}

unint64_t sub_20BE9C@<X0>(unint64_t *a1@<X8>)
{
  return PaginatedResourceSetIntent.jsRepresentation(in:)(a1);
}

JSValue sub_20BEB4(JSContext a1)
{
  return sub_26CFF0(a1);
}

uint64_t type metadata accessor for PaginatedResourceSet()
{
  return sub_129B4();
}

uint64_t sub_20BEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20BF28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for CoverGeometryReferenceBuilder(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_20BF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_20BFE4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_20C02C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for PaginatedResourceSetIntent()
{
  return sub_129B4();
}

unsigned char *sub_20C088(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20C154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_20C17C()
{
  return swift_getWitnessTable();
}

uint64_t sub_20C198()
{
  return swift_getWitnessTable();
}

uint64_t sub_20C1B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_20C1D0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_20C1F8(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t UIImage.cornerRadius(_:)(double a1)
{
  id v3 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v1 scale];
  [v3 setScale:];
  [v1 size];
  id v6 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v3 format:v4];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(double *)(v7 + 24) = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_20C5BC;
  *(void *)(v8 + 24) = v7;
  v13[4] = sub_20C5D8;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_20C1F8;
  v13[3] = &unk_2E6528;
  uint64_t v9 = _Block_copy(v13);
  id v10 = v1;
  swift_retain();
  swift_release();
  id v11 = [v6 imageWithActions:v9];

  _Block_release(v9);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v3 & 1) == 0) {
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_20C448(void *a1, id a2, double a3)
{
  [a2 size];
  double v7 = v6;
  double v9 = v8;
  id v10 = [self bezierPathWithRoundedRect:0.0, 0.0, v6, v8, a3];
  [v10 setLineJoinStyle:1];
  [v10 setLineCapStyle:1];
  [v10 closePath];
  c = (CGContext *)[a1 CGContext];
  CGContextSaveGState(c);
  [v10 addClip];
  [a2 drawInRect:0.0, 0.0, v7, v9];
  CGContextRestoreGState(c);
}

uint64_t sub_20C584()
{
  return swift_deallocObject();
}

void sub_20C5BC(void *a1)
{
  sub_20C448(a1, *(id *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_20C5C8()
{
  return swift_deallocObject();
}

uint64_t sub_20C5D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20C600(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_20C610()
{
  return swift_release();
}

uint64_t ButtonView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v12 = a1;
  uint64_t v3 = sub_26B980();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0x4020000000000000;
  uint64_t v7 = enum case for Font.TextStyle.subheadline(_:);
  double v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v8(v6, enum case for Font.TextStyle.subheadline(_:), v3);
  sub_4F928();
  sub_26A810();
  uint64_t v9 = type metadata accessor for ButtonView();
  uint64_t v13 = 0x3FF8000000000000;
  v8(v6, v7, v3);
  sub_26A810();
  id v10 = (uint64_t *)(a2 + *(int *)(v9 + 24));
  *id v10 = swift_getKeyPath();
  sub_4A98(&qword_2EBCD8);
  swift_storeEnumTagMultiPayload();
  return sub_215EB8(v12, a2 + *(int *)(v9 + 28), type metadata accessor for ButtonViewModel);
}

uint64_t type metadata accessor for ButtonView()
{
  uint64_t result = qword_2F6618;
  if (!qword_2F6618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ButtonView.body.getter()
{
  uint64_t v1 = type metadata accessor for ButtonViewModel(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for BooksBorderedButtonStyle(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_4A98(&qword_2F6560);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20CB80((uint64_t)v13);
  uint64_t v14 = type metadata accessor for ButtonView();
  sub_215948(v0 + *(int *)(v14 + 28), (uint64_t)v3, type metadata accessor for ButtonViewModel);
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  char v15 = (uint64_t *)((char *)v7 + v4[5]);
  *char v15 = swift_getKeyPath();
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  unint64_t v16 = (uint64_t *)((char *)v7 + v4[6]);
  *unint64_t v16 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (char *)v7 + v4[7];
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  sub_215EB8((uint64_t)v3, (uint64_t)v7 + v4[8], type metadata accessor for ButtonViewModel);
  sub_215EB8((uint64_t)v7, (uint64_t)v9, type metadata accessor for BooksBorderedButtonStyle);
  uint64_t v18 = sub_7B0C(&qword_2F6568);
  unint64_t v19 = sub_21254C();
  v21[0] = v18;
  v21[1] = v19;
  swift_getOpaqueTypeConformance2();
  sub_216394(&qword_2F65B8, (void (*)(uint64_t))type metadata accessor for BooksBorderedButtonStyle);
  sub_26BC80();
  sub_215F9C((uint64_t)v9, type metadata accessor for BooksBorderedButtonStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_20CB80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v26 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v26);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26AC30();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  unsigned int v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F6580);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F6568);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2F6560);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20CF2C(v1, (uint64_t)v8);
  uint64_t v14 = v1 + *(int *)(type metadata accessor for ButtonView() + 28);
  uint64_t v15 = type metadata accessor for ButtonViewModel(0);
  char v16 = *(unsigned char *)(v14 + *(int *)(v15 + 48));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = (v16 & 1) == 0;
  sub_B678((uint64_t)v8, (uint64_t)v11, &qword_2F6580);
  unint64_t v19 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *unint64_t v19 = KeyPath;
  v19[1] = (uint64_t)sub_50508;
  v19[2] = v18;
  sub_B6DC((uint64_t)v8, &qword_2F6580);
  sub_215948(v14 + *(int *)(v15 + 44), (uint64_t)v3, type metadata accessor for ButtonViewModel.Content);
  LODWORD(KeyPath) = swift_getEnumCaseMultiPayload();
  sub_215F9C((uint64_t)v3, type metadata accessor for ButtonViewModel.Content);
  if (KeyPath == 9)
  {
    char v20 = v24;
    sub_26AC10();
  }
  else
  {
    char v20 = v24;
    sub_26AC20();
  }
  sub_21254C();
  sub_26C070();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v28);
  sub_B6DC((uint64_t)v11, &qword_2F6568);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v29, v13, v25);
}

uint64_t sub_20CF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v62 = sub_4A98(&qword_2F65B0);
  unsigned int v60 = *(char **)(v62 - 8);
  __chkstk_darwin(v62);
  char v58 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_2696C0();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v54 = (char *)&v51 - v6;
  uint64_t v63 = sub_4A98(&qword_2F6660);
  __chkstk_darwin(v63);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_269BA0();
  __chkstk_darwin(v9 - 8);
  int v55 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ButtonView();
  uint64_t v12 = v11 - 8;
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v51 + 64);
  __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)sub_4A98(&qword_2F65A0);
  uint64_t v18 = __chkstk_darwin(v17);
  char v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unsigned int v59 = (int *)((char *)&v51 - v21);
  uint64_t v22 = type metadata accessor for ButtonViewModel.ActionKind(0);
  __chkstk_darwin(v22);
  unsigned int v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(int *)(v12 + 36);
  uint64_t v26 = type metadata accessor for ButtonViewModel(0);
  sub_215948(a1 + *(int *)(v26 + 52) + v25, (uint64_t)v24, type metadata accessor for ButtonViewModel.ActionKind);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v56;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
    unsigned int v59 = v17;
    uint64_t v29 = v54;
    uint64_t v30 = v57;
    v28(v54, v24, v57);
    uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 16))(v53, v29, v30);
    __chkstk_darwin(v31);
    v50[1] = sub_4A98(&qword_2F6668);
    v50[2] = sub_215884();
    v50[0] = v50;
    uint64_t v32 = (uint64_t)v58;
    sub_26C750();
    uint64_t v33 = (uint64_t)v60;
    uint64_t v34 = v62;
    (*((void (**)(char *, uint64_t, uint64_t))v60 + 2))(v8, v32, v62);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2F6598, &qword_2F65A0);
    sub_7C18(&qword_2F65A8, &qword_2F65B0);
    sub_26B2F0();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  }
  else
  {
    uint64_t v57 = a1;
    unsigned int v60 = v8;
    sub_19CC4((uint64_t)v24, (uint64_t)v70, &qword_2EA838);
    uint64_t v36 = sub_26A630();
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
    char v58 = v16;
    v37(v16, 1, 1, v36);
    sub_B678((uint64_t)v70, (uint64_t)v64, &qword_2EA838);
    uint64_t v38 = v65;
    if (v65)
    {
      uint64_t v39 = v66;
      unint64_t v40 = sub_4ADC(v64, v65);
      *((void *)&v68 + 1) = v38;
      uint64_t v69 = *(void *)(v39 + 8);
      uint64_t v41 = sub_CA1C((uint64_t *)&v67);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v41, v40, v38);
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v64);
    }
    else
    {
      sub_B6DC((uint64_t)v64, &qword_2EA838);
      long long v67 = 0u;
      long long v68 = 0u;
      uint64_t v69 = 0;
    }
    uint64_t v42 = v52;
    sub_215948(v57, v52, (uint64_t (*)(void))type metadata accessor for ButtonView);
    unint64_t v43 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v44 = swift_allocObject();
    sub_215EB8(v42, v44 + v43, (uint64_t (*)(void))type metadata accessor for ButtonView);
    sub_269B80();
    sub_269AB0();
    uint64_t v45 = &v20[v17[9]];
    *(void *)uint64_t v45 = swift_getKeyPath();
    v45[8] = 0;
    uint64_t v46 = (uint64_t *)&v20[v17[10]];
    uint64_t *v46 = swift_getKeyPath();
    sub_4A98(&qword_2EA810);
    swift_storeEnumTagMultiPayload();
    size_t v47 = &v20[v17[11]];
    *(void *)size_t v47 = swift_getKeyPath();
    v47[40] = 0;
    sub_19CC4((uint64_t)v58, (uint64_t)&v20[v17[12]], qword_2EA3E0);
    sub_19CC4((uint64_t)&v67, (uint64_t)&v20[v17[13]], &qword_2EA818);
    int v48 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v20[v17[14]];
    *int v48 = sub_215F20;
    v48[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v44;
    uint64_t v49 = (uint64_t)v59;
    sub_19CC4((uint64_t)v20, (uint64_t)v59, &qword_2F65A0);
    sub_B678(v49, (uint64_t)v60, &qword_2F65A0);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2F6598, &qword_2F65A0);
    sub_7C18(&qword_2F65A8, &qword_2F65B0);
    sub_26B2F0();
    sub_B6DC(v49, &qword_2F65A0);
    return sub_B6DC((uint64_t)v70, &qword_2EA838);
  }
}

uint64_t sub_20D818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_26B910();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B980();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FontConstants.Button(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F6680);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v17 = sub_26B120();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v18 = sub_4A98(&qword_2F6688);
  sub_20DBE8(v1, (uint64_t)&v17[*(int *)(v18 + 44)]);
  type metadata accessor for ButtonView();
  type metadata accessor for ButtonViewModel(0);
  sub_4208C((uint64_t)v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.subheadline(_:), v8);
  uint64_t v19 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
  sub_26B8B0();
  sub_26B8E0();
  sub_B6DC((uint64_t)v7, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v26);
  uint64_t v21 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  sub_215F9C((uint64_t)v14, type metadata accessor for FontConstants.Button);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v27;
  sub_B678((uint64_t)v17, v27, &qword_2F6680);
  unsigned int v24 = (uint64_t *)(v23 + *(int *)(sub_4A98(&qword_2F6668) + 36));
  *unsigned int v24 = KeyPath;
  v24[1] = v21;
  return sub_B6DC((uint64_t)v17, &qword_2F6680);
}

uint64_t sub_20DBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v217 = a2;
  uint64_t v192 = sub_4A98(&qword_2F32B8);
  uint64_t v175 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  uint64_t v174 = (uint64_t)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_4A98(&qword_2F32C8);
  __chkstk_darwin(v188);
  uint64_t v189 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_4A98(&qword_2F32D0);
  __chkstk_darwin(v206);
  v190 = (char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_4A98(&qword_2F32D8);
  uint64_t v173 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v172 = (uint64_t)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_4A98(&qword_2EB038);
  __chkstk_darwin(v166);
  uint64_t v170 = (uint64_t *)((char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_26C270();
  uint64_t v167 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  v165 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_4A98(&qword_2EC0C8);
  uint64_t v9 = __chkstk_darwin(v185);
  uint64_t v164 = (uint64_t *)((char *)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v171 = (uint64_t)&v159 - v11;
  uint64_t v198 = sub_4A98(&qword_2F6690);
  __chkstk_darwin(v198);
  uint64_t v202 = (char *)&v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_4A98(&qword_2F6698);
  __chkstk_darwin(v179);
  uint64_t v181 = (uint64_t)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_4A98(&qword_2F66A0);
  __chkstk_darwin(v200);
  v183 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = sub_4A98(&qword_2F66A8);
  __chkstk_darwin(v212);
  uint64_t v205 = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_4A98(&qword_2F66B0);
  __chkstk_darwin(v177);
  v168 = (uint64_t *)((char *)&v159 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v184 = sub_4A98(&qword_2F66B8);
  __chkstk_darwin(v184);
  uint64_t v186 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_4A98(&qword_2F66C0);
  __chkstk_darwin(v203);
  v187 = (char *)&v159 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_4A98(&qword_2F66C8);
  uint64_t v194 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  v193 = (char *)&v159 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_4A98(&qword_2F66D0);
  __chkstk_darwin(v214);
  uint64_t v216 = (_OWORD *)((char *)&v159 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = sub_4A98(&qword_2F66D8);
  __chkstk_darwin(v209);
  uint64_t v211 = (uint64_t)&v159 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_4A98(&qword_2F66E0);
  __chkstk_darwin(v197);
  uint64_t v201 = (uint64_t)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_4A98(&qword_2F66E8);
  __chkstk_darwin(v176);
  uint64_t v178 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_4A98(&qword_2F66F0);
  __chkstk_darwin(v199);
  v182 = (char *)&v159 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_4A98(&qword_2F66F8);
  __chkstk_darwin(v210);
  uint64_t v204 = (char *)&v159 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_4A98(&qword_2F6700);
  __chkstk_darwin(v215);
  v213 = (char *)&v159 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ButtonView();
  uint64_t v195 = *(void *)(v27 - 8);
  uint64_t v28 = *(void *)(v195 + 64);
  __chkstk_darwin(v27);
  uint64_t v196 = (uint64_t)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_4A98(&qword_2F6708);
  uint64_t v163 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v162 = (char *)&v159 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_26A220();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v159 - v35;
  uint64_t v37 = type metadata accessor for ButtonViewModel.Content(0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v159 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = *(int *)(v27 + 28);
  uint64_t v208 = a1;
  uint64_t v41 = a1 + v40;
  uint64_t v42 = type metadata accessor for ButtonViewModel(0);
  sub_215948(v41 + *(int *)(v42 + 44), (uint64_t)v39, type metadata accessor for ButtonViewModel.Content);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v55 = sub_26C250();
      uint64_t v56 = v167;
      uint64_t v57 = v165;
      uint64_t v58 = v169;
      (*(void (**)(char *, void, uint64_t))(v167 + 104))(v165, enum case for Image.Scale.large(_:), v169);
      uint64_t KeyPath = swift_getKeyPath();
      unsigned int v60 = v170;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v170 + *(int *)(v166 + 28), v57, v58);
      *unsigned int v60 = KeyPath;
      uint64_t v61 = v164;
      sub_B678((uint64_t)v60, (uint64_t)v164 + *(int *)(v185 + 36), &qword_2EB038);
      *uint64_t v61 = v55;
      swift_retain();
      sub_B6DC((uint64_t)v60, &qword_2EB038);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      swift_release();
      uint64_t v62 = v171;
      sub_19CC4((uint64_t)v61, v171, &qword_2EC0C8);
      sub_B678(v62, v181, &qword_2EC0C8);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6758, &qword_2F66B0);
      sub_19C06C();
      uint64_t v63 = (uint64_t)v183;
      sub_26B2F0();
      sub_B678(v63, (uint64_t)v202, &qword_2F66A0);
      swift_storeEnumTagMultiPayload();
      sub_21625C();
      sub_198B24();
      uint64_t v64 = (uint64_t)v205;
      sub_26B2F0();
      sub_B6DC(v63, &qword_2F66A0);
      sub_B678(v64, v211, &qword_2F66A8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v65 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v64, &qword_2F66A8);
      sub_B678(v65, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v65, &qword_2F6700);
      return sub_B6DC(v62, &qword_2EC0C8);
    case 2u:
      uint64_t v206 = *v39;
      uint64_t v205 = (char *)v39[1];
      uint64_t v202 = (char *)v39[2];
      long long v67 = (char *)v39 + *(int *)(sub_4A98(&qword_2EE430) + 64);
      long long v68 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      uint64_t v161 = v36;
      uint64_t v69 = v30;
      uint64_t v159 = v30;
      v68(v36, v67, v30);
      uint64_t v160 = v31;
      unsigned int v70 = (char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v36, v69);
      uint64_t v71 = v196;
      sub_215948(v208, v196, (uint64_t (*)(void))type metadata accessor for ButtonView);
      unint64_t v72 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unint64_t v73 = (v32 + *(unsigned __int8 *)(v195 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
      unint64_t v74 = (v28 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v75 = swift_allocObject();
      unint64_t v76 = v75 + v72;
      uint64_t v77 = v159;
      v68((char *)v76, v70, v159);
      sub_215EB8(v71, v75 + v73, (uint64_t (*)(void))type metadata accessor for ButtonView);
      size_t v78 = (uint64_t *)(v75 + v74);
      BOOL v79 = v205;
      *size_t v78 = v206;
      v78[1] = (uint64_t)v79;
      unsigned int v80 = v202;
      *(void *)(v75 + ((v74 + 23) & 0xFFFFFFFFFFFFFFF8)) = v202;
      id v81 = v80;
      sub_4A98(&qword_2F3CD8);
      sub_26A0F0();
      sub_26A0D0();
      sub_1AAF14();
      sub_216394(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_216394(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      unsigned int v82 = v193;
      sub_26A100();
      uint64_t v83 = v194;
      uint64_t v84 = v207;
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v178, v82, v207);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6730, &qword_2F6708);
      sub_7C18(&qword_2F6738, &qword_2F66C8);
      uint64_t v85 = (uint64_t)v182;
      sub_26B2F0();
      sub_B678(v85, v201, &qword_2F66F0);
      swift_storeEnumTagMultiPayload();
      sub_2160C8();
      sub_216188();
      uint64_t v86 = (uint64_t)v204;
      sub_26B2F0();
      sub_B6DC(v85, &qword_2F66F0);
      sub_B678(v86, v211, &qword_2F66F8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v87 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v86, &qword_2F66F8);
      sub_B678(v87, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();

      sub_B6DC(v87, &qword_2F6700);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v161, v77);
    case 3u:
      uint64_t v206 = *v39;
      uint64_t v205 = (char *)v39[1];
      uint64_t v88 = (char *)v39 + *(int *)(sub_4A98(&qword_2EE438) + 48);
      unsigned int v89 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      uint64_t v161 = v36;
      v89(v36, v88, v30);
      uint64_t v160 = v31;
      char v90 = v36;
      uint64_t v45 = v30;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v90, v30);
      uint64_t v91 = v196;
      sub_215948(v208, v196, (uint64_t (*)(void))type metadata accessor for ButtonView);
      unint64_t v92 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unint64_t v93 = (v32 + *(unsigned __int8 *)(v195 + 80) + v92) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
      uint64_t v94 = swift_allocObject();
      v89((char *)(v94 + v92), (char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v45);
      sub_215EB8(v91, v94 + v93, (uint64_t (*)(void))type metadata accessor for ButtonView);
      uint64_t v95 = (uint64_t *)(v94 + ((v28 + v93 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v96 = v205;
      *uint64_t v95 = v206;
      v95[1] = (uint64_t)v96;
      sub_4A98(&qword_2F3CD8);
      sub_26A0F0();
      sub_26A0D0();
      sub_1AAF14();
      sub_216394(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_216394(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      unint64_t v97 = v193;
      sub_26A100();
      uint64_t v98 = v194;
      uint64_t v99 = v207;
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v186, v97, v207);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6738, &qword_2F66C8);
      uint64_t v100 = (uint64_t)v187;
      sub_26B2F0();
      sub_B678(v100, v201, &qword_2F66C0);
      swift_storeEnumTagMultiPayload();
      sub_2160C8();
      sub_216188();
      uint64_t v101 = (uint64_t)v204;
      sub_26B2F0();
      sub_B6DC(v100, &qword_2F66C0);
      sub_B678(v101, v211, &qword_2F66F8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v102 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v101, &qword_2F66F8);
      sub_B678(v102, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v102, &qword_2F6700);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v99);
      goto LABEL_8;
    case 4u:
      int v103 = (uint64_t *)((char *)v39 + *(int *)(sub_4A98(&qword_2EE440) + 48));
      uint64_t v105 = *v103;
      unsigned int v104 = (char *)v103[1];
      uint64_t v206 = v105;
      uint64_t v205 = v104;
      size_t v106 = *(void (**)(char *, uint64_t *, uint64_t))(v31 + 32);
      uint64_t v161 = v36;
      v106(v36, v39, v30);
      uint64_t v160 = v31;
      int v107 = v36;
      uint64_t v45 = v30;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v107, v30);
      uint64_t v108 = v196;
      sub_215948(v208, v196, (uint64_t (*)(void))type metadata accessor for ButtonView);
      unint64_t v109 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unint64_t v110 = (v32 + *(unsigned __int8 *)(v195 + 80) + v109) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
      uint64_t v111 = swift_allocObject();
      v106((char *)(v111 + v109), (uint64_t *)((char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0)), v30);
      sub_215EB8(v108, v111 + v110, (uint64_t (*)(void))type metadata accessor for ButtonView);
      char v112 = (uint64_t *)(v111 + ((v28 + v110 + 7) & 0xFFFFFFFFFFFFFFF8));
      unsigned int v113 = v205;
      *char v112 = v206;
      v112[1] = (uint64_t)v113;
      sub_4A98(&qword_2F3CD8);
      sub_26A0F0();
      sub_26A0D0();
      sub_1AAF14();
      sub_216394(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_216394(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      int v50 = v193;
      sub_26A100();
      uint64_t v51 = v194;
      uint64_t v52 = v207;
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v186, v50, v207);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6738, &qword_2F66C8);
      uint64_t v53 = (uint64_t)v187;
      sub_26B2F0();
      unsigned int v54 = &qword_2F66C0;
      sub_B678(v53, v201, &qword_2F66C0);
      goto LABEL_7;
    case 5u:
      uint64_t v116 = (char *)v39 + *(int *)(sub_4A98(&qword_2EE448) + 48);
      uint64_t v117 = v31;
      int v118 = *(void (**)(char *, uint64_t *, uint64_t))(v31 + 32);
      unsigned int v119 = v36;
      uint64_t v161 = v36;
      uint64_t v120 = v30;
      v118(v36, v39, v30);
      v118(v34, (uint64_t *)v116, v30);
      uint64_t v121 = sub_26B1C0();
      uint64_t v122 = (uint64_t)v168;
      uint64_t *v168 = v121;
      *(void *)(v122 + 8) = 0x3FF0000000000000;
      *(unsigned char *)(v122 + 16) = 0;
      uint64_t v123 = v122 + *(int *)(sub_4A98(&qword_2F6768) + 44);
      sub_211C1C(v119, (uint64_t)v34, v208, v123);
      sub_B678(v122, v181, &qword_2F66B0);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6758, &qword_2F66B0);
      sub_19C06C();
      uint64_t v124 = (uint64_t)v183;
      sub_26B2F0();
      sub_B678(v124, (uint64_t)v202, &qword_2F66A0);
      swift_storeEnumTagMultiPayload();
      sub_21625C();
      sub_198B24();
      uint64_t v125 = (uint64_t)v205;
      sub_26B2F0();
      sub_B6DC(v124, &qword_2F66A0);
      sub_B678(v125, v211, &qword_2F66A8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v126 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v125, &qword_2F66A8);
      sub_B678(v126, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v126, &qword_2F6700);
      sub_B6DC(v122, &qword_2F66B0);
      unsigned int v127 = *(void (**)(char *, uint64_t))(v117 + 8);
      v127(v34, v120);
      return ((uint64_t (*)(char *, uint64_t))v127)(v161, v120);
    case 6u:
      double v128 = *(double *)v39;
      ButtonViewModel.theme.getter((uint64_t *)&v219);
      uint64_t v129 = v219;
      swift_release();
      swift_release();
      swift_release();
      ButtonViewModel.progressViewModel(foregroundColor:)(v129, (uint64_t)&v222);
      swift_release();
      *(void *)&long long v219 = v222;
      BYTE8(v219) = BYTE8(v222);
      long long v220 = v223;
      sub_4A98(&qword_2EBDF0);
      sub_26A830();
      uint64_t v130 = v218;
      sub_26A830();
      uint64_t v131 = v174;
      sub_186D2C((uint64_t)&v219, v130, v218, 0, v174, v128);
      swift_release();
      uint64_t v132 = v175;
      uint64_t v133 = v192;
      (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v189, v131, v192);
      swift_storeEnumTagMultiPayload();
      uint64_t v134 = sub_7B0C(&qword_2F2BE8);
      uint64_t v135 = type metadata accessor for InDeterminateProgressViewStyle(255);
      uint64_t v136 = sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
      uint64_t v137 = sub_216394(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
      *(void *)&long long v222 = v134;
      *((void *)&v222 + 1) = v135;
      *(void *)&long long v223 = v136;
      *((void *)&v223 + 1) = v137;
      swift_getOpaqueTypeConformance2();
      uint64_t v138 = type metadata accessor for DeterminateProgressViewStyle(255);
      uint64_t v139 = sub_216394(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
      *(void *)&long long v222 = v134;
      *((void *)&v222 + 1) = v138;
      *(void *)&long long v223 = v136;
      *((void *)&v223 + 1) = v139;
      swift_getOpaqueTypeConformance2();
      uint64_t v140 = (uint64_t)v190;
      sub_26B2F0();
      sub_B678(v140, (uint64_t)v202, &qword_2F32D0);
      swift_storeEnumTagMultiPayload();
      sub_21625C();
      sub_198B24();
      uint64_t v141 = (uint64_t)v205;
      sub_26B2F0();
      sub_B6DC(v140, &qword_2F32D0);
      sub_B678(v141, v211, &qword_2F66A8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v142 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v141, &qword_2F66A8);
      sub_B678(v142, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v142, &qword_2F6700);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 8))(v131, v133);
    case 7u:
      ButtonViewModel.theme.getter((uint64_t *)&v219);
      uint64_t v143 = v219;
      swift_release();
      swift_release();
      swift_release();
      ButtonViewModel.progressViewModel(foregroundColor:)(v143, (uint64_t)&v222);
      swift_release();
      *(void *)&long long v219 = v222;
      BYTE8(v219) = BYTE8(v222);
      long long v220 = v223;
      uint64_t v144 = v172;
      sub_186A8C((uint64_t *)&v219, v172);
      swift_release();
      uint64_t v145 = v173;
      uint64_t v146 = v191;
      (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v189, v144, v191);
      swift_storeEnumTagMultiPayload();
      uint64_t v147 = sub_7B0C(&qword_2F2BE8);
      uint64_t v148 = type metadata accessor for InDeterminateProgressViewStyle(255);
      uint64_t v149 = sub_7C18(&qword_2F2BF0, &qword_2F2BE8);
      uint64_t v150 = sub_216394(&qword_2F2BF8, (void (*)(uint64_t))type metadata accessor for InDeterminateProgressViewStyle);
      *(void *)&long long v222 = v147;
      *((void *)&v222 + 1) = v148;
      *(void *)&long long v223 = v149;
      *((void *)&v223 + 1) = v150;
      swift_getOpaqueTypeConformance2();
      uint64_t v151 = type metadata accessor for DeterminateProgressViewStyle(255);
      uint64_t v152 = sub_216394(&qword_2F2C00, (void (*)(uint64_t))type metadata accessor for DeterminateProgressViewStyle);
      *(void *)&long long v222 = v147;
      *((void *)&v222 + 1) = v151;
      *(void *)&long long v223 = v149;
      *((void *)&v223 + 1) = v152;
      swift_getOpaqueTypeConformance2();
      uint64_t v153 = (uint64_t)v190;
      sub_26B2F0();
      sub_B678(v153, (uint64_t)v202, &qword_2F32D0);
      swift_storeEnumTagMultiPayload();
      sub_21625C();
      sub_198B24();
      uint64_t v154 = (uint64_t)v205;
      sub_26B2F0();
      sub_B6DC(v153, &qword_2F32D0);
      sub_B678(v154, v211, &qword_2F66A8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v155 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v154, &qword_2F66A8);
      sub_B678(v155, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v155, &qword_2F6700);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v145 + 8))(v144, v146);
    case 8u:
      long long v219 = xmmword_2832E0;
      *(void *)&long long v220 = 0;
      *((void *)&v220 + 1) = _swiftEmptyArrayStorage;
      char v221 = 0;
      goto LABEL_14;
    case 9u:
      long long v219 = 0u;
      long long v220 = 0u;
      char v221 = 1;
LABEL_14:
      sub_26B2F0();
      char v156 = v224;
      long long v157 = v223;
      uint64_t v158 = v216;
      *uint64_t v216 = v222;
      v158[1] = v157;
      *((unsigned char *)v158 + 32) = v156;
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      uint64_t result = sub_26B2F0();
      break;
    default:
      unint64_t v43 = *(void (**)(char *, uint64_t *, uint64_t))(v31 + 32);
      uint64_t v161 = v36;
      v43(v36, v39, v30);
      uint64_t v160 = v31;
      uint64_t v44 = v36;
      uint64_t v45 = v30;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v44, v30);
      uint64_t v46 = v196;
      sub_215948(v208, v196, (uint64_t (*)(void))type metadata accessor for ButtonView);
      unint64_t v47 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unint64_t v48 = (v32 + *(unsigned __int8 *)(v195 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
      uint64_t v49 = swift_allocObject();
      v43((char *)(v49 + v47), (uint64_t *)((char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0)), v30);
      sub_215EB8(v46, v49 + v48, (uint64_t (*)(void))type metadata accessor for ButtonView);
      sub_4A98(&qword_2F6770);
      sub_26A0F0();
      sub_26A0D0();
      sub_217600();
      sub_216394(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
      sub_216394(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
      int v50 = v162;
      sub_26A100();
      uint64_t v51 = v163;
      uint64_t v52 = v180;
      (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v178, v50, v180);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F6730, &qword_2F6708);
      sub_7C18(&qword_2F6738, &qword_2F66C8);
      uint64_t v53 = (uint64_t)v182;
      sub_26B2F0();
      unsigned int v54 = &qword_2F66F0;
      sub_B678(v53, v201, &qword_2F66F0);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      sub_2160C8();
      sub_216188();
      uint64_t v114 = (uint64_t)v204;
      sub_26B2F0();
      sub_B6DC(v53, v54);
      sub_B678(v114, v211, &qword_2F66F8);
      swift_storeEnumTagMultiPayload();
      sub_21608C();
      sub_216220();
      uint64_t v115 = (uint64_t)v213;
      sub_26B2F0();
      sub_B6DC(v114, &qword_2F66F8);
      sub_B678(v115, (uint64_t)v216, &qword_2F6700);
      swift_storeEnumTagMultiPayload();
      sub_4A98(&qword_2F6710);
      sub_216004(&qword_2F6718, &qword_2F6700, (void (*)(void))sub_21608C, (void (*)(void))sub_216220);
      sub_2162FC();
      sub_26B2F0();
      sub_B6DC(v115, &qword_2F6700);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v161, v45);
      break;
  }
  return result;
}

uint64_t sub_210734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v39 = a4;
  uint64_t v6 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_26A220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v33[-v15];
  __chkstk_darwin(v14);
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  v17(&v33[-v18], a2, v9);
  uint64_t KeyPath = a1;
  sub_C224(a1, (uint64_t)v40);
  uint64_t v36 = sub_26BA00();
  uint64_t v20 = v19;
  int v34 = v21;
  uint64_t v38 = v22;
  uint64_t v23 = v35 + *(int *)(type metadata accessor for ButtonView() + 28);
  uint64_t v24 = type metadata accessor for ButtonViewModel(0);
  sub_B678(v23 + *(int *)(v24 + 56), (uint64_t)v8, &qword_2EA0C0);
  v17(v13, a2, v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v13, v9);
    sub_B6DC((uint64_t)v8, &qword_2EA0C0);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v8, v9);
  }
  char v25 = v34 & 1;
  sub_C224(KeyPath, (uint64_t)v40);
  uint64_t v26 = sub_26BA00();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v36;
  v40[0] = v36;
  v40[1] = v20;
  char v41 = v25;
  uint64_t v42 = v38;
  uint64_t v43 = KeyPath;
  uint64_t v44 = 3;
  char v45 = 0;
  sub_45370(v36, v20, v25);
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EC6B8);
  sub_2176AC();
  sub_26BE30();
  sub_3A380(v26, v28, v30);
  swift_bridgeObjectRelease();
  sub_3A380(v31, v20, v25);
  swift_bridgeObjectRelease();
  sub_3A380(v31, v20, v25);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_210AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  id v66 = a6;
  uint64_t v65 = a5;
  uint64_t v64 = a4;
  uint64_t v62 = a3;
  uint64_t v73 = a7;
  uint64_t v9 = sub_26B600();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  __chkstk_darwin(v9);
  long long v68 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_4A98(qword_2F3D08);
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v71 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_26A220();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v59 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v59 - v24, a2, v15);
  uint64_t v63 = a1;
  sub_C224(a1, (uint64_t)&v77);
  uint64_t v67 = sub_26BA00();
  uint64_t v75 = v25;
  uint64_t v76 = v26;
  char v28 = v27;
  uint64_t v29 = v62 + *(int *)(type metadata accessor for ButtonView() + 28);
  uint64_t v30 = type metadata accessor for ButtonViewModel(0);
  sub_B678(v29 + *(int *)(v30 + 56), (uint64_t)v14, &qword_2EA0C0);
  v23(v19, a2, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v19, v15);
    sub_B6DC((uint64_t)v14, &qword_2EA0C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v14, v15);
  }
  int v59 = v28 & 1;
  sub_C224(v63, (uint64_t)&v77);
  uint64_t v62 = sub_26BA00();
  uint64_t v61 = v31;
  uint64_t v63 = v32;
  int v60 = v33 & 1;
  swift_bridgeObjectRetain();
  id v34 = v66;
  sub_26C290();
  uint64_t v35 = sub_26BB10();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  uint64_t v40 = sub_26BA60();
  uint64_t v42 = v41;
  char v44 = v43 & 1;
  sub_3A380(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t v45 = v67;
  uint64_t v46 = (void *)sub_26BA60();
  unint64_t v48 = v47;
  LOBYTE(v37) = v49;
  uint64_t v51 = v50;
  sub_3A380(v40, v42, v44);
  swift_bridgeObjectRelease();
  uint64_t v77 = v46;
  size_t v78 = v48;
  char v79 = v37 & 1;
  uint64_t v80 = v51;
  uint64_t v52 = v68;
  sub_26B5E0();
  uint64_t v53 = v71;
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v70);
  sub_3A380((uint64_t)v77, (uint64_t)v78, v79);
  swift_bridgeObjectRelease();
  uint64_t v77 = &type metadata for Text;
  size_t v78 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v54 = v74;
  uint64_t v55 = v62;
  uint64_t v56 = v61;
  char v57 = v60;
  sub_26BE30();
  sub_3A380(v55, v56, v57);
  swift_bridgeObjectRelease();
  sub_3A380(v45, v75, v59);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v53, v54);
}

uint64_t sub_21108C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v63 = a5;
  uint64_t v62 = a4;
  uint64_t v60 = a3;
  uint64_t v70 = a6;
  uint64_t v8 = sub_26B600();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  __chkstk_darwin(v8);
  uint64_t v65 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_4A98(qword_2F3D08);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  long long v68 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26A220();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v56 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22((char *)&v56 - v23, a2, v14);
  uint64_t v61 = a1;
  sub_C224(a1, (uint64_t)&v74);
  uint64_t v64 = sub_26BA00();
  uint64_t v72 = v24;
  uint64_t v73 = v25;
  char v27 = v26;
  uint64_t v28 = v60 + *(int *)(type metadata accessor for ButtonView() + 28);
  uint64_t v29 = type metadata accessor for ButtonViewModel(0);
  sub_B678(v28 + *(int *)(v29 + 56), (uint64_t)v13, &qword_2EA0C0);
  v22(v18, a2, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v18, v14);
    sub_B6DC((uint64_t)v13, &qword_2EA0C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, v14);
  }
  int v57 = v27 & 1;
  sub_C224(v61, (uint64_t)&v74);
  uint64_t v60 = sub_26BA00();
  uint64_t v59 = v30;
  uint64_t v61 = v31;
  int v58 = v32 & 1;
  swift_bridgeObjectRetain();
  sub_26C250();
  uint64_t v33 = sub_26BB10();
  uint64_t v35 = v34;
  char v37 = v36 & 1;
  uint64_t v38 = sub_26BA60();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  sub_3A380(v33, v35, v37);
  swift_bridgeObjectRelease();
  uint64_t v43 = v64;
  char v44 = (void *)sub_26BA60();
  uint64_t v46 = v45;
  LOBYTE(v35) = v47;
  uint64_t v49 = v48;
  sub_3A380(v38, v40, v42);
  swift_bridgeObjectRelease();
  uint64_t v74 = v44;
  uint64_t v75 = v46;
  char v76 = v35 & 1;
  uint64_t v77 = v49;
  uint64_t v50 = v65;
  sub_26B5E0();
  uint64_t v51 = v68;
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v67);
  sub_3A380((uint64_t)v74, (uint64_t)v75, v76);
  swift_bridgeObjectRelease();
  uint64_t v74 = &type metadata for Text;
  uint64_t v75 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v52 = v71;
  uint64_t v53 = v60;
  uint64_t v54 = v59;
  LOBYTE(v35) = v58;
  sub_26BE30();
  sub_3A380(v53, v54, v35);
  swift_bridgeObjectRelease();
  sub_3A380(v43, v72, v57);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v51, v52);
}

uint64_t sub_21164C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v64 = a5;
  uint64_t v63 = a4;
  uint64_t v61 = a3;
  uint64_t v70 = a6;
  uint64_t v8 = sub_26B600();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  __chkstk_darwin(v8);
  uint64_t v65 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_4A98(qword_2F3D08);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  long long v68 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26A220();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v57 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22((char *)v57 - v23, a2, v14);
  uint64_t v62 = a1;
  sub_C224(a1, (uint64_t)&v75);
  uint64_t v24 = sub_26BA00();
  uint64_t v72 = v25;
  uint64_t v73 = v24;
  char v27 = v26;
  uint64_t v74 = v28;
  uint64_t v29 = v61 + *(int *)(type metadata accessor for ButtonView() + 28);
  uint64_t v30 = type metadata accessor for ButtonViewModel(0);
  sub_B678(v29 + *(int *)(v30 + 56), (uint64_t)v13, &qword_2EA0C0);
  v22(v18, a2, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v18, v14);
    sub_B6DC((uint64_t)v13, &qword_2EA0C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, v14);
  }
  LODWORD(v61) = v27 & 1;
  sub_C224(v62, (uint64_t)&v75);
  uint64_t v60 = sub_26BA00();
  uint64_t v59 = v31;
  uint64_t v62 = v32;
  int v58 = v33 & 1;
  uint64_t v34 = sub_26BA60();
  uint64_t v36 = v35;
  v57[1] = v37;
  char v39 = v38 & 1;
  swift_bridgeObjectRetain();
  sub_26C250();
  uint64_t v40 = sub_26BB10();
  uint64_t v42 = v41;
  char v44 = v43 & 1;
  uint64_t v45 = (void *)sub_26BA60();
  char v47 = v46;
  char v49 = v48;
  uint64_t v64 = v50;
  sub_3A380(v40, v42, v44);
  swift_bridgeObjectRelease();
  sub_3A380(v34, v36, v39);
  swift_bridgeObjectRelease();
  uint64_t v75 = v45;
  char v76 = v47;
  char v77 = v49 & 1;
  uint64_t v51 = v65;
  uint64_t v78 = v64;
  sub_26B5E0();
  uint64_t v52 = v68;
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v51, v67);
  sub_3A380((uint64_t)v75, (uint64_t)v76, v77);
  swift_bridgeObjectRelease();
  uint64_t v75 = &type metadata for Text;
  char v76 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v53 = v71;
  uint64_t v54 = v60;
  uint64_t v55 = v59;
  LOBYTE(v40) = v58;
  sub_26BE30();
  sub_3A380(v54, v55, v40);
  swift_bridgeObjectRelease();
  sub_3A380(v73, v72, v61);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v52, v53);
}

uint64_t sub_211C1C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a3;
  int v57 = a1;
  uint64_t v60 = (char *)a2;
  uint64_t v66 = a4;
  uint64_t v4 = sub_26C700();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FontConstants.Button(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v53 = (void (*)(void, void, void))((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_4A98(&qword_2EBFC8) - 8;
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_4A98(&qword_2F6780) - 8;
  __chkstk_darwin(v55);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_4A98(&qword_2F6788);
  uint64_t v12 = __chkstk_darwin(v58);
  uint64_t v62 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v59 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)&v53 - v16;
  uint64_t v17 = sub_26A220();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_26A160();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v27 = (char *)&v53 - v26;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v28(v20, v57, v17);
  int v57 = v27;
  sub_26A170();
  v28(v20, v60, v17);
  sub_26A170();
  uint64_t v29 = type metadata accessor for ButtonView();
  uint64_t v30 = v56;
  uint64_t v31 = v53;
  sub_4208C((uint64_t)v53);
  uint64_t v32 = _s7BooksUI13FontConstantsV6ButtonV8subtitle05SwiftB00C0Vvg_0();
  sub_215F9C((uint64_t)v31, type metadata accessor for FontConstants.Button);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = *(void (**)(void, void, void))(v22 + 16);
  v53(v9, v25, v21);
  uint64_t v34 = (uint64_t *)&v9[*(int *)(v54 + 44)];
  *uint64_t v34 = KeyPath;
  v34[1] = v32;
  uint64_t v54 = *(void *)(v22 + 8);
  ((void (*)(char *, uint64_t))v54)(v25, v21);
  LODWORD(v32) = sub_26B470();
  sub_B678((uint64_t)v9, (uint64_t)v11, &qword_2EBFC8);
  uint64_t v35 = *(int *)(v55 + 44);
  uint64_t v60 = v11;
  *(_DWORD *)&v11[v35] = v32;
  sub_B6DC((uint64_t)v9, &qword_2EBFC8);
  uint64_t v36 = v30 + *(int *)(v29 + 28);
  uint64_t v37 = (unint64_t *)(v36 + *(int *)(type metadata accessor for ButtonViewModel(0) + 40));
  unint64_t v38 = *v37;
  if (*v37 == 2)
  {
    char v39 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  else
  {
    sub_1A0FB0(*v37);
    char v39 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  sub_1A139C(v38);
  sub_1A139C(2uLL);
  uint64_t v41 = v63;
  uint64_t v40 = v64;
  uint64_t v42 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *v39, v65);
  uint64_t v43 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v59[*(int *)(v58 + 36)], v41, v42);
  uint64_t v44 = (uint64_t)v60;
  sub_B678((uint64_t)v60, v43, &qword_2F6780);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  sub_B6DC(v44, &qword_2F6780);
  uint64_t v45 = v61;
  sub_19CC4(v43, v61, &qword_2F6788);
  uint64_t v46 = v57;
  char v47 = (void (*)(uint64_t, char *, uint64_t))v53;
  v53(v25, v57, v21);
  uint64_t v48 = v62;
  sub_B678(v45, v62, &qword_2F6788);
  uint64_t v49 = v66;
  v47(v66, v25, v21);
  uint64_t v50 = sub_4A98(&qword_2F6790);
  sub_B678(v48, v49 + *(int *)(v50 + 48), &qword_2F6788);
  sub_B6DC(v45, &qword_2F6788);
  uint64_t v51 = (uint64_t (*)(char *, uint64_t))v54;
  ((void (*)(char *, uint64_t))v54)(v46, v21);
  sub_B6DC(v48, &qword_2F6788);
  return v51(v25, v21);
}

uint64_t sub_212280@<X0>(uint64_t a1@<X8>)
{
  sub_2157F4();
  uint64_t result = sub_26B0B0();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_2122D8(uint64_t a1)
{
  return sub_26B0C0();
}

uint64_t sub_212334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - v7;
  sub_26ADD0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for ColorScheme.light(_:), v2);
  char v9 = sub_26A6D0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  uint64_t v11 = sub_26C700();
  uint64_t v12 = (unsigned int *)&enum case for BlendMode.multiply(_:);
  if ((v9 & 1) == 0) {
    uint64_t v12 = (unsigned int *)&enum case for BlendMode.screen(_:);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(a1, *v12, v11);
}

uint64_t sub_2124DC@<X0>(uint64_t a1@<X8>)
{
  sub_2157F4();
  uint64_t result = sub_26B0B0();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_212538@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8) == 0;
  return result;
}

unint64_t sub_21254C()
{
  unint64_t result = qword_2F6570;
  if (!qword_2F6570)
  {
    sub_7B0C(&qword_2F6568);
    sub_2125EC();
    sub_7C18(&qword_2EC028, &qword_2EC030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6570);
  }
  return result;
}

unint64_t sub_2125EC()
{
  unint64_t result = qword_2F6578;
  if (!qword_2F6578)
  {
    sub_7B0C(&qword_2F6580);
    sub_212660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6578);
  }
  return result;
}

unint64_t sub_212660()
{
  unint64_t result = qword_2F6588;
  if (!qword_2F6588)
  {
    sub_7B0C(&qword_2F6590);
    sub_7C18(&qword_2F6598, &qword_2F65A0);
    sub_7C18(&qword_2F65A8, &qword_2F65B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6588);
  }
  return result;
}

uint64_t sub_212724()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ButtonView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EBDF0);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    uint64_t v11 = (_WORD *)((char *)a2 + v9);
    sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v10 = *v11;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v73 = (char *)v10 + v13;
      uint64_t v74 = a1;
      uint64_t v14 = (char *)v11 + v13;
      uint64_t v15 = sub_26AB40();
      uint64_t v16 = v14;
      a1 = v74;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v73, v16, v15);
      *(void *)((char *)v10 + *(int *)(v12 + 28)) = *(void *)((char *)v11 + *(int *)(v12 + 28));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    v8((uint64_t *)((char *)a1 + v18), (uint64_t *)v20, v7);
    uint64_t v21 = (int *)type metadata accessor for ButtonViewModel(0);
    v8((uint64_t *)&v19[v21[5]], (uint64_t *)&v20[v21[5]], v7);
    uint64_t v22 = v21[6];
    uint64_t v23 = &v19[v22];
    uint64_t v24 = &v20[v22];
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19[v21[7]] = v20[v21[7]];
    v19[v21[8]] = v20[v21[8]];
    v19[v21[9]] = v20[v21[9]];
    uint64_t v26 = v21[10];
    char v27 = &v19[v26];
    uint64_t v28 = &v20[v26];
    if (*(void *)v28 >= 3uLL)
    {
      uint64_t v30 = *((void *)v28 + 1);
      uint64_t v31 = *((void *)v28 + 2);
      *(void *)char v27 = *(void *)v28;
      *((void *)v27 + 1) = v30;
      uint64_t v32 = *((void *)v28 + 3);
      *((void *)v27 + 2) = v31;
      *((void *)v27 + 3) = v32;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)char v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v29;
    }
    uint64_t v33 = v21[11];
    uint64_t v34 = &v19[v33];
    uint64_t v35 = &v20[v33];
    uint64_t v36 = type metadata accessor for ButtonViewModel.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v37 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v34, v35, v37);
        goto LABEL_20;
      case 1u:
        uint64_t v38 = *((void *)v35 + 1);
        *(void *)uint64_t v34 = *(void *)v35;
        *((void *)v34 + 1) = v38;
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 2u:
        uint64_t v39 = *((void *)v35 + 1);
        *(void *)uint64_t v34 = *(void *)v35;
        *((void *)v34 + 1) = v39;
        uint64_t v40 = (void *)*((void *)v35 + 2);
        *((void *)v34 + 2) = v40;
        swift_bridgeObjectRetain();
        id v41 = v40;
        uint64_t v42 = *(int *)(sub_4A98(&qword_2EE430) + 64);
        uint64_t v43 = &v34[v42];
        uint64_t v44 = &v35[v42];
        uint64_t v45 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        goto LABEL_20;
      case 3u:
        uint64_t v46 = *((void *)v35 + 1);
        *(void *)uint64_t v34 = *(void *)v35;
        *((void *)v34 + 1) = v46;
        swift_bridgeObjectRetain();
        uint64_t v47 = *(int *)(sub_4A98(&qword_2EE438) + 48);
        uint64_t v48 = &v34[v47];
        uint64_t v49 = &v35[v47];
        uint64_t v50 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
        goto LABEL_20;
      case 4u:
        uint64_t v51 = sub_26A220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v34, v35, v51);
        uint64_t v52 = *(int *)(sub_4A98(&qword_2EE440) + 48);
        uint64_t v53 = &v34[v52];
        uint64_t v54 = &v35[v52];
        uint64_t v55 = *((void *)v54 + 1);
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = v55;
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 5u:
        uint64_t v56 = sub_26A220();
        int v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        v57(v34, v35, v56);
        uint64_t v58 = sub_4A98(&qword_2EE448);
        v57(&v34[*(int *)(v58 + 48)], &v35[*(int *)(v58 + 48)], v56);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        break;
    }
    v19[v21[12]] = v20[v21[12]];
    uint64_t v59 = v21[13];
    uint64_t v60 = &v19[v59];
    uint64_t v61 = &v20[v59];
    type metadata accessor for ButtonViewModel.ActionKind(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v62 = sub_2696C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    }
    else
    {
      uint64_t v63 = *((void *)v61 + 3);
      if (v63)
      {
        uint64_t v64 = *((void *)v61 + 4);
        *((void *)v60 + 3) = v63;
        *((void *)v60 + 4) = v64;
        (**(void (***)(char *, char *))(v63 - 8))(v60, v61);
      }
      else
      {
        long long v65 = *((_OWORD *)v61 + 1);
        *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v65;
        *((void *)v60 + 4) = *((void *)v61 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v21[14];
    uint64_t v67 = &v19[v66];
    long long v68 = &v20[v66];
    uint64_t v69 = sub_26A220();
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      uint64_t v71 = sub_4A98(&qword_2EA0C0);
      memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
  }
  return a1;
}

uint64_t destroy for ButtonView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4A98(&qword_2EBDF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v8 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  v5(v9, v4);
  uint64_t v10 = (int *)type metadata accessor for ButtonViewModel(0);
  v5(v9 + v10[5], v4);
  uint64_t v11 = v9 + v10[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v9 + v10[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v13 = v9 + v10[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_14;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v14 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_13;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v14 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_13:
      v13 += v14;
LABEL_14:
      uint64_t v15 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
      break;
    case 4u:
      uint64_t v16 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v13, v16);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v17 = sub_26A220();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
      v18(v13, v17);
      uint64_t v19 = sub_4A98(&qword_2EE448);
      v18(v13 + *(int *)(v19 + 48), v17);
      break;
    default:
      break;
  }
  uint64_t v20 = v9 + v10[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else if (*(void *)(v20 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v20);
  }
  uint64_t v22 = v9 + v10[14];
  uint64_t v23 = sub_26A220();
  uint64_t v26 = *(void *)(v23 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v22, 1, v23);
  if (!result)
  {
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    return v25(v22, v23);
  }
  return result;
}

uint64_t initializeWithCopy for ButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v9 = *v10;
    uint64_t v11 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v71 = (char *)v9 + v12;
    uint64_t v72 = a1;
    uint64_t v13 = (char *)v10 + v12;
    uint64_t v14 = sub_26AB40();
    uint64_t v15 = v13;
    a1 = v72;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v71, v15, v14);
    *(void *)((char *)v9 + *(int *)(v11 + 28)) = *(void *)((char *)v10 + *(int *)(v11 + 28));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, v18, v6);
  uint64_t v19 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(v17 + v19[5], v18 + v19[5], v6);
  uint64_t v20 = v19[6];
  uint64_t v21 = (void *)(v17 + v20);
  uint64_t v22 = (void *)(v18 + v20);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v17 + v19[7]) = *(unsigned char *)(v18 + v19[7]);
  *(unsigned char *)(v17 + v19[8]) = *(unsigned char *)(v18 + v19[8]);
  *(unsigned char *)(v17 + v19[9]) = *(unsigned char *)(v18 + v19[9]);
  uint64_t v24 = v19[10];
  uint64_t v25 = (void *)(v17 + v24);
  uint64_t v26 = (void *)(v18 + v24);
  if (*v26 >= 3uLL)
  {
    uint64_t v28 = v26[1];
    uint64_t v29 = v26[2];
    void *v25 = *v26;
    v25[1] = v28;
    uint64_t v30 = v26[3];
    long long v25[2] = v29;
    v25[3] = v30;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v27 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v27;
  }
  uint64_t v31 = v19[11];
  uint64_t v32 = (void *)(v17 + v31);
  uint64_t v33 = (void *)(v18 + v31);
  uint64_t v34 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v35 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v32, v33, v35);
      goto LABEL_18;
    case 1u:
      uint64_t v36 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v36;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 2u:
      uint64_t v37 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v37;
      uint64_t v38 = (void *)v33[2];
      v32[2] = v38;
      swift_bridgeObjectRetain();
      id v39 = v38;
      uint64_t v40 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v41 = (char *)v32 + v40;
      uint64_t v42 = (char *)v33 + v40;
      uint64_t v43 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      goto LABEL_18;
    case 3u:
      uint64_t v44 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v44;
      swift_bridgeObjectRetain();
      uint64_t v45 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v46 = (char *)v32 + v45;
      uint64_t v47 = (char *)v33 + v45;
      uint64_t v48 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      goto LABEL_18;
    case 4u:
      uint64_t v49 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v32, v33, v49);
      uint64_t v50 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v51 = (void *)((char *)v32 + v50);
      uint64_t v52 = (void *)((char *)v33 + v50);
      uint64_t v53 = v52[1];
      void *v51 = *v52;
      v51[1] = v53;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 5u:
      uint64_t v54 = sub_26A220();
      uint64_t v55 = *(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16);
      v55(v32, v33, v54);
      uint64_t v56 = sub_4A98(&qword_2EE448);
      v55((void *)((char *)v32 + *(int *)(v56 + 48)), (void *)((char *)v33 + *(int *)(v56 + 48)), v54);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      break;
  }
  *(unsigned char *)(v17 + v19[12]) = *(unsigned char *)(v18 + v19[12]);
  uint64_t v57 = v19[13];
  uint64_t v58 = v17 + v57;
  uint64_t v59 = v18 + v57;
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v60 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  }
  else
  {
    uint64_t v61 = *(void *)(v59 + 24);
    if (v61)
    {
      uint64_t v62 = *(void *)(v59 + 32);
      *(void *)(v58 + 24) = v61;
      *(void *)(v58 + 32) = v62;
      (**(void (***)(uint64_t, uint64_t))(v61 - 8))(v58, v59);
    }
    else
    {
      long long v63 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v63;
      *(void *)(v58 + 32) = *(void *)(v59 + 32);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = v19[14];
  long long v65 = (void *)(v17 + v64);
  uint64_t v66 = (const void *)(v18 + v64);
  uint64_t v67 = sub_26A220();
  uint64_t v68 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = sub_4A98(&qword_2EA0C0);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  return a1;
}

uint64_t assignWithCopy for ButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (unsigned char *)(a1 + v8);
    uint64_t v10 = (unsigned char *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EBCD8);
    sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v9 = *v10;
      v9[1] = v10[1];
      uint64_t v11 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v69 = &v9[v12];
      uint64_t v70 = a1;
      uint64_t v13 = &v10[v12];
      uint64_t v14 = sub_26AB40();
      uint64_t v15 = v13;
      a1 = v70;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v69, v15, v14);
      *(void *)&v9[*(int *)(v11 + 28)] = *(void *)&v10[*(int *)(v11 + 28)];
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  uint64_t v19 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(v17 + v19[5], v18 + v19[5], v6);
  if (a1 != a2)
  {
    uint64_t v20 = v19[6];
    uint64_t v21 = (void *)(v17 + v20);
    uint64_t v22 = (void *)(v18 + v20);
    sub_B6DC(v17 + v20, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(v17 + v19[7]) = *(unsigned char *)(v18 + v19[7]);
  *(unsigned char *)(v17 + v19[8]) = *(unsigned char *)(v18 + v19[8]);
  *(unsigned char *)(v17 + v19[9]) = *(unsigned char *)(v18 + v19[9]);
  uint64_t v24 = v19[10];
  uint64_t v25 = v17 + v24;
  uint64_t v26 = v18 + v24;
  unint64_t v27 = *(void *)(v18 + v24);
  if (*(void *)(v17 + v24) >= 3uLL)
  {
    if (v27 < 3)
    {
      sub_B6DC(v17 + v24, &qword_2EE748);
      long long v29 = *(_OWORD *)(v26 + 16);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 16) = v29;
      if (a1 == a2) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
    *(void *)uint64_t v25 = v27;
    swift_retain();
    swift_release();
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    swift_retain();
    swift_release();
    *(void *)(v25 + 16) = *(void *)(v26 + 16);
    swift_retain();
    swift_release();
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    swift_retain();
    swift_release();
    if (a1 != a2) {
      goto LABEL_19;
    }
LABEL_22:
    *(unsigned char *)(v17 + v19[12]) = *(unsigned char *)(v18 + v19[12]);
    goto LABEL_35;
  }
  if (v27 >= 3)
  {
    *(void *)uint64_t v25 = v27;
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    *(void *)(v25 + 16) = *(void *)(v26 + 16);
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (a1 != a2) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  long long v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v28;
  if (a1 == a2) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v30 = v19[11];
  uint64_t v31 = (void *)(v17 + v30);
  uint64_t v32 = (void *)(v18 + v30);
  sub_215F9C(v17 + v30, type metadata accessor for ButtonViewModel.Content);
  uint64_t v33 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v34 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v31, v32, v34);
      goto LABEL_28;
    case 1u:
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 2u:
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      uint64_t v35 = (void *)v32[2];
      v31[2] = v35;
      swift_bridgeObjectRetain();
      id v36 = v35;
      uint64_t v37 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      uint64_t v38 = (char *)v31 + v37;
      id v39 = (char *)v32 + v37;
      uint64_t v40 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      goto LABEL_28;
    case 3u:
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      uint64_t v41 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v42 = (char *)v31 + v41;
      uint64_t v43 = (char *)v32 + v41;
      uint64_t v44 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      goto LABEL_28;
    case 4u:
      uint64_t v45 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v31, v32, v45);
      uint64_t v46 = *(int *)(sub_4A98(&qword_2EE440) + 48);
      uint64_t v47 = (void *)((char *)v31 + v46);
      uint64_t v48 = (void *)((char *)v32 + v46);
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 5u:
      uint64_t v49 = sub_26A220();
      uint64_t v50 = *(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16);
      v50(v31, v32, v49);
      uint64_t v51 = sub_4A98(&qword_2EE448);
      v50((void *)((char *)v31 + *(int *)(v51 + 48)), (void *)((char *)v32 + *(int *)(v51 + 48)), v49);
LABEL_28:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      break;
  }
  *(unsigned char *)(v17 + v19[12]) = *(unsigned char *)(v18 + v19[12]);
  uint64_t v52 = v19[13];
  uint64_t v53 = v17 + v52;
  uint64_t v54 = (long long *)(v18 + v52);
  sub_215F9C(v17 + v52, type metadata accessor for ButtonViewModel.ActionKind);
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v55 = sub_2696C0();
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  }
  else
  {
    uint64_t v56 = *((void *)v54 + 3);
    if (v56)
    {
      *(void *)(v53 + 24) = v56;
      *(void *)(v53 + 32) = *((void *)v54 + 4);
      (**(void (***)(uint64_t, long long *))(v56 - 8))(v53, v54);
    }
    else
    {
      long long v57 = *v54;
      long long v58 = v54[1];
      *(void *)(v53 + 32) = *((void *)v54 + 4);
      *(_OWORD *)uint64_t v53 = v57;
      *(_OWORD *)(v53 + 16) = v58;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_35:
  uint64_t v59 = v19[14];
  uint64_t v60 = (void *)(v17 + v59);
  uint64_t v61 = (void *)(v18 + v59);
  uint64_t v62 = sub_26A220();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v60, v61, v62);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_40;
  }
  if (v66)
  {
LABEL_40:
    uint64_t v67 = sub_4A98(&qword_2EA0C0);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v60, v61, v62);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  return a1;
}

uint64_t initializeWithTake for ButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  uint64_t v11 = sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v9 = *v10;
    uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v60 = (char *)v9 + v13;
    uint64_t v61 = a1;
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = sub_26AB40();
    uint64_t v16 = v14;
    a1 = v61;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v60, v16, v15);
    *(void *)((char *)v9 + *(int *)(v12 + 28)) = *(void *)((char *)v10 + *(int *)(v12 + 28));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  v7(a1 + v17, v19, v6);
  uint64_t v20 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(v18 + v20[5], v19 + v20[5], v6);
  uint64_t v21 = v20[6];
  uint64_t v22 = (void *)(v18 + v21);
  uint64_t v23 = (const void *)(v19 + v21);
  uint64_t v24 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  *(unsigned char *)(v18 + v20[7]) = *(unsigned char *)(v19 + v20[7]);
  *(unsigned char *)(v18 + v20[8]) = *(unsigned char *)(v19 + v20[8]);
  *(unsigned char *)(v18 + v20[9]) = *(unsigned char *)(v19 + v20[9]);
  uint64_t v26 = v20[10];
  unint64_t v27 = (_OWORD *)(v18 + v26);
  long long v28 = (_OWORD *)(v19 + v26);
  long long v29 = v28[1];
  _OWORD *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = v20[11];
  uint64_t v31 = (void *)(v18 + v30);
  uint64_t v32 = (void *)(v19 + v30);
  uint64_t v33 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v34 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      goto LABEL_14;
    case 2u:
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[2] = v32[2];
      uint64_t v35 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v36 = (char *)v31 + v35;
      uint64_t v37 = (char *)v32 + v35;
      uint64_t v38 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      goto LABEL_14;
    case 3u:
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      uint64_t v39 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v40 = (char *)v31 + v39;
      uint64_t v41 = (char *)v32 + v39;
      uint64_t v42 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      goto LABEL_14;
    case 4u:
      uint64_t v43 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
      uint64_t v44 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v31 + *(int *)(v44 + 48)) = *(_OWORD *)((char *)v32 + *(int *)(v44 + 48));
      goto LABEL_14;
    case 5u:
      uint64_t v45 = sub_26A220();
      uint64_t v46 = *(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32);
      v46(v31, v32, v45);
      uint64_t v47 = sub_4A98(&qword_2EE448);
      v46((void *)((char *)v31 + *(int *)(v47 + 48)), (void *)((char *)v32 + *(int *)(v47 + 48)), v45);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      break;
  }
  *(unsigned char *)(v18 + v20[12]) = *(unsigned char *)(v19 + v20[12]);
  uint64_t v48 = v20[13];
  uint64_t v49 = (void *)(v18 + v48);
  uint64_t v50 = (const void *)(v19 + v48);
  uint64_t v51 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 32))(v49, v50, v52);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  uint64_t v53 = v20[14];
  uint64_t v54 = (void *)(v18 + v53);
  uint64_t v55 = (const void *)(v19 + v53);
  uint64_t v56 = sub_26A220();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_4A98(&qword_2EA0C0);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 32))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  return a1;
}

uint64_t assignWithTake for ButtonView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (_WORD *)(a1 + v8);
    uint64_t v10 = (_WORD *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EBCD8);
    uint64_t v11 = sub_4A98(&qword_2EBCD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v9 = *v10;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v63 = (char *)v9 + v13;
      uint64_t v64 = a1;
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = sub_26AB40();
      uint64_t v16 = v14;
      a1 = v64;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v63, v16, v15);
      *(void *)((char *)v9 + *(int *)(v12 + 28)) = *(void *)((char *)v10 + *(int *)(v12 + 28));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  v7(a1 + v17, a2 + v17, v6);
  uint64_t v20 = (int *)type metadata accessor for ButtonViewModel(0);
  v7(v18 + v20[5], v19 + v20[5], v6);
  if (a1 != a2)
  {
    uint64_t v21 = v20[6];
    uint64_t v22 = (void *)(v18 + v21);
    uint64_t v23 = (const void *)(v19 + v21);
    sub_B6DC(v18 + v21, &qword_2EA968);
    uint64_t v24 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  *(unsigned char *)(v18 + v20[7]) = *(unsigned char *)(v19 + v20[7]);
  *(unsigned char *)(v18 + v20[8]) = *(unsigned char *)(v19 + v20[8]);
  *(unsigned char *)(v18 + v20[9]) = *(unsigned char *)(v19 + v20[9]);
  uint64_t v26 = v20[10];
  unint64_t v27 = (void *)(v18 + v26);
  long long v28 = (void *)(v19 + v26);
  if (*(void *)(v18 + v26) >= 3uLL)
  {
    if (*v28 >= 3uLL)
    {
      void *v27 = *v28;
      swift_release();
      v27[1] = v28[1];
      swift_release();
      v27[2] = v28[2];
      swift_release();
      v27[3] = v28[3];
      swift_release();
      if (a1 != a2) {
        goto LABEL_13;
      }
LABEL_16:
      *(unsigned char *)(v18 + v20[12]) = *(unsigned char *)(v19 + v20[12]);
      goto LABEL_26;
    }
    sub_B6DC((uint64_t)v27, &qword_2EE748);
  }
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  if (a1 == a2) {
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v30 = v20[11];
  uint64_t v31 = (void *)(v18 + v30);
  uint64_t v32 = (void *)(v19 + v30);
  sub_215F9C(v18 + v30, type metadata accessor for ButtonViewModel.Content);
  uint64_t v33 = type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v34 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      goto LABEL_22;
    case 2u:
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[2] = v32[2];
      uint64_t v35 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      id v36 = (char *)v31 + v35;
      uint64_t v37 = (char *)v32 + v35;
      uint64_t v38 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      goto LABEL_22;
    case 3u:
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      uint64_t v39 = *(int *)(sub_4A98(&qword_2EE438) + 48);
      uint64_t v40 = (char *)v31 + v39;
      uint64_t v41 = (char *)v32 + v39;
      uint64_t v42 = sub_26A220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      goto LABEL_22;
    case 4u:
      uint64_t v43 = sub_26A220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
      uint64_t v44 = sub_4A98(&qword_2EE440);
      *(_OWORD *)((char *)v31 + *(int *)(v44 + 48)) = *(_OWORD *)((char *)v32 + *(int *)(v44 + 48));
      goto LABEL_22;
    case 5u:
      uint64_t v45 = sub_26A220();
      uint64_t v46 = *(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32);
      v46(v31, v32, v45);
      uint64_t v47 = sub_4A98(&qword_2EE448);
      v46((void *)((char *)v31 + *(int *)(v47 + 48)), (void *)((char *)v32 + *(int *)(v47 + 48)), v45);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      break;
  }
  *(unsigned char *)(v18 + v20[12]) = *(unsigned char *)(v19 + v20[12]);
  uint64_t v48 = v20[13];
  uint64_t v49 = (void *)(v18 + v48);
  uint64_t v50 = (const void *)(v19 + v48);
  sub_215F9C(v18 + v48, type metadata accessor for ButtonViewModel.ActionKind);
  uint64_t v51 = type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = sub_2696C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 32))(v49, v50, v52);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
LABEL_26:
  uint64_t v53 = v20[14];
  uint64_t v54 = (void *)(v18 + v53);
  uint64_t v55 = (void *)(v19 + v53);
  uint64_t v56 = sub_26A220();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v57 + 40))(v54, v55, v56);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v54, v56);
    goto LABEL_31;
  }
  if (v60)
  {
LABEL_31:
    uint64_t v61 = sub_4A98(&qword_2EA0C0);
    memcpy(v54, v55, *(void *)(*(void *)(v61 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v57 + 32))(v54, v55, v56);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2152F0);
}

uint64_t sub_2152F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EBDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EE7F0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for ButtonViewModel(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 28);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_215458);
}

uint64_t sub_215458(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4A98(&qword_2EE7F0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for ButtonViewModel(0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 28);

  return v17(v19, a2, a2, v18);
}

void sub_2155B8()
{
  sub_4F8CC();
  if (v0 <= 0x3F)
  {
    sub_2156BC();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ButtonViewModel(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2156BC()
{
  if (!qword_2EE860)
  {
    type metadata accessor for FontConstants.Button(255);
    unint64_t v0 = sub_26A740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EE860);
    }
  }
}

uint64_t sub_215714()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2157F4()
{
  unint64_t result = qword_2F6658;
  if (!qword_2F6658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6658);
  }
  return result;
}

uint64_t sub_215850()
{
  return swift_deallocObject();
}

uint64_t sub_215860@<X0>(uint64_t a1@<X8>)
{
  return sub_20D818(a1);
}

unint64_t sub_215884()
{
  unint64_t result = qword_2F6670;
  if (!qword_2F6670)
  {
    sub_7B0C(&qword_2F6668);
    sub_7C18(&qword_2F6678, &qword_2F6680);
    sub_7C18((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6670);
  }
  return result;
}

uint64_t sub_215948(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2159B0()
{
  uint64_t v1 = (int *)type metadata accessor for ButtonView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_4A98(&qword_2EBDF0);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v2 + v1[5], v3);
  uint64_t v5 = v2 + v1[6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + v1[7];
  v4(v8, v3);
  uint64_t v9 = (int *)type metadata accessor for ButtonViewModel(0);
  v4(v8 + v9[5], v3);
  uint64_t v10 = v8 + v9[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v8 + v9[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v12 = v8 + v9[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_14;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v13 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_13;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v13 = *(int *)(sub_4A98(&qword_2EE438) + 48);
LABEL_13:
      v12 += v13;
LABEL_14:
      uint64_t v14 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
      break;
    case 4u:
      uint64_t v15 = sub_26A220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v12, v15);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v16 = sub_26A220();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      v17(v12, v16);
      uint64_t v18 = sub_4A98(&qword_2EE448);
      v17(v12 + *(int *)(v18 + 48), v16);
      break;
    default:
      break;
  }
  uint64_t v19 = v8 + v9[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  else if (*(void *)(v19 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v19);
  }
  uint64_t v21 = v8 + v9[14];
  uint64_t v22 = sub_26A220();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }

  return swift_deallocObject();
}

uint64_t sub_215EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_215F20@<X0>(uint64_t a1@<X8>)
{
  return sub_20D818(a1);
}

uint64_t sub_215F9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_216004(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21608C()
{
  return sub_216004(&qword_2F6720, &qword_2F66F8, (void (*)(void))sub_2160C8, (void (*)(void))sub_216188);
}

unint64_t sub_2160C8()
{
  unint64_t result = qword_2F6728;
  if (!qword_2F6728)
  {
    sub_7B0C(&qword_2F66F0);
    sub_7C18(&qword_2F6730, &qword_2F6708);
    sub_7C18(&qword_2F6738, &qword_2F66C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6728);
  }
  return result;
}

unint64_t sub_216188()
{
  unint64_t result = qword_2F6740;
  if (!qword_2F6740)
  {
    sub_7B0C(&qword_2F66C0);
    sub_7C18(&qword_2F6738, &qword_2F66C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6740);
  }
  return result;
}

uint64_t sub_216220()
{
  return sub_216004(&qword_2F6748, &qword_2F66A8, (void (*)(void))sub_21625C, (void (*)(void))sub_198B24);
}

unint64_t sub_21625C()
{
  unint64_t result = qword_2F6750;
  if (!qword_2F6750)
  {
    sub_7B0C(&qword_2F66A0);
    sub_7C18(&qword_2F6758, &qword_2F66B0);
    sub_19C06C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6750);
  }
  return result;
}

unint64_t sub_2162FC()
{
  unint64_t result = qword_2F6760;
  if (!qword_2F6760)
  {
    sub_7B0C(&qword_2F6710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6760);
  }
  return result;
}

uint64_t sub_21637C(uint64_t a1)
{
  return sub_2168FC(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_21164C);
}

uint64_t sub_216394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2163E0()
{
  uint64_t v1 = sub_26A220();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for ButtonView();
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v25 = v1;
  uint64_t v6 = v1;
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v6);
  unint64_t v26 = (v3 + v4 + v27) & ~v27;
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v0 + v26, v8);
  v9(v0 + v26 + v5[5], v8);
  unint64_t v10 = v0 + v26 + v5[6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v11 = v10 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  unint64_t v13 = v0 + v26 + v5[7];
  v9(v13, v8);
  uint64_t v14 = (int *)type metadata accessor for ButtonViewModel(0);
  v9(v13 + v14[5], v8);
  unint64_t v15 = v13 + v14[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v13 + v14[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  unint64_t v17 = v13 + v14[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v18 = v17;
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v19 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v20 = &qword_2EE438;
      goto LABEL_16;
    case 4u:
      v7(v17, v25);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      v7(v17, v25);
      uint64_t v20 = &qword_2EE448;
LABEL_16:
      uint64_t v19 = *(int *)(sub_4A98(v20) + 48);
LABEL_17:
      unint64_t v18 = v17 + v19;
LABEL_18:
      v7(v18, v25);
      break;
    default:
      break;
  }
  uint64_t v21 = v13 + v14[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  else if (*(void *)(v21 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v21);
  }
  unint64_t v23 = v13 + v14[14];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v23, 1, v25)) {
    v7(v23, v25);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2168E4(uint64_t a1)
{
  return sub_2168FC(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_21108C);
}

uint64_t sub_2168FC(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_26A220() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for ButtonView() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v2 + v9);
  uint64_t v11 = *(void *)(v2 + v9 + 8);

  return a2(a1, v2 + v5, v2 + v8, v10, v11);
}

uint64_t sub_216A24()
{
  uint64_t v1 = sub_26A220();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  unint64_t v5 = (int *)type metadata accessor for ButtonView();
  uint64_t v28 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v25 = v1;
  uint64_t v26 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v6 = v1;
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v6);
  unint64_t v27 = (v3 + v4 + v28) & ~v28;
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  unint64_t v9 = *(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v0 + v27, v8);
  v9(v0 + v27 + v5[5], v8);
  unint64_t v10 = v0 + v27 + v5[6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v11 = v10 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  unint64_t v13 = v0 + v27 + v5[7];
  v9(v13, v8);
  uint64_t v14 = (int *)type metadata accessor for ButtonViewModel(0);
  v9(v13 + v14[5], v8);
  unint64_t v15 = v13 + v14[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v13 + v14[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  unint64_t v17 = v13 + v14[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v18 = v17;
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v19 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v20 = &qword_2EE438;
      goto LABEL_16;
    case 4u:
      v7(v17, v25);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      v7(v17, v25);
      uint64_t v20 = &qword_2EE448;
LABEL_16:
      uint64_t v19 = *(int *)(sub_4A98(v20) + 48);
LABEL_17:
      unint64_t v18 = v17 + v19;
LABEL_18:
      v7(v18, v25);
      break;
    default:
      break;
  }
  uint64_t v21 = v13 + v14[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  else if (*(void *)(v21 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v21);
  }
  unint64_t v23 = v13 + v14[14];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v23, 1, v25)) {
    v7(v23, v25);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_216F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_26A220() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ButtonView() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v2 + v10);
  uint64_t v12 = *(void *)(v2 + v10 + 8);
  unint64_t v13 = *(void **)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_210AB4(a1, v2 + v6, v2 + v9, v11, v12, v13, a2);
}

uint64_t sub_21704C()
{
  uint64_t v1 = sub_26A220();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for ButtonView();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*((void *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v25(v0 + v3, v1);
  uint64_t v7 = v0 + v6;
  uint64_t v8 = sub_4A98(&qword_2EBDF0);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v7 + v5[5], v8);
  uint64_t v10 = v7 + v5[6];
  sub_4A98(&qword_2EBCD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = v10 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v12 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v7 + v5[7];
  v9(v13, v8);
  uint64_t v14 = (int *)type metadata accessor for ButtonViewModel(0);
  v9(v13 + v14[5], v8);
  uint64_t v15 = v13 + v14[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v13 + v14[10]) >= 3uLL)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  unint64_t v17 = v13 + v14[11];
  type metadata accessor for ButtonViewModel.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v18 = v17;
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();

      uint64_t v19 = *(int *)(sub_4A98(&qword_2EE430) + 64);
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v20 = &qword_2EE438;
      goto LABEL_16;
    case 4u:
      v25(v17, v1);
      sub_4A98(&qword_2EE440);
      swift_bridgeObjectRelease();
      break;
    case 5u:
      v25(v17, v1);
      uint64_t v20 = &qword_2EE448;
LABEL_16:
      uint64_t v19 = *(int *)(sub_4A98(v20) + 48);
LABEL_17:
      unint64_t v18 = v17 + v19;
LABEL_18:
      v25(v18, v1);
      break;
    default:
      break;
  }
  uint64_t v21 = v13 + v14[13];
  type metadata accessor for ButtonViewModel.ActionKind(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_2696C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  else if (*(void *)(v21 + 24))
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v21);
  }
  unint64_t v23 = v13 + v14[14];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v23, 1, v1)) {
    v25(v23, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_21751C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_26A220() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ButtonView() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_210734(a1, v2 + v6, v9, a2);
}

unint64_t sub_217600()
{
  unint64_t result = qword_2F6778;
  if (!qword_2F6778)
  {
    sub_7B0C(&qword_2F6770);
    sub_2176AC();
    sub_216394((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6778);
  }
  return result;
}

unint64_t sub_2176AC()
{
  unint64_t result = qword_2EC6B0;
  if (!qword_2EC6B0)
  {
    sub_7B0C(&qword_2EC6B8);
    sub_7C18(&qword_2EC688, &qword_2EC690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EC6B0);
  }
  return result;
}

uint64_t InteractiveStarRatingView.init(value:initialValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  *a5 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for InteractiveStarRatingView();
  uint64_t v13 = (uint64_t *)((char *)a5 + v12[5]);
  *uint64_t v13 = swift_getKeyPath();
  sub_4A98(&qword_2EBC50);
  swift_storeEnumTagMultiPayload();
  sub_26C340();
  uint64_t v14 = (char *)a5 + v12[7];
  sub_4A98(&qword_2F0328);
  sub_26C340();
  uint64_t result = swift_release();
  *(void *)uint64_t v14 = v18;
  v14[8] = v19;
  *((void *)v14 + 2) = v20;
  *(uint64_t *)((char *)a5 + v12[10]) = 5;
  *(uint64_t *)((char *)a5 + v12[11]) = 0x4046800000000000;
  *(uint64_t *)((char *)a5 + v12[12]) = 0x4044800000000000;
  uint64_t v16 = (char *)a5 + v12[8];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  *((double *)v16 + 2) = a6;
  if (a4)
  {
    a3 = 0;
    *(uint64_t *)((char *)a5 + v12[9]) = 0;
  }
  else
  {
    *(uint64_t *)((char *)a5 + v12[9]) = a3;
  }
  unint64_t v17 = (uint64_t *)((char *)a5 + v12[6]);
  *unint64_t v17 = a3;
  v17[1] = 0;
  return result;
}

uint64_t type metadata accessor for InteractiveStarRatingView()
{
  uint64_t result = qword_2F6888;
  if (!qword_2F6888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t InteractiveStarRatingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = sub_26B320();
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_26A730();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  __chkstk_darwin(v4);
  uint64_t v67 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F6798);
  uint64_t v74 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F67A0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_26B600();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  int v59 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for InteractiveStarRatingView();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4A98(&qword_2F67A8);
  __chkstk_darwin(v57);
  unint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_4A98(&qword_2F67B0);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_4A98(&qword_2F67B8);
  __chkstk_darwin(v80);
  char v79 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F67C0);
  uint64_t v68 = *(void *)(v20 - 8);
  uint64_t v69 = v20;
  __chkstk_darwin(v20);
  int v66 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_26B120();
  *(void *)unint64_t v17 = result;
  *((void *)v17 + 1) = 0x4010000000000000;
  v17[16] = 0;
  uint64_t v72 = v12;
  uint64_t v23 = *(void *)(v1 + *(int *)(v12 + 40));
  if (v23 < 1)
  {
    __break(1u);
  }
  else
  {
    sub_4A98(&qword_2F67C8);
    uint64_t v56 = a1;
    uint64_t v82 = 1;
    uint64_t v83 = v23;
    swift_getKeyPath();
    uint64_t v55 = v9;
    uint64_t v78 = type metadata accessor for InteractiveStarRatingView;
    sub_21A3F0(v1, (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for InteractiveStarRatingView);
    uint64_t v24 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v53 = v6;
    uint64_t v25 = (v24 + 16) & ~v24;
    uint64_t v76 = v24 | 7;
    uint64_t v77 = v25 + v14;
    uint64_t v26 = swift_allocObject();
    uint64_t v81 = v1;
    uint64_t v54 = v8;
    uint64_t v52 = v25;
    sub_218808((uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
    sub_4A98(&qword_2F67D0);
    sub_4A98(&qword_2F67D8);
    sub_2188EC();
    sub_218968();
    sub_26C4F0();
    unint64_t v27 = v59;
    sub_26B5E0();
    sub_7C18(&qword_2F6800, &qword_2F67A8);
    uint64_t v28 = v58;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v63);
    sub_B6DC((uint64_t)v17, &qword_2F67A8);
    uint64_t v29 = v81;
    uint64_t v30 = v78;
    sub_21A3F0(v81, (uint64_t)v15, (uint64_t (*)(void))v78);
    uint64_t v31 = swift_allocObject();
    sub_218808((uint64_t)v15, v31 + v25);
    uint64_t v32 = v60;
    uint64_t v33 = v79;
    uint64_t v34 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v79, v28, v61);
    uint64_t v35 = &v33[*(int *)(v80 + 36)];
    *(void *)uint64_t v35 = sub_33964;
    *((void *)v35 + 1) = 0;
    *((void *)v35 + 2) = sub_218B00;
    *((void *)v35 + 3) = v31;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v34);
    sub_26B4C0();
    id v36 = v67;
    sub_26A700();
    sub_21A3F0(v29, (uint64_t)v15, (uint64_t (*)(void))v30);
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = v52;
    sub_218808((uint64_t)v15, v37 + v52);
    sub_21A458(&qword_2F6808, (void (*)(uint64_t))&type metadata accessor for DragGesture);
    sub_21A458(&qword_2F6810, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
    uint64_t v39 = v73;
    uint64_t v40 = v71;
    sub_26C530();
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v40);
    sub_21A3F0(v81, (uint64_t)v15, (uint64_t (*)(void))v30);
    uint64_t v41 = swift_allocObject();
    sub_218808((uint64_t)v15, v41 + v38);
    sub_7C18(&qword_2F6818, &qword_2F6798);
    uint64_t v42 = v75;
    uint64_t v43 = v53;
    sub_26C520();
    swift_release();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v43);
    sub_26A750();
    unint64_t v44 = sub_218F1C();
    uint64_t v45 = sub_7C18(&qword_2F6828, &qword_2F67A0);
    uint64_t v46 = v66;
    uint64_t v48 = (uint64_t)v79;
    uint64_t v47 = v80;
    uint64_t v49 = v54;
    sub_26BFE0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v49);
    sub_B6DC(v48, &qword_2F67B8);
    uint64_t v86 = *(void *)(v81 + *(int *)(v72 + 36));
    sub_21A3F0(v81, (uint64_t)v15, (uint64_t (*)(void))v78);
    uint64_t v50 = swift_allocObject();
    sub_218808((uint64_t)v15, v50 + v38);
    uint64_t v82 = v47;
    uint64_t v83 = v49;
    unint64_t v84 = v44;
    uint64_t v85 = v45;
    swift_getOpaqueTypeConformance2();
    uint64_t v51 = v69;
    sub_26C050();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v46, v51);
  }
  return result;
}

uint64_t sub_218420@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26A6E0();
  uint64_t v37 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ColorConstants(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = *a1;
  uint64_t v40 = sub_26C250();
  uint64_t v39 = sub_26B7D0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = (uint64_t *)(a2 + *(int *)(type metadata accessor for InteractiveStarRatingView() + 24));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v42 = v20;
  uint64_t v43 = v21;
  sub_4A98(&qword_2F68E0);
  uint64_t result = sub_26C350();
  double v23 = ceil(v41);
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (v18 <= (uint64_t)v23)
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v17);
    sub_21A3F0((uint64_t)v17, (uint64_t)v11, type metadata accessor for ColorConstants.Environment);
    uint64_t v26 = v37;
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v8, enum case for ColorScheme.dark(_:), v6);
    sub_21A458((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    char v27 = sub_26D360();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
    v28(v8, v6);
    v28(v11, v6);
    if (v27) {
      uint64_t v29 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      uint64_t v29 = sub_26C150();
    }
    uint64_t v25 = v29;
  }
  else
  {
    _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v15);
    id v24 = [self quaternaryLabelColor];
    uint64_t v25 = sub_26C230();
    unint64_t v17 = v15;
  }
  sub_1EB1A8((uint64_t)v17);
  uint64_t v30 = swift_getKeyPath();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t result = sub_26A8D0();
  uint64_t v31 = v42;
  char v32 = v43;
  uint64_t v33 = v44;
  char v34 = v45;
  uint64_t v35 = KeyPath;
  *(void *)a3 = v40;
  *(void *)(a3 + 8) = v35;
  *(void *)(a3 + 16) = v39;
  *(void *)(a3 + 24) = v30;
  *(void *)(a3 + 32) = v25;
  *(void *)(a3 + 40) = v31;
  *(unsigned char *)(a3 + 48) = v32;
  *(void *)(a3 + 56) = v33;
  *(unsigned char *)(a3 + 64) = v34;
  *(_OWORD *)(a3 + 72) = v46;
  return result;
}

uint64_t sub_218808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractiveStarRatingView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21886C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for InteractiveStarRatingView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_218420(a1, v6, a2);
}

unint64_t sub_2188EC()
{
  unint64_t result = qword_2F67E0;
  if (!qword_2F67E0)
  {
    sub_7B0C(&qword_2F67D0);
    sub_DBDB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F67E0);
  }
  return result;
}

unint64_t sub_218968()
{
  unint64_t result = qword_2F67E8;
  if (!qword_2F67E8)
  {
    sub_7B0C(&qword_2F67D8);
    sub_2189E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F67E8);
  }
  return result;
}

unint64_t sub_2189E4()
{
  unint64_t result = qword_2F67F0;
  if (!qword_2F67F0)
  {
    sub_7B0C(&qword_2F67F8);
    sub_2E38C();
    sub_7C18((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F67F0);
  }
  return result;
}

uint64_t sub_218A84()
{
  return sub_26C360();
}

uint64_t sub_218B00()
{
  type metadata accessor for InteractiveStarRatingView();

  return sub_218A84();
}

uint64_t sub_218B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_26AB70();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = (int *)type metadata accessor for InteractiveStarRatingView();
  uint64_t v11 = (uint64_t *)(a2 + v10[7]);
  uint64_t v12 = *v11;
  char v13 = *((unsigned char *)v11 + 8);
  uint64_t v14 = v11[2];
  uint64_t v33 = v12;
  LOBYTE(v34) = v13;
  uint64_t v35 = v14;
  sub_4A98(&qword_2F0060);
  uint64_t result = sub_26C350();
  if ((v37 & 1) == 0)
  {
    double v16 = v36;
    sub_26A720();
    double v18 = v17;
    sub_26A710();
    double v20 = v18 + v19;
    if (v20 >= v16) {
      double v20 = v16;
    }
    if (v20 < 0.0) {
      double v21 = 0.0;
    }
    else {
      double v21 = v20;
    }
    uint64_t v22 = v10[10];
    double v23 = v16 / (double)*(uint64_t *)(a2 + v22);
    sub_41A98((uint64_t)v9);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for LayoutDirection.leftToRight(_:), v3);
    char v24 = sub_26AB60();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v7, v3);
    v25(v9, v3);
    double v26 = v16 - v21;
    if (v24) {
      double v26 = v21;
    }
    double v27 = fmax(v26 / v23, 1.0);
    double v28 = (double)*(uint64_t *)(a2 + v22);
    uint64_t v29 = (uint64_t *)(a2 + v10[6]);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v33 = v30;
    if (v27 > v28) {
      double v27 = v28;
    }
    uint64_t v34 = v31;
    double v36 = v27;
    sub_4A98(&qword_2F68E0);
    return sub_26C360();
  }
  return result;
}

uint64_t sub_218DC4(uint64_t a1)
{
  return sub_218E98(a1, sub_218B70);
}

uint64_t sub_218DDC()
{
  return sub_26C490();
}

uint64_t sub_218E80(uint64_t a1)
{
  return sub_218E98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_218DDC);
}

uint64_t sub_218E98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for InteractiveStarRatingView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_218F1C()
{
  unint64_t result = qword_2F6820;
  if (!qword_2F6820)
  {
    sub_7B0C(&qword_2F67B8);
    sub_7B0C(&qword_2F67A8);
    sub_7C18(&qword_2F6800, &qword_2F67A8);
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2EB148, &qword_2EB150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6820);
  }
  return result;
}

uint64_t sub_21901C(uint64_t a1, double *a2)
{
  double v2 = *a2;
  type metadata accessor for InteractiveStarRatingView();
  sub_4A98(&qword_2F68E0);
  uint64_t result = sub_26C350();
  if (v2 != v4) {
    return sub_26C360();
  }
  return result;
}

uint64_t sub_2190C0()
{
  uint64_t v1 = type metadata accessor for InteractiveStarRatingView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 20);
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26AB70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_219280(uint64_t a1, double *a2)
{
  type metadata accessor for InteractiveStarRatingView();

  return sub_21901C(a1, a2);
}

uint64_t sub_219300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractiveStarRatingView(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *unint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    double v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    double v18 = (char *)v4 + v14;
    double v19 = (char *)a2 + v14;
    v18[8] = v19[8];
    *(void *)double v18 = *(void *)v19;
    *((void *)v18 + 2) = *((void *)v19 + 2);
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (uint64_t *)((char *)v4 + v20);
    double v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    long long v22[2] = v23[2];
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v25 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v25) = *(uint64_t *)((char *)a2 + v25);
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for InteractiveStarRatingView(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26AB70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for InteractiveStarRatingView(void *a1, void *a2, int *a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_26AB70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  double v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  v16[8] = v17[8];
  *(void *)double v16 = *(void *)v17;
  *((void *)v16 + 2) = *((void *)v17 + 2);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v18);
  uint64_t v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  v20[2] = v21[2];
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v23 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for InteractiveStarRatingView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC50);
    sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_26AB70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  double v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 2) = *((void *)v16 + 2);
  swift_retain();
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  return a1;
}

char *initializeWithTake for InteractiveStarRatingView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EBC50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26AB70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((void *)v18 + 2) = *((void *)v19 + 2);
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v20 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  return a1;
}

char *assignWithTake for InteractiveStarRatingView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EBC50);
    uint64_t v11 = sub_4A98(&qword_2EBC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26AB70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_release();
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *((void *)v17 + 2) = *((void *)v18 + 2);
  swift_release();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  swift_release();
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  *((void *)v20 + 2) = *((void *)v21 + 2);
  uint64_t v22 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveStarRatingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_219F20);
}

uint64_t sub_219F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2ECD20);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveStarRatingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_21A054);
}

uint64_t sub_21A054(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2ECD20);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_21A170()
{
  sub_21A2A0(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_21A2A0(319, (unint64_t *)&qword_2ECD90, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21A2A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_21A2F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21A3F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21A458(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.init<>(assetInfo:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  uint64_t v4 = sub_26A000();
  uint64_t v6 = v5;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v6;
  sub_10E0C(KeyPath, 0);
  swift_bridgeObjectRetain();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  sub_C374(KeyPath, 0);

  return swift_bridgeObjectRelease();
}

uint64_t ListItemMetadataRecommendationCreatorDescriptionExternals.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptionExternals.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.description.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.text(localizer:font:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2695D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(_OWORD *)(a3 + 16);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  swift_getWitnessTable();
  ViewModelWithExternals.subscript.getter(KeyPath);
  swift_release();
  uint64_t result = 0;
  if ((v18 & 1) == 0)
  {
    uint64_t v12 = (uint64_t *)(v3 + *(int *)(a3 + 36));
    uint64_t v13 = (void *)v12[1];
    if (v13)
    {
      uint64_t v14 = *v12;
      objc_allocWithZone((Class)type metadata accessor for BooksHTMLConverter());
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v15 = sub_1BF094(v14, v13, a2);
      [*(id *)&v15[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_parser] parse];
      uint64_t v16 = &v15[OBJC_IVAR____TtC7BooksUIP33_E4697B72F90B920AD6B6858623E47B6D18BooksHTMLConverter_currentString];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v16, v6);

      return sub_26BAF0();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21A844(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E7265747865 && a2 == 0xE900000000000073;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21A95C(char a1)
{
  if (a1) {
    return 0x7470697263736564;
  }
  else {
    return 0x6C616E7265747865;
  }
}

BOOL sub_21A9A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static HostingViewBarType.== infix(_:_:)(*a1, *a2);
}

Swift::Int sub_21A9B4()
{
  return HostingViewBarType.hashValue.getter(*v0);
}

void sub_21A9C4(uint64_t a1)
{
  HostingViewBarType.hash(into:)(a1, *v1);
}

Swift::Int sub_21A9D4()
{
  sub_26DEF0();
  HostingViewBarType.hash(into:)((uint64_t)v2, *v0);
  return sub_26DF20();
}

uint64_t sub_21AA1C()
{
  return sub_21A95C(*v0);
}

uint64_t sub_21AA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21A844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21AA5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_21AAB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ListItemMetadataRecommendationCreatorDescriptorBase.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v27 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v30 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ListItemMetadataRecommendationCreatorDescriptorBase.CodingKeys();
  swift_getWitnessTable();
  uint64_t v31 = sub_26DCC0();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v32 = a2;
  uint64_t v28 = a3;
  uint64_t v10 = type metadata accessor for ListItemMetadataRecommendationCreatorDescriptorBase();
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = (uint64_t *)((char *)&v24 + *(int *)(v11 + 36) - v12);
  *uint64_t v14 = 0;
  v14[1] = 0;
  sub_4ADC(a1, a1[3]);
  uint64_t v15 = v33;
  sub_26DFC0();
  if (v15)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v27;
    char v35 = 0;
    sub_26DC90();
    long long v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v33 = v13;
    v17(v13, v30, v32);
    char v34 = 1;
    uint64_t v18 = sub_26DC30();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v31);
    swift_bridgeObjectRelease();
    *uint64_t v14 = v18;
    v14[1] = v20;
    uint64_t v21 = v25;
    uint64_t v22 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v26, v33, v10);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v22, v10);
  }
}

uint64_t sub_21AEAC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ListItemMetadataRecommendationCreatorDescriptorBase.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_21AED0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 24))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_21AF1C()
{
  return 16;
}

__n128 sub_21AF28(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for ListItemMetadataRecommendationCreatorDescriptorBase.CodingKeys()
{
  return sub_129B4();
}

uint64_t type metadata accessor for ListItemMetadataRecommendationCreatorDescriptorBase()
{
  return sub_129B4();
}

unint64_t sub_21AF64(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_21AF94();
  unint64_t result = sub_21AFE8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_21AF94()
{
  unint64_t result = qword_2F68F0;
  if (!qword_2F68F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F68F0);
  }
  return result;
}

unint64_t sub_21AFE8()
{
  unint64_t result = qword_2F68F8;
  if (!qword_2F68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F68F8);
  }
  return result;
}

uint64_t sub_21B03C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21B078(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21B0B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21B0F0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of ListItemMetadataRecommendationCreatorDescriptionExternalsProtocol.isCompact.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t a1)
{
  return sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_C374(v5, v6);
  return a1;
}

uint64_t assignWithTake for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_C374(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataRecommendationCreatorDescriptionExternals(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataRecommendationCreatorDescriptionExternals()
{
  return &type metadata for ListItemMetadataRecommendationCreatorDescriptionExternals;
}

uint64_t sub_21B2C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21B360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21B464(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21B4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21B55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21B5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21B67C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21B7D0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_21B7E4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x21B9D0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            void *v18 = 0;
            v18[1] = 0;
            *(_DWORD *)uint64_t v18 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v18[1] = a2;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

unsigned char *sub_21B9F8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21BAC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_21BAEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_21BB08()
{
  return swift_getWitnessTable();
}

uint64_t sub_21BB24()
{
  return swift_getWitnessTable();
}

uint64_t ColorConstants.vibrantSecondary.getter()
{
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v0 = sub_26C1C0();
  swift_release();
  return v0;
}

uint64_t ColorConstants.booksKey.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v6 - 8);
  unsigned int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
  sub_61674();
  LOBYTE(v1) = sub_26D360();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  v9(v8, v2);
  if (v1) {
    return _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else {
    return sub_26C150();
  }
}

uint64_t ColorConstants.booksQuaternaryLabel.getter()
{
  return sub_21D760((SEL *)&selRef_quaternaryLabelColor);
}

uint64_t ColorConstants.booksQuaternarySystemFill.getter()
{
  return sub_21D760((SEL *)&selRef_quaternarySystemFillColor);
}

uint64_t ColorConstants.booksTertiaryLabel.getter()
{
  return sub_21D760((SEL *)&selRef_tertiaryLabelColor);
}

uint64_t ColorConstants.booksTertiarySystemFill.getter()
{
  return sub_21D760((SEL *)&selRef_tertiarySystemFillColor);
}

uint64_t ColorConstants.vibrantSecondaryButtonLabel.getter()
{
  _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  uint64_t v0 = sub_26C1C0();
  swift_release();
  return v0;
}

uint64_t ColorConstants.booksButtonBackground.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v6 - 8);
  unsigned int v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1;
  sub_11A7FC(v1, (uint64_t)v8);
  uint64_t v9 = enum case for ColorScheme.dark(_:);
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v10(v5, enum case for ColorScheme.dark(_:), v2);
  sub_61674();
  char v11 = sub_26D360();
  int v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  v12(v8, v2);
  if (v11)
  {
    id v13 = [self tertiarySystemBackgroundColor];
    return sub_26C230();
  }
  else
  {
    sub_11A7FC(v17, (uint64_t)v8);
    v10(v5, v9, v2);
    char v15 = sub_26D360();
    v12(v5, v2);
    v12(v8, v2);
    if (v15) {
      return _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
    }
    else {
      return sub_26C150();
    }
  }
}

uint64_t ColorConstants.booksSecondaryButtonBackground.getter()
{
  return sub_21BFD0((SEL *)&selRef_tertiarySystemBackgroundColor, (SEL *)&selRef_secondarySystemBackgroundColor);
}

uint64_t ColorConstants.vibrantButtonBackground.getter()
{
  return sub_21BFD0((SEL *)&selRef_tertiarySystemFillColor, (SEL *)&selRef_systemFillColor);
}

uint64_t sub_21BFD0(SEL *a1, SEL *a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v5, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  LOBYTE(v5) = sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  uint64_t v14 = self;
  if (v5) {
    char v15 = a1;
  }
  else {
    char v15 = a2;
  }
  id v16 = [v14 *v15];
  return sub_26C230();
}

uint64_t ColorConstants.vibrantQuaternary.getter()
{
  return sub_21DA50((SEL *)&selRef_quaternaryLabelColor);
}

uint64_t ColorConstants.booksBackground.getter()
{
  return sub_21D760((SEL *)&selRef_systemBackgroundColor);
}

uint64_t ColorConstants.booksSecondaryBackground.getter()
{
  return sub_21D760((SEL *)&selRef_secondarySystemBackgroundColor);
}

uint64_t ColorConstants.booksTertiaryBackground.getter()
{
  return sub_21D760((SEL *)&selRef_tertiarySystemBackgroundColor);
}

uint64_t ColorConstants.booksGroupedBackground.getter()
{
  return sub_21D760((SEL *)&selRef_systemGroupedBackgroundColor);
}

uint64_t ColorConstants.booksSecondaryGroupedBackground.getter()
{
  return sub_21D760((SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

uint64_t ColorConstants.booksTertiaryGroupedBackground.getter()
{
  return sub_21D760((SEL *)&selRef_tertiarySystemGroupedBackgroundColor);
}

uint64_t ColorConstants.booksSystemFill.getter()
{
  return sub_21D760((SEL *)&selRef_systemFillColor);
}

uint64_t ColorConstants.booksSecondarySystemFill.getter()
{
  return sub_21D760((SEL *)&selRef_secondarySystemFillColor);
}

uint64_t ColorConstants.booksRed.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksOrange.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksGreen.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksTeal.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksBlue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksPurple.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksMagenta.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  return sub_26C220();
}

uint64_t ColorConstants.booksIconBackground.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  LOBYTE(v1) = sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  if ((v1 & 1) == 0) {
    return sub_26C150();
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  sub_26C220();
  uint64_t v14 = sub_26C1C0();
  swift_release();
  return v14;
}

uint64_t ColorConstants.booksAXSeparator.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  sub_26C220();
  uint64_t v14 = sub_26C1C0();
  swift_release();
  return v14;
}

uint64_t ColorConstants.booksSeparator.getter()
{
  return sub_21D760((SEL *)&selRef_separatorColor);
}

uint64_t sub_21D760(SEL *a1)
{
  id v1 = [self *a1];

  return sub_26C230();
}

uint64_t ColorConstants.booksTableSelection.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26C0D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(v1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  sub_61674();
  sub_26D360();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  sub_26C220();
  uint64_t v14 = sub_26C1C0();
  swift_release();
  return v14;
}

uint64_t ColorConstants.vibrantTertiary.getter()
{
  return sub_21DA50((SEL *)&selRef_tertiaryLabelColor);
}

uint64_t sub_21DA50(SEL *a1)
{
  id v1 = [self *a1];
  sub_26C230();
  uint64_t v2 = sub_26C1C0();
  swift_release();
  return v2;
}

unint64_t SynchronousNativeIntentDispatcher.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v2 = (_OWORD *)(a1 + 8);
  sub_B6DC(a1 + 8, &qword_2F2420);
  *uint64_t v2 = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  unint64_t result = sub_96E8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)a1 = result;
  return result;
}

uint64_t SynchronousNativeIntentDispatcher.register(contentsOf:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *v1;
  *id v1 = 0x8000000000000000;
  sub_16B11C(v2, (uint64_t)sub_16B0C8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v5);
  *id v1 = v5;

  return swift_bridgeObjectRelease();
}

uint64_t SynchronousNativeIntentDispatcher.registering<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_16B480(v4, a4);
  return SynchronousNativeIntentDispatcher.register<A>(_:)(a1, a2, a3);
}

double SynchronousNativeIntentDispatcher.withNext(_:)@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_16B480(v2, (uint64_t)v8);
  sub_21F078(a1, (uint64_t)v8 + 8);
  a2[3] = &type metadata for SynchronousNativeIntentDispatcher;
  a2[4] = &protocol witness table for SynchronousNativeIntentDispatcher;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  *a2 = v5;
  long long v6 = v8[1];
  v5[1] = v8[0];
  v5[2] = v6;
  double result = *(double *)&v9;
  v5[3] = v9;
  return result;
}

uint64_t SynchronousNativeIntentDispatcher.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v8 = v7;
  v11[3] = a2;
  v11[4] = a3;
  long long v9 = sub_CA1C(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v9, a1, a2);
  return sub_8A84((uint64_t)v11, v6, v8);
}

uint64_t SynchronousNativeIntentDispatcher.registering(contentsOf:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_16B480(v2, (uint64_t)a2);
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a2;
  *a2 = 0x8000000000000000;
  sub_16B11C(v5, (uint64_t)sub_16B0C8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *a2 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t SynchronousNativeIntentDispatcher.perform<A>(_:objectGraph:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = sub_26CBD0();
  uint64_t v38 = *(void *)(v31 - 8);
  uint64_t v9 = __chkstk_darwin(v31);
  double v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v30 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(v11);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v32 = a1;
  uint64_t v34 = a3;
  sub_21E10C((uint64_t)v13);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v20((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v30 = v17;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v38 + 8);
    v38 += 8;
    v21(v13, v31);
    uint64_t v22 = v37;
    uint64_t result = sub_21E3DC(v33, (uint64_t)v36);
    if (!v22)
    {
      uint64_t v24 = v34;
      int v25 = v20((uint64_t)v36, 1, AssociatedTypeWitness);
      uint64_t v26 = v35;
      if (v25 == 1)
      {
        v21(v36, v31);
        return sub_21E5BC(v32, v33, v24, a4);
      }
      else
      {
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
        uint64_t v29 = v30;
        v28(v30, (uint64_t)v36, AssociatedTypeWitness);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v26, v29, AssociatedTypeWitness);
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v19, v13, AssociatedTypeWitness);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v35, v19, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_21E10C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for SynchronousStaticIntent();
  uint64_t v3 = sub_26D980();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = *(void *)(v2 - 8);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v18 - v9;
  sub_26C930();
  uint64_t v20 = AssociatedTypeWitness;
  swift_getExtendedExistentialTypeMetadata();
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v7, 0, 1, v2);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v2);
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v14 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v19, v10, AssociatedTypeWitness);
    uint64_t v15 = 0;
    uint64_t v16 = v14;
  }
  else
  {
    uint64_t v15 = 1;
    v12(v7, 1, 1, v2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v16 = v19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v16, v15, 1, AssociatedTypeWitness);
}

uint64_t sub_21E3DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_26C950();
  if (*(void *)(v4 + 16) && (unint64_t v7 = sub_9E10(v5, v6), (v8 & 1) != 0))
  {
    sub_C224(*(void *)(v4 + 56) + 40 * v7, (uint64_t)&v12);
    swift_bridgeObjectRelease();
    if (*((void *)&v13 + 1))
    {
      uint64_t v9 = sub_AD44(&v12, (uint64_t)v15);
      __chkstk_darwin(v9);
      swift_getAssociatedTypeWitness();
      sub_26CBD0();
      sub_26CC90();
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v15);
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_B6DC((uint64_t)&v12, &qword_2E9FE0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a2, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_21E5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_21F430(v4 + 8, (uint64_t)&v14);
  if (v15)
  {
    sub_AD44(&v14, (uint64_t)v16);
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    sub_4ADC(v16, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, a4, v9, v10);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v16);
  }
  else
  {
    sub_B6DC((uint64_t)&v14, &qword_2F2420);
    uint64_t v12 = sub_26CF40();
    sub_21F498();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for IntentDispatcherError.unsupported(_:), v12);
    return swift_willThrow();
  }
}

uint64_t sub_21E710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v66 = a6;
  uint64_t v58 = a2;
  uint64_t v64 = a7;
  uint64_t v62 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = sub_26CBD0();
  uint64_t v52 = sub_26D980();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v56 = (char *)&v51 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v60 = a5;
  uint64_t v59 = a3;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_26CBD0();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v51 - v18;
  uint64_t v19 = sub_26D980();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v51 - v22;
  uint64_t v24 = *(void *)(v14 - 8);
  __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v51 - v25;
  uint64_t v63 = a4;
  sub_26C930();
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v69 = AssociatedTypeWitness;
  swift_getExtendedExistentialTypeMetadata();
  int v27 = swift_dynamicCast();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v27)
  {
    v28(v23, 0, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v23, v14);
    uint64_t v29 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v26, v58, v59);
    if (v29)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v14);
    }
    else
    {
      uint64_t v44 = v54;
      uint64_t v45 = v55;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v65, v55);
      uint64_t v47 = v56;
      uint64_t v46 = v57;
      int v48 = swift_dynamicCast();
      uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      if (v48)
      {
        uint64_t v50 = *(void *)(v46 - 8);
        v49(v47, 0, 1, v46);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v65, v45);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v14);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v64, v47, v46);
      }
      else
      {
        v49(v47, 1, 1, v46);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v52);
        v68[0] = 0;
        v68[1] = 0xE000000000000000;
        sub_26DA90(73);
        v70._object = (void *)0x800000000028C270;
        v70._countAndFlagsBits = 0xD00000000000001BLL;
        sub_26D4E0(v70);
        v71._countAndFlagsBits = sub_26E0F0();
        sub_26D4E0(v71);
        swift_bridgeObjectRelease();
        v72._countAndFlagsBits = 0xD000000000000029;
        v72._object = (void *)0x800000000028C290;
        sub_26D4E0(v72);
        v73._countAndFlagsBits = sub_26E0F0();
        sub_26D4E0(v73);
        swift_bridgeObjectRelease();
        v74._countAndFlagsBits = 96;
        v74._object = (void *)0xE100000000000000;
        sub_26D4E0(v74);
        uint64_t result = sub_26DBA0();
        __break(1u);
      }
    }
  }
  else
  {
    v28(v23, 1, 1, v14);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    if (qword_2E9B00 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_26A340();
    sub_6B14(v31, (uint64_t)qword_2E9EC8);
    uint64_t v33 = v61;
    uint64_t v32 = v62;
    uint64_t v34 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, a1, v63);
    uint64_t v35 = sub_26A320();
    os_log_type_t v36 = sub_26D840();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      LODWORD(v60) = v37;
      uint64_t v39 = v38;
      uint64_t v65 = (char *)swift_slowAlloc();
      v68[0] = (uint64_t)v65;
      *(_DWORD *)uint64_t v39 = 136315394;
      swift_getDynamicType();
      uint64_t v40 = sub_26E0F0();
      uint64_t v69 = sub_1B1A8C(v40, v41, v68);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v42 = sub_26E0F0();
      uint64_t v69 = sub_1B1A8C(v42, v43, v68);
      sub_26D9A0();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v64, 1, 1);
  }
  return result;
}

uint64_t sub_21EFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return SynchronousNativeIntentDispatcher.perform<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

double sub_21EFEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_16B480(v4, (uint64_t)v12);
  sub_21F078(a1, (uint64_t)v12 + 8);
  a4[3] = a2;
  a4[4] = a3;
  uint64_t v9 = (_OWORD *)swift_allocObject();
  *a4 = v9;
  long long v10 = v12[1];
  v9[1] = v12[0];
  v9[2] = v10;
  double result = *(double *)&v13;
  v9[3] = v13;
  return result;
}

uint64_t sub_21F078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F0E0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t dispatch thunk of SynchronousNativeIntentDispatching.perform<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of SynchronousNativeIntentDispatching.withNext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for SynchronousNativeIntentDispatcher(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 8);
  }
  return result;
}

uint64_t initializeWithCopy for SynchronousNativeIntentDispatcher(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for SynchronousNativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 8);
    long long v6 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  if (!v4)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 8);
    goto LABEL_7;
  }
  sub_16D58((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for SynchronousNativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 8);
  }
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SynchronousNativeIntentDispatcher(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SynchronousNativeIntentDispatcher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SynchronousNativeIntentDispatcher()
{
  return &type metadata for SynchronousNativeIntentDispatcher;
}

uint64_t sub_21F430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F2420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F498()
{
  unint64_t result = qword_2F6A28;
  if (!qword_2F6A28)
  {
    sub_26CF40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6A28);
  }
  return result;
}

uint64_t sub_21F4F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  long long v5 = (void *)v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v5[3];
  uint64_t v9 = v5[4];
  sub_4ADC(v5, v8);
  return sub_21E710(v6, v7, v8, v3, v9, *(void *)(v4 + 8), a1);
}

int *sub_21F570()
{
  sub_4A98(&qword_2F6A48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_283C80;
  *(void *)(inited + 32) = 0x79654B736B6F6F62;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = swift_getKeyPath();
  *(void *)(inited + 56) = 0x636142736B6F6F62;
  *(void *)(inited + 64) = 0xEF646E756F72676BLL;
  *(void *)(inited + 72) = swift_getKeyPath();
  *(void *)(inited + 80) = 0xD000000000000018;
  *(void *)(inited + 88) = 0x800000000028C2C0;
  *(void *)(inited + 96) = swift_getKeyPath();
  *(void *)(inited + 104) = 0xD000000000000017;
  *(void *)(inited + 112) = 0x800000000028C2E0;
  *(void *)(inited + 120) = swift_getKeyPath();
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x800000000028C300;
  *(void *)(inited + 144) = swift_getKeyPath();
  *(void *)(inited + 152) = 0xD00000000000001FLL;
  *(void *)(inited + 160) = 0x800000000028C320;
  *(void *)(inited + 168) = swift_getKeyPath();
  *(void *)(inited + 176) = 0xD00000000000001ELL;
  *(void *)(inited + 184) = 0x800000000028C340;
  *(void *)(inited + 192) = swift_getKeyPath();
  *(void *)(inited + 200) = 0x646552736B6F6F62;
  *(void *)(inited + 208) = 0xE800000000000000;
  *(void *)(inited + 216) = swift_getKeyPath();
  *(void *)(inited + 224) = 0x61724F736B6F6F62;
  *(void *)(inited + 232) = 0xEB0000000065676ELL;
  *(void *)(inited + 240) = swift_getKeyPath();
  *(void *)(inited + 248) = 0x657247736B6F6F62;
  *(void *)(inited + 256) = 0xEA00000000006E65;
  *(void *)(inited + 264) = swift_getKeyPath();
  *(void *)(inited + 272) = 0x616554736B6F6F62;
  *(void *)(inited + 280) = 0xE90000000000006CLL;
  *(void *)(inited + 288) = swift_getKeyPath();
  *(void *)(inited + 296) = 0x756C42736B6F6F62;
  *(void *)(inited + 304) = 0xE900000000000065;
  *(void *)(inited + 312) = swift_getKeyPath();
  *(void *)(inited + 320) = 0x727550736B6F6F62;
  *(void *)(inited + 328) = 0xEB00000000656C70;
  *(void *)(inited + 336) = swift_getKeyPath();
  strcpy((char *)(inited + 344), "booksMagenta");
  *(unsigned char *)(inited + 357) = 0;
  *(_WORD *)(inited + 358) = -5120;
  *(void *)(inited + 360) = swift_getKeyPath();
  *(void *)(inited + 368) = 0xD000000000000013;
  *(void *)(inited + 376) = 0x800000000028C3C0;
  *(void *)(inited + 384) = swift_getKeyPath();
  *(void *)(inited + 392) = 0xD000000000000010;
  *(void *)(inited + 400) = 0x800000000028C3E0;
  *(void *)(inited + 408) = swift_getKeyPath();
  strcpy((char *)(inited + 416), "booksSeparator");
  *(unsigned char *)(inited + 431) = -18;
  *(void *)(inited + 432) = swift_getKeyPath();
  *(void *)(inited + 440) = 0xD000000000000013;
  *(void *)(inited + 448) = 0x800000000028C400;
  *(void *)(inited + 456) = swift_getKeyPath();
  *(void *)(inited + 464) = 0xD000000000000015;
  *(void *)(inited + 472) = 0x800000000028C420;
  *(void *)(inited + 480) = swift_getKeyPath();
  *(void *)(inited + 488) = 0xD00000000000001ELL;
  *(void *)(inited + 496) = 0x800000000028C440;
  *(void *)(inited + 504) = swift_getKeyPath();
  *(void *)(inited + 512) = 0x62614C736B6F6F62;
  *(void *)(inited + 520) = 0xEA00000000006C65;
  *(void *)(inited + 528) = swift_getKeyPath();
  *(void *)(inited + 536) = 0xD000000000000013;
  *(void *)(inited + 544) = 0x800000000028C360;
  *(void *)(inited + 552) = swift_getKeyPath();
  *(void *)(inited + 560) = 0xD000000000000012;
  *(void *)(inited + 568) = 0x800000000028C380;
  *(void *)(inited + 576) = swift_getKeyPath();
  *(void *)(inited + 584) = 0xD000000000000014;
  *(void *)(inited + 592) = 0x800000000028C3A0;
  *(void *)(inited + 600) = swift_getKeyPath();
  *(void *)(inited + 608) = 0x696857736B6F6F62;
  *(void *)(inited + 616) = 0xEF6C6562614C6574;
  *(void *)(inited + 624) = swift_getKeyPath();
  strcpy((char *)(inited + 632), "vibrantPrimary");
  *(unsigned char *)(inited + 647) = -18;
  *(void *)(inited + 648) = swift_getKeyPath();
  *(void *)(inited + 656) = 0xD000000000000010;
  *(void *)(inited + 664) = 0x800000000028C460;
  *(void *)(inited + 672) = swift_getKeyPath();
  *(void *)(inited + 680) = 0x54746E6172626976;
  *(void *)(inited + 688) = 0xEF79726169747265;
  *(void *)(inited + 696) = swift_getKeyPath();
  *(void *)(inited + 704) = 0xD000000000000011;
  *(void *)(inited + 712) = 0x800000000028C480;
  *(void *)(inited + 720) = swift_getKeyPath();
  *(void *)(inited + 728) = 0xD000000000000017;
  *(void *)(inited + 736) = 0x800000000028C4A0;
  *(void *)(inited + 744) = swift_getKeyPath();
  *(void *)(inited + 752) = 0xD000000000000019;
  *(void *)(inited + 760) = 0x800000000028C4C0;
  *(void *)(inited + 768) = swift_getKeyPath();
  *(void *)(inited + 776) = 0xD00000000000001BLL;
  *(void *)(inited + 784) = 0x800000000028C4E0;
  *(void *)(inited + 792) = swift_getKeyPath();
  unint64_t result = (int *)sub_9B40(inited);
  off_2F6A30[0] = result;
  return result;
}

uint64_t sub_21FB4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_26A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11A7FC(a1, (uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  sub_61674();
  LOBYTE(a1) = sub_26D360();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v11(v10, v4);
  if (a1) {
    uint64_t result = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  }
  else {
    uint64_t result = sub_26C150();
  }
  *a2 = result;
  return result;
}

uint64_t sub_21FCD8@<X0>(SEL *a1@<X3>, uint64_t *a2@<X8>)
{
  id v3 = [self *a1];
  uint64_t result = sub_26C230();
  *a2 = result;
  return result;
}

uint64_t sub_21FD20@<X0>(SEL *a1@<X3>, uint64_t *a2@<X8>)
{
  id v3 = [self *a1];
  sub_26C230();
  uint64_t v4 = sub_26C1C0();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t ColorConstants.subscript.getter(uint64_t a1, unint64_t a2)
{
  if (qword_2E9D20 != -1) {
    swift_once();
  }
  if (*(void *)((char *)off_2F6A30[0] + (unint64_t)&dword_10))
  {
    swift_bridgeObjectRetain();
    sub_9E10(a1, a2);
    if (v4)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_getAtKeyPath();
      swift_release();
      return v6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();

  return Color.init(hexString:)(a1, a2);
}

int *sub_21FE94()
{
  sub_4A98(&qword_2F6A40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_283C90;
  *(void *)(inited + 32) = 0x79654B736B6F6F62;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v1 = self;
  *(void *)(inited + 48) = [v1 labelColor];
  *(void *)(inited + 56) = 0x636142736B6F6F62;
  *(void *)(inited + 64) = 0xEF646E756F72676BLL;
  *(void *)(inited + 72) = [v1 systemBackgroundColor];
  *(void *)(inited + 80) = 0xD000000000000018;
  *(void *)(inited + 88) = 0x800000000028C2C0;
  *(void *)(inited + 96) = [v1 secondarySystemBackgroundColor];
  *(void *)(inited + 104) = 0xD000000000000017;
  *(void *)(inited + 112) = 0x800000000028C2E0;
  *(void *)(inited + 120) = [v1 tertiarySystemBackgroundColor];
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x800000000028C300;
  *(void *)(inited + 144) = [v1 systemGroupedBackgroundColor];
  *(void *)(inited + 152) = 0xD00000000000001FLL;
  *(void *)(inited + 160) = 0x800000000028C320;
  *(void *)(inited + 168) = [v1 secondarySystemGroupedBackgroundColor];
  *(void *)(inited + 176) = 0xD00000000000001ELL;
  *(void *)(inited + 184) = 0x800000000028C340;
  *(void *)(inited + 192) = [v1 tertiarySystemGroupedBackgroundColor];
  *(void *)(inited + 200) = 0x646552736B6F6F62;
  *(void *)(inited + 208) = 0xE800000000000000;
  *(void *)(inited + 216) = [v1 systemRedColor];
  *(void *)(inited + 224) = 0x61724F736B6F6F62;
  *(void *)(inited + 232) = 0xEB0000000065676ELL;
  *(void *)(inited + 240) = [v1 systemRedColor];
  *(void *)(inited + 248) = 0x657247736B6F6F62;
  *(void *)(inited + 256) = 0xEA00000000006E65;
  *(void *)(inited + 264) = [v1 systemGreenColor];
  *(void *)(inited + 272) = 0x616554736B6F6F62;
  *(void *)(inited + 280) = 0xE90000000000006CLL;
  *(void *)(inited + 288) = [v1 systemTealColor];
  *(void *)(inited + 296) = 0x756C42736B6F6F62;
  *(void *)(inited + 304) = 0xE900000000000065;
  *(void *)(inited + 312) = [v1 systemBlueColor];
  *(void *)(inited + 320) = 0x727550736B6F6F62;
  *(void *)(inited + 328) = 0xEB00000000656C70;
  *(void *)(inited + 336) = [v1 systemPurpleColor];
  strcpy((char *)(inited + 344), "booksMagenta");
  *(unsigned char *)(inited + 357) = 0;
  *(_WORD *)(inited + 358) = -5120;
  *(void *)(inited + 360) = [v1 magentaColor];
  *(void *)(inited + 368) = 0x62614C736B6F6F62;
  *(void *)(inited + 376) = 0xEA00000000006C65;
  *(void *)(inited + 384) = [v1 labelColor];
  *(void *)(inited + 392) = 0xD000000000000013;
  *(void *)(inited + 400) = 0x800000000028C360;
  *(void *)(inited + 408) = [v1 secondaryLabelColor];
  *(void *)(inited + 416) = 0xD000000000000012;
  *(void *)(inited + 424) = 0x800000000028C380;
  *(void *)(inited + 432) = [v1 tertiaryLabelColor];
  *(void *)(inited + 440) = 0xD000000000000014;
  *(void *)(inited + 448) = 0x800000000028C3A0;
  *(void *)(inited + 456) = [v1 quaternaryLabelColor];
  *(void *)(inited + 464) = 0x696857736B6F6F62;
  *(void *)(inited + 472) = 0xEF6C6562614C6574;
  *(void *)(inited + 480) = [v1 systemWhiteColor];
  uint64_t result = (int *)sub_9C5C(inited);
  off_2F6A38 = result;
  return result;
}

UIColor_optional __swiftcall ColorConstants.uiColor(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (qword_2E9D28 != -1) {
    swift_once();
  }
  id v3 = off_2F6A38;
  if (*(void *)((char *)&dword_10 + (void)off_2F6A38))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_9E10(countAndFlagsBits, (uint64_t)object);
    if (v5)
    {
      uint64_t v6 = *(void **)(*(void *)&stru_20.segname[(void)v3 + 16] + 8 * v4);
      id v7 = v6;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  if (Color.init(hexString:)(countAndFlagsBits, (unint64_t)object))
  {
    sub_C7DD8();
    uint64_t v6 = (void *)sub_26D930();
  }
  else
  {
    uint64_t v6 = 0;
  }
LABEL_10:
  uint64_t v9 = (objc_class *)v6;
  result.value.super.Class isa = v9;
  result.is_nil = v8;
  return result;
}

uint64_t sub_220404@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_systemBackgroundColor, a1);
}

uint64_t sub_220424@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_secondarySystemBackgroundColor, a1);
}

uint64_t sub_220444@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_tertiarySystemBackgroundColor, a1);
}

uint64_t sub_220464@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_systemGroupedBackgroundColor, a1);
}

uint64_t sub_220484@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_secondarySystemGroupedBackgroundColor, a1);
}

uint64_t sub_2204A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_tertiarySystemGroupedBackgroundColor, a1);
}

uint64_t sub_2204C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksRed.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2204F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksOrange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22051C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksGreen.getter();
  *a1 = result;
  return result;
}

uint64_t sub_220548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksTeal.getter();
  *a1 = result;
  return result;
}

uint64_t sub_220574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksBlue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2205A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksPurple.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2205CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksMagenta.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2205F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksIconBackground.getter();
  *a1 = result;
  return result;
}

uint64_t sub_220624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksAXSeparator.getter();
  *a1 = result;
  return result;
}

uint64_t sub_220650@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_separatorColor, a1);
}

uint64_t sub_220670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksTableSelection.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22069C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksButtonBackground.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2206C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.booksSecondaryButtonBackground.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2206F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_22071C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_220744@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_tertiaryLabelColor, a1);
}

uint64_t sub_220764@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FCD8((SEL *)&selRef_quaternaryLabelColor, a1);
}

uint64_t sub_220784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_2207AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_2207D4@<X0>(uint64_t *a1@<X8>)
{
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v2 = sub_26C1C0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_220820@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FD20((SEL *)&selRef_tertiaryLabelColor, a1);
}

uint64_t sub_220848@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FD20((SEL *)&selRef_quaternaryLabelColor, a1);
}

uint64_t sub_22086C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorConstants.vibrantButtonBackground.getter();
  *a1 = result;
  return result;
}

uint64_t sub_220898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_2208C0@<X0>(uint64_t *a1@<X8>)
{
  _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
  uint64_t v2 = sub_26C1C0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t ListItemMetadataEyebrow.init(shrinkableText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_221304(a1, a2, (uint64_t (*)(void))type metadata accessor for ShrinkableText);
}

uint64_t ListItemMetadataEyebrow.shrinkableText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_CAE4(v1, a1);
}

uint64_t ListItemMetadataEyebrow.shrinkableText.setter(uint64_t a1)
{
  return sub_220954(a1, v1);
}

uint64_t sub_220954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ListItemMetadataEyebrow.text(localizer:)(uint64_t a1)
{
  uint64_t v3 = sub_26A220();
  __chkstk_darwin(v3);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 16))(&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v1);
  sub_C224(a1, (uint64_t)v8);
  return sub_26BA00();
}

uint64_t ListItemMetadataEyebrow.shorterText(localizer:)(uint64_t a1)
{
  uint64_t v15 = a1;
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  Swift::Bool v8 = &v16[-v7 - 8];
  uint64_t v9 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = type metadata accessor for ShrinkableText();
  sub_C128(v1 + *(int *)(v12 + 20), (uint64_t)v11);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_C224(v15, (uint64_t)v16);
    uint64_t v13 = sub_26BA00();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  return v13;
}

uint64_t ListItemMetadataEyebrow.shortestText(localizer:)(uint64_t a1)
{
  uint64_t v15 = a1;
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  Swift::Bool v8 = &v16[-v7 - 8];
  uint64_t v9 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = type metadata accessor for ShrinkableText();
  sub_C128(v1 + *(int *)(v12 + 24), (uint64_t)v11);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_C224(v15, (uint64_t)v16);
    uint64_t v13 = sub_26BA00();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  return v13;
}

uint64_t sub_220EA4()
{
  return 0x62616B6E69726873;
}

uint64_t sub_220EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x62616B6E69726873 && a2 == 0xEE0074786554656CLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_26DDB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_220F84(uint64_t a1)
{
  unint64_t v2 = sub_2212B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_220FC0(uint64_t a1)
{
  unint64_t v2 = sub_2212B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListItemMetadataEyebrow.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for ShrinkableText();
  __chkstk_darwin(v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2F6A50);
  uint64_t v14 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::Bool v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ListItemMetadataEyebrow();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_2212B0();
  sub_26DFC0();
  if (!v2)
  {
    sub_221494(&qword_2F6A60, (void (*)(uint64_t))type metadata accessor for ShrinkableText);
    sub_26DC90();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_221304(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShrinkableText);
    sub_221304((uint64_t)v11, v13, (uint64_t (*)(void))type metadata accessor for ListItemMetadataEyebrow);
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t type metadata accessor for ListItemMetadataEyebrow()
{
  uint64_t result = qword_2F6AD8;
  if (!qword_2F6AD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_2212B0()
{
  unint64_t result = qword_2F6A58;
  if (!qword_2F6A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6A58);
  }
  return result;
}

uint64_t sub_221304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22136C(uint64_t a1)
{
  uint64_t result = sub_221494(&qword_2F6A68, (void (*)(uint64_t))type metadata accessor for ListItemMetadataEyebrow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2213CC(uint64_t a1)
{
  uint64_t result = sub_221494(&qword_2F6A70, (void (*)(uint64_t))type metadata accessor for ListItemMetadataEyebrow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_221424@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListItemMetadataEyebrow.init(from:)(a1, a2);
}

uint64_t sub_22143C(uint64_t a1)
{
  uint64_t result = sub_221494(&qword_2F6A78, (void (*)(uint64_t))type metadata accessor for ListItemMetadataEyebrow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_221494(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ListItemMetadataEyebrow(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_26A220();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v20((char *)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = *(int *)(v6 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v20(v17, 1, v7))
    {
      uint64_t v18 = sub_4A98(&qword_2EA0C0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v16, (uint64_t *)v17, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ListItemMetadataEyebrow(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(a1, v2);
  uint64_t v4 = type metadata accessor for ShrinkableText();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v6(v5, 1, v2)) {
    v9(v5, v2);
  }
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v2);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v2);
  }
  return result;
}

char *initializeWithCopy for ListItemMetadataEyebrow(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for ShrinkableText();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v18 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  if (v11(&a2[v8], 1, v4))
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = &v18[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v4))
  {
    uint64_t v16 = sub_4A98(&qword_2EA0C0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v6(v14, v15, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  }
  return v18;
}

char *assignWithCopy for ListItemMetadataEyebrow(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v5 + 24);
  v21(a1, a2, v4);
  uint64_t v6 = type metadata accessor for ShrinkableText();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v11 = v10(&a1[v7], 1, v4);
  int v12 = v10(v9, 1, v4);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v9, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_6:
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v21(v8, v9, v4);
LABEL_7:
  uint64_t v14 = *(int *)(v6 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  int v17 = v10(&a1[v14], 1, v4);
  int v18 = v10(v16, 1, v4);
  if (!v17)
  {
    if (!v18)
    {
      v21(v15, v16, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v19 = sub_4A98(&qword_2EA0C0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v15, v16, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  return a1;
}

char *initializeWithTake for ListItemMetadataEyebrow(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for ShrinkableText();
  uint64_t v8 = *(int *)(v7 + 20);
  int v18 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  int v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  if (v11(&a2[v8], 1, v4))
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = &v18[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v4))
  {
    uint64_t v16 = sub_4A98(&qword_2EA0C0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v6(v14, v15, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  }
  return v18;
}

char *assignWithTake for ListItemMetadataEyebrow(char *a1, char *a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v5 + 40);
  v21(a1, a2, v4);
  uint64_t v6 = type metadata accessor for ShrinkableText();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v11 = v10(&a1[v7], 1, v4);
  int v12 = v10(v9, 1, v4);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v9, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_6:
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v21(v8, v9, v4);
LABEL_7:
  uint64_t v14 = *(int *)(v6 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  int v17 = v10(&a1[v14], 1, v4);
  int v18 = v10(v16, 1, v4);
  if (!v17)
  {
    if (!v18)
    {
      v21(v15, v16, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v19 = sub_4A98(&qword_2EA0C0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v15, v16, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemMetadataEyebrow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22220C);
}

uint64_t sub_22220C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ListItemMetadataEyebrow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22228C);
}

uint64_t sub_22228C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShrinkableText();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2222FC()
{
  uint64_t result = type metadata accessor for ShrinkableText();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListItemMetadataEyebrow.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x222424);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItemMetadataEyebrow.CodingKeys()
{
  return &type metadata for ListItemMetadataEyebrow.CodingKeys;
}

unint64_t sub_222460()
{
  unint64_t result = qword_2F6B10;
  if (!qword_2F6B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6B10);
  }
  return result;
}

unint64_t sub_2224B8()
{
  unint64_t result = qword_2F6B18;
  if (!qword_2F6B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6B18);
  }
  return result;
}

unint64_t sub_222510()
{
  unint64_t result = qword_2F6B20[0];
  if (!qword_2F6B20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F6B20);
  }
  return result;
}

uint64_t sub_222564()
{
  return swift_release();
}

uint64_t sub_22256C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_2225BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_222618(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_22266C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2226B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HVStack()
{
  return sub_129B4();
}

uint64_t sub_222718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = sub_26C3C0();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v30 = (char *)&v30 - v9;
  uint64_t v10 = sub_26C440();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = sub_26B300();
  uint64_t v33 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  __chkstk_darwin(v17);
  uint64_t v32 = (char *)&v30 - v18;
  sub_222D94(v2, (uint64_t)v41);
  sub_222D94(v41, (uint64_t)&v42);
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  uint64_t v38 = v2;
  if (v43)
  {
    sub_26C3B0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v20 = v30;
    sub_CCCC(v8, v5, WitnessTable);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v31 + 8);
    v21(v8, v5);
    sub_CCCC(v20, v5, WitnessTable);
    swift_getWitnessTable();
    uint64_t v22 = v32;
    sub_1B98C((uint64_t)v8, v10, v5);
    v21(v8, v5);
    v21(v20, v5);
  }
  else
  {
    sub_26C430();
    uint64_t v23 = swift_getWitnessTable();
    sub_CCCC(v14, v10, v23);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v14, v10);
    sub_CCCC(v16, v10, v23);
    swift_getWitnessTable();
    uint64_t v22 = v32;
    sub_1B894((uint64_t)v14, v10);
    v24(v14, v10);
    v24(v16, v10);
  }
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v39 = v25;
  uint64_t v40 = v26;
  uint64_t v27 = v34;
  uint64_t v28 = swift_getWitnessTable();
  sub_CCCC(v22, v27, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v22, v27);
}

uint64_t sub_222C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(uint64_t))(v9 + 32))(v12);
  sub_CCCC(v8, a2, a3);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  sub_CCCC(v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_222D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22275C(a1, a2);
}

uint64_t sub_222D94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_222DAC()
{
  return sub_222C20(v0[4], v0[2], v0[3]);
}

uint64_t sub_222DD0()
{
  return sub_222C20(v0[4], v0[2], v0[3]);
}

uint64_t sub_222DF4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_222DFC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HVStackKind()
{
  return &type metadata for HVStackKind;
}

uint64_t sub_222E18()
{
  return swift_getWitnessTable();
}

double SizeConstants.scaledValue(_:relativeTo:)(uint64_t a1, double a2, double a3)
{
  uint64_t v34 = a1;
  uint64_t v5 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v32 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B980();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2EB940);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2EB948);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (double *)((char *)&v31 - v21);
  sub_14FB94(v33, (uint64_t)&v31 + *(int *)(v17 + 36) - v21);
  *uint64_t v22 = a2;
  v22[1] = a3;
  sub_B678((uint64_t)v22, (uint64_t)v20, &qword_2EB948);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v34, v8);
  sub_B678((uint64_t)v20, (uint64_t)v15, &qword_2EB948);
  uint64_t v23 = (uint64_t)&v20[*(int *)(v17 + 36)];
  uint64_t v24 = v32;
  sub_14FB94(v23, v32);
  uint64_t v25 = v24 + *(int *)(v6 + 32);
  double v26 = sub_1AB90((uint64_t)v11, v25);
  uint64_t v27 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  double v28 = 1.0;
  if ((*(void *)&v26 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v28 = v26;
  }
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0) {
    double v26 = v28;
  }
  sub_B6DC((uint64_t)v20, &qword_2EB948);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(double *)&v15[*(int *)(v13 + 44)] = v26;
  swift_getKeyPath();
  double v29 = sub_223F7C();
  swift_release();
  sub_B6DC((uint64_t)v15, &qword_2EB940);
  sub_B6DC((uint64_t)v22, &qword_2EB948);
  return v29;
}

uint64_t type metadata accessor for SizeConstants.Environment(uint64_t a1)
{
  return sub_2A148(a1, qword_2F6CA0);
}

uint64_t SizeConstants.Scaled.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(class metadata base offset for KeyPath + *a1 + 8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v12 - v9;
  swift_getAtKeyPath();
  sub_223C70((uint64_t)v10, a2, v7, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t SizeConstants.Scaled.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(class metadata base offset for KeyPath + *a1 + 8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - v8;
  swift_getAtKeyPath();
  uint64_t v10 = *(void *)(v3 + *(int *)(a2 + 36));
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  uint64_t result = type metadata accessor for SizeConstants.Scaled();
  *(void *)(a3 + *(int *)(result + 36)) = v10;
  return result;
}

uint64_t ScalableSizeConstants.scaled(relativeTo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_26B980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  return SizeConstants.Scaled.init(base:relativeTo:)((uint64_t)v16, (uint64_t)v14, a2, a3, a4);
}

uint64_t EnvironmentValues.sizes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)v21 - v13, v2, v8);
  v15(v12, (uint64_t)v14, v8);
  *uint64_t v7 = EnvironmentValues.isCompact.getter() & 1;
  sub_2E42C();
  sub_26B0B0();
  v7[1] = v23;
  sub_26AE90();
  sub_26AE00();
  *(void *)&v7[*(int *)(v5 + 36)] = v16;
  sub_6F68();
  sub_26B0B0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  __int16 v18 = v21[6];
  uint64_t v19 = &v7[*(int *)(v5 + 40)];
  v19[2] = v22;
  *(_WORD *)uint64_t v19 = v18;
  v17(v14, v8);
  return sub_224D94((uint64_t)v7, a1);
}

uint64_t ScalableSizeConstants.scaled.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26B980();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.body(_:), v6);
  ScalableSizeConstants.scaled(relativeTo:)((uint64_t)v9, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SizeConstants.Environment.viewSizeConditions.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SizeConstants.Environment(0);
  int v4 = *(unsigned __int16 *)(v1 + *(int *)(result + 32)) | (*(unsigned __int8 *)(v1 + *(int *)(result + 32) + 2) << 16);
  if (*(_WORD *)(v1 + *(int *)(result + 32)) == 2)
  {
    uint64_t result = sub_26DBA0();
    __break(1u);
  }
  else
  {
    *a1 = *(_WORD *)(v1 + *(int *)(result + 32)) & 1;
    a1[1] = BYTE1(v4) & 1;
    a1[2] = BYTE2(v4) & 1;
  }
  return result;
}

uint64_t SizeConstants.Environment.dynamicTypeSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
  uint64_t v4 = sub_26AB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

double SizeConstants.Environment.pixelLength.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 28));
}

uint64_t SizeConstants.env.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_14FB94(v1, a1);
}

uint64_t SizeConstants.Scaled.init(base:relativeTo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a5, a1, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 32)];
  double v16 = sub_1AB90(a2, v15);
  uint64_t v17 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
  double v18 = 1.0;
  if ((*(void *)&v16 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v18 = v16;
  }
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0) {
    double v16 = v18;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a3);
  uint64_t v19 = sub_26B980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
  uint64_t result = type metadata accessor for SizeConstants.Scaled();
  *(double *)(a5 + *(int *)(result + 36)) = v16;
  return result;
}

uint64_t sub_223C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v31 = a1;
  uint64_t v35 = a5;
  uint64_t v9 = sub_26DD70();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  uint64_t v17 = __chkstk_darwin(v13);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t v36 = *(void *)(v5 + *(int *)(a2 + 36));
  sub_803B4();
  uint64_t v30 = a4;
  sub_26D220();
  sub_26D760();
  char v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v19, a3);
  (*(void (**)(void))(*(void *)(v29 + 24) + 8))(*(void *)(v29 + 16));
  uint64_t v23 = *(void *)&v15[*(int *)(v12 + 36)];
  sub_226E80((uint64_t)v15);
  uint64_t v36 = v23;
  sub_26D220();
  uint64_t v25 = (uint64_t)v32;
  uint64_t v24 = v33;
  uint64_t v26 = v34;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v34);
  sub_1DA070(v25, (uint64_t)v19, a3, v35);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  v22(v19, a3);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, a3);
}

double sub_223F7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26DD70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAtKeyPath();
  double v6 = v23;
  uint64_t v21 = *(int *)(sub_4A98(&qword_2EB940) + 36);
  double v7 = v6 * KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v0 + v21));
  uint64_t v8 = v0 + *(int *)(sub_4A98(&qword_2EB948) + 28);
  uint64_t v20 = v8;
  uint64_t v9 = *(int *)(type metadata accessor for SizeConstants.Environment(0) + 28);
  double v10 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v8 + v9));
  uint64_t v11 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v5, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v2);
  double v22 = v7;
  sub_196FB4((uint64_t)v5, v10);
  double v13 = v22;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  double v23 = v13;
  double v15 = v24;
  double v16 = v15 * KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v1 + v21));
  double v17 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v20 + v9));
  v12(v5, v11, v2);
  double v22 = v16;
  sub_196FB4((uint64_t)v5, v17);
  v14(v5, v2);
  return v13;
}

double SizeConstants.Scaled.subscript.getter(uint64_t a1, uint64_t a2)
{
  swift_getAtKeyPath();
  uint64_t v6 = v7[1];
  unint64_t v3 = sub_803B4();
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  double v4 = *(double *)v7;
  uint64_t v6 = v7[2];
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  return v4;
}

{
  unint64_t v3;
  double v4;
  uint64_t v6;
  void v7[5];

  swift_getAtKeyPath();
  uint64_t v6 = v7[1];
  unint64_t v3 = sub_803B4();
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  double v4 = *(double *)v7;
  uint64_t v6 = v7[3];
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  uint64_t v6 = v7[2];
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  uint64_t v6 = v7[4];
  sub_223C70((uint64_t)&v6, a2, (uint64_t)&type metadata for CGFloat, v3, (uint64_t)v7);
  return v4;
}

double sub_224224()
{
  uint64_t v1 = sub_26DD70();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAtKeyPath();
  double v5 = v38;
  uint64_t v6 = *(int *)(sub_4A98(&qword_2F6BA8) + 36);
  double v7 = v5 * KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v0 + v6));
  uint64_t v8 = v0 + *(int *)(sub_4A98(&qword_2F6BB0) + 28);
  uint64_t v36 = *(int *)(type metadata accessor for SizeConstants.Environment(0) + 28);
  double v9 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v8 + v36));
  uint64_t v10 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  unsigned int v31 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  v35(v4, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v1);
  double v37 = v7;
  sub_196FB4((uint64_t)v4, v9);
  double v11 = v37;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v33 = v2 + 8;
  v32(v4, v1);
  double v38 = v11;
  double v12 = v40;
  double v13 = *(double *)(v0 + v6);
  uint64_t v34 = v0;
  double v14 = v12 * KeyedEncodingContainer.encode<A>(_:forKey:)(v13);
  uint64_t v15 = v36;
  double v16 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v8 + v36));
  uint64_t v17 = v10;
  uint64_t v18 = v35;
  v35(v4, v17, v1);
  double v37 = v14;
  sub_196FB4((uint64_t)v4, v16);
  double v19 = v37;
  uint64_t v20 = v32;
  v32(v4, v1);
  double v40 = v19;
  double v21 = v39;
  double v22 = v21 * KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v0 + v6));
  double v23 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v8 + v15));
  uint64_t v24 = v31;
  v18(v4, v31, v1);
  double v37 = v22;
  sub_196FB4((uint64_t)v4, v23);
  double v25 = v37;
  v20(v4, v1);
  double v39 = v25;
  double v26 = v41;
  double v27 = v26 * KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v34 + v6));
  double v28 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v8 + v36));
  v18(v4, v24, v1);
  double v37 = v27;
  sub_196FB4((uint64_t)v4, v28);
  v20(v4, v1);
  return v11;
}

uint64_t sub_22461C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for SizeConstants.SingleScalableValueContainer() + 28);

  return sub_224D94(a2, v6);
}

uint64_t sub_2246A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14FB94(v2 + *(int *)(a1 + 28), a2);
}

uint64_t SizeConstants.scaledValue<A>(_:relativeTo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v32[0] = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v35 = sub_26B980();
  uint64_t v6 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SizeConstants.SingleScalableValueContainer();
  uint64_t v10 = type metadata accessor for SizeConstants.Scaled();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  __chkstk_darwin(v10);
  double v13 = (char *)v32 - v12;
  uint64_t v14 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = __chkstk_darwin(v18);
  uint64_t v24 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  double v26 = (char *)v32 - v25;
  (*(void (**)(char *, void, uint64_t))(v27 + 16))(v20, v32[0], a3);
  sub_14FB94(v32[1], (uint64_t)v17);
  sub_22461C((uint64_t)v20, (uint64_t)v17, a3, (uint64_t)v26);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v36, v35);
  SizeConstants.Scaled.init(base:relativeTo:)((uint64_t)v24, (uint64_t)v8, v9, (uint64_t)&off_2E6BE8, (uint64_t)v13);
  uint64_t v28 = v37;
  uint64_t v39 = a3;
  uint64_t v40 = v37;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v30 = v33;
  SizeConstants.Scaled.subscript.getter(KeyPath, v33, v28, v38);
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v9);
}

double SizeConstants.scaledValue(_:relativeTo:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v38 = a1;
  uint64_t v9 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v36 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26B980();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F6BA8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F6BB0);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  double v26 = (double *)((char *)&v35 - v25);
  sub_14FB94(v37, (uint64_t)&v35 + *(int *)(v21 + 36) - v25);
  *double v26 = a2;
  v26[1] = a3;
  v26[2] = a4;
  v26[3] = a5;
  sub_B678((uint64_t)v26, (uint64_t)v24, &qword_2F6BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v38, v12);
  sub_B678((uint64_t)v24, (uint64_t)v19, &qword_2F6BB0);
  uint64_t v27 = (uint64_t)&v24[*(int *)(v21 + 36)];
  uint64_t v28 = v36;
  sub_14FB94(v27, v36);
  uint64_t v29 = v28 + *(int *)(v10 + 32);
  double v30 = sub_1AB90((uint64_t)v15, v29);
  uint64_t v31 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v29, v31);
  double v32 = 1.0;
  if ((*(void *)&v30 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v32 = v30;
  }
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
    double v30 = v32;
  }
  sub_B6DC((uint64_t)v24, &qword_2F6BB0);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(double *)&v19[*(int *)(v17 + 44)] = v30;
  swift_getKeyPath();
  double v33 = sub_224224();
  swift_release();
  sub_B6DC((uint64_t)v19, &qword_2F6BA8);
  sub_B6DC((uint64_t)v26, &qword_2F6BB0);
  return v33;
}

uint64_t sub_224D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SizeConstants.Scaled()
{
  return sub_129B4();
}

uint64_t type metadata accessor for SizeConstants.SingleScalableValueContainer()
{
  return sub_129B4();
}

uint64_t *initializeBufferWithCopyOfBuffer for SizeConstants(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(v4 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
    uint64_t v11 = *(int *)(v6 + 32);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    _OWORD v12[2] = v13[2];
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  }
  return a1;
}

uint64_t destroy for SizeConstants(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
  uint64_t v2 = sub_26AB40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

_WORD *initializeWithCopy for SizeConstants(_WORD *a1, _WORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  uint64_t v9 = v4[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  v10[2] = v11[2];
  *(_WORD *)uint64_t v10 = *(_WORD *)v11;
  return a1;
}

unsigned char *assignWithCopy for SizeConstants(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)&a1[v4[7]] = *(void *)&a2[v4[7]];
  uint64_t v9 = v4[8];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  char v12 = v11[2];
  *(_WORD *)uint64_t v10 = *(_WORD *)v11;
  v10[2] = v12;
  return a1;
}

_WORD *initializeWithTake for SizeConstants(_WORD *a1, _WORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  uint64_t v9 = v4[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  v10[2] = v11[2];
  *(_WORD *)uint64_t v10 = *(_WORD *)v11;
  return a1;
}

unsigned char *assignWithTake for SizeConstants(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (int *)type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  *(void *)&a1[v4[7]] = *(void *)&a2[v4[7]];
  uint64_t v9 = v4[8];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  v10[2] = v11[2];
  *(_WORD *)uint64_t v10 = *(_WORD *)v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for SizeConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2252BC);
}

uint64_t sub_2252BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SizeConstants(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22533C);
}

uint64_t sub_22533C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SizeConstants(uint64_t a1)
{
  return sub_2A148(a1, qword_2F6C10);
}

uint64_t sub_2253CC()
{
  uint64_t result = type metadata accessor for SizeConstants.Environment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SizeConstants.Environment(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    char v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(_WORD *)char v12 = *(_WORD *)v13;
    _OWORD v12[2] = v13[2];
  }
  return v4;
}

uint64_t destroy for SizeConstants.Environment(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_26AB40();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_WORD *initializeWithCopy for SizeConstants.Environment(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v11 = (char *)a1 + v10;
  char v12 = (char *)a2 + v10;
  *(_WORD *)uint64_t v11 = *(_WORD *)v12;
  void v11[2] = v12[2];
  return a1;
}

unsigned char *assignWithCopy for SizeConstants.Environment(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  char v13 = v12[2];
  *(_WORD *)uint64_t v11 = *(_WORD *)v12;
  void v11[2] = v13;
  return a1;
}

_WORD *initializeWithTake for SizeConstants.Environment(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v11 = (char *)a1 + v10;
  char v12 = (char *)a2 + v10;
  *(_WORD *)uint64_t v11 = *(_WORD *)v12;
  void v11[2] = v12[2];
  return a1;
}

unsigned char *assignWithTake for SizeConstants.Environment(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  *(_WORD *)uint64_t v11 = *(_WORD *)v12;
  void v11[2] = v12[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SizeConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2258A8);
}

uint64_t sub_2258A8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_26AB40();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    char v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SizeConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22596C);
}

unsigned char *sub_22596C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_26AB40();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_225A10()
{
  uint64_t result = sub_26AB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_225AC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_225B5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_225C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_225CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_225D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_225DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_225E44(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x225F58);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_225F6C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x226118);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t dispatch thunk of ScalableSizeConstants.env.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_226154()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SizeConstants.Environment(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_226220(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_26AB40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = (v10 | 7) + v7;
  uint64_t v12 = v10 + 2;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  uint64_t v14 = v10 | 7 | *(_DWORD *)(v6 + 80);
  if (v14 != 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & ~(v10 | 7)) + ((v13 + ((v10 + 2) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 11 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~(v10 | 7);
    uint64_t v19 = ~v10;
    uint64_t v28 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v20 = ((unint64_t)a1 + v11) & v18;
    unint64_t v21 = ((unint64_t)a2 + v11) & v18;
    *(unsigned char *)unint64_t v20 = *(unsigned char *)v21;
    *(unsigned char *)(v20 | 1) = *(unsigned char *)(v21 | 1);
    unint64_t v22 = (v12 + v20) & v19;
    unint64_t v23 = (v12 + v21) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v22, v23, v28);
    unint64_t v24 = (v13 + v22) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v13 + v23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v24 = *(void *)v25;
    __int16 v26 = *(_WORD *)(v25 + 8);
    *(unsigned char *)(v24 + 10) = *(unsigned char *)(v25 + 10);
    *(_WORD *)(v24 + 8) = v26;
  }
  return a1;
}

uint64_t sub_226418(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_26AB40();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80)
      + ((v4 + a1 + (*(unsigned __int8 *)(v6 + 80) | 7)) & ~(*(unsigned __int8 *)(v6 + 80) | 7))
      + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_2264CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_26AB40();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  uint64_t v13 = (_WORD *)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (_WORD *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = ((unint64_t)v13 + v11 + 2) & ~v11;
  uint64_t v16 = ((unint64_t)v14 + v11 + 2) & ~v11;
  v9(v15, v16, v7);
  uint64_t v17 = *(void *)(v10 + 48) + 7;
  unint64_t v18 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v16) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v18 = *(void *)v19;
  char v20 = *(unsigned char *)(v19 + 10);
  *(_WORD *)(v18 + 8) = *(_WORD *)(v19 + 8);
  *(unsigned char *)(v18 + 10) = v20;
  return a1;
}

uint64_t sub_2265D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_26AB40();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  uint64_t v13 = (_WORD *)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (_WORD *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = ((unint64_t)v13 + v11 + 2) & ~v11;
  uint64_t v16 = ((unint64_t)v14 + v11 + 2) & ~v11;
  v9(v15, v16, v7);
  uint64_t v17 = *(void *)(v10 + 40) + 7;
  unint64_t v18 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v16) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v18 = *(void *)v19;
  char v20 = *(unsigned char *)(v19 + 10);
  *(_WORD *)(v18 + 8) = *(_WORD *)(v19 + 8);
  *(unsigned char *)(v18 + 10) = v20;
  return a1;
}

uint64_t sub_2266E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_26AB40();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  uint64_t v13 = (_WORD *)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (_WORD *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = ((unint64_t)v13 + v11 + 2) & ~v11;
  uint64_t v16 = ((unint64_t)v14 + v11 + 2) & ~v11;
  v9(v15, v16, v7);
  uint64_t v17 = *(void *)(v10 + 32) + 7;
  unint64_t v18 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v16) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v18 = *(void *)v19;
  char v20 = *(unsigned char *)(v19 + 10);
  *(_WORD *)(v18 + 8) = *(_WORD *)(v19 + 8);
  *(unsigned char *)(v18 + 10) = v20;
  return a1;
}

uint64_t sub_2267F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_26AB40();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  uint64_t v13 = (_WORD *)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (_WORD *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = ((unint64_t)v13 + v11 + 2) & ~v11;
  uint64_t v16 = ((unint64_t)v14 + v11 + 2) & ~v11;
  v9(v15, v16, v7);
  uint64_t v17 = *(void *)(v10 + 24) + 7;
  unint64_t v18 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v16) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v18 = *(void *)v19;
  char v20 = *(unsigned char *)(v19 + 10);
  *(_WORD *)(v18 + 8) = *(_WORD *)(v19 + 8);
  *(unsigned char *)(v18 + 10) = v20;
  return a1;
}

uint64_t sub_2268FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_26AB40();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= v7) {
    unsigned int v13 = v7;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v11 | 7;
  uint64_t v15 = (v11 | 7) + *(void *)(v6 + 64);
  uint64_t v16 = v11 + 2;
  if (a2 > v13)
  {
    unint64_t v17 = (v15 & ~v14) + ((*(void *)(*(void *)(v8 - 8) + 64) + (v16 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 11;
    if ((v17 & 0xFFFFFFFB) != 3)
    {
      if (!*((unsigned char *)a1 + v17)) {
        goto LABEL_19;
      }
      int v19 = 0;
      int v20 = *(_DWORD *)a1;
LABEL_18:
      int v21 = v13 + (v20 | v19);
      return (v21 + 1);
    }
    if ((a2 - v13 + 0xFFFFFF) >> 24 == 255)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!v18) {
        goto LABEL_19;
      }
      goto LABEL_17;
    }
    if ((a2 - v13 + 0xFFFFFF) >> 24)
    {
      int v18 = *((unsigned __int8 *)a1 + v17);
      if (v18)
      {
LABEL_17:
        int v19 = (v18 << 24) - 0x1000000;
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        goto LABEL_18;
      }
    }
  }
LABEL_19:
  if (v7 >= v12)
  {
    unint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    return v25(a1, v7, v5);
  }
  else
  {
    unint64_t v22 = (unsigned __int8 *)(((unint64_t)a1 + v15) & ~v14);
    if (v10 <= 0xFE)
    {
      unsigned int v23 = *v22;
      if (v23 < 2) {
        return 0;
      }
      int v21 = (v23 + 2147483646) & 0x7FFFFFFF;
      return (v21 + 1);
    }
    __int16 v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
    return v26((unint64_t)&v22[v16] & ~v11);
  }
}

void sub_226B58(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v28 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_26AB40() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = (v12 | 7) + *(void *)(v8 + 64);
  size_t v16 = ((*(void *)(v10 + 64) + ((v12 + 2) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 11;
  size_t v17 = v16 + (v15 & ~(v12 | 7));
  if (a3 <= v14)
  {
    if (v14 >= a2) {
      goto LABEL_28;
    }
    int v21 = 0;
    int v20 = 0;
    unsigned int v19 = ~v14 + a2;
    if (v17 == 3)
    {
LABEL_21:
      int v22 = HIBYTE(v19) + 1;
      int v23 = v19 & 0xFFFFFF;
      bzero(a1, v17);
      *(_WORD *)a1 = v23;
      a1[2] = BYTE2(v23);
      if (!v20) {
        return;
      }
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  if (v17 != 3)
  {
    if (v14 >= a2) {
      goto LABEL_27;
    }
    unsigned int v19 = ~v14 + a2;
    int v21 = 1;
LABEL_17:
    bzero(a1, v17);
    *(_DWORD *)a1 = v19;
    LOWORD(v22) = 1;
    int v20 = v21;
    if (!v21) {
      return;
    }
LABEL_22:
    if (v20 == 2) {
      *(_WORD *)&a1[v17] = v22;
    }
    else {
      a1[v17] = v22;
    }
    return;
  }
  unsigned int v18 = a3 - v14 + 0xFFFFFF;
  if (HIBYTE(v18) != 255)
  {
    if (v14 < a2)
    {
      int v20 = (v18 & 0xFF000000) != 0;
      unsigned int v19 = ~v14 + a2;
      goto LABEL_21;
    }
    if (!HIBYTE(v18)) {
      goto LABEL_28;
    }
LABEL_27:
    a1[v17] = 0;
    goto LABEL_28;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    int v20 = 2;
    goto LABEL_21;
  }
  *(_WORD *)&a1[v17] = 0;
LABEL_28:
  if (a2)
  {
    if (v9 >= v13)
    {
      __int16 v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v26(a1, a2, v9, v7);
    }
    else
    {
      unint64_t v24 = (unsigned char *)((unint64_t)&a1[v15] & ~(v12 | 7));
      if (v13 >= a2)
      {
        if (v11 > 0xFE)
        {
          uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v27((unint64_t)&v24[v12 + 2] & ~v12, a2);
        }
        else
        {
          *unint64_t v24 = a2 + 1;
        }
      }
      else
      {
        int v25 = ~v13 + a2;
        bzero(v24, v16);
        if (v16 == 3)
        {
          *(_WORD *)unint64_t v24 = v25;
          v24[2] = BYTE2(v25);
        }
        else
        {
          *(_DWORD *)unint64_t v24 = v25;
        }
      }
    }
  }
}

uint64_t sub_226E80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SizeConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FlowAction.FeedDestination.preferredContentSize.getter()
{
  uint64_t v1 = *v0;
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_9E10(0x6572726566657270, 0xED0000657A695364);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_BEAB0(*(void *)(v1 + 56) + 32 * v2, (uint64_t)v10);
  sub_4A98(&qword_2F4418);
  sub_4A98(&qword_2F6DE8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (!*(void *)(v9 + 16)
    || (unint64_t v4 = sub_9E10(0x6874646977, 0xE500000000000000), (v5 & 1) == 0)
    || !*(void *)(v9 + 16)
    || (uint64_t v6 = *(void *)(*(void *)(v9 + 56) + 8 * v4), sub_9E10(0x746867696568, 0xE600000000000000), (v7 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22700C(char *a1, char *a2)
{
  return sub_10A0E0(*a1, *a2);
}

Swift::Int sub_227018()
{
  return sub_26DF20();
}

uint64_t sub_227094()
{
  sub_26D4B0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2270FC()
{
  return sub_26DF20();
}

uint64_t sub_227174@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._uint64_t countAndFlagsBits = *a1;
  char v3 = (void *)a1[1];
  v4._rawValue = &off_2DC638;
  v8._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_2271D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1684366694;
  if (*v1) {
    uint64_t v2 = 0x736E6F6974706FLL;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_22720C()
{
  if (*v0) {
    return 0x736E6F6974706FLL;
  }
  else {
    return 1684366694;
  }
}

uint64_t sub_227240@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_2DC638;
  v9._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_2272A4(uint64_t a1)
{
  unint64_t v2 = sub_227C54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2272E0(uint64_t a1)
{
  unint64_t v2 = sub_227C54();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_22731C()
{
  return sub_26DF20();
}

uint64_t sub_227364()
{
  return sub_26D4B0();
}

Swift::Int sub_227370()
{
  return sub_26DF20();
}

uint64_t sub_2273B4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2DC688;
  v7._object = v3;
  Swift::Int v5 = sub_26DC00(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_227408(void *a1@<X8>)
{
  *a1 = 12383;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_227418@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_2DC6C0;
  v8._object = a2;
  Swift::Int v6 = sub_26DC00(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_227470(uint64_t a1)
{
  unint64_t v2 = sub_227D00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2274AC(uint64_t a1)
{
  unint64_t v2 = sub_227D00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FlowAction.FeedDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_26C8F0();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v42 - v6;
  uint64_t v7 = sub_4A98(&qword_2F43F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned int v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_4A98(&qword_2F6DF0);
  uint64_t v43 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unsigned int v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F6DF8);
  uint64_t v49 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  size_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ADC(a1, a1[3]);
  sub_227C54();
  unsigned int v18 = v51;
  sub_26DFC0();
  if (v18) {
    goto LABEL_5;
  }
  unsigned int v19 = v50;
  uint64_t v42 = v11;
  uint64_t v51 = a1;
  char v54 = 0;
  if (sub_26DCB0())
  {
    char v52 = 0;
    sub_227D00();
    sub_26DC10();
    uint64_t v50 = (char *)v15;
    sub_227CA8();
    int v20 = v44;
    uint64_t v21 = v48;
    sub_26DC90();
    uint64_t v36 = (uint64_t)v42;
    sub_26C8C0();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v21);
    uint64_t v37 = sub_26CC60();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
    {
      sub_1BCA84(v36);
      uint64_t v31 = v49;
      uint64_t v15 = (uint64_t)v50;
LABEL_16:
      uint64_t v39 = sub_26DAD0();
      swift_allocError();
      uint64_t v41 = v40;
      sub_26DC20();
      sub_26DAC0();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, enum case for DecodingError.dataCorrupted(_:), v39);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
      goto LABEL_17;
    }
    sub_4A98(&qword_2F4418);
    uint64_t v32 = sub_26CC50();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    uint64_t v31 = v49;
    uint64_t v15 = (uint64_t)v50;
    if (!v32) {
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
    unint64_t v24 = v46;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v15);
    *unint64_t v24 = v32;
    uint64_t v26 = (uint64_t)v51;
    return _s7BooksUI13AnyPagedFrameVwxx_0(v26);
  }
  char v53 = 1;
  sub_227CA8();
  int v22 = v19;
  uint64_t v23 = v48;
  sub_26DC90();
  unint64_t v24 = v46;
  uint64_t v25 = v47;
  uint64_t v28 = (uint64_t)v45;
  sub_26C8C0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v23);
  uint64_t v29 = sub_26CC60();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_1BCA84(v28);
    uint64_t v31 = v49;
  }
  else
  {
    sub_4A98(&qword_2F4418);
    uint64_t v32 = sub_26CC50();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    uint64_t v31 = v49;
    if (v32) {
      goto LABEL_15;
    }
  }
  uint64_t v33 = sub_26DAD0();
  swift_allocError();
  uint64_t v35 = v34;
  sub_26DC20();
  sub_26DAC0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, enum case for DecodingError.dataCorrupted(_:), v33);
  swift_willThrow();
LABEL_17:
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v15);
  a1 = v51;
LABEL_5:
  uint64_t v26 = (uint64_t)a1;
  return _s7BooksUI13AnyPagedFrameVwxx_0(v26);
}

uint64_t sub_227C34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FlowAction.FeedDestination.init(from:)(a1, a2);
}

uint64_t static FlowActionDestination<>.feed(options:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

unint64_t sub_227C54()
{
  unint64_t result = qword_2F6E00;
  if (!qword_2F6E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E00);
  }
  return result;
}

unint64_t sub_227CA8()
{
  unint64_t result = qword_2F4410;
  if (!qword_2F4410)
  {
    sub_26C8F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F4410);
  }
  return result;
}

unint64_t sub_227D00()
{
  unint64_t result = qword_2F6E08;
  if (!qword_2F6E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E08);
  }
  return result;
}

unint64_t sub_227D54(uint64_t a1)
{
  unint64_t result = sub_227D7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_227D7C()
{
  unint64_t result = qword_2F6E10;
  if (!qword_2F6E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E10);
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowAction.FeedDestination()
{
  return &type metadata for FlowAction.FeedDestination;
}

unsigned char *_s15FeedDestinationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x227EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15FeedDestinationV10CodingKeysOMa()
{
  return &_s15FeedDestinationV10CodingKeysON;
}

unsigned char *_s15FeedDestinationV16LegacyCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x227F80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15FeedDestinationV16LegacyCodingKeysOMa()
{
  return &_s15FeedDestinationV16LegacyCodingKeysON;
}

unint64_t sub_227FBC()
{
  unint64_t result = qword_2F6E18;
  if (!qword_2F6E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E18);
  }
  return result;
}

unint64_t sub_228014()
{
  unint64_t result = qword_2F6E20;
  if (!qword_2F6E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E20);
  }
  return result;
}

unint64_t sub_22806C()
{
  unint64_t result = qword_2F6E28;
  if (!qword_2F6E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E28);
  }
  return result;
}

unint64_t sub_2280C4()
{
  unint64_t result = qword_2F6E30;
  if (!qword_2F6E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E30);
  }
  return result;
}

unint64_t sub_22811C()
{
  unint64_t result = qword_2F6E38;
  if (!qword_2F6E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E38);
  }
  return result;
}

unint64_t sub_228174()
{
  unint64_t result = qword_2F6E40;
  if (!qword_2F6E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6E40);
  }
  return result;
}

uint64_t ListItemAccessoryDrillInChevron.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  unint64_t v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ListItemAccessoryDrillInChevron() + 20));
  *unint64_t v2 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);

  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for ListItemAccessoryDrillInChevron()
{
  uint64_t result = qword_2F6EE0;
  if (!qword_2F6EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ListItemAccessoryDrillInChevron.content(contextActionMenuView:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v1 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v56 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26B980();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  char v53 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v51 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26B310();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F6E48);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v46 = v13;
  uint64_t v47 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4A98(&qword_2F6E50);
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v50 = v17;
  __chkstk_darwin(v17);
  unsigned int v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_4A98(&qword_2F6E58);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v48 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (void *)sub_26C250();
  sub_26AD30();
  unint64_t v23 = sub_2288F0();
  sub_26BCC0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  sub_26B8B0();
  uint64_t v58 = &type metadata for Image;
  uint64_t v59 = v9;
  uint64_t v60 = &protocol witness table for Image;
  unint64_t v61 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v46;
  sub_26BC40();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v24);
  uint64_t v25 = v51;
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0(v51);
  id v26 = [self tertiaryLabelColor];
  uint64_t v27 = sub_26C230();
  sub_2289FC(v25, type metadata accessor for ColorConstants);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = (uint64_t)v48;
  uint64_t v29 = v49;
  uint64_t v31 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v48, v19, v50);
  uint64_t v32 = (uint64_t *)(v30 + *(int *)(v21 + 44));
  *uint64_t v32 = KeyPath;
  v32[1] = v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v31);
  type metadata accessor for ListItemAccessoryDrillInChevron();
  uint64_t v33 = v52;
  sub_4040C(v52);
  uint64_t v35 = v53;
  uint64_t v34 = v54;
  uint64_t v36 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, enum case for Font.TextStyle.body(_:), v55);
  uint64_t v37 = sub_26B820();
  uint64_t v38 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v56, 1, 1, v37);
  sub_26B8B0();
  uint64_t v39 = (uint64_t)v38;
  uint64_t v40 = sub_26B8E0();
  sub_B6DC(v39, &qword_2EBFC0);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_2289FC(v33, type metadata accessor for FontConstants.ListItem);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = v57;
  sub_228A64(v30, v57);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(sub_4A98(&qword_2F6E60) + 36));
  uint64_t *v43 = v41;
  v43[1] = v40;
  return sub_B6DC(v30, &qword_2F6E58);
}

unint64_t sub_2288F0()
{
  unint64_t result = qword_2EBFA8;
  if (!qword_2EBFA8)
  {
    sub_26B310();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EBFA8);
  }
  return result;
}

uint64_t sub_22894C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26AEB0();
  *a1 = result;
  return result;
}

uint64_t sub_228978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26AEB0();
  *a1 = result;
  return result;
}

uint64_t sub_2289A4()
{
  return sub_26AEC0();
}

uint64_t sub_2289D0()
{
  return sub_26AEC0();
}

uint64_t sub_2289FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F6E58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_228ACC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ListItemAccessoryDrillInChevron(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (_WORD *)((char *)a1 + v9);
    uint64_t v11 = (_WORD *)((char *)a2 + v9);
    sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v10 = *v11;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + *(int *)(v12 + 28)) = *(void *)((char *)v11 + *(int *)(v12 + 28));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ListItemAccessoryDrillInChevron(uint64_t a1, uint64_t a2)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v7 = sub_26AB40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for ListItemAccessoryDrillInChevron(void *a1, void *a2, uint64_t a3)
{
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_WORD *)((char *)a1 + v7);
  uint64_t v9 = (_WORD *)((char *)a2 + v7);
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(void *)((char *)v8 + *(int *)(v10 + 28)) = *(void *)((char *)v9 + *(int *)(v10 + 28));
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ListItemAccessoryDrillInChevron(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_B6DC((uint64_t)a1 + v7, &qword_2EBC88);
    sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(void *)&v8[*(int *)(v10 + 28)] = *(void *)&v9[*(int *)(v10 + 28)];
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ListItemAccessoryDrillInChevron(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_26A6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_WORD *)uint64_t v9 = *(_WORD *)v10;
    uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ListItemAccessoryDrillInChevron(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_B6DC((uint64_t)a1, &qword_2EA968);
    uint64_t v6 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26A6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_B6DC((uint64_t)&a1[v8], &qword_2EBC88);
    uint64_t v11 = sub_4A98(&qword_2EBC88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_WORD *)uint64_t v9 = *(_WORD *)v10;
      uint64_t v12 = type metadata accessor for FontConstants.Environment(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemAccessoryDrillInChevron(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2294BC);
}

uint64_t sub_2294BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2F3B10);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ListItemAccessoryDrillInChevron(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2295D0);
}

uint64_t sub_2295D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2F3B10);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2296DC()
{
  sub_2297DC(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_2297DC(319, (unint64_t *)&qword_2ECC28, (void (*)(uint64_t))type metadata accessor for FontConstants.ListItem);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2297DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_229834()
{
  unint64_t result = qword_2F6F18;
  if (!qword_2F6F18)
  {
    sub_7B0C(&qword_2F6E60);
    sub_2298C0();
    sub_1C9468((unint64_t *)&qword_2EB0C8, &qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6F18);
  }
  return result;
}

unint64_t sub_2298C0()
{
  unint64_t result = qword_2F6F20;
  if (!qword_2F6F20)
  {
    sub_7B0C(&qword_2F6E58);
    sub_7B0C(&qword_2F6E48);
    sub_26B310();
    sub_2288F0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C9468((unint64_t *)&qword_2EBF40, &qword_2EBF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F6F20);
  }
  return result;
}

double SizeConstants.Spacing.m.getter()
{
  return 12.0;
}

double SizeConstants.Spacing.s.getter()
{
  return 8.0;
}

double SizeConstants.Spacing.xxxs.getter()
{
  return 2.0;
}

double SizeConstants.Spacing.xxs.getter()
{
  return 4.0;
}

double SizeConstants.Spacing.xs.getter()
{
  return 6.0;
}

double SizeConstants.Spacing.l.getter()
{
  return 16.0;
}

double SizeConstants.Spacing.xl.getter()
{
  return 20.0;
}

double SizeConstants.Spacing.xxl.getter()
{
  return 24.0;
}

double SizeConstants.Spacing.xxxxl.getter()
{
  return 40.0;
}

double SizeConstants.Gutter.s.getter()
{
  return 10.0;
}

double SizeConstants.Gutter.m.getter()
{
  return 25.0;
}

double SizeConstants.Gutter.l.getter()
{
  return 28.0;
}

uint64_t _s7SpacingVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_229A5C);
}

uint64_t _s7SpacingVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_229A74);
}

uint64_t type metadata accessor for SizeConstants.Spacing(uint64_t a1)
{
  return sub_2A148(a1, qword_2F6F80);
}

uint64_t _s6GutterVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_229AB0);
}

uint64_t _s6GutterVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_229AC8);
}

uint64_t type metadata accessor for SizeConstants.Gutter(uint64_t a1)
{
  return sub_2A148(a1, qword_2F7010);
}

uint64_t _s12CornerRadiusVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_229B00);
}

uint64_t sub_229B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t _s12CornerRadiusVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_229B84);
}

uint64_t sub_229B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SizeConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SizeConstants.CornerRadius(uint64_t a1)
{
  return sub_2A148(a1, qword_2F70A0);
}

id SharedWithYouView.makeUIView(context:)()
{
  return *v0;
}

id SharedWithYouView.updateUIView(_:context:)(void *a1)
{
  return [a1 setHorizontalAlignment:*(void *)(v1 + 8)];
}

uint64_t sub_229C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_229DF4();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_229C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_229DF4();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_229D00()
{
}

void *initializeBufferWithCopyOfBuffer for SharedWithYouView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SharedWithYouView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SharedWithYouView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SharedWithYouView()
{
  return &type metadata for SharedWithYouView;
}

unint64_t sub_229DF4()
{
  unint64_t result = qword_2F70D8;
  if (!qword_2F70D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F70D8);
  }
  return result;
}

uint64_t ToolbarActionButtonMenuItem.init(title:isEnabled:isExplicit:action:subtitle:systemName:assetInfo:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  type metadata accessor for ProfileRestrictions();
  sub_22D0E8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  *(void *)a9 = sub_26AD70();
  *(void *)(a9 + 8) = v17;
  *(void *)(a9 + 16) = swift_getKeyPath();
  *(unsigned char *)(a9 + 56) = 0;
  uint64_t v18 = (int *)type metadata accessor for ToolbarActionButtonMenuItem();
  unsigned int v19 = (uint64_t *)(a9 + v18[6]);
  *unsigned int v19 = swift_getKeyPath();
  sub_4A98(&qword_2EBC98);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a9 + v18[7];
  uint64_t v21 = sub_26A220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a1, v21);
  *(unsigned char *)(a9 + v18[8]) = a2;
  *(unsigned char *)(a9 + v18[9]) = a3;
  sub_AD44(a4, a9 + v18[10]);
  sub_19CC4(a5, a9 + v18[11], &qword_2EA0C0);
  uint64_t v22 = (void *)(a9 + v18[12]);
  *uint64_t v22 = a6;
  v22[1] = a7;
  return sub_19CC4(a8, a9 + v18[13], &qword_2EBAC8);
}

uint64_t type metadata accessor for ToolbarActionButtonMenuItem()
{
  uint64_t result = qword_2F7158;
  if (!qword_2F7158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ToolbarActionButtonMenuItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolbarActionButtonMenuItem() + 28);
  uint64_t v4 = sub_26A220();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ToolbarActionButtonMenuItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionButtonMenuItem() + 32));
}

uint64_t ToolbarActionButtonMenuItem.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ToolbarActionButtonMenuItem() + 36));
}

uint64_t ToolbarActionButtonMenuItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionButtonMenuItem();
  return sub_C224(v1 + *(int *)(v3 + 40), a1);
}

uint64_t ToolbarActionButtonMenuItem.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionButtonMenuItem();
  return sub_B678(v1 + *(int *)(v3 + 44), a1, &qword_2EA0C0);
}

uint64_t ToolbarActionButtonMenuItem.systemName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ToolbarActionButtonMenuItem() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ToolbarActionButtonMenuItem.assetInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionButtonMenuItem();
  return sub_B678(v1 + *(int *)(v3 + 52), a1, &qword_2EBAC8);
}

uint64_t ToolbarActionButtonMenuItem.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ToolbarActionButtonMenuItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_4A98(qword_2EA3E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_4A98(&qword_2F70E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_26A630();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  sub_22D1AC(v1, (uint64_t)&v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_22D144((uint64_t)&v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
  uint64_t v22 = v1;
  sub_4A98(&qword_2F70E8);
  sub_7C18(&qword_2F70F0, &qword_2F70E8);
  sub_26C390();
  char v16 = sub_22B588();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v16 & 1;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 16))(a1, v12, v9);
  unsigned int v19 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2F70F8) + 36));
  *unsigned int v19 = KeyPath;
  v19[1] = (uint64_t)sub_50508;
  v19[2] = v18;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_22A534()
{
  uint64_t v0 = sub_26A2C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_42020((uint64_t)v6);
  if (!v7) {
    return sub_B6DC((uint64_t)v6, &qword_2EBCA8);
  }
  sub_4ADC(v6, v7);
  type metadata accessor for ToolbarActionButtonMenuItem();
  sub_41FE8((uint64_t)v3);
  sub_26A180();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v6);
}

uint64_t sub_22A688()
{
  uint64_t v1 = (int *)type metadata accessor for ToolbarActionButtonMenuItem();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));

  if (*(unsigned char *)(v2 + 56))
  {
    if (*(void *)(v2 + 40)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v2 + 16);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v3 = v2 + v1[6];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + v1[7];
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  _s7BooksUI13AnyPagedFrameVwxx_0(v2 + v1[10]);
  uint64_t v9 = v2 + v1[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v1[13];
  if (*(void *)(v10 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v10);
  }

  return swift_deallocObject();
}

uint64_t sub_22A8C4()
{
  type metadata accessor for ToolbarActionButtonMenuItem();

  return sub_22A534();
}

uint64_t sub_22A924@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v53 = sub_26A160();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EA0C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26A220();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v44 - v10;
  uint64_t v11 = sub_4A98(&qword_2EDF88);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v50 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_4A98(&qword_2F71C0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v44 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v44 - v24;
  uint64_t v55 = a1;
  uint64_t v54 = a1;
  sub_4A98(&qword_2F71C8);
  sub_22D0E8((unint64_t *)&qword_2EC040, (void (*)(uint64_t))&type metadata accessor for LocalizedText);
  sub_22CFC8();
  uint64_t v26 = v48;
  sub_26C2B0();
  uint64_t v27 = v23;
  uint64_t v28 = v49;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v27, v16);
  uint64_t v29 = type metadata accessor for ToolbarActionButtonMenuItem();
  sub_B678(a1 + *(int *)(v29 + 44), (uint64_t)v6, &qword_2EA0C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v28) == 1)
  {
    sub_B6DC((uint64_t)v6, &qword_2EA0C0);
    uint64_t v30 = 1;
    uint64_t v31 = v53;
    uint64_t v32 = v51;
  }
  else
  {
    uint64_t v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v45, v6, v28);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v46, v33, v28);
    uint64_t v34 = v47;
    sub_26A170();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v33, v28);
    uint64_t v35 = v51;
    uint64_t v36 = v34;
    uint64_t v37 = v53;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v15, v36, v53);
    uint64_t v30 = 0;
    uint64_t v31 = v37;
    uint64_t v32 = v35;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v15, v30, 1, v31);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v38(v20, v25, v16);
  uint64_t v39 = v50;
  sub_B678((uint64_t)v15, v50, &qword_2EDF88);
  uint64_t v40 = v52;
  v38(v52, v20, v16);
  uint64_t v41 = sub_4A98(&qword_2F71F0);
  sub_B678(v39, (uint64_t)&v40[*(int *)(v41 + 48)], &qword_2EDF88);
  sub_B6DC((uint64_t)v15, &qword_2EDF88);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v17 + 8);
  v42(v25, v16);
  sub_B6DC(v39, &qword_2EDF88);
  return ((uint64_t (*)(char *, uint64_t))v42)(v20, v16);
}

uint64_t sub_22AE9C@<X0>(char *a1@<X8>)
{
  return sub_22A924(*(void *)(v1 + 16), a1);
}

uint64_t sub_22AEA4(uint64_t a1)
{
  uint64_t v2 = sub_26A220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ToolbarActionButtonMenuItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 28), v2);
  return sub_26A170();
}

uint64_t sub_22AF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_4A98(&qword_2F71C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlatCoverView();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = sub_269DF0();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = sub_4A98(&qword_2F71F8);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for ToolbarActionButtonMenuItem();
  if (*(void *)(a1 + *(int *)(v21 + 48) + 8))
  {
    swift_bridgeObjectRetain();
    *uint64_t v20 = sub_26C250();
    swift_storeEnumTagMultiPayload();
    sub_22D0E8(&qword_2F71E8, (void (*)(uint64_t))type metadata accessor for FlatCoverView);
    uint64_t v22 = v48;
    sub_26B2F0();
    uint64_t v23 = sub_4A98(&qword_2F71E0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  else
  {
    uint64_t v41 = v12;
    uint64_t v42 = v9;
    uint64_t v43 = v18;
    uint64_t v44 = v11;
    uint64_t v45 = v5;
    uint64_t v46 = (int *)v6;
    sub_B678(a1 + *(int *)(v21 + 52), (uint64_t)&v49, &qword_2EBAC8);
    if (v50)
    {
      sub_AD44(&v49, (uint64_t)v51);
      sub_4ADC(v51, v51[3]);
      sub_269F10();
      uint64_t v25 = v47;
      uint64_t v26 = v41;
      (*(void (**)(char *, void, uint64_t))(v47 + 104))(v15, enum case for ContentKind.audiobook(_:), v41);
      char v27 = sub_269DE0();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      v28(v15, v26);
      v28(v17, v26);
      if (v27) {
        double v29 = 26.0;
      }
      else {
        double v29 = 40.0;
      }
      sub_C224((uint64_t)v51, (uint64_t)&v49);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = (uint64_t)v42;
      *uint64_t v42 = KeyPath;
      *(unsigned char *)(v31 + 40) = 0;
      *(void *)(v31 + 48) = swift_getKeyPath();
      *(unsigned char *)(v31 + 56) = 0;
      type metadata accessor for ProfileRestrictions();
      sub_22D0E8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
      *(void *)(v31 + 64) = sub_26AD70();
      *(void *)(v31 + 72) = v32;
      uint64_t v33 = v46;
      uint64_t v34 = (uint64_t *)(v31 + v46[7]);
      *uint64_t v34 = swift_getKeyPath();
      sub_4A98(&qword_2EA968);
      swift_storeEnumTagMultiPayload();
      sub_AD44(&v49, v31 + v33[8]);
      uint64_t v35 = v31 + v33[9];
      *(void *)uint64_t v35 = 0x403A000000000000;
      *(double *)(v35 + 8) = v29;
      *(void *)(v31 + v33[10]) = 0x4004000000000000;
      uint64_t v36 = (uint64_t)v44;
      sub_22D144(v31, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
      sub_22D1AC(v36, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
      swift_storeEnumTagMultiPayload();
      sub_22D0E8(&qword_2F71E8, (void (*)(uint64_t))type metadata accessor for FlatCoverView);
      uint64_t v37 = (uint64_t)v45;
      sub_26B2F0();
      sub_22D214(v36, (uint64_t (*)(void))type metadata accessor for FlatCoverView);
      uint64_t v38 = sub_4A98(&qword_2F71E0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
      sub_19CC4(v37, v48, &qword_2F71C8);
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v51);
    }
    else
    {
      sub_B6DC((uint64_t)&v49, &qword_2EBAC8);
      uint64_t v39 = sub_4A98(&qword_2F71E0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v48, 1, 1, v39);
    }
  }
}

uint64_t sub_22B588()
{
  uint64_t v1 = type metadata accessor for ToolbarActionButtonMenuItem();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (void **)&v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v0 + *(int *)(v2 + 32)) != 1)
  {
    char v8 = 1;
    return v8 & 1;
  }
  int v5 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 36));
  sub_22D1AC(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
  if (v5 != 1)
  {
    char v8 = 0;
    goto LABEL_7;
  }
  uint64_t v6 = *v4;
  if (*v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    sub_26A590();

    swift_release();
    swift_release();
    char v8 = v10[15] ^ 1;
LABEL_7:
    sub_22D214((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ToolbarActionButtonMenuItem);
    return v8 & 1;
  }
  type metadata accessor for ProfileRestrictions();
  sub_22D0E8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t result = sub_26AD60();
  __break(1u);
  return result;
}

uint64_t sub_22B730()
{
  return swift_deallocObject();
}

uint64_t sub_22B740()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ToolbarActionButtonMenuItem(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    char v8 = a2 + 2;
    char v9 = *((unsigned char *)a2 + 56);
    uint64_t v10 = v5;
    if (v9)
    {
      uint64_t v11 = a1 + 16;
      uint64_t v12 = a2[5];
      if (v12)
      {
        uint64_t v13 = a2[6];
        *((void *)a1 + 5) = v12;
        *((void *)a1 + 6) = v13;
        (**((void (***)(_OWORD *, char **))v12 - 1))(v11, v8);
      }
      else
      {
        long long v14 = *((_OWORD *)v8 + 1);
        *uint64_t v11 = *(_OWORD *)v8;
        *((_OWORD *)a1 + 2) = v14;
        *((void *)a1 + 6) = v8[4];
      }
      a1[56] = 1;
    }
    else
    {
      *((void *)a1 + 2) = *v8;
      a1[56] = 0;
      swift_retain();
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char **)((char *)a2 + v15);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_26A2C0();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *(void *)uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = sub_26A220();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v24(v20, v21, v22);
    uint64_t v25 = a3[9];
    a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
    a1[v25] = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[10];
    long long v27 = *(_OWORD *)((char *)a2 + v26 + 24);
    *(_OWORD *)&a1[v26 + 24] = v27;
    (**(void (***)(void))(v27 - 8))();
    uint64_t v28 = a3[11];
    double v29 = &a1[v28];
    uint64_t v30 = (char *)a2 + v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))((char *)a2 + v28, 1, v22))
    {
      uint64_t v31 = sub_4A98(&qword_2EA0C0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v24(v29, (uint64_t)v30, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
    }
    uint64_t v32 = a3[12];
    uint64_t v33 = a3[13];
    uint64_t v34 = &a1[v32];
    uint64_t v35 = (char **)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = &a1[v33];
    uint64_t v38 = (uint64_t)a2 + v33;
    uint64_t v39 = *(void *)(v38 + 24);
    swift_bridgeObjectRetain();
    if (v39)
    {
      uint64_t v40 = *(void *)(v38 + 32);
      *((void *)v37 + 3) = v39;
      *((void *)v37 + 4) = v40;
      (**(void (***)(char *, uint64_t, uint64_t))(v39 - 8))(v37, v38, v39);
    }
    else
    {
      long long v41 = *(_OWORD *)(v38 + 16);
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((void *)v37 + 4) = *(void *)(v38 + 32);
    }
  }
  return a1;
}

uint64_t destroy for ToolbarActionButtonMenuItem(uint64_t a1, int *a2)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(void *)(a1 + 40)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 16);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + a2[6];
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A2C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_26A220();
  uint64_t v8 = *(void *)(v7 - 8);
  char v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + a2[10]);
  uint64_t v10 = a1 + a2[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1 + a2[13];
  if (*(void *)(result + 24))
  {
    return _s7BooksUI13AnyPagedFrameVwxx_0(result);
  }
  return result;
}

uint64_t initializeWithCopy for ToolbarActionButtonMenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2 + 16;
  char v9 = *(unsigned char *)(a2 + 56);
  id v10 = v6;
  if (v9)
  {
    uint64_t v11 = (_OWORD *)(a1 + 16);
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      (**(void (***)(_OWORD *, uint64_t))(v12 - 8))(v11, v8);
    }
    else
    {
      long long v14 = *(_OWORD *)(v8 + 16);
      *uint64_t v11 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 32) = v14;
      *(void *)(a1 + 48) = *(void *)(v8 + 32);
    }
    *(unsigned char *)(a1 + 56) = 1;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v8;
    *(unsigned char *)(a1 + 56) = 0;
    swift_retain();
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_26A2C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_26A220();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 16);
  v24(v20, v21, v22);
  uint64_t v25 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[10];
  long long v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  uint64_t v28 = a3[11];
  double v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v28, 1, v22))
  {
    uint64_t v31 = sub_4A98(&qword_2EA0C0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v24(v29, v30, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
  }
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  uint64_t v39 = *(void *)(v38 + 24);
  swift_bridgeObjectRetain();
  if (v39)
  {
    uint64_t v40 = *(void *)(v38 + 32);
    *(void *)(v37 + 24) = v39;
    *(void *)(v37 + 32) = v40;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8))(v37, v38, v39);
  }
  else
  {
    long long v41 = *(_OWORD *)(v38 + 16);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *(_OWORD *)(v37 + 16) = v41;
    *(void *)(v37 + 32) = *(void *)(v38 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for ToolbarActionButtonMenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    char v9 = (long long *)(a2 + 16);
    sub_B6DC(a1 + 16, &qword_2EBCA0);
    if (*(unsigned char *)(a2 + 56))
    {
      uint64_t v10 = *(void *)(a2 + 40);
      if (v10)
      {
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      }
      else
      {
        long long v11 = *v9;
        long long v12 = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v11;
        *(_OWORD *)(a1 + 32) = v12;
      }
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)v9;
      *(unsigned char *)(a1 + 56) = 0;
      swift_retain();
    }
    uint64_t v13 = a3[6];
    long long v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_B6DC(a1 + v13, &qword_2EBC98);
    sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_26A2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *long long v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_26A220();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24);
  v39(v18, v19, v20);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  sub_16D58((uint64_t *)(a1 + a3[10]), (uint64_t *)(a2 + a3[10]));
  uint64_t v40 = a3;
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  int v26 = v25(a1 + v22, 1, v20);
  int v27 = v25((uint64_t)v24, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v23, v24, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
LABEL_17:
    uint64_t v28 = sub_4A98(&qword_2EA0C0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  v39((uint64_t)v23, (uint64_t)v24, v20);
LABEL_18:
  uint64_t v29 = v40[12];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v40[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (long long *)(a2 + v32);
  uint64_t v35 = *((void *)v34 + 3);
  if (!*(void *)(a1 + v32 + 24))
  {
    if (v35)
    {
      *(void *)(v33 + 24) = v35;
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      (**(void (***)(uint64_t, long long *))(v35 - 8))(v33, v34);
      return a1;
    }
LABEL_24:
    long long v36 = *v34;
    long long v37 = v34[1];
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    *(_OWORD *)uint64_t v33 = v36;
    *(_OWORD *)(v33 + 16) = v37;
    return a1;
  }
  if (!v35)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0(v33);
    goto LABEL_24;
  }
  sub_16D58((uint64_t *)v33, (uint64_t *)v34);
  return a1;
}

_OWORD *initializeWithTake for ToolbarActionButtonMenuItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_4A98(&qword_2EBC98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A2C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  uint64_t v15 = sub_26A220();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v17(v13, v14, v15);
  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  uint64_t v24 = (char *)a1 + v20;
  uint64_t v25 = (char *)a2 + v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))((char *)a2 + v20, 1, v15))
  {
    uint64_t v26 = sub_4A98(&qword_2EA0C0);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v17(v24, v25, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
  }
  uint64_t v27 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  *((void *)v28 + 4) = *((void *)v29 + 4);
  return a1;
}

uint64_t assignWithTake for ToolbarActionButtonMenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    sub_B6DC(a1 + 16, &qword_2EBCA0);
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    uint64_t v8 = a3[6];
    char v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_B6DC(a1 + v8, &qword_2EBC98);
    uint64_t v11 = sub_4A98(&qword_2EBC98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_26A2C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_26A220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40);
  v39(v14, v15, v16);
  uint64_t v18 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v19);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  uint64_t v40 = a3;
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  int v27 = v26(a1 + v23, 1, v16);
  int v28 = v26((uint64_t)v25, 1, v16);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v24, v25, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v24, v16);
LABEL_10:
    uint64_t v29 = sub_4A98(&qword_2EA0C0);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_11;
  }
  v39((uint64_t)v24, (uint64_t)v25, v16);
LABEL_11:
  uint64_t v30 = v40[12];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = v40[13];
  uint64_t v36 = a1 + v35;
  if (*(void *)(a1 + v35 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + v35);
  }
  long long v37 = *(_OWORD *)(a2 + v35 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)(a2 + v35);
  *(_OWORD *)(v36 + 16) = v37;
  *(void *)(v36 + 32) = *(void *)(a2 + v35 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarActionButtonMenuItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22C9C8);
}

uint64_t sub_22C9C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_26A220();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[10] + 24);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[11];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for ToolbarActionButtonMenuItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22CB64);
}

uint64_t sub_22CB64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2F12C0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_5:
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t result = sub_26A220();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[10] + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[11];
    return v15(v17, a2, a2, v16);
  }
  return result;
}

void sub_22CCEC()
{
  sub_22CE84(319, (unint64_t *)&qword_2EDA90, (uint64_t (*)(uint64_t))&type metadata accessor for OpaqueMetricsFieldsContext, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_26A220();
    if (v1 <= 0x3F)
    {
      sub_22CE84(319, (unint64_t *)&qword_2EDE38, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_22CE84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22CEEC()
{
  unint64_t result = qword_2F71B0;
  if (!qword_2F71B0)
  {
    sub_7B0C(&qword_2F70F8);
    sub_7C18(&qword_2F71B8, &qword_2F70E0);
    sub_7C18(&qword_2EC028, &qword_2EC030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F71B0);
  }
  return result;
}

uint64_t sub_22CFB8()
{
  return sub_22AEA4(*(void *)(v0 + 16));
}

uint64_t sub_22CFC0@<X0>(uint64_t a1@<X8>)
{
  return sub_22AF88(*(void *)(v1 + 16), a1);
}

unint64_t sub_22CFC8()
{
  unint64_t result = qword_2F71D0;
  if (!qword_2F71D0)
  {
    sub_7B0C(&qword_2F71C8);
    sub_22D03C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F71D0);
  }
  return result;
}

unint64_t sub_22D03C()
{
  unint64_t result = qword_2F71D8;
  if (!qword_2F71D8)
  {
    sub_7B0C(&qword_2F71E0);
    sub_22D0E8(&qword_2F71E8, (void (*)(uint64_t))type metadata accessor for FlatCoverView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F71D8);
  }
  return result;
}

uint64_t sub_22D0E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D144(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D214(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D274()
{
  return sub_22D410();
}

uint64_t sub_22D290()
{
  return sub_22D670();
}

uint64_t sub_22D29C@<X0>(unsigned char *a1@<X8>)
{
  return sub_22D300(a1);
}

uint64_t sub_22D2B0(uint64_t a1, void **a2)
{
  return sub_22D390(a1, a2);
}

uint64_t sub_22D2C4()
{
  return sub_22D410();
}

uint64_t sub_22D2E0()
{
  return sub_22D670();
}

uint64_t sub_22D2EC@<X0>(unsigned char *a1@<X8>)
{
  return sub_22D300(a1);
}

uint64_t sub_22D300@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_26A590();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22D37C(uint64_t a1, void **a2)
{
  return sub_22D390(a1, a2);
}

uint64_t sub_22D390(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_26A5A0();
}

uint64_t sub_22D3FC()
{
  return sub_22D410();
}

uint64_t sub_22D410()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_26A590();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22D484()
{
  return swift_endAccess();
}

uint64_t sub_22D4E8(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F72D8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  sub_4A98(&qword_2F7208);
  sub_26A580();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_22D664()
{
  return sub_22D670();
}

uint64_t sub_22D670()
{
  return swift_endAccess();
}

id ProfileRestrictions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id ProfileRestrictions.init()()
{
  uint64_t v1 = sub_4A98(&qword_2F7208);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[OBJC_IVAR____TtC7BooksUI19ProfileRestrictions__isExplicitContentAllowed];
  char v20 = 1;
  uint64_t v6 = v0;
  sub_26A560();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v7(v5, v4, v1);
  unint64_t v8 = &v6[OBJC_IVAR____TtC7BooksUI19ProfileRestrictions__isBookStoreAllowed];
  char v20 = 1;
  sub_26A560();
  v7(v8, v4, v1);
  uint64_t v9 = &v6[OBJC_IVAR____TtC7BooksUI19ProfileRestrictions__isAccountModificationAllowed];
  char v20 = 1;
  sub_26A560();
  v7(v9, v4, v1);

  uint64_t v10 = (objc_class *)type metadata accessor for ProfileRestrictions();
  v19.receiver = v6;
  v19.super_class = v10;
  id v11 = [super init];
  uint64_t v12 = self;
  id v13 = v11;
  LOBYTE(v9) = objc_msgSend(objc_msgSend(v12, "sharedInstance"), "isExplicitContentAllowed");
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  char v20 = (char)v9;
  id v14 = v13;
  sub_26A5A0();
  LOBYTE(v9) = objc_msgSend(objc_msgSend(v12, "sharedInstance"), "isBookStoreAllowed");
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  char v20 = (char)v9;
  id v15 = v14;
  sub_26A5A0();
  LOBYTE(v9) = objc_msgSend(objc_msgSend(v12, "sharedInstance"), "isAccountModificationAllowed");
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  char v20 = (char)v9;
  id v16 = v15;
  sub_26A5A0();
  objc_msgSend(objc_msgSend(v12, "sharedInstance"), "addObserver:", v16);
  swift_unknownObjectRelease();

  return v16;
}

uint64_t type metadata accessor for ProfileRestrictions()
{
  uint64_t result = qword_2F72B0;
  if (!qword_2F72B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ProfileRestrictions.__deallocating_deinit()
{
  objc_msgSend(objc_msgSend(self, "sharedInstance"), "removeObserver:", v0);
  swift_unknownObjectRelease();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProfileRestrictions();
  return [super dealloc];
}

uint64_t sub_22DC90()
{
  return sub_22DCF4();
}

uint64_t sub_22DCB8()
{
  return sub_22DCF4();
}

uint64_t sub_22DCE0()
{
  return sub_22DCF4();
}

uint64_t sub_22DCF4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_26A5A0();
}

uint64_t sub_22DD70(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return sub_26A5A0();
}

uint64_t sub_22DDDC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ProfileRestrictions();
  uint64_t result = sub_26A550();
  *a1 = result;
  return result;
}

void View.profileRestrictions(from:)()
{
  type metadata accessor for ProfileRestrictions();
  sub_26CCB0();
  sub_26D150();
  sub_22DEB4();
  sub_26BDF0();
}

unint64_t sub_22DEB4()
{
  unint64_t result = qword_2F7220;
  if (!qword_2F7220)
  {
    type metadata accessor for ProfileRestrictions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7220);
  }
  return result;
}

void *sub_22DF0C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_22DF20()
{
  return sub_22D484();
}

uint64_t sub_22DF40(uint64_t a1)
{
  return sub_22D4E8(a1);
}

uint64_t sub_22DF60()
{
  return sub_22D484();
}

uint64_t sub_22DF80(uint64_t a1)
{
  return sub_22D4E8(a1);
}

uint64_t sub_22DFA0()
{
  return sub_22D484();
}

uint64_t sub_22DFC0(uint64_t a1)
{
  return sub_22D4E8(a1);
}

uint64_t sub_22DFE0()
{
  return type metadata accessor for ProfileRestrictions();
}

void sub_22DFE8()
{
  sub_22E278();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ProfileRestrictions(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ProfileRestrictions);
}

uint64_t dispatch thunk of ProfileRestrictions.isExplicitContentAllowed.getter()
{
  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ProfileRestrictions.$isExplicitContentAllowed.getter()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ProfileRestrictions.isBookStoreAllowed.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ProfileRestrictions.$isBookStoreAllowed.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ProfileRestrictions.isAccountModificationAllowed.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ProfileRestrictions.$isAccountModificationAllowed.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ProfileRestrictions.restrictionsChanged(isExplicitContentAllowed:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ProfileRestrictions.restrictionsChanged(isBookStoreAllowed:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ProfileRestrictions.restrictionsChanged(isAccountModificationAllowed:)()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

void sub_22E278()
{
  if (!qword_2F72C0)
  {
    unint64_t v0 = sub_26A5B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2F72C0);
    }
  }
}

uint64_t sub_22E2D0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22E340()
{
  unint64_t result = qword_2F72D0;
  if (!qword_2F72D0)
  {
    sub_7B0C(&qword_2F72C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F72D0);
  }
  return result;
}

uint64_t LocationFieldProvider.addExpensiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 336) = a1;
  *(void *)(v2 + 344) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_22E3BC, 0, 0);
}

uint64_t sub_22E3BC()
{
  unint64_t v86 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 192);
  uint64_t v2 = (uint64_t *)(v0 + 328);
  char v79 = *(void **)(v0 + 336);
  sub_4ADC(v79, v79[3]);
  sub_4A98(&qword_2E9F90);
  uint64_t v3 = sub_26CEC0();
  uint64_t v4 = (uint64_t)_swiftEmptyArrayStorage;
  if (v3) {
    uint64_t v5 = (void *)v3;
  }
  else {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 328) = v5;
  uint64_t v80 = (uint64_t *)(v0 + 192);
  unint64_t v81 = v0;
  unint64_t v84 = (uint64_t *)(v0 + 328);
  if (!v5[2]) {
    goto LABEL_17;
  }
  if (qword_2E9C88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_4A98(&qword_2F10B0);
  sub_6B14(v6, (uint64_t)qword_2F1090);
  sub_26CF10();
  if (*(unsigned char *)(v0 + 200)) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(v0 + 192);
  if (qword_2E9AF0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_26A340();
  sub_6B14(v8, (uint64_t)qword_2E9E98);
  uint64_t v9 = sub_26A320();
  os_log_type_t v10 = sub_26D860();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218242;
    uint64_t v12 = v80;
    *uint64_t v80 = v7;
    sub_26D9A0();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*v2 + 16))
    {
LABEL_90:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_26D250();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *uint64_t v80 = sub_1B1A8C(v14, v16, v85);
    sub_26D9A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_5F050, v9, v10, "Adding locationPosition override %ld for %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v84;
    uint64_t v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {

    uint64_t v12 = v80;
  }
  v85[3] = (uint64_t)&type metadata for Int;
  v85[0] = v7;
  swift_beginAccess();
  uint64_t v17 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v0 = v81;
  uint64_t v1 = v12;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_231FFC(v17);
    uint64_t v17 = result;
    if (*(void *)(result + 16)) {
      goto LABEL_16;
    }
    goto LABEL_89;
  }
  if (!*(void *)(v17 + 16))
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
LABEL_16:
  sub_88DC((uint64_t)v85, 0xD000000000000010, 0x80000000002881E0);
  *uint64_t v2 = v17;
  swift_endAccess();
LABEL_17:
  if (qword_2E9C80 != -1) {
    goto LABEL_87;
  }
  while (1)
  {
    uint64_t v18 = sub_4A98(&qword_2F10A8);
    sub_6B14(v18, (uint64_t)qword_2F1078);
    sub_4A98(&qword_2F10C0);
    sub_26CF10();
    uint64_t v19 = *(void *)(v0 + 192);
    if (!v19) {
      break;
    }
    int64_t v20 = *(void *)(v19 + 16);
    if (!v20)
    {
      swift_bridgeObjectRelease();
      break;
    }
    if (qword_2E9AF0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_26A340();
    sub_6B14(v21, (uint64_t)qword_2E9E98);
    swift_bridgeObjectRetain_n();
    long long v22 = sub_26A320();
    os_log_type_t v23 = sub_26D860();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_26D620();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      *(void *)(v81 + 192) = sub_1B1A8C(v25, v27, v85);
      uint64_t v2 = v84;
      sub_26D9A0();
      unint64_t v0 = v81;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&def_5F050, v22, v23, "Appending location stack %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v1 = (uint64_t *)(v0 + 16);
    v85[0] = v4;
    sub_2B98C(0, v20, 0);
    uint64_t v28 = v85[0];
    unint64_t v0 = v20 - 1;
    uint64_t v4 = 176 * v20 - 144;
    while (v0 != -1)
    {
      if (v0 >= *(void *)(v19 + 16)) {
        goto LABEL_82;
      }
      long long v29 = *(_OWORD *)(v19 + v4);
      long long v30 = *(_OWORD *)(v19 + v4 + 32);
      *((_OWORD *)v1 + 1) = *(_OWORD *)(v19 + v4 + 16);
      *((_OWORD *)v1 + 2) = v30;
      *(_OWORD *)uint64_t v1 = v29;
      long long v31 = *(_OWORD *)(v19 + v4 + 48);
      long long v32 = *(_OWORD *)(v19 + v4 + 64);
      long long v33 = *(_OWORD *)(v19 + v4 + 96);
      *((_OWORD *)v1 + 5) = *(_OWORD *)(v19 + v4 + 80);
      *((_OWORD *)v1 + 6) = v33;
      *((_OWORD *)v1 + 3) = v31;
      *((_OWORD *)v1 + 4) = v32;
      long long v34 = *(_OWORD *)(v19 + v4 + 112);
      long long v35 = *(_OWORD *)(v19 + v4 + 128);
      long long v36 = *(_OWORD *)(v19 + v4 + 160);
      *((_OWORD *)v1 + 9) = *(_OWORD *)(v19 + v4 + 144);
      *((_OWORD *)v1 + 10) = v36;
      *((_OWORD *)v1 + 7) = v34;
      *((_OWORD *)v1 + 8) = v35;
      sub_A3E88((uint64_t)v1);
      unint64_t v37 = sub_17EA70();
      sub_A3F40((uint64_t)v1);
      v85[0] = v28;
      unint64_t v39 = *(void *)(v28 + 16);
      unint64_t v38 = *(void *)(v28 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_2B98C(v38 > 1, v39 + 1, 1);
        uint64_t v28 = v85[0];
      }
      *(void *)(v28 + 16) = v39 + 1;
      *(void *)(v28 + 8 * v39 + 32) = v37;
      --v0;
      v4 -= 176;
      if (v0 == -1)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v80;
        swift_beginAccess();
        sub_1F7E10(v28);
        swift_endAccess();
        unint64_t v0 = v81;
        goto LABEL_33;
      }
    }
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    swift_once();
  }
LABEL_33:
  swift_beginAccess();
  uint64_t v40 = *v2;
  uint64_t v41 = *(void *)(*v2 + 16);
  if (!v41)
  {
LABEL_74:
    uint64_t v77 = *(void *)(v0 + 336);
    *(void *)(v0 + 216) = sub_4A98(&qword_2F2918);
    *(void *)(v0 + 192) = v40;
    sub_14714(v77, v79[3]);
    swift_bridgeObjectRetain();
    sub_26CEB0();
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v1);
    swift_bridgeObjectRelease();
    uint64_t v78 = *(uint64_t (**)(void))(v0 + 8);
    return v78();
  }
  uint64_t v42 = (_OWORD *)(v0 + 224);
  uint64_t v43 = -v41;
  uint64_t v4 = 4;
  uint64_t v83 = (_OWORD *)(v0 + 224);
  uint64_t v82 = -v41;
  while (1)
  {
    unint64_t v45 = v4 - 4;
    swift_beginAccess();
    if ((unint64_t)(v4 - 4) >= *(void *)(*v2 + 16))
    {
      __break(1u);
      goto LABEL_81;
    }
    uint64_t v46 = *(void *)(*v2 + 8 * v4);
    if (*(void *)(v46 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_9E10(0xD000000000000010, 0x80000000002881E0);
      if (v48)
      {
        sub_BEAB0(*(void *)(v46 + 56) + 32 * v47, (uint64_t)v1);
      }
      else
      {
        *(_OWORD *)uint64_t v1 = 0u;
        *((_OWORD *)v1 + 1) = 0u;
      }
    }
    else
    {
      *(_OWORD *)uint64_t v1 = 0u;
      *((_OWORD *)v1 + 1) = 0u;
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v0 + 216);
    sub_BEA50((uint64_t)v1);
    if (!v49) {
      break;
    }
LABEL_38:
    ++v4;
    if (v43 + v4 == 4)
    {
      uint64_t v40 = *v2;
      goto LABEL_74;
    }
  }
  if (qword_2E9AF0 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_26A340();
  sub_6B14(v50, (uint64_t)qword_2E9E98);
  uint64_t v51 = sub_26A320();
  os_log_type_t v52 = sub_26D860();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    if (v45 >= *(void *)(*v2 + 16)) {
      goto LABEL_85;
    }
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_26D250();
    unint64_t v56 = v55;
    swift_bridgeObjectRelease();
    *(void *)(v53 + 4) = sub_1B1A8C(v54, v56, v85);
    swift_bridgeObjectRelease();
    _os_log_impl(&def_5F050, v51, v52, "Setting default locationPosition 0 for %s", (uint8_t *)v53, 0xCu);
    unint64_t v0 = v81;
    uint64_t v1 = v80;
    uint64_t v42 = v83;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v84;
  }
  else
  {
  }
  *(void *)(v0 + 248) = &type metadata for Int;
  *(void *)(v0 + 224) = 0;
  swift_beginAccess();
  uint64_t v57 = *(char **)(v0 + 328);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 328) = v57;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v57 = sub_231FFC((uint64_t)v57);
    *uint64_t v2 = (uint64_t)v57;
  }
  if (v45 >= *((void *)v57 + 2)) {
    goto LABEL_83;
  }
  if (!*(void *)(v0 + 248))
  {
    sub_BEA50((uint64_t)v42);
    swift_bridgeObjectRetain();
    unint64_t v68 = sub_9E10(0xD000000000000010, 0x80000000002881E0);
    char v70 = v69;
    swift_bridgeObjectRelease();
    if (v70)
    {
      char v71 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = *(void *)&v57[8 * v4];
      v85[0] = v72;
      *(void *)&v57[8 * v4] = 0x8000000000000000;
      if ((v71 & 1) == 0)
      {
        sub_231364(&qword_2EA0A8, (void (*)(unsigned char *, uint64_t))sub_89B4);
        uint64_t v72 = v85[0];
      }
      swift_bridgeObjectRelease();
      sub_89B4((_OWORD *)(*(void *)(v72 + 56) + 32 * v68), v1);
      sub_230B3C(v68, v72);
      *(void *)&v57[8 * v4] = v72;
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_OWORD *)uint64_t v1 = 0u;
      *((_OWORD *)v1 + 1) = 0u;
    }
    sub_BEA50((uint64_t)v1);
    uint64_t v43 = v82;
    goto LABEL_37;
  }
  sub_89B4(v42, v1);
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  v85[0] = *(void *)&v57[8 * v4];
  uint64_t v60 = (void *)v85[0];
  *(void *)&v57[8 * v4] = 0x8000000000000000;
  unint64_t v62 = sub_9E10(0xD000000000000010, 0x80000000002881E0);
  uint64_t v63 = v60[2];
  BOOL v64 = (v61 & 1) == 0;
  uint64_t v65 = v63 + v64;
  if (__OFADD__(v63, v64)) {
    goto LABEL_84;
  }
  uint64_t v2 = v61;
  if (v60[3] >= v65)
  {
    if (v59)
    {
      uint64_t v42 = v83;
      if ((v61 & 1) == 0)
      {
LABEL_67:
        v60[(v62 >> 6) + 8] |= 1 << v62;
        Swift::String v73 = (void *)(v60[6] + 16 * v62);
        *Swift::String v73 = 0xD000000000000010;
        v73[1] = 0x80000000002881E0;
        sub_89B4(v1, (_OWORD *)(v60[7] + 32 * v62));
        uint64_t v74 = v60[2];
        BOOL v75 = __OFADD__(v74, 1);
        uint64_t v76 = v74 + 1;
        if (v75) {
          goto LABEL_86;
        }
        v60[2] = v76;
        goto LABEL_36;
      }
    }
    else
    {
      sub_231364(&qword_2EA0A8, (void (*)(unsigned char *, uint64_t))sub_89B4);
      uint64_t v60 = (void *)v85[0];
      uint64_t v42 = v83;
      if ((v2 & 1) == 0) {
        goto LABEL_67;
      }
    }
LABEL_35:
    uint64_t v44 = (_OWORD *)(v60[7] + 32 * v62);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v44);
    sub_89B4(v1, v44);
LABEL_36:
    *(void *)&v57[8 * v4] = v60;
    swift_bridgeObjectRelease();
    uint64_t v2 = v84;
    uint64_t v43 = v82;
LABEL_37:
    swift_endAccess();
    goto LABEL_38;
  }
  sub_22F63C(v65, v59, &qword_2EA0A8, (void (*)(uint64_t, unsigned char *))sub_89B4);
  uint64_t v60 = (void *)v85[0];
  unint64_t v66 = sub_9E10(0xD000000000000010, 0x80000000002881E0);
  if ((v2 & 1) == (v67 & 1))
  {
    unint64_t v62 = v66;
    uint64_t v42 = v83;
    if ((v2 & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_35;
  }
  return sub_26DE60();
}

uint64_t sub_22F0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_12134;
  v5[42] = a1;
  v5[43] = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_22E3BC, 0, 0);
}

uint64_t sub_22F1A8()
{
  uint64_t v0 = sub_26D100();
  sub_6E18(v0, qword_2F72E0);
  sub_6B14(v0, (uint64_t)qword_2F72E0);
  return sub_26D0F0();
}

uint64_t static MetricsFieldInclusionRequest.location.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_26D100();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F72E0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

double sub_22F2B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_9E10(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_231364(&qword_2EA0A8, (void (*)(unsigned char *, uint64_t))sub_89B4);
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_89B4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_230B3C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_22F3D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_9E88(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_231554();
      uint64_t v9 = v11;
    }
    sub_ACF0(*(void *)(v9 + 48) + 40 * v6);
    sub_AD44((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_230D14(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_22F4D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_9E10(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_231C1C(&qword_2EA010, (void (*)(unsigned char *, uint64_t))sub_AD44);
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_AD44((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_230EE8(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22F5FC(uint64_t a1, char a2)
{
  return sub_22F63C(a1, a2, &qword_2EA0A8, (void (*)(uint64_t, unsigned char *))sub_89B4);
}

uint64_t sub_22F61C(uint64_t a1, char a2)
{
  return sub_22F63C(a1, a2, &qword_2EA068, (void (*)(uint64_t, unsigned char *))sub_89B4);
}

uint64_t sub_22F63C(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  unint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_4A98(a3);
  char v39 = a2;
  uint64_t v9 = sub_26DBC0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    long long v22 = (void *)(v8 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v16);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v16);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v8 + 56) + 32 * v20;
    if (v39)
    {
      a4(v28, v40);
    }
    else
    {
      sub_BEAB0(v28, (uint64_t)v40);
      swift_bridgeObjectRetain();
    }
    sub_26DEF0();
    sub_26D4B0();
    uint64_t result = sub_26DF20();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    void *v18 = v27;
    v18[1] = v26;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v40, *(void *)(v10 + 56) + 32 * v17);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  long long v22 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v6 = v10;
  return result;
}

uint64_t sub_22F96C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4A98(&qword_2EA058);
  uint64_t v6 = sub_26DBC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_21:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v5 + 48) + 40 * v21;
    if (a2)
    {
      long long v27 = *(_OWORD *)v26;
      long long v28 = *(_OWORD *)(v26 + 16);
      uint64_t v41 = *(void *)(v26 + 32);
      long long v39 = v27;
      long long v40 = v28;
      sub_AD44((long long *)(*(void *)(v5 + 56) + 40 * v21), (uint64_t)v38);
    }
    else
    {
      sub_B3D8(v26, (uint64_t)&v39);
      sub_C224(*(void *)(v5 + 56) + 40 * v21, (uint64_t)v38);
    }
    uint64_t result = sub_26DA30(*(void *)(v7 + 40));
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v7 + 48) + v16;
    long long v18 = v39;
    long long v19 = v40;
    *(void *)(v17 + 32) = v41;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    uint64_t result = sub_AD44(v38, *(void *)(v7 + 56) + v16);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22FC8C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = _s8RatioKeyVMa();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_4A98(&qword_2EA050);
  int v42 = a2;
  uint64_t v9 = sub_26DBC0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  long long v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    int64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42) {
      sub_B5CC(v26, (uint64_t)v7);
    }
    else {
      sub_B50C(v26, (uint64_t)v7);
    }
    uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    sub_26DEF0();
    sub_26B980();
    sub_232020(&qword_2EA038, (void (*)(uint64_t))&type metadata accessor for Font.TextStyle);
    sub_26D2F0();
    sub_26AB40();
    sub_232020(&qword_2EA040, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    sub_26D2F0();
    uint64_t result = sub_26DF20();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_B5CC((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2300C8(uint64_t a1, char a2)
{
  return sub_230830(a1, a2, &qword_2E9FC0);
}

uint64_t sub_2300D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4A98(&qword_2E9FB0);
  char v41 = a2;
  uint64_t v6 = sub_26DBC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v39 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_33;
        }
        unint64_t v23 = v39[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v23 = v39[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v41)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v39 = -1 << v37;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v23 = v39[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 72 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      uint64_t v52 = *(void *)(v32 + 24);
      char v50 = *(unsigned char *)(v32 + 33);
      char v51 = *(unsigned char *)(v32 + 32);
      uint64_t v36 = *(void *)(v32 + 40);
      char v48 = *(unsigned char *)(v32 + 49);
      char v49 = *(unsigned char *)(v32 + 48);
      char v46 = *(unsigned char *)(v32 + 51);
      char v47 = *(unsigned char *)(v32 + 50);
      char v45 = *(unsigned char *)(v32 + 52);
      uint64_t v44 = *(void *)(v32 + 56);
      char v42 = *(unsigned char *)(v32 + 65);
      char v43 = *(unsigned char *)(v32 + 64);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_26DEF0();
      sub_26D4B0();
      uint64_t result = sub_26DF20();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 72 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      *(void *)(v19 + 24) = v52;
      *(unsigned char *)(v19 + 32) = v51;
      *(unsigned char *)(v19 + 33) = v50;
      *(void *)(v19 + 40) = v36;
      *(unsigned char *)(v19 + 48) = v49;
      *(unsigned char *)(v19 + 49) = v48;
      *(unsigned char *)(v19 + 50) = v47;
      *(unsigned char *)(v19 + 51) = v46;
      *(unsigned char *)(v19 + 52) = v45;
      *(void *)(v19 + 56) = v44;
      *(unsigned char *)(v19 + 64) = v43;
      *(unsigned char *)(v19 + 65) = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2304AC(uint64_t a1, char a2)
{
  return sub_230830(a1, a2, &qword_2EA020);
}

uint64_t sub_2304B8(uint64_t a1, char a2)
{
  return sub_230504(a1, a2, &qword_2EA010, (void (*)(uint64_t, unsigned char *))sub_AD44);
}

uint64_t sub_2304D8(uint64_t a1, char a2)
{
  return sub_230830(a1, a2, &qword_2EA008);
}

uint64_t sub_2304E4(uint64_t a1, char a2)
{
  return sub_230504(a1, a2, &qword_2F49C8, (void (*)(uint64_t, unsigned char *))sub_AD44);
}

uint64_t sub_230504(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_4A98(a3);
  char v38 = a2;
  uint64_t v9 = sub_26DBC0();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      int64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_C224(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_26DEF0();
      sub_26D4B0();
      uint64_t result = sub_26DF20();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      void *v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_230824(uint64_t a1, char a2)
{
  return sub_230830(a1, a2, &qword_2E9FB8);
}

uint64_t sub_230830(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_4A98(a3);
  char v39 = a2;
  uint64_t v7 = sub_26DBC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v23 = v22 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v12) {
      break;
    }
    uint64_t v25 = (void *)(v6 + 64);
    unint64_t v26 = *(void *)(v38 + 8 * v24);
    ++v15;
    if (!v26)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v15);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v15 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v15);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v27;
      }
    }
LABEL_30:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_31:
    uint64_t v32 = 16 * v23;
    BOOL v33 = (uint64_t *)(*(void *)(v6 + 48) + v32);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    long long v40 = *(_OWORD *)(*(void *)(v6 + 56) + v32);
    if ((v39 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_26DEF0();
    sub_26D4B0();
    uint64_t result = sub_26DF20();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v18 == v29;
        if (v18 == v29) {
          unint64_t v18 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v13 + 8 * v18);
      }
      while (v31 == -1);
      unint64_t v19 = __clz(__rbit64(~v31)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 16 * v19;
    int64_t v21 = (void *)(*(void *)(v8 + 48) + v20);
    *int64_t v21 = v35;
    v21[1] = v34;
    *(_OWORD *)(*(void *)(v8 + 56) + v20) = v40;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  uint64_t v25 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_230B3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26DA20();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_26DEF0();
        swift_bridgeObjectRetain();
        sub_26D4B0();
        Swift::Int v10 = sub_26DF20();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_230D14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26DA20();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_B3D8(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v29);
        Swift::Int v11 = sub_26DA30(*(void *)(a2 + 40));
        uint64_t result = sub_ACF0((uint64_t)v29);
        Swift::Int v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            unint64_t v16 = v15 + 40 * v3;
            unint64_t v17 = (long long *)(v15 + 40 * v6);
            if (v3 != v6 || v16 >= (unint64_t)v17 + 40)
            {
              long long v18 = *v17;
              long long v19 = v17[1];
              *(void *)(v16 + 32) = *((void *)v17 + 4);
              *(_OWORD *)unint64_t v16 = v18;
              *(_OWORD *)(v16 + 16) = v19;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = v20 + 40 * v3;
            BOOL v22 = (long long *)(v20 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              long long v9 = *v22;
              long long v10 = v22[1];
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v9;
              *(_OWORD *)(v21 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_230EE8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26DA20();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_26DEF0();
        swift_bridgeObjectRetain();
        sub_26D4B0();
        Swift::Int v11 = sub_26DF20();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          long long v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    long long v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *long long v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2310D4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_89B4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_231140(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_AD44(a3, a4[7] + 40 * a1);
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_2311C0(unint64_t a1, uint64_t a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a3[6];
  uint64_t v9 = _s8RatioKeyVMa();
  uint64_t result = sub_B5CC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  *(double *)(a3[7] + 8 * a1) = a4;
  uint64_t v11 = a3[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a3[2] = v13;
  }
  return result;
}

uint64_t sub_231264(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_AD44(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_2312D4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  long long v6 = (void *)(a6[6] + 16 * result);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

void *sub_231324()
{
  return sub_231364(&qword_2EA0A8, (void (*)(unsigned char *, uint64_t))sub_89B4);
}

void *sub_231344()
{
  return sub_231364(&qword_2EA068, (void (*)(unsigned char *, uint64_t))sub_89B4);
}

void *sub_231364(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  sub_4A98(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_26DBB0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  BOOL v27 = v4;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    long long v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 32 * v17;
    sub_BEAB0(*(void *)(v5 + 56) + 32 * v17, (uint64_t)v29);
    BOOL v23 = (void *)(*(void *)(v7 + 48) + v18);
    *BOOL v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_231554()
{
  uint64_t v1 = v0;
  sub_4A98(&qword_2EA058);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26DBB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_B3D8(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v24);
    sub_C224(*(void *)(v2 + 56) + v16, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v24[0];
    long long v19 = v24[1];
    *(void *)(v17 + 32) = v25;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    uint64_t result = (void *)sub_AD44(v23, *(void *)(v4 + 56) + v16);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_231730()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s8RatioKeyVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4A98(&qword_2EA050);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_26DBB0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_B50C(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v6 + 56) + v20);
    uint64_t result = (void *)sub_B5CC((uint64_t)v5, *(void *)(v8 + 48) + v19);
    *(void *)(*(void *)(v8 + 56) + v20) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23198C()
{
  return sub_231E1C(&qword_2E9FC0);
}

void *sub_231998()
{
  uint64_t v1 = v0;
  sub_4A98(&qword_2E9FB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26DBB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      int64_t v9 = v38 + 1;
      if (v38 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v39 = *(void *)(v6 + 8 * v9);
      if (!v39) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v39 - 1) & v39;
    unint64_t v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 72 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    char v26 = *(unsigned char *)(v21 + 32);
    char v27 = *(unsigned char *)(v21 + 33);
    uint64_t v28 = *(void *)(v21 + 40);
    char v29 = *(unsigned char *)(v21 + 48);
    char v30 = *(unsigned char *)(v21 + 49);
    char v31 = *(unsigned char *)(v21 + 50);
    char v32 = *(unsigned char *)(v21 + 51);
    char v33 = *(unsigned char *)(v21 + 52);
    uint64_t v34 = *(void *)(v21 + 56);
    char v35 = *(unsigned char *)(v21 + 64);
    LOBYTE(v21) = *(unsigned char *)(v21 + 65);
    uint64_t v36 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v36 = v19;
    v36[1] = v18;
    uint64_t v37 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v37 = v22;
    *(void *)(v37 + 8) = v23;
    *(unsigned char *)(v37 + 16) = v24;
    *(void *)(v37 + 24) = v25;
    *(unsigned char *)(v37 + 32) = v26;
    *(unsigned char *)(v37 + 33) = v27;
    *(void *)(v37 + 40) = v28;
    *(unsigned char *)(v37 + 48) = v29;
    *(unsigned char *)(v37 + 49) = v30;
    *(unsigned char *)(v37 + 50) = v31;
    *(unsigned char *)(v37 + 51) = v32;
    *(unsigned char *)(v37 + 52) = v33;
    *(void *)(v37 + 56) = v34;
    *(unsigned char *)(v37 + 64) = v35;
    *(unsigned char *)(v37 + 65) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v40 = v38 + 2;
  if (v40 >= v13) {
    goto LABEL_26;
  }
  unint64_t v39 = *(void *)(v6 + 8 * v40);
  if (v39)
  {
    int64_t v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v9);
    ++v40;
    if (v39) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_231BC4()
{
  return sub_231E1C(&qword_2EA020);
}

void *sub_231BD0()
{
  return sub_231C1C(&qword_2EA010, (void (*)(unsigned char *, uint64_t))sub_AD44);
}

void *sub_231BF0()
{
  return sub_231E1C(&qword_2EA008);
}

void *sub_231BFC()
{
  return sub_231C1C(&qword_2F49C8, (void (*)(unsigned char *, uint64_t))sub_AD44);
}

void *sub_231C1C(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  sub_4A98(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_26DBB0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  char v27 = v4;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 40 * v17;
    sub_C224(*(void *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    uint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_231E10()
{
  return sub_231E1C(&qword_2E9FB8);
}

void *sub_231E1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_4A98(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_26DBB0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    long long v21 = *(_OWORD *)(*(void *)(v3 + 56) + v17);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(void *)(v5 + 56) + v17) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_231FC0(unint64_t a1)
{
  return sub_E5C6C(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_231FD4(uint64_t a1)
{
  return sub_E5EEC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_231FE8(void *a1)
{
  return sub_E6630(0, a1[2], 0, a1);
}

char *sub_231FFC(uint64_t a1)
{
  return sub_E6758(0, *(void *)(a1 + 16), 0, (char *)a1);
}

ValueMetadata *type metadata accessor for LocationFieldProvider()
{
  return &type metadata for LocationFieldProvider;
}

uint64_t sub_232020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232068(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = sub_269840();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v8 - 8);
  int64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B678(v1, (uint64_t)v10, &qword_2EBC78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

__n128 CoverView.init(model:cacheGeometry:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = swift_getKeyPath();
  *(unsigned char *)(a3 + 56) = 0;
  uint64_t v6 = (int *)type metadata accessor for CoverView();
  uint64_t v7 = (uint64_t *)(a3 + v6[6]);
  *uint64_t v7 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)(a3 + v6[7]);
  *uint64_t v8 = swift_getKeyPath();
  sub_4A98(&qword_2EB918);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t *)(a3 + v6[8]);
  type metadata accessor for ProfileRestrictions();
  sub_23856C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t *v9 = sub_26AD70();
  v9[1] = v10;
  uint64_t v11 = a3 + v6[9];
  sub_26C340();
  *(unsigned char *)uint64_t v11 = v18;
  *(void *)(v11 + 8) = v19;
  uint64_t v12 = a3 + v6[10];
  long long v13 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v12 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v12 + 144) = v13;
  *(void *)(v12 + 160) = *(void *)(a1 + 160);
  long long v14 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v12 + 80) = v14;
  long long v15 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v12 + 112) = v15;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 16) = v16;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v12 + 48) = result;
  *(unsigned char *)(a3 + v6[11]) = a2;
  return result;
}

uint64_t sub_2323F0()
{
  return sub_26B0B0();
}

uint64_t sub_232430(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2EBC78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_B678(a1, (uint64_t)&v9 - v6, &qword_2EBC78);
  sub_B678((uint64_t)v7, (uint64_t)v5, &qword_2EBC78);
  sub_A2218();
  sub_26B0C0();
  return sub_B6DC((uint64_t)v7, &qword_2EBC78);
}

uint64_t sub_23251C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v36 = a2;
  uint64_t v31 = type metadata accessor for AlignmentImageView();
  __chkstk_darwin(v31);
  uint64_t v3 = (uint64_t *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_4A98(&qword_2F7378);
  uint64_t v4 = __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v33 = sub_4A98(&qword_2F7488);
  __chkstk_darwin(v33);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CoverView();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v30 + 64);
  __chkstk_darwin(v11 - 8);
  long long v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_269EB0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for BooksFeatureFlag.coverEffectV2(_:), v14);
  sub_23856C(&qword_2EF7C8, (void (*)(uint64_t))&type metadata accessor for BooksFeatureFlag);
  sub_7C18((unint64_t *)&qword_2EF7D0, &qword_2EF7D8);
  char v18 = sub_26D590();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    sub_238310(v32, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CoverView);
    unint64_t v19 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v20 = swift_allocObject();
    long long v21 = v34;
    *(void *)(v20 + 16) = v34;
    sub_2382A8((uint64_t)v13, v20 + v19, (uint64_t (*)(void))type metadata accessor for CoverView);
    [v21 size];
    *(void *)uint64_t v10 = sub_2380BC;
    *((void *)v10 + 1) = v20;
    *((double *)v10 + 2) = v22 / v23;
    *((_WORD *)v10 + 12) = 0;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F7358);
    sub_235E38();
    sub_235ED8();
    return sub_26B2F0();
  }
  else
  {
    int64_t v25 = v34;
    *uint64_t v3 = v34;
    int64_t v26 = (void *)((char *)v3 + *(int *)(v31 + 20));
    *int64_t v26 = swift_getKeyPath();
    sub_4A98(&qword_2EBC50);
    swift_storeEnumTagMultiPayload();
    sub_238310((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AlignmentImageView);
    char v27 = &v6[*(int *)(v35 + 36)];
    *(void *)char v27 = 0;
    *((void *)v27 + 1) = v25;
    id v28 = v25;
    sub_238380((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for AlignmentImageView);
    sub_19CC4((uint64_t)v6, (uint64_t)v8, &qword_2F7378);
    sub_B678((uint64_t)v8, (uint64_t)v10, &qword_2F7378);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F7358);
    sub_235E38();
    sub_235ED8();
    sub_26B2F0();
    return sub_B6DC((uint64_t)v8, &qword_2F7378);
  }
}

uint64_t sub_232A10@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26AB70();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2F7490);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_4A98(&qword_2F7498);
  __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2F74A0);
  __chkstk_darwin(v35);
  long long v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4A98(&qword_2F74A8);
  __chkstk_darwin(v34);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26A940();
  id v33 = (id)sub_8BB70();
  uint64_t v16 = sub_26C240();
  uint64_t v17 = a1 + *(int *)(type metadata accessor for CoverView() + 40);
  sub_10691C(v17, (uint64_t)v38);
  if (v39)
  {
    int v18 = v39 != 1;
  }
  else
  {
    sub_AD44(v38, (uint64_t)v37);
    uint64_t v30 = v4;
    uint64_t v31 = a2;
    sub_4ADC(v37, v37[3]);
    uint64_t v4 = v30;
    a2 = v31;
    int v18 = sub_269F20();
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v37);
  }
  sub_232E64(v18, v16, (uint64_t)v9);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if (!*(unsigned char *)(v17 + 80)) {
    uint64_t v20 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  long long v21 = v36;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v36, *v20, v4);
  double v22 = (uint64_t *)&v11[*(int *)(v32 + 36)];
  uint64_t v23 = sub_4A98(&qword_2EE0A0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v22 + *(int *)(v23 + 28), v21, v4);
  *double v22 = KeyPath;
  sub_B678((uint64_t)v9, (uint64_t)v11, &qword_2F7490);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
  sub_B6DC((uint64_t)v9, &qword_2F7490);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v11, (uint64_t)v13, &qword_2F7498);
  unint64_t v24 = &v13[*(int *)(v35 + 36)];
  long long v25 = v38[1];
  *(_OWORD *)unint64_t v24 = v38[0];
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v38[2];
  sub_B6DC((uint64_t)v11, &qword_2F7498);
  sub_B678((uint64_t)v13, (uint64_t)v15, &qword_2F74A0);
  id v26 = v33;
  char v27 = &v15[*(int *)(v34 + 36)];
  *(void *)char v27 = 0;
  *((void *)v27 + 1) = v26;
  sub_B6DC((uint64_t)v13, &qword_2F74A0);
  return sub_19CC4((uint64_t)v15, a2, &qword_2F74A8);
}

uint64_t sub_232E64@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v94 = a2;
  LODWORD(v93) = a1;
  uint64_t v99 = a3;
  uint64_t v84 = sub_4A98(&qword_2F74B0);
  uint64_t v3 = __chkstk_darwin(v84);
  unint64_t v86 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v87 = (uint64_t)&v71 - v5;
  uint64_t v75 = type metadata accessor for LegacyPDFCoverEffect();
  uint64_t v6 = __chkstk_darwin(v75);
  unint64_t v81 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v71 - v8;
  uint64_t v98 = sub_4A98(&qword_2F74B8);
  uint64_t v9 = __chkstk_darwin(v98);
  uint64_t v82 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v88 = (uint64_t)&v71 - v11;
  uint64_t v77 = sub_4A98(&qword_2F74C0);
  uint64_t v12 = __chkstk_darwin(v77);
  char v79 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v80 = (uint64_t)&v71 - v14;
  uint64_t v73 = type metadata accessor for AudiobookCoverEffect();
  uint64_t v15 = __chkstk_darwin(v73);
  uint64_t v74 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v78 = (uint64_t)&v71 - v17;
  uint64_t v91 = sub_4A98(&qword_2F74C8);
  uint64_t v18 = __chkstk_darwin(v91);
  uint64_t v76 = (uint64_t *)((char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v83 = (uint64_t)&v71 - v20;
  uint64_t v95 = sub_4A98(&qword_2F74D0);
  __chkstk_darwin(v95);
  uint64_t v97 = (uint64_t)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_4A98(&qword_2F74D8);
  __chkstk_darwin(v89);
  uint64_t v90 = (uint64_t)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_4A98(&qword_2F74E0);
  __chkstk_darwin(v96);
  unint64_t v92 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_4A98(&qword_2F74E8);
  uint64_t v24 = __chkstk_darwin(v72);
  id v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v28 = (char *)&v71 - v27;
  uint64_t v29 = sub_26C260();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for BookCoverEffect();
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (_OWORD *)((char *)&v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  int64_t v38 = (char *)&v71 - v37;
  uint64_t v39 = sub_4A98(&qword_2F74F0);
  uint64_t v40 = __chkstk_darwin(v39);
  char v42 = (uint64_t *)((char *)&v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = __chkstk_darwin(v40);
  char v45 = (char *)&v71 - v44;
  if ((_BYTE)v93)
  {
    if (v93 == 1)
    {
      char v46 = (uint64_t *)((char *)v36 + *(int *)(v33 + 24));
      uint64_t v93 = v43;
      uint64_t *v46 = swift_getKeyPath();
      sub_4A98(&qword_2EA970);
      swift_storeEnumTagMultiPayload();
      *uint64_t v36 = xmmword_284F50;
      sub_2382A8((uint64_t)v36, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
      (*(void (**)(char *, void, uint64_t))(v30 + 104))(v32, enum case for Image.ResizingMode.stretch(_:), v29);
      uint64_t v94 = sub_26C280();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      sub_238310((uint64_t)v38, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
      char v47 = (uint64_t *)&v26[*(int *)(v72 + 36)];
      *char v47 = swift_getKeyPath();
      sub_4A98(&qword_2EBCD0);
      swift_storeEnumTagMultiPayload();
      sub_2382A8((uint64_t)v36, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
      sub_19CC4((uint64_t)v26, (uint64_t)v28, &qword_2F74E8);
      sub_B678((uint64_t)v28, (uint64_t)v42 + *(int *)(v93 + 36), &qword_2F74E8);
      *char v42 = v94;
      sub_B6DC((uint64_t)v28, &qword_2F74E8);
      sub_238380((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for BookCoverEffect);
      sub_19CC4((uint64_t)v42, (uint64_t)v45, &qword_2F74F0);
      sub_B678((uint64_t)v45, v90, &qword_2F74F0);
      swift_storeEnumTagMultiPayload();
      sub_23820C(&qword_2F7500, &qword_2F74F0, &qword_2F7508, &qword_2F74E8);
      sub_23820C(&qword_2F7510, &qword_2F74C8, &qword_2F7518, &qword_2F74C0);
      uint64_t v48 = (uint64_t)v92;
      sub_26B2F0();
      sub_B678(v48, v97, &qword_2F74E0);
      swift_storeEnumTagMultiPayload();
      sub_238150();
      sub_23820C(&qword_2F7520, &qword_2F74B8, &qword_2F7528, &qword_2F74B0);
      sub_26B2F0();
      sub_B6DC(v48, &qword_2F74E0);
      uint64_t v49 = (uint64_t)v45;
      char v50 = &qword_2F74F0;
    }
    else
    {
      unint64_t v61 = v81;
      unint64_t v62 = (uint64_t *)&v81[*(int *)(v75 + 20)];
      uint64_t *v62 = swift_getKeyPath();
      sub_4A98(&qword_2EA970);
      swift_storeEnumTagMultiPayload();
      *unint64_t v61 = 0x4000000000000000;
      uint64_t v63 = v85;
      sub_2382A8((uint64_t)v61, v85, (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
      (*(void (**)(char *, void, uint64_t))(v30 + 104))(v32, enum case for Image.ResizingMode.stretch(_:), v29);
      uint64_t v64 = sub_26C280();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      sub_238310(v63, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
      uint64_t v65 = (uint64_t)v86;
      unint64_t v66 = (uint64_t *)&v86[*(int *)(v84 + 36)];
      *unint64_t v66 = swift_getKeyPath();
      sub_4A98(&qword_2EBCD0);
      swift_storeEnumTagMultiPayload();
      sub_2382A8((uint64_t)v61, v65, (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
      uint64_t v67 = v87;
      sub_19CC4(v65, v87, &qword_2F74B0);
      unint64_t v68 = v82;
      sub_B678(v67, (uint64_t)v82 + *(int *)(v98 + 36), &qword_2F74B0);
      *unint64_t v68 = v64;
      sub_B6DC(v67, &qword_2F74B0);
      sub_238380(v63, (uint64_t (*)(void))type metadata accessor for LegacyPDFCoverEffect);
      uint64_t v69 = v88;
      sub_19CC4((uint64_t)v68, v88, &qword_2F74B8);
      sub_B678(v69, v97, &qword_2F74B8);
      swift_storeEnumTagMultiPayload();
      sub_238150();
      sub_23820C(&qword_2F7520, &qword_2F74B8, &qword_2F7528, &qword_2F74B0);
      sub_26B2F0();
      uint64_t v49 = v69;
      char v50 = &qword_2F74B8;
    }
  }
  else
  {
    char v51 = v74;
    uint64_t v52 = (uint64_t *)&v74[*(int *)(v73 + 24)];
    uint64_t *v52 = swift_getKeyPath();
    sub_4A98(&qword_2EA970);
    swift_storeEnumTagMultiPayload();
    _OWORD *v51 = xmmword_284F50;
    uint64_t v53 = v78;
    sub_2382A8((uint64_t)v51, v78, (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v32, enum case for Image.ResizingMode.stretch(_:), v29);
    uint64_t v54 = sub_26C280();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    sub_238310(v53, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
    uint64_t v55 = (uint64_t)v79;
    unint64_t v56 = (uint64_t *)&v79[*(int *)(v77 + 36)];
    uint64_t *v56 = swift_getKeyPath();
    sub_4A98(&qword_2EBCD0);
    swift_storeEnumTagMultiPayload();
    sub_2382A8((uint64_t)v51, v55, (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
    uint64_t v57 = v80;
    sub_19CC4(v55, v80, &qword_2F74C0);
    uint64_t v58 = v76;
    sub_B678(v57, (uint64_t)v76 + *(int *)(v91 + 36), &qword_2F74C0);
    *uint64_t v58 = v54;
    sub_B6DC(v57, &qword_2F74C0);
    sub_238380(v53, (uint64_t (*)(void))type metadata accessor for AudiobookCoverEffect);
    uint64_t v59 = v83;
    sub_19CC4((uint64_t)v58, v83, &qword_2F74C8);
    sub_B678(v59, v90, &qword_2F74C8);
    swift_storeEnumTagMultiPayload();
    sub_23820C(&qword_2F7500, &qword_2F74F0, &qword_2F7508, &qword_2F74E8);
    sub_23820C(&qword_2F7510, &qword_2F74C8, &qword_2F7518, &qword_2F74C0);
    uint64_t v60 = (uint64_t)v92;
    sub_26B2F0();
    sub_B678(v60, v97, &qword_2F74E0);
    swift_storeEnumTagMultiPayload();
    sub_238150();
    sub_23820C(&qword_2F7520, &qword_2F74B8, &qword_2F7528, &qword_2F74B0);
    sub_26B2F0();
    sub_B6DC(v60, &qword_2F74E0);
    uint64_t v49 = v59;
    char v50 = &qword_2F74C8;
  }
  return sub_B6DC(v49, v50);
}

void sub_233C30(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_4A98(&qword_2F7530);
  __chkstk_darwin(v53);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_4A98(&qword_2F7308);
  uint64_t v8 = __chkstk_darwin(v54);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v51 = (uint64_t)&v47 - v11;
  uint64_t v47 = sub_4A98(&qword_2F7538);
  __chkstk_darwin(v47);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_4A98(&qword_2F7540);
  uint64_t v14 = __chkstk_darwin(v52);
  uint64_t v48 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v49 = (uint64_t)&v47 - v16;
  uint64_t v17 = type metadata accessor for CoverView();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238310(v2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CoverView);
  if (a1)
  {
    id v20 = a1;
  }
  else
  {
    uint64_t v50 = a2;
    CoverViewModel.placeholderImageName.getter();
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v22 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v23 = sub_26D3F0();
    swift_bridgeObjectRelease();
    id v20 = [self imageNamed:v23 inBundle:v22];

    if (!v20)
    {
      __break(1u);
      return;
    }
    a2 = v50;
  }
  id v24 = a1;
  sub_238380((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CoverView);
  if (*(unsigned char *)(v3 + *(int *)(v17 + 44)) != 1) {
    goto LABEL_12;
  }
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v25 = [self standardUserDefaults],
        NSString v26 = sub_26D3F0(),
        unsigned __int8 v27 = [v25 integerForKey:v26],
        v25,
        v26,
        (v27 & 0x40) != 0))
  {
LABEL_12:
    sub_23251C(v20, (uint64_t)v10);
    sub_B678((uint64_t)v10, (uint64_t)v7, &qword_2F7308);
    swift_storeEnumTagMultiPayload();
    sub_2383E0();
    sub_237B20(&qword_2F7348, &qword_2F7308, (void (*)(void))sub_235E38, (void (*)(void))sub_235ED8);
    sub_26B2F0();

    uint64_t v30 = (uint64_t)v10;
    uint64_t v31 = &qword_2F7308;
  }
  else
  {
    sub_23251C(v20, v51);
    uint64_t v28 = sub_2343D4();
    uint64_t v50 = a2;
    if (v29)
    {
      *(void *)&long long v58 = v28;
      *((void *)&v58 + 1) = v29;
      sub_26DA50();
    }
    else
    {
      uint64_t v65 = 0;
      memset(v64, 0, sizeof(v64));
    }
    uint64_t v32 = v3 + *(int *)(v17 + 36);
    uint64_t v33 = *(void *)(v32 + 8);
    v62[0] = *(unsigned char *)v32;
    uint64_t v63 = v33;
    id v34 = v20;
    sub_4A98(&qword_2F2C08);
    sub_26C370();
    long long v35 = v58;
    char v36 = v59;
    sub_B678((uint64_t)v64, (uint64_t)v62, &qword_2EA528);
    uint64_t v37 = &v13[*(int *)(v47 + 36)];
    *(void *)uint64_t v37 = swift_getKeyPath();
    v37[40] = 0;
    *((void *)v37 + 6) = swift_getKeyPath();
    v37[56] = 0;
    *((void *)v37 + 8) = swift_getKeyPath();
    v37[72] = 0;
    long long v56 = 0u;
    long long v55 = 0u;
    char v57 = 1;
    swift_retain();
    swift_retain();
    id v38 = v34;
    sub_4A98(&qword_2EA6D0);
    sub_26C340();
    char v39 = v60;
    uint64_t v40 = v61;
    long long v41 = v59;
    *((_OWORD *)v37 + 5) = v58;
    *((_OWORD *)v37 + 6) = v41;
    v37[112] = v39;
    *((void *)v37 + 15) = v40;
    sub_19CC4((uint64_t)v62, (uint64_t)(v37 + 128), &qword_2EA528);
    *((void *)v37 + 21) = v38;
    *((_OWORD *)v37 + 11) = v35;
    v37[192] = v36;
    uint64_t v42 = v51;
    sub_B678(v51, (uint64_t)v13, &qword_2F7308);
    swift_release();
    swift_release();

    sub_B6DC((uint64_t)v64, &qword_2EA528);
    sub_B6DC(v42, &qword_2F7308);
    uint64_t v43 = *(void *)(v32 + 8);
    LOBYTE(v58) = *(unsigned char *)v32;
    *((void *)&v58 + 1) = v43;
    sub_26C350();
    if (LOBYTE(v64[0])) {
      double v44 = 1.0;
    }
    else {
      double v44 = 0.0;
    }
    uint64_t v45 = v48;
    sub_B678((uint64_t)v13, v48, &qword_2F7538);
    *(double *)(v45 + *(int *)(v52 + 36)) = v44;
    sub_B6DC((uint64_t)v13, &qword_2F7538);
    uint64_t v46 = v49;
    sub_19CC4(v45, v49, &qword_2F7540);
    sub_B678(v46, (uint64_t)v7, &qword_2F7540);
    swift_storeEnumTagMultiPayload();
    sub_2383E0();
    sub_237B20(&qword_2F7348, &qword_2F7308, (void (*)(void))sub_235E38, (void (*)(void))sub_235ED8);
    sub_26B2F0();

    uint64_t v30 = v46;
    uint64_t v31 = &qword_2F7540;
  }
  sub_B6DC(v30, v31);
}

uint64_t sub_2343D4()
{
  uint64_t v1 = sub_4A98(&qword_2EBC78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CoverView();
  sub_10691C(v0 + *(int *)(v4 + 40), (uint64_t)&v11);
  if (v13)
  {
    sub_106954((uint64_t)&v11);
    return 0;
  }
  else
  {
    sub_AD44(&v11, (uint64_t)v14);
    uint64_t v6 = sub_41D2C((uint64_t)v3);
    __chkstk_darwin(v6);
    *(&v10 - 2) = (uint64_t)v14;
    uint64_t v5 = sub_232068((void (*)(uint64_t *__return_ptr, char *))sub_23854C);
    uint64_t v8 = v7;
    sub_B6DC((uint64_t)v3, &qword_2EBC78);
    sub_C224((uint64_t)v14, (uint64_t)&v11);
    if (!v8)
    {
      sub_4ADC(&v11, v12);
      uint64_t v5 = sub_269DB0();
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v14);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v11);
  }
  return v5;
}

void CoverView.body.getter()
{
  uint64_t v1 = v0;
  uint64_t v45 = sub_4A98(&qword_2F7308);
  __chkstk_darwin(v45);
  uint64_t v46 = (uint64_t)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2F7310);
  uint64_t v4 = __chkstk_darwin(v3);
  double v44 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)v43 - v6;
  uint64_t v7 = sub_4A98(&qword_2F7318);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26B190();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v51 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CoverView();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v48 + 64);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4A98(&qword_2F7320);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v49 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v50 = (uint64_t)v43 - v18;
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 != 1) {
    goto LABEL_5;
  }
  id v19 = [self standardUserDefaults];
  v43[0] = v12;
  id v20 = v19;
  NSString v21 = sub_26D3F0();
  v43[1] = v13;
  id v22 = v21;
  unsigned __int8 v23 = [v20 integerForKey:v21];

  uint64_t v12 = v43[0];
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v23 & 8) == 0)
  {
LABEL_5:
    sub_10691C(v1 + *(int *)(v12 + 40), (uint64_t)&v55);
    if (v60)
    {
      sub_106954((uint64_t)&v55);
      uint64_t v24 = 0;
    }
    else
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v55);
      uint64_t v24 = sub_234CF4();
    }
    uint64_t v25 = v48;
    sub_238310(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CoverView);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v27 = swift_allocObject();
    sub_2382A8((uint64_t)v14, v27 + v26, (uint64_t (*)(void))type metadata accessor for CoverView);
    type metadata accessor for ImageResourceLoader();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    sub_4A98(&qword_2EC2A8);
    uint64_t v29 = swift_allocObject();
    *(_DWORD *)(v29 + 28) = 0;
    *(void *)(v29 + 16) = 0;
    *(unsigned char *)(v29 + 24) = 0;
    *(void *)(v28 + 24) = v29;
    swift_retain();
    sub_269A40();
    uint64_t v54 = v28;
    sub_26C340();
    swift_release();
    uint64_t v30 = v55;
    uint64_t v31 = v56;
    long long v55 = sub_235C10;
    uint64_t v56 = v27;
    uint64_t v57 = v24;
    long long v58 = v30;
    uint64_t v59 = v31;
    uint64_t v32 = v51;
    sub_26B180();
    sub_4A98(&qword_2F7328);
    sub_7C18(&qword_2F7330, &qword_2F7328);
    uint64_t v33 = (uint64_t)v49;
    sub_26BF40();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v53);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    id v34 = &qword_2F7320;
    uint64_t v35 = v50;
    sub_19CC4(v33, v50, &qword_2F7320);
    sub_B678(v35, (uint64_t)v9, &qword_2F7320);
    goto LABEL_11;
  }
  CoverViewModel.placeholderImageName.getter();
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v37 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v38 = sub_26D3F0();
  swift_bridgeObjectRelease();
  id v39 = [self imageNamed:v38 inBundle:v37];

  if (v39)
  {
    uint64_t v40 = v46;
    sub_23251C(v39, v46);

    long long v41 = v51;
    sub_26B180();
    sub_237B20(&qword_2F7348, &qword_2F7308, (void (*)(void))sub_235E38, (void (*)(void))sub_235ED8);
    uint64_t v42 = (uint64_t)v44;
    sub_26BF40();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
    sub_B6DC(v40, &qword_2F7308);
    id v34 = &qword_2F7310;
    uint64_t v35 = v47;
    sub_19CC4(v42, v47, &qword_2F7310);
    sub_B678(v35, (uint64_t)v9, &qword_2F7310);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    sub_235C84();
    sub_235D54();
    sub_26B2F0();
    sub_B6DC(v35, v34);
    return;
  }
  __break(1u);
}

uint64_t sub_234CF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CoverView();
  sub_10691C(v0 + *(int *)(v2 + 40), (uint64_t)&v20);
  if (v25)
  {
    sub_106954((uint64_t)&v20);
    return 0;
  }
  else
  {
    double v4 = v23;
    double v5 = v24;
    sub_AD44(&v20, (uint64_t)v26);
    sub_4ADC(v26, v26[3]);
    uint64_t v6 = sub_269FA0();
    uint64_t v8 = v7;
    sub_C224((uint64_t)v26, (uint64_t)&v20);
    if (v8)
    {
      uint64_t v9 = v8;
    }
    else
    {
      sub_4ADC(&v20, v21);
      uint64_t v6 = sub_269DB0();
      uint64_t v9 = v10;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v20);
    sub_412A8((uint64_t)&v20);
    uint64_t v11 = v21;
    uint64_t v12 = v22;
    sub_4ADC(&v20, v21);
    v18[0] = v6;
    v18[1] = v9;
    BOOL v19 = v8 != 0;
    uint64_t v13 = *(void *)(v0 + 48);
    char v14 = *(unsigned char *)(v1 + 56);
    sub_10E0C(*(void *)(v1 + 48), v14);
    double v15 = sub_401C0(v13, v14);
    sub_C374(v13, v14);
    sub_235130((uint64_t)v17);
    uint64_t v3 = (*(uint64_t (**)(void *, unsigned char *, uint64_t, uint64_t, double, double, double))(v12 + 16))(v18, v17, v11, v12, v4, v5, v15);
    sub_2D7A4();
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v20);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v26);
  }
  return v3;
}

uint64_t sub_234ECC@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  uint64_t v5 = sub_269DB0();
  uint64_t v6 = v3;
  v7._uint64_t countAndFlagsBits = 45;
  v7._object = (void *)0xE100000000000000;
  sub_26D4E0(v7);
  sub_269840();
  sub_23856C(&qword_2F7568, (void (*)(uint64_t))&type metadata accessor for UUID);
  v8._uint64_t countAndFlagsBits = sub_26DD50();
  sub_26D4E0(v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_234FB4()
{
  uint64_t v1 = type metadata accessor for CoverView();
  sub_10691C(v0 + *(int *)(v1 + 40), (uint64_t)&v7);
  if (v9)
  {
    sub_106954((uint64_t)&v7);
    char v2 = 0;
    return v2 & 1;
  }
  sub_AD44(&v7, (uint64_t)v10);
  uint64_t v3 = *(void **)(v0 + *(int *)(v1 + 32));
  if (v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v3;
    sub_26A590();

    swift_release();
    swift_release();
    char v5 = v7;
    sub_C224((uint64_t)v10, (uint64_t)&v7);
    if (v5)
    {
      char v2 = 0;
    }
    else
    {
      sub_4ADC(&v7, v8);
      char v2 = sub_269F30();
    }
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v10);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v7);
    return v2 & 1;
  }
  type metadata accessor for ProfileRestrictions();
  sub_23856C((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  uint64_t result = sub_26AD60();
  __break(1u);
  return result;
}

uint64_t sub_235130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_26A6E0();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorConstants.Environment(0);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_269EB0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for BooksFeatureFlag.coverEffectV2(_:), v13);
  sub_23856C(&qword_2EF7C8, (void (*)(uint64_t))&type metadata accessor for BooksFeatureFlag);
  sub_7C18((unint64_t *)&qword_2EF7D0, &qword_2EF7D8);
  char v17 = sub_26D590();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    *(_WORD *)a1 = -772;
    *(unsigned char *)(a1 + 2) = -2;
  }
  else
  {
    uint64_t v19 = v2 + *(int *)(type metadata accessor for CoverView() + 40);
    sub_10691C(v19, (uint64_t)v32);
    if (v33)
    {
      uint64_t result = sub_106954((uint64_t)v32);
      *(unsigned char *)(a1 + 2) = -2;
      *(_WORD *)a1 = -772;
    }
    else
    {
      sub_AD44(v32, (uint64_t)v34);
      _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v12);
      sub_238310((uint64_t)v12, (uint64_t)v9, type metadata accessor for ColorConstants.Environment);
      uint64_t v20 = v31;
      (*(void (**)(char *, void, uint64_t))(v31 + 104))(v6, enum case for ColorScheme.dark(_:), v4);
      sub_23856C((unint64_t *)&qword_2EBF18, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      char v21 = sub_26D360();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v20 + 8);
      v22(v6, v4);
      v22(v9, v4);
      sub_238380((uint64_t)v12, type metadata accessor for ColorConstants);
      char v23 = v21 ^ 1;
      sub_4ADC(v34, v34[3]);
      int v24 = sub_269F20();
      if (v24)
      {
        if (v24 == 1)
        {
          int v25 = *(unsigned __int8 *)(v19 + 80);
          char v26 = sub_234FB4();
          if (v21) {
            int v27 = 0;
          }
          else {
            int v27 = 256;
          }
          if (v26) {
            int v28 = 0x10000;
          }
          else {
            int v28 = 0;
          }
          unsigned int v29 = v27 | v25 | v28;
        }
        else
        {
          unsigned int v29 = v23 & 1 | 0xFF800000;
        }
      }
      else
      {
        if (sub_234FB4()) {
          int v30 = 256;
        }
        else {
          int v30 = 0;
        }
        unsigned int v29 = v30 & 0xFFFFFFFE | v23 & 1 | 0x400000;
      }
      *(_WORD *)a1 = v29;
      *(unsigned char *)(a1 + 2) = BYTE2(v29);
      return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v34);
    }
  }
  return result;
}

__n128 sub_2355B4@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v9 = *a1;
  unint64_t v4 = a1[1].n128_u64[0];
  unint64_t v5 = a1[1].n128_u64[1];
  unsigned __int8 v6 = a1[2].n128_u8[0];
  id v7 = *v2;
  sub_4A98(&qword_2F7398);
  sub_26C4B0();
  __n128 result = v9;
  *a2 = v9;
  a2[1].n128_u64[0] = v4;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = (unint64_t)v7;
  a2[2].n128_u8[8] = v6;
  a2[3].n128_u64[0] = v10;
  a2[3].n128_u64[1] = v11;
  a2[4].n128_u8[0] = v12;
  return result;
}

id CoverGeometryReference.image.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t CoverGeometryReference.isVisible.getter()
{
  sub_4A98(&qword_2F7398);
  sub_26C480();
  return v1;
}

uint64_t sub_2356AC@<X0>(unsigned char *a1@<X8>)
{
  sub_4A98(&qword_2F7398);
  uint64_t result = sub_26C480();
  *a1 = v3;
  return result;
}

uint64_t sub_235704()
{
  return sub_26C490();
}

uint64_t CoverGeometryReference.isVisible.setter()
{
  return sub_26C490();
}

void (*CoverGeometryReference.isVisible.modify(void *a1))(uint64_t a1)
{
  char v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 64);
  *((unsigned char *)v3 + 19) = v6;
  *char v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_4A98(&qword_2F7398);
  sub_26C480();
  return sub_235850;
}

void sub_235850(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  *uint64_t v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_26C490();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t CoverGeometryReference.$isVisible.getter()
{
  sub_4A98(&qword_2F7398);
  sub_26C4B0();
  return v1;
}

uint64_t type metadata accessor for CoverView()
{
  uint64_t result = qword_2F73F8;
  if (!qword_2F73F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23596C()
{
  return sub_26B0B0();
}

uint64_t sub_2359B0()
{
  uint64_t v1 = (int *)type metadata accessor for CoverView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  if (*(unsigned char *)(v0 + v2 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
  }
  else {
    swift_release();
  }
  sub_C374(*(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
  uint64_t v4 = v3 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[7];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_269840();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }

  swift_release();
  uint64_t v9 = v3 + v1[10];
  if (!*(unsigned char *)(v9 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v9);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void sub_235C10(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_235C84()
{
  unint64_t result = qword_2F7338;
  if (!qword_2F7338)
  {
    sub_7B0C(&qword_2F7320);
    sub_7C18(&qword_2F7330, &qword_2F7328);
    sub_23856C((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7338);
  }
  return result;
}

unint64_t sub_235D54()
{
  unint64_t result = qword_2F7340;
  if (!qword_2F7340)
  {
    sub_7B0C(&qword_2F7310);
    sub_237B20(&qword_2F7348, &qword_2F7308, (void (*)(void))sub_235E38, (void (*)(void))sub_235ED8);
    sub_23856C((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7340);
  }
  return result;
}

unint64_t sub_235E38()
{
  unint64_t result = qword_2F7350;
  if (!qword_2F7350)
  {
    sub_7B0C(&qword_2F7358);
    sub_7C18(&qword_2F7360, &qword_2F7368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7350);
  }
  return result;
}

unint64_t sub_235ED8()
{
  unint64_t result = qword_2F7370;
  if (!qword_2F7370)
  {
    sub_7B0C(&qword_2F7378);
    sub_23856C(&qword_2F7380, (void (*)(uint64_t))type metadata accessor for AlignmentImageView);
    sub_7C18(&qword_2F7388, &qword_2F7390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7370);
  }
  return result;
}

uint64_t sub_235FA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for CoverView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 40);
    if (v7)
    {
      long long v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    *(unsigned char *)(v4 + 40) = v7;
    uint64_t v10 = a2[6];
    char v11 = *((unsigned char *)a2 + 56);
    sub_10E0C(v10, v11);
    *(void *)(v4 + 48) = v10;
    *(unsigned char *)(v4 + 56) = v11;
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)(v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    char v17 = (void *)(v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_269840();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_4A98(&qword_2EBC78);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else
    {
      *char v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    int v24 = (void *)(v4 + v22);
    uint64_t v25 = (uint64_t)a2 + v22;
    int v27 = *(void **)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    *int v24 = v27;
    v24[1] = v26;
    uint64_t v28 = v4 + v23;
    uint64_t v29 = (uint64_t)a2 + v23;
    *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
    *(void *)(v28 + 8) = *(void *)(v29 + 8);
    uint64_t v30 = a3[10];
    uint64_t v31 = v4 + v30;
    uint64_t v32 = (uint64_t)a2 + v30;
    int v33 = *((unsigned __int8 *)a2 + v30 + 56);
    id v34 = v27;
    swift_retain();
    if (v33)
    {
      long long v35 = *(_OWORD *)(v32 + 16);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *(_OWORD *)(v31 + 16) = v35;
      *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
      *(_OWORD *)(v31 + 41) = *(_OWORD *)(v32 + 41);
    }
    else
    {
      long long v36 = *(_OWORD *)(v32 + 24);
      *(_OWORD *)(v31 + 24) = v36;
      (**(void (***)(uint64_t, uint64_t))(v36 - 8))(v31, v32);
      *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
      *(unsigned char *)(v31 + 56) = 0;
    }
    *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
    *(unsigned char *)(v31 + 80) = *(unsigned char *)(v32 + 80);
    *(_OWORD *)(v31 + 88) = *(_OWORD *)(v32 + 88);
    *(void *)(v31 + 104) = *(void *)(v32 + 104);
    uint64_t v37 = *(void *)(v32 + 120);
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(void *)(v31 + 112) = *(void *)(v32 + 112);
      *(void *)(v31 + 120) = v37;
      uint64_t v38 = *(void *)(v32 + 136);
      *(void *)(v31 + 128) = *(void *)(v32 + 128);
      *(void *)(v31 + 136) = v38;
      *(unsigned char *)(v31 + 144) = *(unsigned char *)(v32 + 144);
      uint64_t v39 = *(void *)(v32 + 152);
      uint64_t v40 = *(void *)(v32 + 160);
      *(void *)(v31 + 152) = v39;
      *(void *)(v31 + 160) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v41 = *(_OWORD *)(v32 + 128);
      *(_OWORD *)(v31 + 112) = *(_OWORD *)(v32 + 112);
      *(_OWORD *)(v31 + 128) = v41;
      *(_OWORD *)(v31 + 144) = *(_OWORD *)(v32 + 144);
      *(void *)(v31 + 160) = *(void *)(v32 + 160);
    }
    *(unsigned char *)(v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t destroy for CoverView(uint64_t a1, int *a2)
{
  if (*(unsigned char *)(a1 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  else {
    swift_release();
  }
  sub_C374(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_269840();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }

  swift_release();
  uint64_t v9 = a1 + a2[10];
  if (!*(unsigned char *)(v9 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v9);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(v9 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CoverView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 40);
  if (v6)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  *(unsigned char *)(a1 + 40) = v6;
  uint64_t v8 = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a2 + 56);
  sub_10E0C(v8, v9);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  uint64_t v10 = a3[6];
  char v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *char v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_269840();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_4A98(&qword_2EBC78);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = a2 + v20;
  uint64_t v25 = *(void **)v23;
  uint64_t v24 = *(void *)(v23 + 8);
  *uint64_t v22 = v25;
  v22[1] = v24;
  uint64_t v26 = a1 + v21;
  uint64_t v27 = a2 + v21;
  *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  int v31 = *(unsigned __int8 *)(a2 + v28 + 56);
  id v32 = v25;
  swift_retain();
  if (v31)
  {
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v29 + 41) = *(_OWORD *)(v30 + 41);
  }
  else
  {
    long long v34 = *(_OWORD *)(v30 + 24);
    *(_OWORD *)(v29 + 24) = v34;
    (**(void (***)(uint64_t, uint64_t))(v34 - 8))(v29, v30);
    *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
    *(unsigned char *)(v29 + 56) = 0;
  }
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
  *(unsigned char *)(v29 + 80) = *(unsigned char *)(v30 + 80);
  *(_OWORD *)(v29 + 88) = *(_OWORD *)(v30 + 88);
  *(void *)(v29 + 104) = *(void *)(v30 + 104);
  uint64_t v35 = *(void *)(v30 + 120);
  swift_bridgeObjectRetain();
  if (v35)
  {
    *(void *)(v29 + 112) = *(void *)(v30 + 112);
    *(void *)(v29 + 120) = v35;
    uint64_t v36 = *(void *)(v30 + 136);
    *(void *)(v29 + 128) = *(void *)(v30 + 128);
    *(void *)(v29 + 136) = v36;
    *(unsigned char *)(v29 + 144) = *(unsigned char *)(v30 + 144);
    uint64_t v37 = *(void *)(v30 + 152);
    uint64_t v38 = *(void *)(v30 + 160);
    *(void *)(v29 + 152) = v37;
    *(void *)(v29 + 160) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v39 = *(_OWORD *)(v30 + 128);
    *(_OWORD *)(v29 + 112) = *(_OWORD *)(v30 + 112);
    *(_OWORD *)(v29 + 128) = v39;
    *(_OWORD *)(v29 + 144) = *(_OWORD *)(v30 + 144);
    *(void *)(v29 + 160) = *(void *)(v30 + 160);
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for CoverView(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, &qword_2EAB10);
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  sub_10E0C(v7, v8);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  sub_C374(v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_B6DC(a1 + v11, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      void *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_B6DC(a1 + v15, &qword_2EB918);
    sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_269840();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_4A98(&qword_2EBC78);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void **)(a1 + v21);
  uint64_t v25 = *(void **)(a2 + v21);
  *uint64_t v22 = v25;
  id v26 = v25;

  v22[1] = *(void *)(v23 + 8);
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  id v32 = (long long *)(a2 + v30);
  if (a1 != a2)
  {
    sub_106954(a1 + v30);
    if (*((unsigned char *)v32 + 56))
    {
      long long v33 = *v32;
      long long v34 = v32[1];
      long long v35 = v32[2];
      *(_OWORD *)(v31 + 41) = *(long long *)((char *)v32 + 41);
      *(_OWORD *)(v31 + 16) = v34;
      *(_OWORD *)(v31 + 32) = v35;
      *(_OWORD *)uint64_t v31 = v33;
    }
    else
    {
      uint64_t v36 = *((void *)v32 + 3);
      *(void *)(v31 + 24) = v36;
      *(void *)(v31 + 32) = *((void *)v32 + 4);
      (**(void (***)(uint64_t, long long *))(v36 - 8))(v31, v32);
      *(_OWORD *)(v31 + 40) = *(long long *)((char *)v32 + 40);
      *(unsigned char *)(v31 + 56) = 0;
    }
  }
  *(void *)(v31 + 64) = *((void *)v32 + 8);
  *(void *)(v31 + 72) = *((void *)v32 + 9);
  *(unsigned char *)(v31 + 80) = *((unsigned char *)v32 + 80);
  *(void *)(v31 + 88) = *((void *)v32 + 11);
  *(void *)(v31 + 96) = *((void *)v32 + 12);
  *(void *)(v31 + 104) = *((void *)v32 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = (_OWORD *)(v31 + 112);
  uint64_t v38 = v32 + 7;
  uint64_t v39 = *((void *)v32 + 15);
  if (*(void *)(v31 + 120))
  {
    if (v39)
    {
      *(void *)(v31 + 112) = *((void *)v32 + 14);
      *(void *)(v31 + 120) = *((void *)v32 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 128) = *((void *)v32 + 16);
      *(void *)(v31 + 136) = *((void *)v32 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v31 + 144) = *((unsigned char *)v32 + 144);
      *(void *)(v31 + 152) = *((void *)v32 + 19);
      *(void *)(v31 + 160) = *((void *)v32 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_107A64(v31 + 112);
      long long v41 = v32[8];
      long long v40 = v32[9];
      long long v42 = *v38;
      *(void *)(v31 + 160) = *((void *)v32 + 20);
      *(_OWORD *)(v31 + 128) = v41;
      *(_OWORD *)(v31 + 144) = v40;
      *uint64_t v37 = v42;
    }
  }
  else if (v39)
  {
    *(void *)(v31 + 112) = *((void *)v32 + 14);
    *(void *)(v31 + 120) = *((void *)v32 + 15);
    *(void *)(v31 + 128) = *((void *)v32 + 16);
    *(void *)(v31 + 136) = *((void *)v32 + 17);
    *(unsigned char *)(v31 + 144) = *((unsigned char *)v32 + 144);
    *(void *)(v31 + 152) = *((void *)v32 + 19);
    *(void *)(v31 + 160) = *((void *)v32 + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v43 = *v38;
    long long v44 = v32[8];
    long long v45 = v32[9];
    *(void *)(v31 + 160) = *((void *)v32 + 20);
    *(_OWORD *)(v31 + 128) = v44;
    *(_OWORD *)(v31 + 144) = v45;
    *uint64_t v37 = v43;
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for CoverView(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = a3[6];
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_269840();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      uint64_t v18 = sub_4A98(&qword_2EBC78);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v19 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  long long v25 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v25;
  long long v26 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v26;
  *(void *)(v22 + 160) = *(void *)(v23 + 160);
  long long v27 = *(_OWORD *)(v23 + 144);
  *(_OWORD *)(v22 + 128) = *(_OWORD *)(v23 + 128);
  *(_OWORD *)(v22 + 144) = v27;
  long long v28 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v28;
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for CoverView(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_B6DC(a1, &qword_2EAB10);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v7;
  sub_C374(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EA968);
    uint64_t v13 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (const void *)(a2 + v15);
    sub_B6DC(a1 + v15, &qword_2EB918);
    uint64_t v18 = sub_4A98(&qword_2EB918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_269840();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        uint64_t v21 = sub_4A98(&qword_2EBC78);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  long long v24 = (void *)(a2 + v22);
  long long v25 = *(void **)(a1 + v22);
  *uint64_t v23 = *v24;

  v23[1] = v24[1];
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_release();
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  if (a1 != a2)
  {
    sub_106954(a1 + v29);
    long long v32 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v32;
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    *(_OWORD *)(v30 + 41) = *(_OWORD *)(v31 + 41);
  }
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
  *(unsigned char *)(v30 + 80) = *(unsigned char *)(v31 + 80);
  *(void *)(v30 + 88) = *(void *)(v31 + 88);
  uint64_t v33 = *(void *)(v31 + 104);
  *(void *)(v30 + 96) = *(void *)(v31 + 96);
  *(void *)(v30 + 104) = v33;
  swift_bridgeObjectRelease();
  if (!*(void *)(v30 + 120)) {
    goto LABEL_19;
  }
  uint64_t v34 = *(void *)(v31 + 120);
  if (!v34)
  {
    sub_107A64(v30 + 112);
LABEL_19:
    long long v37 = *(_OWORD *)(v31 + 128);
    *(_OWORD *)(v30 + 112) = *(_OWORD *)(v31 + 112);
    *(_OWORD *)(v30 + 128) = v37;
    *(_OWORD *)(v30 + 144) = *(_OWORD *)(v31 + 144);
    *(void *)(v30 + 160) = *(void *)(v31 + 160);
    goto LABEL_20;
  }
  *(void *)(v30 + 112) = *(void *)(v31 + 112);
  *(void *)(v30 + 120) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v31 + 136);
  *(void *)(v30 + 128) = *(void *)(v31 + 128);
  *(void *)(v30 + 136) = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 144) = *(unsigned char *)(v31 + 144);
  uint64_t v36 = *(void *)(v31 + 160);
  *(void *)(v30 + 152) = *(void *)(v31 + 152);
  *(void *)(v30 + 160) = v36;
  swift_bridgeObjectRelease();
LABEL_20:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_237528);
}

uint64_t sub_237528(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4A98(&qword_2ED910);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[10] + 104);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_237658);
}

uint64_t sub_237658(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = sub_4A98(&qword_2ED910);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[10] + 104) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_237770()
{
  sub_E0D90();
  if (v0 <= 0x3F)
  {
    sub_802FC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for CoverGeometryReference(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CoverGeometryReference(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  id v6 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CoverGeometryReference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for CoverGeometryReference(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverGeometryReference(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverGeometryReference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverGeometryReference()
{
  return &type metadata for CoverGeometryReference;
}

uint64_t sub_237AD0()
{
  return sub_237B20(&qword_2F7448, &qword_2F7450, (void (*)(void))sub_235C84, (void (*)(void))sub_235D54);
}

uint64_t sub_237B20(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for CoverGeometryReferenceBuilder(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CoverGeometryReferenceBuilder(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CoverGeometryReferenceBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for CoverGeometryReferenceBuilder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverGeometryReferenceBuilder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverGeometryReferenceBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverGeometryReferenceBuilder()
{
  return &type metadata for CoverGeometryReferenceBuilder;
}

uint64_t sub_237DB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237DD0(uint64_t a1)
{
  unint64_t result = sub_237DF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237DF8()
{
  unint64_t result = qword_2F7480;
  if (!qword_2F7480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7480);
  }
  return result;
}

uint64_t sub_237E54()
{
  unint64_t v1 = (int *)type metadata accessor for CoverView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);

  uint64_t v3 = v0 + v2;
  if (*(unsigned char *)(v0 + v2 + 40)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v0 + v2);
  }
  else {
    swift_release();
  }
  sub_C374(*(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
  uint64_t v4 = v3 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26A6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[7];
  sub_4A98(&qword_2EB918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_269840();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }

  swift_release();
  uint64_t v9 = v3 + v1[10];
  if (!*(unsigned char *)(v9 + 56)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v9);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_2380BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CoverView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_232A10(v4, a1);
}

unint64_t sub_238150()
{
  unint64_t result = qword_2F74F8;
  if (!qword_2F74F8)
  {
    sub_7B0C(&qword_2F74E0);
    sub_23820C(&qword_2F7500, &qword_2F74F0, &qword_2F7508, &qword_2F74E8);
    sub_23820C(&qword_2F7510, &qword_2F74C8, &qword_2F7518, &qword_2F74C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F74F8);
  }
  return result;
}

uint64_t sub_23820C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2382A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_238310(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_238380(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2383E0()
{
  unint64_t result = qword_2F7548;
  if (!qword_2F7548)
  {
    sub_7B0C(&qword_2F7540);
    sub_23845C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7548);
  }
  return result;
}

unint64_t sub_23845C()
{
  unint64_t result = qword_2F7550;
  if (!qword_2F7550)
  {
    sub_7B0C(&qword_2F7538);
    sub_237B20(&qword_2F7348, &qword_2F7308, (void (*)(void))sub_235E38, (void (*)(void))sub_235ED8);
    sub_7C18(&qword_2F7558, &qword_2F7560);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7550);
  }
  return result;
}

uint64_t sub_23854C@<X0>(uint64_t *a1@<X8>)
{
  return sub_234ECC(*(void **)(v1 + 16), a1);
}

uint64_t sub_23856C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_2385B4()
{
  return &protocol witness table for CoverGeometryReference;
}

uint64_t sub_2385C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a6;
  char v11 = a5 & 1;
  uint64_t v12 = sub_4A98(&qword_2F7578);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2F7580);
  __chkstk_darwin(v27);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  *(unsigned char *)(v18 + 40) = v11;
  *(unsigned char *)(v18 + 41) = HIBYTE(a5) & 1;
  uint64_t v19 = sub_4A98(&qword_2F7588);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v15, a1, v19);
  uint64_t v20 = (uint64_t (**)())&v15[*(int *)(v13 + 44)];
  *uint64_t v20 = sub_238DA0;
  v20[1] = (uint64_t (*)())v18;
  uint64_t KeyPath = swift_getKeyPath();
  char v29 = a2;
  uint64_t v30 = a3;
  swift_retain();
  sub_10E0C(a4, v11);
  sub_4A98(&qword_2F2C08);
  sub_26C350();
  if (v31)
  {
    char v22 = 1;
  }
  else
  {
    sub_10E0C(a4, v11);
    char v23 = sub_40900(a4, v11);
    sub_C374(a4, v11);
    char v22 = v23 & ((a5 & 0x100) != 0);
  }
  sub_238DF4((uint64_t)v15, (uint64_t)v17);
  long long v24 = &v17[*(int *)(v27 + 36)];
  *(void *)long long v24 = KeyPath;
  v24[8] = v22;
  sub_238E5C((uint64_t)v15);
  return sub_238EBC((uint64_t)v17, v28);
}

uint64_t EnvironmentValues.isHovering.getter()
{
  sub_617A0();
  sub_26B0B0();
  return v1;
}

uint64_t EnvironmentValues.isHovering.setter()
{
  return sub_26B0C0();
}

uint64_t sub_238878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 25)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_2385C0(a1, *(unsigned char *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), v3 | *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t (*EnvironmentValues.isHovering.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_617A0();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_238918;
}

uint64_t sub_238918(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_26B0C0();
}

uint64_t View.observeHovering(passOnParentHoverState:)()
{
  return swift_release();
}

uint64_t sub_238A18()
{
  return swift_getWitnessTable();
}

unint64_t sub_238A7C()
{
  unint64_t result = qword_2F7570;
  if (!qword_2F7570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7570);
  }
  return result;
}

uint64_t destroy for ObserveHoveringViewModifier(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_C374(v2, v3);
}

uint64_t initializeWithCopy for ObserveHoveringViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_10E0C(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for ObserveHoveringViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_10E0C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_C374(v6, v7);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for ObserveHoveringViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ObserveHoveringViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  sub_C374(v5, v6);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObserveHoveringViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObserveHoveringViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObserveHoveringViewModifier()
{
  return &type metadata for ObserveHoveringViewModifier;
}

ValueMetadata *type metadata accessor for IsHoveringKey()
{
  return &type metadata for IsHoveringKey;
}

uint64_t sub_238D40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_238D5C()
{
  swift_release();
  sub_C374(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_238DA0()
{
  return sub_26C360();
}

uint64_t sub_238DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F7578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_238E5C(uint64_t a1)
{
  uint64_t v2 = sub_4A98(&qword_2F7578);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F7580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_238F28()
{
  unint64_t result = qword_2F7590;
  if (!qword_2F7590)
  {
    sub_7B0C(&qword_2F7580);
    sub_238FC8();
    sub_7C18((unint64_t *)&qword_2EAD70, &qword_2EAD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7590);
  }
  return result;
}

unint64_t sub_238FC8()
{
  unint64_t result = qword_2F7598;
  if (!qword_2F7598)
  {
    sub_7B0C(&qword_2F7578);
    sub_7C18(&qword_2F75A0, &qword_2F7588);
    sub_194328();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7598);
  }
  return result;
}

uint64_t ShrinkableText.init(text:shorterText:shortestText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ShrinkableText();
  uint64_t v9 = a4 + *(int *)(v8 + 20);
  uint64_t v10 = sub_26A220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(v9, 1, 1, v10);
  uint64_t v13 = a4 + *(int *)(v8 + 24);
  v12(v13, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a4, a1, v10);
  sub_F3450(a2, v9);

  return sub_F3450(a3, v13);
}

uint64_t type metadata accessor for ShrinkableText()
{
  uint64_t result = qword_2F7610;
  if (!qword_2F7610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShrinkableText.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26A220();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ShrinkableText.text.setter(uint64_t a1)
{
  uint64_t v3 = sub_26A220();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ShrinkableText.shorterText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShrinkableText() + 20);

  return sub_C128(v3, a1);
}

uint64_t ShrinkableText.shorterText.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShrinkableText() + 20);

  return sub_F3450(a1, v3);
}

double (*ShrinkableText.shorterText.modify())(double)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t ShrinkableText.shortestText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShrinkableText() + 24);

  return sub_C128(v3, a1);
}

uint64_t ShrinkableText.shortestText.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShrinkableText() + 24);

  return sub_F3450(a1, v3);
}

double (*ShrinkableText.shortestText.modify())(double)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:);
}

uint64_t sub_239448()
{
  uint64_t v1 = 0x54726574726F6873;
  if (*v0 != 1) {
    uint64_t v1 = 0x74736574726F6873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_2394AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23B364(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2394D4(uint64_t a1)
{
  unint64_t v2 = sub_23A068();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_239510(uint64_t a1)
{
  unint64_t v2 = sub_23A068();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShrinkableText.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_4A98(&qword_2EA0C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  long long v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_26A220();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v26 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2F75A8);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ShrinkableText();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void (**)(void))(v9 + 56);
  uint64_t v30 = &v16[*(int *)(v14 + 28)];
  v17();
  uint64_t v28 = &v16[*(int *)(v14 + 32)];
  v17();
  sub_4ADC(a1, a1[3]);
  sub_23A068();
  uint64_t v18 = (uint64_t)v29;
  sub_26DFC0();
  if (v18)
  {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
    uint64_t v20 = (uint64_t)v28;
    sub_B6DC((uint64_t)v30, &qword_2EA0C0);
    return sub_B6DC(v20, &qword_2EA0C0);
  }
  else
  {
    char v29 = a1;
    uint64_t v19 = v25;
    char v33 = 0;
    sub_23B4DC(&qword_2EEC40, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
    sub_26DC90();
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v26, v8);
    char v32 = 1;
    sub_26DC60();
    sub_F3450((uint64_t)v7, (uint64_t)v30);
    char v31 = 2;
    uint64_t v21 = (uint64_t)v24;
    sub_26DC60();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v27);
    sub_F3450(v21, (uint64_t)v28);
    sub_CAE4((uint64_t)v16, v23);
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v29);
    return sub_23A0BC((uint64_t)v16);
  }
}

uint64_t sub_2399B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShrinkableText.init(from:)(a1, a2);
}

BOOL _s7BooksUI14ShrinkableTextV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = sub_26A220();
  uint64_t v65 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = &v53[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = sub_4A98(&qword_2F7668);
  uint64_t v5 = __chkstk_darwin(v64);
  char v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v53[-v8];
  uint64_t v10 = sub_4A98(&qword_2EA0C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  unint64_t v62 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v53[-v14];
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = &v53[-v17];
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = &v53[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  long long v24 = &v53[-v23];
  __chkstk_darwin(v22);
  uint64_t v26 = &v53[-v25];
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  if ((sub_26A1B0() & 1) == 0) {
    return 0;
  }
  long long v58 = v15;
  uint64_t v59 = v18;
  char v60 = v7;
  uint64_t v29 = type metadata accessor for ShrinkableText();
  uint64_t v30 = v27;
  sub_C128(v27 + *(int *)(v29 + 20), (uint64_t)v26);
  uint64_t v56 = v28;
  uint64_t v57 = v29;
  sub_C128(v28 + *(int *)(v29 + 20), (uint64_t)v24);
  uint64_t v31 = (uint64_t)&v9[*(int *)(v64 + 48)];
  sub_C128((uint64_t)v26, (uint64_t)v9);
  sub_C128((uint64_t)v24, v31);
  char v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  uint64_t v33 = v63;
  if (v32((uint64_t)v9, 1, v63) != 1)
  {
    long long v55 = v26;
    uint64_t v34 = v21;
    sub_C128((uint64_t)v9, (uint64_t)v21);
    if (v32(v31, 1, v33) != 1)
    {
      uint64_t v36 = v65;
      uint64_t v37 = v33;
      uint64_t v38 = v61;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v61, v31, v37);
      sub_23B4DC(&qword_2F3650, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
      int v54 = sub_26D360();
      uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v36 + 8);
      long long v40 = v38;
      uint64_t v33 = v37;
      v39(v40, v37);
      sub_B6DC((uint64_t)v24, &qword_2EA0C0);
      sub_B6DC((uint64_t)v55, &qword_2EA0C0);
      v39(v34, v37);
      sub_B6DC((uint64_t)v9, &qword_2EA0C0);
      if ((v54 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_B6DC((uint64_t)v24, &qword_2EA0C0);
    sub_B6DC((uint64_t)v55, &qword_2EA0C0);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v21, v33);
LABEL_7:
    uint64_t v35 = (uint64_t)v9;
LABEL_15:
    sub_B6DC(v35, &qword_2F7668);
    return 0;
  }
  sub_B6DC((uint64_t)v24, &qword_2EA0C0);
  sub_B6DC((uint64_t)v26, &qword_2EA0C0);
  if (v32(v31, 1, v33) != 1) {
    goto LABEL_7;
  }
  sub_B6DC((uint64_t)v9, &qword_2EA0C0);
LABEL_9:
  uint64_t v41 = v57;
  uint64_t v42 = (uint64_t)v59;
  sub_C128(v30 + *(int *)(v57 + 24), (uint64_t)v59);
  uint64_t v43 = v33;
  uint64_t v44 = (uint64_t)v58;
  sub_C128(v56 + *(int *)(v41 + 24), (uint64_t)v58);
  uint64_t v45 = (uint64_t)v60;
  uint64_t v46 = (uint64_t)&v60[*(int *)(v64 + 48)];
  sub_C128(v42, (uint64_t)v60);
  sub_C128(v44, v46);
  if (v32(v45, 1, v43) == 1)
  {
    sub_B6DC(v44, &qword_2EA0C0);
    sub_B6DC(v42, &qword_2EA0C0);
    if (v32(v46, 1, v43) == 1)
    {
      sub_B6DC(v45, &qword_2EA0C0);
      return 1;
    }
    goto LABEL_14;
  }
  sub_C128(v45, (uint64_t)v62);
  if (v32(v46, 1, v43) == 1)
  {
    sub_B6DC(v44, &qword_2EA0C0);
    sub_B6DC(v42, &qword_2EA0C0);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v62, v43);
LABEL_14:
    uint64_t v35 = v45;
    goto LABEL_15;
  }
  uint64_t v48 = v65;
  uint64_t v49 = v61;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v61, v46, v43);
  sub_23B4DC(&qword_2F3650, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
  uint64_t v50 = v62;
  char v51 = sub_26D360();
  uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
  v52(v49, v43);
  sub_B6DC(v44, &qword_2EA0C0);
  sub_B6DC(v42, &qword_2EA0C0);
  v52(v50, v43);
  sub_B6DC(v45, &qword_2EA0C0);
  return (v51 & 1) != 0;
}

unint64_t sub_23A068()
{
  unint64_t result = qword_2F75B0;
  if (!qword_2F75B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F75B0);
  }
  return result;
}

uint64_t sub_23A0BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShrinkableText();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A118(uint64_t a1)
{
  uint64_t result = sub_23B4DC(&qword_2F6A60, (void (*)(uint64_t))type metadata accessor for ShrinkableText);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ShrinkableText(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26A220();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v20((char *)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_4A98(&qword_2EA0C0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v20(v17, 1, v7))
    {
      uint64_t v18 = sub_4A98(&qword_2EA0C0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v16, (uint64_t *)v17, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ShrinkableText(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26A220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4)) {
    v10(v6, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

char *initializeWithCopy for ShrinkableText(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v19 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(v19 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v12(v16, 1, v6))
  {
    uint64_t v17 = sub_4A98(&qword_2EA0C0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ShrinkableText(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v22(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v22(v9, v10, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v22(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ShrinkableText(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v19 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = sub_4A98(&qword_2EA0C0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(v19 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v12(v16, 1, v6))
  {
    uint64_t v17 = sub_4A98(&qword_2EA0C0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ShrinkableText(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v22(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA0C0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v22(v9, v10, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v22(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA0C0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShrinkableText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23AE78);
}

uint64_t sub_23AE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26A220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4A98(&qword_2EA0C0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ShrinkableText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23AF88);
}

uint64_t sub_23AF88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_26A220();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4A98(&qword_2EA0C0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_23B090()
{
  sub_26A220();
  if (v0 <= 0x3F)
  {
    sub_C3ED8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ShrinkableText.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23B224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShrinkableText.CodingKeys()
{
  return &type metadata for ShrinkableText.CodingKeys;
}

unint64_t sub_23B260()
{
  unint64_t result = qword_2F7650;
  if (!qword_2F7650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7650);
  }
  return result;
}

unint64_t sub_23B2B8()
{
  unint64_t result = qword_2F7658;
  if (!qword_2F7658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7658);
  }
  return result;
}

unint64_t sub_23B310()
{
  unint64_t result = qword_2F7660;
  if (!qword_2F7660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7660);
  }
  return result;
}

uint64_t sub_23B364(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54726574726F6873 && a2 == 0xEB00000000747865 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736574726F6873 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_23B4DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewEntryHeader()
{
  return &type metadata for YearInReviewEntryHeader;
}

uint64_t sub_23B540()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B55C(uint64_t a1, uint64_t a2)
{
  v22[0] = a2;
  uint64_t v3 = sub_269920();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_26D3E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v22 - v15;
  uint64_t v17 = sub_26D3C0();
  __chkstk_darwin(v17 - 8);
  sub_26D3B0();
  v23._uint64_t countAndFlagsBits = 0x2072756F59;
  v23._object = (void *)0xE500000000000000;
  sub_26D3A0(v23);
  v24._uint64_t countAndFlagsBits = a1;
  v24._object = (void *)v22[0];
  sub_26D390(v24);
  v25._uint64_t countAndFlagsBits = 0x6E69207261655920;
  v25._object = (void *)0xEF77656976655220;
  sub_26D3A0(v25);
  sub_26D3D0();
  sub_2698C0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v20 = sub_26D460();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v20;
}

uint64_t sub_23B864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v150 = a1;
  uint64_t v159 = a3;
  uint64_t v157 = sub_26B600();
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v153 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_4A98(&qword_2F7678);
  __chkstk_darwin(v147);
  uint64_t v146 = (uint64_t *)((char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v148 = sub_4A98(&qword_2F7680);
  __chkstk_darwin(v148);
  uint64_t v149 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_4A98(&qword_2F7688);
  uint64_t v156 = *(void *)(v158 - 8);
  uint64_t v6 = __chkstk_darwin(v158);
  uint64_t v154 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v152 = (char *)&v128 - v8;
  uint64_t v145 = sub_269920();
  uint64_t v143 = *(void *)(v145 - 8);
  uint64_t v9 = __chkstk_darwin(v145);
  uint64_t v138 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v140 = (char *)&v128 - v11;
  uint64_t v141 = sub_26D3E0();
  uint64_t v139 = *(void *)(v141 - 8);
  uint64_t v12 = __chkstk_darwin(v141);
  uint64_t v136 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v137 = (char *)&v128 - v14;
  uint64_t v169 = sub_4A98(&qword_2EB028);
  uint64_t v15 = __chkstk_darwin(v169);
  uint64_t v132 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v129 = (char *)&v128 - v17;
  uint64_t v164 = sub_26AB40();
  uint64_t v166 = *(void **)(v164 - 8);
  uint64_t v18 = __chkstk_darwin(v164);
  v168 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v167 = (char *)&v128 - v20;
  uint64_t v135 = sub_4A98(&qword_2EB030);
  uint64_t v21 = __chkstk_darwin(v135);
  double v128 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v130 = (uint64_t)&v128 - v23;
  uint64_t v165 = sub_26B910();
  uint64_t v163 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v162 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_4A98(&qword_2F7690);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v170 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4A98(&qword_2F7698);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v144 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v142 = (uint64_t)&v128 - v29;
  sub_26C250();
  uint64_t v30 = sub_26BB10();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  uint64_t v35 = sub_26BA60();
  uint64_t v37 = v36;
  uint64_t v160 = v38;
  char v40 = v39 & 1;
  sub_3A380(v30, v32, v34);
  swift_bridgeObjectRelease();
  uint64_t v173 = 0x736B6F6F42;
  uint64_t v174 = 0xE500000000000000;
  unint64_t v131 = sub_CC78();
  uint64_t v41 = sub_26BB00();
  uint64_t v43 = v42;
  char v45 = v44 & 1;
  uint64_t v46 = sub_26BA60();
  uint64_t v48 = v47;
  uint64_t v161 = v49;
  char v51 = v50 & 1;
  sub_3A380(v41, v43, v45);
  swift_bridgeObjectRelease();
  sub_3A380(v35, v37, v40);
  swift_bridgeObjectRelease();
  LODWORD(v173) = sub_26B450();
  uint64_t v52 = sub_26BA40();
  uint64_t v54 = v53;
  LOBYTE(v37) = v55 & 1;
  sub_3A380(v46, v48, v51);
  swift_bridgeObjectRelease();
  sub_26B7F0();
  uint64_t v56 = v163;
  uint64_t v57 = v162;
  uint64_t v58 = v165;
  (*(void (**)(char *, void, uint64_t))(v163 + 104))(v162, enum case for Font.Leading.tight(_:), v165);
  sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  uint64_t v59 = sub_26BA80();
  uint64_t v61 = v60;
  LOBYTE(v56) = v62;
  swift_release();
  uint64_t v63 = v166;
  sub_3A380(v52, v54, v37);
  swift_bridgeObjectRelease();
  sub_26B890();
  uint64_t v64 = sub_26BA20();
  uint64_t v66 = v65;
  LOBYTE(v37) = v67 & 1;
  sub_3A380(v59, v61, v56 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v173) = sub_26B450();
  uint64_t v68 = sub_26BA40();
  uint64_t v70 = v69;
  LOBYTE(v57) = v71 & 1;
  sub_3A380(v64, v66, v37);
  swift_bridgeObjectRelease();
  uint64_t v72 = sub_26BAA0();
  uint64_t v74 = v73;
  LOBYTE(v56) = v75;
  uint64_t v77 = v76;
  sub_3A380(v68, v70, (char)v57);
  uint64_t v78 = v168;
  swift_bridgeObjectRelease();
  uint64_t v173 = v72;
  uint64_t v174 = v74;
  char v79 = v56 & 1;
  uint64_t v80 = v167;
  LOBYTE(v175) = v79;
  uint64_t v176 = v77;
  unint64_t v81 = v63;
  uint64_t v82 = (void (*)(char *, void, uint64_t))v63[13];
  uint64_t v83 = v164;
  v82(v167, enum case for DynamicTypeSize.small(_:), v164);
  v82(v78, enum case for DynamicTypeSize.accessibility1(_:), v83);
  sub_23CFC0(&qword_2EB080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v84 = v83;
  uint64_t result = sub_26D350();
  if (result)
  {
    uint64_t v86 = v169;
    uint64_t v87 = v129;
    uint64_t v88 = &v129[*(int *)(v169 + 48)];
    uint64_t v89 = (void (*)(char *, char *, uint64_t))v81[4];
    v89(v129, v80, v84);
    uint64_t v165 = (uint64_t)v88;
    v89(v88, v78, v84);
    uint64_t v90 = *(int *)(v86 + 48);
    uint64_t v91 = v132;
    unint64_t v92 = &v132[v90];
    uint64_t v93 = (void (*)(char *, char *, uint64_t))v81[2];
    v93(v132, v87, v84);
    v93(v92, v88, v84);
    uint64_t v94 = (uint64_t)v128;
    v89(v128, v91, v84);
    uint64_t v95 = (void (*)(char *, uint64_t))v81[1];
    v95(v92, v84);
    uint64_t v96 = &v91[*(int *)(v169 + 48)];
    v89(v91, v87, v84);
    v89(v96, (char *)v165, v84);
    uint64_t v97 = v135;
    v89((char *)(v94 + *(int *)(v135 + 36)), v96, v84);
    v95(v91, v84);
    uint64_t v98 = v130;
    sub_19CC4(v94, v130, &qword_2EB030);
    uint64_t v169 = sub_7C18(&qword_2EB118, &qword_2EB030);
    uint64_t v99 = v97;
    sub_26BD90();
    sub_B6DC(v98, &qword_2EB030);
    sub_3A380(v173, v174, (char)v175);
    swift_bridgeObjectRelease();
    uint64_t v100 = v137;
    sub_26D370();
    uint64_t v101 = v140;
    sub_2698C0();
    uint64_t v102 = v139;
    uint64_t v103 = v141;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v136, v100, v141);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v105 = [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v106 = v143;
    uint64_t v107 = v145;
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v138, v101, v145);
    uint64_t v108 = sub_26D460();
    uint64_t v110 = v109;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v107);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
    uint64_t v171 = v108;
    uint64_t v172 = v110;
    uint64_t v173 = (uint64_t)&type metadata for Text;
    uint64_t v174 = v99;
    uint64_t v175 = &protocol witness table for Text;
    uint64_t v176 = v169;
    swift_getOpaqueTypeConformance2();
    uint64_t v111 = (uint64_t)v144;
    uint64_t v112 = v134;
    unsigned int v113 = v170;
    sub_26BE40();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v113, v112);
    uint64_t v114 = v142;
    sub_19CC4(v111, v142, &qword_2F7698);
    uint64_t v115 = sub_26B1D0();
    uint64_t v116 = (uint64_t)v146;
    *uint64_t v146 = v115;
    *(void *)(v116 + 8) = 0;
    *(unsigned char *)(v116 + 16) = 1;
    uint64_t v117 = sub_4A98(&qword_2F76A0);
    sub_23C914(v150, v151, v116 + *(int *)(v117 + 44));
    sub_7C18(&qword_2F76A8, &qword_2F7678);
    uint64_t v118 = (uint64_t)v149;
    sub_26BE90();
    sub_B6DC(v116, &qword_2F7678);
    unsigned int v119 = v153;
    sub_26B5E0();
    sub_23CEF0();
    uint64_t v120 = v154;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v119, v157);
    sub_B6DC(v118, &qword_2F7680);
    uint64_t v121 = v156;
    uint64_t v122 = v152;
    uint64_t v123 = v158;
    (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v152, v120, v158);
    sub_23D008(v114, v111);
    uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
    v124(v120, v122, v123);
    uint64_t v125 = v159;
    sub_23D008(v111, v159);
    uint64_t v126 = sub_4A98(&qword_2F76B8);
    v124((char *)(v125 + *(int *)(v126 + 48)), v120, v123);
    unsigned int v127 = *(void (**)(char *, uint64_t))(v121 + 8);
    v127(v122, v123);
    sub_B6DC(v114, &qword_2F7698);
    v127(v120, v123);
    return sub_B6DC(v111, &qword_2F7698);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23C914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = sub_26B910();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_4A98(&qword_2F76C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v49 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = sub_23B55C(a1, a2);
  uint64_t v52 = v14;
  sub_CC78();
  uint64_t v15 = sub_26BB00();
  uint64_t v17 = v16;
  LODWORD(v19) = v18;
  sub_26B840();
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v20 = sub_26B820();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  }
  else
  {
    uint64_t v21 = enum case for Font.Design.serif (_:);
    uint64_t v22 = sub_26B820();
    int v48 = v19;
    uint64_t v19 = v22;
    uint64_t v23 = v5;
    uint64_t v24 = *(void *)(v22 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 104))(v11, v21, v22);
    uint64_t v25 = v19;
    LOBYTE(v19) = v48;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(v11, 0, 1, v25);
    uint64_t v5 = v23;
  }
  char v26 = v19 & 1;
  sub_26B8D0();
  sub_B6DC((uint64_t)v11, &qword_2EBFC0);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for Font.Leading.tight(_:), v5);
  sub_26B930();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v27 = sub_26BA80();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  sub_3A380(v15, v17, v26);
  swift_bridgeObjectRelease();
  LODWORD(v51) = sub_26B450();
  uint64_t v32 = sub_26BA40();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_3A380(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_26BAA0();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  LOBYTE(v27) = v42 & 1;
  sub_3A380(v32, v34, v36);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v51 = v37;
  uint64_t v52 = v39;
  char v53 = v27;
  uint64_t v54 = v41;
  uint64_t v55 = KeyPath;
  uint64_t v56 = 2;
  char v57 = 0;
  uint64_t v58 = v44;
  uint64_t v59 = 0x3FE6666666666666;
  sub_4A98(&qword_2F76C8);
  sub_23D080();
  uint64_t v45 = (uint64_t)v49;
  sub_26BE90();
  sub_3A380(v37, v39, v27);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_19CC4(v45, v50, &qword_2F76C0);
}

uint64_t sub_23CDE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4A98(&qword_2EE8E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  *(void *)uint64_t v5 = sub_26B1D0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v8 = sub_4A98(&qword_2F7670);
  sub_23B864(v7, v6, (uint64_t)&v5[*(int *)(v8 + 44)]);
  uint64_t v9 = sub_26C650();
  sub_B0CD0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10);
  return sub_B6DC((uint64_t)v5, &qword_2EE8E0);
}

unint64_t sub_23CEF0()
{
  unint64_t result = qword_2F76B0;
  if (!qword_2F76B0)
  {
    sub_7B0C(&qword_2F7680);
    sub_7C18(&qword_2F76A8, &qword_2F7678);
    sub_23CFC0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F76B0);
  }
  return result;
}

uint64_t sub_23CFC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23D008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2F7698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23D080()
{
  unint64_t result = qword_2F76D0;
  if (!qword_2F76D0)
  {
    sub_7B0C(&qword_2F76C8);
    sub_2176AC();
    sub_7C18(&qword_2EC7C8, &qword_2EC7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F76D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewEntryHeaderViewModel()
{
  return &type metadata for YearInReviewEntryHeaderViewModel;
}

unint64_t sub_23D134()
{
  unint64_t result = qword_2F76D8;
  if (!qword_2F76D8)
  {
    sub_7B0C(&qword_2EE8E8);
    sub_7C18(&qword_2F76E0, &qword_2EE8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F76D8);
  }
  return result;
}

uint64_t sub_23D1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23D208(a1, a2, (void (*)(uint64_t))sub_23E97C, a3);
}

uint64_t sub_23D208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v94 = a3;
  *(void *)&long long v103 = a2;
  uint64_t v91 = a4;
  uint64_t v5 = sub_26C8F0();
  __chkstk_darwin(v5 - 8);
  *((void *)&v90 + 1) = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26CC00();
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F77A8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v92 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v86 - v12;
  uint64_t v100 = sub_4A98(&qword_2F77B0);
  uint64_t v14 = *(void *)(v100 - 8);
  uint64_t v15 = __chkstk_darwin(v100);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v93 = (char *)&v86 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v22 = sub_26CA10();
  uint64_t v98 = *(void *)(v22 - 8);
  uint64_t v99 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v86 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v109 = (char *)&v86 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v86 - v31;
  uint64_t v33 = a1;
  uint64_t v34 = sub_BF8B8(a1);
  if (v34)
  {
    *((void *)&v90 + 1) = v35;
    unint64_t v92 = v36;
    *(void *)&long long v90 = v34;
    uint64_t v37 = (void *)v103;
    sub_4ADC((void *)v103, *(void *)(v103 + 24));
    sub_26DFA0();
    sub_26CA00();
    sub_26C9C0();
    uint64_t v38 = v102;
    sub_26CA20();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
    v39(v21, v100);
    int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48))(v13, 1, v38);
    uint64_t v41 = sub_B6DC((uint64_t)v13, &qword_2F77A8);
    uint64_t v42 = v98;
    uint64_t v43 = v99;
    if (v40 == 1)
    {
      v94(v41);
      uint64_t v44 = v96;
      sub_26CC10();
      uint64_t v45 = v93;
      sub_26C9C0();
      uint64_t v46 = v102;
      sub_26C9A0();
      v39(v45, v100);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
      uint64_t v37 = (void *)v103;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v32, v109, v43);
    }
    sub_4ADC(v37, v37[3]);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v109, v32, v43);
    sub_26D270();
    sub_26DFB0();
    swift_bridgeObjectRelease();
    long long v107 = v90;
    uint64_t v108 = v92;
    sub_CA1C(&v105);
    uint64_t v47 = v97;
    sub_26D730();
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
      return sub_BF940((uint64_t)&v105);
    }
    long long v103 = v107;
    uint64_t v71 = v107;
    uint64_t v72 = sub_4ADC(&v105, v107);
    uint64_t v73 = (uint64_t *)v91;
    *(_OWORD *)(v91 + 24) = v103;
    uint64_t v74 = sub_CA1C(v73);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v72, v71);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v105);
  }
  uint64_t v49 = v92;
  uint64_t v89 = v25;
  *(void *)&long long v90 = v28;
  uint64_t v50 = v102;
  uint64_t v51 = sub_BF8B8(v33);
  if (v51)
  {
    uint64_t v54 = v51;
    uint64_t v87 = v53;
    uint64_t v88 = v52;
    sub_4ADC((void *)v103, *(void *)(v103 + 24));
    sub_26DFA0();
    sub_26CA00();
    sub_26C9C0();
    uint64_t v55 = (uint64_t)v49;
    sub_26CA20();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v57 = v50;
    uint64_t v58 = v100;
    v56(v17, v100);
    uint64_t v59 = v101;
    int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v55, 1, v57);
    uint64_t v61 = sub_B6DC(v55, &qword_2F77A8);
    uint64_t v62 = v98;
    if (v60 == 1)
    {
      v94(v61);
      uint64_t v63 = v96;
      sub_26CC10();
      uint64_t v95 = v56;
      uint64_t v64 = v93;
      sub_26C9C0();
      uint64_t v65 = v54;
      uint64_t v66 = v58;
      uint64_t v67 = v90;
      sub_26C9A0();
      uint64_t v68 = v66;
      uint64_t v54 = v65;
      v95(v64, v68);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v57);
      uint64_t v69 = v99;
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v67, v99);
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v67, v109, v69);
    }
    sub_C224(v103, (uint64_t)v104);
    uint64_t v70 = v97;
    sub_26C8D0();
    if (v70) {
      return (*(uint64_t (**)(void, uint64_t))(v62 + 8))(v90, v99);
    }
    uint64_t v78 = v90;
    uint64_t v79 = v99;
    (*(void (**)(char *, void, uint64_t))(v62 + 16))(v89, v90, v99);
    *(void *)&long long v107 = v54;
    *((void *)&v107 + 1) = v88;
    uint64_t v108 = v87;
    sub_CA1C(&v105);
    sub_26CDE0();
    uint64_t v80 = v107;
    uint64_t v81 = v62;
    uint64_t v82 = (uint64_t)v108;
    uint64_t v83 = sub_4ADC(&v105, v107);
    uint64_t v84 = (uint64_t *)v91;
    *(void *)(v91 + 24) = v80;
    v84[4] = v82;
    uint64_t v85 = sub_CA1C(v84);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(v85, v83, v80);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v78, v79);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v105);
  }
  uint64_t v75 = sub_26DAD0();
  swift_allocError();
  uint64_t v77 = v76;
  sub_4A98(&qword_2EBAB0);
  *uint64_t v77 = v33;
  sub_4ADC((void *)v103, *(void *)(v103 + 24));
  sub_26DF80();
  uint64_t v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  sub_26DA90(21);
  swift_bridgeObjectRelease();
  uint64_t v105 = 60;
  unint64_t v106 = 0xE100000000000000;
  v110._uint64_t countAndFlagsBits = sub_26E0F0();
  sub_26D4E0(v110);
  swift_bridgeObjectRelease();
  v111._object = (void *)0x8000000000289370;
  v111._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_26D4E0(v111);
  sub_26DAC0();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v75 - 8) + 104))(v77, enum case for DecodingError.typeMismatch(_:), v75);
  return swift_willThrow();
}

uint64_t CodeAnyIntentModel.description.getter()
{
  return 0;
}

uint64_t CodeAnyIntentModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_4ADC(a1, a1[3]);
  uint64_t v7 = Decoder.intentKindTable.getter();
  Decoder.decodeIntentModel<A, B>(using:returning:)((uint64_t)v7, a2, v8, (uint64_t)v11);
  if (!v3)
  {
    sub_AD44(v11, (uint64_t)v12);
    long long v9 = v12[1];
    *(_OWORD *)a3 = v12[0];
    *(_OWORD *)(a3 + 16) = v9;
    *(void *)(a3 + 32) = v13;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t Decoder.decodeIntentModel<A>(returning:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = Decoder.intentKindTable.getter();
  return Decoder.decodeIntentModel<A, B>(using:returning:)((uint64_t)v4, a1, v5, a2);
}

uint64_t sub_23DE10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodeAnyIntentModel.init(from:)(a1, *(void *)(a2 + 16), a3);
}

ValueMetadata *Decoder.intentKindTable.getter()
{
  sub_26DFA0();
  if (qword_2E9D40 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_4A98(&qword_2F7708);
  sub_6B14(v0, (uint64_t)qword_2F76F0);
  sub_4A98(&qword_2F7710);
  sub_26D280();
  swift_bridgeObjectRelease();
  unint64_t v1 = v3;
  if (!v3)
  {
    unint64_t v1 = &type metadata for EmptyIntentKindTable;
    sub_23E31C();
  }
  return v1;
}

uint64_t Decoder.decodeIntentModel<A, B>(using:returning:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v17 = sub_4A98(&qword_2EEBA8);
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  long long v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26DF90();
  uint64_t v11[5] = a1;
  if (v4)
  {
    sub_26DFA0();
    sub_26C9E0();
    sub_4A98(&qword_2EEBB0);
    sub_26D280();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
    sub_BF6B4((uint64_t)v14, (uint64_t)&v12);
    if (v13)
    {
      sub_4ADC(&v12, v13);
      swift_getMetatypeMetadata();
      sub_26CFC0();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v12);
    }
    else
    {
      sub_B6DC((uint64_t)&v12, &qword_2EEBB8);
    }
    swift_willThrow();
    return sub_B6DC((uint64_t)v14, &qword_2EEBB8);
  }
  else
  {
    v11[0] = a4;
    v11[1] = v15;
    long long v11[2] = v16;
    sub_4ADC(v14, v15);
    type metadata accessor for _IntentKindTable_BooksReturningUnknown();
    swift_getWitnessTable();
    sub_26C890();
    swift_getWitnessTable();
    sub_26DDD0();
    sub_AD44(&v12, v11[0]);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v14);
  }
}

unint64_t sub_23E180()
{
  unint64_t result = sub_9218((uint64_t)_swiftEmptyArrayStorage);
  qword_2F76E8 = result;
  return result;
}

uint64_t sub_23E1A8()
{
  if (qword_2E9D38 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

unint64_t sub_23E204()
{
  if (qword_2E9D38 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_23E65C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23E274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23D208(a1, a2, (void (*)(uint64_t))sub_23E31C, a3);
}

uint64_t sub_23E2A0()
{
  uint64_t v0 = sub_4A98(&qword_2F7708);
  sub_6E18(v0, qword_2F76F0);
  sub_6B14(v0, (uint64_t)qword_2F76F0);
  sub_4A98(&qword_2F7710);
  return sub_26C9F0();
}

unint64_t sub_23E31C()
{
  unint64_t result = qword_2F7718[0];
  if (!qword_2F7718[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F7718);
  }
  return result;
}

uint64_t static JSONContext.Property<A>.booksIntentKindTable.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4A98(&qword_2F7708);
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F76F0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for CodeAnyIntentModel()
{
  return sub_129B4();
}

ValueMetadata *type metadata accessor for EmptyIntentKindTable()
{
  return &type metadata for EmptyIntentKindTable;
}

unint64_t sub_23E448()
{
  unint64_t result = qword_2F77A0;
  if (!qword_2F77A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F77A0);
  }
  return result;
}

unint64_t sub_23E49C(uint64_t a1, uint64_t a2)
{
  sub_26DEF0();
  sub_26D4B0();
  Swift::Int v4 = sub_26DF20();

  return sub_23E514(a1, a2, v4);
}

unint64_t sub_23E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_26DDB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_26DDB0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_26DDB0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_23E65C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_4A98(&qword_2EEBC8);
    uint64_t v2 = (void *)sub_26DBD0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_2F77B8;
  uint64_t v9 = (uint64_t *)&unk_2EEBD8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_36;
  }
  if (v17 >= v30) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v30) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v30) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v30) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = i + 5;
          if (i + 5 >= v30) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v31 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = i + 6;
            if (i + 6 >= v30) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v31 + 8 * v19);
            int64_t v20 = i + 6;
            if (!v18)
            {
              while (1)
              {
                int64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_37;
                }
                if (v19 >= v30) {
                  break;
                }
                unint64_t v18 = *(void *)(v31 + 8 * v19);
                ++v20;
                if (v18) {
                  goto LABEL_27;
                }
              }
LABEL_33:
              sub_BFCB4();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
  }
LABEL_27:
  unint64_t v5 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_4A98(v8);
    sub_4A98(v9);
    swift_dynamicCast();
    unint64_t result = sub_23E49C(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      unint64_t v32 = v5;
      uint64_t v10 = v1;
      int64_t v11 = i;
      uint64_t v12 = v9;
      uint64_t v13 = v8;
      uint64_t v14 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v14 = v23;
      v14[1] = v22;
      uint64_t v8 = v13;
      uint64_t v9 = v12;
      int64_t i = v11;
      uint64_t v1 = v10;
      unint64_t v5 = v32;
      *(void *)(v2[7] + 8 * v24) = v33;
      if (!v32) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v26 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v33;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_35;
    }
    v2[2] = v29;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_23E97C()
{
  unint64_t result = qword_2F77C0;
  if (!qword_2F77C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F77C0);
  }
  return result;
}

unint64_t static SeriesRoomHeaderView.fakeScrollContentsName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t SeriesRoomHeaderView.init(title:author:authorAction:authorImpressionMetrics:narrator:footer:coverViewModels:quickActionButtonViewModel:seriesID:systemColorScheme:contextActionMenuView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)a9 = swift_getKeyPath();
  *(unsigned char *)(a9 + 8) = 0;
  uint64_t v22 = (int *)type metadata accessor for SeriesRoomHeaderView();
  uint64_t v23 = (uint64_t *)(a9 + v22[5]);
  *uint64_t v23 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a9 + v22[6];
  *(void *)uint64_t v24 = swift_getKeyPath();
  *(unsigned char *)(v24 + 40) = 0;
  uint64_t v25 = a9 + v22[7];
  *(void *)uint64_t v25 = swift_getKeyPath();
  *(unsigned char *)(v25 + 8) = 0;
  uint64_t v26 = a9 + v22[8];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(void *)(v26 + 8) = 0;
  *(unsigned char *)(v26 + 16) = 0;
  sub_19CC4(a1, a9 + v22[9], &qword_2ED2E0);
  sub_19CC4(a2, a9 + v22[10], &qword_2ED2E0);
  sub_19CC4(a3, a9 + v22[11], &qword_2EA838);
  sub_19CC4(a4, a9 + v22[12], &qword_2EBFE8);
  sub_19CC4(a5, a9 + v22[13], &qword_2EDCA0);
  sub_19CC4(a6, a9 + v22[14], &qword_2EDCA8);
  *(void *)(a9 + v22[15]) = a7;
  sub_2463D0(a8, a9 + v22[16], type metadata accessor for SeriesQuickActionButtonViewModel);
  uint64_t v27 = (void *)(a9 + v22[17]);
  void *v27 = a10;
  v27[1] = a11;
  uint64_t v28 = a9 + v22[18];
  uint64_t v29 = sub_26A6E0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a12, v29);
  uint64_t v31 = (void *)(a9 + v22[19]);
  *uint64_t v31 = a13;
  v31[1] = a14;
  return result;
}

uint64_t SeriesRoomHeaderView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (qword_2E9B10 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_26A340();
  sub_6B14(v4, (uint64_t)qword_2E9EF8);
  unint64_t v5 = sub_26A320();
  os_log_type_t v6 = sub_26D830();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&def_5F050, v5, v6, "SwiftUI::SeriesRoomHeaderView::body evaluated", v7, 2u);
    swift_slowDealloc();
  }

  *(void *)a1 = sub_26B1C0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v8 = sub_4A98(&qword_2F77E0);
  return sub_23ED5C(v2, a1 + *(int *)(v8 + 44));
}

uint64_t sub_23ED5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = sub_4A98(&qword_2F78C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v84 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v79 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v76 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F78C8);
  __chkstk_darwin(v9 - 8);
  int64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F78D0);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v78 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v77 = (uint64_t)&v76 - v15;
  uint64_t v16 = sub_4A98(&qword_2F78D8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v83 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int64_t v20 = (char *)&v76 - v19;
  uint64_t v21 = sub_4A98(&qword_2F78E0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v80 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v76 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v76 - v27;
  uint64_t v29 = type metadata accessor for SeriesRoomHeaderView();
  uint64_t v30 = *(void *)(a1 + *(int *)(v29 + 60));
  uint64_t v31 = a1 + *(int *)(v29 + 32);
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *(void *)(v31 + 8);
  char v34 = *(unsigned char *)(v31 + 16);
  swift_bridgeObjectRetain();
  sub_2425B0(v32, v33, v34);
  double v35 = sub_426A4(v32, v33, v34);
  sub_4695C(v32, v33, v34);
  uint64_t v36 = *(void *)a1;
  char v37 = *(unsigned char *)(a1 + 8);
  sub_10E0C(*(void *)a1, v37);
  char v38 = sub_40900(v36, v37);
  sub_C374(v36, v37);
  char v86 = v38 & 1;
  SeriesHeaderCoverStackLayout.init(covers:pageWidth:heroWidthScale:)(v30, &v86, v87, v35);
  uint64_t v39 = v87[0];
  if (v87[0])
  {
    uint64_t v40 = v85;
    uint64_t v42 = v87[1];
    uint64_t v41 = v87[2];
    *(void *)uint64_t v26 = sub_26B120();
    *((void *)v26 + 1) = 0;
    v26[16] = 0;
    uint64_t v43 = sub_4A98(&qword_2F78F0);
    sub_23F4BC((uint64_t)v39, a1, (uint64_t)&v26[*(int *)(v43 + 44)], *(double *)&v42, *(double *)&v41);
    swift_bridgeObjectRelease();
    sub_19CC4((uint64_t)v26, (uint64_t)v28, &qword_2F78E0);
    sub_10E0C(v36, v37);
    char v44 = sub_40900(v36, v37);
    sub_C374(v36, v37);
    if (v44)
    {
      sub_10E0C(v36, v37);
      char v45 = sub_40900(v36, v37);
      sub_C374(v36, v37);
      uint64_t v46 = v40;
      uint64_t v47 = (uint64_t)v84;
      uint64_t v48 = v82;
      uint64_t v49 = (uint64_t)v80;
      if (v45) {
        uint64_t v50 = sub_26B1C0();
      }
      else {
        uint64_t v50 = sub_26B1D0();
      }
      *(void *)int64_t v11 = v50;
      *((void *)v11 + 1) = 0x403C000000000000;
      v11[16] = 0;
      uint64_t v59 = sub_4A98(&qword_2F7900);
      sub_2412B4(a1, (uint64_t)&v11[*(int *)(v59 + 44)]);
      char v60 = sub_26B780();
      uint64_t v61 = v76;
      sub_41378(v76);
      uint64_t v62 = v79;
      sub_246438(v61, v79, type metadata accessor for SizeConstants.Environment);
      sub_2464A0(v61, type metadata accessor for SizeConstants);
      sub_2464A0(v62, type metadata accessor for SizeConstants.Spacing);
      sub_26A640();
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      uint64_t v70 = v69;
      uint64_t v71 = v78;
      sub_B678((uint64_t)v11, v78, &qword_2F78C8);
      uint64_t v72 = v71 + *(int *)(v48 + 36);
      *(unsigned char *)uint64_t v72 = v60;
      *(void *)(v72 + 8) = v64;
      *(void *)(v72 + 16) = v66;
      *(void *)(v72 + 24) = v68;
      *(void *)(v72 + 32) = v70;
      *(unsigned char *)(v72 + 40) = 0;
      sub_B6DC((uint64_t)v11, &qword_2F78C8);
      uint64_t v73 = v77;
      sub_19CC4(v71, v77, &qword_2F78D0);
      sub_19CC4(v73, (uint64_t)v20, &qword_2F78D0);
      uint64_t v56 = 0;
      uint64_t v57 = (uint64_t)v83;
      uint64_t v58 = v81;
    }
    else
    {
      uint64_t v56 = 1;
      uint64_t v46 = v40;
      uint64_t v57 = (uint64_t)v83;
      uint64_t v47 = (uint64_t)v84;
      uint64_t v58 = v81;
      uint64_t v48 = v82;
      uint64_t v49 = (uint64_t)v80;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v20, v56, 1, v48);
    sub_B678((uint64_t)v28, v49, &qword_2F78E0);
    sub_B678((uint64_t)v20, v57, &qword_2F78D8);
    sub_B678(v49, v47, &qword_2F78E0);
    uint64_t v74 = sub_4A98(&qword_2F78F8);
    sub_B678(v57, v47 + *(int *)(v74 + 48), &qword_2F78D8);
    sub_B6DC((uint64_t)v20, &qword_2F78D8);
    sub_B6DC((uint64_t)v28, &qword_2F78E0);
    sub_B6DC(v57, &qword_2F78D8);
    sub_B6DC(v49, &qword_2F78E0);
    uint64_t v75 = sub_4A98(&qword_2F78E8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v47, 0, 1, v75);
    return sub_19CC4(v47, v46, &qword_2F78C0);
  }
  else
  {
    uint64_t v51 = sub_4A98(&qword_2F78E8);
    uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
    uint64_t v53 = v51;
    uint64_t v54 = v85;
    return v52(v54, 1, 1, v53);
  }
}

uint64_t sub_23F4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = sub_4A98(&qword_2EE948);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2EE950);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F7910);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_26B1D0();
  *((void *)v12 + 1) = 0x403C000000000000;
  v12[16] = 0;
  uint64_t v20 = sub_4A98(&qword_2F7918);
  sub_23F754(a1, a2, (uint64_t)&v12[*(int *)(v20 + 44)], a4, a5);
  uint64_t v21 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B0D40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v21, v22);
  sub_B6DC((uint64_t)v12, &qword_2EE948);
  char v23 = sub_26B770();
  sub_240FE0();
  sub_26A640();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_B678((uint64_t)v15, (uint64_t)v19, &qword_2EE950);
  uint64_t v32 = &v19[*(int *)(v17 + 44)];
  *uint64_t v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_B6DC((uint64_t)v15, &qword_2EE950);
  char v33 = sub_26B780();
  sub_241148();
  sub_26A640();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_B678((uint64_t)v19, a3, &qword_2F7910);
  uint64_t v42 = a3 + *(int *)(sub_4A98(&qword_2F7920) + 36);
  *(unsigned char *)uint64_t v42 = v33;
  *(void *)(v42 + 8) = v35;
  *(void *)(v42 + 16) = v37;
  *(void *)(v42 + 24) = v39;
  *(void *)(v42 + 32) = v41;
  *(unsigned char *)(v42 + 40) = 0;
  return sub_B6DC((uint64_t)v19, &qword_2F7910);
}

uint64_t sub_23F754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v97 = a3;
  uint64_t v98 = a1;
  uint64_t v8 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v8 - 8);
  long long v90 = (char *)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v89 = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v88 = (uint64_t)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t v14 = __chkstk_darwin(v87);
  uint64_t v16 = (char *)v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v91 = (uint64_t)v86 - v17;
  uint64_t v18 = sub_4A98(&qword_2EE940);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_4A98(&qword_2F7928);
  uint64_t v95 = *(void *)(v21 - 8);
  uint64_t v96 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v86 - v25;
  uint64_t v27 = (int *)type metadata accessor for SeriesRoomHeaderView();
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_4A98(&qword_2F7930);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v94 = (char *)v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  unint64_t v92 = (char *)v86 - v33;
  uint64_t v34 = sub_4A98(&qword_2F7938);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v93 = (char *)v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)v86 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (uint64_t)v86 - v40;
  *(void *)uint64_t v39 = sub_26B100();
  *((void *)v39 + 1) = 0;
  v39[16] = 0;
  uint64_t v42 = sub_4A98(&qword_2F7940);
  sub_23FFE4(v98, a2, (uint64_t)&v39[*(int *)(v42 + 44)], a4, a5);
  uint64_t v98 = v41;
  sub_19CC4((uint64_t)v39, v41, &qword_2F7938);
  uint64_t v43 = *(void *)a2;
  LOBYTE(v39) = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, (char)v39);
  LOBYTE(v41) = sub_40900(v43, (char)v39);
  sub_C374(v43, (char)v39);
  sub_246438(a2, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderView);
  if (v41)
  {
    sub_2464A0((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderView);
LABEL_6:
    uint64_t v66 = 1;
    uint64_t v68 = v96;
    uint64_t v67 = v97;
    uint64_t v70 = (uint64_t)v94;
    uint64_t v69 = v95;
    uint64_t v62 = (uint64_t)v92;
    uint64_t v71 = (uint64_t)v93;
    uint64_t v63 = v98;
    goto LABEL_9;
  }
  uint64_t v44 = &v29[v27[7]];
  uint64_t v45 = *(void *)v44;
  char v46 = v44[8];
  sub_10E0C(*(void *)v44, v46);
  char v47 = sub_40900(v45, v46);
  sub_C374(v45, v46);
  sub_2464A0((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderView);
  if ((v47 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v48 = v88;
  sub_246438(a2 + v27[16], v88, type metadata accessor for SeriesQuickActionButtonViewModel);
  v86[1] = v27;
  uint64_t v49 = (uint64_t *)(a2 + v27[19]);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *(void *)uint64_t v16 = swift_getKeyPath();
  unsigned char v16[40] = 0;
  *((void *)v16 + 6) = swift_getKeyPath();
  *((_WORD *)v16 + 44) = 256;
  type metadata accessor for ProfileRestrictions();
  sub_2466F8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  swift_retain();
  *((void *)v16 + 12) = sub_26AD70();
  *((void *)v16 + 13) = v52;
  uint64_t v53 = v87;
  sub_2463D0(v48, (uint64_t)&v16[*(int *)(v87 + 32)], type metadata accessor for SeriesQuickActionButtonViewModel);
  uint64_t v54 = &v16[*(int *)(v53 + 36)];
  *(void *)uint64_t v54 = v51;
  *((void *)v54 + 1) = v50;
  sub_2463D0((uint64_t)v16, v91, type metadata accessor for SeriesQuickActionButtonView);
  uint64_t v55 = *(void *)a2;
  LOBYTE(v50) = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v50);
  char v56 = sub_40900(v55, v50);
  sub_C374(v55, v50);
  uint64_t v58 = (uint64_t)v89;
  uint64_t v57 = (uint64_t)v90;
  uint64_t v59 = (uint64_t)v20;
  uint64_t v60 = (uint64_t)v24;
  uint64_t v61 = (uint64_t)v26;
  uint64_t v62 = (uint64_t)v92;
  uint64_t v63 = v98;
  if (v56) {
    uint64_t v64 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  }
  else {
    uint64_t v64 = sub_26C650();
  }
  uint64_t v72 = v91;
  sub_B0DB0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v59, 0.0, 1, 0.0, 1, v64, v65);
  sub_2464A0(v72, type metadata accessor for SeriesQuickActionButtonView);
  uint64_t v73 = v59;
  char v74 = sub_26B780();
  sub_41378(v58);
  sub_246438(v58, v57, type metadata accessor for SizeConstants.Environment);
  sub_2464A0(v58, type metadata accessor for SizeConstants);
  sub_2464A0(v57, type metadata accessor for SizeConstants.Spacing);
  sub_26A640();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  sub_B678(v73, v60, &qword_2EE940);
  uint64_t v68 = v96;
  uint64_t v83 = v60 + *(int *)(v96 + 36);
  *(unsigned char *)uint64_t v83 = v74;
  *(void *)(v83 + 8) = v76;
  *(void *)(v83 + 16) = v78;
  *(void *)(v83 + 24) = v80;
  *(void *)(v83 + 32) = v82;
  *(unsigned char *)(v83 + 40) = 0;
  sub_B6DC(v73, &qword_2EE940);
  sub_19CC4(v60, v61, &qword_2F7928);
  sub_19CC4(v61, v62, &qword_2F7928);
  uint64_t v66 = 0;
  uint64_t v67 = v97;
  uint64_t v70 = (uint64_t)v94;
  uint64_t v69 = v95;
  uint64_t v71 = (uint64_t)v93;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v62, v66, 1, v68);
  sub_B678(v63, v71, &qword_2F7938);
  sub_B678(v62, v70, &qword_2F7930);
  sub_B678(v71, v67, &qword_2F7938);
  uint64_t v84 = sub_4A98(&qword_2F7948);
  sub_B678(v70, v67 + *(int *)(v84 + 48), &qword_2F7930);
  sub_B6DC(v62, &qword_2F7930);
  sub_B6DC(v63, &qword_2F7938);
  sub_B6DC(v70, &qword_2F7930);
  return sub_B6DC(v71, &qword_2F7938);
}

uint64_t sub_23FFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v118 = a3;
  uint64_t v9 = sub_4A98(&qword_2F78C8);
  __chkstk_darwin(v9 - 8);
  uint64_t v102 = (uint64_t *)((char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_4A98(&qword_2F7950);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_4A98(&qword_2F7958);
  uint64_t v12 = __chkstk_darwin(v109);
  uint64_t v99 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v103 = (uint64_t)&v93 - v14;
  uint64_t v105 = sub_4A98(&qword_2F7960);
  __chkstk_darwin(v105);
  uint64_t v108 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TopLockupMetadataView(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v97 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_4A98(&qword_2F7968);
  __chkstk_darwin(v95);
  uint64_t v96 = (uint64_t)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_4A98(&qword_2F7970);
  uint64_t v19 = __chkstk_darwin(v104);
  uint64_t v94 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v98 = (uint64_t)&v93 - v21;
  uint64_t v22 = sub_4A98(&qword_2F7978);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v107 = (uint64_t)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  unint64_t v106 = (char *)&v93 - v25;
  uint64_t v26 = sub_4A98(&qword_2F7980);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v117 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v116 = (char *)&v93 - v29;
  uint64_t v112 = sub_4A98(&qword_2EAEE8);
  __chkstk_darwin(v112);
  uint64_t v31 = (uint64_t *)((char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v93 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_4A98(&qword_2F7988);
  __chkstk_darwin(v38);
  uint64_t v40 = (double *)((char *)&v93 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_4A98(&qword_2F7990);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  uint64_t v115 = (uint64_t)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  char v46 = (char *)&v93 - v45;
  __chkstk_darwin(v44);
  uint64_t v113 = a1;
  uint64_t v114 = (uint64_t)&v93 - v47;
  uint64_t v48 = *(void *)a2;
  char v49 = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  sub_10E0C(v48, v49);
  int v111 = sub_40900(v48, v49);
  sub_C374(v48, v49);
  int v110 = sub_26B7B0();
  sub_10E0C(v48, v49);
  LOBYTE(a1) = sub_40900(v48, v49);
  sub_C374(v48, v49);
  if ((a1 & 1) == 0)
  {
    type metadata accessor for SeriesRoomHeaderView();
    sub_41378((uint64_t)v37);
    sub_246438((uint64_t)v37, (uint64_t)v34, type metadata accessor for SizeConstants.Environment);
    sub_2464A0((uint64_t)v37, type metadata accessor for SizeConstants);
    sub_2464A0((uint64_t)v34, type metadata accessor for SizeConstants.Spacing);
  }
  sub_26A640();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = type metadata accessor for SeriesRoomHeaderView();
  uint64_t v60 = a2 + *(int *)(v59 + 72);
  uint64_t v61 = (char *)v31 + *(int *)(v112 + 28);
  uint64_t v62 = sub_26A6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v61, v60, v62);
  *uint64_t v31 = KeyPath;
  sub_B678((uint64_t)v31, (uint64_t)v40 + *(int *)(v38 + 36), &qword_2EAEE8);
  *(void *)uint64_t v40 = v113;
  v40[1] = a4;
  void v40[2] = a5;
  *((unsigned char *)v40 + 24) = v111 & 1;
  *((unsigned char *)v40 + 32) = v110;
  *((void *)v40 + 5) = v51;
  *((void *)v40 + 6) = v53;
  *((void *)v40 + 7) = v55;
  *((void *)v40 + 8) = v57;
  *((unsigned char *)v40 + 72) = 0;
  sub_B6DC((uint64_t)v31, &qword_2EAEE8);
  sub_246508();
  sub_26BD20();
  sub_B6DC((uint64_t)v40, &qword_2F7988);
  uint64_t v63 = v114;
  sub_19CC4((uint64_t)v46, v114, &qword_2F7990);
  uint64_t v64 = *(void *)a2;
  char v65 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v65);
  char v66 = sub_40900(v64, v65);
  sub_C374(v64, v65);
  if (v66)
  {
    uint64_t v67 = sub_4A98(&qword_2F79E8);
    uint64_t v68 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v116, 1, 1, v67);
    uint64_t v69 = (uint64_t)v117;
  }
  else
  {
    uint64_t v70 = a2 + *(int *)(v59 + 28);
    uint64_t v71 = *(void *)v70;
    char v72 = *(unsigned char *)(v70 + 8);
    sub_10E0C(*(void *)v70, v72);
    char v73 = sub_40900(v71, v72);
    sub_C374(v71, v72);
    if (v73)
    {
      uint64_t v74 = v97;
      sub_240CC0(v97);
      uint64_t v75 = v96;
      sub_246438(v74, v96, type metadata accessor for TopLockupMetadataView);
      *(_WORD *)(v75 + *(int *)(v95 + 36)) = 256;
      sub_2464A0(v74, type metadata accessor for TopLockupMetadataView);
      uint64_t v76 = v94;
      sub_B678(v75, v94, &qword_2F7968);
      *(void *)(v76 + *(int *)(v104 + 36)) = 0x3FF0000000000000;
      sub_B6DC(v75, &qword_2F7968);
      uint64_t v77 = v98;
      sub_19CC4(v76, v98, &qword_2F7970);
      sub_B678(v77, v108, &qword_2F7970);
      swift_storeEnumTagMultiPayload();
      sub_2465A8(&qword_2F79A0, &qword_2F7970, (void (*)(void))sub_24664C);
      sub_2465A8(&qword_2F79C8, &qword_2F7958, (void (*)(void))sub_246740);
      uint64_t v78 = (uint64_t)v106;
      sub_26B2F0();
      sub_B6DC(v77, &qword_2F7970);
      uint64_t v68 = (uint64_t)v116;
      uint64_t v69 = (uint64_t)v117;
    }
    else
    {
      sub_10E0C(v64, v65);
      char v79 = sub_40900(v64, v65);
      sub_C374(v64, v65);
      uint64_t v69 = (uint64_t)v117;
      uint64_t v78 = (uint64_t)v106;
      if (v79) {
        uint64_t v80 = sub_26B1C0();
      }
      else {
        uint64_t v80 = sub_26B1D0();
      }
      uint64_t v68 = (uint64_t)v116;
      uint64_t v81 = (uint64_t)v102;
      *uint64_t v102 = v80;
      *(void *)(v81 + 8) = 0x403C000000000000;
      *(unsigned char *)(v81 + 16) = 0;
      uint64_t v82 = sub_4A98(&qword_2F7900);
      sub_2412B4(a2, v81 + *(int *)(v82 + 44));
      uint64_t v83 = v101;
      sub_B678(v81, v101, &qword_2F78C8);
      *(_WORD *)(v83 + *(int *)(v100 + 36)) = 256;
      sub_B6DC(v81, &qword_2F78C8);
      uint64_t v84 = v99;
      sub_B678(v83, v99, &qword_2F7950);
      *(void *)(v84 + *(int *)(v109 + 36)) = 0x3FF0000000000000;
      sub_B6DC(v83, &qword_2F7950);
      uint64_t v85 = v103;
      sub_19CC4(v84, v103, &qword_2F7958);
      sub_B678(v85, v108, &qword_2F7958);
      swift_storeEnumTagMultiPayload();
      sub_2465A8(&qword_2F79A0, &qword_2F7970, (void (*)(void))sub_24664C);
      sub_2465A8(&qword_2F79C8, &qword_2F7958, (void (*)(void))sub_246740);
      sub_26B2F0();
      sub_B6DC(v85, &qword_2F7958);
    }
    uint64_t v86 = v107;
    sub_B678(v78, v107, &qword_2F7978);
    sub_B678(v86, v69, &qword_2F7978);
    uint64_t v87 = v69 + *(int *)(sub_4A98(&qword_2F79E0) + 48);
    *(void *)uint64_t v87 = 0;
    *(unsigned char *)(v87 + 8) = 1;
    sub_B6DC(v78, &qword_2F7978);
    sub_B6DC(v86, &qword_2F7978);
    uint64_t v88 = sub_4A98(&qword_2F79E8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v69, 0, 1, v88);
    sub_19CC4(v69, v68, &qword_2F7980);
  }
  uint64_t v89 = v115;
  sub_B678(v63, v115, &qword_2F7990);
  sub_B678(v68, v69, &qword_2F7980);
  uint64_t v90 = v118;
  sub_B678(v89, v118, &qword_2F7990);
  uint64_t v91 = sub_4A98(&qword_2F79F0);
  sub_B678(v69, v90 + *(int *)(v91 + 48), &qword_2F7980);
  sub_B6DC(v68, &qword_2F7980);
  sub_B6DC(v63, &qword_2F7990);
  sub_B6DC(v69, &qword_2F7980);
  return sub_B6DC(v89, &qword_2F7990);
}

uint64_t sub_240CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = sub_4A98(&qword_2EDCA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v4;
  uint64_t v5 = sub_4A98(&qword_2EDCA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EBFE8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v9;
  uint64_t v10 = sub_4A98(&qword_2ED2E0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v28 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t v22 = (int *)type metadata accessor for SeriesRoomHeaderView();
  sub_B678(v1 + v22[9], (uint64_t)v21, &qword_2ED2E0);
  sub_B678(v1 + v22[10], (uint64_t)v19, &qword_2ED2E0);
  sub_B678(v1 + v22[11], (uint64_t)v33, &qword_2EA838);
  sub_B678(v1 + v22[12], (uint64_t)v9, &qword_2EBFE8);
  uint64_t v23 = v30;
  sub_B678(v1 + v22[13], v30, &qword_2EDCA0);
  sub_B678(v1 + v22[14], (uint64_t)v4, &qword_2EDCA8);
  uint64_t v24 = (uint64_t *)(v1 + v22[17]);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  swift_bridgeObjectRetain();
  sub_420BC((uint64_t)v32);
  type metadata accessor for HighlightAttributionViewLoader();
  swift_allocObject();
  HighlightAttributionViewLoader.init(id:provider:)(v26, v25, (uint64_t)v32);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  return TopLockupMetadataView.init(preheader:title:subtitle:author:authorAction:authorImpressionMetrics:narrator:footer:isVibrant:highlightAttributionViewLoader:)((uint64_t)v16, (uint64_t)v21, (uint64_t)v13, (uint64_t)v19, (uint64_t)v33, (uint64_t)v29, v23, (uint64_t)v28, v31, 1);
}

double sub_240FE0()
{
  uint64_t v1 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v0;
  char v8 = *(unsigned char *)(v0 + 8);
  sub_10E0C(*(void *)v0, v8);
  char v9 = sub_40900(v7, v8);
  sub_C374(v7, v8);
  type metadata accessor for SeriesRoomHeaderView();
  sub_41378((uint64_t)v6);
  sub_246438((uint64_t)v6, (uint64_t)v3, type metadata accessor for SizeConstants.Environment);
  sub_2464A0((uint64_t)v6, type metadata accessor for SizeConstants);
  sub_2464A0((uint64_t)v3, type metadata accessor for SizeConstants.Spacing);
  double result = 16.0;
  if (v9) {
    return 12.0;
  }
  return result;
}

double sub_241148()
{
  uint64_t v1 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v0;
  char v8 = *(unsigned char *)(v0 + 8);
  sub_10E0C(*(void *)v0, v8);
  char v9 = sub_40900(v7, v8);
  sub_C374(v7, v8);
  type metadata accessor for SeriesRoomHeaderView();
  sub_41378((uint64_t)v6);
  sub_246438((uint64_t)v6, (uint64_t)v3, type metadata accessor for SizeConstants.Environment);
  sub_2464A0((uint64_t)v6, type metadata accessor for SizeConstants);
  sub_2464A0((uint64_t)v3, type metadata accessor for SizeConstants.Spacing);
  double result = 40.0;
  if (v9) {
    return 24.0;
  }
  return result;
}

uint64_t sub_2412B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SeriesQuickActionButtonView(0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_4A98(&qword_2EE940);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v44 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v41 = (uint64_t)&v40 - v17;
  __chkstk_darwin(v16);
  uint64_t v43 = (uint64_t)&v40 - v18;
  uint64_t v19 = type metadata accessor for TopLockupMetadataView(0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v42 = (uint64_t)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v40 - v22;
  sub_240CC0((uint64_t)&v40 - v22);
  uint64_t v24 = type metadata accessor for SeriesRoomHeaderView();
  sub_246438(a1 + *(int *)(v24 + 64), (uint64_t)v5, type metadata accessor for SeriesQuickActionButtonViewModel);
  uint64_t v25 = (uint64_t *)(a1 + *(int *)(v24 + 76));
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *(void *)uint64_t v10 = swift_getKeyPath();
  unsigned char v10[40] = 0;
  *((void *)v10 + 6) = swift_getKeyPath();
  *((_WORD *)v10 + 44) = 256;
  type metadata accessor for ProfileRestrictions();
  sub_2466F8((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
  swift_retain();
  *((void *)v10 + 12) = sub_26AD70();
  *((void *)v10 + 13) = v28;
  sub_2463D0((uint64_t)v5, (uint64_t)&v10[*(int *)(v7 + 40)], type metadata accessor for SeriesQuickActionButtonViewModel);
  uint64_t v29 = &v10[*(int *)(v7 + 44)];
  *(void *)uint64_t v29 = v27;
  *((void *)v29 + 1) = v26;
  sub_2463D0((uint64_t)v10, (uint64_t)v12, type metadata accessor for SeriesQuickActionButtonView);
  uint64_t v30 = *(void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  sub_10E0C(v30, a1);
  LOBYTE(v26) = sub_40900(v30, a1);
  sub_C374(v30, a1);
  if (v26) {
    uint64_t v31 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  }
  else {
    uint64_t v31 = sub_26C650();
  }
  uint64_t v33 = v41;
  sub_B0DB0(0.0, 1, 0.0, 1, 360.0, 0, 0.0, 1, v41, 0.0, 1, 0.0, 1, v31, v32);
  sub_2464A0((uint64_t)v12, type metadata accessor for SeriesQuickActionButtonView);
  uint64_t v34 = v43;
  sub_19CC4(v33, v43, &qword_2EE940);
  uint64_t v35 = v42;
  sub_246438((uint64_t)v23, v42, type metadata accessor for TopLockupMetadataView);
  uint64_t v36 = v44;
  sub_B678(v34, v44, &qword_2EE940);
  uint64_t v37 = v45;
  sub_246438(v35, v45, type metadata accessor for TopLockupMetadataView);
  uint64_t v38 = sub_4A98(&qword_2F7908);
  sub_B678(v36, v37 + *(int *)(v38 + 48), &qword_2EE940);
  sub_B6DC(v34, &qword_2EE940);
  sub_2464A0((uint64_t)v23, type metadata accessor for TopLockupMetadataView);
  sub_B6DC(v36, &qword_2EE940);
  return sub_2464A0(v35, type metadata accessor for TopLockupMetadataView);
}

uint64_t sub_241748()
{
  uint64_t v0 = sub_26AAD0();
  sub_6E18(v0, qword_2F77C8);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2F77C8);
  sub_26DA50();
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v1, enum case for CoordinateSpace.named(_:), v0);
}

uint64_t static CoordinateSpace.fakeScrollContents.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_26AAD0();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F77C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for SeriesRoomHeaderView()
{
  uint64_t result = qword_2F7840;
  if (!qword_2F7840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24191C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_26AD90();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_241948()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for SeriesRoomHeaderView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10E0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (_WORD *)(a1 + v9);
    uint64_t v11 = (_WORD *)(a2 + v9);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v10 = *v11;
      uint64_t v12 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)v10 + v13;
      uint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
      uint64_t v17 = v12[8];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      void v18[2] = v19[2];
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[6];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    if (*(unsigned char *)(a2 + v21 + 40))
    {
      uint64_t v24 = *(void *)(v23 + 24);
      if (v24)
      {
        uint64_t v25 = *(void *)(v23 + 32);
        *(void *)(v22 + 24) = v24;
        *(void *)(v22 + 32) = v25;
        (**(void (***)(uint64_t))(v24 - 8))(v22);
      }
      else
      {
        long long v26 = *(_OWORD *)(v23 + 16);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *(_OWORD *)(v22 + 16) = v26;
        *(void *)(v22 + 32) = *(void *)(v23 + 32);
      }
      *(unsigned char *)(v22 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 40) = 0;
      swift_retain();
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = a1 + v27;
    uint64_t v29 = a2 + v27;
    uint64_t v30 = *(void *)v29;
    char v31 = *(unsigned char *)(v29 + 8);
    sub_10E0C(*(void *)v29, v31);
    *(void *)uint64_t v28 = v30;
    *(unsigned char *)(v28 + 8) = v31;
    uint64_t v32 = a3[8];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = a2 + v32;
    uint64_t v35 = *(void *)v34;
    uint64_t v36 = *(void *)(v34 + 8);
    LOBYTE(v28) = *(unsigned char *)(v34 + 16);
    sub_2425B0(*(void *)v34, v36, v28);
    *(void *)uint64_t v33 = v35;
    *(void *)(v33 + 8) = v36;
    *(unsigned char *)(v33 + 16) = v28;
    uint64_t v37 = a3[9];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (const void *)(a2 + v37);
    uint64_t v40 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v42 = a3[10];
    uint64_t v43 = (void *)(a1 + v42);
    uint64_t v44 = (const void *)(a2 + v42);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v43, v44, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v45 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v46 = a3[11];
    uint64_t v47 = a1 + v46;
    uint64_t v48 = a2 + v46;
    uint64_t v49 = *(void *)(a2 + v46 + 24);
    if (v49)
    {
      uint64_t v50 = *(void *)(v48 + 32);
      *(void *)(v47 + 24) = v49;
      *(void *)(v47 + 32) = v50;
      (**(void (***)(void))(v49 - 8))();
    }
    else
    {
      long long v51 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v51;
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
    }
    uint64_t v52 = a3[12];
    uint64_t v53 = (void *)(a1 + v52);
    uint64_t v54 = (const void *)(a2 + v52);
    uint64_t v55 = sub_26CE50();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = sub_4A98(&qword_2EBFE8);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v58 = a3[13];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (const void *)(a2 + v58);
    uint64_t v61 = sub_4A98(&qword_2EDCA0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      uint64_t v62 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 16))(v59, v60, v62);
      uint64_t v63 = sub_4A98(&qword_2EDCD0);
      *((unsigned char *)v59 + *(int *)(v63 + 48)) = *((unsigned char *)v60 + *(int *)(v63 + 48));
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v64 = a3[14];
    char v65 = (char *)(a1 + v64);
    char v66 = (char *)(a2 + v64);
    uint64_t v67 = sub_4A98(&qword_2EDCA8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      uint64_t v68 = sub_26A220();
      uint64_t v69 = *(void *)(v68 - 8);
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      v70(v65, v66, v68);
      uint64_t v126 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
      uint64_t v71 = v126[5];
      __dst = &v65[v71];
      char v72 = &v66[v71];
      double v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      if (v128(&v66[v71], 1, v68))
      {
        uint64_t v73 = sub_4A98(&qword_2EA0C0);
        memcpy(__dst, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        v70(__dst, v72, v68);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v68);
      }
      uint64_t v74 = v126[6];
      uint64_t v75 = &v65[v74];
      uint64_t v76 = &v66[v74];
      if (v128(&v66[v74], 1, v68))
      {
        uint64_t v77 = sub_4A98(&qword_2EA0C0);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
        uint64_t v78 = v69;
      }
      else
      {
        v70(v75, v76, v68);
        uint64_t v78 = v69;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v75, 0, 1, v68);
      }
      uint64_t v79 = v126[7];
      uint64_t v80 = &v65[v79];
      uint64_t v81 = &v66[v79];
      if (v128(v81, 1, v68))
      {
        uint64_t v82 = sub_4A98(&qword_2EA0C0);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        v70(v80, v81, v68);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v80, 0, 1, v68);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v83 = a3[16];
    *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
    uint64_t v84 = a1 + v83;
    uint64_t v85 = a2 + v83;
    uint64_t v86 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        long long v89 = *(_OWORD *)(v85 + 24);
        *(_OWORD *)(v84 + 24) = v89;
        (**(void (***)(uint64_t, uint64_t))(v89 - 8))(v84, v85);
        uint64_t v129 = sub_4A98(&qword_2EFAE8);
        uint64_t v90 = *(int *)(v129 + 48);
        uint64_t v91 = (void *)(v84 + v90);
        unint64_t v92 = (void *)(v85 + v90);
        uint64_t v93 = type metadata accessor for CardInfo();
        uint64_t v94 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
        {
          uint64_t v95 = sub_4A98(&qword_2EDB60);
          memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          *uint64_t v91 = *v92;
          uint64_t v96 = *(int *)(v93 + 20);
          uint64_t v125 = (char *)v92 + v96;
          unsigned int v127 = (char *)v91 + v96;
          uint64_t v97 = sub_269840();
          uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
          swift_bridgeObjectRetain();
          v124(v127, v125, v97);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
        }
        uint64_t v98 = *(int *)(v129 + 64);
        uint64_t v99 = v84 + v98;
        uint64_t v100 = v85 + v98;
        uint64_t v101 = sub_269C90();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        goto LABEL_49;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)v84, (const void *)v85, *(void *)(*(void *)(v86 - 8) + 64));
LABEL_50:
        uint64_t v102 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
        uint64_t v103 = *(int *)(v102 + 20);
        uint64_t v104 = v84 + v103;
        uint64_t v105 = v85 + v103;
        uint64_t v106 = sub_269B30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
        uint64_t v107 = *(int *)(v102 + 24);
        long long v108 = *(_OWORD *)(v85 + v107 + 24);
        *(_OWORD *)(v84 + v107 + 24) = v108;
        (**(void (***)(void))(v108 - 8))();
        uint64_t v109 = a3[17];
        uint64_t v110 = a3[18];
        int v111 = (void *)(a1 + v109);
        uint64_t v112 = (void *)(a2 + v109);
        uint64_t v113 = v112[1];
        *int v111 = *v112;
        v111[1] = v113;
        uint64_t v114 = a1 + v110;
        uint64_t v115 = a2 + v110;
        uint64_t v116 = sub_26A6E0();
        uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v117(v114, v115, v116);
        uint64_t v118 = a3[19];
        unsigned int v119 = (void *)(a1 + v118);
        uint64_t v120 = (void *)(a2 + v118);
        uint64_t v121 = v120[1];
        *unsigned int v119 = *v120;
        v119[1] = v121;
        goto LABEL_51;
      }
    }
    long long v88 = *(_OWORD *)(v85 + 24);
    *(_OWORD *)(v84 + 24) = v88;
    (**(void (***)(uint64_t, uint64_t))(v88 - 8))(v84, v85);
LABEL_49:
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  uint64_t v20 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
LABEL_51:
  swift_retain();
  return a1;
}

uint64_t sub_2425B0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for SeriesRoomHeaderView(uint64_t a1, int *a2)
{
  sub_C374(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for SizeConstants.Environment(0) + 24);
    uint64_t v6 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      _s7BooksUI13AnyPagedFrameVwxx_0(v7);
    }
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_4695C(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8), *(unsigned char *)(a1 + a2[8] + 16));
  uint64_t v8 = a1 + a2[9];
  sub_4A98(&qword_2ED2E0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v9 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[10];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v11 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[11];
  if (*(void *)(v12 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v12);
  }
  uint64_t v13 = a1 + a2[12];
  uint64_t v14 = sub_26CE50();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v16 = a1 + a2[13];
  sub_4A98(&qword_2EDCA0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v17 = sub_26A220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + a2[14];
  sub_4A98(&qword_2EDCA8);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v19 = sub_26A220();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v21(v18, v19);
    uint64_t v22 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v23 = v18 + v22[5];
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    if (!v24(v23, 1, v19)) {
      v21(v23, v19);
    }
    uint64_t v25 = v18 + v22[6];
    if (!v24(v25, 1, v19)) {
      v21(v25, v19);
    }
    uint64_t v26 = v18 + v22[7];
    if (!v24(v26, 1, v19)) {
      v21(v26, v19);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = a1 + a2[16];
  type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_28:
    _s7BooksUI13AnyPagedFrameVwxx_0(v27);
    goto LABEL_32;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  _s7BooksUI13AnyPagedFrameVwxx_0(v27);
  uint64_t v29 = sub_4A98(&qword_2EFAE8);
  uint64_t v30 = v27 + *(int *)(v29 + 48);
  uint64_t v31 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31))
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v30 + *(int *)(v31 + 20);
    uint64_t v33 = sub_269840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  uint64_t v34 = v27 + *(int *)(v29 + 64);
  uint64_t v35 = sub_269C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
LABEL_32:
  uint64_t v36 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v37 = v27 + *(int *)(v36 + 20);
  uint64_t v38 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  _s7BooksUI13AnyPagedFrameVwxx_0(v27 + *(int *)(v36 + 24));
  swift_bridgeObjectRelease();
  uint64_t v39 = a1 + a2[18];
  uint64_t v40 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);

  return swift_release();
}

uint64_t initializeWithCopy for SeriesRoomHeaderView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (_WORD *)(a1 + v8);
  uint64_t v10 = (_WORD *)(a2 + v8);
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _WORD *v9 = *v10;
    uint64_t v11 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = (char *)v10 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
    uint64_t v16 = v11[8];
    uint64_t v17 = (char *)v9 + v16;
    uint64_t v18 = (char *)v10 + v16;
    v17[2] = v18[2];
    *(_WORD *)uint64_t v17 = *(_WORD *)v18;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  if (*(unsigned char *)(a2 + v19 + 40))
  {
    uint64_t v22 = *(void *)(v21 + 24);
    if (v22)
    {
      uint64_t v23 = *(void *)(v21 + 32);
      *(void *)(v20 + 24) = v22;
      *(void *)(v20 + 32) = v23;
      (**(void (***)(uint64_t))(v22 - 8))(v20);
    }
    else
    {
      long long v24 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *(_OWORD *)(v20 + 16) = v24;
      *(void *)(v20 + 32) = *(void *)(v21 + 32);
    }
    *(unsigned char *)(v20 + 40) = 1;
  }
  else
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *(unsigned char *)(v20 + 40) = 0;
    swift_retain();
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_10E0C(*(void *)v27, v29);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v29;
  uint64_t v30 = a3[8];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *(void *)(v32 + 8);
  LOBYTE(v26) = *(unsigned char *)(v32 + 16);
  sub_2425B0(*(void *)v32, v34, v26);
  *(void *)uint64_t v31 = v33;
  *(void *)(v31 + 8) = v34;
  *(unsigned char *)(v31 + 16) = v26;
  uint64_t v35 = a3[9];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_4A98(&qword_2ED2E0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3[10];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v41, v42, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v43 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)(a2 + v44 + 24);
  if (v47)
  {
    uint64_t v48 = *(void *)(v46 + 32);
    *(void *)(v45 + 24) = v47;
    *(void *)(v45 + 32) = v48;
    (**(void (***)(void))(v47 - 8))();
  }
  else
  {
    long long v49 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v49;
    *(void *)(v45 + 32) = *(void *)(v46 + 32);
  }
  uint64_t v50 = a3[12];
  long long v51 = (void *)(a1 + v50);
  uint64_t v52 = (const void *)(a2 + v50);
  uint64_t v53 = sub_26CE50();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = sub_4A98(&qword_2EBFE8);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v56 = a3[13];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (const void *)(a2 + v56);
  uint64_t v59 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    uint64_t v60 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v57, v58, v60);
    uint64_t v61 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v57 + *(int *)(v61 + 48)) = *((unsigned char *)v58 + *(int *)(v61 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v62 = a3[14];
  uint64_t v63 = (char *)(a1 + v62);
  uint64_t v64 = (char *)(a2 + v62);
  uint64_t v65 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    uint64_t v66 = sub_26A220();
    uint64_t v67 = *(void *)(v66 - 8);
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v68(v63, v64, v66);
    uint64_t v69 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v70 = *(int *)(v69 + 20);
    __dst = &v63[v70];
    uint64_t v126 = v69;
    uint64_t v71 = &v64[v70];
    double v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    uint64_t v123 = v67;
    if (v128(&v64[v70], 1, v66))
    {
      uint64_t v72 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      v68(__dst, v71, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v66);
    }
    uint64_t v73 = *(int *)(v126 + 24);
    uint64_t v74 = &v63[v73];
    uint64_t v75 = &v64[v73];
    if (v128(&v64[v73], 1, v66))
    {
      uint64_t v76 = sub_4A98(&qword_2EA0C0);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      uint64_t v77 = v123;
    }
    else
    {
      v68(v74, v75, v66);
      uint64_t v77 = v123;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v74, 0, 1, v66);
    }
    uint64_t v78 = *(int *)(v126 + 28);
    uint64_t v79 = &v63[v78];
    uint64_t v80 = &v64[v78];
    if (v128(v80, 1, v66))
    {
      uint64_t v81 = sub_4A98(&qword_2EA0C0);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      v68(v79, v80, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v79, 0, 1, v66);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v82 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  uint64_t v85 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_40;
    case 1:
      long long v88 = *(_OWORD *)(v84 + 24);
      *(_OWORD *)(v83 + 24) = v88;
      (**(void (***)(uint64_t, uint64_t))(v88 - 8))(v83, v84);
      uint64_t v129 = sub_4A98(&qword_2EFAE8);
      uint64_t v89 = *(int *)(v129 + 48);
      uint64_t v90 = (void *)(v83 + v89);
      uint64_t v91 = (void *)(v84 + v89);
      uint64_t v92 = type metadata accessor for CardInfo();
      uint64_t v93 = *(void *)(v92 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
      {
        uint64_t v94 = sub_4A98(&qword_2EDB60);
        memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        void *v90 = *v91;
        uint64_t v95 = *(int *)(v92 + 20);
        __dsta = (char *)v91 + v95;
        unsigned int v127 = (char *)v90 + v95;
        uint64_t v96 = sub_269840();
        uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v122(v127, __dsta, v96);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
      }
      uint64_t v97 = *(int *)(v129 + 64);
      uint64_t v98 = v83 + v97;
      uint64_t v99 = v84 + v97;
      uint64_t v100 = sub_269C90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
      goto LABEL_47;
    case 0:
LABEL_40:
      long long v87 = *(_OWORD *)(v84 + 24);
      *(_OWORD *)(v83 + 24) = v87;
      (**(void (***)(uint64_t, uint64_t))(v87 - 8))(v83, v84);
LABEL_47:
      swift_storeEnumTagMultiPayload();
      goto LABEL_48;
  }
  memcpy((void *)v83, (const void *)v84, *(void *)(*(void *)(v85 - 8) + 64));
LABEL_48:
  uint64_t v101 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v102 = *(int *)(v101 + 20);
  uint64_t v103 = v83 + v102;
  uint64_t v104 = v84 + v102;
  uint64_t v105 = sub_269B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
  uint64_t v106 = *(int *)(v101 + 24);
  long long v107 = *(_OWORD *)(v84 + v106 + 24);
  *(_OWORD *)(v83 + v106 + 24) = v107;
  (**(void (***)(void))(v107 - 8))();
  uint64_t v108 = a3[17];
  uint64_t v109 = a3[18];
  uint64_t v110 = (void *)(a1 + v108);
  int v111 = (void *)(a2 + v108);
  uint64_t v112 = v111[1];
  *uint64_t v110 = *v111;
  v110[1] = v112;
  uint64_t v113 = a1 + v109;
  uint64_t v114 = a2 + v109;
  uint64_t v115 = sub_26A6E0();
  uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 16);
  swift_bridgeObjectRetain();
  v116(v113, v114, v115);
  uint64_t v117 = a3[19];
  uint64_t v118 = (void *)(a1 + v117);
  unsigned int v119 = (void *)(a2 + v117);
  uint64_t v120 = v119[1];
  *uint64_t v118 = *v119;
  v118[1] = v120;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SeriesRoomHeaderView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10E0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (unsigned char *)(a1 + v10);
    uint64_t v12 = (unsigned char *)(a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      uint64_t v13 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v14 = v13[6];
      uint64_t v15 = &v11[v14];
      uint64_t v16 = &v12[v14];
      uint64_t v17 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      uint64_t v18 = v13[8];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      char v21 = v20[2];
      *(_WORD *)uint64_t v19 = *(_WORD *)v20;
      v19[2] = v21;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[6];
    uint64_t v23 = a1 + v22;
    long long v24 = (long long *)(a2 + v22);
    sub_B6DC(a1 + v22, &qword_2EBC68);
    if (*((unsigned char *)v24 + 40))
    {
      uint64_t v25 = *((void *)v24 + 3);
      if (v25)
      {
        *(void *)(v23 + 24) = v25;
        *(void *)(v23 + 32) = *((void *)v24 + 4);
        (**(void (***)(uint64_t, long long *))(v25 - 8))(v23, v24);
      }
      else
      {
        long long v26 = *v24;
        long long v27 = v24[1];
        *(void *)(v23 + 32) = *((void *)v24 + 4);
        *(_OWORD *)uint64_t v23 = v26;
        *(_OWORD *)(v23 + 16) = v27;
      }
      *(unsigned char *)(v23 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      *(unsigned char *)(v23 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v28 = a3[7];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_10E0C(*(void *)v30, v32);
  uint64_t v33 = *(void *)v29;
  char v34 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = v32;
  sub_C374(v33, v34);
  uint64_t v35 = a3[8];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *(void *)(v37 + 8);
  LOBYTE(v29) = *(unsigned char *)(v37 + 16);
  sub_2425B0(*(void *)v37, v39, v29);
  uint64_t v40 = *(void *)v36;
  uint64_t v41 = *(void *)(v36 + 8);
  char v42 = *(unsigned char *)(v36 + 16);
  *(void *)uint64_t v36 = v38;
  *(void *)(v36 + 8) = v39;
  *(unsigned char *)(v36 + 16) = v29;
  sub_4695C(v40, v41, v42);
  if (a1 != a2)
  {
    uint64_t v43 = a3[9];
    uint64_t v44 = (void *)(a1 + v43);
    uint64_t v45 = (const void *)(a2 + v43);
    sub_B6DC(a1 + v43, &qword_2ED2E0);
    uint64_t v46 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 16))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v48 = a3[10];
    long long v49 = (void *)(a1 + v48);
    uint64_t v50 = (const void *)(a2 + v48);
    sub_B6DC(a1 + v48, &qword_2ED2E0);
    uint64_t v51 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v52 = sub_26A220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v49, v50, v52);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v53 = a3[11];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v56 = *(void *)(a2 + v53 + 24);
  if (*(void *)(a1 + v53 + 24))
  {
    if (v56)
    {
      sub_16D58((uint64_t *)v54, v55);
      goto LABEL_25;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(v54);
  }
  else if (v56)
  {
    *(void *)(v54 + 24) = v56;
    *(void *)(v54 + 32) = v55[4];
    (**(void (***)(uint64_t, long long *))(v56 - 8))(v54, (long long *)v55);
    goto LABEL_25;
  }
  long long v57 = *(_OWORD *)v55;
  long long v58 = *((_OWORD *)v55 + 1);
  *(void *)(v54 + 32) = v55[4];
  *(_OWORD *)uint64_t v54 = v57;
  *(_OWORD *)(v54 + 16) = v58;
LABEL_25:
  uint64_t v59 = a3[12];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = sub_26CE50();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v60, v61, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      if (a1 == a2) {
        goto LABEL_49;
      }
      goto LABEL_32;
    }
  }
  else
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v60, v61, v62);
      if (a1 == a2) {
        goto LABEL_49;
      }
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
  }
  uint64_t v67 = sub_4A98(&qword_2EBFE8);
  memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_49;
  }
LABEL_32:
  uint64_t v68 = a3[13];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (const void *)(a2 + v68);
  sub_B6DC(a1 + v68, &qword_2EDCA0);
  uint64_t v71 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    uint64_t v72 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v72 - 8) + 16))(v69, v70, v72);
    uint64_t v73 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v69 + *(int *)(v73 + 48)) = *((unsigned char *)v70 + *(int *)(v73 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v74 = a3[14];
  uint64_t v75 = (char *)(a1 + v74);
  uint64_t v76 = (char *)(a2 + v74);
  sub_B6DC(a1 + v74, &qword_2EDCA8);
  uint64_t v77 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    uint64_t v78 = sub_26A220();
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v80(v75, v76, v78);
    uint64_t v81 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v82 = *(int *)(v81 + 20);
    __dst = &v75[v82];
    uint64_t v133 = v81;
    uint64_t v83 = &v76[v82];
    uint64_t v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
    uint64_t v130 = v79;
    if (v135(&v76[v82], 1, v78))
    {
      uint64_t v84 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      v80(__dst, v83, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v78);
    }
    uint64_t v85 = *(int *)(v133 + 24);
    uint64_t v86 = &v75[v85];
    long long v87 = &v76[v85];
    if (v135(&v76[v85], 1, v78))
    {
      uint64_t v88 = sub_4A98(&qword_2EA0C0);
      memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
      uint64_t v89 = v130;
    }
    else
    {
      v80(v86, v87, v78);
      uint64_t v89 = v130;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v86, 0, 1, v78);
    }
    uint64_t v90 = *(int *)(v133 + 28);
    uint64_t v91 = &v75[v90];
    uint64_t v92 = &v76[v90];
    if (v135(v92, 1, v78))
    {
      uint64_t v93 = sub_4A98(&qword_2EA0C0);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      v80(v91, v92, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v91, 0, 1, v78);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_49:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[16];
  uint64_t v95 = (void *)(a1 + v94);
  uint64_t v96 = (void *)(a2 + v94);
  if (a1 != a2)
  {
    sub_2464A0(a1 + v94, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v97 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_53;
      case 1:
        uint64_t v100 = v96[3];
        v95[3] = v100;
        v95[4] = v96[4];
        (**(void (***)(void *, void *))(v100 - 8))(v95, v96);
        uint64_t v137 = sub_4A98(&qword_2EFAE8);
        uint64_t v101 = *(int *)(v137 + 48);
        uint64_t v102 = (void *)((char *)v95 + v101);
        uint64_t v103 = (void *)((char *)v96 + v101);
        uint64_t v104 = type metadata accessor for CardInfo();
        uint64_t v105 = *(void *)(v104 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
        {
          uint64_t v106 = sub_4A98(&qword_2EDB60);
          memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          *uint64_t v102 = *v103;
          uint64_t v107 = *(int *)(v104 + 20);
          uint64_t v134 = (char *)v103 + v107;
          uint64_t v136 = (char *)v102 + v107;
          uint64_t v108 = sub_269840();
          unint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
          swift_bridgeObjectRetain();
          v131(v136, v134, v108);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        }
        uint64_t v109 = *(int *)(v137 + 64);
        uint64_t v110 = (char *)v95 + v109;
        int v111 = (char *)v96 + v109;
        uint64_t v112 = sub_269C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
        goto LABEL_60;
      case 0:
LABEL_53:
        uint64_t v99 = v96[3];
        v95[3] = v99;
        v95[4] = v96[4];
        (**(void (***)(void *, void *))(v99 - 8))(v95, v96);
LABEL_60:
        swift_storeEnumTagMultiPayload();
        goto LABEL_61;
    }
    memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
  }
LABEL_61:
  uint64_t v113 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v114 = *(int *)(v113 + 20);
  uint64_t v115 = (char *)v95 + v114;
  uint64_t v116 = (char *)v96 + v114;
  uint64_t v117 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 24))(v115, v116, v117);
  sub_16D58((void *)((char *)v95 + *(int *)(v113 + 24)), (void *)((char *)v96 + *(int *)(v113 + 24)));
  uint64_t v118 = a3[17];
  unsigned int v119 = (void *)(a1 + v118);
  uint64_t v120 = (void *)(a2 + v118);
  *unsigned int v119 = *v120;
  v119[1] = v120[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v121 = a3[18];
  uint64_t v122 = a1 + v121;
  uint64_t v123 = a2 + v121;
  uint64_t v124 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 24))(v122, v123, v124);
  uint64_t v125 = a3[19];
  uint64_t v126 = (void *)(a1 + v125);
  unsigned int v127 = (void *)(a2 + v125);
  uint64_t v128 = v127[1];
  *uint64_t v126 = *v127;
  v126[1] = v128;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SeriesRoomHeaderView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (_WORD *)(a1 + v6);
  uint64_t v8 = (_WORD *)(a2 + v6);
  uint64_t v9 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *char v7 = *v8;
    uint64_t v10 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(void *)((char *)v7 + v10[7]) = *(void *)((char *)v8 + v10[7]);
    uint64_t v15 = v10[8];
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)v8 + v15;
    v16[2] = v17[2];
    *(_WORD *)uint64_t v16 = *(_WORD *)v17;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = (_OWORD *)(a1 + v18);
  char v21 = (_OWORD *)(a2 + v18);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(_OWORD *)((char *)v20 + 25) = *(_OWORD *)((char *)v21 + 25);
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  uint64_t v25 = a3[8];
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  uint64_t v29 = (void *)(a1 + v26);
  uint64_t v30 = (const void *)(a2 + v26);
  uint64_t v31 = sub_4A98(&qword_2ED2E0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v33 = a3[10];
  char v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v34, v35, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v36 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = a3[11];
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  char v42 = (void *)(a1 + v38);
  uint64_t v43 = (const void *)(a2 + v38);
  uint64_t v44 = sub_26CE50();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = sub_4A98(&qword_2EBFE8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v47 = a3[13];
  uint64_t v48 = (void *)(a1 + v47);
  long long v49 = (const void *)(a2 + v47);
  uint64_t v50 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v51 = sub_26A220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
    uint64_t v52 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v48 + *(int *)(v52 + 48)) = *((unsigned char *)v49 + *(int *)(v52 + 48));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v53 = a3[14];
  uint64_t v54 = (char *)(a1 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  uint64_t v56 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    uint64_t v57 = sub_26A220();
    uint64_t v58 = *(void *)(v57 - 8);
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v59(v54, v55, v57);
    uint64_t v105 = (int *)type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v60 = v105[5];
    __dst = &v54[v60];
    uint64_t v61 = &v55[v60];
    uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    if (v107(&v55[v60], 1, v57))
    {
      uint64_t v62 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v59(__dst, v61, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v57);
    }
    uint64_t v63 = v105[6];
    uint64_t v64 = &v54[v63];
    int v65 = &v55[v63];
    if (v107(&v55[v63], 1, v57))
    {
      uint64_t v66 = sub_4A98(&qword_2EA0C0);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v58;
    }
    else
    {
      v59(v64, v65, v57);
      uint64_t v67 = v58;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v64, 0, 1, v57);
    }
    uint64_t v68 = v105[7];
    uint64_t v69 = &v54[v68];
    uint64_t v70 = &v55[v68];
    if (v107(v70, 1, v57))
    {
      uint64_t v71 = sub_4A98(&qword_2EA0C0);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      v59(v69, v70, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v69, 0, 1, v57);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v72 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v73 = (_OWORD *)(a1 + v72);
  uint64_t v74 = (_OWORD *)(a2 + v72);
  uint64_t v75 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v76 = v74[1];
    *uint64_t v73 = *v74;
    v73[1] = v76;
    *((void *)v73 + 4) = *((void *)v74 + 4);
    uint64_t v108 = sub_4A98(&qword_2EFAE8);
    uint64_t v77 = *(int *)(v108 + 48);
    uint64_t v78 = (void *)((char *)v73 + v77);
    uint64_t v79 = (void *)((char *)v74 + v77);
    uint64_t v80 = type metadata accessor for CardInfo();
    uint64_t v81 = *(void *)(v80 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = sub_4A98(&qword_2EDB60);
      memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      *uint64_t v78 = *v79;
      uint64_t v83 = *(int *)(v80 + 20);
      uint64_t v106 = (char *)v78 + v83;
      uint64_t v84 = (char *)v79 + v83;
      uint64_t v85 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v106, v84, v85);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    uint64_t v86 = *(int *)(v108 + 64);
    long long v87 = (char *)v73 + v86;
    uint64_t v88 = (char *)v74 + v86;
    uint64_t v89 = sub_269C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  uint64_t v90 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v91 = *(int *)(v90 + 20);
  uint64_t v92 = (char *)v73 + v91;
  uint64_t v93 = (char *)v74 + v91;
  uint64_t v94 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
  uint64_t v95 = *(int *)(v90 + 24);
  uint64_t v96 = (char *)v73 + v95;
  uint64_t v97 = (char *)v74 + v95;
  long long v98 = *((_OWORD *)v97 + 1);
  *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
  *((_OWORD *)v96 + 1) = v98;
  *((void *)v96 + 4) = *((void *)v97 + 4);
  uint64_t v99 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  uint64_t v100 = a1 + v99;
  uint64_t v101 = a2 + v99;
  uint64_t v102 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for SeriesRoomHeaderView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_C374(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (_WORD *)(a1 + v10);
    uint64_t v12 = (_WORD *)((char *)a2 + v10);
    sub_B6DC(a1 + v10, &qword_2EB708);
    uint64_t v13 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v11 = *v12;
      uint64_t v14 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = (char *)v11 + v15;
      uint64_t v17 = (char *)v12 + v15;
      uint64_t v18 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)((char *)v11 + v14[7]) = *(void *)((char *)v12 + v14[7]);
      uint64_t v19 = v14[8];
      uint64_t v20 = (char *)v11 + v19;
      char v21 = (char *)v12 + v19;
      v20[2] = v21[2];
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v22 = a3[6];
    uint64_t v23 = (_OWORD *)((char *)a2 + v22);
    uint64_t v24 = (_OWORD *)(a1 + v22);
    sub_B6DC(a1 + v22, &qword_2EBC68);
    long long v25 = v23[1];
    *uint64_t v24 = *v23;
    v24[1] = v25;
    *(_OWORD *)((char *)v24 + 25) = *(_OWORD *)((char *)v23 + 25);
  }
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  uint64_t v30 = *(void *)v27;
  char v31 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = (_BYTE)v28;
  sub_C374(v30, v31);
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t)a2 + v32;
  char v35 = *(unsigned char *)(v34 + 16);
  uint64_t v36 = *(void *)v33;
  uint64_t v37 = *(void *)(v33 + 8);
  char v38 = *(unsigned char *)(v33 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(unsigned char *)(v33 + 16) = v35;
  sub_4695C(v36, v37, v38);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v39 = a3[9];
    uint64_t v40 = (void *)(a1 + v39);
    long long v41 = (char *)a2 + v39;
    sub_B6DC(a1 + v39, &qword_2ED2E0);
    uint64_t v42 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v44 = a3[10];
    uint64_t v45 = (void *)(a1 + v44);
    uint64_t v46 = (char *)a2 + v44;
    sub_B6DC(a1 + v44, &qword_2ED2E0);
    uint64_t v47 = sub_4A98(&qword_2ED2E0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_26A220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v45, v46, v48);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v49 = a3[11];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = (uint64_t)a2 + v49;
  if (*(void *)(a1 + v49 + 24)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(v50);
  }
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  uint64_t v53 = a3[12];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = sub_26CE50();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      if ((uint64_t *)a1 == a2) {
        goto LABEL_39;
      }
      goto LABEL_22;
    }
  }
  else
  {
    if (!v60)
    {
      (*(void (**)(void *, char *, uint64_t))(v57 + 40))(v54, v55, v56);
      if ((uint64_t *)a1 == a2) {
        goto LABEL_39;
      }
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v54, v56);
  }
  uint64_t v61 = sub_4A98(&qword_2EBFE8);
  memcpy(v54, v55, *(void *)(*(void *)(v61 - 8) + 64));
  if ((uint64_t *)a1 == a2) {
    goto LABEL_39;
  }
LABEL_22:
  uint64_t v62 = a3[13];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (char *)a2 + v62;
  sub_B6DC(a1 + v62, &qword_2EDCA0);
  uint64_t v65 = sub_4A98(&qword_2EDCA0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    uint64_t v66 = sub_26A220();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v63, v64, v66);
    uint64_t v67 = sub_4A98(&qword_2EDCD0);
    *((unsigned char *)v63 + *(int *)(v67 + 48)) = v64[*(int *)(v67 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v68 = a3[14];
  uint64_t v69 = (char *)(a1 + v68);
  uint64_t v70 = (char *)a2 + v68;
  sub_B6DC(a1 + v68, &qword_2EDCA8);
  uint64_t v71 = sub_4A98(&qword_2EDCA8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    uint64_t v72 = sub_26A220();
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
    v74(v69, v70, v72);
    uint64_t v75 = type metadata accessor for TopLockupMetadataView.Footer(0);
    uint64_t v76 = *(int *)(v75 + 20);
    __dst = &v69[v76];
    uint64_t v127 = v75;
    uint64_t v77 = &v70[v76];
    uint64_t v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v125 = v73;
    if (v128(&v70[v76], 1, v72))
    {
      uint64_t v78 = sub_4A98(&qword_2EA0C0);
      memcpy(__dst, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      v74(__dst, v77, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v72);
    }
    uint64_t v79 = *(int *)(v127 + 24);
    uint64_t v80 = &v69[v79];
    uint64_t v81 = &v70[v79];
    if (v128(&v70[v79], 1, v72))
    {
      uint64_t v82 = sub_4A98(&qword_2EA0C0);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      uint64_t v83 = v125;
    }
    else
    {
      v74(v80, v81, v72);
      uint64_t v83 = v125;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v80, 0, 1, v72);
    }
    uint64_t v84 = *(int *)(v127 + 28);
    uint64_t v85 = &v69[v84];
    uint64_t v86 = &v70[v84];
    if (v128(v86, 1, v72))
    {
      uint64_t v87 = sub_4A98(&qword_2EA0C0);
      memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      v74(v85, v86, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v72);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_39:
  *(void *)(a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v88 = a3[16];
  uint64_t v89 = (_OWORD *)(a1 + v88);
  uint64_t v90 = (_OWORD *)((char *)a2 + v88);
  if ((uint64_t *)a1 != a2)
  {
    sub_2464A0(a1 + v88, type metadata accessor for SeriesQuickActionButtonViewModel.Style);
    uint64_t v91 = type metadata accessor for SeriesQuickActionButtonViewModel.Style(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v92 = v90[1];
      _OWORD *v89 = *v90;
      v89[1] = v92;
      *((void *)v89 + 4) = *((void *)v90 + 4);
      uint64_t v130 = sub_4A98(&qword_2EFAE8);
      uint64_t v93 = *(int *)(v130 + 48);
      uint64_t v94 = (void *)((char *)v89 + v93);
      uint64_t v95 = (void *)((char *)v90 + v93);
      uint64_t v96 = type metadata accessor for CardInfo();
      uint64_t v97 = *(void *)(v96 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
      {
        uint64_t v98 = sub_4A98(&qword_2EDB60);
        memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        *uint64_t v94 = *v95;
        uint64_t v99 = *(int *)(v96 + 20);
        uint64_t v129 = (char *)v94 + v99;
        uint64_t v100 = (char *)v95 + v99;
        uint64_t v101 = sub_269840();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v129, v100, v101);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      }
      uint64_t v102 = *(int *)(v130 + 64);
      uint64_t v103 = (char *)v89 + v102;
      uint64_t v104 = (char *)v90 + v102;
      uint64_t v105 = sub_269C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
    }
  }
  uint64_t v106 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  uint64_t v107 = *(int *)(v106 + 20);
  uint64_t v108 = (char *)v89 + v107;
  uint64_t v109 = (char *)v90 + v107;
  uint64_t v110 = sub_269B30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v108, v109, v110);
  uint64_t v111 = *(int *)(v106 + 24);
  uint64_t v112 = (uint64_t)v89 + v111;
  uint64_t v113 = (char *)v90 + v111;
  _s7BooksUI13AnyPagedFrameVwxx_0(v112);
  long long v114 = *((_OWORD *)v113 + 1);
  *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
  *(_OWORD *)(v112 + 16) = v114;
  *(void *)(v112 + 32) = *((void *)v113 + 4);
  uint64_t v115 = a3[17];
  uint64_t v116 = (void *)(a1 + v115);
  uint64_t v117 = (uint64_t *)((char *)a2 + v115);
  uint64_t v119 = *v117;
  uint64_t v118 = v117[1];
  *uint64_t v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  uint64_t v120 = a3[18];
  uint64_t v121 = a1 + v120;
  uint64_t v122 = (uint64_t)a2 + v120;
  uint64_t v123 = sub_26A6E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 40))(v121, v122, v123);
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)((char *)a2 + a3[19]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesRoomHeaderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_245A8C);
}

uint64_t sub_245A8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_17:
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v17(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4A98(&qword_2ED2E0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_17;
  }
  uint64_t v11 = sub_4A98(&qword_2EBFE8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[12];
    goto LABEL_17;
  }
  uint64_t v12 = sub_4A98(&qword_2EDCA0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[13];
    goto LABEL_17;
  }
  uint64_t v13 = sub_4A98(&qword_2EDCA8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v7 = v13;
    uint64_t v8 = *(void *)(v13 - 8);
    uint64_t v9 = a3[14];
    goto LABEL_17;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[15]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v7 = v16;
      uint64_t v8 = *(void *)(v16 - 8);
      uint64_t v9 = a3[16];
      goto LABEL_17;
    }
    uint64_t v18 = sub_26A6E0();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[18];
    return v19(v21, a2, v20);
  }
}

uint64_t storeEnumTagSinglePayload for SeriesRoomHeaderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_245D60);
}

uint64_t sub_245D60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_15:
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v17(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_4A98(&qword_2ED2E0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_15;
  }
  uint64_t v13 = sub_4A98(&qword_2EBFE8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_15;
  }
  uint64_t v14 = sub_4A98(&qword_2EDCA0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[13];
    goto LABEL_15;
  }
  uint64_t result = sub_4A98(&qword_2EDCA8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[14];
    goto LABEL_15;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[15]) = (a2 - 1);
    return result;
  }
  uint64_t v16 = type metadata accessor for SeriesQuickActionButtonViewModel(0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v9 = v16;
    uint64_t v10 = *(void *)(v16 - 8);
    uint64_t v11 = a4[16];
    goto LABEL_15;
  }
  uint64_t v18 = sub_26A6E0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[18];

  return v19(v21, a2, a2, v20);
}

void sub_246020()
{
  sub_246320(319, (unint64_t *)&qword_2EB788, type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_246320(319, &qword_2EDD50, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizerRequest, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PlaceholderTextView.ContentType);
    if (v1 <= 0x3F)
    {
      sub_246320(319, &qword_2EDD58, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        sub_9CBF4();
        if (v3 <= 0x3F)
        {
          sub_246320(319, (unint64_t *)&unk_2EDD68, type metadata accessor for TopLockupMetadataView.Footer, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PlaceholderTextView.ContentType);
          if (v4 <= 0x3F)
          {
            type metadata accessor for SeriesQuickActionButtonViewModel(319);
            if (v5 <= 0x3F)
            {
              sub_26A6E0();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_246320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_246384()
{
  return sub_7C18(&qword_2F78B0, &qword_2F78B8);
}

uint64_t sub_2463D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_246438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2464A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_246508()
{
  unint64_t result = qword_2F7998;
  if (!qword_2F7998)
  {
    sub_7B0C(&qword_2F7988);
    sub_DDE8C();
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7998);
  }
  return result;
}

uint64_t sub_2465A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    sub_7C18(&qword_2F79B8, &qword_2F79C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24664C()
{
  unint64_t result = qword_2F79A8;
  if (!qword_2F79A8)
  {
    sub_7B0C(&qword_2F7968);
    sub_2466F8(&qword_2F79B0, (void (*)(uint64_t))type metadata accessor for TopLockupMetadataView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F79A8);
  }
  return result;
}

uint64_t sub_2466F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_246740()
{
  unint64_t result = qword_2F79D0;
  if (!qword_2F79D0)
  {
    sub_7B0C(&qword_2F7950);
    sub_7C18(&qword_2F79D8, &qword_2F78C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F79D0);
  }
  return result;
}

uint64_t static YearInReviewColors.primary.getter()
{
  uint64_t result = Color.init(hexString:)(0x363234333230, 0xE600000000000000);
  if (!result)
  {
    return sub_26C180();
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewColors()
{
  return &type metadata for YearInReviewColors;
}

uint64_t sub_246834()
{
  uint64_t result = 0x6C6C616D5378;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6C616D73;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 0x656772616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2468B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2479EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2468D8(uint64_t a1)
{
  unint64_t v2 = sub_247164();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_246914(uint64_t a1)
{
  unint64_t v2 = sub_247164();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_246950(uint64_t a1)
{
  unint64_t v2 = sub_2471B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24698C(uint64_t a1)
{
  unint64_t v2 = sub_2471B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_2469C8(uint64_t a1)
{
  unint64_t v2 = sub_24720C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_246A04(uint64_t a1)
{
  unint64_t v2 = sub_24720C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_246A40(uint64_t a1)
{
  unint64_t v2 = sub_247260();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_246A7C(uint64_t a1)
{
  unint64_t v2 = sub_247260();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_246AB8(uint64_t a1)
{
  unint64_t v2 = sub_2472B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_246AF4(uint64_t a1)
{
  unint64_t v2 = sub_2472B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListItemMetadata.TitleLockupSize.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_4A98(&qword_2F79F8);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2F7A00);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  __chkstk_darwin(v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4A98(&qword_2F7A08);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4A98(&qword_2F7A10);
  uint64_t v41 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2F7A18);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  sub_4ADC(a1, v18);
  sub_247164();
  uint64_t v19 = v52;
  sub_26DFC0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_26DCA0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_26DAD0();
    swift_allocError();
    uint64_t v29 = v28;
    sub_4A98(&qword_2EBAB0);
    *uint64_t v29 = &type metadata for ListItemMetadata.TitleLockupSize;
    sub_26DC20();
    sub_26DAC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return _s7BooksUI13AnyPagedFrameVwxx_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_247260();
      uint64_t v32 = v40;
      uint64_t v33 = v52;
      sub_26DC10();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_24720C();
      uint64_t v32 = v46;
      uint64_t v36 = v52;
      sub_26DC10();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_2471B8();
      uint64_t v37 = v52;
      sub_26DC10();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return _s7BooksUI13AnyPagedFrameVwxx_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_2472B4();
      uint64_t v26 = v52;
      sub_26DC10();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0(v30);
}

unint64_t sub_247164()
{
  unint64_t result = qword_2F7A20;
  if (!qword_2F7A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A20);
  }
  return result;
}

unint64_t sub_2471B8()
{
  unint64_t result = qword_2F7A28;
  if (!qword_2F7A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A28);
  }
  return result;
}

unint64_t sub_24720C()
{
  unint64_t result = qword_2F7A30;
  if (!qword_2F7A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A30);
  }
  return result;
}

unint64_t sub_247260()
{
  unint64_t result = qword_2F7A38;
  if (!qword_2F7A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A38);
  }
  return result;
}

unint64_t sub_2472B4()
{
  unint64_t result = qword_2F7A40;
  if (!qword_2F7A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A40);
  }
  return result;
}

unint64_t sub_24730C()
{
  unint64_t result = qword_2F7A48;
  if (!qword_2F7A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A48);
  }
  return result;
}

unint64_t sub_247360(uint64_t a1)
{
  unint64_t result = sub_E4168();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247388@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ListItemMetadata.TitleLockupSize.init(from:)(a1, a2);
}

uint64_t dispatch thunk of ListItemMetadata.EyebrowModel.text(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ListItemMetadata.EyebrowModel.shorterText(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ListItemMetadata.EyebrowModel.shortestText(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for ListItemMetadata.TitleLockupSize()
{
  return &type metadata for ListItemMetadata.TitleLockupSize;
}

uint64_t dispatch thunk of ListItemMetadata.TitleLockupModel.size.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ListItemMetadata.TitleLockupModel.title(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ListItemMetadata.TitleLockupModel.subtitle(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ListItemMetadata.FormatAndDescriptorModel.content(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ListItemMetadata.FinePrintModel.text(localizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ListItemMetadata.SharedWithYouModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ListItemMetadata.CreatorDescriptionModel.text(localizer:font:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

unsigned char *_s15TitleLockupSizeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2475ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15TitleLockupSizeO10CodingKeysOMa()
{
  return &_s15TitleLockupSizeO10CodingKeysON;
}

ValueMetadata *_s15TitleLockupSizeO16XSmallCodingKeysOMa()
{
  return &_s15TitleLockupSizeO16XSmallCodingKeysON;
}

ValueMetadata *_s15TitleLockupSizeO15SmallCodingKeysOMa()
{
  return &_s15TitleLockupSizeO15SmallCodingKeysON;
}

ValueMetadata *_s15TitleLockupSizeO16MediumCodingKeysOMa()
{
  return &_s15TitleLockupSizeO16MediumCodingKeysON;
}

ValueMetadata *_s15TitleLockupSizeO15LargeCodingKeysOMa()
{
  return &_s15TitleLockupSizeO15LargeCodingKeysON;
}

unint64_t sub_247628()
{
  unint64_t result = qword_2F7A50;
  if (!qword_2F7A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A50);
  }
  return result;
}

unint64_t sub_247680()
{
  unint64_t result = qword_2F7A58;
  if (!qword_2F7A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A58);
  }
  return result;
}

unint64_t sub_2476D8()
{
  unint64_t result = qword_2F7A60;
  if (!qword_2F7A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A60);
  }
  return result;
}

unint64_t sub_247730()
{
  unint64_t result = qword_2F7A68;
  if (!qword_2F7A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A68);
  }
  return result;
}

unint64_t sub_247788()
{
  unint64_t result = qword_2F7A70;
  if (!qword_2F7A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A70);
  }
  return result;
}

unint64_t sub_2477E0()
{
  unint64_t result = qword_2F7A78;
  if (!qword_2F7A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A78);
  }
  return result;
}

unint64_t sub_247838()
{
  unint64_t result = qword_2F7A80;
  if (!qword_2F7A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A80);
  }
  return result;
}

unint64_t sub_247890()
{
  unint64_t result = qword_2F7A88;
  if (!qword_2F7A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A88);
  }
  return result;
}

unint64_t sub_2478E8()
{
  unint64_t result = qword_2F7A90;
  if (!qword_2F7A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A90);
  }
  return result;
}

unint64_t sub_247940()
{
  unint64_t result = qword_2F7A98;
  if (!qword_2F7A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7A98);
  }
  return result;
}

unint64_t sub_247998()
{
  unint64_t result = qword_2F7AA0[0];
  if (!qword_2F7AA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2F7AA0);
  }
  return result;
}

uint64_t sub_2479EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6C616D5378 && a2 == 0xE600000000000000;
  if (v2 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C616D73 && a2 == 0xE500000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_26DDB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_26DDB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t BooksOpaqueIntentModel.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26C8F0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t BooksOpaqueIntentModel.kind.getter(uint64_t a1)
{
  uint64_t v1 = sub_2483D0(a1);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_247C28()
{
}

uint64_t sub_247C3C()
{
  return sub_26D010();
}

BOOL sub_247CB0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_2DC6F8;
  v6._object = a2;
  Swift::Int v4 = sub_26DC00(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_247CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_247D6C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_247DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_247E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

BOOL sub_247EB8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_247CB0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_247EF4(void *a1@<X8>)
{
  *a1 = 0x646E696B24;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_247F0C()
{
  return 0x646E696B24;
}

BOOL sub_247F20@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL result = sub_247CB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247F50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static GenericGeometryReferenceBuilder.== infix(_:_:)();
  *a1 = result & 1;
  return result;
}

uint64_t sub_247F80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_247FD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t BooksOpaqueIntentModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  type metadata accessor for BooksOpaqueIntentModel.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_26DCC0();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v21 - v5;
  uint64_t v6 = sub_26C8F0();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BooksOpaqueIntentModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - v11;
  sub_C224((uint64_t)a1, (uint64_t)v28);
  sub_26C8D0();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v23 = v4;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v12, v8, v6);
  sub_4ADC(a1, a1[3]);
  uint64_t v14 = v27;
  sub_26DFC0();
  uint64_t v15 = v23;
  uint64_t v16 = sub_26DC70();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v15);
  uint64_t v19 = (uint64_t *)&v12[*(int *)(v9 + 28)];
  *uint64_t v19 = v16;
  v19[1] = v18;
  uint64_t v20 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v24, v12, v9);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v9);
}

uint64_t BooksOpaqueIntentModel.encode(to:)()
{
  return sub_26C8E0();
}

uint64_t sub_24839C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BooksOpaqueIntentModel.init(from:)(a1, a2);
}

uint64_t sub_2483B8()
{
  return BooksOpaqueIntentModel.encode(to:)();
}

uint64_t sub_2483D0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28));
}

uint64_t type metadata accessor for BooksOpaqueIntentModel.CodingKeys()
{
  return sub_129B4();
}

uint64_t type metadata accessor for BooksOpaqueIntentModel()
{
  return sub_129B4();
}

uint64_t sub_248410()
{
  uint64_t result = sub_26C8F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2484A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26C8F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24857C(uint64_t a1)
{
  uint64_t v2 = sub_26C8F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2485F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26C8F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24867C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26C8F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_248718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26C8F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_248794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26C8F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_248820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_248834);
}

uint64_t sub_248834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26C8F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2488F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24890C);
}

uint64_t sub_24890C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_26C8F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

unsigned char *sub_2489CC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248A68);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248A90()
{
  return swift_getWitnessTable();
}

uint64_t sub_248AAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_248AC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_248AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_4A98(&qword_2EBC88);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ListItemMetadataFinePrintView() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t type metadata accessor for ListItemMetadataFinePrintView()
{
  return sub_129B4();
}

uint64_t sub_248BB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_26AB40() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v11 + v8 + 1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v10 > 0xFE)
      {
        uint64_t v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v23(((unint64_t)a1 + v13) & ~v11);
      }
      else
      {
        unsigned int v22 = *((unsigned __int8 *)a1 + v8);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_248E14(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_26AB40() - 8);
  unint64_t v9 = ((*(void *)(v8 + 64)
       + ((*(unsigned __int8 *)(v8 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = v10 | 1;
  uint64_t v16 = (v10 | 1) + v13;
  size_t v17 = (v16 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v13;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x24912CLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v12 > 0xFE)
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v24((unint64_t)&a1[v16] & v21, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v15 < 4) {
            int v25 = ~(-1 << (8 * v15));
          }
          else {
            int v25 = -1;
          }
          int v26 = v25 & (a2 - 255);
          bzero(a1, v15);
          if (v15 == 1) {
            *a1 = v26;
          }
          else {
            *(_DWORD *)a1 = v26;
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_249154()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249198(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_4A98(&qword_2ED898);
  sub_26A0F0();
  sub_26A0D0();
  sub_249874();
  sub_15B160(&qword_2EC078, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking);
  sub_15B160(&qword_2EC080, (void (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed);
  return sub_26A100();
}

uint64_t sub_2493B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for DefaultBlendModeModifier();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v38 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v39 = (uint64_t)&v38 - v11;
  uint64_t v12 = type metadata accessor for FontConstants.ListItem(0);
  __chkstk_darwin(v12 - 8);
  unsigned int v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ListItemMetadataFinePrintView();
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, a2, a3);
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_4040C((uint64_t)v14);
  FontConstants.ListItem.finePrint.getter();
  sub_67BB8((uint64_t)v14, type metadata accessor for FontConstants.ListItem);
  uint64_t v20 = sub_26BA80();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_3A380(v15, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0();
  uint64_t v25 = sub_26BA30();
  uint64_t v27 = v26;
  LOBYTE(v17) = v28;
  uint64_t v30 = v29;
  swift_release();
  sub_3A380(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v38;
  uint64_t *v38 = v32;
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (uint64_t)v33;
  uint64_t v35 = v39;
  sub_67AF0(v34, v39);
  uint64_t v36 = sub_4A98(&qword_2ED898);
  sub_67B54(v35, a4 + *(int *)(v36 + 36));
  *(void *)a4 = v25;
  *(void *)(a4 + 8) = v27;
  *(unsigned char *)(a4 + 16) = v17 & 1;
  *(void *)(a4 + 24) = v30;
  *(void *)(a4 + 32) = KeyPath;
  *(void *)(a4 + 40) = 1;
  *(unsigned char *)(a4 + 48) = 0;
  return sub_67BB8(v35, (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
}

uint64_t sub_249670()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ListItemMetadataFinePrintView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  sub_4A98(&qword_2EBC88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = v3 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
    uint64_t v5 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_2497D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  type metadata accessor for ListItemMetadataFinePrintView();

  return sub_2493B0(a1, v5, v6, a2);
}

unint64_t sub_249874()
{
  unint64_t result = qword_2F7C28;
  if (!qword_2F7C28)
  {
    sub_7B0C(&qword_2ED898);
    sub_2176AC();
    sub_15B160((unint64_t *)&qword_2ECC70, (void (*)(uint64_t))type metadata accessor for DefaultBlendModeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7C28);
  }
  return result;
}

uint64_t sub_24992C()
{
  return sub_7C18(&qword_2F7C30, qword_2F7C38);
}

uint64_t _CodeAnyIntentModel_Many.description.getter()
{
  return 0;
}

uint64_t _CodeAnyIntentModel_Many.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v13);
  type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  uint64_t v5 = sub_26D690();
  if (v2) {
    return _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  }
  v13[0] = v5;
  __chkstk_darwin(v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_26D680();
  uint64_t ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_1C9978((void (*)(char *, char *))sub_11F904, KeyPath, v8, ExtendedExistentialTypeMetadata, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v11);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a2 = v12;
  return result;
}

uint64_t _CodeAnyIntentModel_Many.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_C224(a1, (uint64_t)v11);
  type metadata accessor for CodeAnyIntentModel();
  swift_getWitnessTable();
  v11[0] = sub_26D670();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_26D680();
  uint64_t ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1C9978((void (*)(char *, char *))sub_11F904, KeyPath, v5, ExtendedExistentialTypeMetadata, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v8);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a2 = v9;
  return result;
}

uint64_t sub_249D04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return _CodeAnyIntentModel_Many.init(from:)(a1, a2);
}

uint64_t sub_249D20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return _CodeAnyIntentModel_Many.init(_partiallyFrom:)(a1, a2);
}

uint64_t type metadata accessor for _CodeAnyIntentModel_Many()
{
  return sub_129B4();
}

uint64_t ReaderTypeFrameViewModel.init(type:exposureData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20)];
  uint64_t v5 = sub_269BE0();
  uint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for ReaderTypeFrameViewModel(uint64_t a1)
{
  return sub_2A148(a1, qword_2F7D40);
}

uint64_t sub_249DE4()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v17[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v17[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v15 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t sub_24A474()
{
  uint64_t v0 = sub_269920();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v17[-v5];
  uint64_t v7 = sub_26D3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v17[-v12];
  sub_26D370();
  sub_2698C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v15 = sub_26D460();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t ReaderTypeFrame.sharableView.getter()
{
  uint64_t v1 = type metadata accessor for ReaderTypeFrame(0);
  __chkstk_darwin(v1);
  sub_24AD44(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReaderTypeFrame);
  sub_24ADAC(&qword_2F7CC0, (void (*)(uint64_t))type metadata accessor for ReaderTypeFrame);
  return sub_26C470();
}

uint64_t type metadata accessor for ReaderTypeFrame(uint64_t a1)
{
  return sub_2A148(a1, qword_2F7DD0);
}

uint64_t ReaderTypeFrame.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReaderTypeFrameViewModel(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24AD44(v1, (uint64_t)v6, type metadata accessor for ReaderTypeFrameViewModel);
  uint64_t v7 = &v6[*(int *)(v4 + 28)];
  uint64_t v8 = sub_269BE0();
  a1[3] = v8;
  a1[4] = sub_24ADAC(&qword_2EB1E0, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  a1[5] = sub_24ADAC(&qword_2EB1E8, (void (*)(uint64_t))&type metadata accessor for YIRSourceData);
  uint64_t v9 = sub_CA1C(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v9, v7, v8);
}

uint64_t sub_24AD44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24ADAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ReaderTypeFrame.background.getter@<X0>(unint64_t *a1@<X8>)
{
  switch(*v1)
  {
    case 1:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD00000000000001CLL;
      uint64_t v5 = "yir-background-reader-series";
      break;
    case 2:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD000000000000020;
      uint64_t v5 = "yir-background-reader-nonfiction";
      break;
    case 3:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD000000000000020;
      uint64_t v5 = "yir-background-reader-multigenre";
      break;
    case 4:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD000000000000022;
      uint64_t v5 = "yir-background-reader-single-genre";
      break;
    case 5:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD000000000000022;
      uint64_t v5 = "yir-background-reader-undetermined";
      break;
    default:
      uint64_t v3 = (char *)a1 + *(int *)(sub_4A98(&qword_2EA948) + 48);
      unint64_t v4 = 0xD000000000000020;
      uint64_t v5 = "yir-background-reader-top-charts";
      break;
  }
  *a1 = v4;
  a1[1] = (unint64_t)(v5 - 32) | 0x8000000000000000;
  uint64_t v6 = enum case for ColorScheme.dark(_:);
  uint64_t v7 = sub_26A6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v3, v6, v7);
  type metadata accessor for PageBackground(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t ReaderTypeFrame.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24AFD0(a1, a2);
}

uint64_t sub_24AFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReaderTypeFrameViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ReaderTypeFrame.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4A98(&qword_2EE930);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2EE938);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_26B1C0();
  *((void *)v8 + 1) = 0x4040000000000000;
  v8[16] = 0;
  uint64_t v12 = sub_4A98(&qword_2F7CC8);
  sub_24B2C4(&v8[*(int *)(v12 + 44)]);
  uint64_t v13 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_B0E28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v13, v14);
  sub_B6DC((uint64_t)v8, &qword_2EE930);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(sub_4A98(&qword_2F7CD0) + 36));
  uint64_t v17 = sub_4A98(&qword_2EAEE8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v16 + *(int *)(v17 + 28), v5, v2);
  *uint64_t v16 = KeyPath;
  sub_24B574((uint64_t)v11, a1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_B6DC((uint64_t)v11, &qword_2EE938);
}

uint64_t sub_24B2C4@<X0>(void *a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = sub_26AB40();
  uint64_t v1 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TextLockup();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v27 - v11);
  uint64_t v28 = sub_249DE4();
  uint64_t v14 = v13;
  uint64_t v15 = sub_24A474();
  uint64_t v17 = v16;
  uint64_t v18 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  uint64_t v19 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v21 = v20;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DynamicTypeSize.xxxLarge(_:), v29);
  uint64_t v22 = sub_26B1D0();
  sub_1DC1D0(2, 0, 0, v28, v14, v15, v17, (uint64_t)v6, v12, v22, v19, v21, 1, (uint64_t)v3);
  sub_24AD44((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextLockup);
  char v23 = v30;
  *uint64_t v30 = 0;
  *((unsigned char *)v23 + 8) = 1;
  char v24 = v23;
  uint64_t v25 = sub_4A98(&qword_2F7E20);
  sub_24AD44((uint64_t)v10, (uint64_t)v24 + *(int *)(v25 + 48), (uint64_t (*)(void))type metadata accessor for TextLockup);
  sub_1129D8((uint64_t)v12);
  return sub_1129D8((uint64_t)v10);
}

uint64_t sub_24B574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4A98(&qword_2EE938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B5E0()
{
  unint64_t result = qword_2F7CD8;
  if (!qword_2F7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7CD8);
  }
  return result;
}

uint64_t sub_24B634()
{
  uint64_t v1 = __chkstk_darwin(v0);
  sub_24AD44(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReaderTypeFrame);
  sub_24ADAC(&qword_2F7CC0, (void (*)(uint64_t))type metadata accessor for ReaderTypeFrame);
  return sub_26C470();
}

uint64_t sub_24B6FC(uint64_t a1)
{
  uint64_t result = sub_24ADAC(&qword_2F7CE0, (void (*)(uint64_t))type metadata accessor for ReaderTypeFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24B758(uint64_t a1)
{
  uint64_t result = sub_24ADAC(&qword_2F7CC0, (void (*)(uint64_t))type metadata accessor for ReaderTypeFrame);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24B7B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ReaderTypeFrameViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_269BE0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ReaderTypeFrameViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_269BE0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *initializeWithCopy for ReaderTypeFrameViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for ReaderTypeFrameViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for ReaderTypeFrameViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for ReaderTypeFrameViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderTypeFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24BB08);
}

uint64_t sub_24BB08(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 250)
  {
    unsigned int v4 = *a1;
    if (v4 >= 6) {
      return v4 - 5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_269BE0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReaderTypeFrameViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24BBC4);
}

unsigned char *sub_24BBC4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 250)
  {
    *uint64_t result = a2 + 5;
  }
  else
  {
    uint64_t v7 = sub_269BE0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24BC68()
{
  uint64_t result = sub_269BE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReaderTypeFrameViewModel.Type(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24BDCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderTypeFrameViewModel.Type()
{
  return &type metadata for ReaderTypeFrameViewModel.Type;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReaderTypeFrame(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ReaderTypeFrameViewModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = *(int *)(v4 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_269BE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t destroy for ReaderTypeFrame(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20);
  uint64_t v2 = sub_269BE0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

unsigned char *initializeWithCopy for ReaderTypeFrame(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20);
  int v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for ReaderTypeFrame(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20);
  int v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for ReaderTypeFrame(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20);
  int v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for ReaderTypeFrame(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ReaderTypeFrameViewModel(0) + 20);
  int v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_269BE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderTypeFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24C184);
}

uint64_t sub_24C184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReaderTypeFrameViewModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReaderTypeFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24C204);
}

uint64_t sub_24C204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReaderTypeFrameViewModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_24C274()
{
  uint64_t result = type metadata accessor for ReaderTypeFrameViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24C304()
{
  unint64_t result = qword_2F7E08;
  if (!qword_2F7E08)
  {
    sub_7B0C(&qword_2F7CD0);
    sub_24C3A4();
    sub_7C18((unint64_t *)&qword_2EAF40, &qword_2EAEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7E08);
  }
  return result;
}

unint64_t sub_24C3A4()
{
  unint64_t result = qword_2F7E10;
  if (!qword_2F7E10)
  {
    sub_7B0C(&qword_2EE938);
    sub_7C18(&qword_2F7E18, &qword_2EE930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7E10);
  }
  return result;
}

uint64_t static ShelfGridLayout.horizontal(layoutContext:itemsPerColumn:itemColumnSpan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *(void *)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  char v8 = *(unsigned char *)(a3 + 16);
  char v19 = *(unsigned char *)(a1 + 8);
  long long v9 = *(_OWORD *)(a1 + 32);
  v18[0] = *(_OWORD *)(a1 + 16);
  v18[1] = v9;
  type metadata accessor for ShelfGridLayoutContext();
  uint64_t v10 = ShelfGridBreakpoint.resolveColumns(for:dynamicTypeSize:)((uint64_t *)v18);
  uint64_t v11 = (uint64_t (**)@<X0>(double *@<X8>))((char *)a4 + *(int *)(sub_4A98(&qword_2F3E10) + 48));
  *a4 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v6;
  *(void *)(v12 + 32) = v7;
  *(unsigned char *)(v12 + 40) = v8;
  *uint64_t v11 = sub_24CC50;
  v11[1] = (uint64_t (*)@<X0>(double *@<X8>))v12;
  uint64_t v13 = enum case for ShelfGridItemWidth.calculate(_:);
  uint64_t v14 = sub_26A2B0();
  (*(void (**)(uint64_t (**)@<X0>(double *@<X8>), uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v11, v13, v14);
  uint64_t v15 = enum case for ShelfGridLayout.horizontal(_:);
  uint64_t v16 = sub_26A190();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a4, v15, v16);

  return sub_24CC54(v6, v7, v8);
}

uint64_t type metadata accessor for ShelfGridLayoutContext()
{
  uint64_t result = qword_2F7E80;
  if (!qword_2F7E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double ShelfGridItemColumnSpan.resolve(using:)(uint64_t *a1)
{
  void (*v2)(void *__return_ptr, uint64_t *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double v8;
  uint64_t v10;
  void v11[2];
  char v12;

  uint64_t v2 = *(void (**)(void *__return_ptr, uint64_t *))v1;
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return *(double *)v1;
  }
  int v3 = *(void *)(v1 + 8);
  uint64_t v10 = *a1;
  uint64_t v4 = v10;
  swift_retain();
  v2(v11, &v10);
  int v5 = v11[0];
  uint64_t v6 = v11[1];
  uint64_t v7 = v12;
  uint64_t v10 = v4;
  char v8 = ShelfGridItemColumnSpan.resolve(using:)(&v10);
  sub_1B2398((uint64_t)v2, v3, 1);
  sub_1B2398(v5, v6, v7);
  return v8;
}

void ShelfGridLayoutContext.breakpoint.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t ShelfGridLayoutContext.gridType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v4 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_72940(v5);
}

uint64_t ShelfGridLayoutContext.dynamicTypeSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShelfGridLayoutContext() + 28);
  uint64_t v4 = sub_26AB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShelfGridLayoutContext.viewSizeConditions.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShelfGridLayoutContext();
  uint64_t v4 = (char *)(v1 + *(int *)(result + 32));
  char v5 = *v4;
  char v6 = v4[1];
  LOBYTE(v4) = v4[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = (_BYTE)v4;
  return result;
}

uint64_t ShelfGridLayoutContext.init(itemsCount:breakpoint:gridType:dynamicTypeSize:viewSizeConditions:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *a2;
  char v9 = *a5;
  char v10 = a5[1];
  char v11 = a5[2];
  *(void *)a6 = a1;
  *(unsigned char *)(a6 + 8) = v8;
  long long v12 = a3[1];
  *(_OWORD *)(a6 + 16) = *a3;
  *(_OWORD *)(a6 + 32) = v12;
  uint64_t v13 = type metadata accessor for ShelfGridLayoutContext();
  uint64_t v14 = a6 + *(int *)(v13 + 28);
  uint64_t v15 = sub_26AB40();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a4, v15);
  uint64_t v17 = (unsigned char *)(a6 + *(int *)(v13 + 32));
  *uint64_t v17 = v9;
  v17[1] = v10;
  v17[2] = v11;
  return result;
}

uint64_t static ShelfGridLayout.horizontal(columns:itemsPerColumn:itemColumnSpan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)a3;
  uint64_t v8 = *(void *)(a3 + 8);
  char v9 = *(unsigned char *)(a3 + 16);
  char v10 = (uint64_t (**)@<X0>(double *@<X8>))((char *)a4 + *(int *)(sub_4A98(&qword_2F3E10) + 48));
  *a4 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v7;
  *(void *)(v11 + 32) = v8;
  *(unsigned char *)(v11 + 40) = v9;
  *char v10 = sub_24CC50;
  v10[1] = (uint64_t (*)@<X0>(double *@<X8>))v11;
  uint64_t v12 = enum case for ShelfGridItemWidth.calculate(_:);
  uint64_t v13 = sub_26A2B0();
  (*(void (**)(uint64_t (**)@<X0>(double *@<X8>), uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  uint64_t v14 = enum case for ShelfGridLayout.horizontal(_:);
  uint64_t v15 = sub_26A190();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a4, v14, v15);

  return sub_24CC54(v7, v8, v9);
}

uint64_t sub_24C9F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, double *a5@<X8>)
{
  int v25 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v26 = a5;
  uint64_t v6 = sub_26A270();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26A2B0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (double *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v13 = (double)a1;
  uint64_t v14 = *(uint64_t (**)(void))(v11 + 104);
  ((void (*)(double *, void, uint64_t))v14)(v13, enum case for ShelfGridItemWidth.divideBy(_:), v10);
  sub_26A2A0();
  double v16 = v15;
  (*(void (**)(double *, uint64_t))(v11 + 8))(v13, v10);
  v27[1] = v23;
  v27[2] = v24;
  char v28 = v25 & 1;
  v27[0] = sub_26A280();
  double v17 = ShelfGridItemColumnSpan.resolve(using:)(v27);
  sub_26A290();
  *(double *)&uint64_t v18 = COERCE_DOUBLE(sub_26A260());
  char v20 = v19;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  double v21 = *(double *)&v18;
  if (v20) {
    double v21 = 0.0;
  }
  *uint64_t v26 = v16 * v17 + (v17 + -1.0) * v21;
  return v14();
}

uint64_t sub_24CC54(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24CC68()
{
  sub_1B2398(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t destroy for ShelfGridItemColumnSpan(uint64_t a1)
{
  return sub_1B2398(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7BooksUI23ShelfGridItemColumnSpanOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24CC54(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ShelfGridItemColumnSpan(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24CC54(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B2398(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ShelfGridItemColumnSpan(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B2398(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ShelfGridItemColumnSpan()
{
  return &type metadata for ShelfGridItemColumnSpan;
}

ValueMetadata *type metadata accessor for ShelfGridItemColumnSpan.Context()
{
  return &type metadata for ShelfGridItemColumnSpan.Context;
}

uint64_t dispatch thunk of static ShelfGridLayoutConfiguring.shelfGridLayout(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static ShelfGridLayoutConfiguring.shelfGridType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *initializeBufferWithCopyOfBuffer for ShelfGridLayoutContext(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    char v9 = a2 + 4;
    uint64_t v8 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v10 = a2[5];
      v4[4] = v8;
      v4[5] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v4 + 2) = *v9;
    }
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_26AB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = *(int *)(a3 + 32);
    double v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(_WORD *)double v17 = *(_WORD *)v18;
    v17[2] = *(unsigned char *)(v18 + 2);
  }
  return v4;
}

uint64_t destroy for ShelfGridLayoutContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_26AB40();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v8;
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_WORD *)uint64_t v15 = *(_WORD *)v16;
  *(unsigned char *)(v15 + 2) = *(unsigned char *)(v16 + 2);
  return a1;
}

uint64_t assignWithCopy for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  if (!v6)
  {
    sub_123390(a1 + 32);
    goto LABEL_7;
  }
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  unsigned char *v12 = *v13;
  v12[1] = v13[1];
  _OWORD v12[2] = v13[2];
  return a1;
}

uint64_t initializeWithTake for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_WORD *)uint64_t v12 = *(_WORD *)v13;
  *(unsigned char *)(v12 + 2) = *(unsigned char *)(v13 + 2);
  return a1;
}

uint64_t assignWithTake for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_123390(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  unsigned char *v12 = *v13;
  v12[1] = v13[1];
  _OWORD v12[2] = v13[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24D404);
}

uint64_t sub_24D404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_26AB40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShelfGridLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24D4C8);
}

uint64_t sub_24D4C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_26AB40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24D570()
{
  uint64_t result = sub_26AB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CodeAnyActionModel.description.getter()
{
  return 0;
}

uint64_t CodeAnyActionModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_4ADC(a1, a1[3]);
  Decoder.decodeActionModel()((uint64_t)v7);
  if (!v2)
  {
    sub_AD44(v7, (uint64_t)v8);
    long long v5 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v9;
  }
  return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)a1);
}

uint64_t Decoder.decodeActionModel()@<X0>(uint64_t a1@<X8>)
{
  sub_26DFA0();
  uint64_t v2 = sub_26CFE0();
  swift_bridgeObjectRelease();
  return Decoder.decodeActionModel<A>(using:)(v2, a1);
}

uint64_t Decoder.actionKindTable.getter()
{
  sub_26DFA0();
  uint64_t v0 = sub_26CFE0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Decoder.decodeActionModel<A>(using:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v14[6] = a1;
  uint64_t v11 = sub_4A98(&qword_2EEBA8);
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26DF90();
  if (v2)
  {
    sub_26DFA0();
    sub_26C9E0();
    sub_4A98(&qword_2EEBB0);
    sub_26D280();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
    sub_BF6B4((uint64_t)v14, (uint64_t)&v12);
    if (v13)
    {
      sub_4ADC(&v12, v13);
      swift_getMetatypeMetadata();
      sub_26CFC0();
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v12);
    }
    else
    {
      sub_BF71C((uint64_t)&v12);
    }
    swift_willThrow();
    return sub_BF71C((uint64_t)v14);
  }
  else
  {
    uint64_t v9 = a2;
    uint64_t v10 = v14[4];
    sub_4ADC(v14, v14[3]);
    sub_26C890();
    swift_getWitnessTable();
    sub_26DDD0();
    sub_AD44(&v12, v9);
    return _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v14);
  }
}

ValueMetadata *type metadata accessor for CodeAnyActionModel()
{
  return &type metadata for CodeAnyActionModel;
}

uint64_t SeriesCardCoverStackCoverLayout.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_6C0F8(v1 + 40, a1);
}

double SeriesCardCoverStackCoverLayout.offset(for:)(double a1)
{
  if (*(unsigned char *)v1)
  {
    if (*(unsigned char *)v1 == 1)
    {
      double v2 = -1.0;
      double v3 = 0.86;
    }
    else
    {
      double v2 = 1.0;
      double v3 = 0.78;
    }
    return v2 * ((a1 - *(double *)(v1 + 16) * v3 * *(double *)(v1 + 32)) * 0.5);
  }
  else
  {
    double v4 = 0.0;
    if (*(void *)(v1 + 8) == 2) {
      return (a1 - *(double *)(v1 + 16) * *(double *)(v1 + 32)) * 0.5;
    }
  }
  return v4;
}

double SeriesCardCoverStackCoverLayout.height(for:)()
{
  if (!*(unsigned char *)v0) {
    return *(double *)(v0 + 16);
  }
  if (*(unsigned char *)v0 == 1) {
    return *(double *)(v0 + 16) * 0.86;
  }
  return *(double *)(v0 + 16) * 0.78;
}

double SeriesCardCoverStackCoverLayout.scale(forOverscrollOffset:)()
{
  return 1.0;
}

double SeriesCardCoverStackCoverLayout.offset(forOverscrollOffset:)()
{
  return 0.0;
}

double sub_24DB24(double a1)
{
  return SeriesCardCoverStackCoverLayout.offset(for:)(a1);
}

uint64_t *sub_24DB40@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

BOOL _s7BooksUI020SeriesCardCoverStackE6LayoutV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2
      && *((void *)a1 + 1) == *((void *)a2 + 1)
      && *((double *)a1 + 2) == *((double *)a2 + 2)
      && *((double *)a1 + 3) == *((double *)a2 + 3)
      && *((double *)a1 + 4) == *((double *)a2 + 4)
      && _s7BooksUI14CoverViewModelV2eeoiySbAC_ACtFZ_0((uint64_t)(a1 + 40), (uint64_t)(a2 + 40));
}

unint64_t sub_24DBBC(uint64_t a1)
{
  unint64_t result = sub_24DBE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24DBE4()
{
  unint64_t result = qword_2F7EC8;
  if (!qword_2F7EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7EC8);
  }
  return result;
}

uint64_t destroy for SeriesCardCoverStackCoverLayout(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 96)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 40);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 160);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SeriesCardCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  double v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  if (*(unsigned char *)(a2 + 96))
  {
    long long v6 = v5[1];
    *double v4 = *v5;
    v4[1] = v6;
    v4[2] = v5[2];
    *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)((char *)v5 + 41);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v7;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v4, v5);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = 0;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v8;
    uint64_t v9 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v9;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    uint64_t v10 = *(void *)(a2 + 192);
    uint64_t v11 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v10;
    *(void *)(a1 + 200) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v12;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
  }
  return a1;
}

uint64_t assignWithCopy for SeriesCardCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    double v4 = (_OWORD *)(a1 + 40);
    uint64_t v5 = (long long *)(a2 + 40);
    sub_106954(a1 + 40);
    if (*(unsigned char *)(a2 + 96))
    {
      long long v6 = *v5;
      long long v7 = *(_OWORD *)(a2 + 56);
      long long v8 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      *(_OWORD *)(a1 + 56) = v7;
      *(_OWORD *)(a1 + 72) = v8;
      *double v4 = v6;
    }
    else
    {
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v9;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 96) = 0;
    }
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(a1 + 152);
  uint64_t v11 = (long long *)(a2 + 152);
  uint64_t v12 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v12)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_107A64(a1 + 152);
      long long v14 = *(_OWORD *)(a2 + 168);
      long long v13 = *(_OWORD *)(a2 + 184);
      long long v15 = *v11;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(_OWORD *)(a1 + 168) = v14;
      *(_OWORD *)(a1 + 184) = v13;
      *uint64_t v10 = v15;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v11;
    long long v17 = *(_OWORD *)(a2 + 168);
    long long v18 = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(_OWORD *)(a1 + 168) = v17;
    *(_OWORD *)(a1 + 184) = v18;
    *uint64_t v10 = v16;
  }
  return a1;
}

__n128 initializeWithTake for SeriesCardCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for SeriesCardCoverStackCoverLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    sub_106954(a1 + 40);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v4 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 160)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 160);
  if (!v5)
  {
    sub_107A64(a1 + 152);
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v8;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    return a1;
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v7 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesCardCoverStackCoverLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 144);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesCardCoverStackCoverLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 144) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesCardCoverStackCoverLayout()
{
  return &type metadata for SeriesCardCoverStackCoverLayout;
}

unsigned char *storeEnumTagSinglePayload for SeriesCardCoverStackCoverLayout.Position(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesCardCoverStackCoverLayout.Position()
{
  return &type metadata for SeriesCardCoverStackCoverLayout.Position;
}

unint64_t sub_24E340()
{
  unint64_t result = qword_2F7ED0;
  if (!qword_2F7ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F7ED0);
  }
  return result;
}

uint64_t sub_24E3C4()
{
  return sub_7C18(&qword_2F7ED8, &qword_2F7EE0);
}

uint64_t sub_24E400()
{
  return sub_7C18(&qword_2F7F10, &qword_2F7F18);
}

uint64_t EnvironmentValues.fonts.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26B0A0();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 16))(v5, v1);
  return sub_24E5B4(v5, a1);
}

uint64_t FontConstants.Environment.dynamicTypeSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
  uint64_t v4 = sub_26AB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

double FontConstants.Environment.pixelLength.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 28));
}

uint64_t FontConstants.env.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E7B8(v1, a1);
}

uint64_t sub_24E5B4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26B0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  long long v14 = &v19[-v13];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, a1, v4);
  unsigned char *v12 = EnvironmentValues.isCompact.getter() & 1;
  sub_2E42C();
  sub_26B0B0();
  v12[1] = v19[15];
  sub_26AE90();
  sub_26AE00();
  uint64_t v16 = v15;
  long long v17 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  *(void *)&v12[*(int *)(v9 + 36)] = v16;
  sub_250A0C((uint64_t)v12, (uint64_t)v14);
  v17(a1, v4);
  return sub_250A0C((uint64_t)v14, a2);
}

uint64_t type metadata accessor for FontConstants.Environment(uint64_t a1)
{
  return sub_2A148(a1, qword_2F8058);
}

uint64_t sub_24E7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FontSpec.font.getter()
{
  return swift_retain();
}

uint64_t FontSpec.font.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t FontSpec.init(font:minDynamicTypeSize:maxDynamicTypeSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FontSpec(0);
  uint64_t v9 = (uint64_t)a4 + *(int *)(v8 + 20);
  uint64_t v10 = sub_26AB40();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  uint64_t v12 = (uint64_t)a4 + *(int *)(v8 + 24);
  v11(v12, 1, 1, v10);
  *a4 = a1;
  sub_E1FA4(a2, v9);

  return sub_E1FA4(a3, v12);
}

uint64_t type metadata accessor for FontSpec(uint64_t a1)
{
  return sub_2A148(a1, qword_2F80F0);
}

uint64_t View.fontSpec(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v4 = sub_4A98(&qword_2EA770);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v36 = (uint64_t)&v33 - v7;
  uint64_t v8 = sub_4A98(&qword_2F09D0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  long long v14 = (char *)&v33 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - v15;
  sub_7B0C(&qword_2EB0D0);
  uint64_t v17 = sub_26ABD0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  uint64_t v35 = v18;
  __chkstk_darwin(v17);
  char v20 = (char *)&v33 - v19;
  uint64_t v21 = a1;
  sub_B678(a1, (uint64_t)v16, &qword_2F09D0);
  uint64_t v22 = type metadata accessor for FontSpec(0);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23(v16, 1, v22) == 1)
  {
    sub_B6DC((uint64_t)v16, &qword_2F09D0);
  }
  else
  {
    swift_retain();
    sub_11E4D4((uint64_t)v16);
  }
  sub_26BF80();
  swift_release();
  sub_B678(a1, (uint64_t)v14, &qword_2F09D0);
  unsigned int v24 = v23(v14, 1, v22);
  uint64_t v25 = (uint64_t)v37;
  if (v24 == 1)
  {
    sub_B6DC((uint64_t)v14, &qword_2F09D0);
    uint64_t v26 = sub_26AB40();
    uint64_t v27 = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v36, 1, 1, v26);
  }
  else
  {
    uint64_t v27 = v36;
    sub_B678((uint64_t)&v14[*(int *)(v22 + 20)], v36, &qword_2EA770);
    sub_11E4D4((uint64_t)v14);
  }
  sub_B678(v21, (uint64_t)v11, &qword_2F09D0);
  if (v23(v11, 1, v22) == 1)
  {
    sub_B6DC((uint64_t)v11, &qword_2F09D0);
    uint64_t v28 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 1, 1, v28);
  }
  else
  {
    sub_B678((uint64_t)&v11[*(int *)(v22 + 24)], v25, &qword_2EA770);
    sub_11E4D4((uint64_t)v11);
  }
  unint64_t v29 = sub_24EDC0();
  uint64_t v40 = v39;
  unint64_t v41 = v29;
  uint64_t v30 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.restrictedDynamicTypeSize(min:max:)(v27, v25, v30, WitnessTable);
  sub_B6DC(v25, &qword_2EA770);
  sub_B6DC(v27, &qword_2EA770);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v20, v30);
}

unint64_t sub_24EDC0()
{
  unint64_t result = qword_2EB0C8;
  if (!qword_2EB0C8)
  {
    sub_7B0C(&qword_2EB0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB0C8);
  }
  return result;
}

uint64_t View.fontSpec(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_7B0C(&qword_2EB0D0);
  uint64_t v4 = sub_26ABD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - v6;
  sub_26BF80();
  unint64_t v8 = sub_24EDC0();
  v11[0] = a3;
  v11[1] = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.unrestrictedDynamicTypeSize()(v4, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for FontConstants(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(v4 + 24);
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
  }
  return a1;
}

uint64_t destroy for FontConstants(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for FontConstants.Environment(0) + 24);
  uint64_t v2 = sub_26AB40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

_WORD *initializeWithCopy for FontConstants(_WORD *a1, _WORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
  return a1;
}

unsigned char *assignWithCopy for FontConstants(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)&a1[*(int *)(v4 + 28)] = *(void *)&a2[*(int *)(v4 + 28)];
  return a1;
}

_WORD *initializeWithTake for FontConstants(_WORD *a1, _WORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
  return a1;
}

unsigned char *assignWithTake for FontConstants(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  *(void *)&a1[*(int *)(v4 + 28)] = *(void *)&a2[*(int *)(v4 + 28)];
  return a1;
}

uint64_t getEnumTagSinglePayload for FontConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24F360);
}

uint64_t sub_24F360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FontConstants(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24F3E0);
}

uint64_t sub_24F3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FontConstants(uint64_t a1)
{
  return sub_2A148(a1, qword_2F7FC8);
}

uint64_t sub_24F470()
{
  uint64_t result = type metadata accessor for FontConstants.Environment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FontConstants.Environment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

_WORD *initializeWithCopy for FontConstants.Environment(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

unsigned char *assignWithCopy for FontConstants.Environment(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 28)] = *(void *)&a2[*(int *)(a3 + 28)];
  return a1;
}

_WORD *initializeWithTake for FontConstants.Environment(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

unsigned char *assignWithTake for FontConstants.Environment(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_26AB40();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 28)] = *(void *)&a2[*(int *)(a3 + 28)];
  return a1;
}

uint64_t getEnumTagSinglePayload for FontConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24F868);
}

uint64_t sub_24F868(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_26AB40();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FontConstants.Environment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24F92C);
}

unsigned char *sub_24F92C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_26AB40();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24F9D0()
{
  uint64_t result = sub_26AB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FontSpec(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_26AB40();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_4A98(&qword_2EA770);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13(v17, 1, v11))
    {
      uint64_t v18 = sub_4A98(&qword_2EA770);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t destroy for FontSpec(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_26AB40();
  uint64_t v10 = *(void *)(v5 - 8);
  int v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *initializeWithCopy for FontSpec(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_4A98(&qword_2EA770);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_4A98(&qword_2EA770);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for FontSpec(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA770);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA770);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

void *initializeWithTake for FontSpec(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_4A98(&qword_2EA770);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_4A98(&qword_2EA770);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for FontSpec(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_26AB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_4A98(&qword_2EA770);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_4A98(&qword_2EA770);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FontSpec(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_250698);
}

uint64_t sub_250698(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_4A98(&qword_2EA770);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FontSpec(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_250760);
}

void *sub_250760(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_4A98(&qword_2EA770);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25080C()
{
  sub_2508A8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2508A8()
{
  if (!qword_2EF5D0)
  {
    sub_26AB40();
    unint64_t v0 = sub_26D980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2EF5D0);
    }
  }
}

uint64_t sub_250900()
{
  return swift_getWitnessTable();
}

unint64_t sub_2509B4()
{
  unint64_t result = qword_2EF560;
  if (!qword_2EF560)
  {
    type metadata accessor for RestrictedDynamicTypeSizeViewModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EF560);
  }
  return result;
}

uint64_t sub_250A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ComicCoverEffect.init(shadowScale:cornerRadius:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ComicCoverEffect() + 24));
  *uint64_t v6 = swift_getKeyPath();
  sub_4A98(&qword_2EA970);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a1 = a2;
  a1[1] = a3;
  return result;
}

uint64_t type metadata accessor for ComicCoverEffect()
{
  uint64_t result = qword_2F81D8;
  if (!qword_2F81D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ComicCoverEffect.body(cover:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_4A98(&qword_2F8130);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ComicCoverEffect();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_2546E0(v3, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ComicCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_250DA0((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a2 = sub_250E04;
  a2[1] = v15;
  return result;
}

uint64_t sub_250D24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_26A940();
  double v7 = v6;
  double v9 = v8;
  *a3 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  a3[1] = v10;
  uint64_t v11 = sub_4A98(&qword_2F8250);
  return sub_250E08(a1, a2, (uint64_t)a3 + *(int *)(v11 + 44), v7, v9);
}

uint64_t sub_250DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComicCoverEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v40 = a3;
  uint64_t v9 = sub_26AC50();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_4A98(&qword_2F8258);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_4A98(&qword_2F8260);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = sub_4A98(&qword_2F8268);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (uint64_t *)((char *)&v39 - v27);
  *uint64_t v28 = sub_26C630();
  v28[1] = v29;
  uint64_t v30 = sub_4A98(&qword_2F8270);
  sub_251190(a1, a2, (uint64_t)v28 + *(int *)(v30 + 44), a4, a5);
  sub_251F28(a2, a1, (uint64_t)v15, a4, a5);
  uint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = (char *)v12 + *(int *)(v10 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  void *v12 = v31;
  v12[1] = v31;
  uint64_t v35 = (uint64_t)&v20[*(int *)(v17 + 44)];
  sub_2546E0((uint64_t)v12, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678((uint64_t)v15, (uint64_t)v20, &qword_2F8258);
  sub_65868((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_B6DC((uint64_t)v15, &qword_2F8258);
  sub_19CC4((uint64_t)v20, (uint64_t)v22, &qword_2F8260);
  sub_B678((uint64_t)v28, (uint64_t)v26, &qword_2F8268);
  sub_B678((uint64_t)v22, (uint64_t)v20, &qword_2F8260);
  uint64_t v36 = v40;
  sub_B678((uint64_t)v26, v40, &qword_2F8268);
  uint64_t v37 = sub_4A98(&qword_2F8278);
  sub_B678((uint64_t)v20, v36 + *(int *)(v37 + 48), &qword_2F8260);
  sub_B6DC((uint64_t)v22, &qword_2F8260);
  sub_B6DC((uint64_t)v28, &qword_2F8268);
  sub_B6DC((uint64_t)v20, &qword_2F8260);
  return sub_B6DC((uint64_t)v26, &qword_2F8268);
}

uint64_t sub_251190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v110 = a2;
  uint64_t v122 = a3;
  uint64_t v8 = sub_26C700();
  uint64_t v120 = *(void *)(v8 - 8);
  uint64_t v121 = v8;
  __chkstk_darwin(v8);
  uint64_t v119 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_4A98(&qword_2F82A0) - 8;
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_4A98(&qword_2F82B0) - 8;
  __chkstk_darwin(v106);
  uint64_t v105 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_4A98(&qword_2F82B8) - 8;
  __chkstk_darwin(v117);
  uint64_t v112 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_4A98(&qword_2F82C0) - 8;
  __chkstk_darwin(v115);
  uint64_t v111 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_4A98(&qword_2F82C8) - 8;
  __chkstk_darwin(v114);
  uint64_t v109 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_4A98(&qword_2F82D0) - 8;
  uint64_t v15 = __chkstk_darwin(v113);
  uint64_t v118 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v108 = (char *)&v85 - v18;
  __chkstk_darwin(v17);
  uint64_t v116 = (uint64_t)&v85 - v19;
  uint64_t v102 = sub_26A6E0();
  uint64_t v123 = *(void *)(v102 - 8);
  uint64_t v20 = __chkstk_darwin(v102);
  uint64_t v101 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v100 = (uint64_t)&v85 - v22;
  uint64_t v23 = sub_26AC50();
  uint64_t v24 = v23 - 8;
  uint64_t v99 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4A98(&qword_2ECB78);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2ECB80);
  uint64_t v32 = v31 - 8;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v85 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_4A98(&qword_2ECB88) - 8;
  __chkstk_darwin(v88);
  uint64_t v36 = (char *)&v85 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_4A98(&qword_2ECB90) - 8;
  __chkstk_darwin(v92);
  uint64_t v38 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_4A98(&qword_2ECB98) - 8;
  uint64_t v39 = __chkstk_darwin(v91);
  uint64_t v103 = (uint64_t)&v85 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v89 = (uint64_t)&v85 - v42;
  __chkstk_darwin(v41);
  uint64_t v90 = (uint64_t)&v85 - v43;
  uint64_t v44 = *(void *)(a1 + 8);
  uint64_t v45 = &v26[*(int *)(v24 + 28)];
  uint64_t v46 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v96 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v95 = sub_26B160();
  uint64_t v47 = *(void *)(v95 - 8);
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 104);
  uint64_t v97 = v47 + 104;
  v94(v45, v46, v95);
  *(void *)uint64_t v26 = v44;
  *((void *)v26 + 1) = v44;
  uint64_t v48 = sub_26C150();
  uint64_t v93 = &type metadata accessor for RoundedRectangle;
  sub_2546E0((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v30[*(int *)(v28 + 60)] = v48;
  *(_WORD *)&v30[*(int *)(v28 + 64)] = 256;
  uint64_t v98 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  double v49 = *(double *)a1;
  uint64_t v85 = a1;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  sub_B678((uint64_t)v30, (uint64_t)v34, &qword_2ECB78);
  uint64_t v50 = &v34[*(int *)(v32 + 44)];
  long long v51 = v125;
  *(_OWORD *)uint64_t v50 = v124;
  *((_OWORD *)v50 + 1) = v51;
  *((_OWORD *)v50 + 2) = v126;
  sub_B6DC((uint64_t)v30, &qword_2ECB78);
  sub_B678((uint64_t)v34, (uint64_t)v36, &qword_2ECB80);
  uint64_t v52 = &v36[*(int *)(v88 + 44)];
  *(void *)uint64_t v52 = 0;
  *((double *)v52 + 1) = (1.0 - v49) * a5 * -0.125;
  sub_B6DC((uint64_t)v34, &qword_2ECB80);
  uint64_t v88 = a1 + *(int *)(type metadata accessor for ComicCoverEffect() + 24);
  uint64_t v53 = v100;
  sub_40FB4(v100);
  unsigned int v87 = enum case for ColorScheme.dark(_:);
  uint64_t v54 = v123;
  uint64_t v86 = *(void (**)(char *))(v123 + 104);
  char v55 = v101;
  uint64_t v56 = v102;
  v86(v101);
  uint64_t v57 = v53;
  LOBYTE(v53) = sub_26A6D0();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v123 = v54 + 8;
  v58(v55, v56);
  v58((char *)v57, v56);
  if (v53) {
    double v59 = 0.9;
  }
  else {
    double v59 = 0.75;
  }
  sub_B678((uint64_t)v36, (uint64_t)v38, &qword_2ECB88);
  *(double *)&v38[*(int *)(v92 + 44)] = v59;
  sub_B6DC((uint64_t)v36, &qword_2ECB88);
  uint64_t v60 = v89;
  sub_B678((uint64_t)v38, v89, &qword_2ECB90);
  uint64_t v61 = v60 + *(int *)(v91 + 44);
  *(double *)uint64_t v61 = a4 * 0.035;
  *(unsigned char *)(v61 + 8) = 0;
  sub_B6DC((uint64_t)v38, &qword_2ECB90);
  uint64_t v62 = v90;
  sub_19CC4(v60, v90, &qword_2ECB98);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v63 = sub_4A98(&qword_2F8130);
  uint64_t v64 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v104, v110, v63);
  uint64_t v65 = (_OWORD *)(v64 + *(int *)(v107 + 44));
  long long v66 = v128;
  *uint64_t v65 = v127;
  v65[1] = v66;
  v65[2] = v129;
  uint64_t v67 = *(void *)(v85 + 8);
  v94(&v26[*(int *)(v99 + 28)], v96, v95);
  *(void *)uint64_t v26 = v67;
  *((void *)v26 + 1) = v67;
  uint64_t v68 = (uint64_t)v105;
  uint64_t v69 = (uint64_t)&v105[*(int *)(v106 + 44)];
  sub_2546E0((uint64_t)v26, v69, (uint64_t (*)(void))v93);
  *(_WORD *)(v69 + *(int *)(sub_4A98(&qword_2EB8C0) + 36)) = 256;
  sub_B678(v64, v68, &qword_2F82A0);
  sub_65868((uint64_t)v26, (uint64_t (*)(void))v98);
  sub_B6DC(v64, &qword_2F82A0);
  sub_40FB4(v57);
  ((void (*)(char *, void, uint64_t))v86)(v55, v87, v56);
  LOBYTE(v69) = sub_26A6D0();
  v58(v55, v56);
  v58((char *)v57, v56);
  if (v69) {
    double v70 = 0.15;
  }
  else {
    double v70 = 0.5;
  }
  uint64_t v71 = v112;
  sub_B678(v68, v112, &qword_2F82B0);
  *(double *)(v71 + *(int *)(v117 + 44)) = v70;
  sub_B6DC(v68, &qword_2F82B0);
  uint64_t v72 = v111;
  sub_B678(v71, v111, &qword_2F82B8);
  uint64_t v73 = v72 + *(int *)(v115 + 44);
  *(double *)uint64_t v73 = a4 * 0.035;
  *(unsigned char *)(v73 + 8) = 0;
  sub_B6DC(v71, &qword_2F82B8);
  uint64_t v74 = v109;
  sub_B678(v72, v109, &qword_2F82C0);
  *(void *)(v74 + *(int *)(v114 + 44)) = 0x3FF199999999999ALL;
  sub_B6DC(v72, &qword_2F82C0);
  uint64_t v76 = v119;
  uint64_t v75 = v120;
  uint64_t v77 = v121;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v119, enum case for BlendMode.color(_:), v121);
  uint64_t v78 = (uint64_t)v108;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v108[*(int *)(v113 + 44)], v76, v77);
  sub_B678(v74, v78, &qword_2F82C8);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  sub_B6DC(v74, &qword_2F82C8);
  uint64_t v79 = v116;
  sub_19CC4(v78, v116, &qword_2F82D0);
  uint64_t v80 = v103;
  sub_B678(v62, v103, &qword_2ECB98);
  uint64_t v81 = v118;
  sub_B678(v79, v118, &qword_2F82D0);
  uint64_t v82 = v122;
  sub_B678(v80, v122, &qword_2ECB98);
  uint64_t v83 = sub_4A98(&qword_2F82D8);
  sub_B678(v81, v82 + *(int *)(v83 + 48), &qword_2F82D0);
  sub_B6DC(v79, &qword_2F82D0);
  sub_B6DC(v62, &qword_2ECB98);
  sub_B6DC(v81, &qword_2F82D0);
  return sub_B6DC(v80, &qword_2ECB98);
}

uint64_t sub_251EF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_251F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_251F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v237 = a2;
  uint64_t v231 = a3;
  uint64_t v8 = sub_26A6E0();
  uint64_t v224 = *(void *)(v8 - 8);
  uint64_t v225 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  long long v223 = (char *)&v202 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v222 = (uint64_t)&v202 - v11;
  uint64_t v242 = sub_26A7A0();
  uint64_t v255 = *(void *)(v242 - 8);
  __chkstk_darwin(v242);
  v240 = (char *)&v202 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_4A98(&qword_2ECAF0) - 8;
  uint64_t v13 = __chkstk_darwin(v249);
  unint64_t v230 = (uint64_t *)((char *)&v202 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v216 = (uint64_t *)((char *)&v202 - v15);
  uint64_t v220 = sub_4A98(&qword_2ECAF8) - 8;
  uint64_t v16 = __chkstk_darwin(v220);
  uint64_t v229 = (uint64_t)&v202 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v218 = (uint64_t)&v202 - v18;
  uint64_t v219 = sub_4A98(&qword_2ECB00) - 8;
  uint64_t v19 = __chkstk_darwin(v219);
  uint64_t v227 = (char *)&v202 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v217 = (char *)&v202 - v21;
  uint64_t v243 = sub_26AC50() - 8;
  __chkstk_darwin(v243);
  v213 = (char *)&v202 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_4A98(&qword_2ECB08) - 8;
  uint64_t v23 = __chkstk_darwin(v244);
  uint64_t v221 = (uint64_t)&v202 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v235 = (uint64_t)&v202 - v25;
  uint64_t v238 = sub_4A98(&qword_2ECB10) - 8;
  uint64_t v26 = __chkstk_darwin(v238);
  uint64_t v226 = (char *)&v202 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v215 = (char *)&v202 - v28;
  uint64_t v247 = sub_4A98(&qword_2ECB18) - 8;
  uint64_t v29 = __chkstk_darwin(v247);
  uint64_t v228 = (uint64_t)&v202 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v245 = (uint64_t)&v202 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v246 = (uint64_t)&v202 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v214 = (uint64_t)&v202 - v36;
  __chkstk_darwin(v35);
  uint64_t v248 = (uint64_t)&v202 - v37;
  uint64_t v212 = sub_4A98(&qword_2F8280) - 8;
  uint64_t v38 = __chkstk_darwin(v212);
  uint64_t v252 = (uint64_t)&v202 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v259 = (uint64_t)&v202 - v40;
  uint64_t v210 = sub_4A98(&qword_2F8288) - 8;
  __chkstk_darwin(v210);
  uint64_t v209 = (char *)&v202 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_4A98(&qword_2F8290) - 8;
  uint64_t v42 = __chkstk_darwin(v233);
  uint64_t v251 = (uint64_t)&v202 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v258 = (uint64_t)&v202 - v44;
  uint64_t v45 = sub_26AC80();
  __chkstk_darwin(v45 - 8);
  v268 = (char *)&v202 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_26C700();
  uint64_t v47 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  double v49 = (char *)&v202 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_4A98(&qword_2ECB20) - 8;
  uint64_t v50 = __chkstk_darwin(v253);
  uint64_t v254 = (uint64_t)&v202 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v261 = (uint64_t)&v202 - v52;
  uint64_t v234 = sub_4A98(&qword_2F8298) - 8;
  uint64_t v53 = __chkstk_darwin(v234);
  uint64_t v239 = (uint64_t)&v202 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v257 = (uint64_t)&v202 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v264 = (uint64_t)&v202 - v58;
  __chkstk_darwin(v57);
  uint64_t v256 = (uint64_t)&v202 - v59;
  uint64_t v60 = sub_4A98(&qword_2F82A0);
  uint64_t v61 = v60 - 8;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v236 = (uint64_t)&v202 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  uint64_t v65 = (char *)&v202 - v64;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  double v269 = a5;
  sub_26A8D0();
  uint64_t v66 = sub_4A98(&qword_2F8130);
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
  v241 = v65;
  v67(v65, a1, v66);
  uint64_t v68 = &v65[*(int *)(v61 + 44)];
  long long v69 = v274;
  *(_OWORD *)uint64_t v68 = v273;
  *((_OWORD *)v68 + 1) = v69;
  *((_OWORD *)v68 + 2) = v275;
  uint64_t v250 = sub_4A98(&qword_2ECB40);
  uint64_t v70 = swift_allocObject();
  long long v211 = xmmword_270BF0;
  *(_OWORD *)(v70 + 16) = xmmword_270BF0;
  sub_26C150();
  *(void *)(v70 + 32) = sub_26C560();
  *(void *)(v70 + 40) = v71;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v70 + 48) = sub_26C560();
  *(void *)(v70 + 56) = v72;
  sub_26C7B0();
  sub_26C7A0();
  sub_26C570();
  sub_26AA80();
  uint64_t v73 = v276;
  long long v266 = v277;
  uint64_t v74 = v278;
  uint64_t v75 = v279;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  v265 = v280;
  char v76 = v281;
  uint64_t v77 = v282;
  LOBYTE(a1) = v283;
  uint64_t v208 = v284;
  uint64_t v78 = v285;
  uint64_t v272 = v47;
  v270 = *(void (**)(void))(v47 + 104);
  uint64_t v271 = v47 + 104;
  uint64_t v79 = v49;
  uint64_t v80 = v260;
  ((void (*)(char *, void, uint64_t))v270)(v49, enum case for BlendMode.plusDarker(_:), v260);
  v262 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v267 = v47 + 16;
  uint64_t v81 = (uint64_t)v268;
  v262(v268, v49, v80);
  uint64_t v82 = v261;
  uint64_t v83 = v261 + *(int *)(v253 + 44);
  v263 = &type metadata accessor for _BlendModeEffect;
  sub_2546E0(v81, v83, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v82 = v73;
  *(_OWORD *)(v82 + 8) = v266;
  *(void *)(v82 + 24) = v74;
  *(void *)(v82 + 32) = v75;
  *(void *)(v82 + 40) = v265;
  *(unsigned char *)(v82 + 48) = v76;
  *(void *)(v82 + 56) = v77;
  *(unsigned char *)(v82 + 64) = a1;
  *(void *)(v82 + 72) = v208;
  *(void *)(v82 + 80) = v78;
  *(void *)(v82 + 88) = 0x3FA999999999999ALL;
  swift_bridgeObjectRetain();
  *(void *)&long long v266 = &type metadata accessor for _BlendModeEffect;
  sub_65868(v81, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v84 = *(uint64_t (***)(void))(v272 + 8);
  v272 += 8;
  v265 = v84;
  uint64_t v85 = v80;
  ((void (*)(char *, uint64_t))v84)(v79, v80);
  sub_65900((uint64_t)&v276);
  uint64_t v86 = v264;
  sub_B678(v82, v264, &qword_2ECB20);
  *(unsigned char *)(v86 + *(int *)(v234 + 44)) = 1;
  sub_B6DC(v82, &qword_2ECB20);
  sub_19CC4(v86, v256, &qword_2F8298);
  uint64_t v87 = swift_allocObject();
  long long v207 = xmmword_286980;
  *(_OWORD *)(v87 + 16) = xmmword_286980;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v87 + 32) = sub_26C560();
  *(void *)(v87 + 40) = v88;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v87 + 48) = sub_26C560();
  *(void *)(v87 + 56) = v89;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v87 + 64) = sub_26C560();
  *(void *)(v87 + 72) = v90;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v87 + 80) = sub_26C560();
  *(void *)(v87 + 88) = v91;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v87 + 96) = sub_26C560();
  *(void *)(v87 + 104) = v92;
  sub_26C7F0();
  sub_26C800();
  sub_26C570();
  sub_26AA80();
  uint64_t v93 = v286;
  long long v206 = v287;
  uint64_t v94 = v288;
  uint64_t v95 = v289;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v205 = v290;
  int v204 = v291;
  uint64_t v96 = v292;
  LOBYTE(a1) = v293;
  uint64_t v97 = v294;
  uint64_t v203 = v295;
  LODWORD(v208) = enum case for BlendMode.softLight(_:);
  uint64_t v98 = v79;
  uint64_t v99 = v85;
  v270(v79);
  uint64_t v100 = (uint64_t)v268;
  v262(v268, v79, v85);
  uint64_t v101 = (uint64_t)v209;
  sub_2546E0(v100, (uint64_t)&v209[*(int *)(v210 + 44)], (uint64_t (*)(void))v263);
  *(void *)uint64_t v101 = v93;
  *(_OWORD *)(v101 + 8) = v206;
  *(void *)(v101 + 24) = v94;
  *(void *)(v101 + 32) = v95;
  *(void *)(v101 + 40) = v205;
  *(unsigned char *)(v101 + 48) = v204;
  *(void *)(v101 + 56) = v96;
  *(unsigned char *)(v101 + 64) = a1;
  uint64_t v102 = v203;
  *(void *)(v101 + 72) = v97;
  *(void *)(v101 + 80) = v102;
  swift_bridgeObjectRetain();
  sub_65868(v100, (uint64_t (*)(void))v266);
  ((void (*)(char *, uint64_t))v265)(v79, v99);
  sub_65900((uint64_t)&v286);
  uint64_t v103 = v251;
  sub_B678(v101, v251, &qword_2F8288);
  *(unsigned char *)(v103 + *(int *)(v233 + 44)) = 1;
  sub_B6DC(v101, &qword_2F8288);
  sub_19CC4(v103, v258, &qword_2F8290);
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = v207;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v104 + 32) = sub_26C560();
  *(void *)(v104 + 40) = v105;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v104 + 48) = sub_26C560();
  *(void *)(v104 + 56) = v106;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v104 + 64) = sub_26C560();
  *(void *)(v104 + 72) = v107;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v104 + 80) = sub_26C560();
  *(void *)(v104 + 88) = v108;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v104 + 96) = sub_26C560();
  *(void *)(v104 + 104) = v109;
  sub_26C7F0();
  sub_26C800();
  sub_26C570();
  sub_26AA80();
  uint64_t v210 = v296[0];
  uint64_t v110 = v296[1];
  uint64_t v111 = v296[2];
  uint64_t v112 = v296[3];
  uint64_t v113 = v296[4];
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v209 = (char *)v296[5];
  LOBYTE(v103) = v297;
  *(void *)&long long v207 = v298;
  LOBYTE(a1) = v299;
  uint64_t v114 = v300;
  uint64_t v115 = v301;
  LODWORD(v233) = enum case for BlendMode.screen(_:);
  uint64_t v116 = v99;
  v270(v98);
  uint64_t v117 = (uint64_t)v268;
  v262(v268, v98, v99);
  uint64_t v118 = v261;
  sub_2546E0(v117, v261 + *(int *)(v253 + 44), (uint64_t (*)(void))v263);
  uint64_t v119 = v209;
  *(void *)uint64_t v118 = v210;
  *(void *)(v118 + 8) = v110;
  *(void *)(v118 + 16) = v111;
  *(void *)(v118 + 24) = v112;
  *(void *)(v118 + 32) = v113;
  *(void *)(v118 + 40) = v119;
  *(unsigned char *)(v118 + 48) = v103;
  *(void *)(v118 + 56) = v207;
  *(unsigned char *)(v118 + 64) = a1;
  *(void *)(v118 + 72) = v114;
  *(void *)(v118 + 80) = v115;
  *(void *)(v118 + 88) = 0x3FD0000000000000;
  uint64_t v120 = v118;
  swift_bridgeObjectRetain();
  sub_65868(v117, (uint64_t (*)(void))v266);
  uint64_t v121 = v98;
  uint64_t v122 = v98;
  uint64_t v123 = v116;
  ((void (*)(char *, uint64_t))v265)(v122, v116);
  sub_65900((uint64_t)v296);
  uint64_t v124 = v264;
  sub_B678(v120, v264, &qword_2ECB20);
  *(unsigned char *)(v124 + *(int *)(v234 + 44)) = 1;
  sub_B6DC(v120, &qword_2ECB20);
  sub_19CC4(v124, v257, &qword_2F8298);
  uint64_t v125 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v234 = v302;
  LODWORD(v210) = v303;
  uint64_t v126 = v304;
  LOBYTE(a1) = v305;
  uint64_t v127 = v306;
  uint64_t v128 = v307;
  long long v129 = v121;
  uint64_t v232 = v121;
  ((void (*)(char *, void, uint64_t))v270)(v121, v233, v123);
  uint64_t v130 = (uint64_t)v268;
  unint64_t v131 = v129;
  uint64_t v132 = v123;
  v262(v268, v131, v123);
  uint64_t v133 = v252;
  sub_2546E0(v130, v252 + *(int *)(v212 + 44), (uint64_t (*)(void))v263);
  *(void *)uint64_t v133 = v125;
  *(unsigned char *)(v133 + 8) = 0;
  *(unsigned char *)(v133 + 9) = 1;
  *(void *)(v133 + 16) = v234;
  *(unsigned char *)(v133 + 24) = v210;
  *(void *)(v133 + 32) = v126;
  *(unsigned char *)(v133 + 40) = a1;
  *(void *)(v133 + 48) = v127;
  *(void *)(v133 + 56) = v128;
  *(double *)(v133 + 64) = a4 * 0.2;
  *(unsigned char *)(v133 + 72) = 0;
  *(void *)(v133 + 80) = 0x3FC3333333333333;
  swift_retain();
  sub_65868(v130, (uint64_t (*)(void))v266);
  uint64_t v134 = v232;
  ((void (*)(char *, uint64_t))v265)(v232, v132);
  swift_release();
  sub_19CC4(v133, v259, &qword_2F8280);
  uint64_t v135 = swift_allocObject();
  *(_OWORD *)(v135 + 16) = v211;
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  *(void *)(v135 + 32) = sub_26C560();
  *(void *)(v135 + 40) = v136;
  sub_26C150();
  sub_26C1C0();
  swift_release();
  *(void *)(v135 + 48) = sub_26C560();
  *(void *)(v135 + 56) = v137;
  sub_26C7C0();
  sub_26C7D0();
  sub_26C570();
  sub_26AA80();
  uint64_t v250 = v308[0];
  uint64_t v138 = v308[1];
  uint64_t v139 = v308[2];
  uint64_t v140 = v308[3];
  uint64_t v141 = v308[4];
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v142 = v308[5];
  LOBYTE(v132) = v309;
  uint64_t v143 = v310;
  LOBYTE(a1) = v311;
  uint64_t v144 = v312;
  uint64_t v145 = v313;
  uint64_t v146 = v260;
  ((void (*)(char *, void, uint64_t))v270)(v134, v208, v260);
  uint64_t v147 = (uint64_t)v268;
  v262(v268, v134, v146);
  uint64_t v148 = v261;
  sub_2546E0(v147, v261 + *(int *)(v253 + 44), (uint64_t (*)(void))v263);
  *(void *)uint64_t v148 = v250;
  *(void *)(v148 + 8) = v138;
  *(void *)(v148 + 16) = v139;
  *(void *)(v148 + 24) = v140;
  *(void *)(v148 + 32) = v141;
  *(void *)(v148 + 40) = v142;
  *(unsigned char *)(v148 + 48) = v132;
  *(void *)(v148 + 56) = v143;
  *(unsigned char *)(v148 + 64) = a1;
  *(void *)(v148 + 72) = v144;
  *(void *)(v148 + 80) = v145;
  *(void *)(v148 + 88) = 0x3FD999999999999ALL;
  swift_bridgeObjectRetain();
  sub_65868(v147, (uint64_t (*)(void))v266);
  ((void (*)(char *, uint64_t))v265)(v232, v146);
  sub_65900((uint64_t)v308);
  sub_19CC4(v148, v254, &qword_2ECB20);
  uint64_t v149 = *(void *)(v237 + 8);
  uint64_t v150 = v213;
  uint64_t v151 = &v213[*(int *)(v243 + 28)];
  uint64_t v152 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v268) = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v267 = sub_26B160();
  uint64_t v153 = *(void *)(v267 - 8);
  *(void *)&long long v266 = *(void *)(v153 + 104);
  uint64_t v272 = v153 + 104;
  ((void (*)(char *, uint64_t, uint64_t))v266)(v151, v152, v267);
  void *v150 = v149;
  v150[1] = v149;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  v265 = &type metadata accessor for RoundedRectangle;
  uint64_t v154 = v235;
  sub_2546E0((uint64_t)v150, v235, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v155 = (_OWORD *)(v154 + *(int *)(v244 + 44));
  long long v156 = v315;
  *uint64_t v155 = v314;
  v155[1] = v156;
  v155[2] = v316;
  v263 = &type metadata accessor for RoundedRectangle;
  sub_65868((uint64_t)v150, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v157 = sub_26C150();
  _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C1C0();
  swift_release();
  uint64_t v158 = v240;
  sub_26A790();
  swift_release();
  uint64_t v159 = v216;
  uint64_t v160 = (char *)v216 + *(int *)(v249 + 44);
  uint64_t v161 = v255;
  v262 = *(void (**)(char *, char *, uint64_t))(v255 + 16);
  uint64_t v162 = v242;
  v262(v160, v158, v242);
  uint64_t *v159 = v157;
  uint64_t v163 = *(void (**)(char *, uint64_t))(v161 + 8);
  uint64_t v255 = v161 + 8;
  uint64_t v253 = (uint64_t)v163;
  v163(v158, v162);
  type metadata accessor for ComicCoverEffect();
  uint64_t v164 = v222;
  sub_40FB4(v222);
  uint64_t v166 = v223;
  uint64_t v165 = v224;
  uint64_t v167 = v225;
  (*(void (**)(char *, void, uint64_t))(v224 + 104))(v223, enum case for ColorScheme.dark(_:), v225);
  LOBYTE(v157) = sub_26A6D0();
  v168 = *(void (**)(char *, uint64_t))(v165 + 8);
  v168(v166, v167);
  v168((char *)v164, v167);
  uint64_t v169 = v218;
  sub_B678((uint64_t)v159, v218, &qword_2ECAF0);
  float v170 = 0.15;
  if ((v157 & 1) == 0) {
    float v170 = 0.5;
  }
  uint64_t v171 = v220;
  *(float *)(v169 + *(int *)(v220 + 44)) = v170;
  sub_B6DC((uint64_t)v159, &qword_2ECAF0);
  uint64_t v172 = v219;
  uint64_t v173 = (uint64_t)v217;
  ((void (*)(char *, void, uint64_t))v270)(&v217[*(int *)(v219 + 44)], v233, v260);
  sub_19CC4(v169, v173, &qword_2ECAF8);
  uint64_t v174 = (uint64_t)v215;
  sub_B678(v173, (uint64_t)&v215[*(int *)(v238 + 44)], &qword_2ECB00);
  uint64_t v175 = v235;
  sub_B678(v235, v174, &qword_2ECB08);
  sub_B6DC(v173, &qword_2ECB00);
  sub_B6DC(v175, &qword_2ECB08);
  uint64_t v176 = v214;
  sub_B678(v174, v214, &qword_2ECB10);
  *(unsigned char *)(v176 + *(int *)(v247 + 44)) = 1;
  sub_B6DC(v174, &qword_2ECB10);
  sub_19CC4(v176, v248, &qword_2ECB18);
  uint64_t v177 = *(void *)(v237 + 8);
  ((void (*)(char *, void, uint64_t))v266)((char *)v150 + *(int *)(v243 + 28), v268, v267);
  void *v150 = v177;
  v150[1] = v177;
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  sub_26A8D0();
  uint64_t v178 = v221;
  sub_2546E0((uint64_t)v150, v221, (uint64_t (*)(void))v265);
  uint64_t v179 = (_OWORD *)(v178 + *(int *)(v244 + 44));
  long long v180 = v318;
  *uint64_t v179 = v317;
  v179[1] = v180;
  v179[2] = v319;
  sub_65868((uint64_t)v150, (uint64_t (*)(void))v263);
  uint64_t v181 = _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0();
  sub_26C150();
  sub_26C1C0();
  swift_release();
  v182 = v240;
  sub_26A790();
  swift_release();
  v183 = v230;
  uint64_t v184 = v242;
  v262((char *)v230 + *(int *)(v249 + 44), v182, v242);
  uint64_t *v183 = v181;
  ((void (*)(char *, uint64_t))v253)(v182, v184);
  uint64_t v185 = v229;
  sub_B678((uint64_t)v183, v229, &qword_2ECAF0);
  *(_DWORD *)(v185 + *(int *)(v171 + 44)) = 1048576000;
  sub_B6DC((uint64_t)v183, &qword_2ECAF0);
  uint64_t v186 = (uint64_t)v227;
  ((void (*)(char *, void, uint64_t))v270)(&v227[*(int *)(v172 + 44)], enum case for BlendMode.darken(_:), v260);
  sub_19CC4(v185, v186, &qword_2ECAF8);
  uint64_t v187 = (uint64_t)v226;
  sub_B678(v186, (uint64_t)&v226[*(int *)(v238 + 44)], &qword_2ECB00);
  sub_B678(v178, v187, &qword_2ECB08);
  sub_B6DC(v186, &qword_2ECB00);
  sub_B6DC(v178, &qword_2ECB08);
  uint64_t v188 = v245;
  sub_B678(v187, v245, &qword_2ECB10);
  *(unsigned char *)(v188 + *(int *)(v247 + 44)) = 1;
  sub_B6DC(v187, &qword_2ECB10);
  uint64_t v189 = v246;
  sub_19CC4(v188, v246, &qword_2ECB18);
  uint64_t v190 = v236;
  sub_B678((uint64_t)v241, v236, &qword_2F82A0);
  uint64_t v191 = v264;
  sub_B678(v256, v264, &qword_2F8298);
  uint64_t v192 = v251;
  sub_B678(v258, v251, &qword_2F8290);
  uint64_t v193 = v239;
  sub_B678(v257, v239, &qword_2F8298);
  sub_B678(v259, v252, &qword_2F8280);
  uint64_t v194 = v261;
  sub_B678(v254, v261, &qword_2ECB20);
  uint64_t v195 = v248;
  sub_B678(v248, v188, &qword_2ECB18);
  uint64_t v196 = v228;
  sub_B678(v189, v228, &qword_2ECB18);
  uint64_t v197 = v231;
  sub_B678(v190, v231, &qword_2F82A0);
  uint64_t v198 = (int *)sub_4A98(&qword_2F82A8);
  sub_B678(v191, v197 + v198[12], &qword_2F8298);
  sub_B678(v192, v197 + v198[16], &qword_2F8290);
  sub_B678(v193, v197 + v198[20], &qword_2F8298);
  uint64_t v199 = v252;
  sub_B678(v252, v197 + v198[24], &qword_2F8280);
  sub_B678(v194, v197 + v198[28], &qword_2ECB20);
  uint64_t v200 = v245;
  sub_B678(v245, v197 + v198[32], &qword_2ECB18);
  sub_B678(v196, v197 + v198[36], &qword_2ECB18);
  sub_B6DC(v246, &qword_2ECB18);
  sub_B6DC(v195, &qword_2ECB18);
  sub_B6DC(v254, &qword_2ECB20);
  sub_B6DC(v259, &qword_2F8280);
  sub_B6DC(v257, &qword_2F8298);
  sub_B6DC(v258, &qword_2F8290);
  sub_B6DC(v256, &qword_2F8298);
  sub_B6DC((uint64_t)v241, &qword_2F82A0);
  sub_B6DC(v196, &qword_2ECB18);
  sub_B6DC(v200, &qword_2ECB18);
  sub_B6DC(v194, &qword_2ECB20);
  sub_B6DC(v199, &qword_2F8280);
  sub_B6DC(v239, &qword_2F8298);
  sub_B6DC(v251, &qword_2F8290);
  sub_B6DC(v264, &qword_2F8298);
  return sub_B6DC(v236, &qword_2F82A0);
}

uint64_t sub_253C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_4A98(&qword_2F8130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2546E0(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ComicCoverEffect);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_250DA0((uint64_t)v14, v17 + v15);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_250E04;
  a3[1] = v17;
  return result;
}

uint64_t sub_253E34(uint64_t a1)
{
  uint64_t result = sub_253FDC(&qword_2F8178, (void (*)(uint64_t))type metadata accessor for ComicCoverEffect);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComicCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_253EA0);
}

uint64_t sub_253EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_4A98(&qword_2EAB20);
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ComicCoverEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_253F28);
}

uint64_t sub_253F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_4A98(&qword_2EAB20);
  double v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_253FA0()
{
  return sub_7C18(&qword_2F8218, &qword_2F8220);
}

uint64_t sub_253FDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for GlowShape()
{
  return &type metadata for GlowShape;
}

uint64_t sub_254034()
{
  return sub_7C18(&qword_2F8228, &qword_2F8230);
}

double sub_254070@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_254280((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_2540BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2543F8();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_254120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2543F8();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_254184(uint64_t a1)
{
  unint64_t v2 = sub_2543F8();

  return Shape.body.getter(a1, v2);
}

unint64_t sub_2541D4()
{
  unint64_t result = qword_2F8238;
  if (!qword_2F8238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8238);
  }
  return result;
}

unint64_t sub_25422C()
{
  unint64_t result = qword_2F8240;
  if (!qword_2F8240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8240);
  }
  return result;
}

double sub_254280@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_26B9F0();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMinY(v15);
  sub_26B9D0();
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetWidth(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMinY(v17);
  sub_26B9E0();
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetWidth(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetHeight(v19);
  sub_26B9E0();
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetHeight(v21);
  sub_26B9E0();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

unint64_t sub_2543F8()
{
  unint64_t result = qword_2F8248;
  if (!qword_2F8248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8248);
  }
  return result;
}

uint64_t sub_254450()
{
  uint64_t v1 = (int *)(type metadata accessor for ComicCoverEffect() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_4A98(&qword_2F8130);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v0 + v1[8] + v2;
  sub_4A98(&qword_2EA970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_26A6E0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_2545F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ComicCoverEffect() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_4A98(&qword_2F8130) - 8);
  uint64_t v7 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_250D24(v1 + v4, v7, a1);
}

uint64_t sub_2546E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FontConstants.ListItem.genericMetadata.getter()
{
  return sub_254F08((void (*)(uint64_t))&static Font.footnote.getter);
}

uint64_t FontConstants.SheetHeader.title.getter()
{
  sub_26B900();
  uint64_t v0 = sub_26B800();
  swift_release();
  return v0;
}

uint64_t FontConstants.SheetHeader.subtitle.getter()
{
  return sub_2552D0((unsigned int *)&enum case for Font.TextStyle.subheadline(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter);
}

uint64_t FontConstants.Navigation.smallTitle.getter()
{
  uint64_t v0 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26B980();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.subheadline(_:), v3);
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v7 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  }
  else
  {
    uint64_t v8 = enum case for Font.Design.serif (_:);
    uint64_t v9 = sub_26B820();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  }
  sub_26B8E0();
  sub_15B1A8((uint64_t)v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v11 = sub_26B800();
  swift_release();
  return v11;
}

uint64_t FontConstants.Navigation.title.getter()
{
  uint64_t v0 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26B980();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.headline(_:), v3);
  if (_s7BooksUI16FallBackFontSpecV03usecdE0SbyFZ_0())
  {
    uint64_t v7 = sub_26B820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  }
  else
  {
    uint64_t v8 = enum case for Font.Design.serif (_:);
    uint64_t v9 = sub_26B820();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  }
  uint64_t v11 = sub_26B8E0();
  sub_15B1A8((uint64_t)v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t FontConstants.Navigation.subtitle.getter()
{
  return sub_2552D0((unsigned int *)&enum case for Font.TextStyle.caption2(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter);
}

uint64_t FontConstants.ListItem.preheader.getter()
{
  uint64_t v0 = sub_26B910();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.caption2(_:), v7);
  uint64_t v11 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_26B8E0();
  sub_15B1A8((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_26B800();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v12 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v12;
}

uint64_t FontConstants.ListItem.editionsDescriptor.getter()
{
  return sub_254F08((void (*)(uint64_t))&static Font.caption2.getter);
}

uint64_t sub_254F08(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_26B910();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for Font.Leading.tight(_:), v2);
  uint64_t v7 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t FontConstants.Navigation.symbol.getter()
{
  return sub_2552D0((unsigned int *)&enum case for Font.TextStyle.callout(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
}

uint64_t _s7BooksUI13FontConstantsV6ButtonV05smallE5Title05SwiftB00C0Vvg_0()
{
  uint64_t v0 = sub_26B910();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  uint64_t v11 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_26B8B0();
  sub_26B8E0();
  sub_15B1A8((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v12 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v12;
}

uint64_t FontConstants.ListItem.symbol.getter()
{
  return sub_2552D0((unsigned int *)&enum case for Font.TextStyle.body(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
}

uint64_t sub_2552D0(unsigned int *a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26B980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *a1, v7);
  uint64_t v11 = sub_26B820();
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  a2(v12);
  uint64_t v13 = sub_26B8E0();
  sub_15B1A8((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t FontConstants.ListItem.finePrint.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26B910();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26DD70();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_26B980();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  CGRect v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Font.TextStyle.caption2(_:), v15);
  sub_24E7B8(v1, (uint64_t)v14);
  uint64_t v19 = (uint64_t)&v14[*(int *)(v12 + 32)];
  double v20 = sub_1AB90((uint64_t)v18, v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v21 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
  double v22 = v20 * 8.0;
  double v23 = *(double *)(v1 + *(int *)(v12 + 36));
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v7);
  double v33 = v22;
  sub_196FB4((uint64_t)v10, v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v24 = sub_26B820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
  sub_26B8D0();
  sub_15B1A8((uint64_t)v6);
  uint64_t v25 = v30;
  uint64_t v26 = v31;
  uint64_t v27 = v32;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for Font.Leading.tight(_:), v32);
  uint64_t v28 = sub_26B930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  return v28;
}

uint64_t _s6ButtonVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2558AC);
}

uint64_t _s6ButtonVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2558C4);
}

uint64_t type metadata accessor for FontConstants.Button(uint64_t a1)
{
  return sub_2A148(a1, qword_2F8338);
}

uint64_t _s8ListItemVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_255900);
}

uint64_t _s8ListItemVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_255918);
}

uint64_t type metadata accessor for FontConstants.ListItem(uint64_t a1)
{
  return sub_2A148(a1, qword_2F83C8);
}

uint64_t _s10NavigationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_255950);
}

uint64_t _s10NavigationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_255968);
}

uint64_t type metadata accessor for FontConstants.Navigation(uint64_t a1)
{
  return sub_2A148(a1, qword_2F8458);
}

uint64_t _s11SheetHeaderVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2559A0);
}

uint64_t sub_2559A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t _s11SheetHeaderVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_255A24);
}

uint64_t sub_255A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FontConstants.Environment(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FontConstants.SheetHeader(uint64_t a1)
{
  return sub_2A148(a1, qword_2F84E8);
}

uint64_t EnvironmentValues.isInVibrantContext.getter()
{
  return sub_256C88((void (*)(void))sub_3BD90);
}

uint64_t EnvironmentValues.isInVibrantContext.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_3BD90);
}

uint64_t EnvironmentValues.isCompact.getter()
{
  uint64_t v0 = sub_26B4B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v25 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4A98(&qword_2EB4C8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4A98(&qword_2EB3E0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  sub_26AF60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v13, 0, 1, v0);
  uint64_t v16 = (uint64_t)&v6[*(int *)(v4 + 56)];
  sub_B678((uint64_t)v15, (uint64_t)v6, &qword_2EB3E0);
  sub_B678((uint64_t)v13, v16, &qword_2EB3E0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_B6DC((uint64_t)v13, &qword_2EB3E0);
    sub_B6DC((uint64_t)v15, &qword_2EB3E0);
    int v18 = v17(v16, 1, v0);
    if (v18 == 1) {
      uint64_t v19 = &qword_2EB3E0;
    }
    else {
      uint64_t v19 = &qword_2EB4C8;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_B678((uint64_t)v6, (uint64_t)v10, &qword_2EB3E0);
    if (v17(v16, 1, v0) == 1)
    {
      sub_B6DC((uint64_t)v13, &qword_2EB3E0);
      sub_B6DC((uint64_t)v15, &qword_2EB3E0);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
      char v20 = 0;
      uint64_t v19 = &qword_2EB4C8;
    }
    else
    {
      uint64_t v21 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v25, v16, v0);
      sub_255E9C();
      char v20 = sub_26D360();
      double v22 = *(void (**)(char *, uint64_t))(v1 + 8);
      v22(v21, v0);
      uint64_t v19 = &qword_2EB3E0;
      sub_B6DC((uint64_t)v13, &qword_2EB3E0);
      sub_B6DC((uint64_t)v15, &qword_2EB3E0);
      v22(v10, v0);
    }
  }
  sub_B6DC((uint64_t)v6, v19);
  return v20 & 1;
}

unint64_t sub_255E9C()
{
  unint64_t result = qword_2EB620;
  if (!qword_2EB620)
  {
    sub_26B4B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EB620);
  }
  return result;
}

uint64_t EnvironmentValues.isInCard.getter()
{
  return sub_256C88((void (*)(void))sub_2E42C);
}

double sub_255F14()
{
  qword_2F8540 = 0;
  double result = 0.0;
  xmmword_2F8520 = 0u;
  *(_OWORD *)algn_2F8530 = 0u;
  return result;
}

uint64_t sub_255F2C@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D50 != -1) {
    swift_once();
  }
  return sub_B678((uint64_t)&xmmword_2F8520, a1, &qword_2EA6C8);
}

void sub_255F94(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
}

uint64_t sub_255FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_257ADC();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_256008()
{
  uint64_t v0 = sub_269A80();
  sub_6E18(v0, qword_2F8548);
  uint64_t v1 = sub_6B14(v0, (uint64_t)qword_2F8548);
  uint64_t v2 = sub_269C60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_25609C@<X0>(uint64_t a1@<X8>)
{
  if (qword_2E9D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_269A80();
  uint64_t v3 = sub_6B14(v2, (uint64_t)qword_2F8548);

  return sub_257048(v3, a1);
}

uint64_t EnvironmentValues.convertRectFromGlobalHandler.getter()
{
  sub_25615C();

  return sub_26B0B0();
}

unint64_t sub_25615C()
{
  unint64_t result = qword_2F8560;
  if (!qword_2F8560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8560);
  }
  return result;
}

uint64_t sub_2561B0()
{
  return sub_26B0B0();
}

uint64_t sub_2561F0(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v3, &qword_2EA6C8);
  sub_B678((uint64_t)v3, (uint64_t)&v2, &qword_2EA6C8);
  sub_25615C();
  sub_26B0C0();
  return sub_B6DC((uint64_t)v3, &qword_2EA6C8);
}

uint64_t EnvironmentValues.convertRectFromGlobalHandler.setter(uint64_t a1)
{
  sub_B678(a1, (uint64_t)v3, &qword_2EA6C8);
  sub_25615C();
  sub_26B0C0();
  return sub_B6DC(a1, &qword_2EA6C8);
}

void (*EnvironmentValues.convertRectFromGlobalHandler.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v3[16] = sub_25615C();
  sub_26B0B0();
  return sub_256348;
}

void sub_256348(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_B678(*a1, v3, &qword_2EA6C8);
    sub_B678(v3, (uint64_t)v2 + 80, &qword_2EA6C8);
    sub_26B0C0();
    sub_B6DC(v3, &qword_2EA6C8);
  }
  else
  {
    sub_B678(*a1, v3, &qword_2EA6C8);
    sub_26B0C0();
  }
  sub_B6DC((uint64_t)v2, &qword_2EA6C8);

  free(v2);
}

uint64_t EnvironmentValues.isInCard.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_2E42C);
}

uint64_t (*EnvironmentValues.isInCard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_2E42C();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_2564C8;
}

uint64_t sub_2564C8(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.isInList.getter()
{
  return sub_256C88((void (*)(void))sub_2564F4);
}

unint64_t sub_2564F4()
{
  unint64_t result = qword_2F8568;
  if (!qword_2F8568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8568);
  }
  return result;
}

uint64_t sub_256548@<X0>(unsigned char *a1@<X8>)
{
  sub_2564F4();
  uint64_t result = sub_26B0B0();
  *a1 = v3;
  return result;
}

uint64_t sub_256598()
{
  return sub_26B0C0();
}

uint64_t EnvironmentValues.isInList.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_2564F4);
}

uint64_t (*EnvironmentValues.isInList.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_2564F4();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_256678;
}

uint64_t sub_256678(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.isInModal.getter()
{
  return sub_256C88((void (*)(void))sub_2566A4);
}

unint64_t sub_2566A4()
{
  unint64_t result = qword_2F8570;
  if (!qword_2F8570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8570);
  }
  return result;
}

uint64_t EnvironmentValues.isInModal.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_2566A4);
}

uint64_t (*EnvironmentValues.isInModal.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_2566A4();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_25678C;
}

uint64_t sub_25678C(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.isPendingData.getter()
{
  return sub_256C88((void (*)(void))sub_469D0);
}

uint64_t EnvironmentValues.isPendingData.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_469D0);
}

uint64_t (*EnvironmentValues.isPendingData.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_469D0();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_25684C;
}

uint64_t sub_25684C(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.isReachable.getter()
{
  return sub_256C88((void (*)(void))sub_CB9C);
}

uint64_t EnvironmentValues.isReachable.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_CB9C);
}

uint64_t (*EnvironmentValues.isReachable.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_CB9C();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_25690C;
}

uint64_t sub_25690C(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.secondaryBlendMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2572A8((unsigned int *)&enum case for BlendMode.multiply(_:), (unsigned int *)&enum case for BlendMode.screen(_:), a1);
}

uint64_t EnvironmentValues.shelfBackgroundKind.getter()
{
  sub_2157F4();

  return sub_26B0B0();
}

uint64_t EnvironmentValues.shelfBackgroundKind.setter()
{
  return sub_26B0C0();
}

void (*EnvironmentValues.shelfBackgroundKind.modify(void *a1))(unint64_t **a1, char a2)
{
  char v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2157F4();
  sub_26B0B0();
  return sub_256A34;
}

void sub_256A34(unint64_t **a1, char a2)
{
  char v3 = *a1;
  unint64_t v4 = **a1;
  v3[2] = v4;
  char v5 = *((unsigned char *)v3 + 8);
  *((unsigned char *)v3 + 24) = v5;
  if (a2)
  {
    sub_1F9890(v4, v5);
    sub_26B0C0();
    sub_1FA7E0(*v3, *((unsigned char *)v3 + 8));
  }
  else
  {
    sub_26B0C0();
  }

  free(v3);
}

uint64_t (*EnvironmentValues.isInVibrantContext.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_3BD90();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_256B48;
}

uint64_t sub_256B48(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.isAnODPRecommendation.getter()
{
  return sub_256C88((void (*)(void))sub_256B74);
}

unint64_t sub_256B74()
{
  unint64_t result = qword_2F8578;
  if (!qword_2F8578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8578);
  }
  return result;
}

uint64_t EnvironmentValues.isAnODPRecommendation.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_256B74);
}

uint64_t (*EnvironmentValues.isAnODPRecommendation.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_256B74();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_256C5C;
}

uint64_t sub_256C5C(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t EnvironmentValues.supportsSuggestionContextMenu.getter()
{
  return sub_256C88((void (*)(void))sub_256CD0);
}

uint64_t sub_256C88(void (*a1)(void))
{
  a1();
  sub_26B0B0();
  return v2;
}

unint64_t sub_256CD0()
{
  unint64_t result = qword_2F8580;
  if (!qword_2F8580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8580);
  }
  return result;
}

uint64_t EnvironmentValues.supportsSuggestionContextMenu.setter(uint64_t a1)
{
  return sub_256D44(a1, (void (*)(void))sub_256CD0);
}

uint64_t sub_256D44(uint64_t a1, void (*a2)(void))
{
  return sub_26B0C0();
}

uint64_t (*EnvironmentValues.supportsSuggestionContextMenu.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_256CD0();
  sub_26B0B0();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_256E00;
}

uint64_t sub_256E00(uint64_t a1)
{
  return sub_256E0C(a1);
}

uint64_t sub_256E0C(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_26B0C0();
}

uint64_t EnvironmentValues.analyticsAttributes.getter()
{
  sub_256E84();

  return sub_26B0B0();
}

unint64_t sub_256E84()
{
  unint64_t result = qword_2F8588;
  if (!qword_2F8588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8588);
  }
  return result;
}

uint64_t sub_256ED8(uint64_t a1)
{
  uint64_t v2 = sub_269A80();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_257048(a1, (uint64_t)&v9 - v6);
  sub_257048((uint64_t)v7, (uint64_t)v5);
  sub_256E84();
  sub_26B0C0();
  return sub_2570AC((uint64_t)v7);
}

uint64_t EnvironmentValues.analyticsAttributes.setter(uint64_t a1)
{
  uint64_t v2 = sub_269A80();
  __chkstk_darwin(v2 - 8);
  sub_257048(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256E84();
  sub_26B0C0();
  return sub_2570AC(a1);
}

uint64_t sub_257048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_269A80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2570AC(uint64_t a1)
{
  uint64_t v2 = sub_269A80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*EnvironmentValues.analyticsAttributes.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(sub_269A80() - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_256E84();
  sub_26B0B0();
  return sub_2571C4;
}

void sub_2571C4(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_257048((*a1)[3], (*a1)[2]);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    sub_257048(v3[2], v3[1]);
    sub_26B0C0();
    sub_2570AC((uint64_t)v6);
  }
  else
  {
    sub_26B0C0();
  }
  sub_2570AC((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t EnvironmentValues.vibrantBlendMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2572A8((unsigned int *)&enum case for BlendMode.plusDarker(_:), (unsigned int *)&enum case for BlendMode.plusLighter(_:), a1);
}

uint64_t sub_2572A8@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26A6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_26ADD0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for ColorScheme.light(_:), v6);
  char v13 = sub_26A6D0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  uint64_t v15 = sub_26C700();
  if (v13) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = a2;
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(a3, *v16, v15);
}

uint64_t EnvironmentValues.defaultBlendModeConsideringVibrancy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_26A6E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v16[-v7];
  sub_3BD90();
  sub_26B0B0();
  if (v16[15] == 1)
  {
    sub_26ADD0();
    (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v6, enum case for ColorScheme.light(_:), v2);
    char v9 = sub_26A6D0();
    uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v10(v6, v2);
    v10(v8, v2);
    uint64_t v11 = sub_26C700();
    if (v9) {
      uint64_t v12 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    else {
      uint64_t v12 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(a1, *v12, v11);
  }
  else
  {
    uint64_t v13 = enum case for BlendMode.normal(_:);
    uint64_t v14 = sub_26C700();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a1, v13, v14);
  }
}

unint64_t sub_257640()
{
  unint64_t result = qword_2F8590;
  if (!qword_2F8590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8590);
  }
  return result;
}

uint64_t sub_257694()
{
  return sub_26B0B0();
}

uint64_t sub_2576D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_257818((void (*)(void))sub_2E42C, a1);
}

uint64_t sub_2576F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257894(a1, a2, a3, a4, (void (*)(void))sub_2E42C);
}

uint64_t sub_257718@<X0>(unsigned char *a1@<X8>)
{
  return sub_257818((void (*)(void))sub_2564F4, a1);
}

uint64_t sub_257738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257894(a1, a2, a3, a4, (void (*)(void))sub_2564F4);
}

uint64_t sub_257758@<X0>(unsigned char *a1@<X8>)
{
  return sub_257818((void (*)(void))sub_2566A4, a1);
}

uint64_t sub_257778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257894(a1, a2, a3, a4, (void (*)(void))sub_2566A4);
}

uint64_t sub_2577B8@<X0>(unsigned char *a1@<X8>)
{
  return sub_257818((void (*)(void))sub_256B74, a1);
}

uint64_t sub_2577D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257894(a1, a2, a3, a4, (void (*)(void))sub_256B74);
}

uint64_t sub_2577F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_257818((void (*)(void))sub_256CD0, a1);
}

uint64_t sub_257818@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_26B0B0();
  *a2 = v4;
  return result;
}

uint64_t sub_257874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257894(a1, a2, a3, a4, (void (*)(void))sub_256CD0);
}

uint64_t sub_257894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_26B0C0();
}

uint64_t sub_2578E4()
{
  return sub_26B0B0();
}

unsigned char *storeEnumTagSinglePayload for HostingViewBarType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2579F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostingViewBarType()
{
  return &type metadata for HostingViewBarType;
}

ValueMetadata *type metadata accessor for AnalyticsAttributes()
{
  return &type metadata for AnalyticsAttributes;
}

ValueMetadata *type metadata accessor for SupportsSuggestionContextMenu()
{
  return &type metadata for SupportsSuggestionContextMenu;
}

ValueMetadata *type metadata accessor for IsAnODPRecommendation()
{
  return &type metadata for IsAnODPRecommendation;
}

ValueMetadata *type metadata accessor for ShelfBackgroundKindKey()
{
  return &type metadata for ShelfBackgroundKindKey;
}

ValueMetadata *type metadata accessor for IsReachableKey()
{
  return &type metadata for IsReachableKey;
}

ValueMetadata *type metadata accessor for IsPendingData()
{
  return &type metadata for IsPendingData;
}

ValueMetadata *type metadata accessor for IsInModalKey()
{
  return &type metadata for IsInModalKey;
}

ValueMetadata *type metadata accessor for IsInListKey()
{
  return &type metadata for IsInListKey;
}

ValueMetadata *type metadata accessor for ConvertRectFromGlobalHandlerKey()
{
  return &type metadata for ConvertRectFromGlobalHandlerKey;
}

ValueMetadata *type metadata accessor for IsInCardKey()
{
  return &type metadata for IsInCardKey;
}

ValueMetadata *type metadata accessor for IsInVibrantContextKey()
{
  return &type metadata for IsInVibrantContextKey;
}

unint64_t sub_257ADC()
{
  unint64_t result = qword_2F8598;
  if (!qword_2F8598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8598);
  }
  return result;
}

uint64_t CoverStackView.init(layout:enableOverscrollEffects:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for CoverStackView();
  *(unsigned char *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for CoverStackView()
{
  return sub_129B4();
}

uint64_t CoverStackView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v67 = sub_269920();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v3 = __chkstk_darwin(v67);
  uint64_t v62 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v64 = (char *)&v60 - v5;
  uint64_t v65 = sub_26D3E0();
  uint64_t v63 = *(void *)(v65 - 8);
  uint64_t v6 = __chkstk_darwin(v65);
  uint64_t v60 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v60 - v8;
  uint64_t v86 = sub_26B600();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v82 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_26D680();
  uint64_t v13 = sub_7B0C(&qword_2F85A0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v102 = v12;
  uint64_t v103 = &type metadata for Double;
  uint64_t v104 = v13;
  uint64_t v105 = WitnessTable;
  uint64_t v106 = &protocol witness table for Double;
  uint64_t v72 = sub_26C510();
  unint64_t v101 = sub_258794();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v15 = sub_26C460();
  uint64_t v73 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_26ABD0();
  uint64_t v74 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v20 = (char *)&v60 - v19;
  uint64_t v21 = sub_26ABD0();
  uint64_t v80 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v70 = (char *)&v60 - v22;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v99 = v68;
  uint64_t v100 = &protocol witness table for _OffsetEffect;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v97 = v69;
  uint64_t v98 = &protocol witness table for _FrameLayout;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v102 = v21;
  uint64_t v103 = (void *)v23;
  uint64_t v75 = v23;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  char v76 = (char *)&v60 - v25;
  sub_26B6A0();
  uint64_t v79 = OpaqueTypeMetadata2;
  uint64_t v77 = sub_26ABD0();
  uint64_t v87 = *(void *)(v77 - 8);
  uint64_t v26 = __chkstk_darwin(v77);
  uint64_t v89 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v83 = (char *)&v60 - v29;
  __chkstk_darwin(v28);
  uint64_t v84 = (char *)&v60 - v30;
  sub_26C630();
  uint64_t v31 = v11;
  uint64_t v90 = v11;
  uint64_t v91 = v10;
  uint64_t v92 = v81;
  sub_26C450();
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v11, v10);
  sub_26BFC0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v17, v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v11, v10);
  _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
  uint64_t v32 = v70;
  sub_26BFA0();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v20, v18);
  uint64_t v33 = v31;
  uint64_t v74 = *(void *)(v10 + 56);
  if (((uint64_t (*)(uint64_t, uint64_t))v74)(v31, v10))
  {
    uint64_t v34 = v82;
    sub_26B5E0();
  }
  else
  {
    uint64_t v34 = v82;
    sub_26B5F0();
  }
  uint64_t v35 = v76;
  uint64_t v36 = v75;
  sub_26BEA0();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v34, v86);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v32, v21);
  uint64_t v102 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v33, v10);
  uint64_t v103 = v37;
  uint64_t v95 = v21;
  uint64_t v96 = v36;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_CC78();
  uint64_t v39 = v79;
  sub_26BE40();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v35, v39);
  if (((uint64_t (*)(uint64_t, uint64_t))v74)(v33, v10))
  {
    uint64_t v40 = v61;
    sub_26D370();
    uint64_t v86 = OpaqueTypeConformance2;
    uint64_t v41 = v64;
    sub_2698C0();
    uint64_t v42 = v63;
    uint64_t v43 = v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v40, v65);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v45 = [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v46 = v66;
    uint64_t v47 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v62, v41, v67);
    uint64_t v48 = sub_26D460();
    unint64_t v50 = v49;
    uint64_t v51 = v41;
    uint64_t OpaqueTypeConformance2 = v86;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v47);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v43);
  }
  else
  {
    uint64_t v48 = 0;
    unint64_t v50 = 0xE000000000000000;
  }
  uint64_t v102 = v48;
  uint64_t v103 = (void *)v50;
  uint64_t v52 = v83;
  uint64_t v53 = v77;
  uint64_t v54 = v89;
  sub_26ABB0();
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v87 + 8);
  v55(v54, v53);
  uint64_t v56 = sub_25B2C0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v93 = OpaqueTypeConformance2;
  uint64_t v94 = v56;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = v84;
  sub_CCCC(v52, v53, v57);
  v55(v52, v53);
  sub_CCCC(v58, v53, v57);
  return ((uint64_t (*)(char *, uint64_t))v55)(v58, v53);
}

unint64_t sub_258794()
{
  unint64_t result = qword_2F85A8;
  if (!qword_2F85A8)
  {
    sub_7B0C(&qword_2F85A0);
    sub_258858(&qword_2F85B0, &qword_2F85B8, (void (*)(void))sub_258908);
    sub_258858(&qword_2F85F8, &qword_2F8600, (void (*)(void))sub_258AD4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F85A8);
  }
  return result;
}

uint64_t sub_258858(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    sub_25B2C0((unint64_t *)&qword_2EAF28, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_258908()
{
  unint64_t result = qword_2F85C0;
  if (!qword_2F85C0)
  {
    sub_7B0C(&qword_2F85C8);
    sub_7B0C(&qword_2EB828);
    sub_7B0C(&qword_2F85D0);
    sub_1045D0();
    sub_7B0C(&qword_2F85D8);
    sub_26AD40();
    sub_25B2C0(&qword_2F85E0, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_258A78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F85C0);
  }
  return result;
}

unint64_t sub_258A78()
{
  unint64_t result = qword_2F85E8;
  if (!qword_2F85E8)
  {
    sub_7B0C(&qword_2F85F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F85E8);
  }
  return result;
}

unint64_t sub_258AD4()
{
  unint64_t result = qword_2F8608;
  if (!qword_2F8608)
  {
    sub_7B0C(&qword_2F8610);
    sub_258B50();
    sub_258A78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8608);
  }
  return result;
}

unint64_t sub_258B50()
{
  unint64_t result = qword_2F8618;
  if (!qword_2F8618)
  {
    sub_7B0C(qword_2F8620);
    sub_1045D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8618);
  }
  return result;
}

uint64_t sub_258BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v30 = type metadata accessor for CoverStackView();
  uint64_t v7 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)v26 - v8;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_26D680();
  uint64_t v29 = v10;
  uint64_t v11 = sub_7B0C(&qword_2F85A0);
  uint64_t v28 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = v10;
  uint64_t v37 = &type metadata for Double;
  uint64_t v38 = v11;
  uint64_t v39 = WitnessTable;
  uint64_t v40 = &protocol witness table for Double;
  uint64_t v12 = sub_26C510();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  v26[1] = swift_getKeyPath();
  uint64_t v18 = a1;
  uint64_t v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v30);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v19);
  unint64_t v25 = sub_258794();
  sub_26C4F0();
  unint64_t v35 = v25;
  uint64_t v22 = swift_getWitnessTable();
  sub_CCCC(v15, v12, v22);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v31 + 8);
  v23(v15, v12);
  sub_CCCC(v17, v12, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v17, v12);
}

uint64_t sub_258F1C@<X0>(uint64_t a1@<X8>)
{
  return sub_258BCC(v1[4], v1[2], v1[3], a1);
}

void sub_258F28(double *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(double (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v4 = swift_checkMetadataState();
  *a1 = v3(v4, AssociatedConformanceWitness);
}

uint64_t sub_258FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v47)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  int *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  unint64_t v65;
  _OWORD *v66;
  long long v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t OpaqueTypeConformance2;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  long long v103;
  long long v104;
  long long v105;
  long long v106;
  long long v107;
  uint64_t v108;
  _OWORD *v109;
  long long v110;
  uint64_t v111;
  double *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t ObjCClassFromMetadata;
  id v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  unint64_t v197;
  long long v198;
  long long v199;
  long long v200;
  long long v201;
  long long v202;
  long long v203;
  long long v204;
  long long v205;
  long long v206;
  long long v207;
  uint64_t v208;
  void v209[22];

  uint64_t v181 = a1;
  uint64_t v190 = a5;
  uint64_t v165 = sub_4A98(qword_2F8620);
  __chkstk_darwin(v165);
  uint64_t v167 = (uint64_t)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_4A98(&qword_2F8610);
  __chkstk_darwin(v164);
  uint64_t v166 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_4A98(&qword_2F8600);
  uint64_t v10 = __chkstk_darwin(v189);
  uint64_t v185 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  float v170 = (char *)&v151 - v13;
  __chkstk_darwin(v12);
  uint64_t v171 = (uint64_t)&v151 - v14;
  uint64_t v187 = sub_4A98(&qword_2F86A8);
  __chkstk_darwin(v187);
  uint64_t v188 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_269920();
  uint64_t v177 = *(void *)(v16 - 8);
  uint64_t v178 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v174 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v175 = (char *)&v151 - v19;
  uint64_t v179 = sub_26D3E0();
  uint64_t v176 = *(void *)(v179 - 8);
  uint64_t v20 = __chkstk_darwin(v179);
  uint64_t v172 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v173 = (char *)&v151 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v159 = *(void *)(AssociatedTypeWitness - 8);
  long long v156 = *(void *)(v159 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v157 = (char *)&v151 - v24;
  long long v180 = type metadata accessor for CoverStackView();
  uint64_t v155 = *(void *)(v180 - 8);
  uint64_t v152 = *(void *)(v155 + 64);
  __chkstk_darwin(v180);
  uint64_t v154 = (char *)&v151 - v25;
  v183 = type metadata accessor for CoverView();
  __chkstk_darwin(v183);
  v182 = (uint64_t *)((char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v191 = sub_4A98(&qword_2EB828);
  __chkstk_darwin(v191);
  uint64_t v192 = (unint64_t)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4A98(&qword_2F86B0);
  uint64_t v162 = *(void *)(v28 - 8);
  uint64_t v163 = v28;
  __chkstk_darwin(v28);
  uint64_t v160 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_4A98(&qword_2F85C8);
  __chkstk_darwin(v161);
  uint64_t v158 = (char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_4A98(&qword_2F85B8);
  uint64_t v31 = __chkstk_darwin(v186);
  uint64_t v184 = (char *)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  v168 = (char *)&v151 - v34;
  __chkstk_darwin(v33);
  uint64_t v169 = (uint64_t)&v151 - v35;
  uint64_t v36 = *(double (**)(uint64_t, uint64_t))(a4 + 32);
  double v37 = v36(a3, a4);
  double v39 = v38;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v41 = v181;
  (*(void (**)(uint64_t, uint64_t, double, double))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness, v37, v39);
  uint64_t v193 = a3;
  uint64_t v194 = a4;
  v36(a3, a4);
  uint64_t v42 = v41;
  double v43 = (*(double (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v45 = v44;
  double v46 = (*(double (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v47 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  uint64_t v153 = AssociatedTypeWitness;
  v47(v209, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v48 = v180;
  unint64_t v49 = a2;
  if (*(unsigned char *)(a2 + *(int *)(v180 + 36)) == 1)
  {
    sub_6C0F8((uint64_t)v209, (uint64_t)&v198);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = (uint64_t)v182;
    char *v182 = KeyPath;
    *(unsigned char *)(v51 + 40) = 0;
    *(void *)(v51 + 48) = swift_getKeyPath();
    *(unsigned char *)(v51 + 56) = 0;
    uint64_t v52 = (int *)v183;
    uint64_t v53 = (uint64_t *)(v51 + *(int *)(v183 + 24));
    *uint64_t v53 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = (uint64_t *)(v51 + v52[7]);
    char *v54 = swift_getKeyPath();
    sub_4A98(&qword_2EB918);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = (uint64_t *)(v51 + v52[8]);
    type metadata accessor for ProfileRestrictions();
    sub_25B2C0((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    char *v55 = sub_26AD70();
    v55[1] = v56;
    uint64_t v57 = v51 + v52[9];
    uint64_t v195 = 1;
    sub_26C340();
    uint64_t v58 = v197;
    *(unsigned char *)uint64_t v57 = v196;
    *(void *)(v57 + 8) = v58;
    uint64_t v59 = v51 + v52[10];
    uint64_t v60 = v205;
    uint64_t v61 = v207;
    *(_OWORD *)(v59 + 128) = v206;
    *(_OWORD *)(v59 + 144) = v61;
    *(void *)(v59 + 160) = v208;
    uint64_t v62 = v203;
    *(_OWORD *)(v59 + 64) = v202;
    *(_OWORD *)(v59 + 80) = v62;
    *(_OWORD *)(v59 + 96) = v204;
    *(_OWORD *)(v59 + 112) = v60;
    uint64_t v63 = v199;
    *(_OWORD *)uint64_t v59 = v198;
    *(_OWORD *)(v59 + 16) = v63;
    uint64_t v64 = v201;
    *(_OWORD *)(v59 + 32) = v200;
    *(_OWORD *)(v59 + 48) = v64;
    *(unsigned char *)(v51 + v52[11]) = 0;
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v65 = v192;
    sub_25B308(v51, v192);
    uint64_t v66 = (_OWORD *)(v65 + *(int *)(v191 + 36));
    uint64_t v67 = v199;
    *uint64_t v66 = v198;
    v66[1] = v67;
    v66[2] = v200;
    sub_25B36C(v51);
    uint64_t v69 = v154;
    uint64_t v68 = v155;
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v155 + 16);
    uint64_t v71 = v49;
    uint64_t v151 = v49;
    uint64_t v72 = v48;
    v70(v154, v71, v48);
    uint64_t v73 = v159;
    uint64_t v74 = v157;
    uint64_t v75 = v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v157, v42, v153);
    char v76 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v77 = (v152 + v76 + *(unsigned __int8 *)(v73 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v78 = swift_allocObject();
    uint64_t v79 = v194;
    *(void *)(v78 + 16) = v193;
    *(void *)(v78 + 24) = v79;
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v78 + v76, v69, v72);
    (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v78 + v77, v74, v75);
    sub_4A98(&qword_2F85D0);
    sub_1045D0();
    uint64_t v80 = sub_7B0C(&qword_2F85D8);
    uint64_t v81 = sub_26AD40();
    uint64_t v82 = sub_25B2C0(&qword_2F85E0, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
    uint64_t v196 = v81;
    uint64_t v197 = v82;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v196 = v80;
    uint64_t v197 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v84 = v160;
    uint64_t v85 = v192;
    sub_26BD00();
    swift_release();
    sub_B6DC(v85, &qword_2EB828);
    uint64_t v87 = v162;
    uint64_t v86 = v163;
    uint64_t v88 = (uint64_t)v158;
    (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v158, v84, v163);
    *(double *)(v88 + *(int *)(v161 + 36)) = v46;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
    uint64_t v89 = v193;
    uint64_t v90 = *(uint64_t (**)(uint64_t))(v194 + 56);
    if (v90(v193))
    {
      uint64_t v91 = 0;
      uint64_t v92 = 0xE000000000000000;
    }
    else
    {
      uint64_t v91 = CoverViewModel.axLabel.getter();
      uint64_t v92 = v119;
    }
    uint64_t v196 = v91;
    uint64_t v197 = v92;
    sub_258908();
    sub_CC78();
    sub_26BE40();
    swift_bridgeObjectRelease();
    sub_B6DC(v88, &qword_2F85C8);
    if (((uint64_t (*)(uint64_t, uint64_t))v90)(v89, v194))
    {
      uint64_t v120 = 0;
      uint64_t v121 = 0xE000000000000000;
    }
    else
    {
      uint64_t v125 = v173;
      sub_26D370();
      uint64_t v126 = v175;
      sub_2698C0();
      uint64_t v127 = v176;
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v172, v125, v179);
      type metadata accessor for BundleFinder();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      long long v129 = [self bundleForClass:ObjCClassFromMetadata];
      unint64_t v131 = v177;
      uint64_t v130 = v178;
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v174, v126, v178);
      uint64_t v120 = sub_26D460();
      uint64_t v121 = v132;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v126, v130);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v179);
    }
    uint64_t v196 = v120;
    uint64_t v197 = v121;
    uint64_t v133 = v168;
    uint64_t v134 = (uint64_t)v184;
    sub_26ABB0();
    swift_bridgeObjectRelease();
    uint64_t v135 = &qword_2F85B8;
    sub_B6DC(v134, &qword_2F85B8);
    uint64_t v136 = (uint64_t)v133;
    uint64_t v137 = v169;
    sub_19CC4(v136, v169, &qword_2F85B8);
    sub_B678(v137, v188, &qword_2F85B8);
    swift_storeEnumTagMultiPayload();
    sub_258858(&qword_2F85B0, &qword_2F85B8, (void (*)(void))sub_258908);
    sub_258858(&qword_2F85F8, &qword_2F8600, (void (*)(void))sub_258AD4);
  }
  else
  {
    sub_6C0F8((uint64_t)v209, (uint64_t)&v198);
    uint64_t v93 = swift_getKeyPath();
    uint64_t v94 = (uint64_t)v182;
    char *v182 = v93;
    *(unsigned char *)(v94 + 40) = 0;
    *(void *)(v94 + 48) = swift_getKeyPath();
    *(unsigned char *)(v94 + 56) = 0;
    uint64_t v95 = (int *)v183;
    uint64_t v96 = (uint64_t *)(v94 + *(int *)(v183 + 24));
    char *v96 = swift_getKeyPath();
    sub_4A98(&qword_2EA968);
    swift_storeEnumTagMultiPayload();
    uint64_t v97 = (uint64_t *)(v94 + v95[7]);
    char *v97 = swift_getKeyPath();
    sub_4A98(&qword_2EB918);
    swift_storeEnumTagMultiPayload();
    uint64_t v98 = (uint64_t *)(v94 + v95[8]);
    type metadata accessor for ProfileRestrictions();
    sub_25B2C0((unint64_t *)&qword_2F7220, (void (*)(uint64_t))type metadata accessor for ProfileRestrictions);
    *uint64_t v98 = sub_26AD70();
    v98[1] = v99;
    uint64_t v100 = v94 + v95[9];
    uint64_t v195 = 1;
    sub_26C340();
    unint64_t v101 = v197;
    *(unsigned char *)uint64_t v100 = v196;
    *(void *)(v100 + 8) = v101;
    uint64_t v102 = v94 + v95[10];
    uint64_t v103 = v205;
    uint64_t v104 = v207;
    *(_OWORD *)(v102 + 128) = v206;
    *(_OWORD *)(v102 + 144) = v104;
    *(void *)(v102 + 160) = v208;
    uint64_t v105 = v203;
    *(_OWORD *)(v102 + 64) = v202;
    *(_OWORD *)(v102 + 80) = v105;
    *(_OWORD *)(v102 + 96) = v204;
    *(_OWORD *)(v102 + 112) = v103;
    uint64_t v106 = v199;
    *(_OWORD *)uint64_t v102 = v198;
    *(_OWORD *)(v102 + 16) = v106;
    uint64_t v107 = v201;
    *(_OWORD *)(v102 + 32) = v200;
    *(_OWORD *)(v102 + 48) = v107;
    *(unsigned char *)(v94 + v95[11]) = 0;
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v108 = v192;
    sub_25B308(v94, v192);
    uint64_t v109 = (_OWORD *)(v108 + *(int *)(v191 + 36));
    uint64_t v110 = v199;
    *uint64_t v109 = v198;
    v109[1] = v110;
    v109[2] = v200;
    sub_25B36C(v94);
    uint64_t v111 = v167;
    sub_B678(v108, v167, &qword_2EB828);
    uint64_t v112 = (double *)(v111 + *(int *)(v165 + 36));
    *uint64_t v112 = v43;
    *((void *)v112 + 1) = v45;
    sub_B6DC(v108, &qword_2EB828);
    uint64_t v113 = v166;
    sub_B678(v111, v166, qword_2F8620);
    *(double *)(v113 + *(int *)(v164 + 36)) = v46;
    sub_B6DC(v111, qword_2F8620);
    uint64_t v115 = v193;
    uint64_t v114 = v194;
    uint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t))(v194 + 56);
    if (v116(v193, v194))
    {
      uint64_t v117 = 0;
      uint64_t v118 = 0xE000000000000000;
    }
    else
    {
      uint64_t v117 = CoverViewModel.axLabel.getter();
      uint64_t v118 = v122;
    }
    uint64_t v196 = v117;
    uint64_t v197 = v118;
    sub_258AD4();
    uint64_t v192 = sub_CC78();
    sub_26BE40();
    swift_bridgeObjectRelease();
    sub_B6DC(v113, &qword_2F8610);
    if (v116(v115, v114))
    {
      uint64_t v123 = 0;
      uint64_t v124 = 0xE000000000000000;
    }
    else
    {
      uint64_t v138 = v173;
      sub_26D370();
      uint64_t v139 = v175;
      sub_2698C0();
      uint64_t v140 = v176;
      uint64_t v141 = v179;
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v172, v138, v179);
      type metadata accessor for BundleFinder();
      uint64_t v142 = swift_getObjCClassFromMetadata();
      uint64_t v143 = [self bundleForClass:v142];
      uint64_t v145 = v177;
      uint64_t v144 = v178;
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v174, v139, v178);
      uint64_t v123 = sub_26D460();
      uint64_t v124 = v146;
      (*(void (**)(char *, uint64_t))(v145 + 8))(v139, v144);
      (*(void (**)(char *, uint64_t))(v140 + 8))(v138, v141);
    }
    uint64_t v196 = v123;
    uint64_t v197 = v124;
    uint64_t v147 = v170;
    uint64_t v148 = (uint64_t)v185;
    sub_26ABB0();
    swift_bridgeObjectRelease();
    uint64_t v135 = &qword_2F8600;
    sub_B6DC(v148, &qword_2F8600);
    uint64_t v149 = (uint64_t)v147;
    uint64_t v137 = v171;
    sub_19CC4(v149, v171, &qword_2F8600);
    sub_B678(v137, v188, &qword_2F8600);
    swift_storeEnumTagMultiPayload();
    sub_258858(&qword_2F85B0, &qword_2F85B8, (void (*)(void))sub_258908);
    sub_258858(&qword_2F85F8, &qword_2F8600, (void (*)(void))sub_258AD4);
  }
  sub_26B2F0();
  sub_B6DC(v137, v135);
  return sub_2D738((uint64_t)v209);
}

uint64_t sub_25A394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[0] = a1;
  v27[1] = a2;
  uint64_t v2 = sub_4A98(&qword_2F85D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26AAC0();
  sub_26A950();
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v28.origin.x = v11;
  v28.origin.y = v13;
  v28.size.width = v15;
  v28.size.height = v17;
  double MinY = CGRectGetMinY(v28);
  if (qword_2E9D48 != -1) {
    swift_once();
  }
  sub_6B14(v6, (uint64_t)qword_2F77C8);
  sub_26A950();
  double v19 = MinY - CGRectGetMinY(v29);
  if (v19 > 0.0) {
    double v20 = v19;
  }
  else {
    double v20 = 0.0;
  }
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 48);
  uint64_t v23 = swift_checkMetadataState();
  v22(v23, AssociatedConformanceWitness, v20);
  (*(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 56))(v23, AssociatedConformanceWitness, v20);
  sub_26C7D0();
  uint64_t v24 = sub_26AD40();
  uint64_t v25 = sub_25B2C0(&qword_2F85E0, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  sub_26A8A0();
  v27[2] = v24;
  uint64_t v27[3] = v25;
  swift_getOpaqueTypeConformance2();
  sub_26A8B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static CoverStackView.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_26D360())
  {
    uint64_t v4 = type metadata accessor for CoverStackView();
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 36)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 36)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_25A788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25A7CC(uint64_t a1, uint64_t a2)
{
  return static CoverStackView.== infix(_:_:)(a1, a2);
}

uint64_t sub_25A7D8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25A870(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_25A944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_25A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_25AA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_25AA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_25AAE4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_25AC74(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25AEB4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_25AEDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B11C()
{
  return 16;
}

__n128 sub_25B128(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_25B134()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for CoverStackView() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v1);

  return swift_deallocObject();
}

uint64_t sub_25B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for CoverStackView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_258FD4(a1, v8, v5, v6, a2);
}

uint64_t sub_25B2C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoverView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B36C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoverView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B3C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for CoverStackView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_25B544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A394(a1, a2);
}

uint64_t YearInReviewPagedFrame.exposureEventType.getter()
{
  uint64_t v0 = sub_269C80();
  sub_25B6A0();
  return v0;
}

unint64_t sub_25B6A0()
{
  unint64_t result = qword_2EAFF0;
  if (!qword_2EAFF0)
  {
    sub_269C80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2EAFF0);
  }
  return result;
}

uint64_t dispatch thunk of YearInReviewPagedFrame.sharableView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ListItemView.init(_:contextActionMenuView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for ListItemView();
  uint64_t v9 = (uint64_t *)(a4 + v8[5]);
  uint64_t *v9 = swift_getKeyPath();
  sub_4A98(&qword_2EB708);
  swift_storeEnumTagMultiPayload();
  size_t v10 = (uint64_t *)(a4 + v8[6]);
  *size_t v10 = swift_getKeyPath();
  sub_4A98(&qword_2EA968);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a4 + v8[7];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = a4 + v8[8];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  uint64_t v13 = a4 + v8[9];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  uint64_t v14 = a4 + v8[10];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *(unsigned char *)(v14 + 8) = 0;
  int v15 = (uint64_t *)(a4 + v8[11]);
  *int v15 = swift_getKeyPath();
  sub_4A98(&qword_2EBC60);
  swift_storeEnumTagMultiPayload();
  uint64_t result = sub_2685E8(a1, a4, (uint64_t (*)(void))type metadata accessor for ListItemViewModel);
  int v17 = (void *)(a4 + v8[12]);
  *int v17 = a2;
  v17[1] = a3;
  return result;
}

uint64_t type metadata accessor for ListItemView()
{
  uint64_t result = qword_2F8870;
  if (!qword_2F8870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_25B8E8(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_26DD70();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  double v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SizeConstants.Environment(0) - 8;
  __chkstk_darwin(v42);
  uint64_t v41 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_26B980();
  uint64_t v9 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_4A98(&qword_2F8910);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  int v15 = (double *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_4A98(&qword_2F8918);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  double v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (double *)((char *)&v39 - v21);
  sub_26851C(v3, (uint64_t)&v39 + *(int *)(v17 + 36) - v21, type metadata accessor for SizeConstants.Environment);
  *uint64_t v22 = a2;
  sub_B678((uint64_t)v22, (uint64_t)v20, &qword_2F8918);
  uint64_t v23 = a1;
  uint64_t v24 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v40);
  sub_B678((uint64_t)v20, (uint64_t)v15, &qword_2F8918);
  uint64_t v25 = v41;
  sub_26851C((uint64_t)&v20[*(int *)(v17 + 36)], v41, type metadata accessor for SizeConstants.Environment);
  uint64_t v26 = v42;
  uint64_t v27 = v25 + *(int *)(v42 + 32);
  double v28 = sub_1AB90((uint64_t)v11, v27);
  uint64_t v29 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v27, v29);
  double v30 = 1.0;
  if ((*(void *)&v28 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v30 = v28;
  }
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0) {
    double v28 = v30;
  }
  sub_B6DC((uint64_t)v20, &qword_2F8918);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  *(double *)((char *)v15 + *(int *)(v13 + 44)) = v28;
  double v31 = *v15;
  double v32 = v31 * KeyedEncodingContainer.encode<A>(_:forKey:)(v28);
  double v33 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)((char *)v15 + *(int *)(v17 + 36) + *(int *)(v26 + 36)));
  uint64_t v35 = (uint64_t)v43;
  uint64_t v34 = v44;
  uint64_t v36 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v45);
  double v46 = v32;
  sub_196FB4(v35, v33);
  double v37 = v46;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  sub_B6DC((uint64_t)v15, &qword_2F8910);
  sub_B6DC((uint64_t)v22, &qword_2F8918);
  return v37;
}

uint64_t ListItemView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v244 = a1;
  uint64_t v2 = sub_4A98(&qword_2F86B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v214 = (void (*)(char *, uint64_t))((char *)&v187 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v212 = sub_4A98(&qword_2F86C0);
  __chkstk_darwin(v212);
  uint64_t v216 = (char *)&v187 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_4A98(&qword_2F86C8);
  uint64_t v5 = __chkstk_darwin(v243);
  uint64_t v215 = (uint64_t)&v187 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v225 = (uint64_t)&v187 - v7;
  uint64_t v211 = sub_4A98(&qword_2F86D0);
  __chkstk_darwin(v211);
  uint64_t v213 = (uint64_t)&v187 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SizeConstants.Spacing(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v208 = (uint64_t)&v187 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_4A98(&qword_2F86D8);
  __chkstk_darwin(v210);
  uint64_t v217 = (char *)&v187 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_4A98(&qword_2F86E0);
  __chkstk_darwin(v218);
  uint64_t v219 = (char *)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_4A98(&qword_2F86E8);
  uint64_t v222 = *(void (***)(char *, char *, uint64_t))(v13 - 8);
  uint64_t v223 = v13;
  __chkstk_darwin(v13);
  uint64_t v221 = (char *)&v187 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_4A98(&qword_2F86F0);
  uint64_t v15 = __chkstk_darwin(v237);
  uint64_t v220 = (char *)&v187 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v224 = (uint64_t)&v187 - v17;
  uint64_t v240 = sub_4A98(&qword_2F86F8);
  __chkstk_darwin(v240);
  uint64_t v242 = (uint64_t)&v187 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_4A98(&qword_2F8700);
  __chkstk_darwin(v234);
  uint64_t v235 = (uint64_t)&v187 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_4A98(&qword_2F8708);
  __chkstk_darwin(v241);
  uint64_t v236 = (char *)&v187 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_26B600();
  uint64_t v232 = *(void *)(v21 - 8);
  uint64_t v233 = v21;
  __chkstk_darwin(v21);
  uint64_t v231 = (char *)&v187 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v239 = sub_4A98(&qword_2EE260);
  __chkstk_darwin(v239);
  uint64_t v196 = (uint64_t *)((char *)&v187 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = sub_4A98(&qword_2EDB60);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v201 = (uint64_t)&v187 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v207 = (uint64_t)&v187 - v28;
  __chkstk_darwin(v27);
  uint64_t v209 = (uint64_t)&v187 - v29;
  uint64_t v30 = sub_4A98(&qword_2EBC78);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v193 = (char *)&v187 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v194 = (char *)&v187 - v34;
  __chkstk_darwin(v33);
  uint64_t v195 = (char *)&v187 - v35;
  uint64_t v36 = sub_26DD70();
  uint64_t v205 = *(void *)(v36 - 8);
  uint64_t v206 = v36;
  __chkstk_darwin(v36);
  int v204 = (char *)&v187 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v203);
  uint64_t v199 = (uint64_t)&v187 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_26B980();
  uint64_t v191 = *(void *)(v39 - 8);
  uint64_t v192 = v39;
  uint64_t v40 = __chkstk_darwin(v39);
  uint64_t v190 = (char *)&v187 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v200 = (char *)&v187 - v42;
  uint64_t v198 = sub_4A98(&qword_2EE988);
  __chkstk_darwin(v198);
  uint64_t v202 = (uint64_t)&v187 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SizeConstants(0);
  uint64_t v45 = __chkstk_darwin(v44 - 8);
  uint64_t v197 = (uint64_t)&v187 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v189 = (char *)&v187 - v48;
  __chkstk_darwin(v47);
  uint64_t v226 = (uint64_t)&v187 - v49;
  uint64_t v230 = type metadata accessor for ListItemView();
  uint64_t v227 = *(void *)(v230 - 8);
  __chkstk_darwin(v230);
  uint64_t v228 = v50;
  uint64_t v229 = (uint64_t)&v187 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_26AB40();
  uint64_t v238 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v187 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_4A98(&qword_2F8710);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v187 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4A98(&qword_2F8718);
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))((char *)&v187 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_4A98(&qword_2F8720);
  uint64_t v62 = __chkstk_darwin(v61);
  uint64_t v63 = __chkstk_darwin(v62);
  uint64_t v66 = (uint64_t)v1;
  if (!*v1)
  {
    uint64_t v216 = v56;
    uint64_t v220 = (char *)v54;
    uint64_t v221 = v65;
    uint64_t v222 = v60;
    uint64_t v223 = v58;
    uint64_t v219 = (char *)v57;
    uint64_t v224 = (uint64_t)&v187 - v64;
    uint64_t v225 = v63;
    sub_41AD8((uint64_t)v53);
    int v96 = sub_26AB10();
    uint64_t v214 = *(void (**)(char *, uint64_t))(v238 + 8);
    uint64_t v215 = v51;
    v238 += 8;
    v214(v53, v51);
    if (v96) {
      uint64_t v97 = sub_26B1D0();
    }
    else {
      uint64_t v97 = sub_26B120();
    }
    uint64_t v218 = v97;
    uint64_t v122 = v191;
    uint64_t v121 = v192;
    uint64_t v123 = (uint64_t)v189;
    uint64_t v124 = v190;
    uint64_t v125 = v226;
    LODWORD(v217) = v96 ^ 1;
    uint64_t v126 = v66;
    uint64_t v188 = v66;
    uint64_t v127 = v229;
    sub_26851C(v126, v229, (uint64_t (*)(void))type metadata accessor for ListItemView);
    unint64_t v128 = (*(unsigned __int8 *)(v227 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80);
    uint64_t v228 = swift_allocObject();
    sub_2685E8(v127, v228 + v128, (uint64_t (*)(void))type metadata accessor for ListItemView);
    LODWORD(v229) = sub_26B7C0();
    sub_41378(v125);
    uint64_t v129 = v125;
    uint64_t v130 = v200;
    (*(void (**)(char *, void, uint64_t))(v122 + 104))(v200, enum case for Font.TextStyle.body(_:), v121);
    sub_26851C(v129, v123, type metadata accessor for SizeConstants);
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v124, v130, v121);
    uint64_t v131 = (uint64_t)v124;
    uint64_t v132 = v121;
    uint64_t v133 = v202;
    sub_26851C(v123, v202, type metadata accessor for SizeConstants);
    uint64_t v134 = v199;
    sub_26851C(v123, v199, type metadata accessor for SizeConstants.Environment);
    uint64_t v135 = v203;
    uint64_t v136 = v134 + *(int *)(v203 + 24);
    double v137 = sub_1AB90(v131, v136);
    v214((char *)v136, v215);
    double v138 = 1.0;
    if ((*(void *)&v137 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v138 = v137;
    }
    if ((~*(void *)&v137 & 0x7FF0000000000000) == 0) {
      double v137 = v138;
    }
    sub_268584(v123, type metadata accessor for SizeConstants);
    uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
    v139(v131, v132);
    uint64_t v140 = *(int *)(v198 + 36);
    *(double *)(v133 + v140) = v137;
    v139((uint64_t)v130, v132);
    sub_268584(v226, type metadata accessor for SizeConstants);
    double v141 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v133 + v140)) * 9.0;
    double v142 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v133 + *(int *)(v135 + 28)));
    uint64_t v144 = (uint64_t)v204;
    uint64_t v143 = v205;
    uint64_t v145 = v206;
    (*(void (**)(char *, void, uint64_t))(v205 + 104))(v204, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v206);
    *(double *)&long long v249 = v141;
    sub_196FB4(v144, v142);
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v144, v145);
    sub_B6DC(v133, &qword_2EE988);
    sub_26A640();
    uint64_t v147 = v146;
    uint64_t v149 = v148;
    uint64_t v151 = v150;
    uint64_t v153 = v152;
    uint64_t v154 = type metadata accessor for ListItemViewModel();
    uint64_t v155 = v209;
    sub_B678(v188 + *(int *)(v154 + 40), v209, &qword_2EDB60);
    uint64_t v156 = type metadata accessor for CardInfo();
    int v157 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 48))(v155, 1, v156);
    uint64_t v158 = (uint64_t)v216;
    if (v157 == 1)
    {
      sub_B6DC(v155, &qword_2EDB60);
      uint64_t v159 = sub_269840();
      uint64_t v160 = (uint64_t)v195;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v195, 1, 1, v159);
    }
    else
    {
      uint64_t v173 = v155 + *(int *)(v156 + 20);
      uint64_t v174 = sub_269840();
      uint64_t v175 = *(void *)(v174 - 8);
      uint64_t v160 = (uint64_t)v195;
      (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v195, v173, v174);
      sub_268584(v155, (uint64_t (*)(void))type metadata accessor for CardInfo);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56))(v160, 0, 1, v174);
    }
    uint64_t v176 = v196;
    uint64_t v178 = v222;
    uint64_t v177 = v223;
    uint64_t KeyPath = swift_getKeyPath();
    sub_B678(v160, (uint64_t)v176 + *(int *)(v239 + 28), &qword_2EBC78);
    *uint64_t v176 = KeyPath;
    sub_B678((uint64_t)v176, v158 + *((int *)v220 + 9), &qword_2EE260);
    *(void *)uint64_t v158 = v218;
    *(unsigned char *)(v158 + 8) = v217 & 1;
    *(void *)(v158 + 16) = 0;
    *(unsigned char *)(v158 + 24) = 0;
    uint64_t v180 = v228;
    *(void *)(v158 + 32) = sub_26507C;
    *(void *)(v158 + 40) = v180;
    *(unsigned char *)(v158 + 48) = v229;
    *(void *)(v158 + 56) = v147;
    *(void *)(v158 + 64) = v149;
    *(void *)(v158 + 72) = v151;
    *(void *)(v158 + 80) = v153;
    *(unsigned char *)(v158 + 88) = 0;
    swift_retain();
    sub_B6DC((uint64_t)v176, &qword_2EE260);
    sub_B6DC(v160, &qword_2EBC78);
    swift_release();
    uint64_t v181 = v231;
    sub_26B5E0();
    sub_264584();
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v232 + 8))(v181, v233);
    sub_B6DC(v158, &qword_2F8710);
    uint64_t v262 = 0;
    uint64_t v263 = 0;
    sub_4A98(&qword_2EA980);
    sub_26C340();
    long long v239 = v249;
    uint64_t v182 = v250;
    uint64_t v183 = (uint64_t)v221;
    uint64_t v184 = v219;
    (*(void (**)(char *, void, char *))(v177 + 16))(v221, v178, v219);
    uint64_t v185 = v183 + *(int *)(v225 + 36);
    *(_OWORD *)uint64_t v185 = v239;
    *(void *)(v185 + 16) = v182;
    (*(void (**)(void (**)(char *, char *, uint64_t), char *))(v177 + 8))(v178, v184);
    uint64_t v117 = &qword_2F8720;
    uint64_t v119 = v224;
    sub_19CC4(v183, v224, &qword_2F8720);
    sub_B678(v119, v235, &qword_2F8720);
    swift_storeEnumTagMultiPayload();
    sub_264554();
    sub_264644();
    uint64_t v120 = (uint64_t)v236;
    goto LABEL_22;
  }
  if (*v1 == 1)
  {
    uint64_t v225 = v63;
    uint64_t v67 = sub_25FF20();
    char v69 = v68;
    uint64_t v70 = v229;
    sub_26851C((uint64_t)v1, v229, (uint64_t (*)(void))type metadata accessor for ListItemView);
    unint64_t v71 = (*(unsigned __int8 *)(v227 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80);
    uint64_t v72 = swift_allocObject();
    sub_2685E8(v70, v72 + v71, (uint64_t (*)(void))type metadata accessor for ListItemView);
    LOBYTE(v70) = sub_26B760();
    uint64_t v73 = v197;
    sub_41378(v197);
    uint64_t v74 = v208;
    sub_26851C(v73, v208, type metadata accessor for SizeConstants.Environment);
    sub_268584(v73, type metadata accessor for SizeConstants);
    sub_268584(v74, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    uint64_t v262 = v67;
    LOBYTE(v263) = v69 & 1;
    uint64_t v264 = 0;
    char v265 = 0;
    long long v266 = sub_264C6C;
    uint64_t v267 = v72;
    char v268 = v70;
    uint64_t v269 = v75;
    uint64_t v270 = v76;
    uint64_t v271 = v77;
    uint64_t v272 = v78;
    char v273 = 0;
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_B0E98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v249, 0.0, 1, 0.0, 1);
    swift_release();
    uint64_t v79 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    uint64_t v81 = v80;
    uint64_t v82 = v213;
    sub_260CEC(v66, v213);
    uint64_t v83 = (uint64_t *)(v82 + *(int *)(v211 + 36));
    *uint64_t v83 = v79;
    v83[1] = v81;
    uint64_t v84 = v217;
    sub_B678(v82, (uint64_t)&v217[*(int *)(v210 + 36)], &qword_2F86D0);
    long long v85 = v260;
    v84[10] = v259;
    v84[11] = v85;
    v84[12] = v261;
    long long v86 = v256;
    v84[6] = v255;
    v84[7] = v86;
    long long v87 = v258;
    v84[8] = v257;
    v84[9] = v87;
    long long v88 = v252;
    v84[2] = v251;
    v84[3] = v88;
    long long v89 = v254;
    v84[4] = v253;
    v84[5] = v89;
    long long v90 = v250;
    _OWORD *v84 = v249;
    v84[1] = v90;
    sub_B6DC(v82, &qword_2F86D0);
    uint64_t v91 = type metadata accessor for ListItemViewModel();
    uint64_t v92 = v207;
    sub_B678(v66 + *(int *)(v91 + 40), v207, &qword_2EDB60);
    uint64_t v93 = type metadata accessor for CardInfo();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 48))(v92, 1, v93) == 1)
    {
      sub_B6DC(v92, &qword_2EDB60);
      uint64_t v94 = sub_269840();
      uint64_t v95 = (uint64_t)v194;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v194, 1, 1, v94);
    }
    else
    {
      uint64_t v104 = v92 + *(int *)(v93 + 20);
      uint64_t v105 = sub_269840();
      uint64_t v106 = *(void *)(v105 - 8);
      uint64_t v95 = (uint64_t)v194;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v194, v104, v105);
      sub_268584(v92, (uint64_t (*)(void))type metadata accessor for CardInfo);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v95, 0, 1, v105);
    }
    uint64_t v107 = swift_getKeyPath();
    uint64_t v108 = (uint64_t)v219;
    uint64_t v109 = (uint64_t *)&v219[*(int *)(v218 + 36)];
    sub_B678(v95, (uint64_t)v109 + *(int *)(v239 + 28), &qword_2EBC78);
    *uint64_t v109 = v107;
    sub_B678((uint64_t)v84, v108, &qword_2F86D8);
    sub_B6DC(v95, &qword_2EBC78);
    sub_B6DC((uint64_t)v84, &qword_2F86D8);
    uint64_t v110 = v231;
    sub_26B5E0();
    sub_26474C();
    uint64_t v111 = v221;
    sub_26BEA0();
    (*(void (**)(char *, uint64_t))(v232 + 8))(v110, v233);
    sub_B6DC(v108, &qword_2F86E0);
    uint64_t v245 = 0;
    uint64_t v246 = 0;
    sub_4A98(&qword_2EA980);
    sub_26C340();
    long long v239 = v247;
    uint64_t v112 = v248;
    uint64_t v114 = v222;
    uint64_t v113 = v223;
    uint64_t v115 = v220;
    v222[2](v220, v111, v223);
    uint64_t v116 = &v115[*(int *)(v237 + 36)];
    *(_OWORD *)uint64_t v116 = v239;
    *((void *)v116 + 2) = v112;
    ((void (*)(char *, uint64_t))v114[1])(v111, v113);
    uint64_t v117 = &qword_2F86F0;
    uint64_t v118 = (uint64_t)v115;
    uint64_t v119 = v224;
    sub_19CC4(v118, v224, &qword_2F86F0);
    sub_B678(v119, v235, &qword_2F86F0);
    swift_storeEnumTagMultiPayload();
    sub_264554();
    sub_264644();
    uint64_t v120 = (uint64_t)v236;
LABEL_22:
    sub_26B2F0();
    sub_B678(v120, v242, &qword_2F8708);
    swift_storeEnumTagMultiPayload();
    sub_264518();
    sub_2649C4();
    sub_26B2F0();
    sub_B6DC(v120, &qword_2F8708);
    uint64_t v172 = v119;
    return sub_B6DC(v172, v117);
  }
  uint64_t v98 = v214;
  sub_26107C((uint64_t)v214);
  uint64_t v99 = type metadata accessor for ListItemViewModel();
  uint64_t v100 = v201;
  sub_B678((uint64_t)&v1[*(int *)(v99 + 40)], v201, &qword_2EDB60);
  uint64_t v101 = type metadata accessor for CardInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v100, 1, v101) == 1)
  {
    sub_B6DC(v100, &qword_2EDB60);
    uint64_t v102 = sub_269840();
    uint64_t v103 = (uint64_t)v193;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v193, 1, 1, v102);
  }
  else
  {
    uint64_t v161 = v100 + *(int *)(v101 + 20);
    uint64_t v162 = sub_269840();
    uint64_t v163 = *(void *)(v162 - 8);
    uint64_t v103 = (uint64_t)v193;
    (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v193, v161, v162);
    sub_268584(v100, (uint64_t (*)(void))type metadata accessor for CardInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v103, 0, 1, v162);
  }
  uint64_t v164 = swift_getKeyPath();
  uint64_t v165 = (uint64_t)v216;
  uint64_t v166 = (uint64_t *)&v216[*(int *)(v212 + 36)];
  sub_B678(v103, (uint64_t)v166 + *(int *)(v239 + 28), &qword_2EBC78);
  uint64_t *v166 = v164;
  sub_B678((uint64_t)v98, v165, &qword_2F86B8);
  sub_B6DC(v103, &qword_2EBC78);
  sub_B6DC((uint64_t)v98, &qword_2F86B8);
  uint64_t v262 = 0;
  uint64_t v263 = 0;
  sub_4A98(&qword_2EA980);
  sub_26C340();
  long long v239 = v249;
  uint64_t v167 = v250;
  uint64_t v168 = v215;
  sub_B678(v165, v215, &qword_2F86C0);
  uint64_t v169 = v168 + *(int *)(v243 + 36);
  *(_OWORD *)uint64_t v169 = v239;
  *(void *)(v169 + 16) = v167;
  sub_B6DC(v165, &qword_2F86C0);
  uint64_t v117 = &qword_2F86C8;
  uint64_t v170 = v168;
  uint64_t v171 = v225;
  sub_19CC4(v170, v225, &qword_2F86C8);
  sub_B678(v171, v242, &qword_2F86C8);
  swift_storeEnumTagMultiPayload();
  sub_264518();
  sub_2649C4();
  sub_26B2F0();
  uint64_t v172 = v171;
  return sub_B6DC(v172, v117);
}

uint64_t sub_25D7A4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v378 = a3;
  uint64_t v5 = type metadata accessor for ListItemMetadataView();
  uint64_t v374 = *(void *)(v5 - 8);
  uint64_t v375 = v5;
  __chkstk_darwin(v5);
  v369 = (uint64_t *)((char *)&v321 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_4A98(&qword_2F88D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v377 = (uint64_t)&v321 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v373 = (uint64_t)&v321 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v372 = (uint64_t)&v321 - v13;
  __chkstk_darwin(v12);
  uint64_t v390 = (uint64_t)&v321 - v14;
  uint64_t v15 = type metadata accessor for SizeConstants.Spacing(0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v331 = (uint64_t)&v321 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v343 = (uint64_t)&v321 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v330 = (uint64_t)&v321 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v342 = (uint64_t)&v321 - v23;
  __chkstk_darwin(v22);
  uint64_t v361 = (uint64_t)&v321 - v24;
  uint64_t v25 = sub_4A98(&qword_2EBFC0);
  __chkstk_darwin(v25 - 8);
  v358 = (char *)&v321 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_26CD20();
  v350 = *(void (***)(char *, void, uint64_t))(v27 - 8);
  uint64_t v351 = v27;
  __chkstk_darwin(v27);
  v349 = (char *)&v321 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_26A220();
  __chkstk_darwin(v29 - 8);
  v348 = (char *)&v321 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_26A160();
  uint64_t v356 = *(void *)(v31 - 8);
  uint64_t v357 = v31;
  __chkstk_darwin(v31);
  v354 = (char *)&v321 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v352 = sub_4A98(&qword_2EBFC8);
  __chkstk_darwin(v352);
  v355 = (char *)&v321 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = sub_4A98(&qword_2EBFD0);
  __chkstk_darwin(v353);
  uint64_t v360 = (uint64_t)&v321 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = sub_4A98(&qword_2EE920);
  __chkstk_darwin(v359);
  uint64_t v363 = (uint64_t)&v321 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_4A98(&qword_2EE928);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v365 = (uint64_t)&v321 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v362 = (uint64_t)&v321 - v40;
  __chkstk_darwin(v39);
  uint64_t v364 = (uint64_t)&v321 - v41;
  uint64_t v42 = sub_4A98(&qword_2F88E0);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v384 = (uint64_t)&v321 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v389 = (uint64_t)&v321 - v45;
  uint64_t v46 = sub_26DD70();
  uint64_t v382 = *(void *)(v46 - 8);
  uint64_t v383 = v46;
  __chkstk_darwin(v46);
  v381 = (char *)&v321 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_4A98(&qword_2EEA48);
  uint64_t v48 = __chkstk_darwin(v379);
  uint64_t v328 = (uint64_t)&v321 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v329 = (uint64_t)&v321 - v51;
  __chkstk_darwin(v50);
  uint64_t v368 = (uint64_t)&v321 - v52;
  uint64_t v392 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v392);
  uint64_t v380 = (uint64_t)&v321 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_4A98(&qword_2EE988);
  uint64_t v54 = __chkstk_darwin(v370);
  uint64_t v341 = (uint64_t)&v321 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v340 = (uint64_t)&v321 - v57;
  __chkstk_darwin(v56);
  uint64_t v371 = (uint64_t)&v321 - v58;
  uint64_t v385 = sub_26B980();
  uint64_t v391 = *(void *)(v385 - 8);
  uint64_t v59 = __chkstk_darwin(v385);
  v327 = (char *)&v321 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __chkstk_darwin(v59);
  v326 = (char *)&v321 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v325 = (char *)&v321 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v324 = (char *)&v321 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v339 = (char *)&v321 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v338 = (char *)&v321 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v337 = (char *)&v321 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v336 = (char *)&v321 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  v347 = (char *)&v321 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  v346 = (char *)&v321 - v78;
  __chkstk_darwin(v77);
  v366 = (char *)&v321 - v79;
  uint64_t v80 = type metadata accessor for SizeConstants(0);
  uint64_t v81 = __chkstk_darwin(v80 - 8);
  uint64_t v323 = (uint64_t)&v321 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __chkstk_darwin(v81);
  uint64_t v322 = (uint64_t)&v321 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v334 = (uint64_t)&v321 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  uint64_t v335 = (uint64_t)&v321 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v332 = (uint64_t)&v321 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  uint64_t v333 = (uint64_t)&v321 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v344 = (uint64_t)&v321 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v97 = (char *)&v321 - v96;
  __chkstk_darwin(v95);
  v367 = (uint64_t (*)(uint64_t))((char *)&v321 - v98);
  uint64_t v386 = type metadata accessor for ListItemView();
  __chkstk_darwin(v386);
  uint64_t v100 = (char *)&v321 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_4A98(&qword_2F88E8);
  __chkstk_darwin(v101 - 8);
  uint64_t v103 = (char *)&v321 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_4A98(&qword_2F88F0);
  uint64_t v105 = __chkstk_darwin(v104);
  uint64_t v376 = (uint64_t)&v321 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v109 = (char *)&v321 - v108;
  __chkstk_darwin(v107);
  uint64_t v388 = (uint64_t)&v321 - v110;
  sub_25FB88((uint64_t)v103);
  char v111 = sub_26B7B0();
  sub_26851C(a2, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for ListItemView);
  int v393 = a1;
  uint64_t v112 = a2;
  uint64_t v387 = a2;
  if (a1)
  {
    char v113 = v100[16];
    sub_268584((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for ListItemView);
    if (v113)
    {
      uint64_t v114 = v386;
      v345 = v97;
      uint64_t v115 = v367;
      sub_41378((uint64_t)v367);
      uint64_t v116 = v112 + *(int *)(v114 + 32);
      uint64_t v117 = *(void *)v116;
      char v118 = *(unsigned char *)(v116 + 8);
      sub_10E0C(*(void *)v116, v118);
      LOBYTE(v114) = sub_40900(v117, v118);
      sub_C374(v117, v118);
      double v119 = ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(v114 & 1);
      uint64_t v120 = v391;
      uint64_t v121 = (uint64_t)v366;
      uint64_t v122 = v385;
      (*(void (**)(char *, void, uint64_t))(v391 + 104))(v366, enum case for Font.TextStyle.body(_:), v385);
      sub_25B8E8(v121, v119);
      uint64_t v123 = v121;
      uint64_t v112 = v387;
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v123, v122);
      uint64_t v124 = (uint64_t)v115;
      uint64_t v97 = v345;
      sub_268584(v124, type metadata accessor for SizeConstants);
    }
  }
  else
  {
    sub_268584((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for ListItemView);
  }
  sub_26A640();
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  uint64_t v132 = v131;
  sub_B678((uint64_t)v103, (uint64_t)v109, &qword_2F88E8);
  uint64_t v133 = &v109[*(int *)(v104 + 36)];
  *uint64_t v133 = v111;
  *((void *)v133 + 1) = v126;
  *((void *)v133 + 2) = v128;
  *((void *)v133 + 3) = v130;
  *((void *)v133 + 4) = v132;
  v133[40] = 0;
  sub_B6DC((uint64_t)v103, &qword_2F88E8);
  sub_19CC4((uint64_t)v109, v388, &qword_2F88F0);
  if (v393)
  {
    uint64_t v371 = 0;
    uint64_t v134 = v391;
  }
  else
  {
    sub_41378((uint64_t)v97);
    uint64_t v135 = v391;
    uint64_t v136 = *(void (**)(char *, void, uint64_t))(v391 + 104);
    uint64_t v137 = (uint64_t)v97;
    v345 = v97;
    double v138 = v346;
    uint64_t v139 = v385;
    v136(v346, enum case for Font.TextStyle.body(_:), v385);
    uint64_t v140 = v344;
    sub_26851C(v137, v344, type metadata accessor for SizeConstants);
    uint64_t v141 = (uint64_t)v347;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v347, v138, v139);
    uint64_t v142 = v371;
    sub_26851C(v140, v371, type metadata accessor for SizeConstants);
    uint64_t v143 = v380;
    sub_26851C(v140, v380, type metadata accessor for SizeConstants.Environment);
    uint64_t v144 = v143 + *(int *)(v392 + 24);
    double v145 = sub_1AB90(v141, v144);
    uint64_t v146 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v146 - 8) + 8))(v144, v146);
    double v147 = 1.0;
    if ((*(void *)&v145 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v147 = v145;
    }
    if ((~*(void *)&v145 & 0x7FF0000000000000) == 0) {
      double v145 = v147;
    }
    sub_268584(v140, type metadata accessor for SizeConstants);
    uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
    v148(v141, v139);
    uint64_t v149 = *(int *)(v370 + 36);
    *(double *)(v142 + v149) = v145;
    uint64_t v150 = v139;
    uint64_t v134 = v135;
    v148((uint64_t)v138, v150);
    sub_268584((uint64_t)v345, type metadata accessor for SizeConstants);
    uint64_t v151 = v368;
    sub_26851C(v142, v368, type metadata accessor for SizeConstants.Environment);
    uint64_t v152 = *(void *)(v142 + v149);
    uint64_t v112 = v387;
    uint64_t v154 = (uint64_t)v381;
    uint64_t v153 = v382;
    uint64_t v155 = *(int *)(v379 + 36);
    *(void *)(v151 + v155) = v152;
    sub_B6DC(v142, &qword_2EE988);
    double v156 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v151 + v155)) * 16.0;
    double v157 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v151 + *(int *)(v392 + 28)));
    uint64_t v158 = v383;
    (*(void (**)(uint64_t, void, uint64_t))(v153 + 104))(v154, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v383);
    *(double *)v397 = v156;
    sub_196FB4(v154, v157);
    uint64_t v371 = v397[0];
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v154, v158);
    sub_B6DC(v151, &qword_2EEA48);
  }
  if (*(unsigned char *)(v112 + 16) == 1)
  {
    uint64_t v159 = sub_4A98(&qword_2F88F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v389, 1, 1, v159);
  }
  else
  {
    Class isa = sub_26D750().super.super.isa;
    uint64_t v162 = v349;
    uint64_t v161 = v350;
    uint64_t v163 = v351;
    v350[13](v349, enum case for LocalizerContext.standalone(_:), v351);
    sub_26A1F0();

    ((void (*)(char *, uint64_t))v161[1])(v162, v163);
    uint64_t v164 = v354;
    sub_26A170();
    uint64_t v165 = v134;
    uint64_t v166 = v134 + 104;
    uint64_t v167 = *(void (***)(char *, void, uint64_t))(v134 + 104);
    uint64_t v168 = v366;
    uint64_t v169 = v385;
    v350 = v167;
    uint64_t v351 = v166;
    ((void (*)(char *, void, uint64_t))v167)(v366, enum case for Font.TextStyle.title(_:), v385);
    uint64_t v170 = enum case for Font.Design.serif (_:);
    uint64_t v171 = sub_26B820();
    uint64_t v172 = *(void *)(v171 - 8);
    uint64_t v173 = (uint64_t)v358;
    (*(void (**)(char *, uint64_t, uint64_t))(v172 + 104))(v358, v170, v171);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v172 + 56))(v173, 0, 1, v171);
    sub_26B8B0();
    uint64_t v174 = sub_26B8E0();
    sub_B6DC(v173, &qword_2EBFC0);
    uint64_t v176 = (char *)(v165 + 8);
    uint64_t v175 = *(char **)(v165 + 8);
    uint64_t v177 = v169;
    v366 = v175;
    v358 = v176;
    ((void (*)(char *, uint64_t))v175)(v168, v169);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v180 = (uint64_t)v355;
    uint64_t v179 = v356;
    uint64_t v181 = v357;
    (*(void (**)(char *, char *, uint64_t))(v356 + 16))(v355, v164, v357);
    uint64_t v182 = (uint64_t *)(v180 + *(int *)(v352 + 36));
    uint64_t *v182 = KeyPath;
    v182[1] = v174;
    (*(void (**)(char *, uint64_t))(v179 + 8))(v164, v181);
    uint64_t v183 = _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0();
    uint64_t v184 = swift_getKeyPath();
    uint64_t v185 = v360;
    sub_B678(v180, v360, &qword_2EBFC8);
    uint64_t v186 = (uint64_t *)(v185 + *(int *)(v353 + 36));
    *uint64_t v186 = v184;
    v186[1] = v183;
    sub_B6DC(v180, &qword_2EBFC8);
    LOBYTE(v181) = sub_26B750();
    uint64_t v187 = v367;
    sub_41378((uint64_t)v367);
    uint64_t v188 = v361;
    sub_26851C((uint64_t)v187, v361, type metadata accessor for SizeConstants.Environment);
    sub_268584((uint64_t)v187, type metadata accessor for SizeConstants);
    sub_268584(v188, type metadata accessor for SizeConstants.Spacing);
    sub_26A640();
    uint64_t v190 = v189;
    uint64_t v192 = v191;
    uint64_t v194 = v193;
    uint64_t v196 = v195;
    uint64_t v197 = v363;
    sub_B678(v185, v363, &qword_2EBFD0);
    uint64_t v198 = v197 + *(int *)(v359 + 36);
    *(unsigned char *)uint64_t v198 = v181;
    *(void *)(v198 + 8) = v190;
    *(void *)(v198 + 16) = v192;
    *(void *)(v198 + 24) = v194;
    *(void *)(v198 + 32) = v196;
    *(unsigned char *)(v198 + 40) = 0;
    sub_B6DC(v185, &qword_2EBFD0);
    if (v393)
    {
      uint64_t v199 = v333;
      sub_41378(v333);
      uint64_t v200 = v336;
      ((void (*)(char *, void, uint64_t))v350)(v336, enum case for Font.TextStyle.body(_:), v169);
      uint64_t v201 = v332;
      sub_26851C(v199, v332, type metadata accessor for SizeConstants);
      uint64_t v202 = (uint64_t)v337;
      (*(void (**)(char *, char *, uint64_t))(v391 + 16))(v337, v200, v177);
      uint64_t v203 = v340;
      sub_26851C(v201, v340, type metadata accessor for SizeConstants);
      uint64_t v204 = v380;
      sub_26851C(v201, v380, type metadata accessor for SizeConstants.Environment);
      uint64_t v205 = v204 + *(int *)(v392 + 24);
      double v206 = sub_1AB90(v202, v205);
      uint64_t v207 = sub_26AB40();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v207 - 8) + 8))(v205, v207);
      double v208 = 1.0;
      if ((*(void *)&v206 & 0xFFFFFFFFFFFFFLL) == 0) {
        double v208 = v206;
      }
      if ((~*(void *)&v206 & 0x7FF0000000000000) == 0) {
        double v206 = v208;
      }
      sub_268584(v201, type metadata accessor for SizeConstants);
      uint64_t v209 = v366;
      ((void (*)(uint64_t, uint64_t))v366)(v202, v177);
      uint64_t v210 = *(int *)(v370 + 36);
      *(double *)(v203 + v210) = v206;
      ((void (*)(char *, uint64_t))v209)(v200, v177);
      sub_268584(v199, type metadata accessor for SizeConstants);
      double v211 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v203 + v210)) * 44.0;
      double v212 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v203 + *(int *)(v392 + 28)));
      uint64_t v214 = (uint64_t)v381;
      uint64_t v213 = v382;
      uint64_t v215 = v383;
      (*(void (**)(char *, void, uint64_t))(v382 + 104))(v381, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v383);
      *(double *)v397 = v211;
      sub_196FB4(v214, v212);
      double v216 = *(double *)v397;
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v214, v215);
      sub_B6DC(v203, &qword_2EE988);
      uint64_t v217 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      uint64_t v218 = v362;
      sub_B1060(v216, 0, 0.0, 1, 0.0, 1, 0.0, 1, v362, 0.0, 1, 0.0, 1, v217, v219);
      sub_B6DC(v197, &qword_2EE920);
      uint64_t v220 = v364;
      sub_19CC4(v218, v364, &qword_2EE928);
      uint64_t v221 = 0;
    }
    else
    {
      uint64_t v222 = _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
      uint64_t v223 = v362;
      sub_B1060(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v362, 0.0, 1, 0.0, 1, v222, v224);
      sub_B6DC(v197, &qword_2EE920);
      uint64_t v220 = v364;
      sub_19CC4(v223, v364, &qword_2EE928);
      uint64_t v225 = v335;
      sub_41378(v335);
      uint64_t v226 = v338;
      ((void (*)(char *, void, uint64_t))v350)(v338, enum case for Font.TextStyle.body(_:), v169);
      uint64_t v227 = v334;
      sub_26851C(v225, v334, type metadata accessor for SizeConstants);
      uint64_t v228 = (uint64_t)v339;
      (*(void (**)(char *, char *, uint64_t))(v391 + 16))(v339, v226, v169);
      uint64_t v229 = v341;
      sub_26851C(v227, v341, type metadata accessor for SizeConstants);
      v367 = type metadata accessor for SizeConstants.Environment;
      uint64_t v230 = v380;
      sub_26851C(v227, v380, type metadata accessor for SizeConstants.Environment);
      uint64_t v231 = v230 + *(int *)(v392 + 24);
      double v232 = sub_1AB90(v228, v231);
      uint64_t v233 = sub_26AB40();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v233 - 8) + 8))(v231, v233);
      double v234 = 1.0;
      if ((*(void *)&v232 & 0xFFFFFFFFFFFFFLL) == 0) {
        double v234 = v232;
      }
      if ((~*(void *)&v232 & 0x7FF0000000000000) == 0) {
        double v232 = v234;
      }
      sub_268584(v227, type metadata accessor for SizeConstants);
      uint64_t v235 = v366;
      ((void (*)(uint64_t, uint64_t))v366)(v228, v177);
      uint64_t v236 = *(int *)(v370 + 36);
      *(double *)(v229 + v236) = v232;
      ((void (*)(char *, uint64_t))v235)(v226, v177);
      sub_268584(v225, type metadata accessor for SizeConstants);
      uint64_t v237 = v368;
      sub_26851C(v229, v368, v367);
      uint64_t v238 = *(int *)(v379 + 36);
      *(void *)(v237 + v238) = *(void *)(v229 + v236);
      sub_B6DC(v229, &qword_2EE988);
      double v239 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v237 + v238)) * 16.0;
      double v240 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v237 + *(int *)(v392 + 28)));
      uint64_t v242 = (uint64_t)v381;
      uint64_t v241 = v382;
      uint64_t v243 = v383;
      (*(void (**)(char *, void, uint64_t))(v382 + 104))(v381, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v383);
      *(double *)v397 = v239;
      sub_196FB4(v242, v240);
      uint64_t v221 = v397[0];
      (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v242, v243);
      sub_B6DC(v237, &qword_2EEA48);
    }
    uint64_t v244 = v365;
    sub_B678(v220, v365, &qword_2EE928);
    uint64_t v245 = v384;
    sub_B678(v244, v384, &qword_2EE928);
    uint64_t v246 = v245 + *(int *)(sub_4A98(&qword_2F8908) + 48);
    *(void *)uint64_t v246 = v221;
    *(unsigned char *)(v246 + 8) = 0;
    *(unsigned char *)(v246 + 9) = v393 & 1;
    sub_B6DC(v220, &qword_2EE928);
    sub_B6DC(v244, &qword_2EE928);
    uint64_t v247 = sub_4A98(&qword_2F88F8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v247 - 8) + 56))(v245, 0, 1, v247);
    sub_19CC4(v245, v389, &qword_2F88E0);
    uint64_t v112 = v387;
  }
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v248 = [self standardUserDefaults],
        NSString v249 = sub_26D3F0(),
        unsigned __int8 v250 = [v248 integerForKey:v249],
        v248,
        v249,
        (v250 & 2) != 0))
  {
    uint64_t v256 = 1;
    uint64_t v253 = v375;
    uint64_t v255 = v373;
  }
  else
  {
    sub_E92B0(v112 + 96, (uint64_t)v397);
    uint64_t v251 = swift_getKeyPath();
    long long v252 = v369;
    uint64_t *v369 = v251;
    sub_4A98(&qword_2EA978);
    swift_storeEnumTagMultiPayload();
    uint64_t v253 = v375;
    memcpy((char *)v252 + *(int *)(v375 + 20), v397, 0x118uLL);
    uint64_t v254 = (uint64_t)v252;
    uint64_t v255 = v373;
    sub_2685E8(v254, v373, (uint64_t (*)(void))type metadata accessor for ListItemMetadataView);
    uint64_t v256 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v374 + 56))(v255, v256, 1, v253);
  uint64_t v257 = v255;
  uint64_t v258 = v372;
  sub_19CC4(v257, v372, &qword_2F88D8);
  sub_19CC4(v258, v390, &qword_2F88D8);
  sub_B678(v112 + 376, (uint64_t)&v394, &qword_2EDB70);
  if (!v395)
  {
    sub_B6DC((uint64_t)&v394, &qword_2EDB70);
LABEL_49:
    uint64_t v392 = 0;
    uint64_t v309 = 0;
    goto LABEL_50;
  }
  sub_AD44(&v394, (uint64_t)v397);
  if (byte_2EF740)
  {
    id v259 = [self standardUserDefaults];
    NSString v260 = sub_26D3F0();
    unsigned __int8 v261 = [v259 integerForKey:v260];

    if (v261)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v397);
      goto LABEL_49;
    }
  }
  uint64_t v262 = v397[3];
  sub_4ADC(v397, v397[3]);
  uint64_t v263 = (uint64_t *)(v112 + *(int *)(v386 + 48));
  uint64_t v264 = *v263;
  uint64_t v265 = v263[1];
  uint64_t v266 = type metadata accessor for ListItemAccessoryView();
  uint64_t v395 = v266;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v267 = sub_CA1C((uint64_t *)&v394);
  uint64_t v268 = sub_2615C8(v264, v265, v262, (uint64_t)v267);
  __chkstk_darwin(v268);
  uint64_t v271 = v391;
  (*(void (**)(char *, uint64_t *, uint64_t))(v270 + 16))((char *)&v321 - v269, v267, v266);
  uint64_t v375 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v394);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v397);
  if (v393)
  {
    uint64_t v272 = v322;
    sub_41378(v322);
    uint64_t v273 = v342;
    sub_26851C(v272, v342, type metadata accessor for SizeConstants.Environment);
    sub_268584(v272, type metadata accessor for SizeConstants);
    long long v274 = v324;
    uint64_t v275 = v271;
    uint64_t v276 = v385;
    (*(void (**)(char *, void, uint64_t))(v271 + 104))(v324, enum case for Font.TextStyle.body(_:), v385);
    uint64_t v277 = v330;
    sub_26851C(v273, v330, type metadata accessor for SizeConstants.Spacing);
    uint64_t v278 = (uint64_t)v325;
    (*(void (**)(char *, char *, uint64_t))(v275 + 16))(v325, v274, v276);
    uint64_t v279 = v329;
    sub_26851C(v277, v329, type metadata accessor for SizeConstants.Spacing);
    uint64_t v280 = v380;
    sub_26851C(v277, v380, type metadata accessor for SizeConstants.Environment);
    uint64_t v281 = v392;
    uint64_t v282 = v280 + *(int *)(v392 + 24);
    double v283 = sub_1AB90(v278, v282);
    uint64_t v284 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v284 - 8) + 8))(v282, v284);
    double v285 = 1.0;
    if ((*(void *)&v283 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v285 = v283;
    }
    if ((~*(void *)&v283 & 0x7FF0000000000000) == 0) {
      double v283 = v285;
    }
    sub_268584(v277, type metadata accessor for SizeConstants.Spacing);
    uint64_t v286 = *(void (**)(uint64_t, uint64_t))(v275 + 8);
    v286(v278, v276);
    uint64_t v287 = *(int *)(v379 + 36);
    *(double *)(v279 + v287) = v283;
    v286((uint64_t)v274, v276);
    sub_268584(v342, type metadata accessor for SizeConstants.Spacing);
    double v288 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v279 + v287));
    double v289 = 8.0;
  }
  else
  {
    uint64_t v290 = v323;
    sub_41378(v323);
    uint64_t v291 = v343;
    sub_26851C(v290, v343, type metadata accessor for SizeConstants.Environment);
    sub_268584(v290, type metadata accessor for SizeConstants);
    uint64_t v292 = v326;
    uint64_t v293 = v271;
    uint64_t v294 = v385;
    (*(void (**)(char *, void, uint64_t))(v271 + 104))(v326, enum case for Font.TextStyle.body(_:), v385);
    uint64_t v295 = v331;
    sub_26851C(v291, v331, type metadata accessor for SizeConstants.Spacing);
    uint64_t v296 = (uint64_t)v327;
    (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v327, v292, v294);
    uint64_t v279 = v328;
    sub_26851C(v295, v328, type metadata accessor for SizeConstants.Spacing);
    uint64_t v297 = v380;
    sub_26851C(v295, v380, type metadata accessor for SizeConstants.Environment);
    uint64_t v281 = v392;
    uint64_t v298 = v297 + *(int *)(v392 + 24);
    double v299 = sub_1AB90(v296, v298);
    uint64_t v300 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v300 - 8) + 8))(v298, v300);
    double v301 = 1.0;
    if ((*(void *)&v299 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v301 = v299;
    }
    if ((~*(void *)&v299 & 0x7FF0000000000000) == 0) {
      double v299 = v301;
    }
    sub_268584(v295, type metadata accessor for SizeConstants.Spacing);
    uint64_t v302 = *(void (**)(uint64_t, uint64_t))(v293 + 8);
    v302(v296, v294);
    uint64_t v303 = *(int *)(v379 + 36);
    *(double *)(v279 + v303) = v299;
    v302((uint64_t)v292, v294);
    sub_268584(v343, type metadata accessor for SizeConstants.Spacing);
    double v288 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v279 + v303));
    double v289 = 16.0;
  }
  double v304 = v288 * v289;
  double v305 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v279 + *(int *)(v281 + 28)));
  uint64_t v307 = (uint64_t)v381;
  uint64_t v306 = v382;
  uint64_t v308 = v383;
  (*(void (**)(char *, void, uint64_t))(v382 + 104))(v381, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v383);
  *(double *)v397 = v304;
  sub_196FB4(v307, v305);
  uint64_t v392 = v397[0];
  (*(void (**)(uint64_t, uint64_t))(v306 + 8))(v307, v308);
  sub_B6DC(v279, &qword_2EEA48);
  uint64_t v309 = v375;
LABEL_50:
  uint64_t v310 = v388;
  uint64_t v311 = v376;
  sub_B678(v388, v376, &qword_2F88F0);
  uint64_t v312 = v389;
  uint64_t v313 = v384;
  sub_B678(v389, v384, &qword_2F88E0);
  uint64_t v314 = v390;
  uint64_t v315 = v377;
  sub_B678(v390, v377, &qword_2F88D8);
  uint64_t v316 = v378;
  sub_B678(v311, v378, &qword_2F88F0);
  long long v317 = (int *)sub_4A98(&qword_2F8900);
  uint64_t v318 = v316 + v317[12];
  *(void *)uint64_t v318 = v371;
  *(unsigned char *)(v318 + 8) = 0;
  *(unsigned char *)(v318 + 9) = v393 & 1;
  sub_B678(v313, v316 + v317[16], &qword_2F88E0);
  sub_B678(v315, v316 + v317[20], &qword_2F88D8);
  long long v319 = (uint64_t *)(v316 + v317[24]);
  *long long v319 = v392;
  v319[1] = 0;
  v319[2] = v309;
  swift_retain();
  sub_B6DC(v314, &qword_2F88D8);
  sub_B6DC(v312, &qword_2F88E0);
  sub_B6DC(v310, &qword_2F88F0);
  swift_release();
  sub_B6DC(v315, &qword_2F88D8);
  sub_B6DC(v313, &qword_2F88E0);
  return sub_B6DC(v311, &qword_2F88F0);
}

uint64_t sub_25FB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ListItemThumbnailView();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_4A98(&qword_2F8920);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v12 = [self standardUserDefaults],
        NSString v13 = sub_26D3F0(),
        unsigned __int8 v14 = [v12 integerForKey:v13],
        v12,
        v13,
        (v14 & 4) != 0))
  {
    uint64_t v31 = sub_26C1A0();
    _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0();
    sub_26A8D0();
    uint64_t v20 = v33;
    char v21 = BYTE8(v33);
    uint64_t v22 = v34;
    char v23 = BYTE8(v34);
    uint64_t v32 = a1;
    long long v24 = v35;
    char v25 = sub_26B7B0();
    sub_26A640();
    *(void *)uint64_t v11 = v31;
    *((void *)v11 + 1) = v20;
    v11[16] = v21;
    *((void *)v11 + 3) = v22;
    v11[32] = v23;
    *(_OWORD *)(v11 + 40) = v24;
    v11[56] = v25;
    *((void *)v11 + 8) = v26;
    *((void *)v11 + 9) = v27;
    *((void *)v11 + 10) = v28;
    *((void *)v11 + 11) = v29;
    v11[96] = 0;
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F8928);
    sub_2683D4();
    sub_2684C4();
    return sub_26B2F0();
  }
  else
  {
    sub_3EB44(v1 + 24, (uint64_t)&v33);
    uint64_t v15 = (uint64_t *)&v6[*(int *)(v3 + 20)];
    *uint64_t v15 = swift_getKeyPath();
    sub_4A98(&qword_2EB708);
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = &v6[*(int *)(v3 + 24)];
    *(void *)uint64_t v16 = swift_getKeyPath();
    v16[8] = 0;
    *((_WORD *)v6 + 32) = v37;
    long long v17 = v36;
    *((_OWORD *)v6 + 2) = v35;
    *((_OWORD *)v6 + 3) = v17;
    long long v18 = v34;
    *(_OWORD *)uint64_t v6 = v33;
    *((_OWORD *)v6 + 1) = v18;
    sub_2685E8((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemThumbnailView);
    sub_26851C((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ListItemThumbnailView);
    swift_storeEnumTagMultiPayload();
    sub_4A98(&qword_2F8928);
    sub_2683D4();
    sub_2684C4();
    sub_26B2F0();
    return sub_268584((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemThumbnailView);
  }
}

uint64_t sub_25FF20()
{
  uint64_t v1 = sub_26AB40();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ListItemView();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + *(int *)(v6 + 32);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_10E0C(*(void *)v9, v11);
  char v12 = sub_40900(v10, v11);
  sub_C374(v10, v11);
  sub_26851C(v0, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemView);
  if (v12)
  {
    sub_41AD8((uint64_t)v4);
    char v13 = sub_26AB10();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_268584((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemView);
    if (v13) {
      return sub_26B1D0();
    }
  }
  else
  {
    sub_268584((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ListItemView);
  }
  return sub_26B120();
}

uint64_t sub_260108@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v116 = a1;
  uint64_t v5 = sub_26DD70();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v9);
  uint64_t v117 = (uint64_t)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26B980();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v111 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v110 = (char *)&v97 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v109 = (char *)&v97 - v17;
  __chkstk_darwin(v16);
  uint64_t v108 = (char *)&v97 - v18;
  uint64_t v118 = sub_4A98(&qword_2EEA48);
  uint64_t v19 = __chkstk_darwin(v118);
  uint64_t v112 = (uint64_t)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v113 = (uint64_t)&v97 - v21;
  uint64_t v22 = type metadata accessor for SizeConstants.Spacing(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v107 = (uint64_t)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v115 = (uint64_t)&v97 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v106 = (uint64_t)&v97 - v28;
  __chkstk_darwin(v27);
  uint64_t v114 = (uint64_t)&v97 - v29;
  uint64_t v30 = type metadata accessor for SizeConstants(0);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v105 = (uint64_t)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v104 = (uint64_t)&v97 - v33;
  uint64_t v34 = sub_4A98(&qword_2F8958);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  __int16 v37 = (char *)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)&v97 - v39;
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v97 - v41;
  *(void *)uint64_t v40 = sub_26B120();
  *((void *)v40 + 1) = 0;
  v40[16] = 0;
  uint64_t v43 = sub_4A98(&qword_2F8960);
  sub_263138(a2, (uint64_t)&v40[*(int *)(v43 + 44)]);
  uint64_t v121 = v42;
  sub_19CC4((uint64_t)v40, (uint64_t)v42, &qword_2F8958);
  sub_B678(a2 + 376, (uint64_t)&v122, &qword_2EDB70);
  if (!v123)
  {
    sub_B6DC((uint64_t)&v122, &qword_2EDB70);
LABEL_20:
    uint64_t v93 = 0;
    uint64_t v56 = 0;
    goto LABEL_21;
  }
  sub_AD44(&v122, (uint64_t)v125);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740)
  {
    id v44 = [self standardUserDefaults];
    NSString v45 = sub_26D3F0();
    unsigned __int8 v46 = [v44 integerForKey:v45];

    if (v46)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v125);
      goto LABEL_20;
    }
  }
  uint64_t v98 = v37;
  uint64_t v99 = v9;
  uint64_t v100 = v8;
  uint64_t v101 = v6;
  uint64_t v102 = v5;
  uint64_t v103 = a3;
  uint64_t v47 = v126;
  sub_4ADC(v125, v126);
  uint64_t v48 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ListItemView() + 48));
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  uint64_t v51 = type metadata accessor for ListItemAccessoryView();
  uint64_t v123 = v51;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = sub_CA1C((uint64_t *)&v122);
  uint64_t v53 = sub_2615C8(v50, v49, v47, (uint64_t)v52);
  __chkstk_darwin(v53);
  (*(void (**)(char *, uint64_t *, uint64_t))(v55 + 16))((char *)&v97 - v54, v52, v51);
  uint64_t v56 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v122);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v125);
  uint64_t v57 = v119;
  if (v116)
  {
    uint64_t v58 = v104;
    sub_41378(v104);
    uint64_t v59 = v114;
    sub_26851C(v58, v114, type metadata accessor for SizeConstants.Environment);
    sub_268584(v58, type metadata accessor for SizeConstants);
    uint64_t v60 = v108;
    uint64_t v61 = v120;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v108, enum case for Font.TextStyle.body(_:), v120);
    uint64_t v62 = v106;
    sub_26851C(v59, v106, type metadata accessor for SizeConstants.Spacing);
    uint64_t v63 = (uint64_t)v109;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v109, v60, v61);
    uint64_t v64 = v113;
    sub_26851C(v62, v113, type metadata accessor for SizeConstants.Spacing);
    uint64_t v65 = v117;
    sub_26851C(v62, v117, type metadata accessor for SizeConstants.Environment);
    uint64_t v66 = v99;
    uint64_t v67 = v65 + *(int *)(v99 + 24);
    double v68 = sub_1AB90(v63, v67);
    uint64_t v69 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v67, v69);
    double v70 = 1.0;
    if ((*(void *)&v68 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v70 = v68;
    }
    if ((~*(void *)&v68 & 0x7FF0000000000000) == 0) {
      double v68 = v70;
    }
    sub_268584(v62, type metadata accessor for SizeConstants.Spacing);
    uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v71(v63, v61);
    uint64_t v72 = *(int *)(v118 + 36);
    *(double *)(v64 + v72) = v68;
    v71((uint64_t)v60, v61);
    sub_268584(v114, type metadata accessor for SizeConstants.Spacing);
    double v73 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v64 + v72));
    double v74 = 8.0;
  }
  else
  {
    uint64_t v75 = v105;
    sub_41378(v105);
    uint64_t v76 = v115;
    sub_26851C(v75, v115, type metadata accessor for SizeConstants.Environment);
    sub_268584(v75, type metadata accessor for SizeConstants);
    uint64_t v77 = v110;
    uint64_t v78 = v120;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v110, enum case for Font.TextStyle.body(_:), v120);
    uint64_t v79 = v107;
    sub_26851C(v76, v107, type metadata accessor for SizeConstants.Spacing);
    uint64_t v80 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v111, v77, v78);
    uint64_t v64 = v112;
    sub_26851C(v79, v112, type metadata accessor for SizeConstants.Spacing);
    uint64_t v81 = v117;
    sub_26851C(v79, v117, type metadata accessor for SizeConstants.Environment);
    uint64_t v66 = v99;
    uint64_t v82 = v81 + *(int *)(v99 + 24);
    double v83 = sub_1AB90(v80, v82);
    uint64_t v84 = sub_26AB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v82, v84);
    double v85 = 1.0;
    if ((*(void *)&v83 & 0xFFFFFFFFFFFFFLL) == 0) {
      double v85 = v83;
    }
    if ((~*(void *)&v83 & 0x7FF0000000000000) == 0) {
      double v83 = v85;
    }
    sub_268584(v79, type metadata accessor for SizeConstants.Spacing);
    uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v86(v80, v78);
    uint64_t v87 = *(int *)(v118 + 36);
    *(double *)(v64 + v87) = v83;
    v86((uint64_t)v77, v78);
    sub_268584(v115, type metadata accessor for SizeConstants.Spacing);
    double v73 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v64 + v87));
    double v74 = 16.0;
  }
  double v88 = v73 * v74;
  double v89 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v64 + *(int *)(v66 + 28)));
  uint64_t v90 = v101;
  uint64_t v91 = (uint64_t)v100;
  uint64_t v92 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v102);
  *(double *)uint64_t v125 = v88;
  sub_196FB4(v91, v89);
  uint64_t v93 = v125[0];
  __int16 v37 = v98;
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v91, v92);
  sub_B6DC(v64, &qword_2EEA48);
  a3 = v103;
LABEL_21:
  uint64_t v94 = (uint64_t)v121;
  sub_B678((uint64_t)v121, (uint64_t)v37, &qword_2F8958);
  sub_B678((uint64_t)v37, a3, &qword_2F8958);
  uint64_t v95 = (void *)(a3 + *(int *)(sub_4A98(&qword_2F8968) + 48));
  *uint64_t v95 = v93;
  v95[1] = 0;
  v95[2] = v56;
  swift_retain();
  sub_B6DC(v94, &qword_2F8958);
  swift_release();
  return sub_B6DC((uint64_t)v37, &qword_2F8958);
}

uint64_t sub_260CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for DefaultBlendModeModifier();
  __chkstk_darwin(v3 - 8);
  __int16 v37 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ColorConstants(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26AC50();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (_OWORD *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_4A98(&qword_2ECB78);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_4A98(&qword_2F8950);
  __chkstk_darwin(v36);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v19 = sub_26B160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v11 = _Q0;
  uint64_t v25 = a1 + *(int *)(type metadata accessor for ListItemView() + 28);
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 8);
  sub_10E0C(*(void *)v25, v27);
  char v28 = sub_40900(v26, v27);
  sub_C374(v26, v27);
  _s7BooksUI18BuyButtonExternalsV6colorsAA14ColorConstantsVvg_0((uint64_t)v7);
  if (v28)
  {
    uint64_t v29 = ColorConstants.vibrantButtonBackground.getter();
  }
  else
  {
    id v30 = [self secondarySystemBackgroundColor];
    uint64_t v29 = sub_26C230();
  }
  uint64_t v31 = v29;
  sub_268584((uint64_t)v7, type metadata accessor for ColorConstants);
  sub_26851C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v14[*(int *)(v12 + 52)] = v31;
  *(_WORD *)&v14[*(int *)(v12 + 56)] = 256;
  sub_268584((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = (uint64_t)v37;
  *__int16 v37 = KeyPath;
  sub_4A98(&qword_2EB3E8);
  swift_storeEnumTagMultiPayload();
  sub_2685E8(v33, (uint64_t)&v16[*(int *)(v36 + 36)], (uint64_t (*)(void))type metadata accessor for DefaultBlendModeModifier);
  sub_19CC4((uint64_t)v14, (uint64_t)v16, &qword_2ECB78);
  return sub_19CC4((uint64_t)v16, v38, &qword_2F8950);
}

uint64_t sub_26107C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = sub_4A98(&qword_2F8810);
  __chkstk_darwin(v27);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_4A98(&qword_2F8800);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4A98(&qword_2F8978);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4A98(&qword_2F8980);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4A98(&qword_2F87E0);
  __chkstk_darwin(v25);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_4A98(&qword_2F87F0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = sub_2616BC();
  if (v17)
  {
    if (v17 == 1)
    {
      *(void *)uint64_t v6 = sub_26B1D0();
      *((void *)v6 + 1) = 0;
      v6[16] = 0;
      uint64_t v18 = sub_4A98(&qword_2F8990);
      sub_262810(v1, (uint64_t)&v6[*(int *)(v18 + 44)]);
      sub_B678((uint64_t)v6, (uint64_t)v11, &qword_2F8800);
      swift_storeEnumTagMultiPayload();
      sub_7C18(&qword_2F87E8, &qword_2F87F0);
      sub_7C18(&qword_2F87F8, &qword_2F8800);
      sub_26B2F0();
      sub_B678((uint64_t)v13, (uint64_t)v8, &qword_2F87E0);
      swift_storeEnumTagMultiPayload();
      sub_264BA4();
      sub_7C18(&qword_2F8808, &qword_2F8810);
      sub_26B2F0();
      sub_B6DC((uint64_t)v13, &qword_2F87E0);
      uint64_t v19 = (uint64_t)v6;
      uint64_t v20 = &qword_2F8800;
    }
    else
    {
      *(void *)uint64_t v3 = sub_26B1D0();
      *((void *)v3 + 1) = 0;
      v3[16] = 0;
      uint64_t v22 = sub_4A98(&qword_2F8988);
      sub_2637BC(v1, (uint64_t)&v3[*(int *)(v22 + 44)]);
      sub_B678((uint64_t)v3, (uint64_t)v8, &qword_2F8810);
      swift_storeEnumTagMultiPayload();
      sub_264BA4();
      sub_7C18(&qword_2F8808, &qword_2F8810);
      sub_26B2F0();
      uint64_t v19 = (uint64_t)v3;
      uint64_t v20 = &qword_2F8810;
    }
  }
  else
  {
    *(void *)uint64_t v16 = sub_26B100();
    *((void *)v16 + 1) = 0;
    unsigned char v16[16] = 0;
    uint64_t v21 = sub_4A98(&qword_2F8998);
    sub_261930(v1, (uint64_t)&v16[*(int *)(v21 + 44)]);
    sub_B678((uint64_t)v16, (uint64_t)v11, &qword_2F87F0);
    swift_storeEnumTagMultiPayload();
    sub_7C18(&qword_2F87E8, &qword_2F87F0);
    sub_7C18(&qword_2F87F8, &qword_2F8800);
    sub_26B2F0();
    sub_B678((uint64_t)v13, (uint64_t)v8, &qword_2F87E0);
    swift_storeEnumTagMultiPayload();
    sub_264BA4();
    sub_7C18(&qword_2F8808, &qword_2F8810);
    sub_26B2F0();
    sub_B6DC((uint64_t)v13, &qword_2F87E0);
    uint64_t v19 = (uint64_t)v16;
    uint64_t v20 = &qword_2F87F0;
  }
  return sub_B6DC(v19, v20);
}

uint64_t sub_2615C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, v4);
  sub_1380C((uint64_t)v10, a1, a2, a3, a4);
  return swift_retain();
}

uint64_t sub_2616BC()
{
  uint64_t v1 = sub_26AB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = v0 + *(int *)(type metadata accessor for ListItemView() + 32);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_10E0C(*(void *)v8, v10);
  char v11 = sub_40900(v9, v10);
  sub_C374(v9, v10);
  sub_41AD8((uint64_t)v7);
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  uint64_t v13 = (void (**)(char *, uint64_t))(v2 + 8);
  if (v11)
  {
    v12(v5, enum case for DynamicTypeSize.accessibility1(_:), v1);
    char v14 = sub_26AB20();
    uint64_t v15 = *v13;
    (*v13)(v5, v1);
    v15(v7, v1);
    if (v14)
    {
      return 0;
    }
    else
    {
      sub_41AD8((uint64_t)v7);
      v12(v5, enum case for DynamicTypeSize.accessibility3(_:), v1);
      char v19 = sub_26AB20();
      v15(v5, v1);
      v15(v7, v1);
      if (v19) {
        return 1;
      }
      else {
        return 2;
      }
    }
  }
  else
  {
    v12(v5, enum case for DynamicTypeSize.accessibility5(_:), v1);
    char v17 = sub_26AB20();
    uint64_t v18 = *v13;
    (*v13)(v5, v1);
    v18(v7, v1);
    return (v17 & 1) == 0;
  }
}

uint64_t sub_261930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_4A98(&qword_2F89A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v51 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v50 = (uint64_t *)&v45[-v6];
  uint64_t v49 = sub_26B980();
  uint64_t v7 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_4A98(&qword_2F88E8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_4A98(&qword_2F88F0);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v48 = &v45[-v21];
  sub_25FB88((uint64_t)v15);
  int v46 = sub_26B7B0();
  uint64_t v22 = type metadata accessor for ListItemView();
  sub_41378((uint64_t)v12);
  uint64_t v47 = a1;
  uint64_t v23 = a1 + *(int *)(v22 + 32);
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_10E0C(*(void *)v23, v25);
  LOBYTE(a1) = sub_40900(v24, v25);
  sub_C374(v24, v25);
  double v26 = ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(a1 & 1);
  uint64_t v27 = v49;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.body(_:), v49);
  sub_25B8E8((uint64_t)v9, v26);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v27);
  sub_268584((uint64_t)v12, type metadata accessor for SizeConstants);
  sub_26A640();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_B678((uint64_t)v15, (uint64_t)v20, &qword_2F88E8);
  uint64_t v36 = &v20[*(int *)(v17 + 44)];
  *uint64_t v36 = v46;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_B6DC((uint64_t)v15, &qword_2F88E8);
  __int16 v37 = v48;
  sub_19CC4((uint64_t)v20, (uint64_t)v48, &qword_2F88F0);
  uint64_t v38 = sub_26B1D0();
  uint64_t v39 = (uint64_t)v50;
  *uint64_t v50 = v38;
  *(void *)(v39 + 8) = 0;
  *(unsigned char *)(v39 + 16) = 0;
  uint64_t v40 = sub_4A98(&qword_2F89A8);
  sub_261D90(v47, v39 + *(int *)(v40 + 44));
  sub_B678((uint64_t)v37, (uint64_t)v20, &qword_2F88F0);
  uint64_t v41 = v51;
  sub_B678(v39, (uint64_t)v51, &qword_2F89A0);
  uint64_t v42 = v52;
  sub_B678((uint64_t)v20, v52, &qword_2F88F0);
  uint64_t v43 = sub_4A98(&qword_2F89B0);
  sub_B678((uint64_t)v41, v42 + *(int *)(v43 + 48), &qword_2F89A0);
  sub_B6DC(v39, &qword_2F89A0);
  sub_B6DC((uint64_t)v37, &qword_2F88F0);
  sub_B6DC((uint64_t)v41, &qword_2F89A0);
  return sub_B6DC((uint64_t)v20, &qword_2F88F0);
}

uint64_t sub_261D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_26DD70();
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  __chkstk_darwin(v4);
  uint64_t v92 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_4A98(&qword_2EEA48);
  __chkstk_darwin(v90);
  uint64_t v91 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v96);
  uint64_t v83 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26B980();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  double v85 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v80 - v11;
  uint64_t v84 = sub_4A98(&qword_2EE988);
  __chkstk_darwin(v84);
  uint64_t v87 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SizeConstants(0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v82 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v95 = (uint64_t)&v80 - v16;
  uint64_t v97 = type metadata accessor for ListItemMetadataView();
  uint64_t v17 = *(char **)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v19 = (uint64_t *)((char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_4A98(&qword_2F88D8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  double v26 = (char *)&v80 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v80 - v28;
  __chkstk_darwin(v27);
  uint64_t v98 = (uint64_t)&v80 - v30;
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 != 1) {
    goto LABEL_5;
  }
  id v31 = [self standardUserDefaults];
  uint64_t v81 = v17;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  id v34 = v31;
  uint64_t v35 = v23;
  NSString v36 = sub_26D3F0();
  unsigned __int8 v37 = [v34 integerForKey:v36];

  a2 = v33;
  a1 = v32;
  uint64_t v17 = v81;

  uint64_t v23 = v35;
  if ((v37 & 2) != 0)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v17 + 7))(v26, 1, 1, v97);
  }
  else
  {
LABEL_5:
    sub_E92B0(a1 + 96, (uint64_t)v102);
    *uint64_t v19 = swift_getKeyPath();
    sub_4A98(&qword_2EA978);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v97;
    memcpy((char *)v19 + *(int *)(v97 + 20), v102, 0x118uLL);
    sub_2685E8((uint64_t)v19, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ListItemMetadataView);
    (*((void (**)(char *, void, uint64_t, uint64_t))v17 + 7))(v26, 0, 1, v38);
  }
  sub_19CC4((uint64_t)v26, (uint64_t)v29, &qword_2F88D8);
  sub_19CC4((uint64_t)v29, v98, &qword_2F88D8);
  sub_B678(a1 + 376, (uint64_t)&v99, &qword_2EDB70);
  if (!v100)
  {
    sub_B6DC((uint64_t)&v99, &qword_2EDB70);
LABEL_17:
    uint64_t v75 = 0;
    uint64_t v52 = 0;
    goto LABEL_18;
  }
  sub_AD44(&v99, (uint64_t)v102);
  if (byte_2EF740)
  {
    id v39 = [self standardUserDefaults];
    NSString v40 = sub_26D3F0();
    unsigned __int8 v41 = [v39 integerForKey:v40];

    if (v41)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v102);
      goto LABEL_17;
    }
  }
  uint64_t v42 = v102[3];
  sub_4ADC(v102, v102[3]);
  uint64_t v97 = a2;
  uint64_t v80 = type metadata accessor for ListItemView();
  uint64_t v43 = (uint64_t *)(a1 + *(int *)(v80 + 48));
  uint64_t v44 = *v43;
  uint64_t v45 = v43[1];
  uint64_t v46 = type metadata accessor for ListItemAccessoryView();
  uint64_t v81 = v23;
  uint64_t v47 = v46;
  uint64_t v100 = v46;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = sub_CA1C((uint64_t *)&v99);
  uint64_t v49 = sub_2615C8(v44, v45, v42, (uint64_t)v48);
  __chkstk_darwin(v49);
  (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 16))((char *)&v80 - v50, v48, v47);
  uint64_t v52 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v99);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v102);
  uint64_t v53 = v95;
  sub_41378(v95);
  uint64_t v55 = v88;
  uint64_t v54 = v89;
  uint64_t v56 = v86;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v86, enum case for Font.TextStyle.body(_:), v89);
  uint64_t v57 = v82;
  sub_26851C(v53, v82, type metadata accessor for SizeConstants);
  uint64_t v58 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v85, v56, v54);
  uint64_t v59 = v87;
  sub_26851C(v57, v87, type metadata accessor for SizeConstants);
  uint64_t v60 = v83;
  sub_26851C(v57, v83, type metadata accessor for SizeConstants.Environment);
  uint64_t v61 = v60 + *(int *)(v96 + 24);
  double v62 = sub_1AB90(v58, v61);
  uint64_t v63 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v61, v63);
  double v64 = 1.0;
  if ((*(void *)&v62 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v64 = v62;
  }
  if ((~*(void *)&v62 & 0x7FF0000000000000) == 0) {
    double v62 = v64;
  }
  sub_268584(v57, type metadata accessor for SizeConstants);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v65(v58, v54);
  uint64_t v66 = *(int *)(v84 + 36);
  *(double *)(v59 + v66) = v62;
  v65((uint64_t)v56, v54);
  sub_268584(v95, type metadata accessor for SizeConstants);
  uint64_t v67 = v91;
  sub_26851C(v59, v91, type metadata accessor for SizeConstants.Environment);
  uint64_t v68 = *(void *)(v59 + v66);
  a2 = v97;
  uint64_t v69 = *(int *)(v90 + 36);
  *(void *)(v67 + v69) = v68;
  sub_B6DC(v59, &qword_2EE988);
  double v70 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v67 + v69)) * 16.0;
  double v71 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v67 + *(int *)(v96 + 28)));
  uint64_t v73 = (uint64_t)v92;
  uint64_t v72 = v93;
  uint64_t v74 = v94;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v94);
  *(double *)uint64_t v102 = v70;
  sub_196FB4(v73, v71);
  uint64_t v75 = v102[0];
  uint64_t v76 = v73;
  uint64_t v23 = v81;
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v76, v74);
  sub_B6DC(v67, &qword_2EEA48);
LABEL_18:
  uint64_t v77 = v98;
  sub_B678(v98, (uint64_t)v23, &qword_2F88D8);
  sub_B678((uint64_t)v23, a2, &qword_2F88D8);
  uint64_t v78 = (void *)(a2 + *(int *)(sub_4A98(&qword_2F89B8) + 48));
  *uint64_t v78 = v75;
  v78[1] = 0;
  v78[2] = v52;
  swift_retain();
  sub_B6DC(v77, &qword_2F88D8);
  swift_release();
  return sub_B6DC((uint64_t)v23, &qword_2F88D8);
}

uint64_t sub_262810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = sub_26DD70();
  uint64_t v85 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4A98(&qword_2EEA48);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26B980();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v84 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v81 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v80 = (char *)&v69 - v13;
  uint64_t v14 = sub_4A98(&qword_2EE988);
  __chkstk_darwin(v14);
  uint64_t v82 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SizeConstants(0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v75 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v76 = (uint64_t)&v69 - v19;
  uint64_t v20 = sub_4A98(&qword_2F8958);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  double v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v69 - v27;
  *(void *)double v26 = sub_26B100();
  *((void *)v26 + 1) = 0;
  v26[16] = 0;
  uint64_t v29 = sub_4A98(&qword_2F8960);
  sub_263138(a1, (uint64_t)&v26[*(int *)(v29 + 44)]);
  uint64_t v87 = v28;
  sub_19CC4((uint64_t)v26, (uint64_t)v28, &qword_2F8958);
  sub_B678(a1 + 376, (uint64_t)&v88, &qword_2EDB70);
  if (!v89)
  {
    sub_B6DC((uint64_t)&v88, &qword_2EDB70);
LABEL_13:
    uint64_t v65 = 0;
    uint64_t v43 = 0;
    goto LABEL_14;
  }
  uint64_t v86 = v8;
  uint64_t v73 = v23;
  uint64_t v74 = a2;
  sub_AD44(&v88, (uint64_t)v91);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740)
  {
    id v30 = [self standardUserDefaults];
    NSString v31 = sub_26D3F0();
    unsigned __int8 v32 = [v30 integerForKey:v31];

    if (v32)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v91);
      a2 = v74;
      uint64_t v23 = v73;
      goto LABEL_13;
    }
  }
  uint64_t v33 = v92;
  sub_4ADC(v91, v92);
  uint64_t v72 = v5;
  uint64_t v34 = *(int *)(type metadata accessor for ListItemView() + 48);
  uint64_t v70 = v14;
  uint64_t v35 = (uint64_t *)(a1 + v34);
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  double v71 = v7;
  uint64_t v38 = type metadata accessor for ListItemAccessoryView();
  uint64_t v89 = v38;
  uint64_t WitnessTable = swift_getWitnessTable();
  id v39 = sub_CA1C((uint64_t *)&v88);
  uint64_t v40 = sub_2615C8(v36, v37, v33, (uint64_t)v39);
  __chkstk_darwin(v40);
  (*(void (**)(char *, uint64_t *, uint64_t))(v42 + 16))((char *)&v69 - v41, v39, v38);
  uint64_t v43 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v88);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v91);
  uint64_t v44 = v76;
  sub_41378(v76);
  uint64_t v46 = v83;
  uint64_t v45 = v84;
  uint64_t v47 = v80;
  (*(void (**)(char *, void, uint64_t))(v83 + 104))(v80, enum case for Font.TextStyle.body(_:), v84);
  uint64_t v48 = v75;
  sub_26851C(v44, v75, type metadata accessor for SizeConstants);
  uint64_t v49 = (uint64_t)v81;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v81, v47, v45);
  uint64_t v50 = v82;
  sub_26851C(v48, v82, type metadata accessor for SizeConstants);
  uint64_t v51 = v77;
  sub_26851C(v48, v77, type metadata accessor for SizeConstants.Environment);
  uint64_t v52 = v51 + *(int *)(v86 + 24);
  double v53 = sub_1AB90(v49, v52);
  uint64_t v54 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v52, v54);
  double v55 = 1.0;
  if ((*(void *)&v53 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v55 = v53;
  }
  if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
    double v53 = v55;
  }
  sub_268584(v48, type metadata accessor for SizeConstants);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v56(v49, v45);
  uint64_t v57 = *(int *)(v70 + 36);
  *(double *)(v50 + v57) = v53;
  v56((uint64_t)v47, v45);
  sub_268584(v44, type metadata accessor for SizeConstants);
  uint64_t v58 = (uint64_t)v71;
  sub_26851C(v50, (uint64_t)v71, type metadata accessor for SizeConstants.Environment);
  uint64_t v59 = *(int *)(v72 + 36);
  *(void *)(v58 + v59) = *(void *)(v50 + v57);
  sub_B6DC(v50, &qword_2EE988);
  double v60 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v58 + v59)) * 16.0;
  double v61 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v58 + *(int *)(v86 + 28)));
  uint64_t v62 = v85;
  uint64_t v63 = (uint64_t)v78;
  uint64_t v64 = v79;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v78, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v79);
  *(double *)uint64_t v91 = v60;
  sub_196FB4(v63, v61);
  uint64_t v65 = v91[0];
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
  sub_B6DC(v58, &qword_2EEA48);
  a2 = v74;
  uint64_t v23 = v73;
LABEL_14:
  uint64_t v66 = (uint64_t)v87;
  sub_B678((uint64_t)v87, (uint64_t)v23, &qword_2F8958);
  sub_B678((uint64_t)v23, a2, &qword_2F8958);
  uint64_t v67 = (void *)(a2 + *(int *)(sub_4A98(&qword_2F8968) + 48));
  *uint64_t v67 = v65;
  v67[1] = 0;
  v67[2] = v43;
  swift_retain();
  sub_B6DC(v66, &qword_2F8958);
  swift_release();
  return sub_B6DC((uint64_t)v23, &qword_2F8958);
}

uint64_t sub_263138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = type metadata accessor for ListItemMetadataView();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v65 = (uint64_t *)((char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_4A98(&qword_2F88D8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v75 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v71 = (uint64_t)&v63 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v70 = (uint64_t)&v63 - v11;
  __chkstk_darwin(v10);
  uint64_t v72 = (uint64_t)&v63 - v12;
  uint64_t v69 = sub_26B980();
  uint64_t v13 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SizeConstants(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4A98(&qword_2F88E8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4A98(&qword_2F88F0);
  uint64_t v23 = v22 - 8;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v66 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v68 = (char *)&v63 - v26;
  sub_25FB88((uint64_t)v21);
  int v67 = sub_26B7B0();
  uint64_t v27 = type metadata accessor for ListItemView();
  sub_41378((uint64_t)v18);
  uint64_t v28 = *(int *)(v27 + 32);
  uint64_t v64 = a1;
  uint64_t v29 = a1 + v28;
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_10E0C(*(void *)v29, v31);
  LOBYTE(a1) = sub_40900(v30, v31);
  sub_C374(v30, v31);
  double v32 = ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(a1 & 1);
  uint64_t v33 = v69;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.body(_:), v69);
  sub_25B8E8((uint64_t)v15, v32);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
  uint64_t v34 = (uint64_t)v18;
  uint64_t v35 = (uint64_t)v66;
  sub_268584(v34, type metadata accessor for SizeConstants);
  sub_26A640();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  sub_B678((uint64_t)v21, v35, &qword_2F88E8);
  uint64_t v44 = *(int *)(v23 + 44);
  uint64_t v45 = (uint64_t)v68;
  uint64_t v46 = v35 + v44;
  *(unsigned char *)uint64_t v46 = v67;
  *(void *)(v46 + 8) = v37;
  *(void *)(v46 + 16) = v39;
  *(void *)(v46 + 24) = v41;
  *(void *)(v46 + 32) = v43;
  *(unsigned char *)(v46 + 40) = 0;
  sub_B6DC((uint64_t)v21, &qword_2F88E8);
  sub_19CC4(v35, v45, &qword_2F88F0);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v47 = [self standardUserDefaults],
        NSString v48 = sub_26D3F0(),
        unsigned __int8 v49 = [v47 integerForKey:v48],
        v47,
        v48,
        (v49 & 2) != 0))
  {
    uint64_t v55 = 1;
    uint64_t v52 = v74;
    uint64_t v54 = v71;
  }
  else
  {
    sub_E92B0(v64 + 96, (uint64_t)v77);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = v65;
    *uint64_t v65 = KeyPath;
    sub_4A98(&qword_2EA978);
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = v74;
    memcpy((char *)v51 + *(int *)(v74 + 20), v77, 0x118uLL);
    uint64_t v53 = (uint64_t)v51;
    uint64_t v54 = v71;
    sub_2685E8(v53, v71, (uint64_t (*)(void))type metadata accessor for ListItemMetadataView);
    uint64_t v55 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v54, v55, 1, v52);
  uint64_t v56 = v54;
  uint64_t v57 = v70;
  sub_19CC4(v56, v70, &qword_2F88D8);
  uint64_t v58 = v72;
  sub_19CC4(v57, v72, &qword_2F88D8);
  sub_B678(v45, v35, &qword_2F88F0);
  uint64_t v59 = v75;
  sub_B678(v58, v75, &qword_2F88D8);
  uint64_t v60 = v76;
  sub_B678(v35, v76, &qword_2F88F0);
  uint64_t v61 = sub_4A98(&qword_2F8970);
  sub_B678(v59, v60 + *(int *)(v61 + 48), &qword_2F88D8);
  sub_B6DC(v58, &qword_2F88D8);
  sub_B6DC(v45, &qword_2F88F0);
  sub_B6DC(v59, &qword_2F88D8);
  return sub_B6DC(v35, &qword_2F88F0);
}

uint64_t sub_2637BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v146 = a2;
  uint64_t v3 = sub_26DD70();
  uint64_t v135 = *(void *)(v3 - 8);
  uint64_t v136 = v3;
  __chkstk_darwin(v3);
  uint64_t v134 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_4A98(&qword_2EEA48);
  __chkstk_darwin(v132);
  uint64_t v133 = (uint64_t)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for SizeConstants.Environment(0);
  __chkstk_darwin(v138);
  uint64_t v129 = (uint64_t)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_4A98(&qword_2EE988);
  __chkstk_darwin(v130);
  uint64_t v131 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ListItemMetadataView();
  uint64_t v141 = *(void *)(v8 - 8);
  uint64_t v142 = v8;
  __chkstk_darwin(v8);
  uint64_t v137 = (uint64_t *)((char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_4A98(&qword_2F88D8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v145 = (uint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v140 = (uint64_t)&v118 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v139 = (uint64_t)&v118 - v16;
  __chkstk_darwin(v15);
  uint64_t v149 = (char *)&v118 - v17;
  uint64_t v18 = sub_26B980();
  uint64_t v147 = *(void *)(v18 - 8);
  uint64_t v148 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v128 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v127 = (char *)&v118 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v118 - v23;
  uint64_t v25 = type metadata accessor for SizeConstants(0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v125 = (uint64_t)&v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v126 = (uint64_t)&v118 - v29;
  __chkstk_darwin(v28);
  char v31 = (char *)&v118 - v30;
  uint64_t v32 = sub_4A98(&qword_2F88E8);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v118 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4A98(&qword_2F88F0);
  uint64_t v36 = v35 - 8;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v118 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v150 = (uint64_t)&v118 - v40;
  sub_25FB88((uint64_t)v34);
  LODWORD(v143) = sub_26B780();
  uint64_t v41 = type metadata accessor for ListItemView();
  uint64_t v123 = a1 + *(int *)(v41 + 20);
  sub_41378((uint64_t)v31);
  uint64_t v119 = v41;
  uint64_t v42 = *(int *)(v41 + 32);
  uint64_t v144 = a1;
  uint64_t v43 = a1 + v42;
  uint64_t v44 = *(void *)v43;
  LOBYTE(a1) = *(unsigned char *)(v43 + 8);
  sub_10E0C(*(void *)v43, a1);
  char v45 = sub_40900(v44, a1);
  sub_C374(v44, a1);
  double v46 = ListItemThumbnailViewModel.unscaledTrailingPadding(isCompact:)(v45 & 1);
  uint64_t v48 = v147;
  uint64_t v47 = v148;
  unsigned __int8 v49 = *(void (**)(void))(v147 + 104);
  unsigned int v121 = enum case for Font.TextStyle.body(_:);
  uint64_t v122 = v147 + 104;
  uint64_t v120 = (void (*)(char *, void, uint64_t))v49;
  v49(v24);
  sub_25B8E8((uint64_t)v24, v46);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v50 = v48 + 8;
  uint64_t v124 = v51;
  v51(v24, v47);
  sub_268584((uint64_t)v31, type metadata accessor for SizeConstants);
  sub_26A640();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  sub_B678((uint64_t)v34, (uint64_t)v39, &qword_2F88E8);
  uint64_t v60 = &v39[*(int *)(v36 + 44)];
  *uint64_t v60 = (char)v143;
  *((void *)v60 + 1) = v53;
  *((void *)v60 + 2) = v55;
  *((void *)v60 + 3) = v57;
  *((void *)v60 + 4) = v59;
  v60[40] = 0;
  sub_B6DC((uint64_t)v34, &qword_2F88E8);
  uint64_t v143 = v39;
  sub_19CC4((uint64_t)v39, v150, &qword_2F88F0);
  if (qword_2E9C28 != -1) {
    swift_once();
  }
  if (byte_2EF740 == 1
    && (id v61 = [self standardUserDefaults],
        NSString v62 = sub_26D3F0(),
        unsigned __int8 v63 = [v61 integerForKey:v62],
        v61,
        v62,
        (v63 & 2) != 0))
  {
    uint64_t v70 = 1;
    uint64_t v71 = (uint64_t)v149;
    uint64_t v64 = v144;
    uint64_t v67 = v142;
    uint64_t v69 = v140;
  }
  else
  {
    uint64_t v64 = v144;
    sub_E92B0(v144 + 96, (uint64_t)v154);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v66 = v137;
    *uint64_t v137 = KeyPath;
    sub_4A98(&qword_2EA978);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v142;
    memcpy((char *)v66 + *(int *)(v142 + 20), v154, 0x118uLL);
    uint64_t v68 = (uint64_t)v66;
    uint64_t v69 = v140;
    sub_2685E8(v68, v140, (uint64_t (*)(void))type metadata accessor for ListItemMetadataView);
    uint64_t v70 = 0;
    uint64_t v71 = (uint64_t)v149;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v69, v70, 1, v67);
  uint64_t v72 = v69;
  uint64_t v73 = v139;
  sub_19CC4(v72, v139, &qword_2F88D8);
  sub_19CC4(v73, v71, &qword_2F88D8);
  sub_B678(v64 + 376, (uint64_t)&v151, &qword_2EDB70);
  if (!v152)
  {
    sub_B6DC((uint64_t)&v151, &qword_2EDB70);
LABEL_17:
    uint64_t v107 = 0;
    uint64_t v144 = 0;
    goto LABEL_18;
  }
  sub_AD44(&v151, (uint64_t)v154);
  if (byte_2EF740)
  {
    id v74 = [self standardUserDefaults];
    NSString v75 = sub_26D3F0();
    unsigned __int8 v76 = [v74 integerForKey:v75];

    if (v76)
    {
      _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v154);
      goto LABEL_17;
    }
  }
  uint64_t v77 = v154[3];
  sub_4ADC(v154, v154[3]);
  uint64_t v78 = (uint64_t *)(v64 + *(int *)(v119 + 48));
  uint64_t v79 = *v78;
  uint64_t v80 = v78[1];
  uint64_t v81 = type metadata accessor for ListItemAccessoryView();
  uint64_t v142 = v50;
  uint64_t v82 = v81;
  uint64_t v152 = v81;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = sub_CA1C((uint64_t *)&v151);
  uint64_t v84 = sub_2615C8(v79, v80, v77, (uint64_t)v83);
  __chkstk_darwin(v84);
  (*(void (**)(char *, uint64_t *, uint64_t))(v86 + 16))((char *)&v118 - v85, v83, v82);
  uint64_t v144 = sub_26C470();
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)&v151);
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)v154);
  uint64_t v87 = v126;
  sub_41378(v126);
  long long v88 = v127;
  uint64_t v89 = v148;
  v120(v127, v121, v148);
  uint64_t v90 = v125;
  sub_26851C(v87, v125, type metadata accessor for SizeConstants);
  uint64_t v91 = (uint64_t)v128;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v128, v88, v89);
  uint64_t v92 = v131;
  sub_26851C(v90, v131, type metadata accessor for SizeConstants);
  uint64_t v93 = v129;
  sub_26851C(v90, v129, type metadata accessor for SizeConstants.Environment);
  uint64_t v94 = v93 + *(int *)(v138 + 24);
  double v95 = sub_1AB90(v91, v94);
  uint64_t v96 = sub_26AB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 8))(v94, v96);
  double v97 = 1.0;
  if ((*(void *)&v95 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v97 = v95;
  }
  if ((~*(void *)&v95 & 0x7FF0000000000000) == 0) {
    double v95 = v97;
  }
  sub_268584(v90, type metadata accessor for SizeConstants);
  uint64_t v98 = v124;
  v124((char *)v91, v89);
  uint64_t v99 = *(int *)(v130 + 36);
  *(double *)(v92 + v99) = v95;
  v98(v88, v89);
  sub_268584(v87, type metadata accessor for SizeConstants);
  uint64_t v100 = v133;
  sub_26851C(v92, v133, type metadata accessor for SizeConstants.Environment);
  uint64_t v101 = *(int *)(v132 + 36);
  *(void *)(v100 + v101) = *(void *)(v92 + v99);
  sub_B6DC(v92, &qword_2EE988);
  double v102 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v100 + v101)) * 16.0;
  double v103 = KeyedEncodingContainer.encode<A>(_:forKey:)(*(double *)(v100 + *(int *)(v138 + 28)));
  uint64_t v105 = (uint64_t)v134;
  uint64_t v104 = v135;
  uint64_t v106 = v136;
  (*(void (**)(char *, void, uint64_t))(v135 + 104))(v134, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v136);
  *(double *)uint64_t v154 = v102;
  sub_196FB4(v105, v103);
  uint64_t v107 = v154[0];
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v105, v106);
  uint64_t v108 = v100;
  uint64_t v71 = (uint64_t)v149;
  sub_B6DC(v108, &qword_2EEA48);
LABEL_18:
  uint64_t v109 = v150;
  uint64_t v110 = (uint64_t)v143;
  sub_B678(v150, (uint64_t)v143, &qword_2F88F0);
  uint64_t v111 = v71;
  uint64_t v112 = v71;
  uint64_t v113 = v145;
  sub_B678(v111, v145, &qword_2F88D8);
  uint64_t v114 = v146;
  sub_B678(v110, v146, &qword_2F88F0);
  uint64_t v115 = sub_4A98(&qword_2F89C0);
  sub_B678(v113, v114 + *(int *)(v115 + 48), &qword_2F88D8);
  int v116 = (void *)(v114 + *(int *)(v115 + 64));
  *int v116 = v107;
  v116[1] = 0;
  v116[2] = v144;
  swift_retain();
  sub_B6DC(v112, &qword_2F88D8);
  sub_B6DC(v109, &qword_2F88F0);
  swift_release();
  sub_B6DC(v113, &qword_2F88D8);
  return sub_B6DC(v110, &qword_2F88F0);
}

uint64_t sub_264518()
{
  return sub_268334(&qword_2F8728, &qword_2F8708, (void (*)(void))sub_264554, (void (*)(void))sub_264644);
}

uint64_t sub_264554()
{
  return sub_264674(&qword_2F8730, &qword_2F8720, &qword_2F8710, (void (*)(void))sub_264584);
}

unint64_t sub_264584()
{
  unint64_t result = qword_2F8738;
  if (!qword_2F8738)
  {
    sub_7B0C(&qword_2F8710);
    sub_264928(&qword_2F8740, &qword_2F8748, &qword_2F8750, &qword_2F8758);
    sub_7C18((unint64_t *)&qword_2EE268, &qword_2EE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8738);
  }
  return result;
}

uint64_t sub_264644()
{
  return sub_264674(&qword_2F8770, &qword_2F86F0, &qword_2F86E0, (void (*)(void))sub_26474C);
}

uint64_t sub_264674(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7B0C(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    sub_7C18(&qword_2F8760, &qword_2F8768);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_26474C()
{
  unint64_t result = qword_2F8778;
  if (!qword_2F8778)
  {
    sub_7B0C(&qword_2F86E0);
    sub_2647EC();
    sub_7C18((unint64_t *)&qword_2EE268, &qword_2EE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8778);
  }
  return result;
}

unint64_t sub_2647EC()
{
  unint64_t result = qword_2F8780;
  if (!qword_2F8780)
  {
    sub_7B0C(&qword_2F86D8);
    sub_26488C();
    sub_7C18(&qword_2F87B8, &qword_2F86D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8780);
  }
  return result;
}

unint64_t sub_26488C()
{
  unint64_t result = qword_2F8788;
  if (!qword_2F8788)
  {
    sub_7B0C(&qword_2F8790);
    sub_264928(&qword_2F8798, &qword_2F87A0, &qword_2F87A8, &qword_2F87B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8788);
  }
  return result;
}

uint64_t sub_264928(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    sub_7C18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2649C4()
{
  unint64_t result = qword_2F87C0;
  if (!qword_2F87C0)
  {
    sub_7B0C(&qword_2F86C8);
    sub_264A64();
    sub_7C18(&qword_2F8760, &qword_2F8768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F87C0);
  }
  return result;
}

unint64_t sub_264A64()
{
  unint64_t result = qword_2F87C8;
  if (!qword_2F87C8)
  {
    sub_7B0C(&qword_2F86C0);
    sub_264B04();
    sub_7C18((unint64_t *)&qword_2EE268, &qword_2EE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F87C8);
  }
  return result;
}

unint64_t sub_264B04()
{
  unint64_t result = qword_2F87D0;
  if (!qword_2F87D0)
  {
    sub_7B0C(&qword_2F86B8);
    sub_264BA4();
    sub_7C18(&qword_2F8808, &qword_2F8810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F87D0);
  }
  return result;
}

unint64_t sub_264BA4()
{
  unint64_t result = qword_2F87D8;
  if (!qword_2F87D8)
  {
    sub_7B0C(&qword_2F87E0);
    sub_7C18(&qword_2F87E8, &qword_2F87F0);
    sub_7C18(&qword_2F87F8, &qword_2F8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F87D8);
  }
  return result;
}

uint64_t sub_264C6C(uint64_t a1)
{
  return sub_265094(a1, (uint64_t (*)(uint64_t, uint64_t))sub_260108);
}

uint64_t sub_264C88()
{
  uint64_t v1 = (int *)type metadata accessor for ListItemView();
  uint64_t v2 = (void *)(v0
                + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80)));
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 3));
  if (v2[15]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 12));
  }
  if (v2[20]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 17));
  }
  if (v2[25]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 22));
  }
  if (v2[30]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 27));
  }
  if (v2[35]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 32));
  }
  if (v2[40]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 37));
  }
  if (v2[45]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 42));
  }
  if (v2[50]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 47));
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(v2 + 52));
  uint64_t v3 = (char *)v2 + *(int *)(type metadata accessor for ListItemViewModel() + 40);
  uint64_t v4 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = &v3[*(int *)(v4 + 20)];
    uint64_t v6 = sub_269840();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (char *)v2 + v1[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = &v7[*(int *)(type metadata accessor for SizeConstants.Environment(0) + 24)];
    uint64_t v9 = sub_26AB40();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (char *)v2 + v1[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26A6E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)((char *)v2 + v1[7]), *((unsigned char *)v2 + v1[7] + 8));
  sub_C374(*(void *)((char *)v2 + v1[8]), *((unsigned char *)v2 + v1[8] + 8));
  sub_C374(*(void *)((char *)v2 + v1[9]), *((unsigned char *)v2 + v1[9] + 8));
  sub_C374(*(void *)((char *)v2 + v1[10]), *((unsigned char *)v2 + v1[10] + 8));
  uint64_t v12 = (char *)v2 + v1[11];
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_26AB40();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_26507C(uint64_t a1)
{
  return sub_265094(a1, (uint64_t (*)(uint64_t, uint64_t))sub_25D7A4);
}

uint64_t sub_265094(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ListItemView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_265128()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ListItemView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    char v7 = *((unsigned char *)a2 + 89);
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, (uint64_t)(a2 + 3));
    uint64_t v9 = (unsigned char *)(v4 + 64);
    uint64_t v10 = a2 + 8;
    if (v7)
    {
      unsigned char *v9 = *v10;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(unsigned char *)(v4 + 72) = *((unsigned char *)a2 + 72);
      *(void *)(v4 + 80) = a2[10];
      *(unsigned char *)(v4 + 88) = *((unsigned char *)a2 + 88);
    }
    *(unsigned char *)(v4 + 89) = v7;
    uint64_t v12 = (_OWORD *)(v4 + 96);
    uint64_t v13 = a2 + 12;
    uint64_t v14 = a2[15];
    if (v14)
    {
      uint64_t v15 = a2[16];
      *(void *)(v4 + 120) = v14;
      *(void *)(v4 + 128) = v15;
      (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
    }
    else
    {
      long long v16 = *((_OWORD *)a2 + 7);
      _OWORD *v12 = *v13;
      *(_OWORD *)(v4 + 112) = v16;
      *(void *)(v4 + 128) = a2[16];
    }
    uint64_t v17 = (_OWORD *)(v4 + 136);
    uint64_t v18 = a2 + 17;
    uint64_t v19 = a2[20];
    if (v19)
    {
      uint64_t v20 = a2[21];
      *(void *)(v4 + 160) = v19;
      *(void *)(v4 + 168) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 19);
      *uint64_t v17 = *v18;
      *(_OWORD *)(v4 + 152) = v21;
      *(void *)(v4 + 168) = a2[21];
    }
    uint64_t v22 = (_OWORD *)(v4 + 176);
    uint64_t v23 = a2 + 22;
    uint64_t v24 = a2[25];
    if (v24)
    {
      uint64_t v25 = a2[26];
      *(void *)(v4 + 200) = v24;
      *(void *)(v4 + 208) = v25;
      (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
    }
    else
    {
      long long v26 = *((_OWORD *)a2 + 12);
      *uint64_t v22 = *v23;
      *(_OWORD *)(v4 + 192) = v26;
      *(void *)(v4 + 208) = a2[26];
    }
    uint64_t v27 = (_OWORD *)(v4 + 216);
    uint64_t v28 = a2 + 27;
    uint64_t v29 = a2[30];
    if (v29)
    {
      uint64_t v30 = a2[31];
      *(void *)(v4 + 240) = v29;
      *(void *)(v4 + 248) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
    }
    else
    {
      long long v31 = *(_OWORD *)(a2 + 29);
      _OWORD *v27 = *v28;
      *(_OWORD *)(v4 + 232) = v31;
      *(void *)(v4 + 248) = a2[31];
    }
    uint64_t v32 = (_OWORD *)(v4 + 256);
    uint64_t v33 = a2 + 32;
    uint64_t v34 = a2[35];
    if (v34)
    {
      uint64_t v35 = a2[36];
      *(void *)(v4 + 280) = v34;
      *(void *)(v4 + 288) = v35;
      (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
    }
    else
    {
      long long v36 = *((_OWORD *)a2 + 17);
      *uint64_t v32 = *v33;
      *(_OWORD *)(v4 + 272) = v36;
      *(void *)(v4 + 288) = a2[36];
    }
    uint64_t v37 = (_OWORD *)(v4 + 296);
    uint64_t v38 = a2 + 37;
    uint64_t v39 = a2[40];
    if (v39)
    {
      uint64_t v40 = a2[41];
      *(void *)(v4 + 320) = v39;
      *(void *)(v4 + 328) = v40;
      (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
    }
    else
    {
      long long v41 = *(_OWORD *)(a2 + 39);
      *uint64_t v37 = *v38;
      *(_OWORD *)(v4 + 312) = v41;
      *(void *)(v4 + 328) = a2[41];
    }
    uint64_t v42 = (_OWORD *)(v4 + 336);
    uint64_t v43 = a2 + 42;
    uint64_t v44 = a2[45];
    if (v44)
    {
      uint64_t v45 = a2[46];
      *(void *)(v4 + 360) = v44;
      *(void *)(v4 + 368) = v45;
      (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
    }
    else
    {
      long long v46 = *((_OWORD *)a2 + 22);
      *uint64_t v42 = *v43;
      *(_OWORD *)(v4 + 352) = v46;
      *(void *)(v4 + 368) = a2[46];
    }
    uint64_t v47 = (_OWORD *)(v4 + 376);
    uint64_t v48 = a2 + 47;
    uint64_t v49 = a2[50];
    uint64_t v122 = a3;
    if (v49)
    {
      uint64_t v50 = a2[51];
      *(void *)(v4 + 400) = v49;
      *(void *)(v4 + 408) = v50;
      (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
    }
    else
    {
      long long v51 = *(_OWORD *)(a2 + 49);
      *uint64_t v47 = *v48;
      *(_OWORD *)(v4 + 392) = v51;
      *(void *)(v4 + 408) = a2[51];
    }
    uint64_t v52 = a2[55];
    uint64_t v53 = a2[56];
    *(void *)(v4 + 440) = v52;
    *(void *)(v4 + 448) = v53;
    (**(void (***)(uint64_t, uint64_t))(v52 - 8))(v4 + 416, (uint64_t)(a2 + 52));
    uint64_t v54 = type metadata accessor for ListItemViewModel();
    uint64_t v55 = *(int *)(v54 + 40);
    uint64_t v56 = (void *)(v4 + v55);
    uint64_t v57 = (uint64_t *)((char *)a2 + v55);
    uint64_t v58 = type metadata accessor for CardInfo();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_4A98(&qword_2EDB60);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      void *v56 = *v57;
      uint64_t v61 = *(int *)(v58 + 20);
      uint64_t v119 = (char *)v57 + v61;
      unsigned int v121 = (char *)v56 + v61;
      uint64_t v62 = sub_269840();
      unsigned __int8 v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
      swift_bridgeObjectRetain();
      v63(v121, v119, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    uint64_t v64 = *(int *)(v54 + 44);
    uint64_t v65 = v4 + v64;
    uint64_t v66 = (uint64_t)a2 + v64;
    uint64_t v67 = *(void *)(v66 + 8);
    *(void *)uint64_t v65 = *(void *)v66;
    *(void *)(v65 + 8) = v67;
    uint64_t v68 = *(void *)(v66 + 24);
    *(void *)(v65 + 16) = *(void *)(v66 + 16);
    *(void *)(v65 + 24) = v68;
    uint64_t v69 = *(void *)(v66 + 40);
    *(void *)(v65 + 32) = *(void *)(v66 + 32);
    *(void *)(v65 + 40) = v69;
    uint64_t v70 = *(void *)(v66 + 56);
    *(void *)(v65 + 48) = *(void *)(v66 + 48);
    *(void *)(v65 + 56) = v70;
    uint64_t v71 = *(void *)(v66 + 72);
    *(void *)(v65 + 64) = *(void *)(v66 + 64);
    *(void *)(v65 + 72) = v71;
    uint64_t v72 = *(void *)(v66 + 88);
    *(void *)(v65 + 80) = *(void *)(v66 + 80);
    *(void *)(v65 + 88) = v72;
    uint64_t v73 = *(void *)(v66 + 104);
    *(void *)(v65 + 96) = *(void *)(v66 + 96);
    *(void *)(v65 + 104) = v73;
    uint64_t v74 = *(void *)(v66 + 120);
    *(void *)(v65 + 112) = *(void *)(v66 + 112);
    *(void *)(v65 + 120) = v74;
    uint64_t v75 = *(void *)(v66 + 136);
    *(void *)(v65 + 128) = *(void *)(v66 + 128);
    *(void *)(v65 + 136) = v75;
    *(unsigned char *)(v65 + 144) = *(unsigned char *)(v66 + 144);
    uint64_t v76 = v122[5];
    uint64_t v120 = (_WORD *)(v4 + v76);
    uint64_t v77 = (_WORD *)((char *)a2 + v76);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v120 = *v77;
      uint64_t v78 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v79 = v78[6];
      uint64_t v80 = (char *)v120 + v79;
      uint64_t v81 = (char *)v77 + v79;
      uint64_t v82 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
      *(void *)((char *)v120 + v78[7]) = *(void *)((char *)v77 + v78[7]);
      uint64_t v83 = v78[8];
      uint64_t v84 = (char *)v120 + v83;
      uint64_t v85 = (char *)v77 + v83;
      v84[2] = v85[2];
      *(_WORD *)uint64_t v84 = *(_WORD *)v85;
    }
    else
    {
      *(void *)uint64_t v120 = *(void *)v77;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v86 = v122[6];
    uint64_t v87 = (void *)(v4 + v86);
    long long v88 = (uint64_t *)((char *)a2 + v86);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v89 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
    }
    else
    {
      void *v87 = *v88;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = v122[7];
    uint64_t v91 = v4 + v90;
    uint64_t v92 = (uint64_t)a2 + v90;
    uint64_t v93 = *(void *)v92;
    char v94 = *(unsigned char *)(v92 + 8);
    sub_10E0C(*(void *)v92, v94);
    *(void *)uint64_t v91 = v93;
    *(unsigned char *)(v91 + 8) = v94;
    uint64_t v95 = v122[8];
    uint64_t v96 = v4 + v95;
    uint64_t v97 = (uint64_t)a2 + v95;
    uint64_t v98 = *(void *)v97;
    char v99 = *(unsigned char *)(v97 + 8);
    sub_10E0C(*(void *)v97, v99);
    *(void *)uint64_t v96 = v98;
    *(unsigned char *)(v96 + 8) = v99;
    uint64_t v100 = v122[9];
    uint64_t v101 = v4 + v100;
    uint64_t v102 = (uint64_t)a2 + v100;
    uint64_t v103 = *(void *)v102;
    char v104 = *(unsigned char *)(v102 + 8);
    sub_10E0C(*(void *)v102, v104);
    *(void *)uint64_t v101 = v103;
    *(unsigned char *)(v101 + 8) = v104;
    uint64_t v105 = v122[10];
    uint64_t v106 = v4 + v105;
    uint64_t v107 = (uint64_t)a2 + v105;
    uint64_t v108 = *(void *)v107;
    char v109 = *(unsigned char *)(v107 + 8);
    sub_10E0C(*(void *)v107, v109);
    *(void *)uint64_t v106 = v108;
    *(unsigned char *)(v106 + 8) = v109;
    uint64_t v110 = v122[11];
    uint64_t v111 = (void *)(v4 + v110);
    uint64_t v112 = (uint64_t *)((char *)a2 + v110);
    sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v113 = sub_26AB40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
    }
    else
    {
      *uint64_t v111 = *v112;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v114 = v122[12];
    uint64_t v115 = (void *)(v4 + v114);
    int v116 = (uint64_t *)((char *)a2 + v114);
    uint64_t v117 = v116[1];
    *uint64_t v115 = *v116;
    v115[1] = v117;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ListItemView(void *a1, int *a2)
{
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 3));
  if (a1[15]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 12));
  }
  if (a1[20]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 17));
  }
  if (a1[25]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 22));
  }
  if (a1[30]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 27));
  }
  if (a1[35]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 32));
  }
  if (a1[40]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 37));
  }
  if (a1[45]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 42));
  }
  if (a1[50]) {
    _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 47));
  }
  _s7BooksUI13AnyPagedFrameVwxx_0((uint64_t)(a1 + 52));
  uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for ListItemViewModel() + 40);
  uint64_t v5 = type metadata accessor for CardInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = &v4[*(int *)(v5 + 20)];
    uint64_t v7 = sub_269840();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v8 = (char *)a1 + a2[5];
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = &v8[*(int *)(type metadata accessor for SizeConstants.Environment(0) + 24)];
    uint64_t v10 = sub_26AB40();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = (char *)a1 + a2[6];
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_26A6E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  sub_C374(*(void *)((char *)a1 + a2[7]), *((unsigned char *)a1 + a2[7] + 8));
  sub_C374(*(void *)((char *)a1 + a2[8]), *((unsigned char *)a1 + a2[8] + 8));
  sub_C374(*(void *)((char *)a1 + a2[9]), *((unsigned char *)a1 + a2[9] + 8));
  sub_C374(*(void *)((char *)a1 + a2[10]), *((unsigned char *)a1 + a2[10] + 8));
  uint64_t v13 = (char *)a1 + a2[11];
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_26AB40();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ListItemView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 89);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, a2 + 24);
  long long v8 = (unsigned char *)(a1 + 64);
  uint64_t v9 = (unsigned char *)(a2 + 64);
  if (v6)
  {
    *long long v8 = *v9;
  }
  else
  {
    *(void *)long long v8 = *(void *)v9;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  *(unsigned char *)(a1 + 89) = v6;
  uint64_t v10 = (_OWORD *)(a1 + 96);
  uint64_t v11 = (_OWORD *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 120);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v12;
    *(void *)(a1 + 128) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 112);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 112) = v14;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
  }
  uint64_t v15 = (_OWORD *)(a1 + 136);
  long long v16 = (_OWORD *)(a2 + 136);
  uint64_t v17 = *(void *)(a2 + 160);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v17;
    *(void *)(a1 + 168) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 152);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 152) = v19;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  uint64_t v20 = (_OWORD *)(a1 + 176);
  long long v21 = (_OWORD *)(a2 + 176);
  uint64_t v22 = *(void *)(a2 + 200);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v22;
    *(void *)(a1 + 208) = v23;
    (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 192);
    *uint64_t v20 = *v21;
    *(_OWORD *)(a1 + 192) = v24;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
  }
  uint64_t v25 = (_OWORD *)(a1 + 216);
  long long v26 = (_OWORD *)(a2 + 216);
  uint64_t v27 = *(void *)(a2 + 240);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v27;
    *(void *)(a1 + 248) = v28;
    (**(void (***)(_OWORD *, _OWORD *))(v27 - 8))(v25, v26);
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 232);
    _OWORD *v25 = *v26;
    *(_OWORD *)(a1 + 232) = v29;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  uint64_t v30 = (_OWORD *)(a1 + 256);
  long long v31 = (_OWORD *)(a2 + 256);
  uint64_t v32 = *(void *)(a2 + 280);
  if (v32)
  {
    uint64_t v33 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = v32;
    *(void *)(a1 + 288) = v33;
    (**(void (***)(_OWORD *, _OWORD *))(v32 - 8))(v30, v31);
  }
  else
  {
    long long v34 = *(_OWORD *)(a2 + 272);
    *uint64_t v30 = *v31;
    *(_OWORD *)(a1 + 272) = v34;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
  }
  uint64_t v35 = (_OWORD *)(a1 + 296);
  long long v36 = (_OWORD *)(a2 + 296);
  uint64_t v37 = *(void *)(a2 + 320);
  if (v37)
  {
    uint64_t v38 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v37;
    *(void *)(a1 + 328) = v38;
    (**(void (***)(_OWORD *, _OWORD *))(v37 - 8))(v35, v36);
  }
  else
  {
    long long v39 = *(_OWORD *)(a2 + 312);
    _OWORD *v35 = *v36;
    *(_OWORD *)(a1 + 312) = v39;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
  }
  uint64_t v40 = (_OWORD *)(a1 + 336);
  long long v41 = (_OWORD *)(a2 + 336);
  uint64_t v42 = *(void *)(a2 + 360);
  if (v42)
  {
    uint64_t v43 = *(void *)(a2 + 368);
    *(void *)(a1 + 360) = v42;
    *(void *)(a1 + 368) = v43;
    (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
  }
  else
  {
    long long v44 = *(_OWORD *)(a2 + 352);
    *uint64_t v40 = *v41;
    *(_OWORD *)(a1 + 352) = v44;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
  }
  uint64_t v45 = (_OWORD *)(a1 + 376);
  long long v46 = (_OWORD *)(a2 + 376);
  uint64_t v47 = *(void *)(a2 + 400);
  uint64_t v120 = a3;
  if (v47)
  {
    uint64_t v48 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = v47;
    *(void *)(a1 + 408) = v48;
    (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
  }
  else
  {
    long long v49 = *(_OWORD *)(a2 + 392);
    _OWORD *v45 = *v46;
    *(_OWORD *)(a1 + 392) = v49;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
  }
  uint64_t v50 = *(void *)(a2 + 440);
  uint64_t v51 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = v50;
  *(void *)(a1 + 448) = v51;
  (**(void (***)(uint64_t, uint64_t))(v50 - 8))(a1 + 416, a2 + 416);
  uint64_t v52 = type metadata accessor for ListItemViewModel();
  uint64_t v53 = *(int *)(v52 + 40);
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  uint64_t v56 = type metadata accessor for CardInfo();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_4A98(&qword_2EDB60);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    void *v54 = *v55;
    uint64_t v59 = *(int *)(v56 + 20);
    uint64_t v117 = (char *)v55 + v59;
    uint64_t v119 = (char *)v54 + v59;
    uint64_t v60 = sub_269840();
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
    swift_bridgeObjectRetain();
    v61(v119, v117, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v62 = *(int *)(v52 + 44);
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  uint64_t v65 = *(void *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v65;
  uint64_t v66 = *(void *)(v64 + 24);
  *(void *)(v63 + 16) = *(void *)(v64 + 16);
  *(void *)(v63 + 24) = v66;
  uint64_t v67 = *(void *)(v64 + 40);
  *(void *)(v63 + 32) = *(void *)(v64 + 32);
  *(void *)(v63 + 40) = v67;
  uint64_t v68 = *(void *)(v64 + 56);
  *(void *)(v63 + 48) = *(void *)(v64 + 48);
  *(void *)(v63 + 56) = v68;
  uint64_t v69 = *(void *)(v64 + 72);
  *(void *)(v63 + 64) = *(void *)(v64 + 64);
  *(void *)(v63 + 72) = v69;
  uint64_t v70 = *(void *)(v64 + 88);
  *(void *)(v63 + 80) = *(void *)(v64 + 80);
  *(void *)(v63 + 88) = v70;
  uint64_t v71 = *(void *)(v64 + 104);
  *(void *)(v63 + 96) = *(void *)(v64 + 96);
  *(void *)(v63 + 104) = v71;
  uint64_t v72 = *(void *)(v64 + 120);
  *(void *)(v63 + 112) = *(void *)(v64 + 112);
  *(void *)(v63 + 120) = v72;
  uint64_t v73 = *(void *)(v64 + 136);
  *(void *)(v63 + 128) = *(void *)(v64 + 128);
  *(void *)(v63 + 136) = v73;
  *(unsigned char *)(v63 + 144) = *(unsigned char *)(v64 + 144);
  uint64_t v74 = v120[5];
  uint64_t v118 = (_WORD *)(a1 + v74);
  uint64_t v75 = (_WORD *)(a2 + v74);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v118 = *v75;
    uint64_t v76 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v77 = v76[6];
    uint64_t v78 = (char *)v118 + v77;
    uint64_t v79 = (char *)v75 + v77;
    uint64_t v80 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
    *(void *)((char *)v118 + v76[7]) = *(void *)((char *)v75 + v76[7]);
    uint64_t v81 = v76[8];
    uint64_t v82 = (char *)v118 + v81;
    uint64_t v83 = (char *)v75 + v81;
    v82[2] = v83[2];
    *(_WORD *)uint64_t v82 = *(_WORD *)v83;
  }
  else
  {
    *(void *)uint64_t v118 = *(void *)v75;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v84 = v120[6];
  uint64_t v85 = (void *)(a1 + v84);
  uint64_t v86 = (void *)(a2 + v84);
  sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v87 = sub_26A6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
  }
  else
  {
    *uint64_t v85 = *v86;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = v120[7];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = *(void *)v90;
  char v92 = *(unsigned char *)(v90 + 8);
  sub_10E0C(*(void *)v90, v92);
  *(void *)uint64_t v89 = v91;
  *(unsigned char *)(v89 + 8) = v92;
  uint64_t v93 = v120[8];
  uint64_t v94 = a1 + v93;
  uint64_t v95 = a2 + v93;
  uint64_t v96 = *(void *)v95;
  char v97 = *(unsigned char *)(v95 + 8);
  sub_10E0C(*(void *)v95, v97);
  *(void *)uint64_t v94 = v96;
  *(unsigned char *)(v94 + 8) = v97;
  uint64_t v98 = v120[9];
  uint64_t v99 = a1 + v98;
  uint64_t v100 = a2 + v98;
  uint64_t v101 = *(void *)v100;
  char v102 = *(unsigned char *)(v100 + 8);
  sub_10E0C(*(void *)v100, v102);
  *(void *)uint64_t v99 = v101;
  *(unsigned char *)(v99 + 8) = v102;
  uint64_t v103 = v120[10];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = a2 + v103;
  uint64_t v106 = *(void *)v105;
  char v107 = *(unsigned char *)(v105 + 8);
  sub_10E0C(*(void *)v105, v107);
  *(void *)uint64_t v104 = v106;
  *(unsigned char *)(v104 + 8) = v107;
  uint64_t v108 = v120[11];
  char v109 = (void *)(a1 + v108);
  uint64_t v110 = (void *)(a2 + v108);
  sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v111 = sub_26AB40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
  }
  else
  {
    *char v109 = *v110;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = v120[12];
  uint64_t v113 = (void *)(a1 + v112);
  uint64_t v114 = (void *)(a2 + v112);
  uint64_t v115 = v114[1];
  *uint64_t v113 = *v114;
  v113[1] = v115;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ListItemView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    char v7 = *(unsigned char *)(a2 + 89);
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, a2 + 24);
    uint64_t v9 = (unsigned char *)(a1 + 64);
    uint64_t v10 = (unsigned char *)(a2 + 64);
    if (v7)
    {
      unsigned char *v9 = *v10;
    }
    else
    {
      uint64_t v11 = *(void *)v10;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)uint64_t v9 = v11;
      uint64_t v12 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v12;
    }
    *(unsigned char *)(a1 + 89) = v7;
  }
  uint64_t v13 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v13)
    {
      sub_16D58((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
      goto LABEL_13;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  else if (v13)
  {
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 96, a2 + 96);
    goto LABEL_13;
  }
  long long v14 = *(_OWORD *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v14;
  *(_OWORD *)(a1 + 112) = v15;
LABEL_13:
  uint64_t v16 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v16)
    {
      sub_16D58((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_20;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  else if (v16)
  {
    *(void *)(a1 + 160) = v16;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 136, a2 + 136);
    goto LABEL_20;
  }
  long long v17 = *(_OWORD *)(a2 + 136);
  long long v18 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v17;
  *(_OWORD *)(a1 + 152) = v18;
LABEL_20:
  uint64_t v19 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v19)
    {
      sub_16D58((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
      goto LABEL_27;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  else if (v19)
  {
    *(void *)(a1 + 200) = v19;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 176, a2 + 176);
    goto LABEL_27;
  }
  long long v20 = *(_OWORD *)(a2 + 176);
  long long v21 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 192) = v21;
LABEL_27:
  uint64_t v22 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v22)
    {
      sub_16D58((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
      goto LABEL_34;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  else if (v22)
  {
    *(void *)(a1 + 240) = v22;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 216, a2 + 216);
    goto LABEL_34;
  }
  long long v23 = *(_OWORD *)(a2 + 216);
  long long v24 = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 216) = v23;
  *(_OWORD *)(a1 + 232) = v24;
LABEL_34:
  uint64_t v25 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280))
  {
    if (v25)
    {
      sub_16D58((uint64_t *)(a1 + 256), (uint64_t *)(a2 + 256));
      goto LABEL_41;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  else if (v25)
  {
    *(void *)(a1 + 280) = v25;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 256, a2 + 256);
    goto LABEL_41;
  }
  long long v26 = *(_OWORD *)(a2 + 256);
  long long v27 = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(_OWORD *)(a1 + 256) = v26;
  *(_OWORD *)(a1 + 272) = v27;
LABEL_41:
  uint64_t v28 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v28)
    {
      sub_16D58((uint64_t *)(a1 + 296), (uint64_t *)(a2 + 296));
      goto LABEL_48;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  else if (v28)
  {
    *(void *)(a1 + 320) = v28;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 296, a2 + 296);
    goto LABEL_48;
  }
  long long v29 = *(_OWORD *)(a2 + 296);
  long long v30 = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 296) = v29;
  *(_OWORD *)(a1 + 312) = v30;
LABEL_48:
  uint64_t v31 = *(void *)(a2 + 360);
  if (*(void *)(a1 + 360))
  {
    if (v31)
    {
      sub_16D58((uint64_t *)(a1 + 336), (uint64_t *)(a2 + 336));
      goto LABEL_55;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  else if (v31)
  {
    *(void *)(a1 + 360) = v31;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    (**(void (***)(uint64_t, uint64_t))(v31 - 8))(a1 + 336, a2 + 336);
    goto LABEL_55;
  }
  long long v32 = *(_OWORD *)(a2 + 336);
  long long v33 = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(_OWORD *)(a1 + 336) = v32;
  *(_OWORD *)(a1 + 352) = v33;
LABEL_55:
  uint64_t v34 = *(void *)(a2 + 400);
  uint64_t v114 = a3;
  if (*(void *)(a1 + 400))
  {
    if (v34)
    {
      sub_16D58((uint64_t *)(a1 + 376), (uint64_t *)(a2 + 376));
      goto LABEL_62;
    }
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  else if (v34)
  {
    *(void *)(a1 + 400) = v34;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    (**(void (***)(uint64_t, uint64_t))(v34 - 8))(a1 + 376, a2 + 376);
    goto LABEL_62;
  }
  long long v35 = *(_OWORD *)(a2 + 376);
  long long v36 = *(_OWORD *)(a2 + 392);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(_OWORD *)(a1 + 376) = v35;
  *(_OWORD *)(a1 + 392) = v36;
LABEL_62:
  sub_16D58((uint64_t *)(a1 + 416), (uint64_t *)(a2 + 416));
  uint64_t v37 = type metadata accessor for ListItemViewModel();
  uint64_t v38 = *(int *)(v37 + 40);
  long long v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  uint64_t v41 = type metadata accessor for CardInfo();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (v44)
  {
    long long v46 = v114;
    if (!v45)
    {
      *long long v39 = *v40;
      uint64_t v47 = *(int *)(v41 + 20);
      uint64_t v112 = (char *)v40 + v47;
      uint64_t v113 = (char *)v39 + v47;
      uint64_t v48 = sub_269840();
      long long v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v50 = v48;
      long long v46 = v114;
      v49(v113, v112, v50);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  long long v46 = v114;
  if (v45)
  {
    sub_268584((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for CardInfo);
LABEL_67:
    uint64_t v51 = sub_4A98(&qword_2EDB60);
    memcpy(v39, v40, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_68;
  }
  *long long v39 = *v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v108 = *(int *)(v41 + 20);
  char v109 = (char *)v39 + v108;
  uint64_t v110 = (char *)v40 + v108;
  uint64_t v111 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 24))(v109, v110, v111);
LABEL_68:
  uint64_t v52 = *(int *)(v37 + 44);
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(void *)uint64_t v53 = *(void *)(a2 + v52);
  *(void *)(v53 + 8) = *(void *)(a2 + v52 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 16) = *(void *)(v54 + 16);
  *(void *)(v53 + 24) = *(void *)(v54 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  *(void *)(v53 + 40) = *(void *)(v54 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 48) = *(void *)(v54 + 48);
  *(void *)(v53 + 56) = *(void *)(v54 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 64) = *(void *)(v54 + 64);
  *(void *)(v53 + 72) = *(void *)(v54 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 80) = *(void *)(v54 + 80);
  *(void *)(v53 + 88) = *(void *)(v54 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 96) = *(void *)(v54 + 96);
  *(void *)(v53 + 104) = *(void *)(v54 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 112) = *(void *)(v54 + 112);
  *(void *)(v53 + 120) = *(void *)(v54 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 128) = *(void *)(v54 + 128);
  *(void *)(v53 + 136) = *(void *)(v54 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v53 + 144) = *(unsigned char *)(v54 + 144);
  if (a1 != a2)
  {
    uint64_t v55 = v46[5];
    uint64_t v56 = (unsigned char *)(a1 + v55);
    uint64_t v57 = (unsigned char *)(a2 + v55);
    sub_B6DC(a1 + v55, &qword_2EB708);
    sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v56 = *v57;
      v56[1] = v57[1];
      uint64_t v58 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v59 = v58[6];
      uint64_t v60 = &v56[v59];
      uint64_t v61 = &v57[v59];
      uint64_t v62 = sub_26AB40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      *(void *)&v56[v58[7]] = *(void *)&v57[v58[7]];
      uint64_t v63 = v58[8];
      uint64_t v64 = &v56[v63];
      uint64_t v65 = &v57[v63];
      char v66 = v65[2];
      *(_WORD *)uint64_t v64 = *(_WORD *)v65;
      _OWORD v64[2] = v66;
    }
    else
    {
      *(void *)uint64_t v56 = *(void *)v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v46[6];
    uint64_t v68 = (void *)(a1 + v67);
    uint64_t v69 = (void *)(a2 + v67);
    sub_B6DC(a1 + v67, &qword_2EA968);
    sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = sub_26A6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
    }
    else
    {
      *uint64_t v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v71 = v46[7];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  uint64_t v74 = *(void *)v73;
  char v75 = *(unsigned char *)(v73 + 8);
  sub_10E0C(*(void *)v73, v75);
  uint64_t v76 = *(void *)v72;
  char v77 = *(unsigned char *)(v72 + 8);
  *(void *)uint64_t v72 = v74;
  *(unsigned char *)(v72 + 8) = v75;
  sub_C374(v76, v77);
  uint64_t v78 = v46[8];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = *(void *)v80;
  char v82 = *(unsigned char *)(v80 + 8);
  sub_10E0C(*(void *)v80, v82);
  uint64_t v83 = *(void *)v79;
  char v84 = *(unsigned char *)(v79 + 8);
  *(void *)uint64_t v79 = v81;
  *(unsigned char *)(v79 + 8) = v82;
  sub_C374(v83, v84);
  uint64_t v85 = v46[9];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = a2 + v85;
  uint64_t v88 = *(void *)v87;
  char v89 = *(unsigned char *)(v87 + 8);
  sub_10E0C(*(void *)v87, v89);
  uint64_t v90 = *(void *)v86;
  char v91 = *(unsigned char *)(v86 + 8);
  *(void *)uint64_t v86 = v88;
  *(unsigned char *)(v86 + 8) = v89;
  sub_C374(v90, v91);
  uint64_t v92 = v46[10];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  uint64_t v95 = *(void *)v94;
  char v96 = *(unsigned char *)(v94 + 8);
  sub_10E0C(*(void *)v94, v96);
  uint64_t v97 = *(void *)v93;
  char v98 = *(unsigned char *)(v93 + 8);
  *(void *)uint64_t v93 = v95;
  *(unsigned char *)(v93 + 8) = v96;
  sub_C374(v97, v98);
  if (a1 != a2)
  {
    uint64_t v99 = v46[11];
    uint64_t v100 = (void *)(a1 + v99);
    uint64_t v101 = (void *)(a2 + v99);
    sub_B6DC(a1 + v99, &qword_2EBC60);
    sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v102 = sub_26AB40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
    }
    else
    {
      *uint64_t v100 = *v101;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v103 = v46[12];
  uint64_t v104 = (void *)(a1 + v103);
  uint64_t v105 = (void *)(a2 + v103);
  uint64_t v106 = v105[1];
  *uint64_t v104 = *v105;
  v104[1] = v106;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ListItemView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  memcpy((void *)(a1 + 96), (const void *)(a2 + 96), 0x118uLL);
  long long v6 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v6;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v7 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v7;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v8 = type metadata accessor for ListItemViewModel();
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for CardInfo();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_4A98(&qword_2EDB60);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *uint64_t v10 = *v11;
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = (char *)v10 + v15;
    long long v17 = (char *)v11 + v15;
    uint64_t v18 = sub_269840();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v19 = *(int *)(v8 + 44);
  uint64_t v20 = a1 + v19;
  long long v21 = (long long *)(a2 + v19);
  long long v22 = v21[7];
  *(_OWORD *)(v20 + 96) = v21[6];
  *(_OWORD *)(v20 + 112) = v22;
  *(_OWORD *)(v20 + 128) = v21[8];
  *(unsigned char *)(v20 + 144) = *((unsigned char *)v21 + 144);
  long long v23 = v21[3];
  *(_OWORD *)(v20 + 32) = v21[2];
  *(_OWORD *)(v20 + 48) = v23;
  long long v24 = v21[5];
  *(_OWORD *)(v20 + 64) = v21[4];
  *(_OWORD *)(v20 + 80) = v24;
  long long v25 = *v21;
  long long v26 = v21[1];
  uint64_t v27 = a3[5];
  uint64_t v28 = (_WORD *)(a1 + v27);
  long long v29 = (_WORD *)(a2 + v27);
  *(_OWORD *)uint64_t v20 = v25;
  *(_OWORD *)(v20 + 16) = v26;
  uint64_t v30 = sub_4A98(&qword_2EB708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v28 = *v29;
    uint64_t v31 = (int *)type metadata accessor for SizeConstants.Environment(0);
    uint64_t v32 = v31[6];
    long long v33 = (char *)v28 + v32;
    uint64_t v34 = (char *)v29 + v32;
    uint64_t v35 = sub_26AB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    *(void *)((char *)v28 + v31[7]) = *(void *)((char *)v29 + v31[7]);
    uint64_t v36 = v31[8];
    uint64_t v37 = (char *)v28 + v36;
    uint64_t v38 = (char *)v29 + v36;
    v37[2] = v38[2];
    *(_WORD *)uint64_t v37 = *(_WORD *)v38;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  uint64_t v39 = a3[6];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_4A98(&qword_2EA968);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = sub_26A6E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  uint64_t v44 = a3[7];
  uint64_t v45 = a3[8];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  uint64_t v48 = a1 + v45;
  uint64_t v49 = a2 + v45;
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  uint64_t v50 = a3[9];
  uint64_t v51 = a3[10];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  uint64_t v54 = a1 + v51;
  uint64_t v55 = a2 + v51;
  *(void *)uint64_t v54 = *(void *)v55;
  *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
  uint64_t v56 = a3[11];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (const void *)(a2 + v56);
  uint64_t v59 = sub_4A98(&qword_2EBC60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v60 = sub_26AB40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 32))(v57, v58, v60);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for ListItemView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    sub_3E544(a1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  if (*(void *)(a1 + 120)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 96);
  }
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  if (*(void *)(a1 + 160)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 136);
  }
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  if (*(void *)(a1 + 200)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 176);
  }
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  if (*(void *)(a1 + 240)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 216);
  }
  long long v9 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v9;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  if (*(void *)(a1 + 280)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 256);
  }
  long long v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  if (*(void *)(a1 + 320)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 296);
  }
  long long v11 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v11;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  if (*(void *)(a1 + 360)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 336);
  }
  uint64_t v93 = a3;
  long long v12 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v12;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  if (*(void *)(a1 + 400)) {
    _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 376);
  }
  long long v13 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v13;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  _s7BooksUI13AnyPagedFrameVwxx_0(a1 + 416);
  long long v14 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v14;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v15 = type metadata accessor for ListItemViewModel();
  uint64_t v16 = *(int *)(v15 + 40);
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for CardInfo();
  uint64_t v20 = *(void *)(v19 - 8);
  long long v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    long long v24 = v93;
    if (!v23)
    {
      *long long v17 = *v18;
      uint64_t v25 = *(int *)(v19 + 20);
      long long v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = sub_269840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  long long v24 = v93;
  if (v23)
  {
    sub_268584((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CardInfo);
LABEL_24:
    uint64_t v29 = sub_4A98(&qword_2EDB60);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  *long long v17 = *v18;
  swift_bridgeObjectRelease();
  uint64_t v89 = *(int *)(v19 + 20);
  uint64_t v90 = (char *)v17 + v89;
  char v91 = (char *)v18 + v89;
  uint64_t v92 = sub_269840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
LABEL_25:
  uint64_t v30 = *(int *)(v15 + 44);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(a2 + v30 + 8);
  *(void *)uint64_t v31 = *(void *)(a2 + v30);
  *(void *)(v31 + 8) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v32 + 24);
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  *(void *)(v31 + 24) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v32 + 40);
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  *(void *)(v31 + 40) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v32 + 56);
  *(void *)(v31 + 48) = *(void *)(v32 + 48);
  *(void *)(v31 + 56) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v32 + 72);
  *(void *)(v31 + 64) = *(void *)(v32 + 64);
  *(void *)(v31 + 72) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v32 + 88);
  *(void *)(v31 + 80) = *(void *)(v32 + 80);
  *(void *)(v31 + 88) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v32 + 104);
  *(void *)(v31 + 96) = *(void *)(v32 + 96);
  *(void *)(v31 + 104) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v32 + 120);
  *(void *)(v31 + 112) = *(void *)(v32 + 112);
  *(void *)(v31 + 120) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v32 + 136);
  *(void *)(v31 + 128) = *(void *)(v32 + 128);
  *(void *)(v31 + 136) = v41;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v31 + 144) = *(unsigned char *)(v32 + 144);
  if (a1 != a2)
  {
    uint64_t v42 = v24[5];
    uint64_t v43 = (_WORD *)(a1 + v42);
    uint64_t v44 = (_WORD *)(a2 + v42);
    sub_B6DC(a1 + v42, &qword_2EB708);
    uint64_t v45 = sub_4A98(&qword_2EB708);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _WORD *v43 = *v44;
      uint64_t v46 = (int *)type metadata accessor for SizeConstants.Environment(0);
      uint64_t v47 = v46[6];
      uint64_t v48 = (char *)v43 + v47;
      uint64_t v49 = (char *)v44 + v47;
      uint64_t v50 = sub_26AB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      *(void *)((char *)v43 + v46[7]) = *(void *)((char *)v44 + v46[7]);
      uint64_t v51 = v46[8];
      uint64_t v52 = (char *)v43 + v51;
      uint64_t v53 = (char *)v44 + v51;
      v52[2] = v53[2];
      *(_WORD *)uint64_t v52 = *(_WORD *)v53;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    uint64_t v54 = v24[6];
    uint64_t v55 = (void *)(a1 + v54);
    uint64_t v56 = (const void *)(a2 + v54);
    sub_B6DC(a1 + v54, &qword_2EA968);
    uint64_t v57 = sub_4A98(&qword_2EA968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = sub_26A6E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v58 - 8) + 32))(v55, v56, v58);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
  }
  uint64_t v59 = v24[7];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v62 = *v61;
  LOBYTE(v61) = *((unsigned char *)v61 + 8);
  uint64_t v63 = *(void *)v60;
  char v64 = *(unsigned char *)(v60 + 8);
  *(void *)uint64_t v60 = v62;
  *(unsigned char *)(v60 + 8) = (_BYTE)v61;
  sub_C374(v63, v64);
  uint64_t v65 = v24[8];
  uint64_t v66 = a1 + v65;
  uint64_t v67 = (uint64_t *)(a2 + v65);
  uint64_t v68 = *v67;
  LOBYTE(v67) = *((unsigned char *)v67 + 8);
  uint64_t v69 = *(void *)v66;
  char v70 = *(unsigned char *)(v66 + 8);
  *(void *)uint64_t v66 = v68;
  *(unsigned char *)(v66 + 8) = (_BYTE)v67;
  sub_C374(v69, v70);
  uint64_t v71 = v24[9];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = (uint64_t *)(a2 + v71);
  uint64_t v74 = *v73;
  LOBYTE(v73) = *((unsigned char *)v73 + 8);
  uint64_t v75 = *(void *)v72;
  char v76 = *(unsigned char *)(v72 + 8);
  *(void *)uint64_t v72 = v74;
  *(unsigned char *)(v72 + 8) = (_BYTE)v73;
  sub_C374(v75, v76);
  uint64_t v77 = v24[10];
  uint64_t v78 = a1 + v77;
  uint64_t v79 = (uint64_t *)(a2 + v77);
  uint64_t v80 = *v79;
  LOBYTE(v79) = *((unsigned char *)v79 + 8);
  uint64_t v81 = *(void *)v78;
  char v82 = *(unsigned char *)(v78 + 8);
  *(void *)uint64_t v78 = v80;
  *(unsigned char *)(v78 + 8) = (_BYTE)v79;
  sub_C374(v81, v82);
  if (a1 != a2)
  {
    uint64_t v83 = v24[11];
    char v84 = (void *)(a1 + v83);
    uint64_t v85 = (const void *)(a2 + v83);
    sub_B6DC(a1 + v83, &qword_2EBC60);
    uint64_t v86 = sub_4A98(&qword_2EBC60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v87 = sub_26AB40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 32))(v84, v85, v87);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
  }
  *(_OWORD *)(a1 + v24[12]) = *(_OWORD *)(a2 + v24[12]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_267D60);
}

uint64_t sub_267D60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ListItemViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4A98(&qword_2EB718);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4A98(&qword_2EAB18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4A98(&qword_2ED0D8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[12]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for ListItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_267F2C);
}

uint64_t sub_267F2C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ListItemViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_4A98(&qword_2EB718);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_4A98(&qword_2EAB18);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_4A98(&qword_2ED0D8);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[12]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[11];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2680E0()
{
  type metadata accessor for ListItemViewModel();
  if (v0 <= 0x3F)
  {
    sub_268290(319, (unint64_t *)&qword_2EB788, (void (*)(uint64_t))type metadata accessor for SizeConstants);
    if (v1 <= 0x3F)
    {
      sub_268290(319, (unint64_t *)&qword_2EAB98, (void (*)(uint64_t))type metadata accessor for ColorConstants);
      if (v2 <= 0x3F)
      {
        sub_268290(319, (unint64_t *)&qword_2ED148, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_268290(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26A740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2682E4()
{
  return sub_268334(&qword_2F88C8, &qword_2F88D0, (void (*)(void))sub_264518, (void (*)(void))sub_2649C4);
}

uint64_t sub_268334(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_7B0C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2683D4()
{
  unint64_t result = qword_2F8930;
  if (!qword_2F8930)
  {
    sub_7B0C(&qword_2F8928);
    sub_268450();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8930);
  }
  return result;
}

unint64_t sub_268450()
{
  unint64_t result = qword_2F8938;
  if (!qword_2F8938)
  {
    sub_7B0C(&qword_2F8940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8938);
  }
  return result;
}

unint64_t sub_2684C4()
{
  unint64_t result = qword_2F8948;
  if (!qword_2F8948)
  {
    type metadata accessor for ListItemThumbnailView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2F8948);
  }
  return result;
}

uint64_t sub_26851C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_268584(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2685E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,double a31,char a32)
{
  int v36 = a8;
  v34[1] = a6;
  uint64_t v35 = a5;
  uint64_t v28 = sub_4A98(&qword_2F0678);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4A98(&qword_2F0680);
  __chkstk_darwin(v31 - 8);
  sub_B678(a1, (uint64_t)v34 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2F0680);
  uint64_t result = sub_B678(a2, (uint64_t)v30, &qword_2F0678);
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  if ((a4 & 1) == 0)
  {
    if ((~a3 & 0x7FF0000000000000) != 0)
    {
      if (*(double *)&a3 > -9.22337204e18)
      {
        if (*(double *)&a3 < 9.22337204e18) {
          goto LABEL_5;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_5:
  sub_26891C(a17, a18);
  uint64_t result = swift_bridgeObjectRelease();
  if (a32)
  {
LABEL_9:
    sub_269BD0();
    sub_B6DC(v37, &qword_2F0678);
    return sub_B6DC(v38, &qword_2F0680);
  }
  if ((~*(void *)&a31 & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  if (a31 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a31 < 9.22337204e18) {
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_26891C(uint64_t result, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v3 = result;
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if (!((a2 & 0x2000000000000000) != 0 ? v4 : result & 0xFFFFFFFFFFFFLL)) {
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_26DAE0();
      }
      uint64_t v8 = (uint64_t)sub_2691D0(v7, v5, 10);
      char v10 = v9 & 1;
      goto LABEL_46;
    }
    v24[0] = result;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v4) {
        goto LABEL_58;
      }
      if (v4 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v8 = (BYTE1(result) - 48);
      if (v4 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v8 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v11 = v4 - 3;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_33;
            }
            uint64_t v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_33;
            }
            uint64_t v8 = v14 + v13;
            if (__OFADD__(v14, v13)) {
              goto LABEL_33;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_46;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v4)
        {
          if (v4 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v4 == 2)
            {
              char v10 = 0;
              uint64_t v8 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_46;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v8 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v19 = v4 - 3;
              if (!v19) {
                goto LABEL_45;
              }
              uint64_t v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                  break;
                }
                uint64_t v8 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  break;
                }
                char v10 = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_46;
                }
              }
            }
          }
LABEL_33:
          uint64_t v8 = 0;
          char v10 = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_58:
        __break(1u);
        return result;
      }
      if (!v4 || (result - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v8 = (result - 48);
      if (v4 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v8 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v15 = v4 - 2;
        if (v15)
        {
          uint64_t v16 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              goto LABEL_33;
            }
            uint64_t v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_33;
            }
            uint64_t v8 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              goto LABEL_33;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_45:
    char v10 = 0;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t)sub_2690E8(v3, a2, 10);
  char v10 = v23;
  swift_bridgeObjectRelease();
LABEL_46:
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_268BFC()
{
  unint64_t v0 = sub_26D570();
  uint64_t v4 = sub_268C7C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_268C7C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_268DD4(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_1B1F2C(v9, 0),
          unint64_t v12 = sub_268ED4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_26D4A0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_26D4A0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_26DAE0();
LABEL_4:

  return sub_26D4A0();
}

uint64_t sub_268DD4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1B1F94(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1B1F94(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_268ED4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1B1F94(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_26D530();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_26DAE0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1B1F94(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_26D500();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_2690E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26D560();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_268BFC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_26DAE0();
  }
LABEL_7:
  uint64_t v11 = sub_2691D0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2691D0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_269470()
{
  return static FormatStyle<>.dateTime.getter();
}

uint64_t sub_269480()
{
  return static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
}

uint64_t sub_269490()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_2694A0()
{
  return JSONEncoder.init()();
}

uint64_t sub_2694B0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_2694C0()
{
  return DateInterval.distance(_:calendar:)();
}

uint64_t sub_2694D0()
{
  return DateInterval.end.getter();
}

uint64_t sub_2694E0()
{
  return DateInterval.start.getter();
}

uint64_t sub_2694F0()
{
  return type metadata accessor for DateInterval();
}

NSDateComponents sub_269500()
{
  return DateComponents._bridgeToObjectiveC()();
}

uint64_t sub_269510()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_269520()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_269530()
{
  return AttributeScopes.FoundationAttributes.link.getter();
}

uint64_t sub_269540()
{
  return AttributeScopes.SwiftUIAttributes.underlineStyle.getter();
}

uint64_t sub_269550()
{
  return AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
}

uint64_t sub_269560()
{
  return AttributeScopes.SwiftUIAttributes.strikethroughStyle.getter();
}

uint64_t sub_269570()
{
  return AttributeScopes.SwiftUIAttributes.font.getter();
}

uint64_t sub_269580()
{
  return AttributedString.subscript.getter();
}

uint64_t sub_269590()
{
  return AttributedString.subscript.setter();
}

uint64_t sub_2695A0()
{
  return AttributedString.init(stringLiteral:)();
}

uint64_t sub_2695B0()
{
  return AttributedString.replaceSubrange<A, B>(_:with:)();
}

uint64_t sub_2695C0()
{
  return static AttributedString.+= infix(_:_:)();
}

uint64_t sub_2695D0()
{
  return type metadata accessor for AttributedString();
}

uint64_t sub_2695E0()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t sub_2695F0()
{
  return AttributeContainer.init()();
}

uint64_t sub_269600()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t sub_269610()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_269620()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_269630()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_269640()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_269650()
{
  return AttributedStringProtocol.range<A>(of:options:locale:)();
}

uint64_t sub_269660()
{
  return static FormatStyleCapitalizationContext.unknown.getter();
}

uint64_t sub_269670()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t sub_269680()
{
  return URL.absoluteString.getter();
}

uint64_t sub_269690()
{
  return static URL.== infix(_:_:)();
}

uint64_t sub_2696A0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_2696B0()
{
  return URL.init(string:)();
}

uint64_t sub_2696C0()
{
  return type metadata accessor for URL();
}

NSData sub_2696D0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_2696E0()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_2696F0()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_269700()
{
  return Date.FormatStyle.day(_:)();
}

uint64_t sub_269710()
{
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t sub_269720()
{
  return Date.FormatStyle.year(_:)();
}

uint64_t sub_269730()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t sub_269740()
{
  return static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
}

uint64_t sub_269750()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Day();
}

uint64_t sub_269760()
{
  return static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
}

uint64_t sub_269770()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Year();
}

uint64_t sub_269780()
{
  return static Date.FormatStyle.Symbol.Month.abbreviated.getter();
}

uint64_t sub_269790()
{
  return static Date.FormatStyle.Symbol.Month.wide.getter();
}

uint64_t sub_2697A0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t sub_2697B0()
{
  return type metadata accessor for Date.FormatStyle();
}

NSDate sub_2697C0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_2697D0()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_2697E0()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_2697F0()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_269800()
{
  return Date.init()();
}

uint64_t sub_269810()
{
  return type metadata accessor for Date();
}

uint64_t sub_269820()
{
  return UUID.uuidString.getter();
}

uint64_t sub_269830()
{
  return UUID.init()();
}

uint64_t sub_269840()
{
  return type metadata accessor for UUID();
}

uint64_t sub_269850()
{
  return Locale.Components.languageComponents.getter();
}

uint64_t sub_269860()
{
  return Locale.Components.init(identifier:)();
}

uint64_t sub_269870()
{
  return type metadata accessor for Locale.Components();
}

uint64_t sub_269880()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_269890()
{
  return type metadata accessor for Locale.LanguageCode();
}

NSLocale sub_2698A0()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_2698B0()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_2698C0()
{
  return static Locale.current.getter();
}

uint64_t sub_2698D0()
{
  return Locale.Language.Components.languageCode.getter();
}

uint64_t sub_2698E0()
{
  return type metadata accessor for Locale.Language.Components();
}

uint64_t sub_2698F0()
{
  return Locale.Language.characterDirection.getter();
}

uint64_t sub_269900()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_269910()
{
  return Locale.language.getter();
}

uint64_t sub_269920()
{
  return type metadata accessor for Locale();
}

uint64_t sub_269930()
{
  return static Calendar.gregorian.getter();
}

NSCalendar sub_269940()
{
  return Calendar._bridgeToObjectiveC()();
}

uint64_t sub_269950()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_269960()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_269970()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_269980()
{
  return static TimeZone.autoupdatingCurrent.getter();
}

uint64_t sub_269990()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_2699A0()
{
  return BackdropView.init(image:useMask:)();
}

uint64_t sub_2699B0()
{
  return type metadata accessor for BackdropView();
}

uint64_t sub_2699D0()
{
  return type metadata accessor for Backdrop.CompositeRenderer();
}

uint64_t sub_2699E0()
{
  return Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)();
}

uint64_t sub_2699F0()
{
  return type metadata accessor for Backdrop.SnapshotConfiguration();
}

uint64_t sub_269A00()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_269A10()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_269A20()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t sub_269A30()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t sub_269A40()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_269A50()
{
  return type metadata accessor for ObservationRegistrar();
}

NSNumber sub_269A60()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_269A70()
{
  return CGFloat.rounded.getter();
}

uint64_t sub_269A80()
{
  return type metadata accessor for ContextAssetInfoAnalytics();
}

uint64_t sub_269A90()
{
  return AppAnalyticsData.wrappedValue.getter();
}

uint64_t sub_269AA0()
{
  return type metadata accessor for AppAnalyticsData();
}

uint64_t sub_269AB0()
{
  return AppAnalyticsData.init(_:)();
}

uint64_t sub_269AC0()
{
  return type metadata accessor for AppAnalyticsAction.Type();
}

uint64_t sub_269AD0()
{
  return AppAnalyticsAction.init(type:)();
}

uint64_t sub_269AE0()
{
  return type metadata accessor for AppAnalyticsAction();
}

uint64_t sub_269AF0()
{
  return DialogData.init(dialogType:)();
}

uint64_t sub_269B00()
{
  return type metadata accessor for DialogData();
}

uint64_t sub_269B10()
{
  return type metadata accessor for DialogType();
}

uint64_t sub_269B20()
{
  return type metadata accessor for ReaderType();
}

uint64_t sub_269B30()
{
  return type metadata accessor for SeriesData();
}

uint64_t sub_269B40()
{
  return type metadata accessor for SeriesType();
}

uint64_t sub_269B50()
{
  return ContentData.init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:mangaFlag:isUnified:isAccoladedContent:contentKind:)();
}

uint64_t sub_269B60()
{
  return type metadata accessor for ContentData();
}

uint64_t sub_269B70()
{
  return type metadata accessor for ContentType();
}

uint64_t sub_269B80()
{
  return static DataStackID.additionalEventData.getter();
}

uint64_t sub_269B90()
{
  return DataStackID.init(stringLiteral:)();
}

uint64_t sub_269BA0()
{
  return type metadata accessor for DataStackID();
}

uint64_t sub_269BB0()
{
  return type metadata accessor for SectionData();
}

uint64_t sub_269BC0()
{
  return type metadata accessor for LocationType();
}

uint64_t sub_269BD0()
{
  return YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)();
}

uint64_t sub_269BE0()
{
  return type metadata accessor for YIRSourceData();
}

uint64_t sub_269BF0()
{
  return type metadata accessor for ContentSubType();
}

uint64_t sub_269C00()
{
  return type metadata accessor for LinkActionType();
}

uint64_t sub_269C10()
{
  return type metadata accessor for ProductionType();
}

uint64_t sub_269C20()
{
  return DialogActionData.init(dialogActionType:)();
}

uint64_t sub_269C30()
{
  return type metadata accessor for DialogActionData();
}

uint64_t sub_269C40()
{
  return DialogActionType.rawValue.getter();
}

uint64_t sub_269C50()
{
  return type metadata accessor for DialogActionType();
}

uint64_t sub_269C60()
{
  return type metadata accessor for OdpSuggestionType();
}

uint64_t sub_269C70()
{
  return type metadata accessor for ContentAcquisitionType();
}

uint64_t sub_269C80()
{
  return type metadata accessor for YearInReviewExposureEvent();
}

uint64_t sub_269C90()
{
  return type metadata accessor for AltSeriesContentTypeExposureData();
}

uint64_t sub_269CA0(Swift::String a1)
{
  return BATracker.contentUserID(for:)(a1).value._countAndFlagsBits;
}

uint64_t sub_269CB0(Swift::String a1)
{
  return BATracker.contentPrivateID(for:)(a1).value._countAndFlagsBits;
}

uint64_t sub_269CC0()
{
  return type metadata accessor for ClickData.TargetType();
}

uint64_t sub_269CD0()
{
  return ClickData.init(with:linkActionType:index:url:)();
}

uint64_t sub_269CE0()
{
  return type metadata accessor for ClickData();
}

uint64_t sub_269CF0()
{
  return DataStack.first<A>(of:)();
}

uint64_t sub_269D00()
{
  return type metadata accessor for DataStack();
}

uint64_t sub_269D10()
{
  return type metadata accessor for FrameName();
}

uint64_t sub_269D20()
{
  return type metadata accessor for MangaFlag();
}

uint64_t sub_269D30()
{
  return BookInfo.contentKind.getter();
}

uint64_t sub_269D40()
{
  return BookInfo.isRTL.getter();
}

uint64_t sub_269D50()
{
  return type metadata accessor for BookInfo();
}

uint64_t sub_269D60()
{
  return MAudiobook.narrator.getter();
}

uint64_t sub_269D70()
{
  return type metadata accessor for MAudiobook();
}

uint64_t sub_269D80()
{
  return SeriesInfo.isExplicit.getter();
}

uint64_t sub_269D90()
{
  return SeriesInfo.url.getter();
}

uint64_t sub_269DA0()
{
  return ContentInfo.libraryData.getter();
}

uint64_t sub_269DB0()
{
  return ContentInfo.id.getter();
}

uint64_t sub_269DC0()
{
  return ContentInfo.title.getter();
}

uint64_t sub_269DD0()
{
  return ContentInfo.storeData.getter();
}

uint64_t sub_269DE0()
{
  return static ContentKind.== infix(_:_:)();
}

uint64_t sub_269DF0()
{
  return type metadata accessor for ContentKind();
}

uint64_t sub_269E00()
{
  return UserDefault.wrappedValue.modify();
}

uint64_t sub_269E10()
{
  return UserDefault.wrappedValue.getter();
}

uint64_t sub_269E20()
{
  return UserDefault.wrappedValue.setter();
}

uint64_t sub_269E30()
{
  return UserDefault.init(_:defaults:defaultValue:)();
}

uint64_t sub_269E40()
{
  return static Capabilities.isInternalBuild.getter();
}

uint64_t sub_269E50()
{
  return AudiobookInfo.isSG.getter();
}

uint64_t sub_269E60()
{
  return type metadata accessor for AudiobookInfo();
}

uint64_t sub_269E70()
{
  return MResourceType.name.getter();
}

uint64_t sub_269E80()
{
  return type metadata accessor for MResourceType();
}

uint64_t sub_269E90()
{
  return static SeriesOrdering.== infix(_:_:)();
}

uint64_t sub_269EA0()
{
  return type metadata accessor for SeriesOrdering();
}

uint64_t sub_269EB0()
{
  return type metadata accessor for BooksFeatureFlag();
}

uint64_t sub_269EC0()
{
  return dispatch thunk of LibraryAssetInfo.isPurchased.getter();
}

uint64_t sub_269ED0()
{
  return dispatch thunk of LibraryAssetInfo.isSideloaded.getter();
}

uint64_t sub_269EE0()
{
  return dispatch thunk of LibraryContentInfo.storeID.getter();
}

uint64_t sub_269EF0()
{
  return static ContentInfoUtilities.assetInfo(storeAsset:)();
}

uint64_t sub_269F00()
{
  return type metadata accessor for MCatalogServiceConfig();
}

uint64_t sub_269F10()
{
  return dispatch thunk of AssetInfo.contentKind.getter();
}

uint64_t sub_269F20()
{
  return dispatch thunk of AssetInfo.assetType.getter();
}

uint64_t sub_269F30()
{
  return AssetInfo.isExplicit.getter();
}

uint64_t sub_269F40()
{
  return AssetInfo.seriesName.getter();
}

uint64_t sub_269F50()
{
  return AssetInfo.serverData.getter();
}

uint64_t sub_269F60()
{
  return AssetInfo.sharableURL.getter();
}

uint64_t sub_269F70()
{
  return AssetInfo.expectedDate.getter();
}

uint64_t sub_269F80()
{
  return AssetInfo.bookWorkTitle.getter();
}

uint64_t sub_269F90()
{
  return AssetInfo.sequenceLabel.getter();
}

uint64_t sub_269FA0()
{
  return AssetInfo.coverURLString.getter();
}

uint64_t sub_269FB0()
{
  return AssetInfo.isPartOfSeries.getter();
}

uint64_t sub_269FC0()
{
  return AssetInfo.priceFormatted.getter();
}

uint64_t sub_269FD0()
{
  return AssetInfo.sequenceNumber.getter();
}

uint64_t sub_269FE0()
{
  return AssetInfo.seriesOrdering.getter();
}

uint64_t sub_269FF0()
{
  return AssetInfo.coverAspectRatio.getter();
}

uint64_t sub_26A000()
{
  return AssetInfo.standardDescription.getter();
}

uint64_t sub_26A010()
{
  return AssetInfo.supportsUnifiedProductPage.getter();
}

uint64_t sub_26A020()
{
  return AssetInfo.title.getter();
}

uint64_t sub_26A030()
{
  return AssetInfo.author.getter();
}

uint64_t sub_26A040()
{
  return AssetInfo.isFree.getter();
}

uint64_t sub_26A050()
{
  return static AssetType.== infix(_:_:)();
}

uint64_t sub_26A060()
{
  return MResource.id.getter();
}

uint64_t sub_26A070()
{
  return static MResource.from<A>(response:config:)();
}

uint64_t sub_26A080()
{
  return type metadata accessor for MResource();
}

uint64_t sub_26A090()
{
  return Regex.firstMatch(in:)();
}

uint64_t sub_26A0A0()
{
  return Regex.Match.range.getter();
}

uint64_t sub_26A0B0()
{
  return Regex<A>.init(_:)();
}

uint64_t sub_26A0D0()
{
  return type metadata accessor for _JetLocalizeDefaultFailed();
}

uint64_t sub_26A0E0()
{
  return _JetLocalizeDefaultWorking.init()();
}

uint64_t sub_26A0F0()
{
  return type metadata accessor for _JetLocalizeDefaultWorking();
}

uint64_t sub_26A100()
{
  return JetLocalize.init(working:failed:content:)();
}

uint64_t sub_26A110()
{
  return type metadata accessor for JetLocalize();
}

uint64_t sub_26A120()
{
  return ActionButton.init(role:action:label:)();
}

uint64_t sub_26A130()
{
  return type metadata accessor for ActionButton();
}

uint64_t sub_26A140()
{
  return IntentResult.data.getter();
}

uint64_t sub_26A150()
{
  return IntentResult.error.getter();
}

uint64_t sub_26A160()
{
  return type metadata accessor for LocalizedText();
}

uint64_t sub_26A170()
{
  return LocalizedText.init(_:)();
}

uint64_t sub_26A180()
{
  return PerformAction.callAsFunction(_:withMetrics:)();
}

uint64_t sub_26A190()
{
  return type metadata accessor for ShelfGridLayout();
}

uint64_t sub_26A1A0()
{
  return static LocalizerRequest.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)();
}

uint64_t sub_26A1B0()
{
  return static LocalizerRequest.== infix(_:_:)();
}

uint64_t sub_26A1C0()
{
  return static LocalizerRequest.custom(_:)();
}

uint64_t sub_26A1D0()
{
  return static LocalizerRequest.string(forKey:with:defaultValue:using:)();
}

uint64_t sub_26A1F0()
{
  return static LocalizerRequest.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:)();
}

uint64_t sub_26A200()
{
  return LocalizerRequest.perform(using:)();
}

uint64_t sub_26A210()
{
  return static LocalizerRequest.verbatim(_:)();
}

uint64_t sub_26A220()
{
  return type metadata accessor for LocalizerRequest();
}

uint64_t sub_26A230()
{
  return ShelfGridPadding.leading.getter();
}

uint64_t sub_26A240()
{
  return ShelfGridPadding.trailing.getter();
}

uint64_t sub_26A250()
{
  return type metadata accessor for ShelfGridPadding();
}

uint64_t sub_26A260()
{
  return ShelfGridSpacing.horizontal.getter();
}

uint64_t sub_26A270()
{
  return type metadata accessor for ShelfGridSpacing();
}

uint64_t sub_26A280()
{
  return ShelfGridItemWidth.Context.offset.getter();
}

uint64_t sub_26A290()
{
  return ShelfGridItemWidth.Context.spacing.getter();
}

uint64_t sub_26A2A0()
{
  return ShelfGridItemWidth.resolve(using:)();
}

uint64_t sub_26A2B0()
{
  return type metadata accessor for ShelfGridItemWidth();
}

uint64_t sub_26A2C0()
{
  return type metadata accessor for OpaqueMetricsFieldsContext();
}

uint64_t sub_26A2D0()
{
  return type metadata accessor for IndexedRandomAccessCollection();
}

uint64_t sub_26A2E0()
{
  return ImageResource.init(name:bundle:)();
}

uint64_t sub_26A2F0()
{
  return type metadata accessor for ImageResource();
}

uint64_t sub_26A300()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_26A310()
{
  return OSAllocatedUnfairLock.valueWithLock.getter();
}

uint64_t sub_26A320()
{
  return Logger.logObject.getter();
}

uint64_t sub_26A330()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_26A340()
{
  return type metadata accessor for Logger();
}

uint64_t sub_26A350()
{
  return AxisContent.compositingLayer<A>(style:)();
}

uint64_t sub_26A360()
{
  return ChartContent.annotation<A>(position:alignment:spacing:content:)();
}

uint64_t sub_26A370()
{
  return ChartContent.foregroundStyle<A>(_:)();
}

uint64_t sub_26A380()
{
  return ChartContent.compositingLayer<A>(style:)();
}

uint64_t sub_26A390()
{
  return ChartContent.accessibilityLabel<A>(_:)();
}

uint64_t sub_26A3A0()
{
  return ChartContent.accessibilityValue<A>(_:)();
}

uint64_t sub_26A3B0()
{
  return ChartContent.clipShape<A>(_:style:)();
}

uint64_t sub_26A3C0()
{
  return static AxisMarkPreset.extended.getter();
}

uint64_t sub_26A3D0()
{
  return type metadata accessor for AxisMarkPreset();
}

uint64_t sub_26A3E0()
{
  return static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
}

uint64_t sub_26A3F0()
{
  return type metadata accessor for AxisMarkValues();
}

uint64_t sub_26A400()
{
  return AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
}

uint64_t sub_26A410()
{
  return static PlottableValue.value<A>(_:_:unit:calendar:)();
}

uint64_t sub_26A420()
{
  return static PlottableValue.value<A>(_:_:)();
}

uint64_t sub_26A430()
{
  return static AxisMarkPosition.leading.getter();
}

uint64_t sub_26A440()
{
  return type metadata accessor for AxisMarkPosition();
}

uint64_t sub_26A450()
{
  return static AnnotationPosition.trailing.getter();
}

uint64_t sub_26A460()
{
  return type metadata accessor for AnnotationPosition();
}

uint64_t sub_26A470()
{
  return static PositionScaleRange<>.plotDimension(startPadding:endPadding:)();
}

uint64_t sub_26A480()
{
  return type metadata accessor for PlotDimensionScaleRange();
}

uint64_t sub_26A490()
{
  return static AxisValueLabelOrientation.automatic.getter();
}

uint64_t sub_26A4A0()
{
  return type metadata accessor for AxisValueLabelOrientation();
}

uint64_t sub_26A4B0()
{
  return static AxisValueLabelCollisionResolution.automatic.getter();
}

uint64_t sub_26A4C0()
{
  return type metadata accessor for AxisValueLabelCollisionResolution();
}

uint64_t sub_26A4D0()
{
  return Chart.init<A, B>(_:content:)();
}

uint64_t sub_26A4E0()
{
  return BarMark.init<A, B>(x:y:width:height:stacking:)();
}

uint64_t sub_26A4F0()
{
  return type metadata accessor for BarMark();
}

uint64_t sub_26A500()
{
  return AxisMark.foregroundStyle<A>(_:)();
}

uint64_t sub_26A510()
{
  return AxisMark.font(_:)();
}

uint64_t sub_26A520()
{
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_26A530()
{
  return type metadata accessor for ScaleType();
}

uint64_t sub_26A540()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_26A550()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_26A560()
{
  return Published.init(initialValue:)();
}

uint64_t sub_26A570()
{
  return Published.projectedValue.getter();
}

uint64_t sub_26A580()
{
  return Published.projectedValue.setter();
}

uint64_t sub_26A590()
{
  return static Published.subscript.getter();
}

uint64_t sub_26A5A0()
{
  return static Published.subscript.setter();
}

uint64_t sub_26A5B0()
{
  return type metadata accessor for Published();
}

uint64_t sub_26A5C0()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_26A5D0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_26A5E0()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_26A5F0()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_26A600()
{
  return static Animatable._makeAnimatable(value:inputs:)();
}

uint64_t sub_26A610()
{
  return AsyncImage.init(url:scale:transaction:content:)();
}

uint64_t sub_26A620()
{
  return type metadata accessor for AsyncImage();
}

uint64_t sub_26A630()
{
  return type metadata accessor for ButtonRole();
}

uint64_t sub_26A640()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_26A650()
{
  return EdgeInsets.init(_:)();
}

uint64_t sub_26A660()
{
  return LazyHStack.init(alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_26A670()
{
  return type metadata accessor for LazyHStack();
}

uint64_t sub_26A680()
{
  return LazyVStack.init(alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_26A690()
{
  return type metadata accessor for ScrollView();
}

uint64_t sub_26A6A0()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_26A6B0()
{
  return _ShapeView.init(shape:style:fillStyle:)();
}

uint64_t sub_26A6C0()
{
  return type metadata accessor for _ShapeView();
}

uint64_t sub_26A6D0()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_26A6E0()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_26A6F0()
{
  return type metadata accessor for ControlSize();
}

uint64_t sub_26A700()
{
  return DragGesture.init<A>(minimumDistance:coordinateSpace:)();
}

uint64_t sub_26A710()
{
  return DragGesture.Value.translation.getter();
}

uint64_t sub_26A720()
{
  return DragGesture.Value.startLocation.getter();
}

uint64_t sub_26A730()
{
  return type metadata accessor for DragGesture();
}

uint64_t sub_26A740()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_26A750()
{
  return static GestureMask.all.getter();
}

uint64_t sub_26A760()
{
  return static HoverEffect.lift.getter();
}

uint64_t sub_26A770()
{
  return static HoverEffect.automatic.getter();
}

uint64_t sub_26A780()
{
  return type metadata accessor for HoverEffect();
}

uint64_t sub_26A790()
{
  return static ShadowStyle.inner(color:radius:x:y:)();
}

uint64_t sub_26A7A0()
{
  return type metadata accessor for ShadowStyle();
}

uint64_t sub_26A7B0()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_26A7C0()
{
  return ToolbarItem<>.init(placement:content:)();
}

uint64_t sub_26A7D0()
{
  return Transaction.animation.setter();
}

uint64_t sub_26A7E0()
{
  return type metadata accessor for _ClipEffect();
}

uint64_t sub_26A7F0()
{
  return ProgressView.init<A>(value:total:)();
}

uint64_t sub_26A800()
{
  return ProgressView<>.init<>()();
}

uint64_t sub_26A810()
{
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

uint64_t sub_26A820()
{
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t sub_26A830()
{
  return ScaledMetric.wrappedValue.getter();
}

uint64_t sub_26A840()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t sub_26A850()
{
  return SharePreview<>.init(metadata:)();
}

uint64_t sub_26A860()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_26A870()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_26A880()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_26A890()
{
  return ViewModifier<>.body(content:)();
}

uint64_t sub_26A8A0()
{
  return VisualEffect.scaleEffect(_:anchor:)();
}

uint64_t sub_26A8B0()
{
  return VisualEffect.offset(_:)();
}

uint64_t sub_26A8C0()
{
  return _CALayerView.init(type:onUpdate:)();
}

uint64_t sub_26A8D0()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_26A8E0()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_26A8F0()
{
  return static AnyTransition.scale(scale:anchor:)();
}

uint64_t sub_26A900()
{
  return static AnyTransition.opacity.getter();
}

uint64_t sub_26A910()
{
  return AnyTransition.combined(with:)();
}

uint64_t sub_26A920()
{
  return AnyTransition.animation(_:)();
}

uint64_t sub_26A930()
{
  return GeometryProxy.safeAreaInsets.getter();
}

uint64_t sub_26A940()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_26A950()
{
  return GeometryProxy.frame(in:)();
}

uint64_t sub_26A960()
{
  return GeometryProxy.frame<A>(in:)();
}

uint64_t sub_26A970()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_26A980()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t sub_26A990()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t sub_26A9A0()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t sub_26A9B0()
{
  return static PreferenceKey._isReadableByHost.getter();
}

uint64_t sub_26A9C0()
{
  return static PreferenceKey._includesRemovedValues.getter();
}

uint64_t sub_26A9D0()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_26A9E0()
{
  return static EnvironmentKey._valuesEqual(_:_:)();
}

uint64_t sub_26AA10()
{
  return static GeometryEffect._affectsLayout.getter();
}

uint64_t sub_26AA20()
{
  return static GeometryEffect._viewListCount(inputs:body:)();
}

uint64_t sub_26AA40()
{
  return GeometryReader.init(content:)();
}

uint64_t sub_26AA50()
{
  return type metadata accessor for GeometryReader();
}

uint64_t sub_26AA60()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t sub_26AA70()
{
  return LayoutSubviews.subscript.getter();
}

uint64_t sub_26AA80()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_26AA90()
{
  return AsyncImagePhase.image.getter();
}

uint64_t sub_26AAA0()
{
  return ButtonMenuStyle.init()();
}

uint64_t sub_26AAB0()
{
  return type metadata accessor for ButtonMenuStyle();
}

uint64_t sub_26AAC0()
{
  return static CoordinateSpace.shelfContainerScrollView.getter();
}

uint64_t sub_26AAD0()
{
  return type metadata accessor for CoordinateSpace();
}

uint64_t sub_26AAF0()
{
  return static DynamicProperty._propertyBehaviors.getter();
}

void sub_26AB00()
{
}

uint64_t sub_26AB10()
{
  return DynamicTypeSize.isAccessibilitySize.getter();
}

uint64_t sub_26AB20()
{
  return static DynamicTypeSize.< infix(_:_:)();
}

uint64_t sub_26AB30()
{
  return static DynamicTypeSize.== infix(_:_:)();
}

uint64_t sub_26AB40()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_26AB50()
{
  return DynamicTypeSize.init(_:)();
}

uint64_t sub_26AB60()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_26AB70()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_26AB80()
{
  return type metadata accessor for LiftHoverEffect();
}

uint64_t sub_26AB90()
{
  return ModifiedContent<>.accessibilityCustomContent(_:)();
}

uint64_t sub_26ABA0()
{
  return ModifiedContent<>.accessibilityHint<A>(_:)();
}

uint64_t sub_26ABB0()
{
  return ModifiedContent<>.accessibilityValue<A>(_:)();
}

uint64_t sub_26ABC0()
{
  return ModifiedContent<>.accessibilityRemoveTraits(_:)();
}

uint64_t sub_26ABD0()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_26ABE0()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t sub_26ABF0()
{
  return PlainButtonStyle.init()();
}

uint64_t sub_26AC00()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t sub_26AC10()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_26AC20()
{
  return RedactionReasons.init(rawValue:)();
}

uint64_t sub_26AC30()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_26AC40()
{
  return type metadata accessor for RoundedRectangle._Inset();
}

uint64_t sub_26AC50()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_26AC60()
{
  return static ToolbarPlacement.navigationBar.getter();
}

uint64_t sub_26AC70()
{
  return type metadata accessor for ToolbarPlacement();
}

uint64_t sub_26AC80()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_26AC90()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_26ACA0()
{
  return static ButtonBorderShape.roundedRectangle.getter();
}

uint64_t sub_26ACB0()
{
  return static ButtonBorderShape.capsule.getter();
}

uint64_t sub_26ACC0()
{
  return type metadata accessor for ButtonBorderShape();
}

uint64_t sub_26ACD0()
{
  return static ContentShapeKinds.hoverEffect.getter();
}

uint64_t sub_26ACE0()
{
  return static ContentShapeKinds.contextMenuPreview.getter();
}

uint64_t sub_26ACF0()
{
  return type metadata accessor for ContentShapeKinds();
}

uint64_t sub_26AD00()
{
  return static ContentTransition.symbolEffect<A>(_:options:)();
}

uint64_t sub_26AD10()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_26AD20()
{
  return static CustomHoverEffect<>.lift.getter();
}

uint64_t sub_26AD30()
{
  return static CustomHoverEffect<>.automatic.getter();
}

uint64_t sub_26AD40()
{
  return type metadata accessor for EmptyVisualEffect();
}

uint64_t sub_26AD60()
{
  return EnvironmentObject.error()();
}

uint64_t sub_26AD70()
{
  return EnvironmentObject.init()();
}

uint64_t sub_26AD80()
{
  return EnvironmentValues.performAction.getter();
}

uint64_t sub_26AD90()
{
  return EnvironmentValues.shelfContainerSize.getter();
}

uint64_t sub_26ADA0()
{
  return EnvironmentValues.metricsFieldsContext.getter();
}

uint64_t sub_26ADB0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_26ADC0()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_26ADD0()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_26ADE0()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_26ADF0()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_26AE00()
{
  return EnvironmentValues.pixelLength.getter();
}

uint64_t sub_26AE10()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t sub_26AE20()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_26AE30()
{
  return EnvironmentValues._dataStack.getter();
}

uint64_t sub_26AE40()
{
  return EnvironmentValues._dataStack.setter();
}

uint64_t sub_26AE50()
{
  return EnvironmentValues._sizeProvider.getter();
}

uint64_t sub_26AE60()
{
  return EnvironmentValues._sizeProvider.setter();
}

uint64_t sub_26AE70()
{
  return EnvironmentValues.tracker.getter();
}

uint64_t sub_26AE80()
{
  return EnvironmentValues.tracker.setter();
}

uint64_t sub_26AE90()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_26AEA0()
{
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t sub_26AEB0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_26AEC0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_26AED0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_26AEE0()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t sub_26AEF0()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_26AF00()
{
  return EnvironmentValues.redactionReasons.setter();
}

uint64_t sub_26AF10()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_26AF20()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_26AF30()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_26AF40()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_26AF50()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_26AF60()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_26AF70()
{
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_26AF80()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_26AF90()
{
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_26AFA0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_26AFB0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_26AFC0()
{
  return EnvironmentValues.menuIndicatorVisibility.getter();
}

uint64_t sub_26AFD0()
{
  return EnvironmentValues.menuIndicatorVisibility.setter();
}

uint64_t sub_26AFE0()
{
  return EnvironmentValues.accessibilityShowButtonShapes.getter();
}

uint64_t sub_26AFF0()
{
  return EnvironmentValues.accessibilityVoiceOverEnabled.getter();
}

uint64_t sub_26B000()
{
  return EnvironmentValues.accessibilitySwitchControlEnabled.getter();
}

uint64_t sub_26B010()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_26B020()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_26B030()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t sub_26B040()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_26B050()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_26B060()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_26B070()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t sub_26B080()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_26B090()
{
  return EnvironmentValues.init()();
}

uint64_t sub_26B0A0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_26B0B0()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_26B0C0()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_26B0D0()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t sub_26B0E0()
{
  return static VerticalAlignment.lastTextBaseline.getter();
}

uint64_t sub_26B0F0()
{
  return static VerticalAlignment.== infix(_:_:)();
}

uint64_t sub_26B100()
{
  return static VerticalAlignment.top.getter();
}

uint64_t sub_26B110()
{
  return static VerticalAlignment.bottom.getter();
}

uint64_t sub_26B120()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_26B130()
{
  return type metadata accessor for ColorRenderingMode();
}

uint64_t sub_26B140()
{
  return LocalizedStringKey.init(_:)();
}

uint64_t sub_26B150()
{
  return static RoundedCornerStyle.== infix(_:_:)();
}

uint64_t sub_26B160()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_26B170()
{
  return static AccessibilityTraits.isSelected.getter();
}

uint64_t sub_26B180()
{
  return static AccessibilityTraits.isImage.getter();
}

uint64_t sub_26B190()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_26B1A0()
{
  return BorderedButtonStyle.init()();
}

uint64_t sub_26B1B0()
{
  return type metadata accessor for BorderedButtonStyle();
}

uint64_t sub_26B1C0()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_26B1D0()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_26B1E0()
{
  return static SymbolRenderingMode.palette.getter();
}

uint64_t sub_26B1F0()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t sub_26B200()
{
  return TupleToolbarContent.init(_:)();
}

uint64_t sub_26B210()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t sub_26B220()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t sub_26B230()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_26B250()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t sub_26B260()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t sub_26B270()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t sub_26B280()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t sub_26B290()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t sub_26B2A0()
{
  return UIViewRepresentable.body.getter();
}

uint64_t sub_26B2C0()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t sub_26B2D0()
{
  return type metadata accessor for _BackgroundModifier();
}

uint64_t sub_26B2E0()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_26B2F0()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_26B300()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_26B310()
{
  return type metadata accessor for AutomaticHoverEffect();
}

uint64_t sub_26B320()
{
  return type metadata accessor for LocalCoordinateSpace();
}

uint64_t sub_26B330()
{
  return type metadata accessor for NamedCoordinateSpace();
}

uint64_t sub_26B340()
{
  return RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
}

uint64_t sub_26B350()
{
  return static ScrollBounceBehavior.basedOnSize.getter();
}

uint64_t sub_26B360()
{
  return type metadata accessor for ScrollBounceBehavior();
}

uint64_t sub_26B370()
{
  return static ToolbarItemPlacement.primaryAction.getter();
}

uint64_t sub_26B380()
{
  return static ToolbarItemPlacement.navigationBarLeading.getter();
}

uint64_t sub_26B390()
{
  return static ToolbarItemPlacement.navigationBarTrailing.getter();
}

uint64_t sub_26B3A0()
{
  return static ToolbarItemPlacement.principal.getter();
}

uint64_t sub_26B3B0()
{
  return type metadata accessor for ToolbarItemPlacement();
}

uint64_t sub_26B3C0()
{
  return type metadata accessor for GlobalCoordinateSpace();
}

uint64_t sub_26B3D0()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t sub_26B3E0()
{
  return static ToolbarContentBuilder.buildBlock<A>(_:)();
}

uint64_t sub_26B3F0()
{
  return static ToolbarContentBuilder.buildIf<A>(_:)();
}

uint64_t sub_26B400()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t sub_26B410()
{
  return static ContentMarginPlacement.scrollContent.getter();
}

uint64_t sub_26B420()
{
  return static ContentMarginPlacement.scrollIndicators.getter();
}

uint64_t sub_26B430()
{
  return type metadata accessor for ContentMarginPlacement();
}

uint64_t sub_26B440()
{
  return static HierarchicalShapeStyle.quaternary.getter();
}

uint64_t sub_26B450()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_26B460()
{
  return static HierarchicalShapeStyle.tertiary.getter();
}

uint64_t sub_26B470()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_26B480()
{
  return TitleAndIconLabelStyle.init()();
}

uint64_t sub_26B490()
{
  return type metadata accessor for TitleAndIconLabelStyle();
}

uint64_t sub_26B4A0()
{
  return type metadata accessor for UnevenRoundedRectangle();
}

uint64_t sub_26B4B0()
{
  return type metadata accessor for UserInterfaceSizeClass();
}

uint64_t sub_26B4C0()
{
  return static CoordinateSpaceProtocol<>.local.getter();
}

uint64_t sub_26B4D0()
{
  return static CoordinateSpaceProtocol<>.scrollView.getter();
}

uint64_t sub_26B4E0()
{
  return static CoordinateSpaceProtocol<>.global.getter();
}

uint64_t sub_26B4F0()
{
  return SafeAreaPaddingModifier.init(edges:insets:)();
}

uint64_t sub_26B500()
{
  return type metadata accessor for SafeAreaPaddingModifier();
}

uint64_t sub_26B510()
{
  return type metadata accessor for _GeometryActionModifier();
}

uint64_t sub_26B520()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t sub_26B530()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t sub_26B540()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t sub_26B550()
{
  return EnabledTextSelectability.init()();
}

uint64_t sub_26B560()
{
  return type metadata accessor for EnabledTextSelectability();
}

uint64_t sub_26B570()
{
  return type metadata accessor for _BackgroundStyleModifier();
}

uint64_t sub_26B580()
{
  return static MatchedGeometryProperties.frame.getter();
}

uint64_t sub_26B590()
{
  return static ScrollIndicatorVisibility.never.getter();
}

uint64_t sub_26B5A0()
{
  return static ScrollIndicatorVisibility.hidden.getter();
}

uint64_t sub_26B5B0()
{
  return type metadata accessor for ScrollIndicatorVisibility();
}

uint64_t sub_26B5C0()
{
  return type metadata accessor for _PreferenceActionModifier();
}

uint64_t sub_26B5D0()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_26B5E0()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_26B5F0()
{
  return static AccessibilityChildBehavior.contain.getter();
}

uint64_t sub_26B600()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_26B610()
{
  return PagingScrollTargetBehavior.init()();
}

uint64_t sub_26B620()
{
  return type metadata accessor for PagingScrollTargetBehavior();
}

uint64_t sub_26B630()
{
  return UIViewRepresentableContext.coordinator.getter();
}

uint64_t sub_26B640()
{
  return BorderedProminentButtonStyle.init()();
}

uint64_t sub_26B650()
{
  return type metadata accessor for BorderedProminentButtonStyle();
}

uint64_t sub_26B660()
{
  return type metadata accessor for AccessibilityCustomContentKey();
}

uint64_t sub_26B670()
{
  return AccessibilityCustomContentKey.init(_:)();
}

uint64_t sub_26B680()
{
  return ProgressViewStyleConfiguration.fractionCompleted.getter();
}

uint64_t sub_26B690()
{
  return type metadata accessor for _EnvironmentKeyWritingModifier();
}

uint64_t sub_26B6A0()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_26B6B0()
{
  return type metadata accessor for AccessibilityCustomContentEntry();
}

uint64_t sub_26B6C0()
{
  return AccessibilityCustomContentEntry.init(_:value:importance:)();
}

uint64_t sub_26B6D0()
{
  return static ViewAlignedScrollTargetBehavior.LimitBehavior.automatic.getter();
}

uint64_t sub_26B6E0()
{
  return type metadata accessor for ViewAlignedScrollTargetBehavior.LimitBehavior();
}

uint64_t sub_26B6F0()
{
  return ViewAlignedScrollTargetBehavior.init(limitBehavior:)();
}

uint64_t sub_26B700()
{
  return type metadata accessor for ViewAlignedScrollTargetBehavior();
}

uint64_t sub_26B710()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_26B720()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t sub_26B730()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t sub_26B740()
{
  return static Axis.Set.vertical.getter();
}

uint64_t sub_26B750()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_26B760()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_26B770()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_26B780()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_26B790()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_26B7A0()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_26B7B0()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_26B7C0()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_26B7D0()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_26B7E0()
{
  return static Font.subheadline.getter();
}

uint64_t sub_26B7F0()
{
  return static Font.body.getter();
}

uint64_t sub_26B800()
{
  return Font.bold()();
}

uint64_t sub_26B810()
{
  return static Font.title.getter();
}

uint64_t sub_26B820()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_26B830()
{
  return static Font.Weight.ultraLight.getter();
}

uint64_t sub_26B840()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_26B850()
{
  return static Font.Weight.thin.getter();
}

uint64_t sub_26B860()
{
  return static Font.Weight.black.getter();
}

uint64_t sub_26B870()
{
  return static Font.Weight.heavy.getter();
}

uint64_t sub_26B880()
{
  return static Font.Weight.light.getter();
}

uint64_t sub_26B890()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_26B8A0()
{
  return static Font.Weight.regular.getter();
}

uint64_t sub_26B8B0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_26B8C0()
{
  return Font.italic()();
}

uint64_t sub_26B8D0()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_26B8E0()
{
  return static Font.system(_:design:weight:)();
}

uint64_t sub_26B8F0()
{
  return static Font.title2.getter();
}

uint64_t sub_26B900()
{
  return static Font.title3.getter();
}

uint64_t sub_26B910()
{
  return type metadata accessor for Font.Leading();
}

uint64_t _s7BooksUI13FontConstantsV6ButtonV8subtitle05SwiftB00C0Vvg_0()
{
  return static Font.caption.getter();
}

uint64_t sub_26B930()
{
  return Font.leading(_:)();
}

uint64_t sub_26B940()
{
  return static Font.caption2.getter();
}

uint64_t sub_26B950()
{
  return static Font.footnote.getter();
}

uint64_t sub_26B970()
{
  return static Font.TextStyle.== infix(_:_:)();
}

uint64_t sub_26B980()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t sub_26B990()
{
  return Menu.init(onPresentationChanged:content:label:)();
}

uint64_t sub_26B9A0()
{
  return Menu.init(content:label:)();
}

uint64_t sub_26B9B0()
{
  return type metadata accessor for Menu();
}

uint64_t sub_26B9C0()
{
  return Path.addQuadCurve(to:control:)();
}

uint64_t sub_26B9D0()
{
  return Path.move(to:)();
}

uint64_t sub_26B9E0()
{
  return Path.addLine(to:)();
}

uint64_t sub_26B9F0()
{
  return Path.init()();
}

uint64_t sub_26BA00()
{
  return Text.init(_:localizer:)();
}

uint64_t sub_26BA10()
{
  return Text.fontDesign(_:)();
}

uint64_t sub_26BA20()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_26BA30()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_26BA40()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_26BA50()
{
  return Text.accessibilityLabel<A>(_:)();
}

uint64_t sub_26BA60()
{
  return static Text.+ infix(_:_:)();
}

uint64_t sub_26BA70()
{
  return Text.bold()();
}

uint64_t sub_26BA80()
{
  return Text.font(_:)();
}

uint64_t sub_26BA90()
{
  return Text.kerning(_:)();
}

uint64_t sub_26BAA0()
{
  return Text.tracking(_:)();
}

uint64_t sub_26BAB0()
{
  return static Text.LineStyle.single.getter();
}

uint64_t sub_26BAC0()
{
  return static Text.LineStyle.Pattern.solid.getter();
}

uint64_t sub_26BAD0()
{
  return type metadata accessor for Text.LineStyle.Pattern();
}

uint64_t sub_26BAE0()
{
  return type metadata accessor for Text.LineStyle();
}

uint64_t sub_26BAF0()
{
  return Text.init(_:)();
}

uint64_t sub_26BB00()
{
  return Text.init<A>(_:)();
}

uint64_t sub_26BB10()
{
  return Text.init(_:)();
}

uint64_t sub_26BB20()
{
  return View.impressionable(_:configuration:position:definesParentContext:)();
}

uint64_t sub_26BB30()
{
  return View.navigationTitle(_:)();
}

uint64_t sub_26BB40()
{
  return View.automationSemantics(_:)();
}

uint64_t sub_26BB50()
{
  return View.shelfContentMaxWidth(_:)();
}

uint64_t sub_26BB60()
{
  return View.transformMetricsContext(transform:)();
}

uint64_t sub_26BB70()
{
  return View.collectAppAnalyticsExposure(with:)();
}

uint64_t sub_26BB80()
{
  return View.transformAppAnalyticsData<A>(_:for:transform:)();
}

uint64_t sub_26BB90()
{
  return View.appAnalyticsData(_:for:)();
}

uint64_t sub_26BBA0()
{
  return View.emitAppAnalyticsExposureEvent<A>(_:)();
}

uint64_t sub_26BBB0()
{
  return View.chartXAxis(_:)();
}

uint64_t sub_26BBC0()
{
  return View.chartYAxis<A>(content:)();
}

uint64_t sub_26BBD0()
{
  return View.chartXScale<A, B>(domain:range:type:)();
}

uint64_t sub_26BBE0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_26BBF0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_26BC00()
{
  return View.progressViewStyle<A>(_:)();
}

uint64_t sub_26BC10()
{
  return View.background<A>(alignment:content:)();
}

uint64_t sub_26BC20()
{
  return View.background<A>(_:ignoresSafeAreaEdges:)();
}

uint64_t sub_26BC30()
{
  return View.fontDesign(_:)();
}

uint64_t sub_26BC40()
{
  return View.fontWeight(_:)();
}

uint64_t sub_26BC50()
{
  return View.labelStyle<A>(_:)();
}

uint64_t sub_26BC60()
{
  return View.aspectRatio(_:contentMode:)();
}

uint64_t sub_26BC70()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_26BC80()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_26BC90()
{
  return View.colorScheme(_:)();
}

uint64_t sub_26BCA0()
{
  return View.contextMenu<A>(menuItems:)();
}

uint64_t sub_26BCB0()
{
  return View.environment<A>(_:_:)();
}

uint64_t sub_26BCC0()
{
  return View.hoverEffect<A>(_:isEnabled:)();
}

uint64_t sub_26BCD0()
{
  return View.onDisappear(perform:)();
}

uint64_t sub_26BCE0()
{
  return View.scaleEffect(_:anchor:)();
}

uint64_t sub_26BCF0()
{
  return View.drawingGroup(opaque:colorMode:)();
}

uint64_t sub_26BD00()
{
  return View.visualEffect<A>(_:)();
}

uint64_t sub_26BD10()
{
  return View.accessibility(label:)();
}

uint64_t sub_26BD20()
{
  return View.accessibility(hidden:)();
}

uint64_t sub_26BD30()
{
  return View.textSelection<A>(_:)();
}

uint64_t sub_26BD40()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_26BD50()
{
  return View.contentMargins(_:_:for:)();
}

uint64_t sub_26BD60()
{
  return View.scrollPosition<A>(id:anchor:)();
}

uint64_t sub_26BD70()
{
  return View.coordinateSpace<A>(name:)();
}

uint64_t sub_26BD80()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t sub_26BD90()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t sub_26BDA0()
{
  return View.foregroundColor(_:)();
}

uint64_t sub_26BDB0()
{
  return View.navigationTitle(_:)();
}

uint64_t sub_26BDC0()
{
  return View.onGeometryChange<A>(of:do:)();
}

uint64_t sub_26BDD0()
{
  return View.scrollIndicators(_:axes:)();
}

uint64_t sub_26BDE0()
{
  return View.buttonBorderShape(_:)();
}

uint64_t sub_26BDF0()
{
  return View.environmentObject<A>(_:)();
}

uint64_t sub_26BE00()
{
  return View.systemColorScheme()();
}

uint64_t sub_26BE10()
{
  return View.toolbarBackground(_:for:)();
}

uint64_t sub_26BE20()
{
  return View.accessibilityLabel<A>(content:)();
}

uint64_t sub_26BE30()
{
  return View.accessibilityLabel(_:)();
}

uint64_t sub_26BE40()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_26BE50()
{
  return View.lineHeightMultiple(_:)();
}

uint64_t sub_26BE60()
{
  return View.onPreferenceChange<A>(_:perform:)();
}

uint64_t sub_26BE70()
{
  return View.scrollClipDisabled(_:)();
}

uint64_t sub_26BE80()
{
  return View.scrollTargetLayout(isEnabled:)();
}

uint64_t sub_26BE90()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_26BEA0()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_26BEB0()
{
  return View.scrollBounceBehavior(_:axes:)();
}

uint64_t sub_26BEC0()
{
  return View.scrollTargetBehavior<A>(_:)();
}

uint64_t sub_26BED0()
{
  return View.transformEnvironment<A>(_:transform:)();
}

uint64_t sub_26BEE0()
{
  return View.edgesIgnoringSafeArea(_:)();
}

uint64_t sub_26BEF0()
{
  return View.accessibilityAddTraits(uiTraits:)();
}

uint64_t sub_26BF00()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t sub_26BF10()
{
  return View.containerRelativeFrame(_:count:span:spacing:alignment:)();
}

uint64_t sub_26BF20()
{
  return View.containerRelativeFrame(_:alignment:)();
}

uint64_t sub_26BF30()
{
  return View.accessibilityRemoveTraits(uiTraits:)();
}

uint64_t sub_26BF40()
{
  return View.accessibilityRemoveTraits(_:)();
}

uint64_t sub_26BF50()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t sub_26BF60()
{
  return View.accessibilityShowsLargeContentViewer<A>(_:)();
}

uint64_t sub_26BF70()
{
  return View.bold(_:)();
}

uint64_t sub_26BF80()
{
  return View.font(_:)();
}

uint64_t sub_26BF90()
{
  return View.tint(_:)();
}

uint64_t sub_26BFA0()
{
  return View.frame(width:height:alignment:)();
}

uint64_t sub_26BFB0()
{
  return View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_26BFC0()
{
  return View.offset(_:)();
}

uint64_t sub_26BFD0()
{
  return View.shadow(color:radius:x:y:)();
}

uint64_t sub_26BFE0()
{
  return View.gesture<A>(_:including:)();
}

uint64_t sub_26BFF0()
{
  return View.kerning(_:)();
}

uint64_t sub_26C000()
{
  return View.padding(_:_:)();
}

uint64_t sub_26C010()
{
  return View.toolbar<A>(content:)();
}

uint64_t sub_26C020()
{
  return View.toolbar(_:for:)();
}

uint64_t sub_26C030()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_26C040()
{
  return View.onAppear(perform:)();
}

uint64_t sub_26C050()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_26C060()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_26C070()
{
  return View.redacted(reason:)();
}

uint64_t sub_26C080()
{
  return View.clipShape<A>(_:style:)();
}

uint64_t sub_26C090()
{
  return View.lineLimit(_:)();
}

uint64_t sub_26C0A0()
{
  return View.menuStyle<A>(_:)();
}

uint64_t sub_26C0B0()
{
  return View.underline(_:pattern:color:)();
}

uint64_t sub_26C0C0()
{
  return Color.init(uiColor:)();
}

uint64_t sub_26C0D0()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_26C0E0()
{
  return static Color.== infix(_:_:)();
}

uint64_t sub_26C0F0()
{
  return static Color.red.getter();
}

uint64_t sub_26C100()
{
  return static Color.blue.getter();
}

uint64_t sub_26C110()
{
  return static Color.cyan.getter();
}

uint64_t sub_26C120()
{
  return static Color.gray.getter();
}

uint64_t sub_26C130()
{
  return static Color.mint.getter();
}

uint64_t sub_26C140()
{
  return static Color.teal.getter();
}

uint64_t sub_26C150()
{
  return static Color.black.getter();
}

uint64_t sub_26C160()
{
  return static Color.brown.getter();
}

uint64_t sub_26C170()
{
  return static Color.clear.getter();
}

uint64_t sub_26C180()
{
  return static Color.green.getter();
}

uint64_t _s7BooksUI14ColorConstantsV25vibrantPrimaryButtonLabel05SwiftB00C0Vvg_0()
{
  return static Color.white.getter();
}

uint64_t sub_26C1A0()
{
  return static Color.indigo.getter();
}

uint64_t sub_26C1B0()
{
  return static Color.orange.getter();
}

uint64_t sub_26C1C0()
{
  return Color.opacity(_:)();
}

uint64_t _s7BooksUI14ColorConstantsV14vibrantPrimary05SwiftB00C0Vvg_0()
{
  return static Color.primary.getter();
}

uint64_t sub_26C1E0()
{
  return Color.resolve(in:)();
}

uint64_t sub_26C1F0()
{
  return Color.Resolved.cgColor.getter();
}

uint64_t sub_26C200()
{
  return Color.gradient.getter();
}

uint64_t _s7BooksUI14ColorConstantsV19booksSecondaryLabel05SwiftB00C0Vvg_0()
{
  return static Color.secondary.getter();
}

uint64_t sub_26C220()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t sub_26C230()
{
  return Color.init(_:)();
}

uint64_t sub_26C240()
{
  return Image.init(uiImage:)();
}

uint64_t sub_26C250()
{
  return Image.init(systemName:)();
}

uint64_t sub_26C260()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_26C270()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_26C280()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_26C290()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_26C2A0()
{
  return Image.init(_:)();
}

uint64_t sub_26C2B0()
{
  return Label.init(title:icon:)();
}

uint64_t sub_26C2C0()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_26C2D0()
{
  return type metadata accessor for Label();
}

uint64_t sub_26C300()
{
  return Shape.layoutDirectionBehavior.getter();
}

uint64_t sub_26C320()
{
  return static Shape.role.getter();
}

uint64_t sub_26C340()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_26C350()
{
  return State.wrappedValue.getter();
}

uint64_t sub_26C360()
{
  return State.wrappedValue.setter();
}

uint64_t sub_26C370()
{
  return State.projectedValue.getter();
}

uint64_t sub_26C380()
{
  return type metadata accessor for State();
}

uint64_t sub_26C390()
{
  return Button.init(role:action:label:)();
}

uint64_t sub_26C3A0()
{
  return Button.init(action:label:)();
}

uint64_t sub_26C3B0()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t sub_26C3C0()
{
  return type metadata accessor for HStack();
}

uint64_t sub_26C3D0()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t sub_26C3E0()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t sub_26C3F0()
{
  return static Layout.layoutProperties.getter();
}

uint64_t sub_26C400()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t sub_26C410()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t sub_26C420()
{
  return Toggle.init(isOn:label:)();
}

uint64_t sub_26C430()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t sub_26C440()
{
  return type metadata accessor for VStack();
}

uint64_t sub_26C450()
{
  return ZStack.init(alignment:content:)();
}

uint64_t sub_26C460()
{
  return type metadata accessor for ZStack();
}

uint64_t sub_26C470()
{
  return AnyView.init<A>(_:)();
}

uint64_t sub_26C480()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_26C490()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_26C4A0()
{
  return Binding.subscript.getter();
}

uint64_t sub_26C4B0()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_26C4C0()
{
  return Binding.init(get:set:)();
}

uint64_t sub_26C4D0()
{
  return type metadata accessor for Binding();
}

uint64_t sub_26C4E0()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_26C4F0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_26C500()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_26C510()
{
  return type metadata accessor for ForEach();
}

uint64_t sub_26C520()
{
  return Gesture.onEnded(_:)();
}

uint64_t sub_26C530()
{
  return Gesture<>.onChanged(_:)();
}

uint64_t sub_26C540()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_26C550()
{
  return AnyShape.init<A>(_:)();
}

uint64_t sub_26C560()
{
  return Gradient.Stop.init(color:location:)();
}

uint64_t sub_26C570()
{
  return Gradient.init(stops:)();
}

uint64_t sub_26C580()
{
  return Gradient.init(colors:)();
}

uint64_t sub_26C590()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t sub_26C5A0()
{
  return type metadata accessor for GridItem();
}

uint64_t sub_26C5B0()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t sub_26C5C0()
{
  return static Material.thin.getter();
}

uint64_t sub_26C5D0()
{
  return static Material.regular.getter();
}

uint64_t sub_26C5E0()
{
  return static Material.ultraThin.getter();
}

uint64_t sub_26C5F0()
{
  return type metadata accessor for Material();
}

uint64_t sub_26C600()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_26C610()
{
  return static Alignment.topTrailing.getter();
}

uint64_t sub_26C620()
{
  return static Alignment.top.getter();
}

uint64_t sub_26C630()
{
  return static Alignment.bottom.getter();
}

uint64_t _s7BooksUI10PagedFramePAAE9alignment05SwiftB09AlignmentVvg_0()
{
  return static Alignment.center.getter();
}

uint64_t sub_26C650()
{
  return static Alignment.leading.getter();
}

uint64_t sub_26C660()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_26C670()
{
  return Animation.repeatForever(autoreverses:)();
}

uint64_t sub_26C680()
{
  return Animation.delay(_:)();
}

uint64_t sub_26C690()
{
  return Animation.speed(_:)();
}

uint64_t sub_26C6A0()
{
  return static Animation.easeIn(duration:)();
}

uint64_t sub_26C6B0()
{
  return static Animation.linear(duration:)();
}

uint64_t sub_26C6C0()
{
  return static Animation.linear.getter();
}

uint64_t sub_26C6D0()
{
  return static Animation.spring(response:dampingFraction:blendDuration:)();
}

uint64_t sub_26C6E0()
{
  return static Animation.default.getter();
}

uint64_t sub_26C6F0()
{
  return static Animation.easeOut.getter();
}

uint64_t sub_26C700()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_26C710()
{
  return LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_26C720()
{
  return type metadata accessor for LazyHGrid();
}

uint64_t sub_26C730()
{
  return Namespace.wrappedValue.getter();
}

uint64_t sub_26C740()
{
  return ShareLink.init<A>(item:subject:message:preview:label:)();
}

uint64_t sub_26C750()
{
  return ShareLink<>.init<>(item:subject:message:label:)();
}

uint64_t sub_26C760()
{
  return type metadata accessor for ShareLink();
}

uint64_t sub_26C770()
{
  return type metadata accessor for TupleView();
}

uint64_t sub_26C780()
{
  return TupleView.init(_:)();
}

uint64_t sub_26C790()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_26C7A0()
{
  return static UnitPoint.topTrailing.getter();
}

uint64_t sub_26C7B0()
{
  return static UnitPoint.bottomLeading.getter();
}

uint64_t sub_26C7C0()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_26C7D0()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_26C7E0()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_26C7F0()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_26C800()
{
  return static UnitPoint.trailing.getter();
}

uint64_t sub_26C810()
{
  return ReplaceSymbolEffect.downUp.getter();
}

uint64_t sub_26C820()
{
  return ReplaceSymbolEffect.byLayer.getter();
}

uint64_t sub_26C830()
{
  return ReplaceSymbolEffect.init()();
}

uint64_t sub_26C840()
{
  return type metadata accessor for ReplaceSymbolEffect();
}

uint64_t sub_26C850()
{
  return static SymbolEffectOptions.default.getter();
}

uint64_t sub_26C860()
{
  return type metadata accessor for SymbolEffectOptions();
}

uint64_t sub_26C870()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t sub_26C880()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_26C890()
{
  return type metadata accessor for CodeByKind();
}

uint64_t sub_26C8A0()
{
  return Dependency.init<A>(satisfying:with:)();
}

uint64_t sub_26C8B0()
{
  return type metadata accessor for Dependency();
}

uint64_t sub_26C8C0()
{
  return JSONObject.dictionary.getter();
}

uint64_t sub_26C8D0()
{
  return JSONObject.init(from:)();
}

uint64_t sub_26C8E0()
{
  return JSONObject.encode(to:)();
}

uint64_t sub_26C8F0()
{
  return type metadata accessor for JSONObject();
}

uint64_t sub_26C900()
{
  return ActionModel.instrumentingAppAnalyticsClickEvent(using:refId:dataStack:sizeProvider:clickData:additionalData:)();
}

uint64_t sub_26C910()
{
  return EmptyAction.init(actionMetrics:)();
}

uint64_t sub_26C920()
{
  return type metadata accessor for EmptyAction();
}

uint64_t sub_26C930()
{
  return dispatch thunk of IntentModel._canonicalized.getter();
}

uint64_t sub_26C940()
{
  return dispatch thunk of static IntentModel.kind.getter();
}

uint64_t sub_26C950()
{
  return dispatch thunk of IntentModel.kind.getter();
}

uint64_t sub_26C960()
{
  return IntentModel._canonicalIntentModel.getter();
}

uint64_t sub_26C970()
{
  return IntentModel._canonicalized.getter();
}

uint64_t sub_26C980()
{
  return IntentModel<>.kind.getter();
}

uint64_t sub_26C990()
{
  return static IntentModel<>.kind.getter();
}

uint64_t sub_26C9A0()
{
  return JSONContext.addingValue<A>(_:forProperty:)();
}

uint64_t sub_26C9B0()
{
  return static JSONContext.Property<A>.actionTypes.getter();
}

uint64_t sub_26C9C0()
{
  return static JSONContext.Property<A>.intentTypes.getter();
}

uint64_t sub_26C9D0()
{
  return static JSONContext.Property<A>.actionKindTable.getter();
}

uint64_t sub_26C9E0()
{
  return static JSONContext.Property<A>.initFailureObserver.getter();
}

uint64_t sub_26C9F0()
{
  return JSONContext.Property.init(_:)();
}

uint64_t sub_26CA00()
{
  return JSONContext.init(userInfo:)();
}

uint64_t sub_26CA10()
{
  return type metadata accessor for JSONContext();
}

uint64_t sub_26CA20()
{
  return JSONContext.subscript.getter();
}

uint64_t sub_26CA30()
{
  return static MetricsData.makeMetricsImpressionsData(fields:configuration:impressionsEventVersion:)();
}

uint64_t sub_26CA40()
{
  return static MetricsData.makeMetricsPageData(fields:timingMetrics:configuration:)();
}

uint64_t sub_26CA50()
{
  return static MetricsData.makeMetricsClickData(targetID:targetType:fields:configuration:)();
}

uint64_t sub_26CA60()
{
  return MetricsData.Configuration.init(defaultTopic:defaultIncludingFields:defaultExcludingFields:shouldFlush:)();
}

uint64_t sub_26CA70()
{
  return type metadata accessor for MetricsData.Configuration();
}

uint64_t sub_26CA80()
{
  return MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)();
}

uint64_t sub_26CA90()
{
  return MetricsData.fields.getter();
}

uint64_t sub_26CAA0()
{
  return type metadata accessor for MetricsData();
}

uint64_t sub_26CAB0()
{
  return PageMetrics.Instruction.init(data:invocationPoints:)();
}

uint64_t sub_26CAC0()
{
  return type metadata accessor for PageMetrics.Instruction();
}

uint64_t sub_26CAD0()
{
  return PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
}

uint64_t sub_26CAE0()
{
  return static PageMetrics.InvocationPoint.appExit.getter();
}

uint64_t sub_26CAF0()
{
  return static PageMetrics.InvocationPoint.pageExit.getter();
}

uint64_t sub_26CB00()
{
  return PageMetrics.InvocationPoint.init(rawValue:)();
}

uint64_t sub_26CB10()
{
  return static PageMetrics.InvocationPoint.pageEnter.getter();
}

uint64_t sub_26CB20()
{
  return type metadata accessor for PageMetrics.InvocationPoint();
}

uint64_t sub_26CB30()
{
  return type metadata accessor for StaticIntent();
}

uint64_t sub_26CB40()
{
  return StaticIntent.init(_:)();
}

uint64_t sub_26CB50()
{
  return static ActionMetrics.notInstrumented.getter();
}

uint64_t sub_26CB60()
{
  return ActionMetrics.init(data:custom:)();
}

uint64_t sub_26CB70()
{
  return ActionMetrics.data.getter();
}

uint64_t sub_26CB80()
{
  return type metadata accessor for ActionMetrics();
}

uint64_t sub_26CB90()
{
  return type metadata accessor for ActionOutcome();
}

uint64_t sub_26CBA0()
{
  return ClosureAction.init(actionMetrics:body:)();
}

uint64_t sub_26CBB0()
{
  return ClosureAction.actionMetrics.getter();
}

uint64_t sub_26CBC0()
{
  return type metadata accessor for ClosureAction();
}

uint64_t sub_26CBD0()
{
  return type metadata accessor for IntentOutcome();
}

uint64_t sub_26CBE0()
{
  return type metadata accessor for AnyActionTypes();
}

uint64_t sub_26CBF0()
{
  return AnyActionTypes.init(_:)();
}

uint64_t sub_26CC00()
{
  return type metadata accessor for AnyIntentTypes();
}

uint64_t sub_26CC10()
{
  return AnyIntentTypes.init(_:)();
}

uint64_t sub_26CC20()
{
  return CompoundAction.subactions.getter();
}

uint64_t sub_26CC30()
{
  return CompoundAction.init(actionMetrics:subactions:)();
}

uint64_t sub_26CC40()
{
  return type metadata accessor for CompoundAction();
}

uint64_t sub_26CC50()
{
  return JSONDictionary.bridgedPrimitiveValues<A, B>()();
}

uint64_t sub_26CC60()
{
  return type metadata accessor for JSONDictionary();
}

uint64_t sub_26CC80()
{
  return BaseObjectGraph.inject<A>(_:)();
}

uint64_t sub_26CC90()
{
  return dispatch thunk of BaseObjectGraph.performAsCurrent<A>(_:)();
}

uint64_t sub_26CCA0()
{
  return dispatch thunk of BaseObjectGraph.adding(dependency:)();
}

uint64_t sub_26CCB0()
{
  return type metadata accessor for BaseObjectGraph();
}

uint64_t sub_26CCC0()
{
  return ActionDispatcher.add(contentsOf:)();
}

uint64_t sub_26CCD0()
{
  return ActionDispatcher.add<A>(_:)();
}

uint64_t sub_26CCE0()
{
  return ActionDispatcher.next.setter();
}

uint64_t sub_26CD00()
{
  return ActionDispatcher.init()();
}

uint64_t sub_26CD20()
{
  return type metadata accessor for LocalizerContext();
}

uint64_t sub_26CD30()
{
  return static MetricsEventType.pageRender.getter();
}

uint64_t sub_26CD40()
{
  return static MetricsEventType.impressions.getter();
}

uint64_t sub_26CD50()
{
  return static MetricsEventType.page.getter();
}

uint64_t sub_26CD60()
{
  return static MetricsEventType.click.getter();
}

uint64_t sub_26CD70()
{
  return static MetricsEventType.media.getter();
}

uint64_t sub_26CD80()
{
  return static MetricsEventType.dialog.getter();
}

uint64_t sub_26CD90()
{
  return static MetricsEventType.search.getter();
}

uint64_t sub_26CDA0()
{
  return MetricsEventType.rawValue.getter();
}

uint64_t sub_26CDB0()
{
  return type metadata accessor for MetricsEventType();
}

uint64_t sub_26CDC0()
{
  return ScalarDictionary.init()();
}

uint64_t sub_26CDD0()
{
  return type metadata accessor for ScalarDictionary();
}

uint64_t sub_26CDE0()
{
  return dispatch thunk of ExpressibleByJSON.init(deserializing:using:)();
}

uint64_t sub_26CDF0()
{
  return ImpressionMetrics.ID.index.setter();
}

uint64_t sub_26CE00()
{
  return ImpressionMetrics.ID.init(parent:element:index:)();
}

uint64_t sub_26CE10()
{
  return type metadata accessor for ImpressionMetrics.ID();
}

uint64_t sub_26CE20()
{
  return ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)();
}

uint64_t sub_26CE30()
{
  return ImpressionMetrics.id.modify();
}

uint64_t sub_26CE40()
{
  return ImpressionMetrics.fields.modify();
}

uint64_t sub_26CE50()
{
  return type metadata accessor for ImpressionMetrics();
}

uint64_t sub_26CE60()
{
  return SyncTaskScheduler.init()();
}

uint64_t sub_26CE70()
{
  return type metadata accessor for SyncTaskScheduler();
}

uint64_t sub_26CE80()
{
  return static AutomationSemantics.productPage(elementName:id:parentId:)();
}

uint64_t sub_26CE90()
{
  return AutomationSemantics.attribute(key:value:)();
}

uint64_t sub_26CEA0()
{
  return type metadata accessor for AutomationSemantics();
}

uint64_t sub_26CEB0()
{
  return dispatch thunk of MetricsFieldsBuilder.addValue(_:forField:)();
}

uint64_t sub_26CEC0()
{
  return MetricsFieldsBuilder.subscript.getter();
}

uint64_t sub_26CED0()
{
  return static MetricsFieldsContext.Property<A>.pageFields.getter();
}

uint64_t sub_26CEE0()
{
  return MetricsFieldsContext.Property.init(_:)();
}

uint64_t sub_26CEF0()
{
  return MetricsFieldsContext.addValue<A>(_:forProperty:)();
}

uint64_t sub_26CF00()
{
  return MetricsFieldsContext.subscript.getter();
}

uint64_t sub_26CF10()
{
  return MetricsFieldsContext.subscript.getter();
}

uint64_t sub_26CF20()
{
  return static ImpressionsCalculator.Configuration.half.getter();
}

uint64_t sub_26CF30()
{
  return type metadata accessor for ImpressionsCalculator.Configuration();
}

uint64_t sub_26CF40()
{
  return type metadata accessor for IntentDispatcherError();
}

uint64_t sub_26CF50()
{
  return LocalizerDefaultValue.init(stringLiteral:)();
}

uint64_t sub_26CF60()
{
  return type metadata accessor for LocalizerDefaultValue();
}

uint64_t sub_26CF70()
{
  return MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)();
}

uint64_t sub_26CF80()
{
  return MetricsFieldsProvider.addMetricsFields(into:using:)();
}

uint64_t sub_26CF90()
{
  return MetricsFieldsProvider.category.getter();
}

uint64_t _s9JetEngine22NativeIntentDispatcherV7BooksUIE014booksUIBuiltInD15ImplementationsACvgZ_0()
{
  return NativeIntentDispatcher.init()();
}

uint64_t sub_26CFB0()
{
  return type metadata accessor for NativeIntentDispatcher();
}

uint64_t sub_26CFC0()
{
  return dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)();
}

uint64_t sub_26CFD0()
{
  return type metadata accessor for LocalizerLookupStrategy();
}

uint64_t sub_26CFE0()
{
  return actionTableFromUserInfo(_:)();
}

JSValue sub_26CFF0(JSContext in)
{
  return CustomJSValueConvertible._jsValue(in:)(in);
}

JSValue sub_26D000(JSContext in)
{
  return CustomJSValueConvertible.makeValue(in:)(in);
}

uint64_t sub_26D010()
{
  return CustomJSValueConvertible<>.jsRepresentation(in:)();
}

uint64_t sub_26D020()
{
  return _defaultActionKindLookup.getter();
}

uint64_t sub_26D030()
{
  return EmptyActionImplementation.init()();
}

uint64_t _s7BooksUI017_IntentKindTable_A16ReturningUnknownO12_defaultTypeypXpSgvgZ_0()
{
  return static _IntentKindTable_Returning._defaultType.getter();
}

uint64_t _s7BooksUI017_IntentKindTable_A16ReturningUnknownO6_tableSDySSypXpGvgZ_0()
{
  return static _IntentKindTable_Returning._table.getter();
}

uint64_t sub_26D060()
{
  return static _IntentKindTable_Returning._decode(_:from:)();
}

uint64_t sub_26D070()
{
  return ClosureActionImplementation.init(scheduler:)();
}

uint64_t sub_26D080()
{
  return JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:connectionStartTime:connectionEndTime:domainLookupStartTime:domainLookupEndTime:fetchStartTime:secureConnectionStartTime:connectionReused:requestMessageSize:responseMessageSize:statusCode:edgeNodeCacheStatus:environmentDataCenter:isLowDataMode:appleTimingApp:)();
}

uint64_t sub_26D090()
{
  return type metadata accessor for JSNetworkPerformanceMetrics();
}

uint64_t sub_26D0A0()
{
  return CompoundActionImplementation.init()();
}

uint64_t sub_26D0B0()
{
  return static MetricsFieldInclusionRequest.pageFields.getter();
}

uint64_t sub_26D0C0()
{
  return static MetricsFieldInclusionRequest.impressions.getter();
}

uint64_t sub_26D0D0()
{
  return static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
}

uint64_t sub_26D0E0()
{
  return static MetricsFieldInclusionRequest.dsId.getter();
}

uint64_t sub_26D0F0()
{
  return MetricsFieldInclusionRequest.init(rawValue:)();
}

uint64_t sub_26D100()
{
  return type metadata accessor for MetricsFieldInclusionRequest();
}

uint64_t sub_26D110()
{
  return Models.FlowBackAction.init(actionMetrics:dismissal:)();
}

uint64_t sub_26D120()
{
  return static Models.FlowBackAction.Dismissal.sheetDismiss.getter();
}

uint64_t sub_26D130()
{
  return static Models.FlowBackAction.Dismissal.stackPop.getter();
}

uint64_t sub_26D140()
{
  return type metadata accessor for Models.FlowBackAction();
}

uint64_t sub_26D150()
{
  return inject<A, B>(_:from:)();
}

uint64_t sub_26D160()
{
  return Promise.reject(_:)();
}

uint64_t sub_26D170()
{
  return Promise.resolve(_:)();
}

uint64_t sub_26D180()
{
  return Promise.__allocating_init()();
}

uint64_t sub_26D190()
{
  return type metadata accessor for JSONError();
}

uint64_t sub_26D1A0()
{
  return dispatch thunk of Localizer.formattedCount(_:)();
}

uint64_t sub_26D1B0()
{
  return dispatch thunk of Localizer.locale.getter();
}

uint64_t sub_26D1C0()
{
  return dispatch thunk of Localizer.string(forKey:with:defaultValue:using:)();
}

uint64_t sub_26D1D0()
{
  return dispatch thunk of Localizer.string(withCount:forKey:with:defaultValue:using:)();
}

uint64_t sub_26D1E0()
{
  return dispatch thunk of Localizer.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:)();
}

uint64_t sub_26D1F0()
{
  return Localizer.formattedDate(format:date:)();
}

uint64_t sub_26D200()
{
  return Localizer.string(forKey:defaultValue:)();
}

uint64_t sub_26D210()
{
  return Localizer.string(forKey:with:defaultValue:)();
}

uint64_t sub_26D220()
{
  return dispatch thunk of BinaryFloatingPoint.init<A>(_:)();
}

NSDictionary sub_26D230()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_26D240()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_26D250()
{
  return Dictionary.description.getter();
}

uint64_t sub_26D260()
{
  return Dictionary<>.init(_partiallyFrom:)();
}

uint64_t sub_26D270()
{
  return Dictionary<>.init(jsonContext:)();
}

uint64_t sub_26D280()
{
  return Dictionary<>.subscript.getter();
}

uint64_t sub_26D290()
{
  return Dictionary.mapValues<A>(_:)();
}

uint64_t sub_26D2A0()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_26D2B0()
{
  return Dictionary<>.init(from:)();
}

uint64_t sub_26D2C0()
{
  return dispatch thunk of static FloatingPoint./= infix(_:_:)();
}

uint64_t sub_26D2D0()
{
  return dispatch thunk of FloatingPoint.round(_:)();
}

uint64_t sub_26D2E0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_26D2F0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_26D300()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_26D310()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_26D320()
{
  return Comparable.clamped(_:)();
}

uint64_t sub_26D330()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_26D340()
{
  return dispatch thunk of static Comparable.>= infix(_:_:)();
}

uint64_t sub_26D350()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_26D360()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_26D370()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_26D380()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_26D390(Swift::String a1)
{
}

void sub_26D3A0(Swift::String a1)
{
}

uint64_t sub_26D3B0()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_26D3C0()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_26D3D0()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_26D3E0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_26D3F0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_26D400()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_26D410()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_26D420()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_26D430()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_26D440()
{
  return String.init(format:_:)();
}

uint64_t sub_26D450()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_26D460()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_26D470()
{
  return String.init<A>(describing:)();
}

uint64_t sub_26D480()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_26D490()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_26D4A0()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_26D4B0()
{
  return String.hash(into:)();
}

uint64_t sub_26D4C0()
{
  return String.count.getter();
}

uint64_t sub_26D4D0()
{
  return String.index(_:offsetBy:)();
}

void sub_26D4E0(Swift::String a1)
{
}

Swift::Int sub_26D4F0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_26D500()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_26D510()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_26D530()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_26D540()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_26D550(Swift::String repeating, Swift::Int count)
{
  return String.init(repeating:count:)(repeating, count)._countAndFlagsBits;
}

uint64_t sub_26D560()
{
  return String.init<A>(_:)();
}

uint64_t sub_26D570()
{
  return String.subscript.getter();
}

uint64_t sub_26D580()
{
  return Sequence.first(where:)();
}

uint64_t sub_26D590()
{
  return RawRepresentable<>.isEnabled.getter();
}

uint64_t sub_26D5A0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_26D5E0()
{
  return RawRepresentable<>.init(from:)();
}

NSArray sub_26D5F0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_26D600()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_26D610()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_26D620()
{
  return Array.description.getter();
}

uint64_t sub_26D630()
{
  return specialized Array._endMutation()();
}

uint64_t sub_26D640()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_26D650()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_26D660()
{
  return Array.count.getter();
}

uint64_t sub_26D670()
{
  return Array<A>.init(_partiallyFrom:)();
}

uint64_t sub_26D680()
{
  return type metadata accessor for Array();
}

uint64_t sub_26D690()
{
  return Array<A>.init(from:)();
}

NSNumber sub_26D6A0()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_26D6B0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_26D6C0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_26D6D0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_26D6E0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_26D6F0()
{
  return type metadata accessor for TaskPriority();
}

NSNumber sub_26D700()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_26D710()
{
  return Double.description.getter();
}

uint64_t sub_26D720()
{
  return Double._roundSlowPath(_:)();
}

uint64_t sub_26D730()
{
  return dispatch thunk of Decodable.init(from:)();
}

uint64_t sub_26D740()
{
  return Set.init(minimumCapacity:)();
}

NSNumber sub_26D750()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_26D760()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t sub_26D770()
{
  return dispatch thunk of static Numeric.*= infix(_:_:)();
}

uint64_t sub_26D780()
{
  return RandomAccessCollection.indexed.getter();
}

uint64_t sub_26D790()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_26D7A0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_26D7B0()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_26D7C0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_26D7D0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_26D7E0()
{
  return Collection.first.getter();
}

uint64_t sub_26D7F0()
{
  return dispatch thunk of Collection.subscript.read();
}

double sub_26D800(UIUserInterfaceLayoutDirection a1)
{
  *(void *)&double result = (unint64_t)UIEdgeInsets.applyingLayoutDirection(_:)(a1);
  return result;
}

double sub_26D810()
{
  *(void *)&double result = (unint64_t)UIEdgeInsets.negated()();
  return result;
}

uint64_t sub_26D820()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_26D830()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_26D840()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_26D850()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_26D860()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_26D870()
{
  return NSItemProvider.register<A>(_:)();
}

uint64_t sub_26D880()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_26D890()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_26D8A0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_26D8B0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_26D8C0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

void sub_26D8D0()
{
}

Swift::Int sub_26D8E0()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_26D8F0()
{
  return CGSize.aspectRatio.getter();
}

uint64_t sub_26D900()
{
  return CGSize.description.getter();
}

uint64_t sub_26D910()
{
  return CGSize.scaled(_:)();
}

uint64_t sub_26D920()
{
  return CGSize.scaledToFit(in:times:horizontally:)();
}

uint64_t sub_26D930()
{
  return UIColor.init(_:)();
}

NSNumber sub_26D940(Swift::Double floatLiteral)
{
  return NSNumber.init(floatLiteral:)(floatLiteral);
}

void sub_26D950(NSDecimalNumber *retstr@<X8>)
{
}

uint64_t sub_26D960()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_26D970()
{
  return Optional<A>.init(_partiallyFrom:)();
}

uint64_t sub_26D980()
{
  return type metadata accessor for Optional();
}

uint64_t sub_26D990()
{
  return Optional<A>.init(from:)();
}

uint64_t sub_26D9A0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_26D9B0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_26D9C0()
{
  return StringProtocol.uppercased(with:)();
}

uint64_t sub_26D9D0()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_26D9E0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_26D9F0()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_26DA10()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_26DA20()
{
  return _HashTable.previousHole(before:)();
}

Swift::Int sub_26DA30(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_26DA40()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_26DA50()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_26DA60()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_26DA70()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_26DA80()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_26DA90(Swift::Int a1)
{
}

uint64_t sub_26DAA0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_26DAB0()
{
  return dispatch thunk of Identifiable.id.getter();
}

uint64_t sub_26DAC0()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_26DAD0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_26DAE0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_26DAF0()
{
  return type metadata accessor for CollectionOfOne();
}

void sub_26DB00(Swift::Int a1)
{
}

uint64_t sub_26DB10()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_26DB20()
{
  return ContiguousArray.init()();
}

uint64_t sub_26DB30()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_26DB40()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t sub_26DB50()
{
  return ContinuousClock.init()();
}

uint64_t sub_26DB60()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t sub_26DB70()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t sub_26DB80()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_26DB90()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_26DBA0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_26DBB0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_26DBC0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_26DBD0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_26DBE0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_26DBF0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_26DC00(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_26DC10()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_26DC20()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_26DC30()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_26DC40()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_26DC50()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_26DC60()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_26DC70()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_26DC80()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_26DC90()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_26DCA0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_26DCB0()
{
  return KeyedDecodingContainer.contains(_:)();
}

uint64_t sub_26DCC0()
{
  return type metadata accessor for KeyedDecodingContainer();
}

uint64_t sub_26DCD0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_26DCE0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_26DCF0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_26DD00()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_26DD10()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_26DD20()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_26DD30()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_26DD40(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_26DD50()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_26DD60()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_26DD70()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_26DD80()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_26DD90()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_26DDA0()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_26DDB0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_26DDC0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_26DDD0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
}

uint64_t sub_26DDE0()
{
  return dispatch thunk of SingleValueDecodingContainer.decodeNil()();
}

uint64_t sub_26DDF0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
}

uint64_t sub_26DE00()
{
  return dispatch thunk of SingleValueEncodingContainer.encodeNil()();
}

uint64_t sub_26DE10()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_26DE30()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_26DE40()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_26DE50()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_26DE60()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_26DE70()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t sub_26DE90()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_26DEA0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_26DEB0()
{
  return Error._code.getter();
}

uint64_t sub_26DEC0()
{
  return Error._domain.getter();
}

uint64_t sub_26DED0()
{
  return Error._userInfo.getter();
}

uint64_t sub_26DEF0()
{
  return Hasher.init(_seed:)();
}

void sub_26DF00(Swift::UInt a1)
{
}

void sub_26DF10(Swift::UInt64 a1)
{
}

Swift::Int sub_26DF20()
{
  return Hasher._finalize()();
}

uint64_t sub_26DF40()
{
  return static UInt64._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_26DF50()
{
  return static UInt64._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_26DF60()
{
  return static UInt64._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_26DF80()
{
  return dispatch thunk of Decoder.codingPath.getter();
}

uint64_t sub_26DF90()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_26DFA0()
{
  return dispatch thunk of Decoder.userInfo.getter();
}

uint64_t sub_26DFB0()
{
  return Decoder.withUserInfo(_:)();
}

uint64_t sub_26DFC0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_26DFD0()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_26DFE0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_26DFF0()
{
  return static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
}

uint64_t sub_26E000()
{
  return type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
}

uint64_t sub_26E010()
{
  return static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
}

uint64_t sub_26E020()
{
  return type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
}

uint64_t sub_26E030()
{
  return static Duration.UnitsFormatStyle.Unit.hours.getter();
}

uint64_t sub_26E040()
{
  return static Duration.UnitsFormatStyle.Unit.minutes.getter();
}

uint64_t sub_26E050()
{
  return type metadata accessor for Duration.UnitsFormatStyle.Unit();
}

uint64_t sub_26E060()
{
  return static Duration.UnitsFormatStyle.UnitWidth.wide.getter();
}

uint64_t sub_26E070()
{
  return static Duration.UnitsFormatStyle.UnitWidth.narrow.getter();
}

uint64_t sub_26E080()
{
  return type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
}

uint64_t sub_26E090()
{
  return type metadata accessor for Duration.UnitsFormatStyle();
}

uint64_t sub_26E0A0()
{
  return Duration.formatted<A>(_:)();
}

uint64_t sub_26E0B0()
{
  return static Duration.seconds(_:)();
}

uint64_t sub_26E0E0()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t sub_26E0F0()
{
  return _typeName(_:qualified:)();
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CFArrayRef CTFontCopySupportedLanguages(CTFontRef font)
{
  return _CTFontCopySupportedLanguages(font);
}

CTFontRef CTFontCreateWithFontDescriptor(CTFontDescriptorRef descriptor, CGFloat size, const CGAffineTransform *matrix)
{
  return _CTFontCreateWithFontDescriptor(descriptor, size, matrix);
}

CTFontDescriptorRef CTFontDescriptorCreateWithAttributes(CFDictionaryRef attributes)
{
  return _CTFontDescriptorCreateWithAttributes(attributes);
}

uint64_t CTFontDescriptorGetTextStyleSize()
{
  return _CTFontDescriptorGetTextStyleSize();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void free(void *a1)
{
}

htmlParserCtxtPtr htmlCreateMemoryParserCtxt(const char *buffer, int size)
{
  return _htmlCreateMemoryParserCtxt(buffer, size);
}

int htmlCtxtUseOptions(htmlParserCtxtPtr ctxt, int options)
{
  return _htmlCtxtUseOptions(ctxt, options);
}

int htmlParseDocument(htmlParserCtxtPtr ctxt)
{
  return _htmlParseDocument(ctxt);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_destroyWeak(id *location)
{
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return _swift_getExtendedExistentialTypeMetadata();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

xmlErrorPtr xmlCtxtGetLastError(void *ctx)
{
  return _xmlCtxtGetLastError(ctx);
}

void xmlFreeDoc(xmlDocPtr cur)
{
}

void xmlFreeParserCtxt(xmlParserCtxtPtr ctxt)
{
}

void xmlInitParser(void)
{
}

void xmlStopParser(xmlParserCtxtPtr ctxt)
{
}

int xmlStrEqual(const xmlChar *str1, const xmlChar *str2)
{
  return _xmlStrEqual(str1, str2);
}

int xmlStrlen(const xmlChar *str)
{
  return _xmlStrlen(str);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend__parserContext(void *a1, const char *a2, ...)
{
  return _[a1 _parserContext];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return [a1 doesNotRecognizeSelector:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithBytes:length:encoding:];
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 initWithUTF8String:];
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 lengthOfBytesUsingEncoding:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_parser_didEndElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parser:didEndElement:");
}

id objc_msgSend_parser_didFindCharacters_(void *a1, const char *a2, ...)
{
  return [a1 parser:didFindCharacters:];
}

id objc_msgSend_parser_didStartElement_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parser:didStartElement:attributes:");
}

id objc_msgSend_parser_parseErrorOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parser:parseErrorOccurred:");
}

id objc_msgSend_parserDidEndDocument_(void *a1, const char *a2, ...)
{
  return [a1 parserDidEndDocument:];
}

id objc_msgSend_parserDidFindNewline_(void *a1, const char *a2, ...)
{
  return [a1 parserDidFindNewline:];
}

id objc_msgSend_parserDidStartDocument_(void *a1, const char *a2, ...)
{
  return [a1 parserDidStartDocument:];
}

id objc_msgSend_reportErrorWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 reportErrorWithCode:userInfo:];
}

id objc_msgSend_reportParseError_(void *a1, const char *a2, ...)
{
  return [a1 reportParseError:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_set_parserContext_(void *a1, const char *a2, ...)
{
  return [a1 set_parserContext:];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}